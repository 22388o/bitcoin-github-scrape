[
  {
    "sha": "a60ac1cc7d5da4c4d2a09b61b2d02e1a16f1de2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjBhYzFjYzdkNWRhNGM0ZDJhMDliNjFiMmQwMmUxYTE2ZjFkZTJl",
    "commit": {
      "author": {
        "name": "blockcash",
        "email": "blockcashcoin@gmail.com",
        "date": "2017-12-25T12:23:24Z"
      },
      "committer": {
        "name": "blockcash",
        "email": "blockcashcoin@gmail.com",
        "date": "2017-12-25T12:23:24Z"
      },
      "message": "update",
      "tree": {
        "sha": "a9890922a65f801849737061d5a959864c68bd2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9890922a65f801849737061d5a959864c68bd2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a60ac1cc7d5da4c4d2a09b61b2d02e1a16f1de2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a60ac1cc7d5da4c4d2a09b61b2d02e1a16f1de2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a60ac1cc7d5da4c4d2a09b61b2d02e1a16f1de2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a60ac1cc7d5da4c4d2a09b61b2d02e1a16f1de2e/comments",
    "author": {
      "login": "blockcash",
      "id": 34801682,
      "node_id": "MDQ6VXNlcjM0ODAxNjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34801682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blockcash",
      "html_url": "https://github.com/blockcash",
      "followers_url": "https://api.github.com/users/blockcash/followers",
      "following_url": "https://api.github.com/users/blockcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/blockcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blockcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blockcash/subscriptions",
      "organizations_url": "https://api.github.com/users/blockcash/orgs",
      "repos_url": "https://api.github.com/users/blockcash/repos",
      "events_url": "https://api.github.com/users/blockcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blockcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "blockcash",
      "id": 34801682,
      "node_id": "MDQ6VXNlcjM0ODAxNjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34801682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blockcash",
      "html_url": "https://github.com/blockcash",
      "followers_url": "https://api.github.com/users/blockcash/followers",
      "following_url": "https://api.github.com/users/blockcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/blockcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blockcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blockcash/subscriptions",
      "organizations_url": "https://api.github.com/users/blockcash/orgs",
      "repos_url": "https://api.github.com/users/blockcash/repos",
      "events_url": "https://api.github.com/users/blockcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blockcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      }
    ],
    "stats": {
      "total": 8864,
      "additions": 0,
      "deletions": 8864
    },
    "files": [
      {
        "sha": "d92666da7260c030a8f5c189d8434646fb0b9724",
        "filename": "doc/release-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,121 +0,0 @@\n-(note: this is a temporary file, to be added-to by anybody, and moved to\n-release-notes at release time)\n-\n-Bitcoin Core version *version* is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-*version*/>\n-\n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at GitHub:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-How to Upgrade\n-==============\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n-or `bitcoind`/`bitcoin-qt` (on Linux).\n-\n-The first time you run version 0.15.0, your chainstate database will be converted to a\n-new format, which will take anywhere from a few minutes to half an hour,\n-depending on the speed of your machine.\n-\n-Note that the block database format also changed in version 0.8.0 and there is no\n-automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n-directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n-However, as usual, old wallet versions are still supported.\n-\n-Downgrading warning\n--------------------\n-\n-The chainstate database for this release is not compatible with previous\n-releases, so if you run 0.15 and then decide to switch back to any\n-older version, you will need to run the old release with the `-reindex-chainstate`\n-option to rebuild the chainstate data structures in the old format.\n-\n-If your node has pruning enabled, this will entail re-downloading and\n-processing the entire blockchain.\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-frequently tested on them.\n-\n-Notable changes\n-===============\n-\n-GCC 4.8.x\n---------------\n-The minimum version of GCC required to compile Bitcoin Core is now 4.8. No effort will be\n-made to support older versions of GCC. See discussion in issue #11732 for more information.\n-\n-HD-wallets by default\n----------------------\n-Due to a backward-incompatible change in the wallet database, wallets created\n-with version 0.16.0 will be rejected by previous versions. Also, version 0.16.0\n-will only create hierarchical deterministic (HD) wallets.\n-\n-Replace-By-Fee by default in GUI\n---------------------------------\n-The send screen now uses BIP-125 RBF by default, regardless of `-walletrbf`.\n-There is a checkbox to mark the transaction as final.\n-\n-The RPC default remains unchanged: to use RBF, launch with `-walletrbf=1` or\n-use the `replaceable` argument for individual transactions.\n-\n-Custom wallet directories\n----------------------\n-The ability to specify a directory other than the default data directory in which to store\n-wallets has been added. An existing directory can be specified using the `-walletdir=<dir>`\n-argument. Wallets loaded via `-wallet` arguments must be in this wallet directory. Care should be taken\n-when choosing a wallet directory location, as if it becomes unavailable during operation,\n-funds may be lost.\n-\n-Default wallet directory change\n---------------------------\n-On new installations (if the data directory doesn't exist), wallets will now be stored in a\n-new `wallets/` subdirectory inside the data directory. If this `wallets/` subdirectory\n-doesn't exist (i.e. on existing nodes), the current datadir root is used instead, as it was.\n-\n-Low-level RPC changes\n-----------------------\n-- The deprecated RPC `getinfo` was removed. It is recommended that the more specific RPCs are used:\n-  * `getblockchaininfo`\n-  * `getnetworkinfo`\n-  * `getwalletinfo`\n-  * `getmininginfo`\n-- The wallet RPC `getreceivedbyaddress` will return an error if called with an address not in the wallet.\n-\n-Changed command-line options\n------------------------------\n-- `-debuglogfile=<file>` can be used to specify an alternative debug logging file.\n-\n-Renamed script for creating JSON-RPC credentials\n------------------------------\n-The `share/rpcuser/rpcuser.py` script was renamed to `share/rpcauth/rpcauth.py`. This script can be\n-used to create `rpcauth` credentials for a JSON-RPC user.\n-\n-\n-- `dumpwallet` now includes hex-encoded scripts from the wallet in the dumpfile, and\n-  `importwallet` now imports these scripts, but corresponding addresses may not be added\n-  correctly or a manual rescan may be required to find relevant transactions.\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 762,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,762 +0,0 @@\n-Bitcoin Core version 0.10.0 is now available from:\n-\n-  https://bitcoin.org/bin/0.10.0/\n-\n-This is a new major version release, bringing both new features and\n-bug fixes.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrading warning\n----------------------\n-\n-Because release 0.10.0 makes use of headers-first synchronization and parallel\n-block download (see further), the block files and databases are not\n-backwards-compatible with older versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-\n-Notable changes\n-===============\n-\n-Faster synchronization\n-----------------------\n-\n-Bitcoin Core now uses 'headers-first synchronization'. This means that we first\n-ask peers for block headers (a total of 27 megabytes, as of December 2014) and\n-validate those. In a second stage, when the headers have been discovered, we\n-download the blocks. However, as we already know about the whole chain in\n-advance, the blocks can be downloaded in parallel from all available peers.\n-\n-In practice, this means a much faster and more robust synchronization. On\n-recent hardware with a decent network link, it can be as little as 3 hours\n-for an initial full synchronization. You may notice a slower progress in the\n-very first few minutes, when headers are still being fetched and verified, but\n-it should gain speed afterwards.\n-\n-A few RPCs were added/updated as a result of this:\n-- `getblockchaininfo` now returns the number of validated headers in addition to\n-the number of validated blocks.\n-- `getpeerinfo` lists both the number of blocks and headers we know we have in\n-common with each peer. While synchronizing, the heights of the blocks that we\n-have requested from peers (but haven't received yet) are also listed as\n-'inflight'.\n-- A new RPC `getchaintips` lists all known branches of the block chain,\n-including those we only have headers for.\n-\n-Transaction fee changes\n------------------------\n-\n-This release automatically estimates how high a transaction fee (or how\n-high a priority) transactions require to be confirmed quickly. The default\n-settings will create transactions that confirm quickly; see the new\n-'txconfirmtarget' setting to control the tradeoff between fees and\n-confirmation times. Fees are added by default unless the 'sendfreetransactions' \n-setting is enabled.\n-\n-Prior releases used hard-coded fees (and priorities), and would\n-sometimes create transactions that took a very long time to confirm.\n-\n-Statistics used to estimate fees and priorities are saved in the\n-data directory in the `fee_estimates.dat` file just before\n-program shutdown, and are read in at startup.\n-\n-New command line options for transaction fee changes:\n-- `-txconfirmtarget=n` : create transactions that have enough fees (or priority)\n-so they are likely to begin confirmation within n blocks (default: 1). This setting\n-is over-ridden by the -paytxfee option.\n-- `-sendfreetransactions` : Send transactions as zero-fee transactions if possible \n-(default: 0)\n-\n-New RPC commands for fee estimation:\n-- `estimatefee nblocks` : Returns approximate fee-per-1,000-bytes needed for\n-a transaction to begin confirmation within nblocks. Returns -1 if not enough\n-transactions have been observed to compute a good estimate.\n-- `estimatepriority nblocks` : Returns approximate priority needed for\n-a zero-fee transaction to begin confirmation within nblocks. Returns -1 if not\n-enough free transactions have been observed to compute a good\n-estimate.\n-\n-RPC access control changes\n---------------------------\n-\n-Subnet matching for the purpose of access control is now done\n-by matching the binary network address, instead of with string wildcard matching.\n-For the user this means that `-rpcallowip` takes a subnet specification, which can be\n-\n-- a single IP address (e.g. `1.2.3.4` or `fe80::0012:3456:789a:bcde`)\n-- a network/CIDR (e.g. `1.2.3.0/24` or `fe80::0000/64`)\n-- a network/netmask (e.g. `1.2.3.4/255.255.255.0` or `fe80::0012:3456:789a:bcde/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff`)\n-\n-An arbitrary number of `-rpcallow` arguments can be given. An incoming connection will be accepted if its origin address\n-matches one of them.\n-\n-For example:\n-\n-| 0.9.x and before                           | 0.10.x                                |\n-|--------------------------------------------|---------------------------------------|\n-| `-rpcallowip=192.168.1.1`                  | `-rpcallowip=192.168.1.1` (unchanged) |\n-| `-rpcallowip=192.168.1.*`                  | `-rpcallowip=192.168.1.0/24`          |\n-| `-rpcallowip=192.168.*`                    | `-rpcallowip=192.168.0.0/16`          |\n-| `-rpcallowip=*` (dangerous!)               | `-rpcallowip=::/0` (still dangerous!) |\n-\n-Using wildcards will result in the rule being rejected with the following error in debug.log:\n-\n-    Error: Invalid -rpcallowip subnet specification: *. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\n-\n-\n-REST interface\n---------------\n-\n-A new HTTP API is exposed when running with the `-rest` flag, which allows\n-unauthenticated access to public node data.\n-\n-It is served on the same port as RPC, but does not need a password, and uses\n-plain HTTP instead of JSON-RPC.\n-\n-Assuming a local RPC server running on port 8332, it is possible to request:\n-- Blocks: http://localhost:8332/rest/block/*HASH*.*EXT*\n-- Blocks without transactions: http://localhost:8332/rest/block/notxdetails/*HASH*.*EXT*\n-- Transactions (requires `-txindex`): http://localhost:8332/rest/tx/*HASH*.*EXT*\n-\n-In every case, *EXT* can be `bin` (for raw binary data), `hex` (for hex-encoded\n-binary) or `json`.\n-\n-For more details, see the `doc/REST-interface.md` document in the repository.\n-\n-RPC Server \"Warm-Up\" Mode\n--------------------------\n-\n-The RPC server is started earlier now, before most of the expensive\n-intialisations like loading the block index.  It is available now almost\n-immediately after starting the process.  However, until all initialisations\n-are done, it always returns an immediate error with code -28 to all calls.\n-\n-This new behaviour can be useful for clients to know that a server is already\n-started and will be available soon (for instance, so that they do not\n-have to start it themselves).\n-\n-Improved signing security\n--------------------------\n-\n-For 0.10 the security of signing against unusual attacks has been\n-improved by making the signatures constant time and deterministic.\n-\n-This change is a result of switching signing to use libsecp256k1\n-instead of OpenSSL. Libsecp256k1 is a cryptographic library\n-optimized for the curve Bitcoin uses which was created by Bitcoin\n-Core developer Pieter Wuille.\n-\n-There exist attacks[1] against most ECC implementations where an\n-attacker on shared virtual machine hardware could extract a private\n-key if they could cause a target to sign using the same key hundreds\n-of times. While using shared hosts and reusing keys are inadvisable\n-for other reasons, it's a better practice to avoid the exposure.\n-\n-OpenSSL has code in their source repository for derandomization\n-and reduction in timing leaks that we've eagerly wanted to use for a\n-long time, but this functionality has still not made its\n-way into a released version of OpenSSL. Libsecp256k1 achieves\n-significantly stronger protection: As far as we're aware this is\n-the only deployed implementation of constant time signing for\n-the curve Bitcoin uses and we have reason to believe that\n-libsecp256k1 is better tested and more thoroughly reviewed\n-than the implementation in OpenSSL.\n-\n-[1] https://eprint.iacr.org/2014/161.pdf\n-\n-Watch-only wallet support\n--------------------------\n-\n-The wallet can now track transactions to and from wallets for which you know\n-all addresses (or scripts), even without the private keys.\n-\n-This can be used to track payments without needing the private keys online on a\n-possibly vulnerable system. In addition, it can help for (manual) construction\n-of multisig transactions where you are only one of the signers.\n-\n-One new RPC, `importaddress`, is added which functions similarly to\n-`importprivkey`, but instead takes an address or script (in hexadecimal) as\n-argument.  After using it, outputs credited to this address or script are\n-considered to be received, and transactions consuming these outputs will be\n-considered to be sent.\n-\n-The following RPCs have optional support for watch-only:\n-`getbalance`, `listreceivedbyaddress`, `listreceivedbyaccount`,\n-`listtransactions`, `listaccounts`, `listsinceblock`, `gettransaction`. See the\n-RPC documentation for those methods for more information.\n-\n-Compared to using `getrawtransaction`, this mechanism does not require\n-`-txindex`, scales better, integrates better with the wallet, and is compatible\n-with future block chain pruning functionality. It does mean that all relevant\n-addresses need to added to the wallet before the payment, though.\n-\n-Consensus library\n------------------\n-\n-Starting from 0.10.0, the Bitcoin Core distribution includes a consensus library.\n-\n-The purpose of this library is to make the verification functionality that is\n-critical to Bitcoin's consensus available to other applications, e.g. to language\n-bindings such as [python-bitcoinlib](https://pypi.python.org/pypi/python-bitcoinlib) or\n-alternative node implementations.\n-\n-This library is called `libbitcoinconsensus.so` (or, `.dll` for Windows).\n-Its interface is defined in the C header [bitcoinconsensus.h](https://github.com/bitcoin/bitcoin/blob/0.10/src/script/bitcoinconsensus.h).\n-\n-In its initial version the API includes two functions:\n-\n-- `bitcoinconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n-correctly spends the passed scriptPubKey under additional constraints indicated by flags\n-- `bitcoinconsensus_version` returns the API version, currently at an experimental `0`\n-\n-The functionality is planned to be extended to e.g. UTXO management in upcoming releases, but the interface\n-for existing methods should remain stable.\n-\n-Standard script rules relaxed for P2SH addresses\n-------------------------------------------------\n-\n-The IsStandard() rules have been almost completely removed for P2SH\n-redemption scripts, allowing applications to make use of any valid\n-script type, such as \"n-of-m OR y\", hash-locked oracle addresses, etc.\n-While the Bitcoin protocol has always supported these types of script,\n-actually using them on mainnet has been previously inconvenient as\n-standard Bitcoin Core nodes wouldn't relay them to miners, nor would\n-most miners include them in blocks they mined.\n-\n-bitcoin-tx\n-----------\n-\n-It has been observed that many of the RPC functions offered by bitcoind are\n-\"pure functions\", and operate independently of the bitcoind wallet. This\n-included many of the RPC \"raw transaction\" API functions, such as\n-createrawtransaction.\n-\n-bitcoin-tx is a newly introduced command line utility designed to enable easy\n-manipulation of bitcoin transactions. A summary of its operation may be\n-obtained via \"bitcoin-tx --help\" Transactions may be created or signed in a\n-manner similar to the RPC raw tx API. Transactions may be updated, deleting\n-inputs or outputs, or appending new inputs and outputs. Custom scripts may be\n-easily composed using a simple text notation, borrowed from the bitcoin test\n-suite.\n-\n-This tool may be used for experimenting with new transaction types, signing\n-multi-party transactions, and many other uses. Long term, the goal is to\n-deprecate and remove \"pure function\" RPC API calls, as those do not require a\n-server round-trip to execute.\n-\n-Other utilities \"bitcoin-key\" and \"bitcoin-script\" have been proposed, making\n-key and script operations easily accessible via command line.\n-\n-Mining and relay policy enhancements\n-------------------------------------\n-\n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n-software relying on its `getblocktemplate` must be updated in parallel to use\n-libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n-Core, which must be done prior to BIP66 achieving its 951/1001 status.\n-If you are mining with the stratum mining protocol: this does not affect you.\n-If you are mining with the getblocktemplate protocol to a pool: this will affect\n-you at the pool operator's discretion, which must be no later than BIP66\n-achieving its 951/1001 status.\n-\n-The `prioritisetransaction` RPC method has been added to enable miners to\n-manipulate the priority of transactions on an individual basis.\n-\n-Bitcoin Core now supports BIP 22 long polling, so mining software can be\n-notified immediately of new templates rather than having to poll periodically.\n-\n-Support for BIP 23 block proposals is now available in Bitcoin Core's\n-`getblocktemplate` method. This enables miners to check the basic validity of\n-their next block before expending work on it, reducing risks of accidental\n-hardforks or mining invalid blocks.\n-\n-Two new options to control mining policy:\n-- `-datacarrier=0/1` : Relay and mine \"data carrier\" (OP_RETURN) transactions\n-if this is 1.\n-- `-datacarriersize=n` : Maximum size, in bytes, we consider acceptable for\n-\"data carrier\" outputs.\n-\n-The relay policy has changed to more properly implement the desired behavior of not \n-relaying free (or very low fee) transactions unless they have a priority above the \n-AllowFreeThreshold(), in which case they are relayed subject to the rate limiter.\n-\n-BIP 66: strict DER encoding for signatures\n-------------------------------------------\n-\n-Bitcoin Core 0.10 implements BIP 66, which introduces block version 3, and a new\n-consensus rule, which prohibits non-DER signatures. Such transactions have been\n-non-standard since Bitcoin v0.8.0 (released in February 2013), but were\n-technically still permitted inside blocks.\n-\n-This change breaks the dependency on OpenSSL's signature parsing, and is\n-required if implementations would want to remove all of OpenSSL from the\n-consensus code.\n-\n-The same miner-voting mechanism as in BIP 34 is used: when 751 out of a\n-sequence of 1001 blocks have version number 3 or higher, the new consensus\n-rule becomes active for those blocks. When 951 out of a sequence of 1001\n-blocks have version number 3 or higher, it becomes mandatory for all blocks.\n-\n-Backward compatibility with current mining software is NOT provided, thus miners\n-should read the first paragraph of \"Mining and relay policy enhancements\" above.\n-\n-0.10.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect external\n-behavior, not code moves, refactors or string updates.\n-\n-RPC:\n-- `f923c07` Support IPv6 lookup in bitcoin-cli even when IPv6 only bound on localhost\n-- `b641c9c` Fix addnode \"onetry\": Connect with OpenNetworkConnection\n-- `171ca77` estimatefee / estimatepriority RPC methods\n-- `b750cf1` Remove cli functionality from bitcoind\n-- `f6984e8` Add \"chain\" to getmininginfo, improve help in getblockchaininfo\n-- `99ddc6c` Add nLocalServices info to RPC getinfo\n-- `cf0c47b` Remove getwork() RPC call\n-- `2a72d45` prioritisetransaction <txid> <priority delta> <priority tx fee>\n-- `e44fea5` Add an option `-datacarrier` to allow users to disable relaying/mining data carrier transactions\n-- `2ec5a3d` Prevent easy RPC memory exhaustion attack\n-- `d4640d7` Added argument to getbalance to include watchonly addresses and fixed errors in balance calculation\n-- `83f3543` Added argument to listaccounts to include watchonly addresses\n-- `952877e` Showing 'involvesWatchonly' property for transactions returned by 'listtransactions' and 'listsinceblock'. It is only appended when the transaction involves a watchonly address\n-- `d7d5d23` Added argument to listtransactions and listsinceblock to include watchonly addresses\n-- `f87ba3d` added includeWatchonly argument to 'gettransaction' because it affects balance calculation\n-- `0fa2f88` added includedWatchonly argument to listreceivedbyaddress/...account\n-- `6c37f7f` `getrawchangeaddress`: fail when keypool exhausted and wallet locked\n-- `ff6a7af` getblocktemplate: longpolling support\n-- `c4a321f` Add peerid to getpeerinfo to allow correlation with the logs\n-- `1b4568c` Add vout to ListTransactions output\n-- `b33bd7a` Implement \"getchaintips\" RPC command to monitor blockchain forks\n-- `733177e` Remove size limit in RPC client, keep it in server\n-- `6b5b7cb` Categorize rpc help overview\n-- `6f2c26a` Closely track mempool byte total. Add \"getmempoolinfo\" RPC\n-- `aa82795` Add detailed network info to getnetworkinfo RPC\n-- `01094bd` Don't reveal whether password is <20 or >20 characters in RPC\n-- `57153d4` rpc: Compute number of confirmations of a block from block height\n-- `ff36cbe` getnetworkinfo: export local node's client sub-version string\n-- `d14d7de` SanitizeString: allow '(' and ')'\n-- `31d6390` Fixed setaccount accepting foreign address\n-- `b5ec5fe` update getnetworkinfo help with subversion\n-- `ad6e601` RPC additions after headers-first\n-- `33dfbf5` rpc: Fix leveldb iterator leak, and flush before `gettxoutsetinfo`\n-- `2aa6329` Enable customising node policy for datacarrier data size with a -datacarriersize option\n-- `f877aaa` submitblock: Use a temporary CValidationState to determine accurately the outcome of ProcessBlock\n-- `e69a587` submitblock: Support for returning specific rejection reasons\n-- `af82884` Add \"warmup mode\" for RPC server\n-- `e2655e0` Add unauthenticated HTTP REST interface to public blockchain data\n-- `683dc40` Disable SSLv3 (in favor of TLS) for the RPC client and server\n-- `44b4c0d` signrawtransaction: validate private key\n-- `9765a50` Implement BIP 23 Block Proposal\n-- `f9de17e` Add warning comment to getinfo\n-\n-Command-line options:\n-- `ee21912` Use netmasks instead of wildcards for IP address matching\n-- `deb3572` Add `-rpcbind` option to allow binding RPC port on a specific interface\n-- `96b733e` Add `-version` option to get just the version\n-- `1569353` Add `-stopafterblockimport` option\n-- `77cbd46` Let -zapwallettxes recover transaction meta data\n-- `1c750db` remove -tor compatibility code (only allow -onion)\n-- `4aaa017` rework help messages for fee-related options\n-- `4278b1d` Clarify error message when invalid -rpcallowip\n-- `6b407e4` -datadir is now allowed in config files\n-- `bdd5b58` Add option `-sysperms` to disable 077 umask (create new files with system default umask)\n-- `cbe39a3` Add \"bitcoin-tx\" command line utility and supporting modules\n-- `dbca89b` Trigger -alertnotify if network is upgrading without you\n-- `ad96e7c` Make -reindex cope with out-of-order blocks\n-- `16d5194` Skip reindexed blocks individually\n-- `ec01243` --tracerpc option for regression tests\n-- `f654f00` Change -genproclimit default to 1\n-- `3c77714` Make -proxy set all network types, avoiding a connect leak\n-- `57be955` Remove -printblock, -printblocktree, and -printblockindex\n-- `ad3d208` remove -maxorphanblocks config parameter since it is no longer functional\n-\n-Block and transaction handling:\n-- `7a0e84d` ProcessGetData(): abort if a block file is missing from disk\n-- `8c93bf4` LoadBlockIndexDB(): Require block db reindex if any `blk*.dat` files are missing\n-- `77339e5` Get rid of the static chainMostWork (optimization)\n-- `4e0eed8` Allow ActivateBestChain to release its lock on cs_main\n-- `18e7216` Push cs_mains down in ProcessBlock\n-- `fa126ef` Avoid undefined behavior using CFlatData in CScript serialization\n-- `7f3b4e9` Relax IsStandard rules for pay-to-script-hash transactions\n-- `c9a0918` Add a skiplist to the CBlockIndex structure\n-- `bc42503` Use unordered_map for CCoinsViewCache with salted hash (optimization)\n-- `d4d3fbd` Do not flush the cache after every block outside of IBD (optimization)\n-- `ad08d0b` Bugfix: make CCoinsViewMemPool support pruned entries in underlying cache\n-- `5734d4d` Only remove actualy failed blocks from setBlockIndexValid\n-- `d70bc52` Rework block processing benchmark code\n-- `714a3e6` Only keep setBlockIndexValid entries that are possible improvements\n-- `ea100c7` Reduce maximum coinscache size during verification (reduce memory usage)\n-- `4fad8e6` Reject transactions with excessive numbers of sigops\n-- `b0875eb` Allow BatchWrite to destroy its input, reducing copying (optimization)\n-- `92bb6f2` Bypass reloading blocks from disk (optimization)\n-- `2e28031` Perform CVerifyDB on pcoinsdbview instead of pcoinsTip (reduce memory usage)\n-- `ab15b2e` Avoid copying undo data (optimization)\n-- `341735e` Headers-first synchronization\n-- `afc32c5` Fix rebuild-chainstate feature and improve its performance\n-- `e11b2ce` Fix large reorgs\n-- `ed6d1a2` Keep information about all block files in memory\n-- `a48f2d6` Abstract context-dependent block checking from acceptance\n-- `7e615f5` Fixed mempool sync after sending a transaction\n-- `51ce901` Improve chainstate/blockindex disk writing policy\n-- `a206950` Introduce separate flushing modes\n-- `9ec75c5` Add a locking mechanism to IsInitialBlockDownload to ensure it never goes from false to true\n-- `868d041` Remove coinbase-dependant transactions during reorg\n-- `723d12c` Remove txn which are invalidated by coinbase maturity during reorg\n-- `0cb8763` Check against MANDATORY flags prior to accepting to mempool\n-- `8446262` Reject headers that build on an invalid parent\n-- `008138c` Bugfix: only track UTXO modification after lookup\n-\n-P2P protocol and network code:\n-- `f80cffa` Do not trigger a DoS ban if SCRIPT_VERIFY_NULLDUMMY fails\n-- `c30329a` Add testnet DNS seed of Alex Kotenko\n-- `45a4baf` Add testnet DNS seed of Andreas Schildbach\n-- `f1920e8` Ping automatically every 2 minutes (unconditionally)\n-- `806fd19` Allocate receive buffers in on the fly\n-- `6ecf3ed` Display unknown commands received\n-- `aa81564` Track peers' available blocks\n-- `caf6150` Use async name resolving to improve net thread responsiveness\n-- `9f4da19` Use pong receive time rather than processing time\n-- `0127a9b` remove SOCKS4 support from core and GUI, use SOCKS5\n-- `40f5cb8` Send rejects and apply DoS scoring for errors in direct block validation\n-- `dc942e6` Introduce whitelisted peers\n-- `c994d2e` prevent SOCKET leak in BindListenPort()\n-- `a60120e` Add built-in seeds for .onion\n-- `60dc8e4` Allow -onlynet=onion to be used\n-- `3a56de7` addrman: Do not propagate obviously poor addresses onto the network\n-- `6050ab6` netbase: Make SOCKS5 negotiation interruptible\n-- `604ee2a` Remove tx from AlreadyAskedFor list once we receive it, not when we process it\n-- `efad808` Avoid reject message feedback loops\n-- `71697f9` Separate protocol versioning from clientversion\n-- `20a5f61` Don't relay alerts to peers before version negotiation\n-- `b4ee0bd` Introduce preferred download peers\n-- `845c86d` Do not use third party services for IP detection\n-- `12a49ca` Limit the number of new addressses to accumulate\n-- `35e408f` Regard connection failures as attempt for addrman\n-- `a3a7317` Introduce 10 minute block download timeout\n-- `3022e7d` Require sufficent priority for relay of free transactions\n-- `58fda4d` Update seed IPs, based on bitcoin.sipa.be crawler data\n-- `18021d0` Remove bitnodes.io from dnsseeds.\n-\n-Validation:\n-- `6fd7ef2` Also switch the (unused) verification code to low-s instead of even-s\n-- `584a358` Do merkle root and txid duplicates check simultaneously\n-- `217a5c9` When transaction outputs exceed inputs, show the offending amounts so as to aid debugging\n-- `f74fc9b` Print input index when signature validation fails, to aid debugging\n-- `6fd59ee` script.h: set_vch() should shift a >32 bit value\n-- `d752ba8` Add SCRIPT_VERIFY_SIGPUSHONLY (BIP62 rule 2) (test only)\n-- `698c6ab` Add SCRIPT_VERIFY_MINIMALDATA (BIP62 rules 3 and 4) (test only)\n-- `ab9edbd` script: create sane error return codes for script validation and remove logging\n-- `219a147` script: check ScriptError values in script tests\n-- `0391423` Discourage NOPs reserved for soft-fork upgrades\n-- `98b135f` Make STRICTENC invalid pubkeys fail the script rather than the opcode\n-- `307f7d4` Report script evaluation failures in log and reject messages\n-- `ace39db` consensus: guard against openssl's new strict DER checks\n-- `12b7c44` Improve robustness of DER recoding code\n-- `76ce5c8` fail immediately on an empty signature\n-\n-Build system:\n-- `f25e3ad` Fix build in OS X 10.9\n-- `65e8ba4` build: Switch to non-recursive make\n-- `460b32d` build: fix broken boost chrono check on some platforms\n-- `9ce0774` build: Fix windows configure when using --with-qt-libdir\n-- `ea96475` build: Add mention of --disable-wallet to bdb48 error messages\n-- `1dec09b` depends: add shared dependency builder\n-- `c101c76` build: Add --with-utils (bitcoin-cli and bitcoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n-- `e432a5f` build: add option for reducing exports (v2)\n-- `6134b43` Fixing condition 'sabotaging' MSVC build\n-- `af0bd5e` osx: fix signing to make Gatekeeper happy (again)\n-- `a7d1f03` build: fix dynamic boost check when --with-boost= is used\n-- `d5fd094` build: fix qt test build when libprotobuf is in a non-standard path\n-- `2cf5f16` Add libbitcoinconsensus library\n-- `914868a` build: add a deterministic dmg signer \n-- `2d375fe` depends: bump openssl to 1.0.1k\n-- `b7a4ecc` Build: Only check for boost when building code that requires it\n-\n-Wallet:\n-- `b33d1f5` Use fee/priority estimates in wallet CreateTransaction\n-- `4b7b1bb` Sanity checks for estimates\n-- `c898846` Add support for watch-only addresses\n-- `d5087d1` Use script matching rather than destination matching for watch-only\n-- `d88af56` Fee fixes\n-- `a35b55b` Dont run full check every time we decrypt wallet\n-- `3a7c348` Fix make_change to not create half-satoshis\n-- `f606bb9` fix a possible memory leak in CWalletDB::Recover\n-- `870da77` fix possible memory leaks in CWallet::EncryptWallet\n-- `ccca27a` Watch-only fixes\n-- `9b1627d` [Wallet] Reduce minTxFee for transaction creation to 1000 satoshis\n-- `a53fd41` Deterministic signing\n-- `15ad0b5` Apply AreSane() checks to the fees from the network\n-- `11855c1` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option\n-\n-GUI:\n-- `c21c74b` osx: Fix missing dock menu with qt5\n-- `b90711c` Fix Transaction details shows wrong To:\n-- `516053c` Make links in 'About Bitcoin Core' clickable\n-- `bdc83e8` Ensure payment request network matches client network\n-- `65f78a1` Add GUI view of peer information\n-- `06a91d9` VerifyDB progress reporting\n-- `fe6bff2` Add BerkeleyDB version info to RPCConsole\n-- `b917555` PeerTableModel: Fix potential deadlock. #4296\n-- `dff0e3b` Improve rpc console history behavior\n-- `95a9383` Remove CENT-fee-rule from coin control completely\n-- `56b07d2` Allow setting listen via GUI\n-- `d95ba75` Log messages with type>QtDebugMsg as non-debug\n-- `8969828` New status bar Unit Display Control and related changes\n-- `674c070` seed OpenSSL PNRG with Windows event data\n-- `509f926` Payment request parsing on startup now only changes network if a valid network name is specified\n-- `acd432b` Prevent balloon-spam after rescan\n-- `7007402` Implement SI-style (thin space) thoudands separator\n-- `91cce17` Use fixed-point arithmetic in amount spinbox\n-- `bdba2dd` Remove an obscure option no-one cares about\n-- `bd0aa10` Replace the temporary file hack currently used to change Bitcoin-Qt's dock icon (OS X) with a buffer-based solution\n-- `94e1b9e` Re-work overviewpage UI\n-- `8bfdc9a` Better looking trayicon\n-- `b197bf3` disable tray interactions when client model set to 0\n-- `1c5f0af` Add column Watch-only to transactions list\n-- `21f139b` Fix tablet crash. closes #4854\n-- `e84843c` Broken addresses on command line no longer trigger testnet\n-- `a49f11d` Change splash screen to normal window\n-- `1f9be98` Disable App Nap on OSX 10.9+\n-- `27c3e91` Add proxy to options overridden if necessary\n-- `4bd1185` Allow \"emergency\" shutdown during startup\n-- `d52f072` Don't show wallet options in the preferences menu when running with -disablewallet\n-- `6093aa1` Qt: QProgressBar CPU-Issue workaround\n-- `0ed9675` [Wallet] Add global boolean whether to send free transactions (default=true)\n-- `ed3e5e4` [Wallet] Add global boolean whether to pay at least the custom fee (default=true)\n-- `e7876b2` [Wallet] Prevent user from paying a non-sense fee\n-- `c1c9d5b` Add Smartfee to GUI\n-- `e0a25c5` Make askpassphrase dialog behave more sanely\n-- `94b362d` On close of splashscreen interrupt verifyDB\n-- `b790d13` English translation update\n-- `8543b0d` Correct tooltip on address book page\n-\n-Tests:\n-- `b41e594` Fix script test handling of empty scripts\n-- `d3a33fc` Test CHECKMULTISIG with m == 0 and n == 0\n-- `29c1749` Let tx (in)valid tests use any SCRIPT_VERIFY flag\n-- `6380180` Add rejection of non-null CHECKMULTISIG dummy values\n-- `21bf3d2` Add tests for BoostAsioToCNetAddr\n-- `b5ad5e7` Add Python test for -rpcbind and -rpcallowip\n-- `9ec0306` Add CODESEPARATOR/FindAndDelete() tests\n-- `75ebced` Added many rpc wallet tests\n-- `0193fb8` Allow multiple regression tests to run at once\n-- `92a6220` Hook up sanity checks\n-- `3820e01` Extend and move all crypto tests to crypto_tests.cpp\n-- `3f9a019` added list/get received by address/ account tests\n-- `a90689f` Remove timing-based signature cache unit test\n-- `236982c` Add skiplist unit tests\n-- `f4b00be` Add CChain::GetLocator() unit test\n-- `b45a6e8` Add test for getblocktemplate longpolling\n-- `cdf305e` Set -discover=0 in regtest framework\n-- `ed02282` additional test for OP_SIZE in script_valid.json\n-- `0072d98` script tests: BOOLAND, BOOLOR decode to integer\n-- `833ff16` script tests: values that overflow to 0 are true\n-- `4cac5db` script tests: value with trailing 0x00 is true\n-- `89101c6` script test: test case for 5-byte bools\n-- `d2d9dc0` script tests: add tests for CHECKMULTISIG limits\n-- `d789386` Add \"it works\" test for bitcoin-tx\n-- `df4d61e` Add bitcoin-tx tests\n-- `aa41ac2` Test IsPushOnly() with invalid push\n-- `6022b5d` Make `script_{valid,invalid}.json` validation flags configurable\n-- `8138cbe` Add automatic script test generation, and actual checksig tests\n-- `ed27e53` Add coins_tests with a large randomized CCoinViewCache test\n-- `9df9cf5` Make SCRIPT_VERIFY_STRICTENC compatible with BIP62\n-- `dcb9846` Extend getchaintips RPC test\n-- `554147a` Ensure MINIMALDATA invalid tests can only fail one way\n-- `dfeec18` Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule\n-- `2b62e17` Clearly separate PUSHDATA and numeric argument MINIMALDATA tests\n-- `16d78bd` Add valid invert of invalid every numeric opcode tests\n-- `f635269` tests: enable alertnotify test for Windows\n-- `7a41614` tests: allow rpc-tests to get filenames for bitcoind and bitcoin-cli from the environment\n-- `5122ea7` tests: fix forknotify.py on windows\n-- `fa7f8cd` tests: remove old pull-tester scripts\n-- `7667850` tests: replace the old (unused since Travis) tests with new rpc test scripts\n-- `f4e0aef` Do signature-s negation inside the tests\n-- `1837987` Optimize -regtest setgenerate block generation\n-- `2db4c8a` Fix node ranges in the test framework\n-- `a8b2ce5` regression test only setmocktime RPC call\n-- `daf03e7` RPC tests: create initial chain with specific timestamps\n-- `8656dbb` Port/fix txnmall.sh regression test\n-- `ca81587` Test the exact order of CHECKMULTISIG sig/pubkey evaluation\n-- `7357893` Prioritize and display -testsafemode status in UI\n-- `f321d6b` Add key generation/verification to ECC sanity check\n-- `132ea9b` miner_tests: Disable checkpoints so they don't fail the subsidy-change test\n-- `bc6cb41` QA RPC tests: Add tests block block proposals\n-- `f67a9ce` Use deterministically generated script tests\n-- `11d7a7d` [RPC] add rpc-test for http keep-alive (persistent connections)\n-- `34318d7` RPC-test based on invalidateblock for mempool coinbase spends\n-- `76ec867` Use actually valid transactions for script tests\n-- `c8589bf` Add actual signature tests\n-- `e2677d7` Fix smartfees test for change to relay policy\n-- `263b65e` tests: run sanity checks in tests too\n-\n-Miscellaneous:\n-- `122549f` Fix incorrect checkpoint data for testnet3\n-- `5bd02cf` Log used config file to debug.log on startup\n-- `68ba85f` Updated Debian example bitcoin.conf with config from wiki + removed some cruft and updated comments\n-- `e5ee8f0` Remove -beta suffix\n-- `38405ac` Add comment regarding experimental-use service bits\n-- `be873f6` Issue warning if collecting RandSeed data failed\n-- `8ae973c` Allocate more space if necessary in RandSeedAddPerfMon\n-- `675bcd5` Correct comment for 15-of-15 p2sh script size\n-- `fda3fed` libsecp256k1 integration\n-- `2e36866` Show nodeid instead of addresses in log (for anonymity) unless otherwise requested\n-- `cd01a5e` Enable paranoid corruption checks in LevelDB >= 1.16\n-- `9365937` Add comment about never updating nTimeOffset past 199 samples\n-- `403c1bf` contrib: remove getwork-based pyminer (as getwork API call has been removed)\n-- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate bitcoind\n-- `0a0878d` doc: Add new DNSseed policy\n-- `2887bff` Update coding style and add .clang-format\n-- `5cbda4f` Changed LevelDB cursors to use scoped pointers to ensure destruction when going out of scope\n-- `b4a72a7` contrib/linearize: split output files based on new-timestamp-year or max-file-size\n-- `e982b57` Use explicit fflush() instead of setvbuf()\n-- `234bfbf` contrib: Add init scripts and docs for Upstart and OpenRC\n-- `01c2807` Add warning about the merkle-tree algorithm duplicate txid flaw\n-- `d6712db` Also create pid file in non-daemon mode\n-- `772ab0e` contrib: use batched JSON-RPC in linarize-hashes (optimization)\n-- `7ab4358` Update bash-completion for v0.10\n-- `6e6a36c` contrib: show pull # in prompt for github-merge script\n-- `5b9f842` Upgrade leveldb to 1.18, make chainstate databases compatible between ARM and x86 (issue #2293)\n-- `4e7c219` Catch UTXO set read errors and shutdown\n-- `867c600` Catch LevelDB errors during flush\n-- `06ca065` Fix CScriptID(const CScript& in) in empty script case\n-\n-Credits\n-=======\n-\n-Thanks to everyone who contributed to this release:\n-\n-- 21E14\n-- Adam Weiss\n-- Aitor Pazos\n-- Alexander Jeng\n-- Alex Morcos\n-- Alon Muroch\n-- Andreas Schildbach\n-- Andrew Poelstra\n-- Andy Alness\n-- Ashley Holman\n-- Benedict Chan\n-- Ben Holden-Crowther\n-- Bryan Bishop\n-- BtcDrak\n-- Christian von Roques\n-- Clinton Christian\n-- Cory Fields\n-- Cozz Lovan\n-- daniel\n-- Daniel Kraft\n-- David Hill\n-- Derek701\n-- dexX7\n-- dllud\n-- Dominyk Tiller\n-- Doug\n-- elichai\n-- elkingtowa\n-- ENikS\n-- Eric Shaw\n-- Federico Bond\n-- Francis GASCHET\n-- Gavin Andresen\n-- Giuseppe Mazzotta\n-- Glenn Willen\n-- Gregory Maxwell\n-- gubatron\n-- HarryWu\n-- himynameismartin\n-- Huang Le\n-- Ian Carroll\n-- imharrywu\n-- Jameson Lopp\n-- Janusz Lenar\n-- JaSK\n-- Jeff Garzik\n-- JL2035\n-- Johnathan Corgan\n-- Jonas Schnelli\n-- jtimon\n-- Julian Haight\n-- Kamil Domanski\n-- kazcw\n-- kevin\n-- kiwigb\n-- Kosta Zertsekel\n-- LongShao007\n-- Luke Dashjr\n-- Mark Friedenbach\n-- Mathy Vanvoorden\n-- Matt Corallo\n-- Matthew Bogosian\n-- Micha\n-- Michael Ford\n-- Mike Hearn\n-- mrbandrews\n-- mruddy\n-- ntrgn\n-- Otto Allmendinger\n-- paveljanik\n-- Pavel Vasin\n-- Peter Todd\n-- phantomcircuit\n-- Philip Kaufmann\n-- Pieter Wuille\n-- pryds\n-- randy-waterhouse\n-- R E Broadley\n-- Rose Toomey\n-- Ross Nicoll\n-- Roy Badami\n-- Ruben Dario Ponticelli\n-- Rune K. Svendsen\n-- Ryan X. Charles\n-- Saivann\n-- sandakersmann\n-- SergioDemianLerner\n-- shshshsh\n-- sinetek\n-- Stuart Cardall\n-- Suhas Daftuar\n-- Tawanda Kembo\n-- Teran McKinney\n-- tm314159\n-- Tom Harding\n-- Trevin Hofmann\n-- Whit J\n-- Wladimir J. van der Laan\n-- Yoichi Hirai\n-- Zak Wilcox\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,143 +0,0 @@\n-Bitcoin Core version 0.10.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.10.1/>\n-\n-This is a new minor version release, bringing bug fixes and translation \n-updates. It is recommended to upgrade to this version.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-Notable changes\n-===============\n-\n-This is a minor release and hence there are no notable changes.\n-For the notable changes in 0.10, refer to the release notes for the\n-0.10.0 release at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n-\n-0.10.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect external\n-behavior, not code moves, refactors or string updates.\n-\n-RPC:\n-- `7f502be` fix crash: createmultisig and addmultisigaddress\n-- `eae305f` Fix missing lock in submitblock\n-\n-Block (database) and transaction handling:\n-- `1d2cdd2` Fix InvalidateBlock to add chainActive.Tip to setBlockIndexCandidates\n-- `c91c660` fix InvalidateBlock to repopulate setBlockIndexCandidates\n-- `002c8a2` fix possible block db breakage during re-index\n-- `a1f425b` Add (optional) consistency check for the block chain data structures\n-- `1c62e84` Keep mempool consistent during block-reorgs\n-- `57d1f46` Fix CheckBlockIndex for reindex\n-- `bac6fca` Set nSequenceId when a block is fully linked\n-\n-P2P protocol and network code:\n-- `78f64ef` don't trickle for whitelisted nodes\n-- `ca301bf` Reduce fingerprinting through timestamps in 'addr' messages.\n-- `200f293` Ignore getaddr messages on Outbound connections.\n-- `d5d8998` Limit message sizes before transfer\n-- `aeb9279` Better fingerprinting protection for non-main-chain getdatas.\n-- `cf0218f` Make addrman's bucket placement deterministic (countermeasure 1 against eclipse attacks, see http://cs-people.bu.edu/heilman/eclipse/)\n-- `0c6f334` Always use a 50% chance to choose between tried and new entries (countermeasure 2 against eclipse attacks)\n-- `214154e` Do not bias outgoing connections towards fresh addresses (countermeasure 2 against eclipse attacks)\n-- `aa587d4` Scale up addrman (countermeasure 6 against eclipse attacks)\n-- `139cd81` Cap nAttempts penalty at 8 and switch to pow instead of a division loop\n-\n-Validation:\n-- `d148f62` Acquire CCheckQueue's lock to avoid race condition\n-\n-Build system:\n-- `8752b5c` 0.10 fix for crashes on OSX 10.6\n-\n-Wallet:\n-- N/A\n-\n-GUI:\n-- `2c08406` some mac specifiy cleanup (memory handling, unnecessary code)\n-- `81145a6` fix OSX dock icon window reopening\n-- `786cf72` fix a issue where \"command line options\"-action overwrite \"Preference\"-action (on OSX)\n-\n-Tests:\n-- `1117378` add RPC test for InvalidateBlock\n-\n-Miscellaneous:\n-- `c9e022b` Initialization: set Boost path locale in main thread\n-- `23126a0` Sanitize command strings before logging them.\n-- `323de27` Initialization: setup environment before starting Qt tests\n-- `7494e09` Initialization: setup environment before starting tests\n-- `df45564` Initialization: set fallback locale as environment variable\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- Cory Fields\n-- dexX7\n-- fsb4000\n-- Gavin Andresen\n-- Gregory Maxwell\n-- Ivan Pustogarov\n-- Jonas Schnelli\n-- Matt Corallo\n-- mrbandrews\n-- Pieter Wuille\n-- Ruben de Vries\n-- Suhas Daftuar\n-- Wladimir J. van der Laan\n-\n-And all those who contributed additional code review and/or security research:\n-- 21E14\n-- Alison Kendler\n-- Aviv Zohar\n-- Ethan Heilman\n-- Evil-Knievel\n-- fanquake\n-- Jeff Garzik\n-- Jonas Nick\n-- Luke Dashjr\n-- Patrick Strateman\n-- Philip Kaufmann\n-- Sergio Demian Lerner\n-- Sharon Goldberg\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,86 +0,0 @@\n-Bitcoin Core version 0.10.2 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.10.2/>\n-\n-This is a new minor version release, bringing minor bug fixes and translation \n-updates. It is recommended to upgrade to this version.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-Notable changes\n-===============\n-\n-This fixes a serious problem on Windows with data directories that have non-ASCII\n-characters (https://github.com/bitcoin/bitcoin/issues/6078).\n-\n-For other platforms there are no notable changes.\n-\n-For the notable changes in 0.10, refer to the release notes\n-at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n-\n-0.10.2 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect external\n-behavior, not code moves, refactors or string updates.\n-\n-Wallet:\n-- `824c011` fix boost::get usage with boost 1.58\n-\n-Miscellaneous:\n-- `da65606` Avoid crash on start in TestBlockValidity with gen=1.\n-- `424ae66` don't imbue boost::filesystem::path with locale \"C\" on windows (fixes #6078)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Cory Fields\n-- Gregory Maxwell\n-- Jonas Schnelli\n-- Wladimir J. van der Laan\n-\n-And all those who contributed additional code review and/or security research:\n-\n-- dexX7\n-- Pieter Wuille\n-- vayvanne\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,165 +0,0 @@\n-Bitcoin Core version 0.10.3 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.10.3/>\n-\n-This is a new minor version release, bringing security fixes and translation \n-updates. It is recommended to upgrade to this version as soon as possible.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-Notable changes\n-===============\n-\n-Fix buffer overflow in bundled upnp\n-------------------------------------\n-\n-Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n-the XML parser during initial network discovery.\n-\n-Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n-\n-This applies to the distributed executables only, not when building from source or\n-using distribution provided packages.\n-\n-Additionally, upnp has been disabled by default. This may result in a lower\n-number of reachable nodes on IPv4, however this prevents future libupnpc\n-vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n-\n-Test for LowS signatures before relaying\n------------------------------------------\n-\n-Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n-relaying or mining.  This removes a nuisance malleability vector.\n-\n-Consensus behavior is unchanged.\n-\n-If widely deployed this change would eliminate the last remaining known vector\n-for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n-it will block most transactions made by sufficiently out of date software.\n-\n-Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n-its discovery. So, while other malleability vectors where made\n-non-standard as soon as they were discovered, this one has remained\n-permitted. Even BIP62 did not propose applying this rule to\n-old version transactions, but conforming implementations have become\n-much more common since BIP62 was initially written.\n-\n-Bitcoin Core has produced compatible signatures since a28fb70e in\n-September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n-\n-This does not replace the need for BIP62 or similar, as miners can\n-still cooperate to break transactions.  Nor does it replace the\n-need for wallet software to handle malleability sanely[1]. This\n-only eliminates the cheap and irritating DOS attack.\n-\n-[1] On the Malleability of Bitcoin Transactions\n-Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n-\n-Minimum relay fee default increase\n------------------------------------\n-\n-The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n-to `0.00005`.\n-\n-This is necessitated by the current transaction flooding, causing\n-outrageous memory usage on nodes due to the mempool ballooning. This is a\n-temporary measure, bridging the time until a dynamic method for determining\n-this fee is merged (which will be in 0.12).\n-\n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11.0\n-release notes, in which this value was suggested)\n-\n-0.10.3 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect external\n-behavior, not code moves, refactors or string updates.\n-\n-- #6186 `e4a7d51` Fix two problems in CSubnet parsing\n-- #6153 `ebd7d8d` Parameter interaction: disable upnp if -proxy set\n-- #6203 `ecc96f5` Remove P2SH coinbase flag, no longer interesting\n-- #6226 `181771b` json: fail read_string if string contains trailing garbage\n-- #6244 `09334e0` configure: Detect (and reject) LibreSSL\n-- #6276 `0fd8464` Fix getbalance * 0\n-- #6274 `be64204` Add option `-alerts` to opt out of alert system\n-- #6319 `3f55638` doc: update mailing list address\n-- #6438 `7e66e9c` openssl: avoid config file load/race\n-- #6439 `255eced` Updated URL location of netinstall for Debian\n-- #6412 `0739e6e` Test whether created sockets are select()able\n-- #6694 `f696ea1` [QT] fix thin space word wrap line brake issue\n-- #6704 `743cc9e` Backport bugfixes to 0.10\n-- #6769 `1cea6b0` Test LowS in standardness, removes nuisance malleability vector.\n-- #6789 `093d7b5` Update miniupnpc to 1.9.20151008\n-- #6795 `f2778e0` net: Disable upnp by default\n-- #6797 `91ef4d9` Do not store more than 200 timedata samples\n-- #6793 `842c48d` Bump minrelaytxfee default\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Adam Weiss\n-- Alex Morcos\n-- Casey Rodarmor\n-- Cory Fields\n-- fanquake\n-- Gregory Maxwell\n-- Jonas Schnelli\n-- J Ross Nicoll\n-- Luke Dashjr\n-- Pavel Vasin\n-- Pieter Wuille\n-- randy-waterhouse\n-- \u0e3ftcDrak\n-- Tom Harding\n-- Veres Lajos\n-- Wladimir J. van der Laan\n-\n-And all those who contributed additional code review and/or security research:\n-\n-- timothy on IRC for reporting the issue\n-- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,172 +0,0 @@\n-Bitcoin Core version 0.10.4 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.10.4/>\n-\n-This is a new minor version release, bringing bug fixes, the BIP65\n-(CLTV) consensus change, and relay policy preparation for BIP113. It is\n-recommended to upgrade to this version as soon as possible.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility. There are no\n-known problems when downgrading from 0.11.x to 0.10.x.\n-\n-Notable changes since 0.10.3\n-============================\n-\n-BIP65 soft fork to enforce OP_CHECKLOCKTIMEVERIFY opcode\n---------------------------------------------------------\n-\n-This release includes several changes related to the [BIP65][] soft fork\n-which redefines the existing OP_NOP2 opcode as OP_CHECKLOCKTIMEVERIFY\n-(CLTV) so that a transaction output can be made unspendable until a\n-specified point in the future.\n-\n-1. This release will only relay and mine transactions spending a CLTV\n-   output if they comply with the BIP65 rules as provided in code.\n-\n-2. This release will produce version 4 blocks by default. Please see the\n-   *notice to miners* below.\n-\n-3. Once 951 out of a sequence of 1,001 blocks on the local node's best block\n-   chain contain version 4 (or higher) blocks, this release will no\n-   longer accept new version 3 blocks and it will only accept version 4\n-   blocks if they comply with the BIP65 rules for CLTV.\n-\n-For more information about the soft-forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/6351>\n-\n-Graphs showing the progress towards block version 4 adoption may be\n-found at the URLs below:\n-\n-- Block versions over the last 50,000 blocks as progress towards BIP65\n-  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n-\n-- Block versions over the last 2,000 blocks showing the days to the\n-  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n-\n-**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n-version 4 blocks only, and any mining software relying on its\n-getblocktemplate must be updated in parallel to use libblkmaker either\n-version FIXME or any version from FIXME onward.\n-\n-- If you are solo mining, this will affect you the moment you upgrade\n-  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n-  status.\n-\n-- If you are mining with the stratum mining protocol: this does not\n-  affect you.\n-\n-- If you are mining with the getblocktemplate protocol to a pool: this\n-  will affect you at the pool operator\u2019s discretion, which must be no\n-  later than BIP65 achieving its 951/1001 status.\n-\n-[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n-\n-Windows bug fix for corrupted UTXO database on unclean shutdowns\n-----------------------------------------------------------------\n-\n-Several Windows users reported that they often need to reindex the\n-entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n-(or an unclean shutdown of Windows itself). Although unclean shutdowns\n-remain unsafe, this release no longer relies on memory-mapped files for\n-the UTXO database, which significantly reduced the frequency of unclean\n-shutdowns leading to required reindexes during testing.\n-\n-For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n-\n-Other fixes for database corruption on Windows are expected in the\n-next major release.\n-\n-0.10.4 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-- #6953 `8b3311f` alias -h for --help\n-- #6953 `97546fc` Change URLs to https in debian/control\n-- #6953 `38671bf` Update debian/changelog and slight tweak to debian/control\n-- #6953 `256321e` Correct spelling mistakes in doc folder\n-- #6953 `eae0350` Clarification of unit test build instructions\n-- #6953 `90897ab` Update bluematt-key, the old one is long-since revoked\n-- #6953 `a2f2fb6` build: disable -Wself-assign\n-- #6953 `cf67d8b` Bugfix: Allow mining on top of old tip blocks for testnet (fixes testnet-in-a-box use case)\n-- #6953 `b3964e3` Drop \"with minimal dependencies\" from description\n-- #6953 `43c2789` Split bitcoin-tx into its own package\n-- #6953 `dfe0d4d` Include bitcoin-tx binary on Debian/Ubuntu\n-- #6953 `612efe8` [Qt] Raise debug window when requested\n-- #6953 `3ad96bd` Fix locking in GetTransaction\n-- #6953 `9c81005` Fix spelling of Qt\n-- #6946 `94b67e5` Update LevelDB\n-- #6706 `5dc72f8` CLTV: Add more tests to improve coverage\n-- #6706 `6a1343b` Add RPC tests for the CHECKLOCKTIMEVERIFY (BIP65) soft-fork\n-- #6706 `4137248` Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n-- #6706 `0e01d0f` Enable CHECKLOCKTIMEVERIFY as a standard script verify flag\n-- #6706 `6d01325` Replace NOP2 with CHECKLOCKTIMEVERIFY (BIP65)\n-- #6706 `750d54f` Move LOCKTIME_THRESHOLD to src/script/script.h\n-- #6706 `6897468` Make CScriptNum() take nMaxNumSize as an argument\n-- #6867 `5297194` Set TCP_NODELAY on P2P sockets\n-- #6836 `fb818b6` Bring historical release notes up to date\n-- #6852 `0b3fd07` build: make sure OpenSSL heeds noexecstack\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- Daniel Cousens\n-- Diego Viola\n-- Eric Lombrozo\n-- Esteban Ordano\n-- Gregory Maxwell\n-- Luke Dashjr\n-- MarcoFalke\n-- Matt Corallo\n-- Micha\n-- Mitchell Cash\n-- Peter Todd\n-- Pieter Wuille\n-- Wladimir J. van der Laan\n-- Zak Wilcox\n-\n-And those who contributed additional code review and/or security research.\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 505,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,505 +0,0 @@\n-Bitcoin Core version 0.11.0 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>\n-\n-This is a new major version release, bringing both new features and\n-bug fixes.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility. There are no\n-known problems when downgrading from 0.11.x to 0.10.x.\n-\n-Important information\n-======================\n-\n-Transaction flooding\n----------------------\n-\n-At the time of this release, the P2P network is being flooded with low-fee\n-transactions. This causes a ballooning of the mempool size.\n-\n-If this growth of the mempool causes problematic memory use on your node, it is\n-possible to change a few configuration options to work around this. The growth\n-of the mempool can be monitored with the RPC command `getmempoolinfo`.\n-\n-One is to increase the minimum transaction relay fee `minrelaytxfee`, which\n-defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be\n-rejected, and thus fewer transactions entering the mempool.\n-\n-The other is to restrict the relaying of free transactions with\n-`limitfreerelay`. This option sets the number of kB/minute at which\n-free transactions (with enough priority) will be accepted. It defaults to 15.\n-Reducing this number reduces the speed at which the mempool can grow due\n-to free transactions.\n-\n-For example, add the following to `bitcoin.conf`:\n-\n-    minrelaytxfee=0.00005 \n-    limitfreerelay=5\n-\n-More robust solutions are being worked on for a follow-up release.\n-\n-Notable changes\n-===============\n-\n-Block file pruning\n-----------------------\n-\n-This release supports running a fully validating node without maintaining a copy \n-of the raw block and undo data on disk. To recap, there are four types of data \n-related to the blockchain in the bitcoin system: the raw blocks as received over \n-the network (blk???.dat), the undo data (rev???.dat), the block index and the \n-UTXO set (both LevelDB databases). The databases are built from the raw data.\n-\n-Block pruning allows Bitcoin Core to delete the raw block and undo data once \n-it's been validated and used to build the databases. At that point, the raw data \n-is used only to relay blocks to other nodes, to handle reorganizations, to look \n-up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or \n-for rescanning the wallet. The block index continues to hold the metadata about \n-all blocks in the blockchain.\n-\n-The user specifies how much space to allot for block & undo files. The minimum \n-allowed is 550MB. Note that this is in addition to whatever is required for the \n-block index and UTXO databases. The minimum was chosen so that Bitcoin Core will \n-be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 \n-minutes per block). In rare instances it is possible that the amount of space \n-used will exceed the pruning target in order to keep the required last 288 \n-blocks on disk.\n-\n-Block pruning works during initial sync in the same way as during steady state, \n-by deleting block files \"as you go\" whenever disk space is allocated. Thus, if \n-the user specifies 550MB, once that level is reached the program will begin \n-deleting the oldest block and undo files, while continuing to download the \n-blockchain.\n-\n-For now, block pruning disables block relay.  In the future, nodes with block \n-pruning will at a minimum relay \"new\" blocks, meaning blocks that extend their \n-active chain. \n-\n-Block pruning is currently incompatible with running a wallet due to the fact \n-that block data is used for rescanning the wallet and importing keys or \n-addresses (which require a rescan.) However, running the wallet with block \n-pruning will be supported in the near future, subject to those limitations.\n-\n-Block pruning is also incompatible with -txindex and will automatically disable \n-it.\n-\n-Once you have pruned blocks, going back to unpruned state requires \n-re-downloading the entire blockchain. To do this, re-start the node with \n--reindex. Note also that any problem that would cause a user to reindex (e.g., \n-disk corruption) will cause a pruned node to redownload the entire blockchain. \n-Finally, note that when a pruned node reindexes, it will delete any blk???.dat \n-and rev???.dat files in the data directory prior to restarting the download.\n-\n-To enable block pruning on the command line:\n-\n-- `-prune=N`: where N is the number of MB to allot for raw block & undo data.\n-\n-Modified RPC calls:\n-\n-- `getblockchaininfo` now includes whether we are in pruned mode or not.\n-- `getblock` will check if the block's data has been pruned and if so, return an \n-error.\n-- `getrawtransaction` will no longer be able to locate a transaction that has a \n-UTXO but where its block file has been pruned. \n-\n-Pruning is disabled by default.\n-\n-Big endian support\n---------------------\n-\n-Experimental support for big-endian CPU architectures was added in this\n-release. All little-endian specific code was replaced with endian-neutral\n-constructs. This has been tested on at least MIPS and PPC hosts. The build\n-system will automatically detect the endianness of the target.\n-\n-Memory usage optimization\n---------------------------\n-\n-There have been many changes in this release to reduce the default memory usage\n-of a node, among which:\n-\n-- Accurate UTXO cache size accounting (#6102); this makes the option `-dbcache`\n-  precise where this grossly underestimated memory usage before\n-- Reduce size of per-peer data structure (#6064 and others); this increases the\n-  number of connections that can be supported with the same amount of memory\n-- Reduce the number of threads (#5964, #5679); lowers the amount of (esp.\n-  virtual) memory needed\n-\n-Fee estimation changes\n-----------------------\n-\n-This release improves the algorithm used for fee estimation.  Previously, -1\n-was returned when there was insufficient data to give an estimate.  Now, -1\n-will also be returned when there is no fee or priority high enough for the\n-desired confirmation target. In those cases, it can help to ask for an estimate\n-for a higher target number of blocks. It is not uncommon for there to be no\n-fee or priority high enough to be reliably (85%) included in the next block and\n-for this reason, the default for `-txconfirmtarget=n` has changed from 1 to 2.\n-\n-Privacy: Disable wallet transaction broadcast\n-----------------------------------------------\n-\n-This release adds an option `-walletbroadcast=0` to prevent automatic\n-transaction broadcast and rebroadcast (#5951). This option allows separating\n-transaction submission from the node functionality.\n-\n-Making use of this, third-party scripts can be written to take care of\n-transaction (re)broadcast:\n-\n-- Send the transaction as normal, either through RPC or the GUI\n-- Retrieve the transaction data through RPC using `gettransaction` (NOT\n-  `getrawtransaction`). The `hex` field of the result will contain the raw\n-  hexadecimal representation of the transaction\n-- The transaction can then be broadcasted through arbitrary mechanisms\n-  supported by the script\n-\n-One such application is selective Tor usage, where the node runs on the normal\n-internet but transactions are broadcasted over Tor.\n-\n-For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).\n-\n-Privacy: Stream isolation for Tor\n-----------------------------------\n-\n-This release adds functionality to create a new circuit for every peer\n-connection, when the software is used with Tor. The new option,\n-`-proxyrandomize`, is on by default.\n-\n-When enabled, every outgoing connection will (potentially) go through a\n-different exit node. That significantly reduces the chance to get unlucky and\n-pick a single exit node that is either malicious, or widely banned from the P2P\n-network. This improves connection reliability as well as privacy, especially\n-for the initial connections.\n-\n-**Important note:** If a non-Tor SOCKS5 proxy is configured that supports\n-authentication, but doesn't require it, this change may cause that proxy to reject\n-connections. A user and password is sent where they weren't before. This setup\n-is exceedingly rare, but in this case `-proxyrandomize=0` can be passed to\n-disable the behavior.\n-\n-0.11.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and REST\n-- #5461 `5f7279a` signrawtransaction: validate private key\n-- #5444 `103f66b` Add /rest/headers/<count>/<hash>.<ext>\n-- #4964 `95ecc0a` Add scriptPubKey field to validateaddress RPC call\n-- #5476 `c986972` Add time offset into getpeerinfo output\n-- #5540 `84eba47` Add unconfirmed and immature balances to getwalletinfo\n-- #5599 `40e96a3` Get rid of the internal miner's hashmeter\n-- #5711 `87ecfb0` Push down RPC locks\n-- #5754 `1c4e3f9` fix getblocktemplate lock issue\n-- #5756 `5d901d8` Fix getblocktemplate_proposals test by mining one block\n-- #5548 `d48ce48` Add /rest/chaininfos\n-- #5992 `4c4f1b4` Push down RPC reqWallet flag\n-- #6036 `585b5db` Show zero value txouts in listunspent\n-- #5199 `6364408` Add RPC call `gettxoutproof` to generate and verify merkle blocks\n-- #5418 `16341cc` Report missing inputs in sendrawtransaction\n-- #5937 `40f5e8d` show script verification errors in signrawtransaction result\n-- #5420 `1fd2d39` getutxos REST command (based on Bip64)\n-- #6193 `42746b0` [REST] remove json input for getutxos, limit to query max. 15 outpoints\n-- #6226 `5901596` json: fail read_string if string contains trailing garbage\n-\n-### Configuration and command-line options\n-- #5636 `a353ad4` Add option `-allowselfsignedrootcertificate` to allow self signed root certs (for testing payment requests)\n-- #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the block chain data structures\n-- #5951 `7efc9cf` Make it possible to disable wallet transaction broadcast (using `-walletbroadcast=0`)\n-- #5911 `b6ea3bc` privacy: Stream isolation for Tor (on by default, use `-proxyrandomize=0` to disable)\n-- #5863 `c271304` Add autoprune functionality (`-prune=<size>`)\n-- #6153 `0bcf04f` Parameter interaction: disable upnp if -proxy set\n-- #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system\n-\n-### Block and transaction handling\n-- #5367 `dcc1304` Do all block index writes in a batch\n-- #5253 `203632d` Check against MANDATORY flags prior to accepting to mempool\n-- #5459 `4406c3e` Reject headers that build on an invalid parent\n-- #5481 `055f3ae` Apply AreSane() checks to the fees from the network\n-- #5580 `40d65eb` Preemptively catch a few potential bugs\n-- #5349 `f55c5e9` Implement test for merkle tree malleability in CPartialMerkleTree\n-- #5564 `a89b837` clarify obscure uses of EvalScript()\n-- #5521 `8e4578a` Reject non-final txs even in testnet/regtest\n-- #5707 `6af674e` Change hardcoded character constants to descriptive named constants for db keys\n-- #5286 `fcf646c` Change the default maximum OP_RETURN size to 80 bytes\n-- #5710 `175d86e` Add more information to errors in ReadBlockFromDisk\n-- #5948 `b36f1ce` Use GetAncestor to compute new target\n-- #5959 `a0bfc69` Add additional block index consistency checks\n-- #6058 `7e0e7f8` autoprune minor post-merge improvements\n-- #5159 `2cc1372` New fee estimation code\n-- #6102 `6fb90d8` Implement accurate UTXO cache size accounting\n-- #6129 `2a82298` Bug fix for clearing fCheckForPruning\n-- #5947 `e9af4e6` Alert if it is very likely we are getting a bad chain\n-- #6203 `c00ae64` Remove P2SH coinbase flag, no longer interesting\n-- #5985 `37b4e42` Fix removing of orphan transactions\n-- #6221 `6cb70ca` Prune: Support noncontiguous block files\n-- #6256 `fce474c` Use best header chain timestamps to detect partitioning\n-- #6233 `a587606` Advance pindexLastCommonBlock for blocks in chainActive\n-\n-### P2P protocol and network code\n-- #5507 `844ace9` Prevent DOS attacks on in-flight data structures\n-- #5770 `32a8b6a` Sanitize command strings before logging them\n-- #5859 `dd4ffce` Add correct bool combiner for net signals\n-- #5876 `8e4fd0c` Add a NODE_GETUTXO service bit and document NODE_NETWORK\n-- #6028 `b9311fb` Move nLastTry from CAddress to CAddrInfo\n-- #5662 `5048465` Change download logic to allow calling getdata on inbound peers\n-- #5971 `18d2832` replace absolute sleep with conditional wait\n-- #5918 `7bf5d5e` Use equivalent PoW for non-main-chain requests\n-- #6059 `f026ab6` chainparams: use SeedSpec6's rather than CAddress's for fixed seeds\n-- #6080 `31c0bf1` Add jonasschnellis dns seeder\n-- #5976 `9f7809f` Reduce download timeouts as blocks arrive\n-- #6172 `b4bbad1` Ignore getheaders requests when not synced\n-- #5875 `304892f` Be stricter in processing unrequested blocks\n-- #6333 `41bbc85` Hardcoded seeds update June 2015\n-\n-### Validation\n-- #5143 `48e1765` Implement BIP62 rule 6\n-- #5713 `41e6e4c` Implement BIP66\n-\n-### Build system\n-- #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms\n-- #5334 `cf87536` libbitcoinconsensus: Add pkg-config support\n-- #5514 `ed11d53` Fix 'make distcheck'\n-- #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only\n-- #5582 `e8a6639` Osx toolchain update\n-- #5684 `ab64022` osx: bump build sdk to 10.9\n-- #5695 `23ef5b7` depends: latest config.guess and config.sub\n-- #5509 `31dedb4` Fixes when compiling in c++11 mode\n-- #5819 `f8e68f7` release: use static libstdc++ and disable reduced exports by default\n-- #5510 `7c3fbc3` Big endian support\n-- #5149 `c7abfa5` Add script to verify all merge commits are signed\n-- #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails\n-- #6244 `0401aa2` configure: Detect (and reject) LibreSSL\n-- #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures\n-- #6285 `ef1d506` Fix scheduler build with some boost versions.\n-- #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5\n-- #6303 `b711599` gitian: add a gitian-win-signer descriptor\n-- #6246 `8ea6d37` Fix build on FreeBSD\n-- #6282 `daf956b` fix crash on shutdown when e.g. changing -txindex and abort action\n-- #6354 `bdf0d94` Gitian windows signing normalization\n-\n-### Wallet\n-- #2340 `811c71d` Discourage fee sniping with nLockTime\n-- #5485 `d01bcc4` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option\n-- #5508 `9a5cabf` Add RandAddSeedPerfmon to MakeNewKey\n-- #4805 `8204e19` Do not flush the wallet in AddToWalletIfInvolvingMe(..)\n-- #5319 `93b7544` Clean up wallet encryption code\n-- #5831 `df5c246` Subtract fee from amount\n-- #6076 `6c97fd1` wallet: fix boost::get usage with boost 1.58\n-- #5511 `23c998d` Sort pending wallet transactions before reaccepting\n-- #6126 `26e08a1` Change default nTxConfirmTarget to 2\n-- #6183 `75a4d51` Fix off-by-one error w/ nLockTime in the wallet\n-- #6276 `c9fd907` Fix getbalance * 0\n-\n-### GUI\n-- #5219 `f3af0c8` New icons\n-- #5228 `bb3c75b` HiDPI (retina) support for splash screen\n-- #5258 `73cbf0a` The RPC Console should be a QWidget to make window more independent\n-- #5488 `851dfc7` Light blue icon color for regtest\n-- #5547 `a39aa74` New icon for the debug window\n-- #5493 `e515309` Adopt style colour for button icons\n-- #5557 `70477a0` On close of splashscreen interrupt verifyDB\n-- #5559 `83be8fd` Make the command-line-args dialog better\n-- #5144 `c5380a9` Elaborate on signverify message dialog warning\n-- #5489 `d1aa3c6` Optimize PNG files\n-- #5649 `e0cd2f5` Use text-color icons for system tray Send/Receive menu entries\n-- #5651 `848f55d` Coin Control: Use U+2248 \"ALMOST EQUAL TO\" rather than a simple tilde\n-- #5626 `ab0d798` Fix icon sizes and column width\n-- #5683 `c7b22aa` add new osx dmg background picture\n-- #5620 `7823598` Payment request expiration bug fix\n-- #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField\n-- #5753 `0f44672` Add bitcoin logo to about screen\n-- #5629 `a956586` Prevent amount overflow problem with payment requests\n-- #5830 `215475a` Don't save geometry for options and about/help window\n-- #5793 `d26f0b2` Honor current network when creating autostart link\n-- #5847 `f238add` Startup script for centos, with documentation\n-- #5915 `5bd3a92` Fix a static qt5 crash when using certain versions of libxcb\n-- #5898 `bb56781` Fix rpc console font size to flexible metrics\n-- #5467 `bc8535b` Payment request / server work - part 2\n-- #6161 `180c164` Remove movable option for toolbar\n-- #6160 `0d862c2` Overviewpage: make sure warning icons gets colored\n-\n-### Tests\n-- #5453 `2f2d337` Add ability to run single test manually to RPC tests\n-- #5421 `886eb57` Test unexecuted OP_CODESEPARATOR\n-- #5530 `565b300` Additional rpc tests\n-- #5611 `37b185c` Fix spurious windows test failures after 012598880c\n-- #5613 `2eda47b` Fix smartfees test for change to relay policy\n-- #5612 `e3f5727` Fix zapwallettxes test\n-- #5642 `30a5b5f` Prepare paymentservertests for new unit tests\n-- #5784 `e3a3cd7` Fix usage of NegateSignatureS in script_tests\n-- #5813 `ee9f2bf` Add unit tests for next difficulty calculations\n-- #5855 `d7989c0` Travis: run unit tests in different orders\n-- #5852 `cdae53e` Reinitialize state in between individual unit tests.\n-- #5883 `164d7b6` tests: add a BasicTestingSetup and apply to all tests\n-- #5940 `446bb70` Regression test for ResendWalletTransactions\n-- #6052 `cf7adad` fix and enable bip32 unit test\n-- #6039 `734f80a` tests: Error when setgenerate is used on regtest\n-- #6074 `948beaf` Correct the PUSHDATA4 minimal encoding test in script_invalid.json\n-- #6032 `e08886d` Stop nodes after RPC tests, even with --nocleanup\n-- #6075 `df1609f` Add additional script edge condition tests\n-- #5981 `da38dc6` Python P2P testing \n-- #5958 `9ef00c3` Add multisig rpc tests\n-- #6112 `fec5c0e` Add more script edge condition tests\n-\n-### Miscellaneous\n-- #5457, #5506, #5952, #6047 Update libsecp256k1\n-- #5437 `84857e8` Add missing CAutoFile::IsNull() check in main\n-- #5490 `ec20fd7` Replace uint256/uint160 with opaque blobs where possible\n-- #5654, #5764 Adding jonasschnelli's GPG key\n-- #5477 `5f04d1d` OS X 10.10: LSSharedFileListItemResolve() is deprecated\n-- #5679 `beff11a` Get rid of DetectShutdownThread\n-- #5787 `9bd8c9b` Add fanquake PGP key\n-- #5366 `47a79bb` No longer check osx compatibility in RenameThread\n-- #5689 `07f4386` openssl: abstract out OPENSSL_cleanse\n-- #5708 `8b298ca` Add list of implemented BIPs\n-- #5809 `46bfbe7` Add bitcoin-cli man page\n-- #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported\n-- #5749 `d734d87` Help messages correctly formatted (79 chars)\n-- #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted\n-- #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables\n-- #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings\n-- #5965 `7c6bfb1` Add git-subtree-check.sh script\n-- #6033 `1623f6e` FreeBSD, OpenBSD thread renaming\n-- #6064 `b46e7c2` Several changes to mruset\n-- #6104 `3e2559c` Show an init message while activating best chain\n-- #6125 `351f73e` Clean up parsing of bool command line args\n-- #5964 `b4c219b` Lightweight task scheduler\n-- #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app\n-- #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks\n-- #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)\n-- #6159 `e1412d3` Catch errors on datadir lock and pidfile delete\n-- #6186 `182686c` Fix two problems in CSubnet parsing\n-- #6174 `df992b9` doc: add translation strings policy\n-- #6210 `dfdb6dd` build: disable optional use of gmp in internal secp256k1 build\n-- #6264 `94cd705` Remove translation for -help-debug options\n-- #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs\n-- #6319 `3f8fcc9` doc: update mailing list address\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- 21E14\n-- Adam Weiss\n-- Alex Morcos\n-- ayeowch\n-- azeteki\n-- Ben Holden-Crowther\n-- bikinibabe\n-- BitcoinPRReadingGroup\n-- Blake Jakopovic\n-- BtcDrak\n-- charlescharles\n-- Chris Arnesen\n-- Ciemon\n-- CohibAA\n-- Corinne Dashjr\n-- Cory Fields\n-- Cozz Lovan\n-- Daira Hopwood\n-- Daniel Kraft\n-- Dave Collins\n-- David A. Harding\n-- dexX7\n-- Earlz\n-- Eric Lombrozo\n-- Eric R. Schulz\n-- Everett Forth\n-- Flavien Charlon\n-- fsb4000\n-- Gavin Andresen\n-- Gregory Maxwell\n-- Heath\n-- Ivan Pustogarov\n-- Jacob Welsh\n-- Jameson Lopp\n-- Jason Lewicki\n-- Jeff Garzik\n-- Jonas Schnelli\n-- Jonathan Brown\n-- Jorge Tim\u00f3n\n-- joshr\n-- jtimon\n-- Julian Yap\n-- Luca Venturini\n-- Luke Dashjr\n-- Manuel Araoz\n-- MarcoFalke\n-- Matt Bogosian\n-- Matt Corallo\n-- Micha\n-- Michael Ford\n-- Mike Hearn\n-- mrbandrews\n-- Nicolas Benoit\n-- paveljanik\n-- Pavel Jan\u00edk\n-- Pavel Vasin\n-- Peter Todd\n-- Philip Kaufmann\n-- Pieter Wuille\n-- pstratem\n-- randy-waterhouse\n-- rion\n-- Rob Van Mieghem\n-- Ross Nicoll\n-- Ruben de Vries\n-- sandakersmann\n-- Shaul Kfir\n-- Shawn Wilkinson\n-- sinetek\n-- Suhas Daftuar\n-- svost\n-- Thomas Zander\n-- Tom Harding\n-- UdjinM6\n-- Vitalii Demianets\n-- Wladimir J. van der Laan\n-\n-And all those who contributed additional code review and/or security research:\n-\n-- Sergio Demian Lerner\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,172 +0,0 @@\n-Bitcoin Core version 0.11.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.11.1/>\n-\n-This is a new minor version release, bringing security fixes. It is recommended\n-to upgrade to this version as soon as possible.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility. There are no\n-known problems when downgrading from 0.11.x to 0.10.x.\n-\n-Notable changes\n-===============\n-\n-Fix buffer overflow in bundled upnp\n-------------------------------------\n-\n-Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n-the XML parser during initial network discovery.\n-\n-Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n-\n-This applies to the distributed executables only, not when building from source or\n-using distribution provided packages.\n-\n-Additionally, upnp has been disabled by default. This may result in a lower\n-number of reachable nodes on IPv4, however this prevents future libupnpc\n-vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n-\n-Test for LowS signatures before relaying\n------------------------------------------\n-\n-Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n-relaying or mining.  This removes a nuisance malleability vector.\n-\n-Consensus behavior is unchanged.\n-\n-If widely deployed this change would eliminate the last remaining known vector\n-for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n-it will block most transactions made by sufficiently out of date software.\n-\n-Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n-its discovery. So, while other malleability vectors where made\n-non-standard as soon as they were discovered, this one has remained\n-permitted. Even BIP62 did not propose applying this rule to\n-old version transactions, but conforming implementations have become\n-much more common since BIP62 was initially written.\n-\n-Bitcoin Core has produced compatible signatures since a28fb70e in\n-September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n-\n-This does not replace the need for BIP62 or similar, as miners can\n-still cooperate to break transactions.  Nor does it replace the\n-need for wallet software to handle malleability sanely[1]. This\n-only eliminates the cheap and irritating DOS attack.\n-\n-[1] On the Malleability of Bitcoin Transactions\n-Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n-\n-Minimum relay fee default increase\n------------------------------------\n-\n-The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n-to `0.00005`.\n-\n-This is necessitated by the current transaction flooding, causing\n-outrageous memory usage on nodes due to the mempool ballooning. This is a\n-temporary measure, bridging the time until a dynamic method for determining\n-this fee is merged (which will be in 0.12).\n-\n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11\n-release notes, in which this value was suggested)\n-\n-0.11.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-- #6438 `2531438` openssl: avoid config file load/race\n-- #6439 `980f820` Updated URL location of netinstall for Debian\n-- #6384 `8e5a969` qt: Force TLS1.0+ for SSL connections\n-- #6471 `92401c2` Depends: bump to qt 5.5\n-- #6224 `93b606a` Be even stricter in processing unrequested blocks\n-- #6571 `100ac4e` libbitcoinconsensus: avoid a crash in multi-threaded environments\n-- #6545 `649f5d9` Do not store more than 200 timedata samples.\n-- #6694 `834e299` [QT] fix thin space word wrap line break issue\n-- #6703 `1cd7952` Backport bugfixes to 0.11\n-- #6750 `5ed8d0b` Recent rejects backport to v0.11\n-- #6769 `71cc9d9` Test LowS in standardness, removes nuisance malleability vector.\n-- #6789 `b4ad73f` Update miniupnpc to 1.9.20151008\n-- #6785 `b4dc33e` Backport to v0.11: In (strCommand == \"tx\"), return if AlreadyHave()\n-- #6412 `0095b9a` Test whether created sockets are select()able\n-- #6795 `4dbcec0` net: Disable upnp by default\n-- #6793 `e7bcc4a` Bump minrelaytxfee default\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Adam Weiss\n-- Alex Morcos\n-- Casey Rodarmor\n-- Cory Fields\n-- fanquake\n-- Gregory Maxwell\n-- Jonas Schnelli\n-- J Ross Nicoll\n-- Luke Dashjr\n-- Pavel Jan\u00edk\n-- Pavel Vasin\n-- Peter Todd\n-- Pieter Wuille\n-- randy-waterhouse\n-- Ross Nicoll\n-- Suhas Daftuar\n-- tailsjoin\n-- \u0e3ftcDrak\n-- Tom Harding\n-- Veres Lajos\n-- Wladimir J. van der Laan\n-\n-And those who contributed additional code review and/or security research:\n-\n-- timothy on IRC for reporting the issue\n-- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,217 +0,0 @@\n-Bitcoin Core version 0.11.2 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.11.2/>\n-\n-This is a new minor version release, bringing bug fixes, the BIP65\n-(CLTV) consensus change, and relay policy preparation for BIP113. It is\n-recommended to upgrade to this version as soon as possible.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility. There are no\n-known problems when downgrading from 0.11.x to 0.10.x.\n-\n-Notable changes since 0.11.1\n-============================\n-\n-BIP65 soft fork to enforce OP_CHECKLOCKTIMEVERIFY opcode\n---------------------------------------------------------\n-\n-This release includes several changes related to the [BIP65][] soft fork\n-which redefines the existing OP_NOP2 opcode as OP_CHECKLOCKTIMEVERIFY\n-(CLTV) so that a transaction output can be made unspendable until a\n-specified point in the future.\n-\n-1. This release will only relay and mine transactions spending a CLTV\n-   output if they comply with the BIP65 rules as provided in code.\n-\n-2. This release will produce version 4 blocks by default. Please see the\n-   *notice to miners* below.\n-\n-3. Once 951 out of a sequence of 1,001 blocks on the local node's best block\n-   chain contain version 4 (or higher) blocks, this release will no\n-   longer accept new version 3 blocks and it will only accept version 4\n-   blocks if they comply with the BIP65 rules for CLTV.\n-\n-For more information about the soft-forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/6351>\n-\n-Graphs showing the progress towards block version 4 adoption may be\n-found at the URLs below:\n-\n-- Block versions over the last 50,000 blocks as progress towards BIP65\n-  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n-\n-- Block versions over the last 2,000 blocks showing the days to the\n-  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n-\n-**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n-version 4 blocks only, and any mining software relying on its\n-getblocktemplate must be updated in parallel to use libblkmaker either\n-version 0.4.3 or any version from 0.5.2 onward.\n-\n-- If you are solo mining, this will affect you the moment you upgrade\n-  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n-  status.\n-\n-- If you are mining with the stratum mining protocol: this does not\n-  affect you.\n-\n-- If you are mining with the getblocktemplate protocol to a pool: this\n-  will affect you at the pool operator\u2019s discretion, which must be no\n-  later than BIP65 achieving its 951/1001 status.\n-\n-[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n-\n-BIP113 mempool-only locktime enforcement using GetMedianTimePast()\n-----------------------------------------------------------------\n-\n-Bitcoin transactions currently may specify a locktime indicating when\n-they may be added to a valid block.  Current consensus rules require\n-that blocks have a block header time greater than the locktime specified\n-in any transaction in that block.\n-\n-Miners get to choose what time they use for their header time, with the\n-consensus rule being that no node will accept a block whose time is more\n-than two hours in the future.  This creates a incentive for miners to\n-set their header times to future values in order to include locktimed\n-transactions which weren't supposed to be included for up to two more\n-hours.\n-\n-The consensus rules also specify that valid blocks may have a header\n-time greater than that of the median of the 11 previous blocks.  This\n-GetMedianTimePast() time has a key feature we generally associate with\n-time: it can't go backwards.\n-\n-[BIP113][] specifies a soft fork (**not enforced in this release**) that\n-weakens this perverse incentive for individual miners to use a future\n-time by requiring that valid blocks have a computed GetMedianTimePast()\n-greater than the locktime specified in any transaction in that block.\n-\n-Mempool inclusion rules currently require transactions to be valid for\n-immediate inclusion in a block in order to be accepted into the mempool.\n-This release begins applying the BIP113 rule to received transactions,\n-so transaction whose time is greater than the GetMedianTimePast() will\n-no longer be accepted into the mempool.\n-\n-**Implication for miners:** you will begin rejecting transactions that\n-would not be valid under BIP113, which will prevent you from producing\n-invalid blocks if/when BIP113 is enforced on the network. Any\n-transactions which are valid under the current rules but not yet valid\n-under the BIP113 rules will either be mined by other miners or delayed\n-until they are valid under BIP113. Note, however, that time-based\n-locktime transactions are more or less unseen on the network currently.\n-\n-**Implication for users:** GetMedianTimePast() always trails behind the\n-current time, so a transaction locktime set to the present time will be\n-rejected by nodes running this release until the median time moves\n-forward. To compensate, subtract one hour (3,600 seconds) from your\n-locktimes to allow those transactions to be included in mempools at\n-approximately the expected time.\n-\n-[BIP113]: https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki\n-\n-Windows bug fix for corrupted UTXO database on unclean shutdowns\n-----------------------------------------------------------------\n-\n-Several Windows users reported that they often need to reindex the\n-entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n-(or an unclean shutdown of Windows itself). Although unclean shutdowns\n-remain unsafe, this release no longer relies on memory-mapped files for\n-the UTXO database, which significantly reduced the frequency of unclean\n-shutdowns leading to required reindexes during testing.\n-\n-For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n-\n-Other fixes for database corruption on Windows are expected in the\n-next major release.\n-\n-0.11.2 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-- #6124 `684636b` Make CScriptNum() take nMaxNumSize as an argument\n-- #6124 `4fa7a04` Replace NOP2 with CHECKLOCKTIMEVERIFY (BIP65)\n-- #6124 `6ea5ca4` Enable CHECKLOCKTIMEVERIFY as a standard script verify flag\n-- #6351 `5e82e1c` Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n-- #6353 `ba1da90` Show softfork status in getblockchaininfo\n-- #6351 `6af25b0` Add BIP65 to getblockchaininfo softforks list\n-- #6688 `01878c9` Fix locking in GetTransaction\n-- #6653 `b3eaa30` [Qt] Raise debug window when requested\n-- #6600 `1e672ae` Debian/Ubuntu: Include bitcoin-tx binary\n-- #6600 `2394f4d` Debian/Ubuntu: Split bitcoin-tx into its own package\n-- #5987 `33d6825` Bugfix: Allow mining on top of old tip blocks for testnet\n-- #6852 `21e58b8` build: make sure OpenSSL heeds noexecstack\n-- #6846 `af6edac` alias `-h` for `--help`\n-- #6867 `95a5039` Set TCP_NODELAY on P2P sockets.\n-- #6856 `dfe55bd` Do not allow blockfile pruning during reindex.\n-- #6566 `a1d3c6f` Add rules--presently disabled--for using GetMedianTimePast as end point for lock-time calculations\n-- #6566 `f720c5f` Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\n-- #6917 `0af5b8e` leveldb: Win32WritableFile without memory mapping\n-- #6948 `4e895b0` Always flush block and undo when switching to new file\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- \u0e3ftcDrak\n-- Chris Kleeschulte\n-- Daniel Cousens\n-- Diego Viola\n-- Eric Lombrozo\n-- Esteban Ordano\n-- Gregory Maxwell\n-- Luke Dashjr\n-- Marco Falke\n-- Mark Friedenbach\n-- Matt Corallo\n-- Micha\n-- Mitchell Cash\n-- Peter Todd\n-- Pieter Wuille\n-- Wladimir J. van der Laan\n-- Zak Wilcox\n-\n-And those who contributed additional code review and/or security research.\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "cf74a1797520713b405da0ac47e54fb978e344da",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 894,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,894 +0,0 @@\n-Bitcoin Core version 0.12.0 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.12.0/>\n-\n-This is a new major version release, bringing new features and other improvements.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n------------------\n-\n-### Downgrade to a version < 0.10.0\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-### Downgrade to a version < 0.12.0\n-\n-Because release 0.12.0 and later will obfuscate the chainstate on every\n-fresh sync or reindex, the chainstate is not backwards-compatible with\n-pre-0.12 versions of Bitcoin Core or other software.\n-\n-If you want to downgrade after you have done a reindex with 0.12.0 or later,\n-you will need to reindex when you first start Bitcoin Core version 0.11 or\n-earlier.\n-\n-Notable changes\n-===============\n-\n-Signature validation using libsecp256k1\n----------------------------------------\n-\n-ECDSA signatures inside Bitcoin transactions now use validation using\n-[libsecp256k1](https://github.com/bitcoin-core/secp256k1) instead of OpenSSL.\n-\n-Depending on the platform, this means a significant speedup for raw signature\n-validation speed. The advantage is largest on x86_64, where validation is over\n-five times faster. In practice, this translates to a raw reindexing and new\n-block validation times that are less than half of what it was before.\n-\n-Libsecp256k1 has undergone very extensive testing and validation.\n-\n-A side effect of this change is that libconsensus no longer depends on OpenSSL.\n-\n-Reduce upload traffic\n----------------------\n-\n-A major part of the outbound traffic is caused by serving historic blocks to\n-other nodes in initial block download state.\n-\n-It is now possible to reduce the total upload traffic via the `-maxuploadtarget`\n-parameter. This is *not* a hard limit but a threshold to minimize the outbound\n-traffic. When the limit is about to be reached, the uploaded data is cut by not\n-serving historic blocks (blocks older than one week).\n-Moreover, any SPV peer is disconnected when they request a filtered block.\n-\n-This option can be specified in MiB per day and is turned off by default\n-(`-maxuploadtarget=0`).\n-The recommended minimum is 144 * MAX_BLOCK_SIZE (currently 144MB) per day.\n-\n-Whitelisted peers will never be disconnected, although their traffic counts for\n-calculating the target.\n-\n-A more detailed documentation about keeping traffic low can be found in\n-[/doc/reduce-traffic.md](/doc/reduce-traffic.md).\n-\n-Direct headers announcement (BIP 130)\n--------------------------------------\n-\n-Between compatible peers, [BIP 130]\n-(https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki)\n-direct headers announcement is used. This means that blocks are advertised by\n-announcing their headers directly, instead of just announcing the hash. In a\n-reorganization, all new headers are sent, instead of just the new tip. This\n-can often prevent an extra roundtrip before the actual block is downloaded.\n-\n-Memory pool limiting\n---------------------\n-\n-Previous versions of Bitcoin Core had their mempool limited by checking\n-a transaction's fees against the node's minimum relay fee. There was no\n-upper bound on the size of the mempool and attackers could send a large\n-number of transactions paying just slighly more than the default minimum\n-relay fee to crash nodes with relatively low RAM. A temporary workaround\n-for previous versions of Bitcoin Core was to raise the default minimum\n-relay fee.\n-\n-Bitcoin Core 0.12 will have a strict maximum size on the mempool. The\n-default value is 300 MB and can be configured with the `-maxmempool`\n-parameter. Whenever a transaction would cause the mempool to exceed\n-its maximum size, the transaction that (along with in-mempool descendants) has\n-the lowest total feerate (as a package) will be evicted and the node's effective\n-minimum relay feerate will be increased to match this feerate plus the initial\n-minimum relay feerate. The initial minimum relay feerate is set to\n-1000 satoshis per kB.\n-\n-Bitcoin Core 0.12 also introduces new default policy limits on the length and\n-size of unconfirmed transaction chains that are allowed in the mempool\n-(generally limiting the length of unconfirmed chains to 25 transactions, with a\n-total size of 101 KB).  These limits can be overriden using command line\n-arguments; see the extended help (`--help -help-debug`) for more information.\n-\n-Opt-in Replace-by-fee transactions\n-----------------------------------\n-\n-It is now possible to replace transactions in the transaction memory pool of\n-Bitcoin Core 0.12 nodes. Bitcoin Core will only allow replacement of\n-transactions which have any of their inputs' `nSequence` number set to less\n-than `0xffffffff - 1`.  Moreover, a replacement transaction may only be\n-accepted when it pays sufficient fee, as described in [BIP 125]\n-(https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki).\n-\n-Transaction replacement can be disabled with a new command line option,\n-`-mempoolreplacement=0`.  Transactions signaling replacement under BIP125 will\n-still be allowed into the mempool in this configuration, but replacements will\n-be rejected.  This option is intended for miners who want to continue the\n-transaction selection behavior of previous releases.\n-\n-The `-mempoolreplacement` option is *not recommended* for wallet users seeking\n-to avoid receipt of unconfirmed opt-in transactions, because this option does\n-not prevent transactions which are replaceable under BIP 125 from being accepted\n-(only subsequent replacements, which other nodes on the network that implement\n-BIP 125 are likely to relay and mine).  Wallet users wishing to detect whether\n-a transaction is subject to replacement under BIP 125 should instead use the\n-updated RPC calls `gettransaction` and `listtransactions`, which now have an\n-additional field in the output indicating if a transaction is replaceable under\n-BIP125 (\"bip125-replaceable\").\n-\n-Note that the wallet in Bitcoin Core 0.12 does not yet have support for\n-creating transactions that would be replaceable under BIP 125.\n-\n-\n-RPC: Random-cookie RPC authentication\n--------------------------------------\n-\n-When no `-rpcpassword` is specified, the daemon now uses a special 'cookie'\n-file for authentication. This file is generated with random content when the\n-daemon starts, and deleted when it exits. Its contents are used as\n-authentication token. Read access to this file controls who can access through\n-RPC. By default it is stored in the data directory but its location can be\n-overridden with the option `-rpccookiefile`.\n-\n-This is similar to Tor's CookieAuthentication: see\n-https://www.torproject.org/docs/tor-manual.html.en\n-\n-This allows running bitcoind without having to do any manual configuration.\n-\n-Relay: Any sequence of pushdatas in OP_RETURN outputs now allowed\n------------------------------------------------------------------\n-\n-Previously OP_RETURN outputs with a payload were only relayed and mined if they\n-had a single pushdata. This restriction has been lifted to allow any\n-combination of data pushes and numeric constant opcodes (OP_1 to OP_16) after\n-the OP_RETURN. The limit on OP_RETURN output size is now applied to the entire\n-serialized scriptPubKey, 83 bytes by default. (the previous 80 byte default plus\n-three bytes overhead)\n-\n-Relay: New and only new blocks relayed when pruning\n----------------------------------------------------\n-\n-When running in pruned mode, the client will now relay new blocks. When\n-responding to the `getblocks` message, only hashes of blocks that are on disk\n-and are likely to remain there for some reasonable time window (1 hour) will be\n-returned (previously all relevant hashes were returned).\n-\n-Relay and Mining: Priority transactions\n----------------------------------------\n-\n-Bitcoin Core has a heuristic 'priority' based on coin value and age. This\n-calculation is used for relaying of transactions which do not pay the\n-minimum relay fee, and can be used as an alternative way of sorting\n-transactions for mined blocks. Bitcoin Core will relay transactions with\n-insufficient fees depending on the setting of `-limitfreerelay=<r>` (default:\n-`r=15` kB per minute) and `-blockprioritysize=<s>`.\n-\n-In Bitcoin Core 0.12, when mempool limit has been reached a higher minimum\n-relay fee takes effect to limit memory usage. Transactions which do not meet\n-this higher effective minimum relay fee will not be relayed or mined even if\n-they rank highly according to the priority heuristic.\n-\n-The mining of transactions based on their priority is also now disabled by\n-default. To re-enable it, simply set `-blockprioritysize=<n>` where is the size\n-in bytes of your blocks to reserve for these transactions. The old default was\n-50k, so to retain approximately the same policy, you would set\n-`-blockprioritysize=50000`.\n-\n-Additionally, as a result of computational simplifications, the priority value\n-used for transactions received with unconfirmed inputs is lower than in prior\n-versions due to avoiding recomputing the amounts as input transactions confirm.\n-\n-External miner policy set via the `prioritisetransaction` RPC to rank\n-transactions already in the mempool continues to work as it has previously.\n-Note, however, that if mining priority transactions is left disabled, the\n-priority delta will be ignored and only the fee metric will be effective.\n-\n-This internal automatic prioritization handling is being considered for removal\n-entirely in Bitcoin Core 0.13, and it is at this time undecided whether the\n-more accurate priority calculation for chained unconfirmed transactions will be\n-restored. Community direction on this topic is particularly requested to help\n-set project priorities.\n-\n-Automatically use Tor hidden services\n--------------------------------------\n-\n-Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n-API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n-\n-This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. Bitcoin Core will also use Tor automatically to connect\n-to other .onion nodes if the control socket can be successfully opened. This\n-will positively affect the number of available .onion nodes and their usage.\n-\n-This new feature is enabled by default if Bitcoin Core is listening, and\n-a connection to Tor can be made. It can be configured with the `-listenonion`,\n-`-torcontrol` and `-torpassword` settings. To show verbose debugging\n-information, pass `-debug=tor`.\n-\n-Notifications through ZMQ\n--------------------------\n-\n-Bitcoind can now (optionally) asynchronously notify clients through a\n-ZMQ-based PUB socket of the arrival of new transactions and blocks.\n-This feature requires installation of the ZMQ C API library 4.x and\n-configuring its use through the command line or configuration file.\n-Please see [docs/zmq.md](/doc/zmq.md) for details of operation.\n-\n-Wallet: Transaction fees\n-------------------------\n-\n-Various improvements have been made to how the wallet calculates\n-transaction fees.\n-\n-Users can decide to pay a predefined fee rate by setting `-paytxfee=<n>`\n-(or `settxfee <n>` rpc during runtime). A value of `n=0` signals Bitcoin\n-Core to use floating fees. By default, Bitcoin Core will use floating\n-fees.\n-\n-Based on past transaction data, floating fees approximate the fees\n-required to get into the `m`th block from now. This is configurable\n-with `-txconfirmtarget=<m>` (default: `2`).\n-\n-Sometimes, it is not possible to give good estimates, or an estimate\n-at all. Therefore, a fallback value can be set with `-fallbackfee=<f>`\n-(default: `0.0002` BTC/kB).\n-\n-At all times, Bitcoin Core will cap fees at `-maxtxfee=<x>` (default:\n-0.10) BTC.\n-Furthermore, Bitcoin Core will never create transactions paying less than\n-the current minimum relay fee.\n-Finally, a user can set the minimum fee rate for all transactions with\n-`-mintxfee=<i>`, which defaults to 1000 satoshis per kB.\n-\n-Wallet: Negative confirmations and conflict detection\n------------------------------------------------------\n-\n-The wallet will now report a negative number for confirmations that indicates\n-how deep in the block chain the conflict is found. For example, if a transaction\n-A has 5 confirmations and spends the same input as a wallet transaction B, B\n-will be reported as having -5 confirmations. If another wallet transaction C\n-spends an output from B, it will also be reported as having -5 confirmations.\n-To detect conflicts with historical transactions in the chain a one-time\n-`-rescan` may be needed.\n-\n-Unlike earlier versions, unconfirmed but non-conflicting transactions will never\n-get a negative confirmation count. They are not treated as spendable unless\n-they're coming from ourself (change) and accepted into our local mempool,\n-however. The new \"trusted\" field in the `listtransactions` RPC output\n-indicates whether outputs of an unconfirmed transaction are considered\n-spendable.\n-\n-Wallet: Merkle branches removed\n--------------------------------\n-\n-Previously, every wallet transaction stored a Merkle branch to prove its\n-presence in blocks. This wasn't being used for more than an expensive\n-sanity check. Since 0.12, these are no longer stored. When loading a\n-0.12 wallet into an older version, it will automatically rescan to avoid\n-failed checks.\n-\n-Wallet: Pruning\n----------------\n-\n-With 0.12 it is possible to use wallet functionality in pruned mode.\n-This can reduce the disk usage from currently around 60 GB to\n-around 2 GB.\n-\n-However, rescans as well as the RPCs `importwallet`, `importaddress`,\n-`importprivkey` are disabled.\n-\n-To enable block pruning set `prune=<N>` on the command line or in\n-`bitcoin.conf`, where `N` is the number of MiB to allot for\n-raw block & undo data.\n-\n-A value of 0 disables pruning. The minimal value above 0 is 550. Your\n-wallet is as secure with high values as it is with low ones. Higher\n-values merely ensure that your node will not shut down upon blockchain\n-reorganizations of more than 2 days - which are unlikely to happen in\n-practice. In future releases, a higher value may also help the network\n-as a whole: stored blocks could be served to other nodes.\n-\n-For further information about pruning, you may also consult the [release\n-notes of v0.11.0](https://github.com/bitcoin/bitcoin/blob/v0.11.0/doc/release-notes.md#block-file-pruning).\n-\n-`NODE_BLOOM` service bit\n-------------------------\n-\n-Support for the `NODE_BLOOM` service bit, as described in [BIP\n-111](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n-added to the P2P protocol code.\n-\n-BIP 111 defines a service bit to allow peers to advertise that they support\n-bloom filters (such as used by SPV clients) explicitly. It also bumps the protocol\n-version to allow peers to identify old nodes which allow bloom filtering of the\n-connection despite lacking the new service bit.\n-\n-In this version, it is only enforced for peers that send protocol versions\n-`>=70011`. For the next major version it is planned that this restriction will be\n-removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n-service bit for nodes that report versions newer than 70011.\n-\n-Option parsing behavior\n------------------------\n-\n-Command line options are now parsed strictly in the order in which they are\n-specified. It used to be the case that `-X -noX` ends up, unintuitively, with X\n-set, as `-X` had precedence over `-noX`. This is no longer the case. Like for\n-other software, the last specified value for an option will hold.\n-\n-RPC: Low-level API changes\n---------------------------\n-\n-- Monetary amounts can be provided as strings. This means that for example the\n-  argument to sendtoaddress can be \"0.0001\" instead of 0.0001. This can be an\n-  advantage if a JSON library insists on using a lossy floating point type for\n-  numbers, which would be dangerous for monetary amounts.\n-\n-* The `asm` property of each scriptSig now contains the decoded signature hash\n-  type for each signature that provides a valid defined hash type.\n-\n-* OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP 65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n-\n-The following items contain assembly representations of scriptSig signatures\n-and are affected by this change:\n-\n-- RPC `getrawtransaction`\n-- RPC `decoderawtransaction`\n-- RPC `decodescript`\n-- REST `/rest/tx/` (JSON format)\n-- REST `/rest/block/` (JSON format when including extended tx details)\n-- `bitcoin-tx -json`\n-\n-For example, the `scriptSig.asm` property of a transaction input that\n-previously showed an assembly representation of:\n-\n-    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c509001 400000 OP_NOP2\n-\n-now shows as:\n-\n-    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c5090[ALL] 400000 OP_CHECKLOCKTIMEVERIFY\n-\n-Note that the output of the RPC `decodescript` did not change because it is\n-configured specifically to process scriptPubKey and not scriptSig scripts.\n-\n-RPC: SSL support dropped\n-------------------------\n-\n-SSL support for RPC, previously enabled by the option `rpcssl` has been dropped\n-from both the client and the server. This was done in preparation for removing\n-the dependency on OpenSSL for the daemon completely.\n-\n-Trying to use `rpcssl` will result in an error:\n-\n-    Error: SSL mode for RPC (-rpcssl) is no longer supported.\n-\n-If you are one of the few people that relies on this feature, a flexible\n-migration path is to use `stunnel`. This is an utility that can tunnel\n-arbitrary TCP connections inside SSL. On e.g. Ubuntu it can be installed with:\n-\n-    sudo apt-get install stunnel4\n-\n-Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on port 18332 do:\n-\n-    stunnel -d 28332 -r 127.0.0.1:18332 -p stunnel.pem -P ''\n-\n-It can also be set up system-wide in inetd style.\n-\n-Another way to re-attain SSL would be to setup a httpd reverse proxy. This solution\n-would allow the use of different authentication, loadbalancing, on-the-fly compression and\n-caching. A sample config for apache2 could look like:\n-\n-    Listen 443\n-\n-    NameVirtualHost *:443\n-    <VirtualHost *:443>\n-\n-    SSLEngine On\n-    SSLCertificateFile /etc/apache2/ssl/server.crt\n-    SSLCertificateKeyFile /etc/apache2/ssl/server.key\n-\n-    <Location /bitcoinrpc>\n-        ProxyPass http://127.0.0.1:8332/\n-        ProxyPassReverse http://127.0.0.1:8332/\n-        # optional enable digest auth\n-        # AuthType Digest\n-        # ...\n-\n-        # optional bypass bitcoind rpc basic auth\n-        # RequestHeader set Authorization \"Basic <hash>\"\n-        # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n-    </Location>\n-\n-    # Or, balance the load:\n-    # ProxyPass / balancer://balancer_cluster_name\n-\n-    </VirtualHost>\n-\n-Mining Code Changes\n--------------------\n-\n-The mining code in 0.12 has been optimized to be significantly faster and use less\n-memory. As part of these changes, consensus critical calculations are cached on a\n-transaction's acceptance into the mempool and the mining code now relies on the\n-consistency of the mempool to assemble blocks. However all blocks are still tested\n-for validity after assembly.\n-\n-Other P2P Changes\n------------------\n-\n-The list of banned peers is now stored on disk rather than in memory.\n-Restarting bitcoind will no longer clear out the list of banned peers; instead\n-a new RPC call (`clearbanned`) can be used to manually clear the list.  The new\n-`setban` RPC call can also be used to manually ban or unban a peer.\n-\n-0.12.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and REST\n-\n-- #6121 `466f0ea` Convert entire source tree from json_spirit to UniValue (Jonas Schnelli)\n-- #6234 `d38cd47` fix rpcmining/getblocktemplate univalue transition logic error (Jonas Schnelli)\n-- #6239 `643114f` Don't go through double in AmountFromValue and ValueFromAmount (Wladimir J. van der Laan)\n-- #6266 `ebab5d3` Fix univalue handling of \\u0000 characters. (Daniel Kraft)\n-- #6276 `f3d4dbb` Fix getbalance * 0 (Tom Harding)\n-- #6257 `5ebe7db` Add `paytxfee` and `errors` JSON fields where appropriate (Stephen)\n-- #6271 `754aae5` New RPC command disconnectnode (Alex van der Peet)\n-- #6158 `0abfa8a` Add setban/listbanned RPC commands (Jonas Schnelli)\n-- #6307 `7ecdcd9` rpcban fixes (Jonas Schnelli)\n-- #6290 `5753988` rpc: make `gettxoutsettinfo` run lock-free (Wladimir J. van der Laan)\n-- #6262 `247b914` Return all available information via RPC call \"validateaddress\" (dexX7)\n-- #6339 `c3f0490` UniValue: don't escape solidus, keep espacing of reverse solidus (Jonas Schnelli)\n-- #6353 `6bcb0a2` Show softfork status in getblockchaininfo (Wladimir J. van der Laan)\n-- #6247 `726e286` Add getblockheader RPC call (Peter Todd)\n-- #6362 `d6db115` Fix null id in RPC response during startup (Forrest Voight)\n-- #5486 `943b322` [REST] JSON support for /rest/headers (Jonas Schnelli)\n-- #6379 `c52e8b3` rpc: Accept scientific notation for monetary amounts in JSON (Wladimir J. van der Laan)\n-- #6388 `fd5dfda` rpc: Implement random-cookie based authentication (Wladimir J. van der Laan)\n-- #6457 `3c923e8` Include pruned state in chaininfo.json (Simon Males)\n-- #6456 `bfd807f` rpc: Avoid unnecessary parsing roundtrip in number formatting, fix locale issue (Wladimir J. van der Laan)\n-- #6380 `240b30e` rpc: Accept strings in AmountFromValue (Wladimir J. van der Laan)\n-- #6346 `6bb2805` Add OP_RETURN support in createrawtransaction RPC call, add tests. (paveljanik)\n-- #6013 `6feeec1` [REST] Add memory pool API (paveljanik)\n-- #6576 `da9beb2` Stop parsing JSON after first finished construct. (Daniel Kraft)\n-- #5677 `9aa9099` libevent-based http server (Wladimir J. van der Laan)\n-- #6633 `bbc2b39` Report minimum ping time in getpeerinfo (Matt Corallo)\n-- #6648 `cd381d7` Simplify logic of REST request suffix parsing. (Daniel Kraft)\n-- #6695 `5e21388` libevent http fixes (Wladimir J. van der Laan)\n-- #5264 `48efbdb` show scriptSig signature hash types in transaction decodes. fixes #3166 (mruddy)\n-- #6719 `1a9f19a` Make HTTP server shutdown more graceful (Wladimir J. van der Laan)\n-- #6859 `0fbfc51` http: Restrict maximum size of http + headers (Wladimir J. van der Laan)\n-- #5936 `bf7c195` [RPC] Add optional locktime to createrawtransaction (Tom Harding)\n-- #6877 `26f5b34` rpc: Add maxmempool and effective min fee to getmempoolinfo (Wladimir J. van der Laan)\n-- #6970 `92701b3` Fix crash in validateaddress with -disablewallet (Wladimir J. van der Laan)\n-- #5574 `755b4ba` Expose GUI labels in RPC as comments (Luke-Jr)\n-- #6990 `dbd2c13` http: speed up shutdown (Wladimir J. van der Laan)\n-- #7013 `36baa9f` Remove LOCK(cs_main) from decodescript (Peter Todd)\n-- #6999 `972bf9c` add (max)uploadtarget infos to getnettotals RPC help (Jonas Schnelli)\n-- #7011 `31de241` Add mediantime to getblockchaininfo (Peter Todd)\n-- #7065 `f91e29f` http: add Boost 1.49 compatibility (Wladimir J. van der Laan)\n-- #7087 `be281d8` [Net]Add -enforcenodebloom option (Patrick Strateman)\n-- #7044 `438ee59` RPC: Added additional config option for multiple RPC users. (Gregory Sanders)\n-- #7072 `c143c49` [RPC] Add transaction size to JSON output (Nikita Zhavoronkov)\n-- #7022 `9afbd96` Change default block priority size to 0 (Alex Morcos)\n-- #7141 `c0c08c7` rpc: Don't translate warning messages (Wladimir J. van der Laan)\n-- #7312 `fd4bd50` Add RPC call abandontransaction (Alex Morcos)\n-- #7222 `e25b158` RPC: indicate which transactions are replaceable (Suhas Daftuar)\n-- #7472 `b2f2b85` rpc: Add WWW-Authenticate header to 401 response (Wladimir J. van der Laan)\n-- #7469 `9cb31e6` net.h fix spelling: misbeha{b,v}ing (Matt)\n-\n-### Configuration and command-line options\n-\n-- #6164 `8d05ec7` Allow user to use -debug=1 to enable all debugging (lpescher)\n-- #5288 `4452205` Added `-whiteconnections=<n>` option (Josh Lehan)\n-- #6284 `10ac38e` Fix argument parsing oddity with -noX (Wladimir J. van der Laan)\n-- #6489 `c9c017a` Give a better error message if system clock is bad (Casey Rodarmor)\n-- #6462 `c384800` implement uacomment config parameter which can add comments to user agent as per BIP-0014 (Pavol Rusnak)\n-- #6647 `a3babc8` Sanitize uacomment (MarcoFalke)\n-- #6742 `3b2d37c` Changed logging to make -logtimestamps to work also for -printtoconsole (arnuschky)\n-- #6846 `2cd020d` alias -h for -help (Daniel Cousens)\n-- #6622 `7939164` Introduce -maxuploadtarget (Jonas Schnelli)\n-- #6881 `2b62551` Debug: Add option for microsecond precision in debug.log (Suhas Daftuar)\n-- #6776 `e06c14f` Support -checkmempool=N, which runs checks once every N transactions (Pieter Wuille)\n-- #6896 `d482c0a` Make -checkmempool=1 not fail through int32 overflow (Pieter Wuille)\n-- #6993 `b632145` Add -blocksonly option (Patrick Strateman)\n-- #7323 `a344880` 0.12: Backport -bytespersigop option (Luke-Jr)\n-- #7386 `da83ecd` Add option `-permitrbf` to set transaction replacement policy (Wladimir J. van der Laan)\n-- #7290 `b16b5bc` Add missing options help (MarcoFalke)\n-- #7440 `c76bfff` Rename permitrbf to mempoolreplacement and provide minimal string-list forward compatibility (Luke-Jr)\n-\n-### Block and transaction handling\n-\n-- #6203 `f00b623` Remove P2SH coinbase flag, no longer interesting (Luke-Jr)\n-- #6222 `9c93ee5` Explicitly set tx.nVersion for the genesis block and mining tests (Mark Friedenbach)\n-- #5985 `3a1d3e8` Fix removing of orphan transactions (Alex Morcos)\n-- #6221 `dd8fe82` Prune: Support noncontiguous block files (Adam Weiss)\n-- #6124 `41076aa` Mempool only CHECKLOCKTIMEVERIFY (BIP65) verification, unparameterized version (Peter Todd)\n-- #6329 `d0a10c1` acceptnonstdtxn option to skip (most) \"non-standard transaction\" checks, for testnet/regtest only (Luke-Jr)\n-- #6410 `7cdefb9` Implement accurate memory accounting for mempool (Pieter Wuille)\n-- #6444 `24ce77d` Exempt unspendable transaction outputs from dust checks (dexX7)\n-- #5913 `a0625b8` Add absurdly high fee message to validation state (Shaul Kfir)\n-- #6177 `2f746c6` Prevent block.nTime from decreasing (Mark Friedenbach)\n-- #6377 `e545371` Handle no chain tip available in InvalidChainFound() (Ross Nicoll)\n-- #6551 `39ddaeb` Handle leveldb::DestroyDB() errors on wipe failure (Adam Weiss)\n-- #6654 `b0ce450` Mempool package tracking (Suhas Daftuar)\n-- #6715 `82d2aef` Fix mempool packages (Suhas Daftuar)\n-- #6680 `4f44530` use CBlockIndex instead of uint256 for UpdatedBlockTip signal (Jonas Schnelli)\n-- #6650 `4fac576` Obfuscate chainstate (James O'Beirne)\n-- #6777 `9caaf6e` Unobfuscate chainstate data in CCoinsViewDB::GetStats (James O'Beirne)\n-- #6722 `3b20e23` Limit mempool by throwing away the cheapest txn and setting min relay fee to it (Matt Corallo)\n-- #6889 `38369dd` fix locking issue with new mempool limiting (Jonas Schnelli)\n-- #6464 `8f3b3cd` Always clean up manual transaction prioritization (Casey Rodarmor)\n-- #6865 `d0badb9` Fix chainstate serialized_size computation (Pieter Wuille)\n-- #6566 `ff057f4` BIP-113: Mempool-only median time-past as endpoint for lock-time calculations (Mark Friedenbach)\n-- #6934 `3038eb6` Restores mempool only BIP113 enforcement (Gregory Maxwell)\n-- #6965 `de7d459` Benchmark sanity checks and fork checks in ConnectBlock (Matt Corallo)\n-- #6918 `eb6172a` Make sigcache faster, more efficient, larger (Pieter Wuille)\n-- #6771 `38ed190` Policy: Lower default limits for tx chains (Alex Morcos)\n-- #6932 `73fa5e6` ModifyNewCoins saves database lookups (Alex Morcos)\n-- #5967 `05d5918` Alter assumptions in CCoinsViewCache::BatchWrite (Alex Morcos)\n-- #6871 `0e93586` nSequence-based Full-RBF opt-in (Peter Todd)\n-- #7008 `eb77416` Lower bound priority (Alex Morcos)\n-- #6915 `2ef5ffa` [Mempool] Improve removal of invalid transactions after reorgs (Suhas Daftuar)\n-- #6898 `4077ad2` Rewrite CreateNewBlock (Alex Morcos)\n-- #6872 `bdda4d5` Remove UTXO cache entries when the tx they were added for is removed/does not enter mempool (Matt Corallo)\n-- #7062 `12c469b` [Mempool] Fix mempool limiting and replace-by-fee for PrioritiseTransaction (Suhas Daftuar)\n-- #7276 `76de36f` Report non-mandatory script failures correctly (Pieter Wuille)\n-- #7217 `e08b7cb` Mark blocks with too many sigops as failed (Suhas Daftuar)\n-- #7387 `f4b2ce8` Get rid of inaccurate ScriptSigArgsExpected (Pieter Wuille)\n-\n-### P2P protocol and network code\n-\n-- #6172 `88a7ead` Ignore getheaders requests when not synced (Suhas Daftuar)\n-- #5875 `9d60602` Be stricter in processing unrequested blocks (Suhas Daftuar)\n-- #6256 `8ccc07c` Use best header chain timestamps to detect partitioning (Gavin Andresen)\n-- #6283 `a903ad7` make CAddrMan::size() return the correct type of size_t (Diapolo)\n-- #6272 `40400d5` Improve proxy initialization (continues #4871) (Wladimir J. van der Laan, Diapolo)\n-- #6310 `66e5465` banlist.dat: store banlist on disk (Jonas Schnelli)\n-- #6412 `1a2de32` Test whether created sockets are select()able (Pieter Wuille)\n-- #6498 `219b916` Keep track of recently rejected transactions with a rolling bloom filter (cont'd) (Peter Todd)\n-- #6556 `70ec975` Fix masking of irrelevant bits in address groups. (Alex Morcos)\n-- #6530 `ea19c2b` Improve addrman Select() performance when buckets are nearly empty (Pieter Wuille)\n-- #6583 `af9305a` add support for miniupnpc api version 14 (Pavel Vasin)\n-- #6374 `69dc5b5` Connection slot exhaustion DoS mitigation (Patrick Strateman)\n-- #6636 `536207f` net: correctly initialize nMinPingUsecTime (Wladimir J. van der Laan)\n-- #6579 `0c27795` Add NODE_BLOOM service bit and bump protocol version (Matt Corallo)\n-- #6148 `999c8be` Relay blocks when pruning (Suhas Daftuar)\n-- #6588 `cf9bb11` In (strCommand == \"tx\"), return if AlreadyHave() (Tom Harding)\n-- #6974 `2f71b07` Always allow getheaders from whitelisted peers (Wladimir J. van der Laan)\n-- #6639 `bd629d7` net: Automatically create hidden service, listen on Tor (Wladimir J. van der Laan)\n-- #6984 `9ffc687` don't enforce maxuploadtarget's disconnect for whitelisted peers (Jonas Schnelli)\n-- #7046 `c322652` Net: Improve blocks only mode. (Patrick Strateman)\n-- #7090 `d6454f6` Connect to Tor hidden services by default (when listening on Tor) (Peter Todd)\n-- #7106 `c894fbb` Fix and improve relay from whitelisted peers (Pieter Wuille)\n-- #7129 `5d5ef3a` Direct headers announcement (rebase of #6494) (Pieter Wuille)\n-- #7079 `1b5118b` Prevent peer flooding inv request queue (redux) (redux) (Gregory Maxwell)\n-- #7166 `6ba25d2` Disconnect on mempool requests from peers when over the upload limit. (Gregory Maxwell)\n-- #7133 `f31955d` Replace setInventoryKnown with a rolling bloom filter (rebase of #7100) (Pieter Wuille)\n-- #7174 `82aff88` Don't do mempool lookups for \"mempool\" command without a filter (Matt Corallo)\n-- #7179 `44fef99` net: Fix sent reject messages for blocks and transactions (Wladimir J. van der Laan)\n-- #7181 `8fc174a` net: Add and document network messages in protocol.h (Wladimir J. van der Laan)\n-- #7125 `10b88be` Replace global trickle node with random delays (Pieter Wuille)\n-- #7415 `cb83beb` net: Hardcoded seeds update January 2016 (Wladimir J. van der Laan)\n-- #7438 `e2d9a58` Do not absolutely protect local peers; decide group ties based on time (Gregory Maxwell)\n-- #7439 `86755bc` Add whitelistforcerelay to control forced relaying. [#7099 redux] (Gregory Maxwell)\n-- #7482 `e16f5b4` Ensure headers count is correct (Suhas Daftuar)\n-\n-### Validation\n-\n-- #5927 `8d9f0a6` Reduce checkpoints' effect on consensus. (Pieter Wuille)\n-- #6299 `24f2489` Bugfix: Don't check the genesis block header before accepting it (Jorge Tim\u00f3n)\n-- #6361 `d7ada03` Use real number of cores for default -par, ignore virtual cores (Wladimir J. van der Laan)\n-- #6519 `87f37e2` Make logging for validation optional (Wladimir J. van der Laan)\n-- #6351 `2a1090d` CHECKLOCKTIMEVERIFY (BIP65) IsSuperMajority() soft-fork (Peter Todd)\n-- #6931 `54e8bfe` Skip BIP 30 verification where not necessary (Alex Morcos)\n-- #6954 `e54ebbf` Switch to libsecp256k1-based ECDSA validation (Pieter Wuille)\n-- #6508 `61457c2` Switch to a constant-space Merkle root/branch algorithm. (Pieter Wuille)\n-- #6914 `327291a` Add pre-allocated vector type and use it for CScript (Pieter Wuille)\n-- #7500 `889e5b3` Correctly report high-S violations (Pieter Wuille)\n-\n-\n-### Build system\n-\n-- #6210 `0e4f2a0` build: disable optional use of gmp in internal secp256k1 build (Wladimir J. van der Laan)\n-- #6214 `87406aa` [OSX] revert renaming of Bitcoin-Qt.app and use CFBundleDisplayName (partial revert of #6116) (Jonas Schnelli)\n-- #6218 `9d67b10` build/gitian misc updates (Cory Fields)\n-- #6269 `d4565b6` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures (Cory Fields)\n-- #6418 `d4a910c` Add autogen.sh to source tarball. (randy-waterhouse)\n-- #6373 `1ae3196` depends: non-qt bumps for 0.12 (Cory Fields)\n-- #6434 `059b352` Preserve user-passed CXXFLAGS with --enable-debug (Gavin Andresen)\n-- #6501 `fee6554` Misc build fixes (Cory Fields)\n-- #6600 `ef4945f` Include bitcoin-tx binary on Debian/Ubuntu (Zak Wilcox)\n-- #6619 `4862708` depends: bump miniupnpc and ccache (Michael Ford)\n-- #6801 `ae69a75` [depends] Latest config.guess and config.sub (Michael Ford)\n-- #6938 `193f7b5` build: If both Qt4 and Qt5 are installed, use Qt5 (Wladimir J. van der Laan)\n-- #7092 `348b281` build: Set osx permissions in the dmg to make Gatekeeper happy (Cory Fields)\n-- #6980 `eccd671` [Depends] Bump Boost, miniupnpc, ccache & zeromq (Michael Ford)\n-- #7424 `aa26ee0` Add security/export checks to gitian and fix current failures (Cory Fields)\n-\n-### Wallet\n-\n-- #6183 `87550ee` Fix off-by-one error w/ nLockTime in the wallet (Peter Todd)\n-- #6057 `ac5476e` re-enable wallet in autoprune (Jonas Schnelli)\n-- #6356 `9e6c33b` Delay initial pruning until after wallet init (Adam Weiss)\n-- #6088 `91389e5` fundrawtransaction (Matt Corallo)\n-- #6415 `ddd8d80` Implement watchonly support in fundrawtransaction (Matt Corallo)\n-- #6567 `0f0f323` Fix crash when mining with empty keypool. (Daniel Kraft)\n-- #6688 `4939eab` Fix locking in GetTransaction. (Alex Morcos)\n-- #6645 `4dbd43e` Enable wallet key imports without rescan in pruned mode. (Gregory Maxwell)\n-- #6550 `5b77244` Do not store Merkle branches in the wallet. (Pieter Wuille)\n-- #5924 `12a7712` Clean up change computation in CreateTransaction. (Daniel Kraft)\n-- #6906 `48b5b84` Reject invalid pubkeys when reading ckey items from the wallet. (Gregory Maxwell)\n-- #7010 `e0a5ef8` Fix fundrawtransaction handling of includeWatching (Peter Todd)\n-- #6851 `616d61b` Optimisation: Store transaction list order in memory rather than compute it every need (Luke-Jr)\n-- #6134 `e92377f` Improve usage of fee estimation code (Alex Morcos)\n-- #7103 `a775182` [wallet, rpc tests] Fix settxfee, paytxfee (MarcoFalke)\n-- #7105 `30c2d8c` Keep track of explicit wallet conflicts instead of using mempool (Pieter Wuille)\n-- #7096 `9490bd7` [Wallet] Improve minimum absolute fee GUI options (Jonas Schnelli)\n-- #6216 `83f06ca` Take the training wheels off anti-fee-sniping (Peter Todd)\n-- #4906 `96e8d12` Issue#1643: Coinselection prunes extraneous inputs from ApproximateBestSubset (Murch)\n-- #7200 `06c6a58` Checks for null data transaction before issuing error to debug.log (Andy Craze)\n-- #7296 `a36d79b` Add sane fallback for fee estimation (Alex Morcos)\n-- #7293 `ff9b610` Add regression test for vValue sort order (MarcoFalke)\n-- #7306 `4707797` Make sure conflicted wallet tx's update balances (Alex Morcos)\n-- #7381 `621bbd8` [walletdb] Fix syntax error in key parser (MarcoFalke)\n-- #7491 `00ec73e` wallet: Ignore MarkConflict if block hash is not known (Wladimir J. van der Laan)\n-- #7502 `1329963` Update the wallet best block marker before pruning (Pieter Wuille)\n-\n-### GUI\n-\n-- #6217 `c57e12a` disconnect peers from peers tab via context menu (Diapolo)\n-- #6209 `ab0ec67` extend rpc console peers tab (Diapolo)\n-- #6484 `1369d69` use CHashWriter also in SignVerifyMessageDialog (Pavel Vasin)\n-- #6487 `9848d42` Introduce PlatformStyle (Wladimir J. van der Laan)\n-- #6505 `100c9d3` cleanup icons (MarcoFalke)\n-- #4587 `0c465f5` allow users to set -onion via GUI (Diapolo)\n-- #6529 `c0f66ce` show client user agent in debug window (Diapolo)\n-- #6594 `878ea69` Disallow duplicate windows. (Casey Rodarmor)\n-- #5665 `6f55cdd` add verifySize() function to PaymentServer (Diapolo)\n-- #6317 `ca5e2a1` minor optimisations in peertablemodel (Diapolo)\n-- #6315 `e59d2a8` allow banning and unbanning over UI->peers table (Jonas Schnelli)\n-- #6653 `e04b2fa` Pop debug window in foreground when opened twice (MarcoFalke)\n-- #6864 `c702521` Use monospace font (MarcoFalke)\n-- #6887 `3694b74` Update coin control and smartfee labels (MarcoFalke)\n-- #7000 `814697c` add shortcurts for debug-/console-window (Jonas Schnelli)\n-- #6951 `03403d8` Use maxTxFee instead of 10000000 (MarcoFalke)\n-- #7051 `a190777` ui: Add \"Copy raw transaction data\" to transaction list context menu (Wladimir J. van der Laan)\n-- #6979 `776848a` simple mempool info in debug window (Jonas Schnelli)\n-- #7006 `26af1ac` add startup option to reset Qt settings (Jonas Schnelli)\n-- #6780 `2a94cd6` Call init's parameter interaction before we create the UI options model (Jonas Schnelli)\n-- #7112 `96b8025` reduce cs_main locks during tip update, more fluently update UI (Jonas Schnelli)\n-- #7206 `f43c2f9` Add \"NODE_BLOOM\" to guiutil so that peers don't get UNKNOWN[4] (Matt Corallo)\n-- #7282 `5cadf3e` fix coincontrol update issue when deleting a send coins entry (Jonas Schnelli)\n-- #7319 `1320300` Intro: Display required space (MarcoFalke)\n-- #7318 `9265e89` quickfix for RPC timer interface problem (Jonas Schnelli)\n-- #7327 `b16b5bc` [Wallet] Transaction View: LastMonth calculation fixed (crowning-)\n-- #7364 `7726c48` [qt] Windows: Make rpcconsole monospace font larger (MarcoFalke)\n-- #7384 `294f432` [qt] Peertable: Increase SUBVERSION_COLUMN_WIDTH (MarcoFalke)\n-\n-### Tests and QA\n-\n-- #6305 `9005c91` build: comparison tool swap (Cory Fields)\n-- #6318 `e307e13` build: comparison tool NPE fix (Cory Fields)\n-- #6337 `0564c5b` Testing infrastructure: mocktime fixes (Gavin Andresen)\n-- #6350 `60abba1` add unit tests for the decodescript rpc (mruddy)\n-- #5881 `3203a08` Fix and improve txn_doublespend.py test (Tom Harding)\n-- #6390 `6a73d66` tests: Fix bitcoin-tx signing test case (Wladimir J. van der Laan)\n-- #6368 `7fc25c2` CLTV: Add more tests to improve coverage (Esteban Ordano)\n-- #6414 `5121c68` Fix intermittent test failure, reduce test time (Tom Harding)\n-- #6417 `44fa82d` [QA] fix possible reorg issue in (fund)rawtransaction(s).py RPC test (Jonas Schnelli)\n-- #6398 `3d9362d` rpc: Remove chain-specific RequireRPCPassword (Wladimir J. van der Laan)\n-- #6428 `bb59e78` tests: Remove old sh-based test framework (Wladimir J. van der Laan)\n-- #5515 `d946e9a` RFC: Assert on probable deadlocks if the second lock isnt try_lock (Matt Corallo)\n-- #6287 `d2464df` Clang lock debug (Cory Fields)\n-- #6465 `410fd74` Don't share objects between TestInstances (Casey Rodarmor)\n-- #6534 `6c1c7fd` Fix test locking issues and un-revert the probable-deadlines assertions commit (Cory Fields)\n-- #6509 `bb4faee` Fix race condition on test node shutdown (Casey Rodarmor)\n-- #6523 `561f8af` Add p2p-fullblocktest.py (Casey Rodarmor)\n-- #6590 `981fd92` Fix stale socket rebinding and re-enable python tests for Windows (Cory Fields)\n-- #6730 `cb4d6d0` build: Remove dependency of bitcoin-cli on secp256k1 (Wladimir J. van der Laan)\n-- #6616 `5ab5dca` Regression Tests: Migrated rpc-tests.sh to all Python rpc-tests.py (Peter Tschipper)\n-- #6720 `d479311` Creates unittests for addrman, makes addrman more testable. (Ethan Heilman)\n-- #6853 `c834f56` Added fPowNoRetargeting field to Consensus::Params (Eric Lombrozo)\n-- #6827 `87e5539` [rpc-tests] Check return code (MarcoFalke)\n-- #6848 `f2c869a` Add DERSIG transaction test cases (Ross Nicoll)\n-- #6813 `5242bb3` Support gathering code coverage data for RPC tests with lcov (dexX7)\n-- #6888 `c8322ff` Clear strMiscWarning before running PartitionAlert (Eric Lombrozo)\n-- #6894 `2675276` [Tests] Fix BIP65 p2p test (Suhas Daftuar)\n-- #6863 `725539e` [Test Suite] Fix test for null tx input (Daniel Kraft)\n-- #6926 `a6d0d62` tests: Initialize networking on windows (Wladimir J. van der Laan)\n-- #6822 `9fa54a1` [tests] Be more strict checking dust (MarcoFalke)\n-- #6804 `5fcc14e` [tests] Add basic coverage reporting for RPC tests (James O'Beirne)\n-- #7045 `72dccfc` Bugfix: Use unique autostart filenames on Linux for testnet/regtest (Luke-Jr)\n-- #7095 `d8368a0` Replace scriptnum_test's normative ScriptNum implementation (Wladimir J. van der Laan)\n-- #7063 `6abf6eb` [Tests] Add prioritisetransaction RPC test (Suhas Daftuar)\n-- #7137 `16f4a6e` Tests: Explicitly set chain limits in replace-by-fee test (Suhas Daftuar)\n-- #7216 `9572e49` Removed offline testnet DNSSeed 'alexykot.me'. (tnull)\n-- #7209 `f3ad812` test: don't override BITCOIND and BITCOINCLI if they're set (Wladimir J. van der Laan)\n-- #7226 `301f16a` Tests: Add more tests to p2p-fullblocktest (Suhas Daftuar)\n-- #7153 `9ef7c54` [Tests] Add mempool_limit.py test (Jonas Schnelli)\n-- #7170 `453c567` tests: Disable Tor interaction (Wladimir J. van der Laan)\n-- #7229 `1ed938b` [qa] wallet: Check if maintenance changes the balance (MarcoFalke)\n-- #7308 `d513405` [Tests] Eliminate intermittent failures in sendheaders.py (Suhas Daftuar)\n-- #7468 `947c4ff` [rpc-tests] Change solve() to use rehash (Brad Andrews)\n-\n-### Miscellaneous\n-\n-- #6213 `e54ff2f` [init] add -blockversion help and extend -upnp help (Diapolo)\n-- #5975 `1fea667` Consensus: Decouple ContextualCheckBlockHeader from checkpoints (Jorge Tim\u00f3n)\n-- #6061 `eba2f06` Separate Consensus::CheckTxInputs and GetSpendHeight in CheckInputs (Jorge Tim\u00f3n)\n-- #5994 `786ed11` detach wallet from miner (Jonas Schnelli)\n-- #6387 `11576a5` [bitcoin-cli] improve error output (Jonas Schnelli)\n-- #6401 `6db53b4` Add BITCOIND_SIGTERM_TIMEOUT to OpenRC init scripts (Florian Schmaus)\n-- #6430 `b01981e` doc: add documentation for shared library libbitcoinconsensus (Braydon Fuller)\n-- #6372 `dcc495e` Update Linearize tool to support Windows paths; fix variable scope; update README and example configuration (Paul Georgiou)\n-- #6453 `8fe5cce` Separate core memory usage computation in core_memusage.h (Pieter Wuille)\n-- #6149 `633fe10` Buffer log messages and explicitly open logs (Adam Weiss)\n-- #6488 `7cbed7f` Avoid leaking file descriptors in RegisterLoad (Casey Rodarmor)\n-- #6497 `a2bf40d` Make sure LogPrintf strings are line-terminated (Wladimir J. van der Laan)\n-- #6504 `b6fee6b` Rationalize currency unit to \"BTC\" (Ross Nicoll)\n-- #6507 `9bb4dd8` Removed contrib/bitrpc (Casey Rodarmor)\n-- #6527 `41d650f` Use unique name for AlertNotify tempfile (Casey Rodarmor)\n-- #6561 `e08a7d9` limitedmap fixes and tests (Casey Rodarmor)\n-- #6565 `a6f2aff` Make sure we re-acquire lock if a task throws (Casey Rodarmor)\n-- #6599 `f4d88c4` Make sure LogPrint strings are line-terminated (Ross Nicoll)\n-- #6630 `195942d` Replace boost::reverse_lock with our own (Casey Rodarmor)\n-- #6103 `13b8282` Add ZeroMQ notifications (Jo\u00e3o Barbosa)\n-- #6692 `d5d1d2e` devtools: don't push if signing fails in github-merge (Wladimir J. van der Laan)\n-- #6728 `2b0567b` timedata: Prevent warning overkill (Wladimir J. van der Laan)\n-- #6713 `f6ce59c` SanitizeString: Allow hypen char (MarcoFalke)\n-- #5987 `4899a04` Bugfix: Fix testnet-in-a-box use case (Luke-Jr)\n-- #6733 `b7d78fd` Simple benchmarking framework (Gavin Andresen)\n-- #6854 `a092970` devtools: Add security-check.py (Wladimir J. van der Laan)\n-- #6790 `fa1d252` devtools: add clang-format.py (MarcoFalke)\n-- #7114 `f3d0fdd` util: Don't set strMiscWarning on every exception (Wladimir J. van der Laan)\n-- #7078 `93e0514` uint256::GetCheapHash bigendian compatibility (arowser)\n-- #7094 `34e02e0` Assert now > 0 in GetTime GetTimeMillis GetTimeMicros (Patrick Strateman)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- accraze\n-- Adam Weiss\n-- Alex Morcos\n-- Alex van der Peet\n-- AlSzacrel\n-- Altoidnerd\n-- Andriy Voskoboinyk\n-- antonio-fr\n-- Arne Brutschy\n-- Ashley Holman\n-- Bob McElrath\n-- Braydon Fuller\n-- BtcDrak\n-- Casey Rodarmor\n-- centaur1\n-- Chris Kleeschulte\n-- Christian Decker\n-- Cory Fields\n-- crowning-\n-- daniel\n-- Daniel Cousens\n-- Daniel Kraft\n-- David Hill\n-- dexX7\n-- Diego Viola\n-- Elias Rohrer\n-- Eric Lombrozo\n-- Erik Mossberg\n-- Esteban Ordano\n-- EthanHeilman\n-- Florian Schmaus\n-- Forrest Voight\n-- Gavin Andresen\n-- Gregory Maxwell\n-- Gregory Sanders / instagibbs\n-- Ian T\n-- Irving Ruan\n-- Jacob Welsh\n-- James O'Beirne\n-- Jeff Garzik\n-- Johnathan Corgan\n-- Jonas Schnelli\n-- Jonathan Cross\n-- Jo\u00e3o Barbosa\n-- Jorge Tim\u00f3n\n-- Josh Lehan\n-- J Ross Nicoll\n-- kazcw\n-- Kevin Cooper\n-- lpescher\n-- Luke Dashjr\n-- MarcoFalke\n-- Mark Friedenbach\n-- Matt\n-- Matt Bogosian\n-- Matt Corallo\n-- Matt Quinn\n-- Micha\n-- Michael\n-- Michael Ford / fanquake\n-- Midnight Magic\n-- Mitchell Cash\n-- mrbandrews\n-- mruddy\n-- Nick\n-- Patrick Strateman\n-- Paul Georgiou\n-- Paul Rabahy\n-- Pavel Jan\u00edk / paveljanik\n-- Pavel Vasin\n-- Pavol Rusnak\n-- Peter Josling\n-- Peter Todd\n-- Philip Kaufmann\n-- Pieter Wuille\n-- ptschip\n-- randy-waterhouse\n-- rion\n-- Ross Nicoll\n-- Ryan Havar\n-- Shaul Kfir\n-- Simon Males\n-- Stephen\n-- Suhas Daftuar\n-- tailsjoin\n-- Thomas Kerin\n-- Tom Harding\n-- tulip\n-- unsystemizer\n-- Veres Lajos\n-- Wladimir J. van der Laan\n-- xor-freenet\n-- Zak Wilcox\n-- zathras-crypto\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "610cd481de4855f3d0d05e5d7d089f9c41ee9f06",
        "filename": "doc/release-notes/release-notes-0.12.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.12.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.12.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,198 +0,0 @@\n-Bitcoin Core version 0.12.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.12.1/>\n-\n-This is a new minor version release, including the BIP9, BIP68 and BIP112\n-softfork, various bugfixes and updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n------------------\n-\n-### Downgrade to a version < 0.12.0\n-\n-Because release 0.12.0 and later will obfuscate the chainstate on every\n-fresh sync or reindex, the chainstate is not backwards-compatible with\n-pre-0.12 versions of Bitcoin Core or other software.\n-\n-If you want to downgrade after you have done a reindex with 0.12.0 or later,\n-you will need to reindex when you first start Bitcoin Core version 0.11 or\n-earlier.\n-\n-Notable changes\n-===============\n-\n-First version bits BIP9 softfork deployment\n--------------------------------------------\n-\n-This release includes a soft fork deployment to enforce [BIP68][],\n-[BIP112][] and [BIP113][] using the [BIP9][] deployment mechanism.\n-\n-The deployment sets the block version number to 0x20000001 between\n-midnight 1st May 2016 and midnight 1st May 2017 to signal readiness for \n-deployment. The version number consists of 0x20000000 to indicate version\n-bits together with setting bit 0 to indicate support for this combined\n-deployment, shown as \"csv\" in the `getblockchaininfo` RPC call.\n-\n-For more information about the soft forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/7648>\n-\n-This specific backport pull-request can be viewed at\n-<https://github.com/bitcoin/bitcoin/pull/7543>\n-\n-[BIP9]: https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki\n-[BIP68]: https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki\n-[BIP112]: https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki\n-[BIP113]: https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki\n-\n-BIP68 soft fork to enforce sequence locks for relative locktime\n----------------------------------------------------------------\n-\n-[BIP68][] introduces relative lock-time consensus-enforced semantics of\n-the sequence number field to enable a signed transaction input to remain\n-invalid for a defined period of time after confirmation of its corresponding\n-outpoint.\n-\n-For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/7184>\n-\n-BIP112 soft fork to enforce OP_CHECKSEQUENCEVERIFY\n---------------------------------------------------\n-\n-[BIP112][] redefines the existing OP_NOP3 as OP_CHECKSEQUENCEVERIFY (CSV)\n-for a new opcode in the Bitcoin scripting system that in combination with\n-[BIP68][] allows execution pathways of a script to be restricted based\n-on the age of the output being spent.\n-\n-For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/7524>\n-\n-BIP113 locktime enforcement soft fork\n--------------------------------------\n-\n-Bitcoin Core 0.11.2 previously introduced mempool-only locktime\n-enforcement using GetMedianTimePast(). This release seeks to\n-consensus enforce the rule.\n-\n-Bitcoin transactions currently may specify a locktime indicating when\n-they may be added to a valid block.  Current consensus rules require\n-that blocks have a block header time greater than the locktime specified\n-in any transaction in that block.\n-\n-Miners get to choose what time they use for their header time, with the\n-consensus rule being that no node will accept a block whose time is more\n-than two hours in the future.  This creates a incentive for miners to\n-set their header times to future values in order to include locktimed\n-transactions which weren't supposed to be included for up to two more\n-hours.\n-\n-The consensus rules also specify that valid blocks may have a header\n-time greater than that of the median of the 11 previous blocks.  This\n-GetMedianTimePast() time has a key feature we generally associate with\n-time: it can't go backwards.\n-\n-[BIP113][] specifies a soft fork enforced in this release that\n-weakens this perverse incentive for individual miners to use a future\n-time by requiring that valid blocks have a computed GetMedianTimePast()\n-greater than the locktime specified in any transaction in that block.\n-\n-Mempool inclusion rules currently require transactions to be valid for\n-immediate inclusion in a block in order to be accepted into the mempool.\n-This release begins applying the BIP113 rule to received transactions,\n-so transaction whose time is greater than the GetMedianTimePast() will\n-no longer be accepted into the mempool.\n-\n-**Implication for miners:** you will begin rejecting transactions that\n-would not be valid under BIP113, which will prevent you from producing\n-invalid blocks when BIP113 is enforced on the network. Any\n-transactions which are valid under the current rules but not yet valid\n-under the BIP113 rules will either be mined by other miners or delayed\n-until they are valid under BIP113. Note, however, that time-based\n-locktime transactions are more or less unseen on the network currently.\n-\n-**Implication for users:** GetMedianTimePast() always trails behind the\n-current time, so a transaction locktime set to the present time will be\n-rejected by nodes running this release until the median time moves\n-forward. To compensate, subtract one hour (3,600 seconds) from your\n-locktimes to allow those transactions to be included in mempools at\n-approximately the expected time.\n-\n-For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/6566>\n-\n-Miscellaneous\n--------------\n-\n-The p2p alert system is off by default. To turn on, use `-alert` with\n-startup configuration.\n-\n-0.12.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and other APIs\n-- #7739 `7ffc2bd` Add abandoned status to listtransactions (jonasschnelli)\n-\n-### Block and transaction handling\n-- #7543 `834aaef` Backport BIP9, BIP68 and BIP112 with softfork (btcdrak)\n-\n-### P2P protocol and network code\n-- #7804 `90f1d24` Track block download times per individual block (sipa)\n-- #7832 `4c3a00d` Reduce block timeout to 10 minutes (laanwj)\n-\n-### Validation\n-- #7821 `4226aac` init: allow shutdown during 'Activating best chain...' (laanwj)\n-- #7835 `46898e7` Version 2 transactions remain non-standard until CSV activates (sdaftuar)\n-\n-### Build system\n-- #7487 `00d57b4` Workaround Travis-side CI issues (luke-jr)\n-- #7606 `a10da9a` No need to set -L and --location for curl (MarcoFalke)\n-- #7614 `ca8f160` Add curl to packages (now needed for depends) (luke-jr)\n-- #7776 `a784675` Remove unnecessary executables from gitian release (laanwj)\n-\n-### Wallet\n-- #7715 `19866c1` Fix calculation of balances and available coins. (morcos)\n-\n-### Miscellaneous\n-- #7617 `f04f4fd` Fix markdown syntax and line terminate LogPrint (MarcoFalke)\n-- #7747 `4d035bc` added depends cross compile info (accraze)\n-- #7741 `a0cea89` Mark p2p alert system as deprecated (btcdrak)\n-- #7780 `c5f94f6` Disable bad-chain alert (btcdrak)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- accraze\n-- Alex Morcos\n-- BtcDrak\n-- Jonas Schnelli\n-- Luke Dashjr\n-- MarcoFalke\n-- Mark Friedenbach\n-- NicolasDorier\n-- Pieter Wuille\n-- Suhas Daftuar\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "4c3cb97df34cf5e13939e538bd8af50759cc92f6",
        "filename": "doc/release-notes/release-notes-0.13.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 868,
        "changes": 868,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.13.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.13.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,868 +0,0 @@\n-Bitcoin Core version 0.13.0 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.13.0/>\n-\n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n-wallet on a XP machine is irresponsible at least.\n-\n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n-what the source of these crashes is, but it is likely that upstream\n-libraries such as Qt are no longer being tested on XP.\n-\n-We do not have time nor resources to provide support for an OS that is\n-end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\n-suggested to upgrade to a newer verion of Windows, or install an alternative OS\n-that is supported.\n-\n-No attempt is made to prevent installing or running the software on Windows XP,\n-you can still do so at your own risk, but do not expect it to work: do not\n-report issues about Windows XP to the issue tracker.\n-\n-Notable changes\n-===============\n-\n-Database cache memory increased\n---------------------------------\n-\n-As a result of growth of the UTXO set, performance with the prior default\n-database cache of 100 MiB has suffered.\n-For this reason the default was changed to 300 MiB in this release.\n-\n-For nodes on low-memory systems, the database cache can be changed back to\n-100 MiB (or to another value) by either:\n-\n-- Adding `dbcache=100` in bitcoin.conf\n-- Changing it in the GUI under `Options \u2192 Size of database cache`\n-\n-Note that the database cache setting has the most performance impact\n-during initial sync of a node, and when catching up after downtime.\n-\n-\n-bitcoin-cli: arguments privacy\n-------------------------------\n-\n-The RPC command line client gained a new argument, `-stdin`\n-to read extra arguments from standard input, one per line until EOF/Ctrl-D.\n-For example:\n-\n-    $ src/bitcoin-cli -stdin walletpassphrase\n-    mysecretcode\n-    120\n-    ..... press Ctrl-D here to end input\n-    $\n-\n-It is recommended to use this for sensitive information such as wallet\n-passphrases, as command-line arguments can usually be read from the process\n-table by any user on the system.\n-\n-\n-C++11 and Python 3\n-------------------\n-\n-Various code modernizations have been done. The Bitcoin Core code base has\n-started using C++11. This means that a C++11-capable compiler is now needed for\n-building. Effectively this means GCC 4.7 or higher, or Clang 3.3 or higher.\n-\n-When cross-compiling for a target that doesn't have C++11 libraries, configure with\n-`./configure --enable-glibc-back-compat ... LDFLAGS=-static-libstdc++`.\n-\n-For running the functional tests in `qa/rpc-tests`, Python3.4 or higher is now\n-required.\n-\n-\n-Linux ARM builds\n-----------------\n-\n-Due to popular request, Linux ARM builds have been added to the uploaded\n-executables.\n-\n-The following extra files can be found in the download directory or torrent:\n-\n-- `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting\n-  the 32-bit ARMv7-A architecture.\n-- `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting\n-  the 64-bit ARMv8-A architecture.\n-\n-ARM builds are still experimental. If you have problems on a certain device or\n-Linux distribution combination please report them on the bug tracker, it may be\n-possible to resolve them. Note that the device you use must be (backward)\n-compatible with the architecture targeted by the binary that you use.\n-For example, a Raspberry Pi 2 Model B or Raspberry Pi 3 Model B (in its 32-bit\n-execution state) device, can run the 32-bit ARMv7-A targeted binary. However,\n-no model of Raspberry Pi 1 device can run either binary because they are all\n-ARMv6 architecture devices that are not compatible with ARMv7-A or ARMv8-A.\n-\n-Note that Android is not considered ARM Linux in this context. The executables\n-are not expected to work out of the box on Android.\n-\n-\n-Compact Block support (BIP 152)\n--------------------------------\n-\n-Support for block relay using the Compact Blocks protocol has been implemented\n-in PR 8068.\n-\n-The primary goal is reducing the bandwidth spikes at relay time, though in many\n-cases it also reduces propagation delay. It is automatically enabled between\n-compatible peers.\n-[BIP 152](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki)\n-\n-As a side-effect, ordinary non-mining nodes will download and upload blocks\n-faster if those blocks were produced by miners using similar transaction\n-filtering policies. This means that a miner who produces a block with many\n-transactions discouraged by your node will be relayed slower than one with\n-only transactions already in your memory pool. The overall effect of such\n-relay differences on the network may result in blocks which include widely-\n-discouraged transactions losing a stale block race, and therefore miners may\n-wish to configure their node to take common relay policies into consideration.\n-\n-\n-Hierarchical Deterministic Key Generation\n------------------------------------------\n-Newly created wallets will use hierarchical deterministic key generation\n-according to BIP32 (keypath m/0'/0'/k').\n-Existing wallets will still use traditional key generation.\n-\n-Backups of HD wallets, regardless of when they have been created, can\n-therefore be used to re-generate all possible private keys, even the\n-ones which haven't already been generated during the time of the backup.\n-**Attention:** Encrypting the wallet will create a new seed which requires\n-a new backup!\n-\n-Wallet dumps (created using the `dumpwallet` RPC) will contain the deterministic\n-seed. This is expected to allow future versions to import the seed and all\n-associated funds, but this is not yet implemented.\n-\n-HD key generation for new wallets can be disabled by `-usehd=0`. Keep in\n-mind that this flag only has affect on newly created wallets.\n-You can't disable HD key generation once you have created a HD wallet.\n-\n-There is no distinction between internal (change) and external keys.\n-\n-HD wallets are incompatible with older versions of Bitcoin Core.\n-\n-[Pull request](https://github.com/bitcoin/bitcoin/pull/8035/files), [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n-\n-\n-Segregated Witness\n-------------------\n-\n-The code preparations for Segregated Witness (\"segwit\"), as described in [BIP\n-141](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki), [BIP\n-143](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki), [BIP\n-144](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki), and [BIP\n-145](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki) are\n-finished and included in this release.  However, BIP 141 does not yet specify\n-activation parameters on mainnet, and so this release does not support segwit\n-use on mainnet.  Testnet use is supported, and after BIP 141 is updated with\n-proposed parameters, a future release of Bitcoin Core is expected that\n-implements those parameters for mainnet.\n-\n-Furthermore, because segwit activation is not yet specified for mainnet,\n-version 0.13.0 will behave similarly as other pre-segwit releases even after a\n-future activation of BIP 141 on the network.  Upgrading from 0.13.0 will be\n-required in order to utilize segwit-related features on mainnet (such as signal\n-BIP 141 activation, mine segwit blocks, fully validate segwit blocks, relay\n-segwit blocks to other segwit nodes, and use segwit transactions in the\n-wallet, etc).\n-\n-\n-Mining transaction selection (\"Child Pays For Parent\")\n-------------------------------------------------------\n-\n-The mining transaction selection algorithm has been replaced with an algorithm\n-that selects transactions based on their feerate inclusive of unconfirmed\n-ancestor transactions.  This means that a low-fee transaction can become more\n-likely to be selected if a high-fee transaction that spends its outputs is\n-relayed.\n-\n-With this change, the `-blockminsize` command line option has been removed.\n-\n-The command line option `-blockmaxsize` remains an option to specify the\n-maximum number of serialized bytes in a generated block.  In addition, the new\n-command line option `-blockmaxweight` has been added, which specifies the\n-maximum \"block weight\" of a generated block, as defined by [BIP 141 (Segregated\n-Witness)] (https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki).\n-\n-In preparation for Segregated Witness, the mining algorithm has been modified\n-to optimize transaction selection for a given block weight, rather than a given\n-number of serialized bytes in a block.  In this release, transaction selection\n-is unaffected by this distinction (as BIP 141 activation is not supported on\n-mainnet in this release, see above), but in future releases and after BIP 141\n-activation, these calculations would be expected to differ.\n-\n-For optimal runtime performance, miners using this release should specify\n-`-blockmaxweight` on the command line, and not specify `-blockmaxsize`.\n-Additionally (or only) specifying `-blockmaxsize`, or relying on default\n-settings for both, may result in performance degradation, as the logic to\n-support `-blockmaxsize` performs additional computation to ensure that\n-constraint is met.  (Note that for mainnet, in this release, the equivalent\n-parameter for `-blockmaxweight` would be four times the desired\n-`-blockmaxsize`.  See [BIP 141]\n-(https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki) for additional\n-details.)\n-\n-In the future, the `-blockmaxsize` option may be removed, as block creation is\n-no longer optimized for this metric.  Feedback is requested on whether to\n-deprecate or keep this command line option in future releases.\n-\n-\n-Reindexing changes\n-------------------\n-\n-In earlier versions, reindexing did validation while reading through the block\n-files on disk. These two have now been split up, so that all blocks are known\n-before validation starts. This was necessary to make certain optimizations that\n-are available during normal synchronizations also available during reindexing.\n-\n-The two phases are distinct in the Bitcoin-Qt GUI. During the first one,\n-\"Reindexing blocks on disk\" is shown. During the second (slower) one,\n-\"Processing blocks on disk\" is shown.\n-\n-It is possible to only redo validation now, without rebuilding the block index,\n-using the command line option `-reindex-chainstate` (in addition to\n-`-reindex` which does both). This new option is useful when the blocks on disk\n-are assumed to be fine, but the chainstate is still corrupted. It is also\n-useful for benchmarks.\n-\n-\n-Removal of internal miner\n---------------------------\n-\n-As CPU mining has been useless for a long time, the internal miner has been\n-removed in this release, and replaced with a simpler implementation for the\n-test framework.\n-\n-The overall result of this is that `setgenerate` RPC call has been removed, as\n-well as the `-gen` and `-genproclimit` command-line options.\n-\n-For testing, the `generate` call can still be used to mine a block, and a new\n-RPC call `generatetoaddress` has been added to mine to a specific address. This\n-works with wallet disabled.\n-\n-\n-New bytespersigop implementation\n---------------------------------\n-\n-The former implementation of the bytespersigop filter accidentally broke bare\n-multisig (which is meant to be controlled by the `permitbaremultisig` option),\n-since the consensus protocol always counts these older transaction forms as 20\n-sigops for backwards compatibility. Simply fixing this bug by counting more\n-accurately would have reintroduced a vulnerability. It has therefore been\n-replaced with a new implementation that rather than filter such transactions,\n-instead treats them (for fee purposes only) as if they were in fact the size\n-of a transaction actually using all 20 sigops.\n-\n-\n-Low-level P2P changes\n-----------------------\n-\n-- The optional new p2p message \"feefilter\" is implemented and the protocol\n-  version is bumped to 70013. Upon receiving a feefilter message from a peer,\n-  a node will not send invs for any transactions which do not meet the filter\n-  feerate. [BIP 133](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki)\n-\n-- The P2P alert system has been removed in PR #7692 and the `alert` P2P message\n-  is no longer supported.\n-\n-- The transaction relay mechanism used to relay one quarter of all transactions\n-  instantly, while queueing up the rest and sending them out in batch. As\n-  this resulted in chains of dependent transactions being reordered, it\n-  systematically hurt transaction relay. The relay code was redesigned in PRs\n-  \\#7840 and #8082, and now always batches transactions announcements while also\n-  sorting them according to dependency order. This significantly reduces orphan\n-  transactions. To compensate for the removal of instant relay, the frequency of\n-  batch sending was doubled for outgoing peers.\n-\n-- Since PR #7840 the BIP35 `mempool` command is also subject to batch processing.\n-  Also the `mempool` message is no longer handled for non-whitelisted peers when\n-  `NODE_BLOOM` is disabled through `-peerbloomfilters=0`.\n-\n-- The maximum size of orphan transactions that are kept in memory until their\n-  ancestors arrive has been raised in PR #8179 from 5000 to 99999 bytes. They\n-  are now also removed from memory when they are included in a block, conflict\n-  with a block, and time out after 20 minutes.\n-\n-- We respond at most once to a getaddr request during the lifetime of a\n-  connection since PR #7856.\n-\n-- Connections to peers who have recently been the first one to give us a valid\n-  new block or transaction are protected from disconnections since PR #8084.\n-\n-\n-Low-level RPC changes\n-----------------------\n-\n-- RPC calls have been added to output detailed statistics for individual mempool\n-  entries, as well as to calculate the in-mempool ancestors or descendants of a\n-  transaction: see `getmempoolentry`, `getmempoolancestors`, `getmempooldescendants`.\n-\n-- `gettxoutsetinfo` UTXO hash (`hash_serialized`) has changed. There was a divergence between\n-  32-bit and 64-bit platforms, and the txids were missing in the hashed data. This has been\n-  fixed, but this means that the output will be different than from previous versions.\n-\n-- Full UTF-8 support in the RPC API. Non-ASCII characters in, for example,\n-  wallet labels have always been malformed because they weren't taken into account\n-  properly in JSON RPC processing. This is no longer the case. This also affects\n-  the GUI debug console.\n-\n-- Asm script outputs replacements for OP_NOP2 and OP_NOP3\n-\n-  - OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP \n-65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n-\n-  - OP_NOP3 has been renamed to OP_CHECKSEQUENCEVERIFY by [BIP \n-112](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki)\n-\n-  - The following outputs are affected by this change:\n-\n-    - RPC `getrawtransaction` (in verbose mode)\n-    - RPC `decoderawtransaction`\n-    - RPC `decodescript`\n-    - REST `/rest/tx/` (JSON format)\n-    - REST `/rest/block/` (JSON format when including extended tx details)\n-    - `bitcoin-tx -json`\n-\n-- The sorting of the output of the `getrawmempool` output has changed.\n-\n-- New RPC commands: `generatetoaddress`, `importprunedfunds`, `removeprunedfunds`, `signmessagewithprivkey`,\n-  `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`,\n-  `createwitnessaddress`, `addwitnessaddress`.\n-\n-- Removed RPC commands: `setgenerate`, `getgenerate`.\n-\n-- New options were added to `fundrawtransaction`: `includeWatching`, `changeAddress`, `changePosition` and `feeRate`.\n-\n-\n-Low-level ZMQ changes\n-----------------------\n-\n-- Each ZMQ notification now contains an up-counting sequence number that allows\n-  listeners to detect lost notifications.\n-  The sequence number is always the last element in a multi-part ZMQ notification and\n-  therefore backward compatible. Each message type has its own counter.\n-  PR [#7762](https://github.com/bitcoin/bitcoin/pull/7762).\n-\n-\n-0.13.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and other APIs\n-\n-- #7156 `9ee02cf` Remove cs_main lock from `createrawtransaction` (laanwj)\n-- #7326 `2cd004b` Fix typo, wrong information in gettxout help text (paveljanik)\n-- #7222 `82429d0` Indicate which transactions are signaling opt-in RBF (sdaftuar)\n-- #7480 `b49a623` Changed getnetworkhps value to double to avoid overflow (instagibbs)\n-- #7550 `8b958ab` Input-from-stdin mode for bitcoin-cli (laanwj)\n-- #7670 `c9a1265` Use cached block hash in blockToJSON() (rat4)\n-- #7726 `9af69fa` Correct importaddress help reference to importpubkey (CypherGrue)\n-- #7766 `16555b6` Register calls where they are defined (laanwj)\n-- #7797 `e662a76` Fix generatetoaddress failing to parse address (mruddy)\n-- #7774 `916b15a` Add versionHex in getblock and getblockheader JSON results (mruddy)\n-- #7863 `72c54e3` Getblockchaininfo: make bip9_softforks an object, not an array (rustyrussell)\n-- #7842 `d97101e` Do not print minping time in getpeerinfo when no ping received yet (paveljanik)\n-- #7518 `be14ca5` Add multiple options to fundrawtransaction (promag)\n-- #7756 `9e47fce` Add cursor to iterate over utxo set, use this in `gettxoutsetinfo` (laanwj)\n-- #7848 `88616d2` Divergence between 32- and 64-bit when hashing >4GB affects `gettxoutsetinfo` (laanwj)\n-- #7827 `4205ad7` Speed up `getchaintips` (mrbandrews)\n-- #7762 `a1eb344` Append a message sequence number to every ZMQ notification (jonasschnelli)\n-- #7688 `46880ed` List solvability in listunspent output and improve help (sipa)\n-- #7926 `5725807` Push back `getaddednodeinfo` dead value (instagibbs)\n-- #7953 `0630353` Create `signmessagewithprivkey` rpc (achow101)\n-- #8049 `c028c7b` Expose information on whether transaction relay is enabled in `getnetworkinfo` (laanwj)\n-- #7967 `8c1e49b` Add feerate option to `fundrawtransaction` (jonasschnelli)\n-- #8118 `9b6a48c` Reduce unnecessary hashing in `signrawtransaction` (jonasnick)\n-- #7957 `79004d4` Add support for transaction sequence number (jonasschnelli)\n-- #8153 `75ec320` `fundrawtransaction` feeRate: Use BTC/kB (MarcoFalke)\n-- #7292 `7ce9ac5` Expose ancestor/descendant information over RPC (sdaftuar)\n-- #8171 `62fcf27` Fix createrawtx sequence number unsigned int parsing (jonasschnelli)\n-- #7892 `9c3d0fa` Add full UTF-8 support to RPC (laanwj)\n-- #8317 `304eff3` Don't use floating point in rpcwallet (MarcoFalke)\n-- #8258 `5a06ebb` Hide softfork in `getblockchaininfo` if timeout is 0 (jl2012)\n-- #8244 `1922e5a` Remove unnecessary LOCK(cs_main) in getrawmempool (dcousens)\n-\n-### Block and transaction handling\n-\n-- #7056 `6a07208` Save last db read (morcos)\n-- #6842 `0192806` Limitfreerelay edge case bugfix (ptschip)\n-- #7084 `11d74f6` Replace maxFeeRate of 10000*minRelayTxFee with maxTxFee in mempool (MarcoFalke)\n-- #7539 `9f33dba` Add tags to mempool's mapTx indices (sdaftuar)\n-- #7592 `26a2a72` Re-remove ERROR logging for mempool rejects (laanwj)\n-- #7187 `14d6324` Keep reorgs fast for SequenceLocks checks (morcos)\n-- #7594 `01f4267` Mempool: Add tracking of ancestor packages (sdaftuar)\n-- #7904 `fc9e334` Txdb: Fix assert crash in new UTXO set cursor (laanwj)\n-- #7927 `f9c2ac7` Minor changes to dbwrapper to simplify support for other databases (laanwj)\n-- #7933 `e26b620` Fix OOM when deserializing UTXO entries with invalid length (sipa)\n-- #8020 `5e374f7` Use SipHash-2-4 for various non-cryptographic hashes (sipa)\n-- #8076 `d720980` VerifyDB: don't check blocks that have been pruned (sdaftuar)\n-- #8080 `862fd24` Do not use mempool for GETDATA for tx accepted after the last mempool req (gmaxwell)\n-- #7997 `a82f033` Replace mapNextTx with slimmer setSpends (kazcw)\n-- #8220 `1f86d64` Stop trimming when mapTx is empty (sipa)\n-- #8273 `396f9d6` Bump `-dbcache` default to 300MiB (laanwj)\n-- #7225 `eb33179` Eliminate unnecessary call to CheckBlock (sdaftuar)\n-- #7907 `006cdf6` Optimize and Cleanup CScript::FindAndDelete (pstratem)\n-- #7917 `239d419` Optimize reindex (sipa)\n-- #7763 `3081fb9` Put hex-encoded version in UpdateTip (sipa)\n-- #8149 `d612837` Testnet-only segregated witness (sipa)\n-- #8305 `3730393` Improve handling of unconnecting headers (sdaftuar)\n-- #8363 `fca1a41` Rename \"block cost\" to \"block weight\" (sdaftuar)\n-- #8381 `f84ee3d` Make witness v0 outputs non-standard (jl2012)\n-- #8364 `3f65ba2` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n-\n-### P2P protocol and network code\n-\n-- #6589 `dc0305d` Log bytes recv/sent per command (jonasschnelli)\n-- #7164 `3b43cad` Do not download transactions during initial blockchain sync (ptschip)\n-- #7458 `898fedf` peers.dat, banlist.dat recreated when missing (kirkalx)\n-- #7637 `3da5d1b` Fix memleak in TorController (laanwj, jonasschnelli)\n-- #7553 `9f14e5a` Remove vfReachable and modify IsReachable to only use vfLimited (pstratem)\n-- #7708 `9426632` De-neuter NODE_BLOOM (pstratem)\n-- #7692 `29b2be6` Remove P2P alert system (btcdrak)\n-- #7542 `c946a15` Implement \"feefilter\" P2P message (morcos)\n-- #7573 `352fd57` Add `-maxtimeadjustment` command line option (mruddy)\n-- #7570 `232592a` Add IPv6 Link-Local Address Support (mruddy)\n-- #7874 `e6a4d48` Improve AlreadyHave (morcos)\n-- #7856 `64e71b3` Only send one GetAddr response per connection (gmaxwell)\n-- #7868 `7daa3ad` Split DNS resolving functionality out of net structures (theuni)\n-- #7919 `7617682` Fix headers announcements edge case (sdaftuar)\n-- #7514 `d9594bf` Fix IsInitialBlockDownload for testnet (jmacwhyte)\n-- #7959 `03cf6e8` fix race that could fail to persist a ban (kazcw)\n-- #7840 `3b9a0bf` Several performance and privacy improvements to inv/mempool handling (sipa)\n-- #8011 `65aecda` Don't run ThreadMessageHandler at lowered priority (kazcw)\n-- #7696 `5c3f8dd` Fix de-serialization bug where AddrMan is left corrupted (EthanHeilman)\n-- #7932 `ed749bd` CAddrMan::Deserialize handle corrupt serializations better (pstratem)\n-- #7906 `83121cc` Prerequisites for p2p encapsulation changes (theuni)\n-- #8033 `18436d8` Fix Socks5() connect failures to be less noisy and less unnecessarily scary (wtogami)\n-- #8082 `01d8359` Defer inserting into maprelay until just before relaying (gmaxwell)\n-- #7960 `6a22373` Only use AddInventoryKnown for transactions (sdaftuar)\n-- #8078 `2156fa2` Disable the mempool P2P command when bloom filters disabled (petertodd)\n-- #8065 `67c91f8` Addrman offline attempts (gmaxwell)\n-- #7703 `761cddb` Tor: Change auth order to only use password auth if -torpassword (laanwj)\n-- #8083 `cd0c513` Add support for dnsseeds with option to filter by servicebits (jonasschnelli)\n-- #8173 `4286f43` Use SipHash for node eviction (sipa)\n-- #8154 `1445835` Drop vAddrToSend after sending big addr message (kazcw)\n-- #7749 `be9711e` Enforce expected outbound services (sipa)\n-- #8208 `0a64777` Do not set extra flags for unfiltered DNS seed results (sipa)\n-- #8084 `e4bb4a8` Add recently accepted blocks and txn to AttemptToEvictConnection (gmaxwell)\n-- #8113 `3f89a53` Rework addnode behaviour (sipa)\n-- #8179 `94ab58b` Evict orphans which are included or precluded by accepted blocks (gmaxwell)\n-- #8068 `e9d76a1` Compact Blocks (TheBlueMatt)\n-- #8204 `0833894` Update petertodd's testnet seed (petertodd)\n-- #8247 `5cd35d3` Mark my dnsseed as supporting filtering (sipa)\n-- #8275 `042c323` Remove bad chain alert partition check (btcdrak)\n-- #8271 `1bc9c80` Do not send witnesses in cmpctblock (sipa)\n-- #8312 `ca40ef6` Fix mempool DoS vulnerability from malleated transactions (sdaftuar)\n-- #7180 `16ccb74` Account for `sendheaders` `verack` messages (laanwj)\n-- #8102 `425278d` Bugfix: use global ::fRelayTxes instead of CNode in version send (sipa)\n-- #8408 `b7e2011` Prevent fingerprinting, disk-DoS with compact blocks (sdaftuar)\n-\n-### Build system\n-\n-- #7302 `41f1a3e` C++11 build/runtime fixes (theuni)\n-- #7322 `fd9356b` c++11: add scoped enum fallbacks to CPPFLAGS rather than defining them locally (theuni)\n-- #7441 `a6771fc` Use Debian 8.3 in gitian build guide (fanquake)\n-- #7349 `152a821` Build against system UniValue when available (luke-jr)\n-- #7520 `621940e` LibreSSL doesn't define OPENSSL_VERSION, use LIBRESSL_VERSION_TEXT instead (paveljanik)\n-- #7528 `9b9bfce` autogen.sh: warn about needing autoconf if autoreconf is not found (knocte)\n-- #7504 `19324cf` Crystal clean make clean (paveljanik)\n-- #7619 `18b3f1b` Add missing sudo entry in gitian VM setup (btcdrak)\n-- #7616 `639ec58`  [depends] Delete unused patches  (MarcoFalke)\n-- #7658 `c15eb28` Add curl to Gitian setup instructions (btcdrak)\n-- #7710 `909b72b` [Depends] Bump miniupnpc and config.guess+sub (fanquake)\n-- #7723 `5131005` build: python 3 compatibility (laanwj)\n-- #7477 `28ad4d9` Fix quoting of copyright holders in configure.ac (domob1812)\n-- #7711 `a67bc5e` [build-aux] Update Boost & check macros to latest serials (fanquake)\n-- #7788 `4dc1b3a` Use relative paths instead of absolute paths in protoc calls (paveljanik)\n-- #7809 `bbd210d` depends: some base fixes/changes (theuni)\n-- #7603 `73fc922` Build System: Use PACKAGE_TARNAME in NSIS script (JeremyRand)\n-- #7905 `187186b` test: move accounting_tests and rpc_wallet_tests to wallet/test (laanwj)\n-- #7911 `351abf9` leveldb: integrate leveldb into our buildsystem (theuni)\n-- #7944 `a407807` Re-instate TARGET_OS=linux in configure.ac. Removed by 351abf9e035 (randy-waterhouse)\n-- #7920 `c3e3cfb` Switch Travis to Trusty (theuni)\n-- #7954 `08b37c5` build: quiet annoying warnings without adding new ones (theuni)\n-- #7165 `06162f1` build: Enable C++11 in build, require C++11 compiler (laanwj)\n-- #7982 `559fbae` build: No need to check for leveldb atomics (theuni)\n-- #8002 `f9b4582` [depends] Add -stdlib=libc++ to darwin CXX flags (fanquake)\n-- #7993 `6a034ed` [depends] Bump Freetype, ccache, ZeroMQ, miniupnpc, expat (fanquake)\n-- #8167 `19ea173` Ship debug tarballs/zips with debug symbols (theuni)\n-- #8175 `f0299d8` Add --disable-bench to config flags for windows (laanwj)\n-- #7283 `fd9881a` [gitian] Default reference_datetime to commit author date (MarcoFalke)\n-- #8181 `9201ce8` Get rid of `CLIENT_DATE` (laanwj)\n-- #8133 `fde0ac4` Finish up out-of-tree changes (theuni)\n-- #8188 `65a9d7d` Add armhf/aarch64 gitian builds (theuni)\n-- #8194 `cca1c8c` [gitian] set correct PATH for wrappers (MarcoFalke)\n-- #8198 `5201614` Sync ax_pthread with upstream draft4 (fanquake)\n-- #8210 `12a541e` [Qt] Bump to Qt5.6.1 (jonasschnelli)\n-- #8285 `da50997` windows: Add testnet link to installer (laanwj)\n-- #8304 `0cca2fe` [travis] Update SDK_URL (MarcoFalke)\n-- #8310 `6ae20df` Require boost for bench (theuni)\n-- #8315 `2e51590` Don't require sudo for Linux (theuni)\n-- #8314 `67caef6` Fix pkg-config issues for 0.13 (theuni)\n-- #8373 `1fe7f40` Fix OSX non-deterministic dmg (theuni)\n-- #8358 `cfd1280` Gbuild: Set memory explicitly (default is too low) (MarcoFalke)\n-\n-### GUI\n-\n-- #7154 `00b4b8d` Add InMempool() info to transaction details (jonasschnelli)\n-- #7068 `5f3c670` [RPC-Tests] add simple way to run rpc test over QT clients (jonasschnelli)\n-- #7218 `a1c185b` Fix misleading translation (MarcoFalke)\n-- #7214 `be9a9a3` qt5: Use the fixed font the system recommends (MarcoFalke)\n-- #7256 `08ab906` Add note to coin control dialog QT5 workaround (fanquake)\n-- #7255 `e289807` Replace some instances of formatWithUnit with formatHtmlWithUnit (fanquake)\n-- #7317 `3b57e9c` Fix RPCTimerInterface ordering issue (jonasschnelli)\n-- #7327 `c079d79` Transaction View: LastMonth calculation fixed (crowning-)\n-- #7334 `e1060c5` coincontrol workaround is still needed in qt5.4 (fixed in qt5.5) (MarcoFalke)\n-- #7383 `ae2db67` Rename \"amount\" to \"requested amount\" in receive coins table (jonasschnelli)\n-- #7396 `cdcbc59` Add option to increase/decrease font size in the console window (jonasschnelli)\n-- #7437 `9645218` Disable tab navigation for peers tables (Kefkius)\n-- #7604 `354b03d` build: Remove spurious dollar sign. Fixes #7189 (dooglus)\n-- #7605 `7f001bd` Remove openssl info from init/log and from Qt debug window (jonasschnelli)\n-- #7628 `87d6562` Add 'copy full transaction details' option (ericshawlinux)\n-- #7613 `3798e5d` Add autocomplete to bitcoin-qt's console window (GamerSg)\n-- #7668 `b24266c` Fix history deletion bug after font size change (achow101)\n-- #7680 `41d2dfa` Remove reflection from `about` icon (laanwj)\n-- #7686 `f034bce` Remove 0-fee from send dialog (MarcoFalke)\n-- #7506 `b88e0b0` Use CCoinControl selection in CWallet::FundTransaction (promag)\n-- #7732 `0b98dd7` Debug window: replace \"Build date\" with \"Datadir\" (jonasschnelli)\n-- #7761 `60db51d` remove trailing output-index from transaction-id (jonasschnelli)\n-- #7772 `6383268` Clear the input line after activating autocomplete (paveljanik)\n-- #7925 `f604bf6` Fix out-of-tree GUI builds (laanwj)\n-- #7939 `574ddc6` Make it possible to show details for multiple transactions (laanwj)\n-- #8012 `b33824b` Delay user confirmation of send (Tyler-Hardin)\n-- #8006 `7c8558d` Add option to disable the system tray icon (Tyler-Hardin)\n-- #8046 `169d379` Fix Cmd-Q / Menu Quit shutdown on OSX (jonasschnelli)\n-- #8042 `6929711` Don't allow to open the debug window during splashscreen & verification state (jonasschnelli)\n-- #8014 `77b49ac` Sort transactions by date (Tyler-Hardin)\n-- #8073 `eb2f6f7` askpassphrasedialog: Clear pass fields on accept (rat4)\n-- #8129 `ee1533e` Fix RPC console auto completer (UdjinM6)\n-- #7636 `fb0ac48` Add bitcoin address label to request payment QR code (makevoid)\n-- #8231 `760a6c7` Fix a bug where the SplashScreen will not be hidden during startup (jonasschnelli)\n-- #8256 `af2421c` BUG: bitcoin-qt crash (fsb4000)\n-- #8257 `ff03c50` Do not ask a UI question from bitcoind (sipa)\n-- #8288 `91abb77` Network-specific example address (laanwj)\n-- #7707 `a914968` UI support for abandoned transactions (jonasschnelli)\n-- #8207 `f7a403b` Add a link to the Bitcoin-Core repository and website to the About Dialog (MarcoFalke)\n-- #8281 `6a87eb0` Remove client name from debug window (laanwj)\n-- #8407 `45eba4b` Add dbcache migration path (jonasschnelli)\n-\n-### Wallet\n-\n-- #7262 `fc08994` Reduce inefficiency of GetAccountAddress() (dooglus)\n-- #7537 `78e81b0` Warn on unexpected EOF while salvaging wallet (laanwj)\n-- #7521 `3368895` Don't resend wallet txs that aren't in our own mempool (morcos)\n-- #7576 `86a1ec5` Move wallet help string creation to CWallet (jonasschnelli)\n-- #7577 `5b3b5a7` Move \"load wallet phase\" to CWallet (jonasschnelli)\n-- #7608 `0735c0c` Move hardcoded file name out of log messages (MarcoFalke)\n-- #7649 `4900641` Prevent multiple calls to CWallet::AvailableCoins (promag)\n-- #7646 `e5c3511` Fix lockunspent help message (promag)\n-- #7558 `b35a591` Add import/removeprunedfunds rpc call (instagibbs)\n-- #6215 `48c5adf` add bip32 pub key serialization (jonasschnelli)\n-- #7913 `bafd075` Fix for incorrect locking in GetPubKey() (keystore.cpp) (yurizhykin)\n-- #8036 `41138f9` init: Move berkeleydb version reporting to wallet (laanwj)\n-- #8028 `373b50d` Fix insanity of CWalletDB::WriteTx and CWalletTx::WriteToDisk (pstratem)\n-- #8061 `f6b7df3` Improve Wallet encapsulation (pstratem)\n-- #7891 `950be19` Always require OS randomness when generating secret keys (sipa)\n-- #7689 `b89ef13` Replace OpenSSL AES with ctaes-based version (sipa)\n-- #7825 `f972b04` Prevent multiple calls to ExtractDestination (pedrobranco)\n-- #8137 `243ac0c` Improve CWallet API with new AccountMove function (pstratem)\n-- #8142 `52c3f34` Improve CWallet API  with new GetAccountPubkey function (pstratem)\n-- #8035 `b67a472` Add simplest BIP32/deterministic key generation implementation (jonasschnelli)\n-- #7687 `a6ddb19` Stop treating importaddress'ed scripts as change (sipa)\n-- #8298 `aef3811` wallet: Revert input selection post-pruning (laanwj)\n-- #8324 `bc94b87` Keep HD seed during salvagewallet (jonasschnelli)\n-- #8323 `238300b` Add HD keypath to CKeyMetadata, report metadata in validateaddress (jonasschnelli)\n-- #8367 `3b38a6a` Ensure <0.13 clients can't open HD wallets (jonasschnelli)\n-- #8378 `ebea651` Move SetMinVersion for FEATURE_HD to SetHDMasterKey (pstratem)\n-- #8390 `73adfe3` Correct hdmasterkeyid/masterkeyid name confusion (jonasschnelli)\n-- #8206 `18b8ee1` Add HD xpriv to dumpwallet (jonasschnelli)\n-- #8389 `c3c82c4` Create a new HD seed after encrypting the wallet (jonasschnelli)\n-\n-### Tests and QA\n-\n-- #7320 `d3dfc6d` Test walletpassphrase timeout (MarcoFalke)\n-- #7208 `47c5ed1` Make max tip age an option instead of chainparam (laanwj)\n-- #7372 `21376af` Trivial: [qa] wallet: Print maintenance (MarcoFalke)\n-- #7280 `668906f` [travis] Fail when documentation is outdated (MarcoFalke)\n-- #7177 `93b0576` [qa] Change default block priority size to 0 (MarcoFalke)\n-- #7236 `02676c5` Use createrawtx locktime parm in txn_clone (dgenr8)\n-- #7212 `326ffed` Adds unittests for CAddrMan and CAddrinfo, removes source of non-determinism (EthanHeilman)\n-- #7490 `d007511` tests: Remove May15 test (laanwj)\n-- #7531 `18cb2d5` Add bip68-sequence.py to extended rpc tests (btcdrak)\n-- #7536 `ce5fc02` test: test leading spaces for ParseHex (laanwj)\n-- #7620 `1b68de3` [travis] Only run check-doc.py once (MarcoFalke)\n-- #7455 `7f96671` [travis] Exit early when check-doc.py fails (MarcoFalke)\n-- #7667 `56d2c4e` Move GetTempPath() to testutil (musalbas)\n-- #7517 `f1ca891` test: script_error checking in script_invalid tests (laanwj)\n-- #7684 `3d0dfdb` Extend tests (MarcoFalke)\n-- #7697 `622fe6c` Tests: make prioritise_transaction.py more robust (sdaftuar)\n-- #7709 `efde86b` Tests: fix missing import in mempool_packages (sdaftuar)\n-- #7702 `29e1131` Add tests verifychain, lockunspent, getbalance, listsinceblock (MarcoFalke)\n-- #7720 `3b4324b` rpc-test: Normalize assert() (MarcoFalke)\n-- #7757 `26794d4` wallet: Wait for reindex to catch up (MarcoFalke)\n-- #7764 `a65b36c` Don't run pruning.py twice (MarcoFalke)\n-- #7773 `7c80e72` Fix comments in tests (btcdrak)\n-- #7489 `e9723cb` tests: Make proxy_test work on travis servers without IPv6 (laanwj)\n-- #7801 `70ac71b` Remove misleading \"errorString syntax\" (MarcoFalke)\n-- #7803 `401c65c` maxblocksinflight: Actually enable test (MarcoFalke)\n-- #7802 `3bc71e1` httpbasics: Actually test second connection (MarcoFalke)\n-- #7849 `ab8586e` tests: add varints_bitpatterns test (laanwj)\n-- #7846 `491171f` Clean up lockorder data of destroyed mutexes (sipa)\n-- #7853 `6ef5e00` py2: Unfiddle strings into bytes explicitly (MarcoFalke)\n-- #7878 `53adc83` [test] bctest.py: Revert faa41ee (MarcoFalke)\n-- #7798 `cabba24` [travis] Print the commit which was evaluated (MarcoFalke)\n-- #7833 `b1bf511` tests: Check Content-Type header returned from RPC server (laanwj)\n-- #7851 `fa9d86f` pull-tester: Don't mute zmq ImportError (MarcoFalke)\n-- #7822 `0e6fd5e` Add listunspent() test for spendable/unspendable UTXO (jpdffonseca)\n-- #7912 `59ad568` Tests: Fix deserialization of reject messages (sdaftuar)\n-- #7941 `0ea3941` Fixing comment in script_test.json test case (Christewart)\n-- #7807 `0ad1041` Fixed miner test values, gave constants for less error-prone values (instagibbs)\n-- #7980 `88b77c7` Smartfees: Properly use ordered dict (MarcoFalke)\n-- #7814 `77b637f` Switch to py3 (MarcoFalke)\n-- #8030 `409a8a1` Revert fatal-ness of missing python-zmq (laanwj)\n-- #8018 `3e90fe6` Autofind rpc tests --srcdir (jonasschnelli)\n-- #8016 `5767e80` Fix multithread CScheduler and reenable test (paveljanik)\n-- #7972 `423ca30` pull-tester: Run rpc test in parallel  (MarcoFalke)\n-- #8039 `69b3a6d` Bench: Add crypto hash benchmarks (laanwj)\n-- #8041 `5b736dd` Fix bip9-softforks blockstore issue (MarcoFalke)\n-- #7994 `1f01443` Add op csv tests to script_tests.json (Christewart)\n-- #8038 `e2bf830` Various minor fixes (MarcoFalke)\n-- #8072 `1b87e5b` Travis: 'make check' in parallel and verbose (theuni)\n-- #8056 `8844ef1` Remove hardcoded \"4 nodes\" from test_framework (MarcoFalke)\n-- #8047 `37f9a1f` Test_framework: Set wait-timeout for bitcoind procs (MarcoFalke)\n-- #8095 `6700cc9` Test framework: only cleanup on successful test runs (sdaftuar)\n-- #8098 `06bd4f6` Test_framework: Append portseed to tmpdir (MarcoFalke)\n-- #8104 `6ff2c8d` Add timeout to sync_blocks() and sync_mempools() (sdaftuar)\n-- #8111 `61b8684` Benchmark SipHash (sipa)\n-- #8107 `52b803e` Bench: Added base58 encoding/decoding benchmarks (yurizhykin)\n-- #8115 `0026e0e` Avoid integer division in the benchmark inner-most loop (gmaxwell)\n-- #8090 `a2df115` Adding P2SH(p2pkh) script test case (Christewart)\n-- #7992 `ec45cc5` Extend #7956 with one more test (TheBlueMatt)\n-- #8139 `ae5575b` Fix interrupted HTTP RPC connection workaround for Python 3.5+ (sipa)\n-- #8164 `0f24eaf` [Bitcoin-Tx] fix missing test fixtures, fix 32bit atoi issue (jonasschnelli)\n-- #8166 `0b5279f` Src/test: Do not shadow local variables (paveljanik)\n-- #8141 `44c1b1c` Continuing port of java comparison tool (mrbandrews)\n-- #8201 `36b7400` fundrawtransaction: Fix race, assert amounts (MarcoFalke)\n-- #8214 `ed2cd59` Mininode: fail on send_message instead of silent return (MarcoFalke)\n-- #8215 `a072d1a` Don't use floating point in wallet tests (MarcoFalke)\n-- #8066 `65c2058` Test_framework: Use different rpc_auth_pair for each node (MarcoFalke)\n-- #8216 `0d41d70` Assert 'changePosition out of bounds'  (MarcoFalke)\n-- #8222 `961893f` Enable mempool consistency checks in unit tests (sipa)\n-- #7751 `84370d5` test_framework: python3.4 authproxy compat (laanwj)\n-- #7744 `d8e862a` test_framework: detect failure of bitcoind startup (laanwj)\n-- #8280 `115735d` Increase sync_blocks() timeouts in pruning.py (MarcoFalke)\n-- #8340 `af9b7a9` Solve trivial merge conflict in p2p-segwit.py (MarcoFalke)\n-- #8067 `3e4cf8f` Travis: use slim generic image, and some fixups (theuni)\n-- #7951 `5c7df70` Test_framework: Properly print exception (MarcoFalke)\n-- #8070 `7771aa5` Remove non-determinism which is breaking net_tests #8069 (EthanHeilman)\n-- #8309 `bb2646a` Add wallet-hd test (MarcoFalke)\n-- #8444 `cd0910b` Fix p2p-feefilter.py for changed tx relay behavior (sdaftuar)\n-\n-### Mining\n-\n-- #7507 `11c7699` Remove internal miner (Leviathn)\n-- #7663 `c87f51e` Make the generate RPC call function for non-regtest (sipa)\n-- #7671 `e2ebd25` Add generatetoaddress RPC to mine to an address (achow101)\n-- #7935 `66ed450` Versionbits: GBT support (luke-jr)\n-- #7600 `66db2d6` Select transactions using feerate-with-ancestors (sdaftuar)\n-- #8295 `f5660d3` Mining-related fixups for 0.13.0 (sdaftuar)\n-- #7796 `536b75e` Add support for negative fee rates, fixes `prioritizetransaction` (MarcoFalke)\n-- #8362 `86edc20` Scale legacy sigop count in CreateNewBlock (sdaftuar)\n-- #8489 `8b0eee6` Bugfix: Use pre-BIP141 sigops until segwit activates (GBT) (luke-jr)\n-\n-### Documentation and miscellaneous\n-\n-- #7423 `69e2a40` Add example for building with constrained resources (jarret)\n-- #8254 `c2c69ed` Add OSX ZMQ requirement to QA readme (fanquake)\n-- #8203 `377d131` Clarify documentation for running a tor node (nathaniel-mahieu)\n-- #7428 `4b12266` Add example for listing ./configure flags (nathaniel-mahieu)\n-- #7847 `3eae681` Add arch linux build example (mruddy)\n-- #7968 `ff69aaf` Fedora build requirements (wtogami)\n-- #8013 `fbedc09` Fedora build requirements, add gcc-c++ and fix typo (wtogami)\n-- #8009 `fbd8478` Fixed invalid example paths in gitian-building.md (JeremyRand)\n-- #8240 `63fbdbc` Mention Windows XP end of support in release notes (laanwj)\n-- #8303 `5077d2c` Update bips.md for CSV softfork (fanquake)\n-- #7789 `e0b3e19` Add note about using the Qt official binary installer (paveljanik)\n-- #7791 `e30a5b0` Change Precise to Trusty in gitian-building.md (JeremyRand)\n-- #7838 `8bb5d3d` Update gitian build guide to debian 8.4.0 (fanquake)\n-- #7855 `b778e59` Replace precise with trusty (MarcoFalke)\n-- #7975 `fc23fee` Update bitcoin-core GitHub links (MarcoFalke)\n-- #8034 `e3a8207` Add basic git squash workflow (fanquake)\n-- #7813 `214ec0b` Update port in tor.md (MarcoFalke)\n-- #8193 `37c9830` Use Debian 8.5 in the gitian-build guide (fanquake)\n-- #8261 `3685e0c` Clarify help for `getblockchaininfo` (paveljanik)\n-- #7185 `ea0f5a2` Note that reviewers should mention the id of the commits they reviewed (pstratem)\n-- #7290 `c851d8d` [init] Add missing help for args (MarcoFalke)\n-- #7281 `f9fd4c2` Improve CheckInputs() comment about sig verification (petertodd)\n-- #7417 `1e06bab` Minor improvements to the release process (PRabahy)\n-- #7444 `4cdbd42` Improve block validity/ConnectBlock() comments (petertodd)\n-- #7527 `db2e1c0` Fix and cleanup listreceivedbyX documentation (instagibbs)\n-- #7541 `b6e00af` Clarify description of blockindex (pinheadmz)\n-- #7590 `f06af57` Improving wording related to Boost library requirements [updated] (jonathancross)\n-- #7635 `0fa88ef` Add dependency info to test docs (elliotolds)\n-- #7609 `3ba07bd` RPM spec file project (AliceWonderMiscreations)\n-- #7850 `229a17c` Removed call to `TryCreateDirectory` from `GetDefaultDataDir` in `src/util.cpp` (alexreg)\n-- #7888 `ec870e1` Prevector: fix 2 bugs in currently unreached code paths (kazcw)\n-- #7922 `90653bc` CBase58Data::SetString: cleanse the full vector (kazcw)\n-- #7881 `c4e8390` Update release process (laanwj)\n-- #7952 `a9c8b74` Log invalid block hash to make debugging easier (paveljanik)\n-- #7974 `8206835` More comments on the design of AttemptToEvictConnection (gmaxwell)\n-- #7795 `47a7cfb` UpdateTip: log only one line at most per block (laanwj)\n-- #8110 `e7e25ea` Add benchmarking notes (fanquake)\n-- #8121 `58f0c92` Update implemented BIPs list (fanquake)\n-- #8029 `58725ba` Simplify OS X build notes (fanquake)\n-- #8143 `d46b8b5` comment nit: miners don't vote (instagibbs)\n-- #8136 `22e0b35` Log/report in 10% steps during VerifyDB (jonasschnelli)\n-- #8168 `d366185` util: Add ParseUInt32 and ParseUInt64 (laanwj)\n-- #8178 `f7b1bfc` Add git and github tips and tricks to developer notes (sipa)\n-- #8177 `67db011` developer notes: updates for C++11 (kazcw)\n-- #8229 `8ccdac1` [Doc] Update OS X build notes for 10.11 SDK (fanquake)\n-- #8233 `9f1807a` Mention Linux ARM executables in release process and notes (laanwj)\n-- #7540 `ff46dd4` Rename OP_NOP3 to OP_CHECKSEQUENCEVERIFY (btcdrak)\n-- #8289 `26316ff` bash-completion: Adapt for 0.12 and 0.13 (roques)\n-- #7453 `3dc3149` Missing patches from 0.12 (MarcoFalke)\n-- #7113 `54a550b` Switch to a more efficient rolling Bloom filter (sipa)\n-- #7257 `de9e5ea` Combine common error strings for different options so translations can be shared and reused (luke-jr)\n-- #7304 `b8f485c` [contrib] Add clang-format-diff.py (MarcoFalke)\n-- #7378 `e6f97ef` devtools: replace github-merge with python version (laanwj)\n-- #7395 `0893705` devtools: show pull and commit information in github-merge (laanwj)\n-- #7402 `6a5932b` devtools: github-merge get toplevel dir without extra whitespace (achow101)\n-- #7425 `20a408c` devtools: Fix utf-8 support in messages for github-merge (laanwj)\n-- #7632 `409f843` Delete outdated test-patches reference (Lewuathe)\n-- #7662 `386f438` remove unused NOBLKS_VERSION_{START,END} constants (rat4)\n-- #7737 `aa0d2b2` devtools: make github-merge.py use py3 (laanwj)\n-- #7781 `55db5f0` devtools: Auto-set branch to merge to in github-merge (laanwj)\n-- #7934 `f17032f` Improve rolling bloom filter performance and benchmark (sipa)\n-- #8004 `2efe38b` signal handling: fReopenDebugLog and fRequestShutdown should be type sig_atomic_t (catilac)\n-- #7713 `f6598df` Fixes for verify-commits script (petertodd)\n-- #8412 `8360d5b` libconsensus: Expose a flag for BIP112 (jtimon)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- 21E14\n-- accraze\n-- Adam Brown\n-- Alexander Regueiro\n-- Alex Morcos\n-- Alfie John\n-- Alice Wonder\n-- AlSzacrel\n-- Andrew Chow\n-- Andr\u00e9s G. Aragoneses\n-- Bob McElrath\n-- BtcDrak\n-- calebogden\n-- C\u00e9dric F\u00e9lizard\n-- Chirag Dav\u00e9\n-- Chris Moore\n-- Chris Stewart\n-- Christian von Roques\n-- Chris Wheeler\n-- Cory Fields\n-- crowning-\n-- Daniel Cousens\n-- Daniel Kraft\n-- Denis Lukianov\n-- Elias Rohrer\n-- Elliot Olds\n-- Eric Shaw\n-- error10\n-- Ethan Heilman\n-- face\n-- fanquake\n-- Francesco 'makevoid' Canessa\n-- fsb4000\n-- Gavin Andresen\n-- gladoscc\n-- Gregory Maxwell\n-- Gregory Sanders\n-- instagibbs\n-- James O'Beirne\n-- Jannes Faber\n-- Jarret Dyrbye\n-- Jeremy Rand\n-- jloughry\n-- jmacwhyte\n-- Joao Fonseca\n-- Johnson Lau\n-- Jonas Nick\n-- Jonas Schnelli\n-- Jonathan Cross\n-- Jo\u00e3o Barbosa\n-- Jorge Tim\u00f3n\n-- Kaz Wesley\n-- Kefkius\n-- kirkalx\n-- Krzysztof Jurewicz\n-- Leviathn\n-- lewuathe\n-- Luke Dashjr\n-- Luv Khemani\n-- Marcel Kr\u00fcger\n-- Marco Falke\n-- Mark Friedenbach\n-- Matt\n-- Matt Bogosian\n-- Matt Corallo\n-- Matthew English\n-- Matthew Zipkin\n-- mb300sd\n-- Mitchell Cash\n-- mrbandrews\n-- mruddy\n-- Murch\n-- Mustafa\n-- Nathaniel Mahieu\n-- Nicolas Dorier\n-- Patrick Strateman\n-- Paul Rabahy\n-- paveljanik\n-- Pavel Jan\u00edk\n-- Pavel Vasin\n-- Pedro Branco\n-- Peter Todd\n-- Philip Kaufmann\n-- Pieter Wuille\n-- Prayag Verma\n-- ptschip\n-- Puru\n-- randy-waterhouse\n-- R E Broadley\n-- Rusty Russell\n-- Suhas Daftuar\n-- Suriyaa Kudo\n-- TheLazieR Yip\n-- Thomas Kerin\n-- Tom Harding\n-- Tyler Hardin\n-- UdjinM6\n-- Warren Togami\n-- Will Binns\n-- Wladimir J. van der Laan\n-- Yuri Zhykin\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "75c2d61be8d3c1b3c85bf9a89df1821b39d42e56",
        "filename": "doc/release-notes/release-notes-0.13.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 410,
        "changes": 410,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.13.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.13.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,410 +0,0 @@\n-Bitcoin Core version 0.13.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.13.1/>\n-\n-This is a new minor version release, including activation parameters for the\n-segwit softfork, various bugfixes and performance improvements, as well as\n-updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n-wallet on a XP machine is irresponsible at least.\n-\n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n-what the source of these crashes is, but it is likely that upstream\n-libraries such as Qt are no longer being tested on XP.\n-\n-We do not have time nor resources to provide support for an OS that is\n-end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\n-suggested to upgrade to a newer version of Windows, or install an alternative OS\n-that is supported.\n-\n-No attempt is made to prevent installing or running the software on Windows XP,\n-you can still do so at your own risk, but do not expect it to work: do not\n-report issues about Windows XP to the issue tracker.\n-\n-From 0.13.1 onwards OS X 10.7 is no longer supported. 0.13.0 was intended to work on 10.7+, \n-but severe issues with the libc++ version on 10.7.x keep it from running reliably. \n-0.13.1 now requires 10.8+, and will communicate that to 10.7 users, rather than crashing unexpectedly.\n-\n-Notable changes\n-===============\n-\n-Segregated witness soft fork\n-----------------------------\n-\n-Segregated witness (segwit) is a soft fork that, if activated, will\n-allow transaction-producing software to separate (segregate) transaction\n-signatures (witnesses) from the part of the data in a transaction that is\n-covered by the txid. This provides several immediate benefits:\n-\n-- **Elimination of unwanted transaction malleability:** Segregating the witness\n-  allows both existing and upgraded software to calculate the transaction\n-  identifier (txid) of transactions without referencing the witness, which can\n-  sometimes be changed by third-parties (such as miners) or by co-signers in a\n-  multisig spend. This solves all known cases of unwanted transaction\n-  malleability, which is a problem that makes programming Bitcoin wallet\n-  software more difficult and which seriously complicates the design of smart\n-  contracts for Bitcoin.\n-\n-- **Capacity increase:** Segwit transactions contain new fields that are not\n-  part of the data currently used to calculate the size of a block, which\n-  allows a block containing segwit transactions to hold more data than allowed\n-  by the current maximum block size. Estimates based on the transactions\n-  currently found in blocks indicate that if all wallets switch to using\n-  segwit, the network will be able to support about 70% more transactions. The\n-  network will also be able to support more of the advanced-style payments\n-  (such as multisig) than it can support now because of the different weighting\n-  given to different parts of a transaction after segwit activates (see the\n-  following section for details).\n-\n-- **Weighting data based on how it affects node performance:** Some parts of\n-  each Bitcoin block need to be stored by nodes in order to validate future\n-  blocks; other parts of a block can be immediately forgotten (pruned) or used\n-  only for helping other nodes sync their copy of the block chain.  One large\n-  part of the immediately prunable data are transaction signatures (witnesses),\n-  and segwit makes it possible to give a different \"weight\" to segregated\n-  witnesses to correspond with the lower demands they place on node resources.\n-  Specifically, each byte of a segregated witness is given a weight of 1, each\n-  other byte in a block is given a weight of 4, and the maximum allowed weight\n-  of a block is 4 million.  Weighting the data this way better aligns the most\n-  profitable strategy for creating blocks with the long-term costs of block\n-  validation.\n-\n-- **Signature covers value:** A simple improvement in the way signatures are\n-  generated in segwit simplifies the design of secure signature generators\n-  (such as hardware wallets), reduces the amount of data the signature\n-  generator needs to download, and allows the signature generator to operate\n-  more quickly.  This is made possible by having the generator sign the amount\n-  of bitcoins they think they are spending, and by having full nodes refuse to\n-  accept those signatures unless the amount of bitcoins being spent is exactly\n-  the same as was signed.  For non-segwit transactions, wallets instead had to\n-  download the complete previous transactions being spent for every payment\n-  they made, which could be a slow operation on hardware wallets and in other\n-  situations where bandwidth or computation speed was constrained.\n-\n-- **Linear scaling of sighash operations:** In 2015 a block was produced that\n-  required about 25 seconds to validate on modern hardware because of the way\n-  transaction signature hashes are performed.  Other similar blocks, or blocks\n-  that could take even longer to validate, can still be produced today.  The\n-  problem that caused this can't be fixed in a soft fork without unwanted\n-  side-effects, but transactions that opt-in to using segwit will now use a\n-  different signature method that doesn't suffer from this problem and doesn't\n-  have any unwanted side-effects.\n-\n-- **Increased security for multisig:** Bitcoin addresses (both P2PKH addresses\n-  that start with a '1' and P2SH addresses that start with a '3') use a hash\n-  function known as RIPEMD-160.  For P2PKH addresses, this provides about 160\n-  bits of security---which is beyond what cryptographers believe can be broken\n-  today.  But because P2SH is more flexible, only about 80 bits of security is\n-  provided per address. Although 80 bits is very strong security, it is within\n-  the realm of possibility that it can be broken by a powerful adversary.\n-  Segwit allows advanced transactions to use the SHA256 hash function instead,\n-  which provides about 128 bits of security  (that is 281 trillion times as\n-  much security as 80 bits and is equivalent to the maximum bits of security\n-  believed to be provided by Bitcoin's choice of parameters for its Elliptic\n-  Curve Digital Security Algorithm [ECDSA].)\n-\n-- **More efficient almost-full-node security** Satoshi Nakamoto's original\n-  Bitcoin paper describes a method for allowing newly-started full nodes to\n-  skip downloading and validating some data from historic blocks that are\n-  protected by large amounts of proof of work.  Unfortunately, Nakamoto's\n-  method can't guarantee that a newly-started node using this method will\n-  produce an accurate copy of Bitcoin's current ledger (called the UTXO set),\n-  making the node vulnerable to falling out of consensus with other nodes.\n-  Although the problems with Nakamoto's method can't be fixed in a soft fork,\n-  Segwit accomplishes something similar to his original proposal: it makes it\n-  possible for a node to optionally skip downloading some blockchain data\n-  (specifically, the segregated witnesses) while still ensuring that the node\n-  can build an accurate copy of the UTXO set for the block chain with the most\n-  proof of work.  Segwit enables this capability at the consensus layer, but\n-  note that Bitcoin Core does not provide an option to use this capability as\n-  of this 0.13.1 release.\n-\n-- **Script versioning:** Segwit makes it easy for future soft forks to allow\n-  Bitcoin users to individually opt-in to almost any change in the Bitcoin\n-  Script language when those users receive new transactions.  Features\n-  currently being researched by Bitcoin Core contributors that may use this\n-  capability include support for Schnorr signatures, which can improve the\n-  privacy and efficiency of multisig transactions (or transactions with\n-  multiple inputs), and Merklized Abstract Syntax Trees (MAST), which can\n-  improve the privacy and efficiency of scripts with two or more conditions.\n-  Other Bitcoin community members are studying several other improvements\n-  that can be made using script versioning.\n-\n-Activation for the segwit soft fork is being managed using BIP9\n-versionbits.  Segwit's version bit is bit 1, and nodes will begin\n-tracking which blocks signal support for segwit at the beginning of the\n-first retarget period after segwit's start date of 15 November 2016.  If\n-95% of blocks within a 2,016-block retarget period (about two weeks)\n-signal support for segwit, the soft fork will be locked in.  After\n-another 2,016 blocks, segwit will activate.\n-\n-For more information about segwit, please see the [segwit FAQ][], the\n-[segwit wallet developers guide][] or BIPs [141][BIP141], [143][BIP143],\n-[144][BIP144], and [145][BIP145].  If you're a miner or mining pool\n-operator, please see the [versionbits FAQ][] for information about\n-signaling support for a soft fork.\n-\n-[Segwit FAQ]: https://bitcoincore.org/en/2016/01/26/segwit-benefits/\n-[segwit wallet developers guide]: https://bitcoincore.org/en/segwit_wallet_dev/\n-[BIP141]: https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\n-[BIP143]: https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki\n-[BIP144]: https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki\n-[BIP145]: https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki\n-[versionbits FAQ]: https://bitcoincore.org/en/2016/06/08/version-bits-miners-faq/\n-\n-\n-Null dummy soft fork\n--------------------\n-\n-Combined with the segwit soft fork is an additional change that turns a\n-long-existing network relay policy into a consensus rule. The\n-`OP_CHECKMULTISIG` and `OP_CHECKMULTISIGVERIFY` opcodes consume an extra\n-stack element (\"dummy element\") after signature validation. The dummy\n-element is not inspected in any manner, and could be replaced by any\n-value without invalidating the script.\n-\n-Because any value can be used for this dummy element, it's possible for\n-a third-party to insert data into other people's transactions, changing\n-the transaction's txid (called transaction malleability) and possibly\n-causing other problems.\n-\n-Since Bitcoin Core 0.10.0, nodes have defaulted to only relaying and\n-mining transactions whose dummy element was a null value (0x00, also\n-called OP_0).  The null dummy soft fork turns this relay rule into a\n-consensus rule both for non-segwit transactions and segwit transactions,\n-so that this method of mutating transactions is permanently eliminated\n-from the network.\n-\n-Signaling for the null dummy soft fork is done by signaling support\n-for segwit, and the null dummy soft fork will activate at the same time\n-as segwit.\n-\n-For more information, please see [BIP147][].\n-\n-[BIP147]: https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki\n-\n-Low-level RPC changes\n----------------------\n-\n-- `importprunedfunds` only accepts two required arguments. Some versions accept\n-  an optional third arg, which was always ignored. Make sure to never pass more\n-  than two arguments.\n-\n-\n-Linux ARM builds\n-----------------\n-\n-With the 0.13.0 release, pre-built Linux ARM binaries were added to the set of\n-uploaded executables. Additional detail on the ARM architecture targeted by each\n-is provided below.\n-\n-The following extra files can be found in the download directory or torrent:\n-\n-- `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting\n-  the 32-bit ARMv7-A architecture.\n-- `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting\n-  the 64-bit ARMv8-A architecture.\n-\n-ARM builds are still experimental. If you have problems on a certain device or\n-Linux distribution combination please report them on the bug tracker, it may be\n-possible to resolve them. Note that the device you use must be (backward)\n-compatible with the architecture targeted by the binary that you use.\n-For example, a Raspberry Pi 2 Model B or Raspberry Pi 3 Model B (in its 32-bit\n-execution state) device, can run the 32-bit ARMv7-A targeted binary. However,\n-no model of Raspberry Pi 1 device can run either binary because they are all\n-ARMv6 architecture devices that are not compatible with ARMv7-A or ARMv8-A.\n-\n-Note that Android is not considered ARM Linux in this context. The executables\n-are not expected to work out of the box on Android.\n-\n-\n-0.13.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### Consensus\n-- #8636 `9dfa0c8` Implement NULLDUMMY softfork (BIP147) (jl2012)\n-- #8848 `7a34a46` Add NULLDUMMY verify flag in bitcoinconsensus.h (jl2012)\n-- #8937 `8b66659` Define start and end time for segwit deployment (sipa)\n-\n-### RPC and other APIs\n-- #8581 `526d2b0` Drop misleading option in importprunedfunds (MarcoFalke)\n-- #8699 `a5ec248` Remove createwitnessaddress RPC command (jl2012)\n-- #8780 `794b007` Deprecate getinfo (MarcoFalke)\n-- #8832 `83ad563` Throw JSONRPCError when utxo set can not be read (MarcoFalke)\n-- #8884 `b987348` getblockchaininfo help: pruneheight is the lowest, not highest, block (luke-jr)\n-- #8858 `3f508ed` rpc: Generate auth cookie in hex instead of base64 (laanwj)\n-- #8951 `7c2bf4b` RPC/Mining: getblocktemplate: Update and fix formatting of help (luke-jr)\n-\n-### Block and transaction handling\n-- #8611 `a9429ca` Reduce default number of blocks to check at startup (sipa)\n-- #8634 `3e80ab7` Add policy: null signature for failed CHECK(MULTI)SIG (jl2012)\n-- #8525 `1672225` Do not store witness txn in rejection cache (sipa)\n-- #8499 `9777fe1` Add several policy limits and disable uncompressed keys for segwit scripts (jl2012)\n-- #8526 `0027672` Make non-minimal OP_IF/NOTIF argument non-standard for P2WSH (jl2012)\n-- #8524 `b8c79a0` Precompute sighashes (sipa)\n-- #8651 `b8c79a0` Predeclare PrecomputedTransactionData as struct (sipa)\n-\n-### P2P protocol and network code\n-- #8740 `42ea51a` No longer send local address in addrMe (laanwj)\n-- #8427 `69d1cd2` Ignore `notfound` P2P messages (laanwj)\n-- #8573 `4f84082` Set jonasschnellis dns-seeder filter flag (jonasschnelli)\n-- #8712 `23feab1` Remove maxuploadtargets recommended minimum (jonasschnelli)\n-- #8862 `7ae6242` Fix a few cases where messages were sent after requested disconnect (theuni)\n-- #8393 `fe1975a` Support for compact blocks together with segwit (sipa)\n-- #8282 `2611ad7` Feeler connections to increase online addrs in the tried table (EthanHeilman)\n-- #8612 `2215c22` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n-- #8606 `bbf379b` Fix some locks (sipa)\n-- #8594 `ab295bb` Do not add random inbound peers to addrman (gmaxwell)\n-- #8940 `5b4192b` Add x9 service bit support to dnsseed.bluematt.me, seed.bitcoinstats.com (TheBlueMatt, cdecker)\n-- #8944 `685e4c7` Remove bogus assert on number of oubound connections. (TheBlueMatt)\n-- #8949 `0dbc48a` Be more agressive in getting connections to peers with relevant services (gmaxwell)\n-\n-### Build system\n-- #8293 `fa5b249` Allow building libbitcoinconsensus without any univalue (luke-jr)\n-- #8492 `8b0bdd3` Allow building bench_bitcoin by itself (luke-jr)\n-- #8563 `147003c` Add configure check for -latomic (ajtowns)\n-- #8626 `ea51b0f` Berkeley DB v6 compatibility fix (netsafe)\n-- #8520 `75f2065` Remove check for `openssl/ec.h` (laanwj)\n-\n-### GUI\n-- #8481 `d9f0d4e` Fix minimize and close bugs (adlawren)\n-- #8487 `a37cec5` Persist the datadir after option reset (achow101)\n-- #8697 `41fd852` Fix op order to append first alert (rodasmith)\n-- #8678 `8e03382` Fix UI bug that could result in paying unexpected fee (jonasschnelli)\n-- #8911 `7634d8e` Translate all files, even if wallet disabled (laanwj)\n-- #8540 `1db3352` Fix random segfault when closing \"Choose data directory\" dialog (laanwj)\n-- #7579 `f1c0d78` Show network/chain errors in the GUI (jonasschnelli)\n-\n-### Wallet\n-- #8443 `464dedd` Trivial cleanup of HD wallet changes (jonasschnelli)\n-- #8539 `cb07f19` CDB: fix debug output (crowning-)\n-- #8664 `091cdeb` Fix segwit-related wallet bug (sdaftuar)\n-- #8693 `c6a6291` Add witness address to address book (instagibbs)\n-- #8765 `6288659` Remove \"unused\" ThreadFlushWalletDB from removeprunedfunds (jonasschnelli)\n-\n-### Tests and QA\n-- #8713 `ae8c7df` create_cache: Delete temp dir when done (MarcoFalke)\n-- #8716 `e34374e` Check legacy wallet as well (MarcoFalke)\n-- #8750 `d6ebe13` Refactor RPCTestHandler to prevent TimeoutExpired (MarcoFalke)\n-- #8652 `63462c2` remove root test directory for RPC tests (yurizhykin)\n-- #8724 `da94272` walletbackup: Sync blocks inside the loop (MarcoFalke)\n-- #8400 `bea02dc` enable rpcbind_test (yurizhykin)\n-- #8417 `f70be14` Add walletdump RPC test (including HD- & encryption-tests) (jonasschnelli)\n-- #8419 `a7aa3cc` Enable size accounting in mining unit tests (sdaftuar)\n-- #8442 `8bb1efd` Rework hd wallet dump test (MarcoFalke)\n-- #8528 `3606b6b` Update p2p-segwit.py to reflect correct behavior (instagibbs)\n-- #8531 `a27cdd8` abandonconflict: Use assert_equal (MarcoFalke)\n-- #8667 `6b07362` Fix SIGHASH_SINGLE bug in test_framework SignatureHash (jl2012)\n-- #8673 `03b0196` Fix obvious assignment/equality error in test (JeremyRubin)\n-- #8739 `cef633c` Fix broken sendcmpct test in p2p-compactblocks.py (sdaftuar)\n-- #8418 `ff893aa` Add tests for compact blocks (sdaftuar)\n-- #8803 `375437c` Ping regularly in p2p-segwit.py to keep connection alive (jl2012)\n-- #8827 `9bbe66e` Split up slow RPC calls to avoid pruning test timeouts (sdaftuar)\n-- #8829 `2a8bca4` Add bitcoin-tx JSON tests (jnewbery)\n-- #8834 `1dd1783` blockstore: Switch to dumb dbm (MarcoFalke)\n-- #8835 `d87227d` nulldummy.py: Don't run unused code (MarcoFalke)\n-- #8836 `eb18cc1` bitcoin-util-test.py should fail if the output file is empty (jnewbery)\n-- #8839 `31ab2f8` Avoid ConnectionResetErrors during RPC tests (laanwj)\n-- #8840 `cbc3fe5` Explicitly set encoding to utf8 when opening text files (laanwj)\n-- #8841 `3e4abb5` Fix nulldummy test (jl2012)\n-- #8854 `624a007` Fix race condition in p2p-compactblocks test (sdaftuar)\n-- #8857 `1f60d45` mininode: Only allow named args in wait_until (MarcoFalke)\n-- #8860 `0bee740` util: Move wait_bitcoinds() into stop_nodes() (MarcoFalke)\n-- #8882 `b73f065` Fix race conditions in p2p-compactblocks.py and sendheaders.py (sdaftuar)\n-- #8904 `cc6f551` Fix compact block shortids for a test case (dagurval)\n-\n-### Documentation\n-- #8754 `0e2c6bd` Target protobuf 2.6 in OS X build notes. (fanquake)\n-- #8461 `b17a3f9` Document return value of networkhashps for getmininginfo RPC endpoint (jlopp)\n-- #8512 `156e305` Corrected JSON typo on setban of net.cpp (sevastos)\n-- #8683 `8a7d7ff` Fix incorrect file name bitcoin.qrc  (bitcoinsSG)\n-- #8891 `5e0dd9e` Update bips.md for Segregated Witness (fanquake)\n-- #8545 `863ae74` Update git-subtree-check.sh README (MarcoFalke)\n-- #8607 `486650a` Fix doxygen off-by-one comments, fix typos (MarcoFalke)\n-- #8560 `c493f43` Fix two VarInt examples in serialize.h (cbarcenas)\n-- #8737 `084cae9` UndoReadFromDisk works on undo files (rev), not on block files (paveljanik)\n-- #8625 `0a35573` Clarify statement about parallel jobs in rpc-tests.py (isle2983)\n-- #8624 `0e6d753` build: Mention curl (MarcoFalke)\n-- #8604 `b09e13c` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)\n-- #8939 `06d15fb` Update implemented bips for 0.13.1 (sipa)\n-\n-### Miscellaneous\n-- #8742 `d31ac72` Specify Protobuf version 2 in paymentrequest.proto (fanquake)\n-- #8414,#8558,#8676,#8700,#8701,#8702 Add missing copyright headers (isle2983, kazcw)\n-- #8899 `4ed2627` Fix wake from sleep issue with Boost 1.59.0 (fanquake)\n-- #8817 `bcf3806` update bitcoin-tx to output witness data (jnewbery)\n-- #8513 `4e5fc31` Fix a type error that would not compile on OSX. (JeremyRubin)\n-- #8392 `30eac2d` Fix several node initialization issues (sipa)\n-- #8548 `305d8ac` Use `__func__` to get function name for output printing (MarcoFalke)\n-- #8291 `a987431` [util] CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- adlawren\n-- Alexey Vesnin\n-- Anders \u00d8yvind Urke-S\u00e6tre\n-- Andrew Chow\n-- Anthony Towns\n-- BtcDrak\n-- Chris Stewart\n-- Christian Barcenas\n-- Christian Decker\n-- Cory Fields\n-- crowning-\n-- Dagur Valberg Johannsson\n-- David A. Harding\n-- Eric Lombrozo\n-- Ethan Heilman\n-- fanquake\n-- Gaurav Rana\n-- Gregory Maxwell\n-- instagibbs\n-- isle2983\n-- Jameson Lopp\n-- Jeremy Rubin\n-- jnewbery\n-- Johnson Lau\n-- Jonas Schnelli\n-- jonnynewbs\n-- Justin Camarena\n-- Kaz Wesley\n-- leijurv\n-- Luke Dashjr\n-- MarcoFalke\n-- Marty Jones\n-- Matt Corallo\n-- Micha\n-- Michael Ford\n-- mruddy\n-- Pavel Jan\u00edk\n-- Pieter Wuille\n-- rodasmith\n-- Sev\n-- Suhas Daftuar\n-- whythat\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "45fff5c8bbdc1bb2834e204412164f8b34140bde",
        "filename": "doc/release-notes/release-notes-0.13.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 178,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.13.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.13.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,178 +0,0 @@\n-Bitcoin Core version 0.13.2 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.13.2/>\n-\n-This is a new minor version release, including various bugfixes and\n-performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n-wallet on a XP machine is irresponsible at least.\n-\n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n-what the source of these crashes is, but it is likely that upstream\n-libraries such as Qt are no longer being tested on XP.\n-\n-We do not have time nor resources to provide support for an OS that is\n-end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\n-suggested to upgrade to a newer version of Windows, or install an alternative OS\n-that is supported.\n-\n-No attempt is made to prevent installing or running the software on Windows XP,\n-you can still do so at your own risk, but do not expect it to work: do not\n-report issues about Windows XP to the issue tracker.\n-\n-From 0.13.1 onwards OS X 10.7 is no longer supported. 0.13.0 was intended to work on 10.7+, \n-but severe issues with the libc++ version on 10.7.x keep it from running reliably. \n-0.13.1 now requires 10.8+, and will communicate that to 10.7 users, rather than crashing unexpectedly.\n-\n-Notable changes\n-===============\n-\n-Change to wallet handling of mempool rejection\n------------------------------------------------\n-\n-When a newly created transaction failed to enter the mempool due to\n-the limits on chains of unconfirmed transactions the sending RPC\n-calls would return an error.  The transaction would still be queued\n-in the wallet and, once some of the parent transactions were\n-confirmed, broadcast after the software was restarted.\n-\n-This behavior has been changed to return success and to reattempt\n-mempool insertion at the same time transaction rebroadcast is\n-attempted, avoiding a need for a restart.\n-\n-Transactions in the wallet which cannot be accepted into the mempool\n-can be abandoned with the previously existing abandontransaction RPC\n-(or in the GUI via a context menu on the transaction).\n-\n-\n-0.13.2 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### Consensus\n-- #9293 `e591c10` [0.13 Backport #9053] IBD using chainwork instead of height and not using header timestamp (gmaxwell)\n-- #9053 `5b93eee` IBD using chainwork instead of height and not using header timestamps (gmaxwell)\n-\n-### RPC and other APIs\n-- #8845 `1d048b9` Don't return the address of a P2SH of a P2SH (jnewbery)\n-- #9041 `87fbced` keypoololdest denote Unix epoch, not GMT (s-matthew-english)\n-- #9122 `f82c81b` fix getnettotals RPC description about timemillis (visvirial)\n-- #9042 `5bcb05d` [rpc] ParseHash: Fail when length is not 64 (MarcoFalke)\n-- #9194 `f26dab7` Add option to return non-segwit serialization via rpc (instagibbs)\n-- #9347 `b711390` [0.13.2] wallet/rpc backports (MarcoFalke)\n-- #9292 `c365556` Complain when unknown rpcserialversion is specified (sipa)\n-- #9322 `49a612f` [qa] Don't set unknown rpcserialversion (MarcoFalke)\n-\n-### Block and transaction handling\n-- #8357 `ce0d817` [mempool] Fix relaypriority calculation error (maiiz)\n-- #9267 `0a4aa87` [0.13 backport #9239] Disable fee estimates for a confirm target of 1 block (morcos)\n-- #9196 `0c09d9f` Send tip change notification from invalidateblock (ryanofsky)\n-\n-### P2P protocol and network code\n-- #8995 `9ef3875` Add missing cs_main lock to ::GETBLOCKTXN processing (TheBlueMatt)\n-- #9234 `94531b5` torcontrol: Explicitly request RSA1024 private key (laanwj)\n-- #8637 `2cad5db` Compact Block Tweaks (rebase of #8235) (sipa)\n-- #9058 `286e548` Fixes for p2p-compactblocks.py test timeouts on travis (#8842) (ryanofsky)\n-- #8865 `4c71fc4` Decouple peer-processing-logic from block-connection-logic (TheBlueMatt)\n-- #9117 `6fe3981` net: don't send feefilter messages before the version handshake is complete (theuni)\n-- #9188 `ca1fd75` Make orphan parent fetching ask for witnesses (gmaxwell)\n-- #9052 `3a3bcbf` Use RelevantServices instead of node_network in AttemptToEvict (gmaxwell)\n-- #9048 `9460771` [0.13 backport #9026] Fix handling of invalid compact blocks (sdaftuar)\n-- #9357 `03b6f62` [0.13 backport #9352] Attempt reconstruction from all compact block announcements (sdaftuar)\n-- #9189 `b96a8f7` Always add default_witness_commitment with GBT client support (sipa)\n-- #9253 `28d0f22` Fix calculation of number of bound sockets to use (TheBlueMatt)\n-- #9199 `da5a16b` Always drop the least preferred HB peer when adding a new one (gmaxwell)\n-\n-### Build system\n-- #9169 `d1b4da9` build: fix qt5.7 build under macOS (theuni)\n-- #9326 `a0f7ece` Update for OpenSSL 1.1 API (gmaxwell)\n-- #9224 `396c405` Prevent FD_SETSIZE error building on OpenBSD (ivdsangen)\n-\n-### GUI\n-- #8972 `6f86b53` Make warnings label selectable (jonasschnelli) (MarcoFalke)\n-- #9185 `6d70a73` Fix coincontrol sort issue (jonasschnelli)\n-- #9094 `5f3a12c` Use correct conversion function for boost::path datadir (laanwj)\n-- #8908 `4a974b2` Update bitcoin-qt.desktop (s-matthew-english)\n-- #9190 `dc46b10` Plug many memory leaks (laanwj)\n-\n-### Wallet\n-- #9290 `35174a0` Make RelayWalletTransaction attempt to AcceptToMemoryPool (gmaxwell)\n-- #9295 `43bcfca` Bugfix: Fundrawtransaction: don't terminate when keypool is empty (jonasschnelli)\n-- #9302 `f5d606e` Return txid even if ATMP fails for new transaction (sipa)\n-- #9262 `fe39f26` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)\n-\n-### Tests and QA\n-- #9159 `eca9b46` Wait for specific block announcement in p2p-compactblocks (ryanofsky)\n-- #9186 `dccdc3a` Fix use-after-free in scheduler tests (laanwj)\n-- #9168 `3107280` Add assert_raises_message to check specific error message (mrbandrews)\n-- #9191 `29435db` 0.13.2 Backports (MarcoFalke)\n-- #9077 `1d4c884` Increase wallet-dump RPC timeout (ryanofsky)\n-- #9098 `ecd7db5` Handle zombies and cluttered tmpdirs (MarcoFalke)\n-- #8927 `387ec9d` Add script tests for FindAndDelete in pre-segwit and segwit scripts (jl2012)\n-- #9200 `eebc699` bench: Fix subtle counting issue when rescaling iteration count (laanwj)\n-\n-### Miscellaneous\n-- #8838 `094848b` Calculate size and weight of block correctly in CreateNewBlock() (jnewbery)\n-- #8920 `40169dc` Set minimum required Boost to 1.47.0 (fanquake)\n-- #9251 `a710a43` Improvement of documentation of command line parameter 'whitelist' (wodry)\n-- #8932 `106da69` Allow bitcoin-tx to create v2 transactions (btcdrak)\n-- #8929 `12428b4` add software-properties-common (sigwo)\n-- #9120 `08d1c90` bug: Missed one \"return false\" in recent refactoring in #9067 (UdjinM6)\n-- #9067 `f85ee01` Fix exit codes (UdjinM6)\n-- #9340 `fb987b3` [0.13] Update secp256k1 subtree (MarcoFalke)\n-- #9229 `b172377` Remove calls to getaddrinfo_a (TheBlueMatt)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- BtcDrak\n-- Cory Fields\n-- fanquake\n-- Gregory Maxwell\n-- Gregory Sanders\n-- instagibbs\n-- Ivo van der Sangen\n-- jnewbery\n-- Johnson Lau\n-- Jonas Schnelli\n-- Luke Dashjr\n-- maiiz\n-- MarcoFalke\n-- Masahiko Hyuga\n-- Matt Corallo\n-- matthias\n-- mrbandrews\n-- Pavel Jan\u00edk\n-- Pieter Wuille\n-- randy-waterhouse\n-- Russell Yanofsky\n-- S. Matthew English\n-- Steven\n-- Suhas Daftuar\n-- UdjinM6\n-- Wladimir J. van der Laan\n-- wodry\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "c41f22979b581f3ba6af58b73b578c8d138fa966",
        "filename": "doc/release-notes/release-notes-0.14.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 873,
        "changes": 873,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.14.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.14.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,873 +0,0 @@\n-Bitcoin Core version 0.14.0 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.14.0/>\n-\n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later.\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities and issues.\n-Please do not report issues about Windows XP to the issue tracker.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-frequently tested on them.\n-\n-Notable changes\n-===============\n-\n-Performance Improvements\n---------------\n-\n-Validation speed and network propagation performance have been greatly\n-improved, leading to much shorter sync and initial block download times.\n-\n-- The script signature cache has been reimplemented as a \"cuckoo cache\",\n-  allowing for more signatures to be cached and faster lookups.\n-- Assumed-valid blocks have been introduced which allows script validation to\n-  be skipped for ancestors of known-good blocks, without changing the security\n-  model. See below for more details.\n-- In some cases, compact blocks are now relayed before being fully validated as\n-  per BIP152.\n-- P2P networking has been refactored with a focus on concurrency and\n-  throughput. Network operations are no longer bottlenecked by validation. As a\n-  result, block fetching is several times faster than previous releases in many\n-  cases.\n-- The UTXO cache now claims unused mempool memory. This speeds up initial block\n-  download as UTXO lookups are a major bottleneck there, and there is no use for\n-  the mempool at that stage.\n-\n-\n-Manual Pruning\n---------------\n-\n-Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning\n-the blockchain allows for significant storage space savings as the vast majority of\n-the downloaded data can be discarded after processing so very little of it remains\n-on the disk.\n-\n-Manual block pruning can now be enabled by setting `-prune=1`. Once that is set,\n-the RPC command `pruneblockchain` can be used to prune the blockchain up to the\n-specified height or timestamp.\n-\n-`getinfo` Deprecated\n---------------------\n-\n-The `getinfo` RPC command has been deprecated. Each field in the RPC call\n-has been moved to another command's output with that command also giving\n-additional information that `getinfo` did not provide. The following table\n-shows where each field has been moved to:\n-\n-|`getinfo` field   | Moved to                                  |\n-|------------------|-------------------------------------------|\n-`\"version\"`\t   | `getnetworkinfo()[\"version\"]`\n-`\"protocolversion\"`| `getnetworkinfo()[\"protocolversion\"]`\n-`\"walletversion\"`  | `getwalletinfo()[\"walletversion\"]`\n-`\"balance\"`\t   | `getwalletinfo()[\"balance\"]`\n-`\"blocks\"`\t   | `getblockchaininfo()[\"blocks\"]`\n-`\"timeoffset\"`\t   | `getnetworkinfo()[\"timeoffset\"]`\n-`\"connections\"`\t   | `getnetworkinfo()[\"connections\"]`\n-`\"proxy\"`\t   | `getnetworkinfo()[\"networks\"][0][\"proxy\"]`\n-`\"difficulty\"`\t   | `getblockchaininfo()[\"difficulty\"]`\n-`\"testnet\"`\t   | `getblockchaininfo()[\"chain\"] == \"test\"`\n-`\"keypoololdest\"`  | `getwalletinfo()[\"keypoololdest\"]`\n-`\"keypoolsize\"`\t   | `getwalletinfo()[\"keypoolsize\"]`\n-`\"unlocked_until\"` | `getwalletinfo()[\"unlocked_until\"]`\n-`\"paytxfee\"`\t   | `getwalletinfo()[\"paytxfee\"]`\n-`\"relayfee\"`\t   | `getnetworkinfo()[\"relayfee\"]`\n-`\"errors\"`\t   | `getnetworkinfo()[\"warnings\"]`\n-\n-ZMQ On Windows\n---------------\n-\n-Previously the ZeroMQ notification system was unavailable on Windows\n-due to various issues with ZMQ. These have been fixed upstream and\n-now ZMQ can be used on Windows. Please see [this document](https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md) for\n-help with using ZMQ in general.\n-\n-Nested RPC Commands in Debug Console\n-------------------------------------\n-\n-The ability to nest RPC commands has been added to the debug console. This\n-allows users to have the output of a command become the input to another\n-command without running the commands separately.\n-\n-The nested RPC commands use bracket syntax (i.e. `getwalletinfo()`) and can\n-be nested (i.e. `getblock(getblockhash(1))`). Simple queries can be\n-done with square brackets where object values are accessed with either an \n-array index or a non-quoted string (i.e. `listunspent()[0][txid]`). Both\n-commas and spaces can be used to separate parameters in both the bracket syntax\n-and normal RPC command syntax.\n-\n-Network Activity Toggle\n------------------------\n-\n-A RPC command and GUI toggle have been added to enable or disable all p2p\n-network activity. The network status icon in the bottom right hand corner \n-is now the GUI toggle. Clicking the icon will either enable or disable all\n-p2p network activity. If network activity is disabled, the icon will \n-be grayed out with an X on top of it.\n-\n-Additionally the `setnetworkactive` RPC command has been added which does\n-the same thing as the GUI icon. The command takes one boolean parameter,\n-`true` enables networking and `false` disables it.\n-\n-Out-of-sync Modal Info Layer\n-----------------------------\n-\n-When Bitcoin Core is out-of-sync on startup, a semi-transparent information\n-layer will be shown over top of the normal display. This layer contains\n-details about the current sync progress and estimates the amount of time\n-remaining to finish syncing. This layer can also be hidden and subsequently\n-unhidden by clicking on the progress bar at the bottom of the window.\n-\n-Support for JSON-RPC Named Arguments\n-------------------------------------\n-\n-Commands sent over the JSON-RPC interface and through the `bitcoin-cli` binary\n-can now use named arguments. This follows the [JSON-RPC specification](http://www.jsonrpc.org/specification)\n-for passing parameters by-name with an object.\n-\n-`bitcoin-cli` has been updated to support this by parsing `name=value` arguments\n-when the `-named` option is given.\n-\n-Some examples:\n-\n-    src/bitcoin-cli -named help command=\"help\"\n-    src/bitcoin-cli -named getblockhash height=0\n-    src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-    src/bitcoin-cli -named sendtoaddress address=\"(snip)\" amount=\"1.0\" subtractfeefromamount=true\n-\n-The order of arguments doesn't matter in this case. Named arguments are also\n-useful to leave out arguments that should stay at their default value. The\n-rarely-used arguments `comment` and `comment_to` to `sendtoaddress`, for example, can\n-be left out. However, this is not yet implemented for many RPC calls, this is\n-expected to land in a later release.\n-\n-The RPC server remains fully backwards compatible with positional arguments.\n-\n-Opt into RBF When Sending\n--------------------------\n-\n-A new startup option, `-walletrbf`, has been added to allow users to have all\n-transactions sent opt into RBF support. The default value for this option is\n-currently `false`, so transactions will not opt into RBF by default. The new\n-`bumpfee` RPC can be used to replace transactions that opt into RBF.\n-\n-Sensitive Data Is No Longer Stored In Debug Console History\n------------------------------------------------------------\n-\n-The debug console maintains a history of previously entered commands that can be\n-accessed by pressing the Up-arrow key so that users can easily reuse previously\n-entered commands. Commands which have sensitive information such as passphrases and\n-private keys will now have a `(...)` in place of the parameters when accessed through\n-the history.\n-\n-Retaining the Mempool Across Restarts\n--------------------------------------\n-\n-The mempool will be saved to the data directory prior to shutdown\n-to a `mempool.dat` file. This file preserves the mempool so that when the node\n-restarts the mempool can be filled with transactions without waiting for new transactions\n-to be created. This will also preserve any changes made to a transaction through\n-commands such as `prioritisetransaction` so that those changes will not be lost.\n-\n-Final Alert\n------------\n-\n-The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. \n-The Alert System was retired with a maximum sequence final alert which causes any nodes\n-supporting the Alert System to display a static hard-coded \"Alert Key Compromised\" message which also\n-prevents any other alerts from overriding it. This final alert is hard-coded into this release\n-so that all old nodes receive the final alert.\n-\n-GUI Changes\n------------\n-\n- - After resetting the options by clicking the `Reset Options` button \n-   in the options dialog or with the `-resetguioptions` startup option, \n-   the user will be prompted to choose the data directory again. This \n-   is to ensure that custom data directories will be kept after the \n-   option reset which clears the custom data directory set via the choose \n-   datadir dialog.\n-\n- - Multiple peers can now be selected in the list of peers in the debug \n-   window. This allows for users to ban or disconnect multiple peers \n-   simultaneously instead of banning them one at a time.\n-\n- - An indicator has been added to the bottom right hand corner of the main\n-   window to indicate whether the wallet being used is a HD wallet. This\n-   icon will be grayed out with an X on top of it if the wallet is not a\n-   HD wallet.\n-\n-Low-level RPC changes\n-----------------------\n-\n- - `importprunedfunds` only accepts two required arguments. Some versions accept\n-   an optional third arg, which was always ignored. Make sure to never pass more\n-   than two arguments.\n-\n- - The first boolean argument to `getaddednodeinfo` has been removed. This is \n-   an incompatible change.\n-\n- - RPC command `getmininginfo` loses the \"testnet\" field in favor of the more\n-   generic \"chain\" (which has been present for years).\n-\n- - A new RPC command `preciousblock` has been added which marks a block as\n-   precious. A precious block will be treated as if it were received earlier\n-   than a competing block.\n-\n- - A new RPC command `importmulti` has been added which receives an array of \n-   JSON objects representing the intention of importing a public key, a \n-   private key, an address and script/p2sh\n-\n- - Use of `getrawtransaction` for retrieving confirmed transactions with unspent\n-   outputs has been deprecated. For now this will still work, but in the future\n-   it may change to only be able to retrieve information about transactions in\n-   the mempool or if `txindex` is enabled.\n-\n- - A new RPC command `getmemoryinfo` has been added which will return information\n-   about the memory usage of Bitcoin Core. This was added in conjunction with\n-   optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n-   for more information.\n-\n- - A new RPC command `bumpfee` has been added which allows replacing an\n-   unconfirmed wallet transaction that signaled RBF (see the `-walletrbf`\n-   startup option above) with a new transaction that pays a higher fee, and\n-   should be more likely to get confirmed quickly.\n-\n-HTTP REST Changes\n------------------\n-\n- - UTXO set query (`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>\n-   /.../<txid>-<n>.<bin|hex|json>`) responses were changed to return status \n-   code `HTTP_BAD_REQUEST` (400) instead of `HTTP_INTERNAL_SERVER_ERROR` (500)\n-   when requests contain invalid parameters.\n-\n-Minimum Fee Rate Policies\n--------------------------\n-\n-Since the changes in 0.12 to automatically limit the size of the mempool and improve the performance of block creation in mining code it has not been important for relay nodes or miners to set `-minrelaytxfee`. With this release the following concepts that were tied to this option have been separated out:\n-- incremental relay fee used for calculating BIP 125 replacement and mempool limiting. (1000 satoshis/kB)\n-- calculation of threshold for a dust output. (effectively 3 * 1000 satoshis/kB)\n-- minimum fee rate of a package of transactions to be included in a block created by the mining code. If miners wish to set this minimum they can use the new `-blockmintxfee` option.  (defaults to 1000 satoshis/kB)\n-\n-The `-minrelaytxfee` option continues to exist but is recommended to be left unset.\n-\n-Fee Estimation Changes\n-----------------------\n-\n-- Since 0.13.2 fee estimation for a confirmation target of 1 block has been\n-  disabled. The fee slider will no longer be able to choose a target of 1 block.\n-  This is only a minor behavior change as there was often insufficient\n-  data for this target anyway. `estimatefee 1` will now always return -1 and\n-  `estimatesmartfee 1` will start searching at a target of 2.\n-\n-- The default target for fee estimation is changed to 6 blocks in both the GUI\n-  (previously 25) and for RPC calls (previously 2).\n-\n-Removal of Priority Estimation\n-------------------------------\n-\n-- Estimation of \"priority\" needed for a transaction to be included within a target\n-  number of blocks has been removed.  The RPC calls are deprecated and will either\n-  return -1 or 1e24 appropriately. The format for `fee_estimates.dat` has also\n-  changed to no longer save these priority estimates. It will automatically be\n-  converted to the new format which is not readable by prior versions of the\n-  software.\n-\n-- Support for \"priority\" (coin age) transaction sorting for mining is\n-  considered deprecated in Core and will be removed in the next major version.\n-  This is not to be confused with the `prioritisetransaction` RPC which will remain\n-  supported by Core for adding fee deltas to transactions.\n-\n-P2P connection management\n---------------------------\n-\n-- Peers manually added through the `-addnode` option or `addnode` RPC now have their own\n-  limit of eight connections which does not compete with other inbound or outbound\n-  connection usage and is not subject to the limitation imposed by the `-maxconnections`\n-  option.\n-\n-- New connections to manually added peers are performed more quickly.\n-\n-Introduction of assumed-valid blocks\n--------------------------------------\n-\n-- A significant portion of the initial block download time is spent verifying\n-  scripts/signatures.  Although the verification must pass to ensure the security\n-  of the system, no other result from this verification is needed: If the node\n-  knew the history of a given block were valid it could skip checking scripts\n-  for its ancestors.\n-\n-- A new configuration option 'assumevalid' is provided to express this knowledge\n-  to the software.  Unlike the 'checkpoints' in the past this setting does not\n-  force the use of a particular chain: chains that are consistent with it are\n-  processed quicker, but other chains are still accepted if they'd otherwise\n-  be chosen as best. Also unlike 'checkpoints' the user can configure which\n-  block history is assumed true, this means that even outdated software can\n-  sync more quickly if the setting is updated by the user.\n-\n-- Because the validity of a chain history is a simple objective fact it is much\n-  easier to review this setting.  As a result the software ships with a default\n-  value adjusted to match the current chain shortly before release.  The use\n-  of this default value can be disabled by setting -assumevalid=0\n-\n-Fundrawtransaction change address reuse\n-----------------------------------------\n-\n-- Before 0.14, `fundrawtransaction` was by default wallet stateless. In\n-  almost all cases `fundrawtransaction` does add a change-output to the\n-  outputs of the funded transaction. Before 0.14, the used keypool key was\n-  never marked as change-address key and directly returned to the keypool\n-  (leading to address reuse).  Before 0.14, calling `getnewaddress`\n-  directly after `fundrawtransaction` did generate the same address as\n-  the change-output address.\n-\n-- Since 0.14, fundrawtransaction does reserve the change-output-key from\n-  the keypool by default (optional by setting  `reserveChangeKey`, default =\n-  `true`)\n-\n-- Users should also consider using `getrawchangeaddress()` in conjunction\n-  with `fundrawtransaction`'s `changeAddress` option.\n-\n-Unused mempool memory used by coincache\n-----------------------------------------\n-\n-- Before 0.14, memory reserved for mempool (using the `-maxmempool` option)\n-  went unused during initial block download, or IBD. In 0.14, the UTXO DB cache\n-  (controlled with the `-dbcache` option) borrows memory from the mempool\n-  when there is extra memory available. This may result in an increase in\n-  memory usage during IBD for those previously relying on only the `-dbcache`\n-  option to limit memory during that time.\n-\n-0.14.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, minor refactors and string updates. For convenience\n-in locating the code changes and accompanying discussion, both the pull request\n-and git merge commit are mentioned.\n-\n-### RPC and other APIs\n-- #8421 `b77bb95` httpserver: drop boost dependency (theuni)\n-- #8638 `f061415` rest.cpp: change `HTTP_INTERNAL_SERVER_ERROR` to `HTTP_BAD_REQUEST` (djpnewton)\n-- #8272 `91990ee` Make the dummy argument to getaddednodeinfo optional (sipa)\n-- #8722 `bb843ad` bitcoin-cli: More detailed error reporting (laanwj)\n-- #6996 `7f71a3c` Add preciousblock RPC (sipa)\n-- #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n-- #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n-- #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)\n-- #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)\n-- #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)\n-- #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)\n-- #9518 `a65ced1` Return height of last block pruned by pruneblockchain RPC (ryanofsky)\n-- #9222 `7cb024e` Add 'subtractFeeFromAmount' option to 'fundrawtransaction' (dooglus)\n-- #8456 `2ef52d3` Simplified `bumpfee` command (mrbandrews)\n-- #9516 `727a798` Bug-fix: listsinceblock: use fork point as reference for blocks in reorg'd chains (kallewoof)\n-- #9640 `7bfb770` Bumpfee: bugfixes for error handling and feerate calculation (sdaftuar)\n-- #9673 `8d6447e` Set correct metadata on bumpfee wallet transactions (ryanofsky)\n-- #9650 `40f7e27` Better handle invalid parameters to signrawtransaction (TheBlueMatt)\n-- #9682 `edc9e63` Require timestamps for importmulti keys (ryanofsky)\n-- #9108 `d8e8b06` Use importmulti timestamp when importing watch only keys (on top of #9682) (ryanofsky)\n-- #9756 `7a93af8` Return error when importmulti called with invalid address (ryanofsky)\n-- #9778 `ad168ef` Add two hour buffer to manual pruning (morcos)\n-- #9761 `9828f9a` Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)\n-- #9474 `48d7e0d` Mark the minconf parameter to move as ignored (sipa)\n-- #9619 `861cb0c` Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates (luke-jr)\n-- #9773 `9072395` Return errors from importmulti if complete rescans are not successful (ryanofsky)\n-\n-### Block and transaction handling\n-- #8391 `37d83bb` Consensus: Remove ISM (NicolasDorier)\n-- #8365 `618c9dd` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n-- #8814 `14b7b3f` wallet, policy: ParameterInteraction: Don't allow 0 fee (MarcoFalke)\n-- #8515 `9bdf526` A few mempool removal optimizations (sipa)\n-- #8448 `101c642` Store mempool and prioritization data to disk (sipa)\n-- #7730 `3c03dc2` Remove priority estimation (morcos)\n-- #9111 `fb15610` Remove unused variable `UNLIKELY_PCT` from fees.h (fanquake)\n-- #9133 `434e683` Unset fImporting for loading mempool (morcos)\n-- #9179 `b9a87b4` Set `DEFAULT_LIMITFREERELAY` = 0 kB/minute (MarcoFalke)\n-- #9239 `3fbf079` Disable fee estimates for 1-block target (morcos)\n-- #7562 `1eef038` Bump transaction version default to 2 (btcdrak)\n-- #9313,#9367 If we don't allow free txs, always send a fee filter (morcos)\n-- #9346 `b99a093` Batch construct batches (sipa)\n-- #9262 `5a70572` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)\n-- #9288 `1ce7ede` Fix a bug if the min fee is 0 for FeeFilterRounder (morcos)\n-- #9395 `0fc1c31` Add test for `-walletrejectlongchains` (morcos)\n-- #9107 `7dac1e5` Safer modify new coins (morcos)\n-- #9312 `a72f76c` Increase mempool expiry time to 2 weeks (morcos)\n-- #8610 `c252685` Share unused mempool memory with coincache (sipa)\n-- #9138 `f646275` Improve fee estimation (morcos)\n-- #9408 `46b249e` Allow shutdown during LoadMempool, dump only when necessary (jonasschnelli)\n-- #9310 `8c87f17` Assert FRESH validity in CCoinsViewCache::BatchWrite (ryanofsky)\n-- #7871 `e2e624d` Manual block file pruning (mrbandrews)\n-- #9507 `0595042` Fix use-after-free in CTxMemPool::removeConflicts() (sdaftuar)\n-- #9380 `dd98f04` Separate different uses of minimum fees (morcos)\n-- #9596 `71148b8` bugfix save feeDelta instead of priorityDelta in DumpMempool (morcos)\n-- #9371 `4a1dc35` Notify on removal (morcos)\n-- #9519 `9b4d267` Exclude RBF replacement txs from fee estimation (morcos)\n-- #8606 `e2a1a1e` Fix some locks (sipa)\n-- #8681 `6898213` Performance Regression Fix: Pre-Allocate txChanged vector (JeremyRubin)\n-- #8223 `744d265` c++11: Use std::unique\\_ptr for block creation (domob1812)\n-- #9125 `7490ae8` Make CBlock a vector of shared\\_ptr of CTransactions (sipa)\n-- #8930 `93566e0` Move orphan processing to ActivateBestChain (TheBlueMatt)\n-- #8580 `46904ee` Make CTransaction actually immutable (sipa)\n-- #9240 `a1dcf2e` Remove txConflicted (morcos)\n-- #8589 `e8cfe1e` Inline CTxInWitness inside CTxIn (sipa)\n-- #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)\n-- #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n-- #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n-- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)\n-- #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)\n-\n-### P2P protocol and network code\n-- #8128 `1030fa7` Turn net structures into dumb storage classes (theuni)\n-- #8282 `026c6ed` Feeler connections to increase online addrs in the tried table (EthanHeilman)\n-- #8462 `53f8f22` Move AdvertiseLocal debug output to net category (Mirobit)\n-- #8612 `84decb5` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n-- #8594 `5b2ea29` Do not add random inbound peers to addrman (gmaxwell)\n-- #8085 `6423116` Begin encapsulation (theuni)\n-- #8715 `881d7ea` only delete CConnman if it's been created (theuni)\n-- #8707 `f07424a` Fix maxuploadtarget setting (theuni)\n-- #8661 `d2e4655` Do not set an addr time penalty when a peer advertises itself (gmaxwell)\n-- #8822 `9bc6a6b` Consistent checksum handling (laanwj)\n-- #8936 `1230890` Report NodeId in misbehaving debug (rebroad)\n-- #8968 `3cf496d` Don't hold cs\\_main when calling ProcessNewBlock from a cmpctblock (TheBlueMatt)\n-- #9002 `e1d1f57` Make connect=0 disable automatic outbound connections (gmaxwell)\n-- #9050 `fcf61b8` Make a few values immutable, and use deterministic randomness for the localnonce (theuni)\n-- #8969 `3665483` Decouple peer-processing-logic from block-connection-logic (#2) (TheBlueMatt)\n-- #8708 `c8c572f` have CConnman handle message sending (theuni)\n-- #8709 `1e50d22` Allow filterclear messages for enabling TX relay only (rebroad)\n-- #9045 `9f554e0` Hash P2P messages as they are received instead of at process-time (TheBlueMatt)\n-- #9026 `dc6b940` Fix handling of invalid compact blocks (sdaftuar)\n-- #8996 `ab914a6` Network activity toggle (luke-jr)\n-- #9131 `62af164` fNetworkActive is not protected by a lock, use an atomic (jonasschnelli)\n-- #8872 `0c577f2` Remove block-request logic from INV message processing (TheBlueMatt)\n-- #8690 `791b58d` Do not fully sort all nodes for addr relay (sipa)\n-- #9128 `76fec09` Decouple CConnman and message serialization (theuni)\n-- #9226 `3bf06e9` Remove fNetworkNode and pnodeLocalHost (gmaxwell)\n-- #9352 `a7f7651` Attempt reconstruction from all compact block announcements (sdaftuar)\n-- #9319 `a55716a` Break addnode out from the outbound connection limits (gmaxwell)\n-- #9261 `2742568` Add unstored orphans with rejected parents to recentRejects (morcos)\n-- #9441 `8b66bf7` Massive speedup. Net locks overhaul (theuni)\n-- #9375 `3908fc4` Relay compact block messages prior to full block connection (TheBlueMatt)\n-- #9400 `8a445c5` Set peers as HB peers upon full block validation (instagibbs)\n-- #9561 `6696b46` Wake message handling thread when we receive a new block (TheBlueMatt)\n-- #9535 `82274c0` Split CNode::cs\\_vSend: message processing and message sending (TheBlueMatt)\n-- #9606 `3f9f962` Consistently use GetTimeMicros() for inactivity checks (sdaftuar)\n-- #9594 `fd70211` Send final alert message to older peers after connecting (gmaxwell)\n-- #9626 `36966a1` Clean up a few CConnman cs\\_vNodes/CNode things (TheBlueMatt)\n-- #9609 `4966917` Fix remaining net assertions (theuni)\n-- #9671 `7821db3` Fix super-unlikely race introduced in 236618061a445d2cb11e72 (TheBlueMatt)\n-- #9730 `33f3b21` Remove bitseed.xf2.org form the dns seed list (jonasschnelli)\n-- #9698 `2447c10` Fix socket close race (theuni)\n-- #9708 `a06ede9` Clean up all known races/platform-specific UB at the time PR was opened (TheBlueMatt)\n-- #9715 `b08656e` Disconnect peers which we do not receive VERACKs from within 60 sec (TheBlueMatt)\n-- #9720 `e87ce95` Fix banning and disallow sending messages before receiving verack (theuni)\n-- #9268 `09c4fd1` Fix rounding privacy leak introduced in #9260 (TheBlueMatt)\n-- #9075 `9346f84` Decouple peer-processing-logic from block-connection-logic (#3) (TheBlueMatt)\n-- #8688 `047ded0` Move static global randomizer seeds into CConnman (sipa)\n-- #9289 `d9ae1ce` net: drop boost::thread\\_group (theuni)\n-\n-### Validation\n-- #9014 `d04aeba` Fix block-connection performance regression (TheBlueMatt)\n-- #9299 `d52ce89` Remove no longer needed check for premature v2 txs (morcos)\n-- #9273 `b68685a` Remove unused `CDiskBlockPos*` argument from ProcessNewBlock (TheBlueMatt)\n-- #8895 `b83264d` Better SigCache Implementation (JeremyRubin)\n-- #9490 `e126d0c` Replace FindLatestBefore used by importmulti with FindEarliestAtLeast (gmaxwell)\n-- #9484 `812714f` Introduce assumevalid setting to skip validation presumed valid scripts (gmaxwell)\n-- #9511 `7884956` Don't overwrite validation state with corruption check (morcos)\n-- #9765 `1e92e04` Harden against mistakes handling invalid blocks (sdaftuar)\n-- #9779 `3c02b95` Update nMinimumChainWork and defaultAssumeValid (gmaxwell)\n-- #8524 `19b0f33` Precompute sighashes (sipa)\n-- #9791 `1825a03` Avoid VLA in hash.h (sipa)\n-\n-### Build system\n-- #8238 `6caf3ee` ZeroMQ 4.1.5 && ZMQ on Windows (fanquake)\n-- #8520 `b40e19c` Remove check for `openssl/ec.h` (laanwj)\n-- #8617 `de07fdc` Include instructions to extract Mac OS X SDK on Linux using 7zip and SleuthKit (luke-jr)\n-- #8566 `7b98895` Easy to use gitian building script (achow101)\n-- #8604 `f256843` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)\n-- #8640 `2663e51` depends: Remove Qt46 package (fanquake)\n-- #8645 `8ea4440` Remove unused Qt 4.6 patch (droark)\n-- #8608 `7e9ab95` Install manpages via make install, also add some autogenerated manpages (nomnombtc)\n-- #8781 `ca69ef4` contrib: delete `qt_translations.py` (MarcoFalke)\n-- #8783 `64dc645` share: remove qt/protobuf.pri (MarcoFalke)\n-- #8423 `3166dff` depends: expat 2.2.0, ccache 3.3.1, fontconfig 2.12.1 (fanquake)\n-- #8791 `b694b0d` travis: cross-mac: explicitly enable gui (MarcoFalke)\n-- #8820 `dc64141` depends: Fix Qt compilation with Xcode 8 (fanquake)\n-- #8730 `489a6ab` depends: Add libevent compatibility patch for windows (laanwj)\n-- #8819 `c841816` depends: Boost 1.61.0 (fanquake)\n-- #8826 `f560d95` Do not include `env_win.cc` on non-Windows systems (paveljanik)\n-- #8948 `e077e00` Reorder Windows gitian build order to match Linux (Michagogo)\n-- #8568 `078900d` new var `DIST_CONTRIB` adds useful things for packagers from contrib (nomnombtc)\n-- #9114 `21e6c6b` depends: Set `OSX_MIN_VERSION` to 10.8 (fanquake)\n-- #9140 `018a4eb` Bugfix: Correctly replace generated headers and fail cleanly (luke-jr)\n-- #9156 `a8b2a82` Add compile and link options echo to configure (jonasschnelli)\n-- #9393 `03d85f6` Include cuckoocache header in Makefile (MarcoFalke)\n-- #9420 `bebe369` Fix linker error when configured with --enable-lcov (droark)\n-- #9412 `53442af` Fix 'make deploy' for OSX (jonasschnelli)\n-- #9475 `7014506` Let autoconf detect presence of `EVP_MD_CTX_new` (luke-jr)\n-- #9513 `bbf193f` Fix qt distdir builds (theuni)\n-- #9471 `ca615e6` depends: libevent 2.1.7rc (fanquake)\n-- #9468 `f9117f2` depends: Dependency updates for 0.14.0 (fanquake)\n-- #9469 `01c4576` depends: Qt 5.7.1 (fanquake)\n-- #9574 `5ac6687` depends: Fix QT build on OSX (fanquake)\n-- #9646 `720b579` depends: Fix cross build for qt5.7 (theuni)\n-- #9705 `6a55515` Add options to override BDB cflags/libs (laanwj)\n-- #8249 `4e1567a` Enable (and check for) 64-bit ASLR on Windows (laanwj)\n-- #9758 `476cc47` Selectively suppress deprecation warnings (jonasschnelli)\n-- #9783 `6d61a2b` release: bump gitian descriptors for a new 0.14 package cache (theuni)\n-- #9789 `749fe95` build: add --enable-werror and warn on vla's (theuni)\n-- #9831 `99fd85c` build: force a c++ standard to be specified (theuni)\n-\n-### GUI\n-- #8192 `c503863` Remove URLs from About dialog translations (fanquake)\n-- #8540 `36404ae` Fix random segfault when closing \"Choose data directory\" dialog (laanwj)\n-- #8517 `2468292` Show wallet HD state in statusbar (jonasschnelli)\n-- #8463 `62a5a8a` Remove Priority from coincontrol dialog (MarcoFalke)\n-- #7579 `0606f95` Show network/chain errors in the GUI (jonasschnelli)\n-- #8583 `c19f8a4` Show XTHIN in GUI (rebroad)\n-- #7783 `4335d5a` RPC-Console: support nested commands and simple value queries (jonasschnelli)\n-- #8672 `6052d50` Show transaction size in transaction details window (Cocosoft)\n-- #8777 `fec6af7` WalletModel: Expose disablewallet (MarcoFalke)\n-- #8371 `24f72e9` Add out-of-sync modal info layer (jonasschnelli)\n-- #8885 `b2fec4e` Fix ban from qt console (theuni)\n-- #8821 `bf8e68a` sync-overlay: Don't block during reindex (MarcoFalke)\n-- #8906 `088d1f4` sync-overlay: Don't show progress twice (MarcoFalke)\n-- #8918 `47ace42` Add \"Copy URI\" to payment request context menu (luke-jr)\n-- #8925 `f628d9a` Display minimum ping in debug window (rebroad)\n-- #8774 `3e942a7` Qt refactors to better abstract wallet access (luke-jr)\n-- #8985 `7b1bfa3` Use pindexBestHeader instead of setBlockIndexCandidates for NotifyHeaderTip() (jonasschnelli)\n-- #8989 `d2143dc` Overhaul smart-fee slider, adjust default confirmation target (jonasschnelli)\n-- #9043 `273bde3` Return useful error message on ATMP failure (MarcoFalke)\n-- #9088 `4e57824` Reduce ambiguity of warning message (rebroad)\n-- #8874 `e984730` Multiple Selection for peer and ban tables (achow101)\n-- #9145 `924745d` Make network disabled icon 50% opaque (MarcoFalke)\n-- #9130 `ac489b2` Mention the new network toggle functionality in the tooltip (paveljanik)\n-- #9218 `4d955fc` Show progress overlay when clicking spinner icon (laanwj)\n-- #9280 `e15660c` Show ModalOverlay by pressing the progress bar, allow hiding (jonasschnelli)\n-- #9296 `fde7d99` Fix missed change to WalletTx structure (morcos)\n-- #9266 `2044e37` Bugfix: Qt/RPCConsole: Put column enum in the right places (luke-jr)\n-- #9255 `9851a84` layoutAboutToChange signal is called layoutAboutToBeChanged (laanwj)\n-- #9330 `47e6a19` Console: add security warning (jonasschnelli)\n-- #9329 `db45ad8` Console: allow empty arguments (jonasschnelli)\n-- #8877 `6dc4c43` Qt RPC console: history sensitive-data filter, and saving input line when browsing history (luke-jr)\n-- #9462 `649cf5f` Do not translate tilde character (MarcoFalke)\n-- #9457 `123ea73` Select more files for translation (MarcoFalke)\n-- #9413 `fd7d8c7` CoinControl: Allow non-wallet owned change addresses (jonasschnelli)\n-- #9461 `b250686` Improve progress display during headers-sync and peer-finding (jonasschnelli)\n-- #9588 `5086452` Use nPowTargetSpacing constant (MarcoFalke)\n-- #9637 `d9e4d1d` Fix transaction details output-index to reflect vout index (jonasschnelli)\n-- #9718 `36f9d3a` Qt/Intro: Various fixes (luke-jr)\n-- #9735 `ec66d06` devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)\n-- #9755 `a441db0` Bugfix: Qt/Options: Restore persistent \"restart required\" notice (luke-jr)\n-- #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)\n-\n-### Wallet\n-- #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)\n-- #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)\n-- #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)\n-- #8564 `0168019` Remove unused code/conditions in ReadAtCursor (jonasschnelli)\n-- #8601 `37ac678` Add option to opt into full-RBF when sending funds (rebase, original by petertodd) (laanwj)\n-- #8494 `a5b20ed` init, wallet: ParameterInteraction() iff wallet enabled (MarcoFalke)\n-- #8760 `02ac669` init: Get rid of some `ENABLE_WALLET` (MarcoFalke)\n-- #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)\n-- #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)\n-- #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)\n-- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)\n-- #8287 `e10af96` Set fLimitFree = true (MarcoFalke)\n-- #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)\n-- #7551 `f2d7056` Add importmulti RPC call (pedrobranco)\n-- #9016 `0dcb888` Return useful error message on ATMP failure (instagibbs)\n-- #8753 `f8723d2` Locked memory manager (laanwj)\n-- #8828 `a4fd8df` Move CWalletDB::ReorderTransactions to CWallet (pstratem)\n-- #8977 `6a1343f` Refactor wallet/init interaction (Reaccept wtx, flush thread) (jonasschnelli)\n-- #9036 `ed0cc50` Change default confirm target from 2 to 6 (laanwj)\n-- #9071 `d1871da` Declare wallet.h functions inline (sipa)\n-- #9132 `f54e460` Make strWalletFile const (jonasschnelli)\n-- #9141 `5ea5e04` Remove unnecessary calls to CheckFinalTx (jonasschnelli)\n-- #9165 `c01f16a` SendMoney: use already-calculated balance (instagibbs)\n-- #9311 `a336d13` Flush wallet after abandontransaction (morcos)\n-- #8717 `38e4887` Addition of ImmatureCreditCached to MarkDirty() (spencerlievens)\n-- #9446 `510c0d9` SetMerkleBranch: remove unused code, remove cs\\_main lock requirement (jonasschnelli)\n-- #8776 `2a524b8` Wallet refactoring leading up to multiwallet (luke-jr)\n-- #9465 `a7d55c9` Do not perform ECDSA signing in the fee calculation inner loop (gmaxwell)\n-- #9404 `12e3112` Smarter coordination of change and fee in CreateTransaction (morcos)\n-- #9377 `fb75cd0` fundrawtransaction: Keep change-output keys by default, make it optional (jonasschnelli)\n-- #9578 `923dc44` Add missing mempool lock for CalculateMemPoolAncestors (TheBlueMatt)\n-- #9227 `02464da` Make nWalletDBUpdated atomic to avoid a potential race (pstratem)\n-- #9764 `f8af89a` Prevent \"overrides a member function but is not marked 'override'\" warnings (laanwj)\n-- #9771 `e43a585` Add missing cs\\_wallet lock that triggers new lock held assertion (ryanofsky)\n-- #9316 `3097ea4` Disable free transactions when relay is disabled (MarcoFalke)\n-- #9615 `d2c9e4d` Wallet incremental fee (morcos)\n-- #9760 `40c754c` Remove importmulti always-true check (ryanofsky)\n-\n-### Tests and QA\n-- #8270 `6e5e5ab` Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)\n-- #8534,#8504 Remove java comparison tool (laanwj,MarcoFalke)\n-- #8482 `740cff5` Use single cache dir for chains (MarcoFalke)\n-- #8450 `21857d2` Replace `rpc_wallet_tests.cpp` with python RPC unit tests (pstratem)\n-- #8671 `ddc3080` Minimal fix to slow prevector tests as stopgap measure (JeremyRubin)\n-- #8680 `666eaf0` Address Travis spurious failures (theuni)\n-- #8789 `e31a43c` pull-tester: Only print output when failed (MarcoFalke)\n-- #8810 `14e8f99` tests: Add exception error message for JSONRPCException (laanwj)\n-- #8830 `ef0801b` test: Add option to run bitcoin-util-test.py manually (jnewbery)\n-- #8881 `e66cc1d` Add some verbose logging to bitcoin-util-test.py (jnewbery)\n-- #8922 `0329511` Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)\n-- #8873 `74dc388` Add microbenchmarks to profile more code paths (ryanofsky)\n-- #9032 `6a8be7b` test: Add format-dependent comparison to bctest (laanwj)\n-- #9023 `774db92` Add logging to bitcoin-util-test.py (jnewbery)\n-- #9065 `c9bdf9a` Merge `doc/unit-tests.md` into `src/test/README.md` (laanwj)\n-- #9069 `ed64bce` Clean up bctest.py and bitcoin-util-test.py (jnewbery)\n-- #9095 `b8f43e3` test: Fix test\\_random includes (MarcoFalke)\n-- #8894 `faec09b` Testing: Include fRelay in mininode version messages (jnewbery)\n-- #9097 `e536499` Rework `sync_*` and preciousblock.py (MarcoFalke)\n-- #9049 `71bc39e` Remove duplicatable duplicate-input check from CheckTransaction (TheBlueMatt)\n-- #9136 `b422913` sync\\_blocks cleanup (ryanofsky)\n-- #9151 `4333b1c` proxy\\_test: Calculate hardcoded port numbers (MarcoFalke)\n-- #9206 `e662d28` Make test constant consistent with consensus.h (btcdrak)\n-- #9139 `0de7fd3` Change sync\\_blocks to pick smarter maxheight (on top of #9196) (ryanofsky)\n-- #9100 `97ec6e5` tx\\_valid: re-order inputs to how they are encoded (dcousens)\n-- #9202 `e56cf67` bench: Add support for measuring CPU cycles (laanwj)\n-- #9223 `5412c08` unification of Bloom filter representation (s-matthew-english)\n-- #9257 `d7ba4a2` Dump debug logs on travis failures (sdaftuar)\n-- #9221 `9e4bb31` Get rid of duplicate code (MarcoFalke)\n-- #9274 `919db03` Use cached utxo set to fix performance regression (MarcoFalke)\n-- #9276 `ea33f19` Some minor testing cleanups (morcos)\n-- #9291 `8601784` Remove mapOrphanTransactionsByPrev from DoS\\_tests (sipa)\n-- #9309 `76fcd9d` Wallet needs to stay unlocked for whole test (morcos)\n-- #9172 `5bc209c` Resurrect pstratem's \"Simple fuzzing framework\" (laanwj)\n-- #9331 `c6fd923` Add test for rescan feature of wallet key import RPCs (ryanofsky)\n-- #9354 `b416095` Make fuzzer actually test CTxOutCompressor (sipa)\n-- #9390,#9416 travis: make distdir (MarcoFalke)\n-- #9308 `0698639` test: Add CCoinsViewCache Access/Modify/Write tests (ryanofsky)\n-- #9406 `0f921e6` Re-enable a blank v1 Tx JSON test (droark)\n-- #9435 `dbc8a8c` Removed unused variable in test, fixing warning (ryanofsky)\n-- #9436 `dce853e` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n-- #9525 `02e5308` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n-- #9498 `054d664` Basic CCheckQueue Benchmarks (JeremyRubin)\n-- #9554 `0b96abc` test: Avoid potential NULL pointer dereference in `addrman_tests.cpp` (practicalswift)\n-- #9628 `f895023` Increase a sync\\_blocks timeout in pruning.py (sdaftuar)\n-- #9638 `a7ea2f8` Actually test assertions in pruning.py (MarcoFalke)\n-- #9647 `e99f0d7` Skip RAII event tests if libevent is built without `event_set_mem_functions` (luke-jr)\n-- #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n-- #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n-- #9707 `b860915` Fix RPC failure testing (jnewbery)\n-- #9269 `43e8150` Align struct COrphan definition (sipa)\n-- #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n-- #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n-- #9875 `50953c2` tests: Fix dangling pwalletMain pointer in wallet tests (laanwj)\n-- #9839 `eddaa6b` [qa] Make import-rescan.py watchonly check reliable (ryanofsky)\n-\n-### Documentation\n-- #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)\n-- #8935 `0306978` Documentation: Building on Windows with WSL (pooleja)\n-- #9144 `c98f6b3` Correct waitforblockheight example help text (fanquake)\n-- #9407 `041331e` Added missing colons in when running help command (anditto)\n-- #9378 `870cd2b` Add documentation for CWalletTx::fFromMe member (ryanofsky)\n-- #9297 `0b73807` Various RPC help outputs updated (Mirobit)\n-- #9613 `07421cf` Clarify getbalance help string to explain interaction with bumpfee (ryanofsky)\n-- #9663 `e30d928` Clarify listunspent amount description (instagibbs)\n-- #9396 `d65a13b` Updated listsinceblock rpc documentation (accraze)\n-- #8747 `ce43630` rpc: Fix transaction size comments and RPC help text (jnewbery)\n-- #8058 `bbd9740` Doc: Add issue template (AmirAbrams)\n-- #8567 `85d4e21` Add default port numbers to REST doc (djpnewton)\n-- #8624 `89de153` build: Mention curl (MarcoFalke)\n-- #8786 `9da7366` Mandatory copyright agreement (achow101)\n-- #8823 `7b05af6` Add privacy recommendation when running hidden service (laanwj)\n-- #9433 `caa2f10` Update the Windows build notes (droark)\n-- #8879 `f928050` Rework docs (MarcoFalke)\n-- #8887 `61d191f` Improve GitHub issue template (fanquake)\n-- #8787 `279bbad` Add missing autogen to example builds (AmirAbrams)\n-- #8892 `d270c30` Add build instructions for FreeBSD (laanwj)\n-- #8890 `c71a654` Update Doxygen configuration file (fanquake)\n-- #9207 `fa1f944` Move comments above bash command in build-unix (AmirAbrams)\n-- #9219 `c4522e7` Improve windows build instructions using Linux subsystem (laanwj)\n-- #8954 `932d02a` contrib: Add README for pgp keys (MarcoFalke)\n-- #9093 `2fae5b9` release-process: Mention GitHub release and archived release notes (MarcoFalke)\n-- #8743 `bae178f` Remove old manpages from contrib/debian in favour of doc/man (fanquake)\n-- #9550 `4105cb6` Trim down the XP notice and say more about what we support (gmaxwell)\n-- #9246 `9851498` Developer docs about existing subtrees (gmaxwell)\n-- #9401 `c2ea1e6` Make rpcauth help message clearer, add example in example .conf (instagibbs)\n-- #9022,#9033 Document dropping OS X 10.7 support (fanquake, MarcoFalke)\n-- #8771 `bc9e3ab` contributing: Mention not to open several pulls (luke-jr)\n-- #8852 `7b784cc` Mention Gitian building script in doc (Laudaa) (laanwj)\n-- #8915 `03dd707` Add copyright/patent issues to possible NACK reasons (petertodd)\n-- #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)\n-- #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)\n-- #9840 `08e0690` Update sendfrom RPC help to correct coin selection misconception (ryanofsky)\n-- #9865 `289204f` Change bitcoin address in RPC help message (marijnfs)\n-\n-### Miscellaneous\n-- #8274 `7a2d402` util: Update tinyformat (laanwj)\n-- #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n-- #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n-- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n-- #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n-- #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n-- #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)\n-- #8976 `8c6218a` libconsensus: Add input validation of flags (laanwj)\n-- #9112 `46027e8` Avoid ugly exception in log on unknown inv type (laanwj)\n-- #8837 `2108911` Allow bitcoin-tx to parse partial transactions (jnewbery)\n-- #9204 `74ced54` Clarify CreateTransaction error messages (instagibbs)\n-- #9265 `31bcc66` bitcoin-cli: Make error message less confusing (laanwj)\n-- #9303 `72bf1b3` Update comments in ctaes (sipa)\n-- #9417 `c4b7d4f` Do not evaluate hidden LogPrint arguments (sipa)\n-- #9506 `593a00c` RFC: Improve style for if indentation (sipa)\n-- #8883 `d5d4ad8` Add all standard TXO types to bitcoin-tx (jnewbery)\n-- #9531 `23281a4` Release notes for estimation changes  (morcos)\n-- #9486 `f62bc10` Make peer=%d log prints consistent (TheBlueMatt)\n-- #9552 `41cb05c` Add IPv6 support to qos.sh (jamesmacwhite)\n-- #9542 `e9e7993` Docs: Update CONTRIBUTING.md (jnewbery)\n-- #9649 `53ab12d` Remove unused clang format dev script (MarcoFalke)\n-- #9625 `77bd8c4` Increase minimum debug.log size to 10MB after shrink (morcos)\n-- #9070 `7b22e50` Lockedpool fixes (kazcw)\n-- #8779 `7008e28` contrib: Delete spendfrom (MarcoFalke)\n-- #9587,#8793,#9496,#8191,#8109,#8655,#8472,#8677,#8981,#9124  Avoid shadowing of variables (paveljanik)\n-- #9063 `f2a6e82` Use deprecated `MAP_ANON` if `MAP_ANONYMOUS` is not defined (paveljanik)\n-- #9060 `1107653` Fix bloom filter init to isEmpty = true (robmcl4)\n-- #8613 `613bda4` LevelDB 1.19 (sipa)\n-- #9225 `5488514` Fix some benign races (TheBlueMatt)\n-- #8736 `5fa7b07` base58: Improve DecodeBase58 performance (wjx)\n-- #9039 `e81df49` Various serialization simplifcations and optimizations (sipa)\n-- #9010 `a143b88` Split up AppInit2 into multiple phases, daemonize after datadir lock errors (laanwj)\n-- #9230 `c79e52a` Fix some benign races in timestamp logging (TheBlueMatt)\n-- #9183,#9260 Mrs Peacock in The Library with The Candlestick (killed main.{h,cpp}) (TheBlueMatt)\n-- #9236 `7f72568` Fix races for strMiscWarning and `fLargeWork*Found`, make QT runawayException use GetWarnings (gmaxwell)\n-- #9243 `7aa7004` Clean up mapArgs and mapMultiArgs Usage (TheBlueMatt)\n-- #9387 `cfe41d7` RAII of libevent stuff using unique ptrs with deleters (kallewoof)\n-- #9472 `fac0f30` Disentangle progress estimation from checkpoints and update it (sipa)\n-- #9512 `6012967` Fix various things -fsanitize complains about (sipa)\n-- #9373,#9580 Various linearization script issues (droark)\n-- #9674 `dd163f5` Lock debugging: Always enforce strict lock ordering (try or not) (TheBlueMatt)\n-- #8453,#9334  Update to latest libsecp256k1 (laanwj,sipa)\n-- #9656 `7c93952` Check verify-commits on pushes to master (TheBlueMatt)\n-- #9679 `a351162` Access WorkQueue::running only within the cs lock (TheBlueMatt)\n-- #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)\n-- #8863,#8807 univalue: Pull subtree (MarcoFalke)\n-- #9798 `e22c067` Fix Issue #9775 (Check returned value of fopen) (kirit93)\n-- #9856 `69832aa` Terminate immediately when allocation fails (theuni)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- accraze\n-- adlawren\n-- Alex Morcos\n-- Alexey Vesnin\n-- Amir Abrams\n-- Anders \u00d8yvind Urke-S\u00e6tre\n-- Anditto Heristyo\n-- Andrew Chow\n-- anduck\n-- Anthony Towns\n-- Brian Deery\n-- BtcDrak\n-- Chris Moore\n-- Chris Stewart\n-- Christian Barcenas\n-- Christian Decker\n-- Cory Fields\n-- crowning-\n-- CryptAxe\n-- CryptoVote\n-- Dagur Valberg Johannsson\n-- Daniel Cousens\n-- Daniel Kraft\n-- Derek Miller\n-- djpnewton\n-- Don Patterson\n-- Doug\n-- Douglas Roark\n-- Ethan Heilman\n-- fsb4000\n-- Gaurav Rana\n-- Geoffrey Tsui\n-- Greg Walker\n-- Gregory Maxwell\n-- Gregory Sanders\n-- Hampus Sj\u00f6berg\n-- isle2983\n-- Ivo van der Sangen\n-- James White\n-- Jameson Lopp\n-- Jeremy Rubin\n-- Jiaxing Wang\n-- jnewbery\n-- John Newbery\n-- Johnson Lau\n-- Jon Lund Steffensen\n-- Jonas Schnelli\n-- jonnynewbs\n-- Jorge Tim\u00f3n\n-- Justin Camarena\n-- Karl-Johan Alm\n-- Kaz Wesley\n-- kirit93\n-- Koki Takahashi\n-- Lauda\n-- leijurv\n-- lizhi\n-- Luke Dashjr\n-- maiiz\n-- MarcoFalke\n-- Marijn Stollenga\n-- Marty Jones\n-- Masahiko Hyuga\n-- Matt Corallo\n-- Matthew King\n-- matthias\n-- Micha\n-- Michael Ford\n-- Michael Rotarius\n-- Mitchell Cash\n-- mrbandrews\n-- mruddy\n-- Nicolas DORIER\n-- nomnombtc\n-- Patrick Strateman\n-- Pavel Jan\u00edk\n-- Pedro Branco\n-- Peter Todd\n-- Pieter Wuille\n-- poole\\_party\n-- practicalswift\n-- R E Broadley\n-- randy-waterhouse\n-- Richard Kiss\n-- Robert McLaughlin\n-- rodasmith\n-- Russell Yanofsky\n-- S. Matthew English\n-- Sev\n-- Spencer Lievens\n-- Stanislas Marion\n-- Steven\n-- Suhas Daftuar\n-- Thomas Snider\n-- UdjinM6\n-- unsystemizer\n-- whythat\n-- Will Binns\n-- Wladimir J. van der Laan\n-- wodry\n-- Zak Wilcox\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes/release-notes-0.14.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.14.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.14.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,143 +0,0 @@\n-Bitcoin Core version 0.14.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.14.1/>\n-\n-This is a new minor version release, including various bugfixes and\n-performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later.\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities and issues.\n-Please do not report issues about Windows XP to the issue tracker.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-frequently tested on them.\n-\n-Notable changes\n-===============\n-\n-RPC changes\n------------\n-\n-- The first positional argument of `createrawtransaction` was renamed from\n-  `transactions` to `inputs`.\n-\n-- The argument of `disconnectnode` was renamed from `node` to `address`.\n-\n-These interface changes break compatibility with 0.14.0, when the named\n-arguments functionality, introduced in 0.14.0, is used. Client software\n-using these calls with named arguments needs to be updated.\n-\n-Mining\n-------\n-\n-In previous versions, getblocktemplate required segwit support from downstream\n-clients/miners once the feature activated on the network. In this version, it\n-now supports non-segwit clients even after activation, by removing all segwit\n-transactions from the returned block template. This allows non-segwit miners to\n-continue functioning correctly even after segwit has activated.\n-\n-Due to the limitations in previous versions, getblocktemplate also recommended\n-non-segwit clients to not signal for the segwit version-bit. Since this is no\n-longer an issue, getblocktemplate now always recommends signalling segwit for\n-all miners. This is safe because ability to enforce the rule is the only\n-required criteria for safe activation, not actually producing segwit-enabled\n-blocks.\n-\n-UTXO memory accounting\n-----------------------\n-\n-Memory usage for the UTXO cache is being calculated more accurately, so that\n-the configured limit (`-dbcache`) will be respected when memory usage peaks\n-during cache flushes.  The memory accounting in prior releases is estimated to\n-only account for half the actual peak utilization.\n-\n-The default `-dbcache` has also been changed in this release to 450MiB.  Users\n-who currently set `-dbcache` to a high value (e.g. to keep the UTXO more fully\n-cached in memory) should consider increasing this setting in order to achieve\n-the same cache performance as prior releases.  Users on low-memory systems\n-(such as systems with 1GB or less) should consider specifying a lower value for\n-this parameter.\n-\n-Additional information relating to running on low-memory systems can be found\n-here:\n-[reducing-bitcoind-memory-usage.md](https://gist.github.com/laanwj/efe29c7661ce9b6620a7).\n-\n-0.14.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and other APIs\n-- #10084 `142fbb2` Rename first named arg of createrawtransaction (MarcoFalke)\n-- #10139 `f15268d` Remove auth cookie on shutdown (practicalswift)\n-- #10146 `2fea10a` Better error handling for submitblock (rawodb, gmaxwell)\n-- #10144 `d947afc` Prioritisetransaction wasn't always updating ancestor fee (sdaftuar)\n-- #10204 `3c79602` Rename disconnectnode argument (jnewbery)\n-\n-### Block and transaction handling\n-- #10126 `0b5e162` Compensate for memory peak at flush time (sipa)\n-- #9912 `fc3d7db` Optimize GetWitnessHash() for non-segwit transactions (sdaftuar)\n-- #10133 `ab864d3` Clean up calculations of pcoinsTip memory usage (morcos)\n-\n-### P2P protocol and network code\n-- #9953/#10013 `d2548a4` Fix shutdown hang with >= 8 -addnodes set (TheBlueMatt)\n-- #10176 `30fa231` net: gracefully handle NodeId wrapping (theuni)\n-\n-### Build system\n-- #9973 `e9611d1` depends: fix zlib build on osx (theuni)\n-\n-### GUI\n-- #10060 `ddc2dd1` Ensure an item exists on the rpcconsole stack before adding (achow101)\n-\n-### Mining\n-- #9955/#10006 `569596c` Don't require segwit in getblocktemplate for segwit signalling or mining (sdaftuar)\n-- #9959/#10127 `b5c3440` Prevent slowdown in CreateNewBlock on large mempools (sdaftuar)\n-\n-### Tests and QA\n-- #10157 `55f641c` Fix the `mempool_packages.py` test (sdaftuar)\n-\n-### Miscellaneous\n-- #10037 `4d8e660` Trivial: Fix typo in help getrawtransaction RPC (keystrike)\n-- #10120 `e4c9a90` util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)\n-- #10130 `ecc5232` bitcoin-tx input verification (awemany, jnewbery)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- Andrew Chow\n-- Awemany\n-- Cory Fields\n-- Gregory Maxwell\n-- James Evans\n-- John Newbery\n-- MarcoFalke\n-- Matt Corallo\n-- Pieter Wuille\n-- practicalswift\n-- rawodb\n-- Suhas Daftuar\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "0ad554b7738c17a4017b57234fce1132f9a9ed45",
        "filename": "doc/release-notes/release-notes-0.14.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 102,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.14.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.14.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,102 +0,0 @@\n-Bitcoin Core version 0.14.2 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.14.2/>\n-\n-This is a new minor version release, including various bugfixes and\n-performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later.\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities and issues.\n-Please do not report issues about Windows XP to the issue tracker.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-frequently tested on them.\n-\n-Notable changes\n-===============\n-\n-miniupnp CVE-2017-8798\n-----------------------------\n-\n-Bundled miniupnpc was updated to 2.0.20170509. This fixes an integer signedness error\n-(present in MiniUPnPc v1.4.20101221 through v2.0) that allows remote attackers\n-(within the LAN) to cause a denial of service or possibly have unspecified\n-other impact.\n-\n-This only affects users that have explicitly enabled UPnP through the GUI\n-setting or through the `-upnp` option, as since the last UPnP vulnerability\n-(in Bitcoin Core 0.10.3) it has been disabled by default.\n-\n-If you use this option, it is recommended to upgrade to this version as soon as\n-possible.\n-\n-Known Bugs\n-==========\n-\n-Since 0.14.0 the approximate transaction fee shown in Bitcoin-Qt when using coin\n-control and smart fee estimation does not reflect any change in target from the\n-smart fee slider. It will only present an approximate fee calculated using the\n-default target. The fee calculated using the correct target is still applied to\n-the transaction and shown in the final send confirmation dialog.\n-\n-0.14.2 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and other APIs\n-- #10410 `321419b` Fix importwallet edge case rescan bug (ryanofsky)\n-\n-### P2P protocol and network code\n-- #10424 `37a8fc5` Populate services in GetLocalAddress (morcos)\n-- #10441 `9e3ad50` Only enforce expected services for half of outgoing connections (theuni)\n-\n-### Build system\n-- #10414 `ffb0c4b` miniupnpc 2.0.20170509 (fanquake)\n-- #10228 `ae479bc` Regenerate bitcoin-config.h as necessary (theuni)\n-\n-### Miscellaneous\n-- #10245 `44a17f2` Minor fix in build documentation for FreeBSD 11 (shigeya)\n-- #10215 `0aee4a1` Check interruptNet during dnsseed lookups (TheBlueMatt)\n-\n-### GUI\n-- #10231 `1e936d7` Reduce a significant cs_main lock freeze (jonasschnelli)\n-\n-### Wallet\n-- #10294 `1847642` Unset change position when there is no change (instagibbs)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- Cory Fields\n-- fanquake\n-- Gregory Sanders\n-- Jonas Schnelli\n-- Matt Corallo\n-- Russell Yanofsky\n-- Shigeya Suzuki\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "38715bc75fe27a48c253ee43474f926df7065593",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,13 +0,0 @@\n-Version 0.3.12 is now available.\n-\n-Features:\n-* json-rpc errors return a more standard error object. (thanks to Gavin Andresen)\n-* json-rpc command line returns exit codes.\n-* json-rpc \"backupwallet\" command.\n-* Recovers and continues if an exception is caused by a message you received.  Other nodes shouldn't be able to cause an exception, and it hasn't happened before, but if a way is found to cause an exception, this would keep it from being used to stop network nodes.\n-\n-If you have json-rpc code that checks the contents of the error string, you need to change it to expect error objects of the form {\"code\":<number>,\"message\":<string>}, which is the standard.  See this thread:\n-http://www.bitcoin.org/smf/index.php?topic=969.0\n-\n-Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.12/"
      },
      {
        "sha": "2b95ff233d4c2810f9a2fd58b63d528ba65bd108",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,26 +0,0 @@\n-Version 0.3.13 is now available.  You should upgrade to prevent potential problems with 0/unconfirmed transactions.  Note: 0.3.13 prevents problems if you haven't already spent a 0/unconfirmed transaction, but if that already happened, you need 0.3.13.2.\n-\n-Changes:\n-* Don't count or spend payments until they have 1 confirmation.\n-* Internal version number from 312 to 31300.\n-* Only accept transactions sent by IP address if -allowreceivebyip is specified.\n-* Dropped DB_PRIVATE Berkeley DB flag.\n-* Fix problem sending the last cent with sub-cent fractional change.\n-* Auto-detect whether to use 128-bit 4-way SSE2 on Linux.\n-Gavin Andresen:\n-* Option -rpcallowip= to accept json-rpc connections from another machine.\n-* Clean shutdown on SIGTERM on Linux.\n-\n-Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.13/\n-\n-(Thanks Laszlo for the Mac OSX build!)\n-\n-Note:\n-The SSE2 auto-detect in the Linux 64-bit version doesn't work with AMD in 64-bit mode.  Please try this instead and let me know if it gets it right:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.1-specialbuild-linux64.tar.gz\n-\n-You can still control the SSE2 use manually with -4way and -4way=0.\n-\n-Version 0.3.13.2 (SVN rev 161) has improvements for the case where you already had 0/unconfirmed transactions that you might have already spent.  Here's a Windows build of it:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.2-win32-setup.exe"
      },
      {
        "sha": "e73052ed9bf0ba3b9dc59f8218d2eb69ea950cac",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,11 +0,0 @@\n-Version 0.3.14 is now available\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.14/\n-\n-Changes:\n-* Key pool feature for safer wallet backup\n-Gavin Andresen:\n-* TEST network mode with switch -testnet\n-* Option to use SSL for JSON-RPC connections on unix/osx\n-* validateaddress RPC command\n-eurekafag:\n-* Russian translation"
      },
      {
        "sha": "b98052ef5934de489f2f527d50abb51be95244d6",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,6 +0,0 @@\n-* paytxfee switch is now per KB, so it adds the correct fee for large transactions\n-* sending avoids using coins with less than 6 confirmations if it can\n-* BitcoinMiner processes transactions in priority order based on age of dependencies\n-* make sure generation doesn't start before block 74000 downloaded\n-* bugfixes by Dean Gores\n-* testnet, keypoololdest and paytxfee added to getinfo"
      },
      {
        "sha": "743f84f30e9c2ad96251f433cad3468f3e591662",
        "filename": "doc/release-notes/release-notes-0.3.16.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.16.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.16.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.16.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1 +0,0 @@\n-Never released."
      },
      {
        "sha": "d3604b8f8867f1a2629d9daf971f463b291f0a5c",
        "filename": "doc/release-notes/release-notes-0.3.17.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.17.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.17.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.17.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,12 +0,0 @@\n-Version 0.3.17 is now available.\n-\n-Changes:\n-* new getwork, thanks m0mchil\n-* added transaction fee setting in UI options menu\n-* free transaction limits\n-* sendtoaddress returns transaction id instead of \"sent\"\n-* getaccountaddress <account>\n-\n-The UI transaction fee setting was easy since it was still there from 0.1.5 and all I had to do was re-enable it.\n-\n-The accounts-based commands: move, sendfrom and getbalance <account> will be in the next release.  We still have some more changes to make first."
      },
      {
        "sha": "ab1c2e0692ffba94d66a5201ac2675c83cc60f11",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,11 +0,0 @@\n-Changes:\n-* Fixed a wallet.dat compatibility problem if you downgraded from 0.3.17 and then upgraded again\n-* IsStandard() check to only include known transaction types in blocks\n-* Jgarzik's optimisation to speed up the initial block download a little\n-\n-The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.bitcoin.org/smf/index.php?topic=1886.0).  \n-* getaccountaddress\n-* sendfrom\n-* move\n-* getbalance\n-* listtransactions"
      },
      {
        "sha": "fcd867561d62341eef06d84cee4edec1e1894fed",
        "filename": "doc/release-notes/release-notes-0.3.19.md",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.19.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.19.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.19.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,9 +0,0 @@\n-There's more work to do on DoS, but I'm doing a quick build of what I have so far in case it's needed, before venturing into more complex ideas.  The build for this is version 0.3.19.\n-\n-- Added some DoS controls\n-As Gavin and I have said clearly before, the software is not at all resistant to DoS attack.  This is one improvement, but there are still more ways to attack than I can count.  \n-\n-I'm leaving the -limitfreerelay part as a switch for now and it's there if you need it.\n-\n-- Removed \"safe mode\" alerts\n-\"safe mode\" alerts was a temporary measure after the 0.3.9 overflow bug.  We can say all we want that users can just run with \"-disablesafemode\", but it's better just not to have it for the sake of appearances.  It was never intended as a long term feature.  Safe mode can still be triggered by seeing a longer (greater total PoW) invalid block chain."
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.3.20.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.20.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.20.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1 +0,0 @@\n-Never released or release notes were lost."
      },
      {
        "sha": "09ecb736bdb3f808a5d59ce3bf851c6c159ca6ce",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,17 +0,0 @@\n-The maxsendbuffer bug (0.3.20.1 clients not being able to download the block chain from other 0.3.20.1 clients) was only going to get\n-worse as people upgraded, so I cherry-picked the bug fix and created a minor release yesterday.\n-\n-The Amazon Machine Images I used to do the builds are available:\n-\n-  ami-38a05251   Bitcoin-v0.3.20.2 Mingw    (Windows; Administrator password 'bitcoin development')\n-  ami-30a05259   Bitcoin_0.3.20.2 Linux32\n-  ami-8abc4ee3   Bitcoin_0.3.20.2 Linux64\n-\n-(mac build will be done soon)\n-\n-If you have already downloaded version 0.3.20.1, please either add this to your bitcoin.conf file:\n-\n-  maxsendbuffer=10000\n-  maxreceivebuffer=10000\n-\n-... or download the new version."
      },
      {
        "sha": "9ae21802ee89b6587f006c73838ccbd34deb882e",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,22 +0,0 @@\n-Please checkout the git integration branch from:\n-\n-https://github.com/bitcoin/bitcoin\n-\n-... and help test.  The new features that need testing are:\n-\n-* -nolisten : https://github.com/bitcoin/bitcoin/pull/11\n-* -rescan : scan block chain for missing wallet transactions\n-* -printtoconsole : https://github.com/bitcoin/bitcoin/pull/37\n-* RPC gettransaction details : https://github.com/bitcoin/bitcoin/pull/24\n-* listtransactions new features : https://github.com/bitcoin/bitcoin/pull/10\n-\n-Bug fixes that also need testing:\n-\n-* -maxconnections= : https://github.com/bitcoin/bitcoin/pull/42\n-* RPC listaccounts minconf : https://github.com/bitcoin/bitcoin/pull/27\n-* RPC move, add time to output : https://github.com/bitcoin/bitcoin/pull/21\n-* ...and several improvements to --help output.\n-\n-This needs more testing on Windows!  Please drop me a quick private message, email, or IRC message if you are able to do some testing.  If you find bugs, please open an issue at:\n-\n-https://github.com/bitcoin/bitcoin/issues"
      },
      {
        "sha": "f3b6bc426470d4137edc1b477ef9c3b400e0073e",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,20 +0,0 @@\n-Binaries for Bitcoin version 0.3.21 are available at:\n-  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.21/\n-\n-Changes and new features from the 0.3.20 release include:\n-\n-* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running bitcoin or bitcoind with the - -upnp=1 command line switch or using the Options dialog box.\n-\n-* Support for full-precision bitcoin amounts.  You can now send, and bitcoin will display, bitcoin amounts smaller than 0.01.  However, sending fewer than 0.01 bitcoins still requires a 0.01 bitcoin fee (so you can send 1.0001 bitcoins without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n-\n-* A new method of finding bitcoin nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n-\n-For developers, changes to bitcoin's remote-procedure-call API:\n-\n-* New rpc command \"sendmany\" to send bitcoins to more than one address in a single transaction.\n-\n-* Several bug fixes, including a serious intermittent bug that would sometimes cause bitcoind to stop accepting rpc requests. \n-\n-* -logtimestamps option, to add a timestamp to each line in debug.log.\n-\n-* Immature blocks (newly generated, under 120 confirmations) are now shown in listtransactions."
      },
      {
        "sha": "4c05e3e5e78e309770aed4974be1707a8d44d255",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,16 +0,0 @@\n-Download URL: https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.22/\n-\n-This is largely a bugfix and TX fee schedule release.  We also hope to make 0.3.23 a quick release, to fix problems that the network has seen due to explosive growth in the past week.\n-\n-Notable changes:\n-* Client will accept and relay TX's with 0.0005 BTC fee schedule (users still pay 0.01 BTC per kb, until next version)\n-* Non-standard transactions accepted on testnet\n-* Source code tree reorganized (prep for autotools build)\n-* Remove \"Generate Coins\" option from GUI, and remove 4way SSE miner.  Internal reference CPU miner remains available, but users are directed to external miners for best hash production.\n-* IRC is overflowing.  Client now bootstraps to channels #bitcoin00 - #bitcoin99\n-* DNS names now may be used with -addnode, -connect (requires -dns to enable)\n-\n-RPC changes:\n-* 'listtransactions' adds 'from' param, for range queries\n-* 'move' may take account balances negative\n-* 'settxfee' added, to manually set TX fee"
      },
      {
        "sha": "c1d520e4925d6c57ed72f0c8a34f29a250f71efe",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,10 +0,0 @@\n-Win32, Linux, MacOSX and source releases for bitcoin v0.3.23 have been uploaded to\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/\n-\n-This is another quick bugfix release, trying to deal with the influx of new bitcoin users.\n-\n-Main items of note:\n-\n-* P2P connect-to-node logic changed to reduce timeout a bit.  The network saw a huge influx of new users, who do not permit incoming connections.  This change is a short-term hack, to more quickly hunt for useful P2P connections.  Better \"leaf node\" logic is in the works, but this should let us limp along until then.  One may use -upnp to properly forward ports, and help the network.\n-* Transaction fee reduced to 0.0005 for new transactions\n-* Client will relay transactions with fees as low as 0.0001 BTC"
      },
      {
        "sha": "d35ac66f2c8a07e8912426c10e2e4c158680ad21",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,20 +0,0 @@\n-Bitcoin v0.3.24 is now available for download at\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.24/\n-\n-This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/bitcoin/bitcoin/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n-\n-Notable fixes in v0.3.24, and the main reasons for this release:\n-\n-F1) Block downloads were failing or taking unreasonable amounts of time to complete, because the increased size of the block chain was bumping up against some earlier buffer-size DoS limits.\n-\n-F2) Fix crash caused by loss/lack of network connection.\n-\n-Notable changes in v0.3.24:\n-\n-C1) DNS seeding enabled by default.\n-\n-C2) UPNP enabled by default in the GUI client.  The percentage of bitcoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  bitcoind, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n-\n-C3) Initial unit testing framework.  Bitcoin sorely needs automated tests, and this is a beginning.  Contributions welcome.\n-\n-C4) Internal wallet code cleanup.  While invisible to an end user, this change provides the basis for v0.4's wallet encryption."
      },
      {
        "sha": "145072a369d85a83b312100cf4d7089a591c1bfc",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,70 +0,0 @@\n-Bitcoin version 0.4.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.0/\n-\n-The main feature in this release is wallet private key encryption;\n-you can set a passphrase that must be entered before sending coins.\n-See below for more information; if you decide to encrypt your wallet,\n-WRITE DOWN YOUR PASSPHRASE AND PUT IT IN A SECURE LOCATION. If you\n-forget or lose your wallet passphrase, you lose your bitcoins.\n-Previous versions of bitcoin are unable to read encrypted wallets,\n-and will crash on startup if the wallet is encrypted.\n-\n-Also note: bitcoin version 0.4 uses a newer version of Berkeley DB\n-(bdb version 4.8) than previous versions (bdb 4.7). If you upgrade\n-to version 0.4 and then revert back to an earlier version of bitcoin\n-the it may be unable to start because bdb 4.7 cannot read bdb 4.8\n-\"log\" files.\n-\n-\n-Notable bug fixes from version 0.3.24:\n-\n-Fix several bitcoin-becomes-unresponsive bugs due to multithreading\n-deadlocks.\n-\n-Optimize database writes for large (lots of inputs) transactions\n-(fixes a potential denial-of-service attack)\n-\n-\n-Wallet Encryption\n-\n-Bitcoin supports native wallet encryption so that people who steal your\n-wallet file don't automatically get access to all of your Bitcoins.\n-In order to enable this feature, choose \"Encrypt Wallet\" from the\n-Options menu.  You will be prompted to enter a passphrase, which\n-will be used as the key to encrypt your wallet and will be needed\n-every time you wish to send Bitcoins.  If you lose this passphrase,\n-you will lose access to spend all of the bitcoins in your wallet,\n-no one, not even the Bitcoin developers can recover your Bitcoins.\n-This means you are responsible for your own security, store your\n-passphrase in a secure location and do not forget it.\n-\n-Remember that the encryption built into bitcoin only encrypts the\n-actual keys which are required to send your bitcoins, not the full\n-wallet.  This means that someone who steals your wallet file will\n-be able to see all the addresses which belong to you, as well as the\n-relevant transactions, you are only protected from someone spending\n-your coins.\n-\n-It is recommended that you backup your wallet file before you\n-encrypt your wallet.  To do this, close the Bitcoin client and\n-copy the wallet.dat file from ~/.bitcoin/ on Linux, /Users/(user\n-name)/Application Support/Bitcoin/ on Mac OSX, and %APPDATA%/Bitcoin/\n-on Windows (that is /Users/(user name)/AppData/Roaming/Bitcoin on\n-Windows Vista and 7 and /Documents and Settings/(user name)/Application\n-Data/Bitcoin on Windows XP).  Once you have copied that file to a\n-safe location, reopen the Bitcoin client and Encrypt your wallet.\n-If everything goes fine, delete the backup and enjoy your encrypted\n-wallet.  Note that once you encrypt your wallet, you will never be\n-able to go back to a version of the Bitcoin client older than 0.4.\n-\n-Keep in mind that you are always responsible for your own security.\n-All it takes is a slightly more advanced wallet-stealing trojan which\n-installs a keylogger to steal your wallet passphrase as you enter it\n-in addition to your wallet file and you have lost all your Bitcoins.\n-Wallet encryption cannot keep you safe if you do not practice\n-good security, such as running up-to-date antivirus software, only\n-entering your wallet passphrase in the Bitcoin client and using the\n-same passphrase only as your wallet passphrase.\n-\n-See the doc/README file in the bitcoin source for technical details\n-of wallet encryption."
      },
      {
        "sha": "ac471a8d7feddfd3235a1a1b7973cb06f2e768ed",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,38 +0,0 @@\n-Bitcoin version 0.4.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.1/\n-\n-This is a bugfix only release based on 0.4.0.\n-\n-Please report bugs by replying to this forum thread.\n-\n-MAJOR BUG FIX  (CVE-2011-4447)\n-\n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n-managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n-associated coins.\n-\n-If you have a previously encrypted wallet.dat, the first time you run wxbitcoin or bitcoind the wallet will be rewritten, Bitcoin will\n-shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n-\n-If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n-\n-Wallets encrypted with this version of Bitcoin are written properly.\n-\n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n-new private keys are properly backed up you should:\n-\n-1. Run Bitcoin and let it rewrite the wallet.dat file\n-\n-2. Run it again, then ask it for a new bitcoin address.\n-wxBitcoin: new address visible on main window\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n-\n-3. If your encrypted wallet.dat may have been copied or stolen, send all of your bitcoins to the new bitcoin address.\n-\n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n-\n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n-\n-Thanks to Alan Reiner (etotheipi) for finding and reporting this bug."
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1 +0,0 @@\n-Never released or release notes were lost."
      },
      {
        "sha": "fea1ae75b5e829cf38271ad529262d806d314303",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,21 +0,0 @@\n-bitcoind version 0.4.3 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.3/ (until Gavin uploads to SourceForge)\n-\n-This is a bugfix-only release based on 0.4.0.\n-\n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n-\n-Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.3#.tar.gz\n-\n-BUG FIXES\n-\n-Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download).\n-Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n-Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n-Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr).\n-"
      },
      {
        "sha": "f435ba71604df49ca4cc6dbcd67fcd512498f186",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,30 +0,0 @@\n-Bitcoin version 0.4.4 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.4/\n-\n-This is a bugfix-only release based on 0.4.0.\n-\n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n-\n-Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.4#.tar.gz\n-\n-BUG FIXES\n-\n-Limit the number of orphan transactions stored in memory, to prevent a potential denial-of-service attack by flooding orphan transactions. Also never store invalid transactions at all.\n-Fix possible buffer overflow on systems with very long application data paths. This is not exploitable.\n-Resolved multiple bugs preventing long-term unlocking of encrypted wallets (issue #922).\n-Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n-Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n-Various memory leaks and potential null pointer deferences have been\n-fixed.\n-Several shutdown issues have been fixed.\n-Check that keys stored in the wallet are valid at startup, and if not,\n-report corruption.\n-Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n-Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n-Add checkpoint at block 168,000.\n-"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.5.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1 +0,0 @@\n-Never released or release notes were lost."
      },
      {
        "sha": "07c5e4b6948a5da619c6e82277d9aa4e0a629109",
        "filename": "doc/release-notes/release-notes-0.4.6.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.4.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.6.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,37 +0,0 @@\n-bitcoind version 0.4.6 is now available for download at:\n-Windows: installer | zip (sig)\n-Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n-\n-These are bugfix-only releases.\n-\n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n-\n-BUG FIXES\n-\n-Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n-Verify status of encrypt/decrypt calls to detect failed padding\n-Check blocks for duplicate transactions earlier. Fixes #1167\n-Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n-JSON-RPC listtransactions's from/count handling is now fixed\n-Optimize and fix multithreaded access, when checking whether we already know about transactions\n-Fix potential networking deadlock\n-Proper support for Growl 1.3 notifications\n-Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n-Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n-Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n-Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n-Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n-Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n-Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n-Work around issue in boost::program_options that prevents from compiling in clang\n-Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n-Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "baa409b5f2fc97464ffb2087a12bbd77e67f6e01",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,70 +0,0 @@\n-Bitcoin version 0.5.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.0/\n-\n-The major change for this release is a completely new graphical interface that uses the Qt user interface toolkit.\n-\n-This release include German, Spanish, Spanish-Castilian, Norwegian and Dutch translations. More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep bitcoin up-to-date.  Just type \"sudo apt-add-repository ppa:bitcoin/bitcoin\" in your terminal, then install the bitcoin-qt package.\n-\n-MAJOR BUG FIX  (CVE-2011-4447)\n-\n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n-managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n-associated coins.\n-\n-If you have a previously encrypted wallet.dat, the first time you run bitcoin-qt or bitcoind the wallet will be rewritten, Bitcoin will\n-shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n-\n-If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n-\n-Wallets encrypted with this version of Bitcoin are written properly.\n-\n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n-new private keys are properly backed up you should:\n-\n-1. Run Bitcoin and let it rewrite the wallet.dat file\n-\n-2. Run it again, then ask it for a new bitcoin address.\n-Bitcoin-Qt: Address Book, then New Address...\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n-\n-3. If your encrypted wallet.dat may have been copied or stolen, send  all of your bitcoins to the new bitcoin address.\n-\n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n-\n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n-\n-Thanks to Alan Reiner (etotheipi) for finding and reporting this bug.\n-\n-MAJOR GUI CHANGES\n-\n-\"Splash\" graphics at startup that show address/wallet/blockchain loading progress.\n-\n-\"Synchronizing with network\" progress bar to show block-chain download progress.\n-\n-Icons at the bottom of the window that show how well connected you are to the network, with tooltips to display details.\n-\n-Drag and drop support for bitcoin: URIs on web pages.\n-\n-Export transactions as a .csv file.\n-\n-Many other GUI improvements, large and small.\n-\n-RPC CHANGES\n-\n-getmemorypool : new RPC command, provides everything needed to construct a block with a custom generation transaction and submit a solution\n-\n-listsinceblock : new RPC command, list transactions since given block\n-\n-signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a bitcoin address.\n-\n-GENERAL CHANGES\n-\n-Faster initial block download."
      },
      {
        "sha": "d56bff6d956bc65b55a13da46d3525dc4cefd26f",
        "filename": "doc/release-notes/release-notes-0.5.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,43 +0,0 @@\n-Bitcoin version 0.5.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/\n-\n-This is a bugfix-only release.\n-\n-This release includes 13 translations, including 5 new translations:\n-Italian, Hungarian, Ukranian, Portuguese (Brazilian) and Simplified Chinese.\n-More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Project source code is hosted at github; we are no longer\n-distributing .tar.gz files here, you can get them\n-directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.5.1  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.5.1  # .zip\n-\n-For Ubuntu users, there is a new ppa maintained by Matt Corallo which\n-you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n-\n-\n-BUG FIXES\n-\n-Re-enable SSL support for the JSON-RPC interface (it was unintentionally\n-disabled for the 0.5.0 release binaries).\n-\n-The code that finds peers via \"dns seeds\" no longer stops bitcoin startup\n-if one of the dns seed machines is down.\n-\n-Tooltips on the transaction list view were rendering incorrectly (as black boxes\n-or with a transparent background).\n-\n-Prevent a denial-of-service attack involving flooding a bitcoin node with\n-orphan blocks.\n-\n-The wallet passphrase dialog now warns you if the caps lock key was pressed.\n-\n-Improved searching in addresses and labels in bitcoin-qt."
      },
      {
        "sha": "f79816668d8ccd9e379a8e98713e298d86c7079d",
        "filename": "doc/release-notes/release-notes-0.5.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,22 +0,0 @@\n-Bitcoin version 0.5.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.2/\n-\n-This is a bugfix-only release based on 0.5.1.\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.2#.tar.gz\n-\n-BUG FIXES\n-\n-Check all transactions in blocks after the last checkpoint (0.5.0 and 0.5.1 skipped checking ECDSA signatures during initial blockchain download).\n-Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download; this was\n-not a security vulnerability).\n-Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n-Re-enable SSL support for the JSON-RPC interface (it was unintentionally disabled for the 0.5.0 and 0.5.1 release Linux binaries).\n-Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n-Don't show \"IP\" for transactions which are not necessarily IP transactions.\n-Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr)."
      },
      {
        "sha": "7c84c53325c8f638b309771c3c6df1dfa79743d1",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,42 +0,0 @@\n-Bitcoin version 0.5.3 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/\n-\n-This is a bugfix-only release based on 0.5.1.\n-It also includes a few protocol updates.\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.3#.tar.gz\n-\n-PROTOCOL UPDATES\n-\n-BIP 30: Introduce a new network rule: \"a block is not valid if it contains a transaction whose hash already exists in the block chain, unless all that transaction's outputs were already spent before said block\" beginning on March 15, 2012, 00:00 UTC.\n-On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Bitcoin easier, and will not affect normal mode.\n-\n-BUG FIXES\n-\n-Limit the number of orphan transactions stored in memory, to prevent a potential denial-of-service attack by flooding orphan transactions. Also never store invalid transactions at all.\n-Fix possible buffer overflow on systems with very long application data paths. This is not exploitable.\n-Resolved multiple bugs preventing long-term unlocking of encrypted wallets\n-(issue #922).\n-Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n-Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n-Skip splash screen when -min is used, and fix Minimize to Tray function.\n-Do not blank \"label\" in Bitcoin-Qt \"Send\" tab, if the user has already entered something.\n-Correct various labels and messages.\n-Various memory leaks and potential null pointer deferences have been fixed.\n-Handle invalid Bitcoin URIs using \"bitcoin://\" instead of \"bitcoin:\".\n-Several shutdown issues have been fixed.\n-Revert to \"global progress indication\", as starting from zero every time was considered too confusing for many users.\n-Check that keys stored in the wallet are valid at startup, and if not, report corruption.\n-Enable accessible widgets on Windows, so that people with screen readers such as NVDA can make sense of it.\n-Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n-Automatically focus and scroll to new \"Send coins\" entries in Bitcoin-Qt.\n-Show a message box for --help on Windows, for Bitcoin-Qt.\n-Add missing \"About Qt\" menu option to show built-in Qt About dialog.\n-Don't show \"-daemon\" as an option for Bitcoin-Qt, since it isn't available.\n-Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n-Add checkpoint at block 168,000."
      },
      {
        "sha": "fcde3ac4e3a1b1e09fa6c3a72cf17c923cfa20b3",
        "filename": "doc/release-notes/release-notes-0.5.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.4.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,39 +0,0 @@\n-Bitcoin version 0.5.4 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.4/\n-NOTE: 0.5.4rc3 is being renamed to 0.5.4 final with no changes.\n-\n-This is a bugfix-only release in the 0.5.x series, plus a few protocol updates.\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.4#.tar.gz\n-\n-PROTOCOL UPDATES\n-\n-BIP 16: Special-case \"pay to script hash\" logic to enable minimal validation of new transactions.\n-Support for validating message signatures produced with compressed public keys.\n-\n-BUG FIXES\n-\n-Build with thread-safe MingW libraries for Windows, fixing a dangerous memory corruption scenario when exceptions are thrown.\n-Fix broken testnet mining.\n-Stop excess inventory relay during initial block download.\n-When disconnecting a node, clear the received buffer so that we do not process any already received messages.\n-Yet another attempt at implementing \"minimize to tray\" that works on all operating systems.\n-Fix Bitcoin-Qt notifications under Growl 1.3.\n-Increase required age of Bitcoin-Qt's \"not up to date\" status from 30 to 90 minutes.\n-Implemented missing verifications that led to crash on entering some wrong passphrases for encrypted wallets.\n-Fix default filename suffixes in GNOME save dialog.\n-Make the \"Send coins\" tab use the configured unit type, even on the first attempt.\n-Print detailed wallet loading errors to debug.log when it is corrupt.\n-Allocate exactly the amount of space needed for signing transactions, instead of a fixed 10k buffer.\n-Workaround for improbable memory access violation.\n-Check wallet's minimum version before trying to load it.\n-Remove wxBitcoin properly when installing Bitcoin-Qt over it. (Windows)\n-Detail reorganization information better in debug log.\n-Use a messagebox to display the error when -server is provided without configuring a RPC password.\n-Testing suite build now honours provided CXXFLAGS.\n-Removed an extraneous line-break in mature transaction tooltips.\n-Fix some grammatical errors in translation process documentation."
      },
      {
        "sha": "75ebc3e6b62269aff03d48828913807eabca071a",
        "filename": "doc/release-notes/release-notes-0.5.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.5.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.5.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,37 +0,0 @@\n-bitcoind and Bitcoin-Qt version 0.5.5 are now available for download at:\n-Windows: installer | zip (sig)\n-Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n-\n-These are bugfix-only releases.\n-\n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n-\n-BUG FIXES\n-\n-Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n-Verify status of encrypt/decrypt calls to detect failed padding\n-Check blocks for duplicate transactions earlier. Fixes #1167\n-Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n-JSON-RPC listtransactions's from/count handling is now fixed\n-Optimize and fix multithreaded access, when checking whether we already know about transactions\n-Fix potential networking deadlock\n-Proper support for Growl 1.3 notifications\n-Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n-Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n-Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n-Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n-Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n-Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n-Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n-Work around issue in boost::program_options that prevents from compiling in clang\n-Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n-Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "1963a362591566d6aadd24b8634dbfe589e68eb9",
        "filename": "doc/release-notes/release-notes-0.6.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.6.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.6.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,138 +0,0 @@\n-Bitcoin version 0.6.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/test/\n-\n-This release includes more than 20 language localizations.\n-More translations are welcome; join the\n-project at Transifex to help:\n-https://www.transifex.net/projects/p/bitcoin/\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Project source code is hosted at github; we are no longer\n-distributing .tar.gz files here, you can get them\n-directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.6.0  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.6.0  # .zip\n-\n-For Ubuntu users, there is a ppa maintained by Matt Corallo which\n-you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n-\n-\n-KNOWN ISSUES\n-\n-Shutting down while synchronizing with the network\n-(downloading the blockchain) can take more than a minute,\n-because database writes are queued to speed up download\n-time.\n-\n-\n-NEW FEATURES SINCE BITCOIN VERSION 0.5\n-\n-Initial network synchronization should be much faster\n-(one or two hours on a typical machine instead of ten or more\n-hours).\n-\n-Backup Wallet menu option.\n-\n-Bitcoin-Qt can display and save QR codes for sending\n-and receiving addresses.\n-\n-New context menu on addresses to copy/edit/delete them.\n-\n-New Sign Message dialog that allows you to prove that you\n-own a bitcoin address by creating a digital\n-signature.\n-\n-New wallets created with this version will\n-use 33-byte 'compressed' public keys instead of\n-65-byte public keys, resulting in smaller\n-transactions and less traffic on the bitcoin\n-network. The shorter keys are already supported\n-by the network but wallet.dat files containing\n-short keys are not compatible with earlier\n-versions of Bitcoin-Qt/bitcoind.\n-\n-New command-line argument -blocknotify=<command>\n-that will spawn a shell process to run <command> \n-when a new block is accepted.\n-\n-New command-line argument -splash=0 to disable\n-Bitcoin-Qt's initial splash screen\n-\n-validateaddress JSON-RPC api command output includes\n-two new fields for addresses in the wallet:\n-pubkey : hexadecimal public key\n-iscompressed : true if pubkey is a short 33-byte key\n-\n-New JSON-RPC api commands for dumping/importing\n-private keys from the wallet (dumprivkey, importprivkey).\n-\n-New JSON-RPC api command for getting information about\n-blocks (getblock, getblockhash).\n-\n-New JSON-RPC api command (getmininginfo) for getting\n-extra information related to mining. The getinfo\n-JSON-RPC command no longer includes mining-related\n-information (generate/genproclimit/hashespersec).\n-\n-\n-\n-NOTABLE CHANGES\n-\n-BIP30 implemented (security fix for an attack involving\n-duplicate \"coinbase transactions\").\n-\n-The -nolisten, -noupnp and -nodnsseed command-line\n-options were renamed to -listen, -upnp and -dnsseed,\n-with a default value of 1. The old names are still\n-supported for compatibility (so specifying -nolisten\n-is automatically interpreted as -listen=0; every\n-boolean argument can now be specified as either\n--foo or -nofoo).\n-\n-The -noirc command-line options was renamed to\n--irc, with a default value of 0. Run -irc=1 to\n-get the old behavior.\n-\n-Three fill-up-available-memory denial-of-service\n-attacks were fixed.\n-\n-\n-NOT YET IMPLEMENTED FEATURES\n-\n-Support for clicking on bitcoin: URIs and\n-opening/launching Bitcoin-Qt is available only on Linux,\n-and only if you configure your desktop to launch\n-Bitcoin-Qt. All platforms support dragging and dropping\n-bitcoin: URIs onto the Bitcoin-Qt window to start\n-payment.\n-\n-\n-PRELIMINARY SUPPORT FOR MULTISIGNATURE TRANSACTIONS\n-\n-This release has preliminary support for multisignature\n-transactions-- transactions that require authorization\n-from more than one person or device before they\n-will be accepted by the bitcoin network.\n-\n-Prior to this release, multisignature transactions\n-were considered 'non-standard' and were ignored;\n-with this release multisignature transactions are\n-considered standard and will start to be relayed\n-and accepted into blocks.\n-\n-It is expected that future releases of Bitcoin-Qt\n-will support the creation of multisignature transactions,\n-once enough of the network has upgraded so relaying\n-and validating them is robust.\n-\n-For this release, creation and testing of multisignature\n-transactions is limited to the bitcoin test network using\n-the \"addmultisigaddress\" JSON-RPC api call.\n-\n-Short multisignature address support is included in this\n-release, as specified in BIP 13 and BIP 16."
      },
      {
        "sha": "ef7966ecd6809ec3a0805bfca30b9a52ab8e33c7",
        "filename": "doc/release-notes/release-notes-0.6.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.6.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.6.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,2 +0,0 @@\n-Never released\n-"
      },
      {
        "sha": "bb85fb23a0414b84a75bec16cf8f26b06f8d3777",
        "filename": "doc/release-notes/release-notes-0.6.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.6.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.6.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,50 +0,0 @@\n-Bitcoin version 0.6.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.2/\n-\n-This is a bug-fix and code-cleanup release, with no major new features.\n-\n-Please report bugs using the github issue tracker at:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-\n-NOTABLE CHANGES\n-\n-Much faster shutdowns. However, the blkindex.dat file is no longer\n-portable to different data directories by default. If you need a\n-portable blkindex.dat file then run with the new -detachdb=1 option\n-or the \"Detach databases at shutdown\" GUI preference.\n-\n-Fixed https://github.com/bitcoin/bitcoin/issues/1065, a bug that\n-could cause long-running nodes to crash.\n-\n-Mac and Windows binaries are compiled against OpenSSL 1.0.1b (Linux\n-binaries are dynamically linked to the version of OpenSSL on the system).\n-\n-\n-CHANGE SUMMARY\n-\n-Use 'git shortlog --no-merges v0.6.0..' for a summary of this release.\n-\n-Source codebase changes:\n-- Many source code cleanups and warnings fixes.  Close to building with -Wall\n-- Locking overhaul, and several minor locking fixes\n-- Several source code portability fixes, e.g. FreeBSD\n-\n-JSON-RPC interface changes:\n-- addmultisigaddress enabled for mainnet (previously only enabled for testnet)\n-\n-Network protocol changes:\n-- protocol version 60001\n-- added nonce value to \"ping\" message (BIP 31)\n-- added new \"pong\" message (BIP 31)\n-\n-Backend storage changes:\n-- Less redundant database flushing, especially during initial block download\n-- Shutdown improvements (see above)\n-\n-Qt user interface:\n-- minor URI handling improvements\n-- progressbar improvements\n-- error handling improvements (show message box rather than console exception,\n-etc.)\n-- by popular request, make 4th bar of connection icon green"
      },
      {
        "sha": "c27f607b5c58e3c2f16bb49bbcf7d8122e40af85",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,29 +0,0 @@\n-Bitcoin version 0.6.3 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.3/\n-\n-This is a bug-fix release, with no new features.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-CHANGE SUMMARY\n-\n-Fixed a serious denial-of-service attack that could cause the\n-bitcoin process to become unresponsive. Thanks to Sergio Lerner\n-for finding and responsibly reporting the problem. (CVE-2012-3789)\n-\n-Optimized the process of checking transaction signatures, to\n-speed up processing of new block messages and make propagating\n-blocks across the network faster.\n-\n-Fixed an obscure bug that could cause the bitcoin process to get\n-stuck on an invalid block-chain, if the invalid chain was\n-hundreds of blocks long.\n-\n-Bitcoin-Qt no longer automatically selects the first address\n-in the address book (Issue #1384).\n-\n-Fixed minimize-to-dock behavior of Bitcoin-Qt on the Mac.\n-\n-Added a block checkpoint at block 185,333 to speed up initial\n-blockchain download."
      },
      {
        "sha": "d33a58f99ffea8145816480f24a7bada55cdd574",
        "filename": "doc/release-notes/release-notes-0.7.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 169,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.7.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.7.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,169 +0,0 @@\n-Bitcoin version 0.7.0 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/\n-\n-We recommend that everybody running prior versions of bitcoind/Bitcoin-Qt\n-upgrade to this release, except for users running Mac OSX 10.5.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-Project source code is hosted at github; you can get\n-source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.0  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.0  # .zip\n-\n-Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n-maintained by Matt Corallo to automatically keep \n-bitcoin up-to-date.  Just type\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n-  sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n-\n-\n-How to Upgrade\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-Code:\n-/Applications/Bitcoin-Qt\n-(on Mac) or\n-Code:\n-bitcoind/bitcoin-qt\n-(on Linux).\n-\n-If you were running on Linux with a version that might have been compiled\n-with a different version of Berkeley DB (for example, if you were using the\n-PPA and are switching to the binary release), then run the old version again\n-with the -detachdb argument and shut it down; if you do not, then the new\n-version will not be able to read the database files and will exit with an error.\n-\n-Incompatible Changes\n-\n-* Replaced the 'getmemorypool' RPC command with 'getblocktemplate/submitblock'\n-  and 'getrawmempool' commands.\n-* Remove deprecated RPC 'getblocknumber'\n-\n-Bitcoin Improvement Proposals implemented\n-\n-BIP 22 - 'getblocktemplate', 'submitblock' RPCs\n-BIP 34 - block version 2, height in coinbase\n-BIP 35 - 'mempool' message, extended 'getdata' message behavior\n-\n-\n-Core bitcoin handling and blockchain database\n-\n-* Reduced CPU usage, by eliminating some redundant hash calculations\n-* Cache signature verifications, to eliminate redundant signature checks\n-* Transactions with zero-value outputs are considered non-standard\n-* Mining: when creating new blocks, sort 'paid' area by fee-per-kb\n-* Database: better validation of on-disk stored data\n-* Database: minor optimizations and reliability improvements\n-* -loadblock=FILE will import an external block file\n-* Additional DoS (denial-of-service) prevention measures\n-* New blockchain checkpoint at block 193,000\n-\n-\n-JSON-RPC API\n-\n-* Internal HTTP server is now thread-per-connection, rather than\n-  a single-threaded queue that would stall on network I/O.\n-* Internal HTTP server supports HTTP/1.1, pipelined requests and\n-  connection keep-alive.\n-* Support JSON-RPC 2.0 batches, to encapsulate multiple JSON-RPC requests\n-  within a single HTTP request.\n-* IPv6 support\n-* Added raw transaction API.  See https://gist.github.com/2839617\n-* Added 'getrawmempool', to list contents of TX memory pool\n-* Added 'getpeerinfo', to list data about each connected network peer\n-* Added 'listaddressgroupings' for better coin control\n-* Rework getblock call.\n-* Remove deprecated RPC 'getblocknumber'\n-* Remove superceded RPC 'getmemorypool' (see BIP 22, above)\n-* listtransactions output now displays \"smart\" times for transactions,\n-  and 'blocktime' and 'timereceived' fields were added\n-\n-\n-P2P networking\n-\n-* IPv6 support\n-* Tor hidden service support (see doc/Tor.txt)\n-* Attempts to fix \"stuck blockchain download\" problems\n-* Replace BDB database \"addr.dat\" with internally-managed \"peers.dat\"\n-  file containing peer address data.\n-* Lower default send buffer from 10MB to 1MB\n-* proxy: SOCKS5 by default\n-* Support connecting by hostnames passed to proxy\n-* Add -seednode connections, and use this instead of DNS seeds when proxied\n-* Added -externalip and -discover\n-* Add -onlynet to connect only to a given network (IPv4, IPv6, or Tor)\n-* Separate listening sockets, -bind=<addr>\n-\n-\n-Qt GUI\n-\n-* Add UI RPC console / debug window\n-* Re-Enable URI handling on Windows, add safety checks and tray-notifications\n-* Harmonize the use of ellipsis (\"...\") to be used in menus, but not on buttons\n-* Add 2 labels to the overviewpage that display Wallet and Transaction status (obsolete or current)\n-* Extend the optionsdialog (e.g. language selection) and re-work it to a tabbed UI\n-* Merge sign/verify message into a single window with tabbed UI\n-* Ensure a changed bitcoin unit immediately updates all GUI elements that use units\n-* Update QR Code dialog\n-* Improve error reporting at startup\n-* Fine-grained UI updates for a much smoother UI during block downloads\n-* Remove autocorrection of 0/i in addresses in UI\n-* Reorganize tray icon menu into more logical order\n-* Persistently poll for balance change when number of blocks changed\n-* Much better translations\n-* Override progress bar design on platforms with segmented progress bars to assist with readability\n-* Added 'immature balance' display on the overview page\n-* (Windows only): enable ASLR and DEP for bitcoin-qt.exe\n-* (Windows only): add meta-data to bitcoin-qt.exe (e.g. description)\n-\n-Internal codebase\n-\n-* Additional unit tests\n-* Compile warning fixes\n-\n-\n-Miscellaneous\n-\n-* Reopen debug.log upon SIGHUP\n-* Bash programmable completion for bitcoind(1)\n-* On supported OS's, each thread is given a useful name\n-\n-\n-Thanks to everybody who contributed to this release:\n-\n-Chris Moore\n-Christian von Roques\n-David Joel Schwartz\n-Douglas Huff\n-Fordy\n-Gavin Andresen\n-Giel van Schijndel\n-Gregory Maxwell\n-Jeff Garzik\n-Luke Dashjr\n-Matt Corallo\n-Michael Ford\n-Michael Hendricks\n-Peter Todd\n-Philip Kaufmann\n-Pieter Wuille\n-R E Broadley\n-Ricardo M. Correia\n-Rune K. Svendsen\n-Scott Ellis\n-Stephane Glondu\n-Wladimir J. van der Laan\n-cardpuncher\n-coderrr\n-fanquake\n-grimd34th\n-sje397\n-xanatos\n-\n-Thanks to Sergio Lerner for reporting denial-of-service vulnerabilities fixed in this release."
      },
      {
        "sha": "22e910c09fdf5959931d28bdbabf43fd1aebce81",
        "filename": "doc/release-notes/release-notes-0.7.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.7.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.7.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,110 +0,0 @@\n-Bitcoin version 0.7.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/\n-\n-This is a bug-fix minor release.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-Project source code is hosted at github; you can get\n-source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.1  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.1  # .zip\n-\n-Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n-maintained by Matt Corallo to automatically keep \n-up-to-date.  Just type:\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n-  sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n-\n-KNOWN ISSUES\n-------------\n-\n-Mac OSX 10.5 is no longer supported.\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you were running on Linux with a version that might have been compiled\n-with a different version of Berkeley DB (for example, if you were using an\n-Ubuntu PPA version), then run the old version again with the -detachdb\n-argument and shut it down; if you do not, then the new version will not\n-be able to read the database files and will exit with an error.\n-\n-Explanation of -detachdb (and the new \"stop true\" RPC command):\n-The Berkeley DB database library stores data in both \".dat\" and\n-\"log\" files, so the database is always in a consistent state,\n-even in case of power failure or other sudden shutdown. The\n-format of the \".dat\" files is portable between different\n-versions of Berkeley DB, but the \"log\" files are not-- even minor\n-version differences may have incompatible \"log\" files. The\n--detachdb option moves any pending changes from the \"log\" files\n-to the \"blkindex.dat\" file for maximum compatibility, but makes\n-shutdown much slower. Note that the \"wallet.dat\" file is always\n-detached, and versions prior to 0.6.0 detached all databases\n-at shutdown.\n-\n-New features\n-------------\n-\n-* Added a boolean argument to the RPC 'stop' command, if true sets\n-  -detachdb to create standalone database .dat files before shutting down.\n-\n-* -salvagewallet command-line option, which moves any existing wallet.dat\n-  to wallet.{timestamp}.dat and then attempts to salvage public/private\n-  keys and master encryption keys (if the wallet is encrypted) into\n-  a new wallet.dat. This should only be used if your wallet becomes\n-  corrupted, and is not intended to replace regular wallet backups.\n-\n-* Import $DataDir/bootstrap.dat automatically, if it exists.\n-\n-Dependency changes\n-------------------\n-\n-* Qt 4.8.2 for Windows builds\n-\n-* openssl 1.0.1c\n-\n-Bug fixes\n----------\n-\n-* Clicking on a bitcoin: URI on Windows should now launch Bitcoin-Qt properly.\n-\n-* When running -testnet, use RPC port 18332 by default.\n-\n-* Better detection and handling of corrupt wallet.dat and blkindex.dat files.\n-  Previous versions would crash with a DB_RUNRECOVERY exception, this\n-  version detects most problems and tells you how to recover if it\n-  cannot recover itself.\n-\n-* Fixed an uninitialized variable bug that could cause transactions to\n-  be reported out of order.\n-\n-* Fixed a bug that could cause occasional crashes on exit.\n-\n-* Warn the user that they need to create fresh wallet backups after they\n-  encrypt their wallet.\n-\n-----------------------------------------------------\n-Thanks to everybody who contributed to this release:\n-\n-Gavin Andresen\n-Jeff Garzik\n-Luke Dashjr\n-Mark Friedenbach\n-Matt Corallo\n-Philip Kaufmann\n-Pieter Wuille\n-Rune K. Svendsen\n-Virgil Dupras\n-Wladimir J. van der Laan\n-fanquake\n-kjj2\n-xanatos"
      },
      {
        "sha": "40af34962bd9c91478dc2eda9bb853a39bd8d436",
        "filename": "doc/release-notes/release-notes-0.7.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.7.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.7.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,68 +0,0 @@\n-Bitcoin version 0.7.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.2\n-\n-This is a bug-fix minor release.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you were running on Linux with a version that might have been compiled\n-with a different version of Berkeley DB (for example, if you were using an\n-Ubuntu PPA version), then run the old version again with the -detachdb\n-argument and shut it down; if you do not, then the new version will not\n-be able to read the database files and will exit with an error.\n-\n-Explanation of -detachdb (and the new \"stop true\" RPC command):\n-The Berkeley DB database library stores data in both \".dat\" and\n-\"log\" files, so the database is always in a consistent state,\n-even in case of power failure or other sudden shutdown. The\n-format of the \".dat\" files is portable between different\n-versions of Berkeley DB, but the \"log\" files are not-- even minor\n-version differences may have incompatible \"log\" files. The\n--detachdb option moves any pending changes from the \"log\" files\n-to the \"blkindex.dat\" file for maximum compatibility, but makes\n-shutdown much slower. Note that the \"wallet.dat\" file is always\n-detached, and versions prior to 0.6.0 detached all databases\n-at shutdown.\n-\n-Bug fixes\n----------\n-\n-* Prevent RPC 'move' from deadlocking. This was caused by trying to lock the\n-  database twice.\n-\n-* Fix use-after-free problems in initialization and shutdown, the latter of\n-  which caused Bitcoin-Qt to crash on Windows when exiting.\n-\n-* Correct library linking so building on Windows natively works.\n-\n-* Avoid a race condition and out-of-bounds read in block creation/mining code.\n-\n-* Improve platform compatibility quirks, including fix for 100% CPU utilization\n-  on FreeBSD 9.\n-\n-* A few minor corrections to error handling, and updated translations.\n-\n-* OSX 10.5 supported again\n-\n-----------------------------------------------------\n-Thanks to everybody who contributed to this release:\n-\n-Alex\n-dansmith\n-Gavin Andresen\n-Gregory Maxwell\n-Jeff Garzik\n-Luke Dashjr\n-Philip Kaufmann\n-Pieter Wuille\n-Wladimir J. van der Laan\n-grimd34th"
      },
      {
        "sha": "4e98a7740fc2522bfa96c0b1d76133ce88e8113a",
        "filename": "doc/release-notes/release-notes-0.8.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 139,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,139 +0,0 @@\n-Bitcoin-Qt version 0.8.0 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.0/\n-\n-This is a major release designed to improve performance and handle the\n-increasing volume of transactions on the network.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-The first time you run after the upgrade a re-indexing process will be\n-started that will take anywhere from 30 minutes to several hours,\n-depending on the speed of your machine.\n-\n-Incompatible Changes\n---------------------\n-\n-This release no longer maintains a full index of historical transaction ids\n-by default, so looking up an arbitrary transaction using the getrawtransaction\n-RPC call will not work. If you need that functionality, you must run once\n-with -txindex=1 -reindex=1 to rebuild block-chain indices (see below for more\n-details).\n-\n-Improvements\n-------------\n-\n-Mac and Windows binaries are signed with certificates owned by the Bitcoin\n-Foundation, to be compatible with the new security features in OSX 10.8 and\n-Windows 8.\n-\n-LevelDB, a fast, open-source, non-relational database from Google, is\n-now used to store transaction and block indices.  LevelDB works much better\n-on machines with slow I/O and is faster in general. Berkeley DB is now only\n-used for the wallet.dat file (public and private wallet keys and transactions\n-relevant to you).\n-\n-Pieter Wuille implemented many optimizations to the way transactions are\n-verified, so a running, synchronized node uses less working memory and does\n-much less I/O. He also implemented parallel signature checking, so if you\n-have a multi-CPU machine all CPUs will be used to verify transactions.\n-\n-New Features\n-------------\n-\n-\"Bloom filter\" support in the network protocol for sending only relevant transactions to\n-lightweight clients.\n-\n-contrib/verifysfbinaries is a shell-script to verify that the binary downloads\n-at sourceforge have not been tampered with. If you are able, you can help make\n-everybody's downloads more secure by running this occasionally to check PGP\n-signatures against download file checksums.\n-\n-contrib/spendfrom is a python-language command-line utility that demonstrates\n-how to use the \"raw transactions\" JSON-RPC api to send coins received from particular\n-addresses (also known as \"coin control\").\n-\n-New/changed settings (command-line or bitcoin.conf file)\n---------------------------------------------------------\n-\n-dbcache : controls LevelDB memory usage.\n-\n-par : controls how many threads to use to validate transactions. Defaults to the number\n-of CPUs on your machine, use -par=1 to limit to a single CPU.\n-\n-txindex : maintains an extra index of old, spent transaction ids so they will be found\n-by the getrawtransaction JSON-RPC method.\n-\n-reindex : rebuild block and transaction indices from the downloaded block data.\n-\n-New JSON-RPC API Features\n--------------------------\n-\n-lockunspent / listlockunspent allow locking transaction outputs for a period of time so\n-they will not be spent by other processes that might be accessing the same wallet.\n-\n-addnode / getaddednodeinfo methods, to connect to specific peers without restarting.\n-\n-importprivkey now takes an optional boolean parameter (default true) to control whether\n-or not to rescan the blockchain for transactions after importing a new private key.\n-\n-Important Bug Fixes\n--------------------\n-\n-Privacy leak: the position of the \"change\" output in most transactions was not being\n-properly randomized, making network analysis of the transaction graph to identify\n-users' wallets easier. \n-\n-Zero-confirmation transaction vulnerability: accepting zero-confirmation transactions\n-(transactions that have not yet been included in a block) from somebody you do not\n-trust is still not recommended, because there will always be ways for attackers to\n-double-spend zero-confirmation transactions. However, this release includes a bug\n-fix that makes it a little bit more difficult for attackers to double-spend a\n-certain type (\"lockTime in the future\") of zero-confirmation transaction.\n-\n-Dependency Changes\n-------------------\n-\n-Qt 4.8.3 (compiling against older versions of Qt 4 should continue to work)\n-\n-\n-Thanks to everybody who contributed to this release:\n-----------------------------------------------------\n-\n-Alexander Kjeldaas\n-Andrey Alekseenko\n-Arnav Singh\n-Christian von Roques\n-Eric Lombrozo\n-Forrest Voight\n-Gavin Andresen\n-Gregory Maxwell\n-Jeff Garzik\n-Luke Dashjr\n-Matt Corallo\n-Mike Cassano\n-Mike Hearn\n-Peter Todd\n-Philip Kaufmann\n-Pieter Wuille\n-Richard Schwab\n-Robert Backhaus\n-Rune K. Svendsen\n-Sergio Demian Lerner\n-Wladimir J. van der Laan\n-burger2\n-default\n-fanquake\n-grimd34th\n-justmoon\n-redshark1802\n-tucenaber\n-xanatos"
      },
      {
        "sha": "4fd546bee00f9e78541190dd1ceb22cff35c3f09",
        "filename": "doc/release-notes/release-notes-0.8.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,22 +0,0 @@\n-Bitcoin-Qt/bitcoind version 0.8.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/\n-\n-This is a maintenance release that adds a new network rule to avoid\n-a chain-forking incompatibility with versions 0.7.2 and earlier.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.1 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine."
      },
      {
        "sha": "eea9ba2a2c3c88b7fa5ac3b8f138f8ae39a59b75",
        "filename": "doc/release-notes/release-notes-0.8.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 137,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,137 +0,0 @@\n-Bitcoin-Qt version 0.8.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.2/\n-\n-This is a maintenance release that fixes many bugs and includes\n-a few small new features.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-\n-How to Upgrade\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.2 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine.\n-\n-0.8.2 Release notes\n-\n-Fee Policy changes\n-\n-The default fee for low-priority transactions is lowered from 0.0005 BTC \n-(for each 1,000 bytes in the transaction; an average transaction is\n-about 500 bytes) to 0.0001 BTC.\n-\n-Payments (transaction outputs) of 0.543 times the minimum relay fee\n-(0.00005430 BTC) are now considered 'non-standard', because storing them\n-costs the network more than they are worth and spending them will usually\n-cost their owner more in transaction fees than they are worth.\n-\n-Non-standard transactions are not relayed across the network, are not included\n-in blocks by most miners, and will not show up in your wallet until they are\n-included in a block.\n-\n-The default fee policy can be overridden using the -mintxfee and -minrelaytxfee\n-command-line options, but note that we intend to replace the hard-coded fees\n-with code that automatically calculates and suggests appropriate fees in the\n-0.9 release and note that if you set a fee policy significantly different from\n-the rest of the network your transactions may never confirm.\n-\n-Bitcoin-Qt changes\n-\n-* New icon and splash screen\n-* Improve reporting of synchronization process\n-* Remove hardcoded fee recommendations\n-* Improve metadata of executable on MacOSX and Windows\n-* Move export button to individual tabs instead of toolbar\n-* Add \"send coins\" command to context menu in address book\n-* Add \"copy txid\" command to copy transaction IDs from transaction overview\n-* Save & restore window size and position when showing & hiding window\n-* New translations: Arabic (ar), Bosnian (bs), Catalan (ca), Welsh (cy),\n-  Esperanto (eo), Interlingua (la), Latvian (lv) and many improvements\n-  to current translations\n-\n-MacOSX:\n-* OSX support for click-to-pay (bitcoin:) links\n-* Fix GUI disappearing problem on MacOSX (issue #1522)\n-\n-Linux/Unix:\n-* Copy addresses to middle-mouse-button clipboard\n-\n-\n-Command-line options\n-\n-* -walletnotify will call a command on receiving transactions that affect the wallet.\n-* -alertnotify will call a command on receiving an alert from the network.\n-* -par now takes a negative number, to leave a certain amount of cores free.\n-\n-JSON-RPC API changes\n-\n-* fixed a getblocktemplate bug that caused excessive CPU creating blocks.\n-* listunspent now lists account and address information.\n-* getinfo now also returns the time adjustment estimated from your peers.\n-* getpeerinfo now returns bytessent, bytesrecv and syncnode.\n-* gettxoutsetinfo returns statistics about the unspent transaction output database.\n-* gettxout returns information about a specific unspent transaction output.\n-\n-\n-Networking changes\n-\n-* Significant changes to the networking code, reducing latency and memory consumption.\n-* Avoid initial block download stalling.\n-* Remove IRC seeding support.\n-* Performance tweaks.\n-* Added testnet DNS seeds.\n-\n-Wallet compatibility/rescuing\n-\n-* Cases where wallets cannot be opened in another version/installation should be reduced.\n-* -salvagewallet now works for encrypted wallets.\n-\n-\n-Known Bugs\n-\n-* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Bitcoin-Qt debug\n-console will cause Bitcoin-Qt to crash. Run Bitcoin-Qt with the -server command-line\n-option to workaround.\n-\n-Thanks to everybody who contributed to the 0.8.2 release!\n-\n-APerson241\n-Andrew Poelstra\n-Calvin Owens\n-Chuck LeDuc D\u00edaz\n-Colin Dean\n-David Griffith\n-David Serrano\n-Eric Lombrozo\n-Gavin Andresen\n-Gregory Maxwell\n-Jeff Garzik\n-Jonas Schnelli\n-Larry Gilbert\n-Luke Dashjr\n-Matt Corallo\n-Michael Ford\n-Mike Hearn\n-Patrick Brown\n-Peter Todd\n-Philip Kaufmann\n-Pieter Wuille\n-Richard Schwab\n-Roman Mindalev\n-Scott Howard\n-Tariq Bashir\n-Warren Togami\n-Wladimir J. van der Laan\n-freewil\n-gladoscc\n-kjj2\n-mb300sd\n-super3"
      },
      {
        "sha": "856c20aa33d5d82ed189ed6e90a4a32b40673f15",
        "filename": "doc/release-notes/release-notes-0.8.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.3.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,18 +0,0 @@\n-Bitcoin-Qt version 0.8.3 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.3/\n-\n-This is a maintenance release to fix a denial-of-service attack that\n-can cause nodes to crash.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-0.8.3 Release notes\n-\n-Truncate over-size messages to prevent a memory exhaustion attack.\n-\n-Fix a regression that causes excessive re-writing of the 'peers.dat' file.\n-\n-\n-Thanks to Peter Todd for responsibly disclosing the vulnerability\n-( CVE-2013-4627 ) and creating a fix."
      },
      {
        "sha": "c6f31f1fa4a58040ca94bb23dbb9ae5bf5a24798",
        "filename": "doc/release-notes/release-notes-0.8.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.4.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,83 +0,0 @@\n-Bitcoin-Qt version 0.8.4 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/\n-\n-This is a maintenance release to fix a critical bug and three\n-security issues; we urge all users to upgrade.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.4 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine.\n-\n-0.8.4 Release notes\n-===================\n-\n-Security issues\n----------------\n-\n-An attacker could send a series of messages that resulted in\n-an integer division-by-zero error in the Bloom Filter handling\n-code, causing the Bitcoin-Qt or bitcoind process to crash.\n-Bloom filters were introduced with version 0.8, so versions 0.8.0\n-through 0.8.3 are vulnerable to this critical denial-of-service attack.\n-\n-A constant-time algorithm is now used to check RPC password\n-guess attempts; fixes https://github.com/bitcoin/bitcoin/issues/2838\n-(CVE-2013-4165)\n-\n-Implement a better fix for the fill-memory-with-orphan-transactions\n-attack that was fixed in 0.8.3. See\n-https://bitslog.wordpress.com/2013/07/18/buggy-cve-2013-4627-patch-open-new-vectors-of-attack/\n-for a description of the weaknesses of the previous fix.\n-(CVE-2013-4627)\n-\n-Bugs fixed\n-----------\n-\n-Fix multi-block reorg transaction resurrection.\n-\n-Fix non-standard disconnected transactions causing mempool orphans.\n-This bug could cause nodes running with the -debug flag to crash.\n-\n-OSX: use 'FD_FULLSYNC' with LevelDB, which will (hopefully!)\n-prevent the database corruption issues many people have\n-experienced on OSX.\n-\n-Linux: clicking on bitcoin: links was broken if you were using\n-a Gnome-based desktop.\n-\n-Fix a hang-at-shutdown bug that only affects users that compile\n-their own version of Bitcoin against Boost versions 1.50-1.52.\n-\n-Other changes\n--------------\n-\n-Checkpoint at block 250,000 to speed up initial block downloads\n-and make the progress indicator when downloading more accurate.\n-\n-\n-Thanks to everybody who contributed to the 0.8.4 releases!\n-----------------------------------------------------------\n-\n-Pieter Wuille\n-Warren Togami\n-Patrick Strateman\n-pakt\n-Gregory Maxwell\n-Sergio Demian Lerner\n-grayleonard\n-Cory Fields\n-Matt Corallo\n-Gavin Andresen"
      },
      {
        "sha": "aa93fe7c715c23c967fd01e8af9a9337a34291a4",
        "filename": "doc/release-notes/release-notes-0.8.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.5.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,44 +0,0 @@\n-Bitcoin-Qt version 0.8.5 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/\n-\n-This is a maintenance release to fix a critical bug;\n-we urge all users to upgrade.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.5 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine.\n-\n-0.8.5 Release notes\n-===================\n-\n-Bugs fixed\n-----------\n-\n-Transactions with version numbers larger than 0x7fffffff were\n-incorrectly being relayed and included in blocks.\n-\n-Blocks containing transactions with version numbers larger\n-than 0x7fffffff caused the code that checks for LevelDB database\n-inconsistencies at startup to erroneously report database\n-corruption and suggest that you reindex your database.\n-\n-This release also contains a non-critical fix to the code that\n-enforces BIP 34 (block height in the coinbase transaction).\n-\n---\n-\n-Thanks to Gregory Maxwell and Pieter Wuille for quickly\n-identifying and fixing the transaction version number bug."
      },
      {
        "sha": "39a45e0db565713a2bb06c1761f17e44c83f6fdd",
        "filename": "doc/release-notes/release-notes-0.8.6.md",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.8.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.6.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,66 +0,0 @@\n-Bitcoin-Qt version 0.8.6 final is now available from:\n-\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.6/\n-\n-This is a maintenance release to fix a critical bug; we urge all users to upgrade.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you already downloaded 0.8.6rc1 you do not need to re-download. This release is exactly the same.\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.6 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine.\n-\n-0.8.6 Release notes\n-===================\n-\n-- Default block size increase for miners.\n-  (see https://gist.github.com/gavinandresen/7670433#086-accept-into-block)\n-\n-- Remove the all-outputs-must-be-greater-than-CENT-to-qualify-as-free rule for relaying\n-  (see https://gist.github.com/gavinandresen/7670433#086-relaying)\n-\n-- Lower maximum size for free transaction creation\n-  (see https://gist.github.com/gavinandresen/7670433#086-wallet)\n-\n-- OSX block chain database corruption fixes\n-  - Update leveldb to 1.13\n-  - Use fcntl with `F_FULLSYNC` instead of fsync on OSX\n-  - Use native Darwin memory barriers\n-  - Replace use of mmap in leveldb for improved reliability (only on OSX)\n-\n-- Fix nodes forwarding transactions with empty vins and getting banned\n-\n-- Network code performance and robustness improvements\n-\n-- Additional debug.log logging for diagnosis of network problems, log timestamps by default\n-\n-- Fix Bitcoin-Qt startup crash when clicking dock icon on OSX \n-\n-- Fix memory leaks in CKey::SetCompactSignature() and Key::SignCompact()\n-\n-- Fix rare GUI crash on send\n-\n-- Various small GUI, documentation and build fixes\n-\n-Warning\n--------\n-\n-- There have been frequent reports of users running out of virtual memory on 32-bit systems\n-  during the initial sync.\n-  Hence it is recommended to use a 64-bit executable if possible.\n-  A 64-bit executable for Windows is planned for 0.9.\n-\n-Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/bitcoin/bitcoin.org/pull/279)."
      },
      {
        "sha": "170410ca40a3bd1bb059f02a7102d88e0ab95e27",
        "filename": "doc/release-notes/release-notes-0.9.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 411,
        "changes": 411,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.0.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,411 +0,0 @@\n-Bitcoin Core version 0.9.0 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.0/\n-\n-This is a new major version release, bringing both new features and\n-bug fixes.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), uninstall all\n-earlier versions of Bitcoin, then run the installer (on Windows) or just copy\n-over /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you run\n-0.9.0 your blockchain files will be re-indexed, which will take anywhere from \n-30 minutes to several hours, depending on the speed of your machine.\n-\n-On Windows, do not forget to uninstall all earlier versions of the Bitcoin\n-client first, especially if you are switching to the 64-bit version.\n-\n-Windows 64-bit installer\n--------------------------\n-\n-New in 0.9.0 is the Windows 64-bit version of the client. There have been\n-frequent reports of users running out of virtual memory on 32-bit systems\n-during the initial sync. Because of this it is recommended to install the\n-64-bit version if your system supports it.\n-\n-NOTE: Release candidate 2 Windows binaries are not code-signed; use PGP\n-and the SHA256SUMS.asc file to make sure your binaries are correct.\n-In the final 0.9.0 release, Windows setup.exe binaries will be code-signed.\n-\n-OSX 10.5 / 32-bit no longer supported\n--------------------------------------\n-\n-0.9.0 drops support for older Macs. The minimum requirements are now:\n-* A 64-bit-capable CPU (see http://support.apple.com/kb/ht3696);\n-* Mac OS 10.6 or later (see https://support.apple.com/kb/ht1633).\n-\n-Downgrading warnings\n---------------------\n-\n-The 'chainstate' for this release is not always compatible with previous\n-releases, so if you run 0.9 and then decide to switch back to a\n-0.8.x release you might get a blockchain validation error when starting the\n-old release (due to 'pruned outputs' being omitted from the index of\n-unspent transaction outputs).\n-\n-Running the old release with the -reindex option will rebuild the chainstate\n-data structures and correct the problem.\n-\n-Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n-the blockchain for missing spent coins, which will take a long time (tens\n-of minutes on a typical machine).\n-\n-Rebranding to Bitcoin Core\n----------------------------\n-\n-To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we\n-have renamed the reference client to Bitcoin Core.\n-\n-\n-OP_RETURN and data in the block chain\n--------------------------------------\n-On OP_RETURN:  There was been some confusion and misunderstanding in\n-the community, regarding the OP_RETURN feature in 0.9 and data in the\n-blockchain.  This change is not an endorsement of storing data in the\n-blockchain.  The OP_RETURN change creates a provably-prunable output,\n-to avoid data storage schemes -- some of which were already deployed --\n-that were storing arbitrary data such as images as forever-unspendable\n-TX outputs, bloating bitcoin's UTXO database.\n-\n-Storing arbitrary data in the blockchain is still a bad idea; it is less\n-costly and far more efficient to store non-currency data elsewhere.\n-\n-Autotools build system\n------------------------\n-\n-For 0.9.0 we switched to an autotools-based build system instead of individual\n-(q)makefiles.\n-\n-Using the standard \"./autogen.sh; ./configure; make\" to build Bitcoin-Qt and\n-bitcoind makes it easier for experienced open source developers to contribute \n-to the project.\n-\n-Be sure to check doc/build-*.md for your platform before building from source.\n-\n-Bitcoin-cli\n--------------\n-\n-Another change in the 0.9 release is moving away from the bitcoind executable\n-functioning both as a server and as a RPC client. The RPC client functionality\n-(\"tell the running bitcoin daemon to do THIS\") was split into a separate\n-executable, 'bitcoin-cli'. The RPC client code will eventually be removed from\n-bitcoind, but will be kept for backwards compatibility for a release or two.\n-\n-`walletpassphrase` RPC\n------------------------\n-\n-The behavior of the `walletpassphrase` RPC when the wallet is already unlocked\n-has changed between 0.8 and 0.9.\n-\n-The 0.8 behavior of `walletpassphrase` is to fail when the wallet is already unlocked:\n-\n-    > walletpassphrase 1000\n-    walletunlocktime = now + 1000\n-    > walletpassphrase 10\n-    Error: Wallet is already unlocked (old unlock time stays)\n-\n-The new behavior of `walletpassphrase` is to set a new unlock time overriding\n-the old one:\n-\n-    > walletpassphrase 1000\n-    walletunlocktime = now + 1000\n-    > walletpassphrase 10\n-    walletunlocktime = now + 10 (overriding the old unlock time)\n-\n-Transaction malleability-related fixes\n---------------------------------------\n-\n-This release contains a few fixes for transaction ID (TXID) malleability \n-issues:\n-\n-- -nospendzeroconfchange command-line option, to avoid spending\n-  zero-confirmation change\n-- IsStandard() transaction rules tightened to prevent relaying and mining of\n-  mutated transactions\n-- Additional information in listtransactions/gettransaction output to\n-  report wallet transactions that conflict with each other because\n-  they spend the same outputs.\n-- Bug fixes to the getbalance/listaccounts RPC commands, which would report\n-  incorrect balances for double-spent (or mutated) transactions.\n-- New option: -zapwallettxes to rebuild the wallet's transaction information\n-\n-Transaction Fees\n-----------------\n-\n-This release drops the default fee required to relay transactions across the\n-network and for miners to consider the transaction in their blocks to\n-0.01mBTC per kilobyte.\n-\n-Note that getting a transaction relayed across the network does NOT guarantee\n-that the transaction will be accepted by a miner; by default, miners fill\n-their blocks with 50 kilobytes of high-priority transactions, and then with\n-700 kilobytes of the highest-fee-per-kilobyte transactions.\n-\n-The minimum relay/mining fee-per-kilobyte may be changed with the\n-minrelaytxfee option. Note that previous releases incorrectly used\n-the mintxfee setting to determine which low-priority transactions should\n-be considered for inclusion in blocks.\n-\n-The wallet code still uses a default fee for low-priority transactions of\n-0.1mBTC per kilobyte. During periods of heavy transaction volume, even this\n-fee may not be enough to get transactions confirmed quickly; the mintxfee\n-option may be used to override the default.\n-\n-0.9.0 Release notes\n-=======================\n-\n-RPC:\n-\n-- New notion of 'conflicted' transactions, reported as confirmations: -1\n-- 'listreceivedbyaddress' now provides tx ids\n-- Add raw transaction hex to 'gettransaction' output\n-- Updated help and tests for 'getreceivedby(account|address)'\n-- In 'getblock', accept 2nd 'verbose' parameter, similar to getrawtransaction,\n-  but defaulting to 1 for backward compatibility\n-- Add 'verifychain', to verify chain database at runtime\n-- Add 'dumpwallet' and 'importwallet' RPCs\n-- 'keypoolrefill' gains optional size parameter\n-- Add 'getbestblockhash', to return tip of best chain\n-- Add 'chainwork' (the total work done by all blocks since the genesis block)\n-  to 'getblock' output\n-- Make RPC password resistant to timing attacks\n-- Clarify help messages and add examples\n-- Add 'getrawchangeaddress' call for raw transaction change destinations\n-- Reject insanely high fees by default in 'sendrawtransaction'\n-- Add RPC call 'decodescript' to decode a hex-encoded transaction script\n-- Make 'validateaddress' provide redeemScript\n-- Add 'getnetworkhashps' to get the calculated network hashrate\n-- New RPC 'ping' command to request ping, new 'pingtime' and 'pingwait' fields\n-  in 'getpeerinfo' output\n-- Adding new 'addrlocal' field to 'getpeerinfo' output\n-- Add verbose boolean to 'getrawmempool'\n-- Add rpc command 'getunconfirmedbalance' to obtain total unconfirmed balance\n-- Explicitly ensure that wallet is unlocked in `importprivkey`\n-- Add check for valid keys in `importprivkey`\n-\n-Command-line options:\n-\n-- New option: -nospendzeroconfchange to never spend unconfirmed change outputs\n-- New option: -zapwallettxes to rebuild the wallet's transaction information\n-- Rename option '-tor' to '-onion' to better reflect what it does\n-- Add '-disablewallet' mode to let bitcoind run entirely without wallet (when\n-  built with wallet)\n-- Update default '-rpcsslciphers' to include TLSv1.2\n-- make '-logtimestamps' default on and rework help-message\n-- RPC client option: '-rpcwait', to wait for server start\n-- Remove '-logtodebugger'\n-- Allow `-noserver` with bitcoind\n-\n-Block-chain handling and storage:\n-\n-- Update leveldb to 1.15\n-- Check for correct genesis (prevent cases where a datadir from the wrong\n-  network is accidentally loaded)\n-- Allow txindex to be removed and add a reindex dialog\n-- Log aborted block database rebuilds\n-- Store orphan blocks in serialized form, to save memory\n-- Limit the number of orphan blocks in memory to 750\n-- Fix non-standard disconnected transactions causing mempool orphans\n-- Add a new checkpoint at block 279,000\n-\n-Wallet:\n-\n-- Bug fixes and new regression tests to correctly compute\n-  the balance of wallets containing double-spent (or mutated) transactions\n-- Store key creation time. Calculate whole-wallet birthday.\n-- Optimize rescan to skip blocks prior to birthday\n-- Let user select wallet file with -wallet=foo.dat\n-- Consider generated coins mature at 101 instead of 120 blocks\n-- Improve wallet load time\n-- Don't count txins for priority to encourage sweeping\n-- Don't create empty transactions when reading a corrupted wallet\n-- Fix rescan to start from beginning after importprivkey\n-- Only create signatures with low S values\n-\n-Mining:\n-\n-- Increase default -blockmaxsize/prioritysize to 750K/50K\n-- 'getblocktemplate' does not require a key to create a block template\n-- Mining code fee policy now matches relay fee policy\n-\n-Protocol and network:\n-\n-- Drop the fee required to relay a transaction to 0.01mBTC per kilobyte\n-- Send tx relay flag with version\n-- New 'reject' P2P message (BIP 0061, see\n-  https://gist.github.com/gavinandresen/7079034 for draft)\n-- Dump addresses every 15 minutes instead of 10 seconds\n-- Relay OP_RETURN data TxOut as standard transaction type\n-- Remove CENT-output free transaction rule when relaying\n-- Lower maximum size for free transaction creation\n-- Send multiple inv messages if mempool.size > MAX_INV_SZ\n-- Split MIN_PROTO_VERSION into INIT_PROTO_VERSION and MIN_PEER_PROTO_VERSION\n-- Do not treat fFromMe transaction differently when broadcasting\n-- Process received messages one at a time without sleeping between messages\n-- Improve logging of failed connections\n-- Bump protocol version to 70002\n-- Add some additional logging to give extra network insight\n-- Added new DNS seed from bitcoinstats.com\n-\n-Validation:\n-\n-- Log reason for non-standard transaction rejection\n-- Prune provably-unspendable outputs, and adapt consistency check for it.\n-- Detect any sufficiently long fork and add a warning\n-- Call the -alertnotify script when we see a long or invalid fork\n-- Fix multi-block reorg transaction resurrection\n-- Reject non-canonically-encoded serialization sizes\n-- Reject dust amounts during validation\n-- Accept nLockTime transactions that finalize in the next block\n-\n-Build system:\n-\n-- Switch to autotools-based build system\n-- Build without wallet by passing `--disable-wallet` to configure, this \n-  removes the BerkeleyDB dependency\n-- Upgrade gitian dependencies (libpng, libz, libupnpc, boost, openssl) to more\n-  recent versions\n-- Windows 64-bit build support\n-- Solaris compatibility fixes\n-- Check integrity of gitian input source tarballs\n-- Enable full GCC Stack-smashing protection for all OSes\n-\n-GUI:\n-\n-- Switch to Qt 5.2.0 for Windows build\n-- Add payment request (BIP 0070) support\n-- Improve options dialog\n-- Show transaction fee in new send confirmation dialog\n-- Add total balance in overview page\n-- Allow user to choose data directory on first start, when data directory is\n-  missing, or when the -choosedatadir option is passed\n-- Save and restore window positions\n-- Add vout index to transaction id in transactions details dialog\n-- Add network traffic graph in debug window\n-- Add open URI dialog\n-- Add Coin Control Features\n-- Improve receive coins workflow: make the 'Receive' tab into a form to request\n-  payments, and move historical address list functionality to File menu.\n-- Rebrand to `Bitcoin Core`\n-- Move initialization/shutdown to a thread. This prevents \"Not responding\"\n-  messages during startup. Also show a window during shutdown.\n-- Don't regenerate autostart link on every client startup\n-- Show and store message of normal bitcoin:URI\n-- Fix richtext detection hang issue on very old Qt versions\n-- OS X: Make use of the 10.8+ user notification center to display Growl-like \n-  notifications\n-- OS X: Added NSHighResolutionCapable flag to Info.plist for better font\n-  rendering on Retina displays.\n-- OS X: Fix bitcoin-qt startup crash when clicking dock icon\n-- Linux: Fix Gnome bitcoin: URI handler\n-\n-Miscellaneous:\n-\n-- Add Linux script (contrib/qos/tc.sh) to limit outgoing bandwidth\n-- Add '-regtest' mode, similar to testnet but private with instant block\n-  generation with 'setgenerate' RPC.\n-- Add 'linearize.py' script to contrib, for creating bootstrap.dat\n-- Add separate bitcoin-cli client\n-\n-Credits\n---------\n-\n-Thanks to everyone who contributed to this release:\n-\n-- Andrey\n-- Ashley Holman\n-- b6393ce9-d324-4fe1-996b-acf82dbc3d53\n-- bitsofproof\n-- Brandon Dahler\n-- Calvin Tam\n-- Christian Decker\n-- Christian von Roques\n-- Christopher Latham\n-- Chuck\n-- coblee\n-- constantined\n-- Cory Fields\n-- Cozz Lovan\n-- daniel\n-- Daniel Larimer\n-- David Hill\n-- Dmitry Smirnov\n-- Drak\n-- Eric Lombrozo\n-- fanquake\n-- fcicq\n-- Florin\n-- frewil\n-- Gavin Andresen\n-- Gregory Maxwell\n-- gubatron\n-- Guillermo C\u00e9spedes Tab\u00e1rez\n-- Haakon Nilsen\n-- HaltingState\n-- Han Lin Yap\n-- harry\n-- Ian Kelling\n-- Jeff Garzik\n-- Johnathan Corgan\n-- Jonas Schnelli\n-- Josh Lehan\n-- Josh Triplett\n-- Julian Langschaedel\n-- Kangmo\n-- Lake Denman\n-- Luke Dashjr\n-- Mark Friedenbach\n-- Matt Corallo\n-- Michael Bauer\n-- Michael Ford\n-- Michagogo\n-- Midnight Magic\n-- Mike Hearn\n-- Nils Schneider\n-- Noel Tiernan\n-- Olivier Langlois\n-- patrick s\n-- Patrick Strateman\n-- paveljanik\n-- Peter Todd\n-- phantomcircuit\n-- phelixbtc\n-- Philip Kaufmann\n-- Pieter Wuille\n-- Rav3nPL\n-- R E Broadley\n-- regergregregerrge\n-- Robert Backhaus\n-- Roman Mindalev\n-- Rune K. Svendsen\n-- Ryan Niebur\n-- Scott Ellis\n-- Scott Willeke\n-- Sergey Kazenyuk\n-- Shawn Wilkinson\n-- Sined\n-- sje\n-- Subo1978\n-- super3\n-- Tamas Blummer\n-- theuni\n-- Thomas Holenstein\n-- Timon Rapp\n-- Timothy Stranex\n-- Tom Geller\n-- Torstein Huseb\u00f8\n-- Vaclav Vobornik\n-- vhf / victor felder\n-- Vinnie Falco\n-- Warren Togami\n-- Wil Bown\n-- Wladimir J. van der Laan"
      },
      {
        "sha": "0552053d27b8f76e9f5a80cdfcfb0420d64afc86",
        "filename": "doc/release-notes/release-notes-0.9.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,53 +0,0 @@\n-Bitcoin Core version 0.9.1 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.1/\n-\n-This is a security update. It is recommended to upgrade to this release\n-as soon as possible.\n-\n-It is especially important to upgrade if you currently have version\n-0.9.0 installed and are using the graphical interface OR you are using\n-bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n-have configured allowip to allow rpc connections from potentially\n-hostile hosts.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you run\n-0.9.1 your blockchain files will be re-indexed, which will take anywhere from \n-30 minutes to several hours, depending on the speed of your machine.\n-\n-0.9.1 Release notes\n-=======================\n-\n-No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.\n-\n-- Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can\n-  affect the Bitcoin Core software:\n-\n-  - CVE-2014-0160 (\"heartbleed\")\n-    A missing bounds check in the handling of the TLS heartbeat extension can\n-    be used to reveal up to 64k of memory to a connected client or server.\n-\n-  - CVE-2014-0076\n-    The Montgomery ladder implementation in OpenSSL does not ensure that\n-    certain swap operations have a constant-time behavior, which makes it\n-    easier for local users to obtain ECDSA nonces via a FLUSH+RELOAD cache\n-    side-channel attack.\n-\n-- Add statically built executables to Linux build\n-\n-Credits\n---------\n-\n-Credits go to the OpenSSL team for fixing the vulnerabilities quickly."
      },
      {
        "sha": "3168ad1a5ad79a7d9ea5dcbf35b8e924dcaaa752",
        "filename": "doc/release-notes/release-notes-0.9.2.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 207,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.2.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.2.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.1.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,207 +0,0 @@\n-Bitcoin Core version 0.9.2.1 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.2.1/\n-\n-This is a new minor version release, bringing mostly bug fixes and some minor\n-improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n-Upgrading to this release is recommended.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you run\n-0.9.2.1 your blockchain files will be re-indexed, which will take anywhere from \n-30 minutes to several hours, depending on the speed of your machine.\n-\n-Downgrading warnings\n---------------------\n-\n-The 'chainstate' for this release is not always compatible with previous\n-releases, so if you run 0.9.x and then decide to switch back to a\n-0.8.x release you might get a blockchain validation error when starting the\n-old release (due to 'pruned outputs' being omitted from the index of\n-unspent transaction outputs).\n-\n-Running the old release with the -reindex option will rebuild the chainstate\n-data structures and correct the problem.\n-\n-Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n-the blockchain for missing spent coins, which will take a long time (tens\n-of minutes on a typical machine).\n-\n-Important changes\n-==================\n-\n-Gitian OSX build\n------------------\n-\n-The deterministic build system that was already used for Windows and Linux\n-builds is now used for OSX as well. Although the resulting executables have\n-been tested quite a bit, there could be possible regressions. Be sure to report\n-these on the Github bug tracker mentioned above.\n-\n-Compatibility of Linux build\n------------------------------\n-\n-For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.\n-This brings back compatibility with\n-\n-- Debian 6+ / Tails\n-- Ubuntu 10.04\n-- CentOS 6.5\n-\n-0.9.2 - 0.9.2.1 Release notes\n-=======================\n-\n-The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.\n-\n-RPC:\n-\n-- Add `getwalletinfo`, `getblockchaininfo` and `getnetworkinfo` calls (will replace hodge-podge `getinfo` at some point)\n-- Add a `relayfee` field to `getnetworkinfo`\n-- Fix RPC related shutdown hangs and leaks\n-- Always show syncnode in `getpeerinfo`\n-- `sendrawtransaction`: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool\n-- `getmininginfo` show right genproclimit\n-\n-Command-line options:\n-\n-- Fix `-printblocktree` output\n-- Show error message if ReadConfigFile fails\n-\n-Block-chain handling and storage:\n-\n-- Fix for GetBlockValue() after block 13,440,000 (BIP42)\n-- Upgrade leveldb to 1.17\n-\n-Protocol and network code:\n-\n-- Per-peer block download tracking and stalled download detection\n-- Add new DNS seed from bitnodes.io\n-- Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks\n-- Use pnode->nLastRecv as sync score (was the wrong way around)\n-\n-Wallet:\n-\n-- Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n-- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n-- Fix importwallet nTimeFirstKey (trigger necessary rescans)\n-- Log BerkeleyDB version at startup\n-- CWallet init fix\n-\n-Build system:\n-\n-- Add OSX build descriptors to gitian\n-- Fix explicit --disable-qt-dbus\n-- Don't require db_cxx.h when compiling with wallet disabled and GUI enabled\n-- Improve missing boost error reporting\n-- Upgrade miniupnpc version to 1.9\n-- gitian-linux: --enable-glibc-back-compat for binary compatibility with old distributions\n-- gitian: don't export any symbols from executable\n-- gitian: build against Qt 4.6\n-- devtools: add script to check symbols from Linux gitian executables\n-- Remove build-time no-IPv6 setting\n-\n-GUI:\n-\n-- Fix various coin control visual issues\n-- Show number of in/out connections in debug console\n-- Show weeks as well as years behind for long timespans behind\n-- Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.\n-- Show also value for options overridden on command line in options dialog\n-- Fill in label from address book also for URIs\n-- Fixes feel when resizing the last column on tables (issue #2862)\n-- Fix ESC in disablewallet mode\n-- Add expert section to wallet tab in optionsdialog\n-- Do proper boost::path conversion (fixes unicode in datadir)\n-- Only override -datadir if different from the default (fixes -datadir in config file)\n-- Show rescan progress at start-up\n-- Show importwallet progress\n-- Get required locks upfront in polling functions (avoids hanging on locks)\n-- Catch Windows shutdown events while client is running\n-- Optionally add third party links to transaction context menu\n-- Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n-\n-Miscellaneous:\n-\n-- Replace non-threadsafe C functions (gmtime, strerror and setlocale)\n-- Add missing cs_main and wallet locks\n-- Avoid exception at startup when system locale not recognized\n-- Changed bitrpc.py's raw_input to getpass for passwords to conceal characters during command line input\n-- devtools: add a script to fetch and postprocess translations\n-\n-Credits\n---------\n-\n-Thanks to everyone who contributed to this release:\n-\n-- Addy Yeow\n-- Altoidnerd\n-- Andrea D'Amore\n-- Andreas Schildbach\n-- Bardi Harborow\n-- Brandon Dahler\n-- Bryan Bishop\n-- Chris Beams\n-- Christian von Roques\n-- Cory Fields\n-- Cozz Lovan\n-- daniel\n-- Daniel Newton\n-- David A. Harding\n-- ditto-b\n-- duanemoody\n-- Eric S. Bullington\n-- Fabian Raetz\n-- Gavin Andresen\n-- Gregory Maxwell\n-- gubatron\n-- Haakon Nilsen\n-- harry\n-- Hector Jusforgues\n-- Isidoro Ghezzi\n-- Jeff Garzik\n-- Johnathan Corgan\n-- jtimon\n-- Kamil Domanski\n-- langerhans\n-- Luke Dashjr\n-- Manuel Araoz\n-- Mark Friedenbach\n-- Matt Corallo\n-- Matthew Bogosian\n-- Meeh\n-- Michael Ford\n-- Michagogo\n-- Mikael Wikman\n-- Mike Hearn\n-- olalonde\n-- paveljanik\n-- peryaudo\n-- Philip Kaufmann\n-- philsong\n-- Pieter Wuille\n-- R E Broadley\n-- richierichrawr\n-- Rune K. Svendsen\n-- rxl\n-- shshshsh\n-- Simon de la Rouviere\n-- Stuart Cardall\n-- super3\n-- Telepatheic\n-- Thomas Zander\n-- Torstein Huseb\u00f8\n-- Warren Togami\n-- Wladimir J. van der Laan\n-- Yoichi Hirai"
      },
      {
        "sha": "a2749e549f7663f674d496da600c0bf282a851d2",
        "filename": "doc/release-notes/release-notes-0.9.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 207,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,207 +0,0 @@\n-Bitcoin Core version 0.9.2 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.2/\n-\n-This is a new minor version release, bringing mostly bug fixes and some minor\n-improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n-Upgrading to this release is recommended.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you run\n-0.9.2 your blockchain files will be re-indexed, which will take anywhere from \n-30 minutes to several hours, depending on the speed of your machine.\n-\n-Downgrading warnings\n---------------------\n-\n-The 'chainstate' for this release is not always compatible with previous\n-releases, so if you run 0.9.x and then decide to switch back to a\n-0.8.x release you might get a blockchain validation error when starting the\n-old release (due to 'pruned outputs' being omitted from the index of\n-unspent transaction outputs).\n-\n-Running the old release with the -reindex option will rebuild the chainstate\n-data structures and correct the problem.\n-\n-Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n-the blockchain for missing spent coins, which will take a long time (tens\n-of minutes on a typical machine).\n-\n-Important changes\n-==================\n-\n-Gitian OSX build\n------------------\n-\n-The deterministic build system that was already used for Windows and Linux\n-builds is now used for OSX as well. Although the resulting executables have\n-been tested quite a bit, there could be possible regressions. Be sure to report\n-these on the Github bug tracker mentioned above.\n-\n-Compatibility of Linux build\n------------------------------\n-\n-For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.\n-This brings back compatibility with\n-\n-- Debian 6+ / Tails\n-- Ubuntu 10.04\n-- CentOS 6.5\n-\n-0.9.2 Release notes\n-=======================\n-\n-The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.\n-\n-RPC:\n-\n-- Add `getwalletinfo`, `getblockchaininfo` and `getnetworkinfo` calls (will replace hodge-podge `getinfo` at some point)\n-- Add a `relayfee` field to `getnetworkinfo`\n-- Fix RPC related shutdown hangs and leaks\n-- Always show syncnode in `getpeerinfo`\n-- `sendrawtransaction`: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool\n-- `getmininginfo` show right genproclimit\n-\n-Command-line options:\n-\n-- Fix `-printblocktree` output\n-- Show error message if ReadConfigFile fails\n-\n-Block-chain handling and storage:\n-\n-- Fix for GetBlockValue() after block 13,440,000 (BIP42)\n-- Upgrade leveldb to 1.17\n-\n-Protocol and network code:\n-\n-- Per-peer block download tracking and stalled download detection\n-- Add new DNS seed from bitnodes.io\n-- Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks\n-- Use pnode->nLastRecv as sync score (was the wrong way around)\n-\n-Wallet:\n-\n-- Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n-- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n-- Fix importwallet nTimeFirstKey (trigger necessary rescans)\n-- Log BerkeleyDB version at startup\n-- CWallet init fix\n-\n-Build system:\n-\n-- Add OSX build descriptors to gitian\n-- Fix explicit --disable-qt-dbus\n-- Don't require db_cxx.h when compiling with wallet disabled and GUI enabled\n-- Improve missing boost error reporting\n-- Upgrade miniupnpc version to 1.9\n-- gitian-linux: --enable-glibc-back-compat for binary compatibility with old distributions\n-- gitian: don't export any symbols from executable\n-- gitian: build against Qt 4.6\n-- devtools: add script to check symbols from Linux gitian executables\n-- Remove build-time no-IPv6 setting\n-\n-GUI:\n-\n-- Fix various coin control visual issues\n-- Show number of in/out connections in debug console\n-- Show weeks as well as years behind for long timespans behind\n-- Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.\n-- Show also value for options overridden on command line in options dialog\n-- Fill in label from address book also for URIs\n-- Fixes feel when resizing the last column on tables (issue #2862)\n-- Fix ESC in disablewallet mode\n-- Add expert section to wallet tab in optionsdialog\n-- Do proper boost::path conversion (fixes unicode in datadir)\n-- Only override -datadir if different from the default (fixes -datadir in config file)\n-- Show rescan progress at start-up\n-- Show importwallet progress\n-- Get required locks upfront in polling functions (avoids hanging on locks)\n-- Catch Windows shutdown events while client is running\n-- Optionally add third party links to transaction context menu\n-- Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n-\n-Miscellaneous:\n-\n-- Replace non-threadsafe C functions (gmtime, strerror and setlocale)\n-- Add missing cs_main and wallet locks\n-- Avoid exception at startup when system locale not recognized\n-- Changed bitrpc.py's raw_input to getpass for passwords to conceal characters during command line input\n-- devtools: add a script to fetch and postprocess translations\n-\n-Credits\n---------\n-\n-Thanks to everyone who contributed to this release:\n-\n-- Addy Yeow\n-- Altoidnerd\n-- Andrea D'Amore\n-- Andreas Schildbach\n-- Bardi Harborow\n-- Brandon Dahler\n-- Bryan Bishop\n-- Chris Beams\n-- Christian von Roques\n-- Cory Fields\n-- Cozz Lovan\n-- daniel\n-- Daniel Newton\n-- David A. Harding\n-- ditto-b\n-- duanemoody\n-- Eric S. Bullington\n-- Fabian Raetz\n-- Gavin Andresen\n-- Gregory Maxwell\n-- gubatron\n-- Haakon Nilsen\n-- harry\n-- Hector Jusforgues\n-- Isidoro Ghezzi\n-- Jeff Garzik\n-- Johnathan Corgan\n-- jtimon\n-- Kamil Domanski\n-- langerhans\n-- Luke Dashjr\n-- Manuel Araoz\n-- Mark Friedenbach\n-- Matt Corallo\n-- Matthew Bogosian\n-- Meeh\n-- Michael Ford\n-- Michagogo\n-- Mikael Wikman\n-- Mike Hearn\n-- olalonde\n-- paveljanik\n-- peryaudo\n-- Philip Kaufmann\n-- philsong\n-- Pieter Wuille\n-- R E Broadley\n-- richierichrawr\n-- Rune K. Svendsen\n-- rxl\n-- shshshsh\n-- Simon de la Rouviere\n-- Stuart Cardall\n-- super3\n-- Telepatheic\n-- Thomas Zander\n-- Torstein Huseb\u00f8\n-- Warren Togami\n-- Wladimir J. van der Laan\n-- Yoichi Hirai"
      },
      {
        "sha": "0765a360b29dab1fbfbcf30f4f8ebcf6979f42bd",
        "filename": "doc/release-notes/release-notes-0.9.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 101,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.3.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,101 +0,0 @@\n-Bitcoin Core version 0.9.3 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.3/\n-\n-This is a new minor version release, bringing only bug fixes and updated\n-translations. Upgrading to this release is recommended.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-Upgrading and downgrading\n-==========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you run\n-0.9.3 your blockchain files will be re-indexed, which will take anywhere from \n-30 minutes to several hours, depending on the speed of your machine.\n-\n-Downgrading warnings\n---------------------\n-\n-The 'chainstate' for this release is not always compatible with previous\n-releases, so if you run 0.9.x and then decide to switch back to a\n-0.8.x release you might get a blockchain validation error when starting the\n-old release (due to 'pruned outputs' being omitted from the index of\n-unspent transaction outputs).\n-\n-Running the old release with the -reindex option will rebuild the chainstate\n-data structures and correct the problem.\n-\n-Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n-the blockchain for missing spent coins, which will take a long time (tens\n-of minutes on a typical machine).\n-\n-0.9.3 Release notes\n-=======================\n-\n-RPC:\n-- Avoid a segfault on getblock if it can't read a block from disk\n-- Add paranoid return value checks in base58\n-\n-Protocol and network code:\n-- Don't poll showmyip.com, it doesn't exist anymore\n-- Add a way to limit deserialized string lengths and use it\n-- Add a new checkpoint at block 295,000\n-- Increase IsStandard() scriptSig length\n-- Avoid querying DNS seeds, if we have open connections\n-- Remove a useless millisleep in socket handler\n-- Stricter memory limits on CNode\n-- Better orphan transaction handling\n-- Add `-maxorphantx=<n>` and `-maxorphanblocks=<n>` options for control over the maximum orphan transactions and blocks\n-\n-Wallet:\n-- Check redeemScript size does not exceed 520 byte limit\n-- Ignore (and warn about) too-long redeemScripts while loading wallet\n-\n-GUI:\n-- fix 'opens in testnet mode when presented with a BIP-72 link with no fallback'\n-- AvailableCoins: acquire cs_main mutex\n-- Fix unicode character display on MacOSX\n-\n-Miscellaneous:\n-- key.cpp: fail with a friendlier message on missing ssl EC support\n-- Remove bignum dependency for scripts\n-- Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Bitcoin Core)\n-- Upgrade miniupnpc to 1.9.20140701\n-- Fix boost detection in build system on some platforms\n-\n-Credits\n---------\n-\n-Thanks to everyone who contributed to this release:\n-\n-- Andrew Poelstra\n-- Cory Fields\n-- Gavin Andresen\n-- Jeff Garzik\n-- Johnathan Corgan\n-- Julian Haight\n-- Michael Ford\n-- Pavel Vasin\n-- Peter Todd\n-- phantomcircuit\n-- Pieter Wuille\n-- Rose Toomey\n-- Ruben Dario Ponticelli\n-- shshshsh\n-- Trevin Hofmann\n-- Warren Togami\n-- Wladimir J. van der Laan\n-- Zak Wilcox\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "7ee73246a9b043d643226551b29143857e44bac9",
        "filename": "doc/release-notes/release-notes-0.9.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 95,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.4.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,95 +0,0 @@\n-Bitcoin Core version 0.9.4 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.4/\n-\n-This is a new minor version release, bringing only bug fixes and updated\n-translations. Upgrading to this release is recommended.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n-===============\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-OpenSSL Warning\n-================\n-\n-OpenSSL 1.0.0p / 1.0.1k was recently released and is being pushed out by\n-various operating system maintainers. Review by Gregory Maxwell determined that\n-this update is incompatible with the Bitcoin system and could lead to consensus\n-forks.\n-\n-Bitcoin Core released binaries from https://bitcoin.org are unaffected,\n-as are any built with the gitian deterministic build system.\n-\n-However, if you are running either\n-\n-- The Ubuntu PPA from https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin\n-- A third-party or self-compiled Bitcoin Core\n-\n-upgrade to Bitcoin Core 0.9.4, which includes a workaround, **before** updating\n-OpenSSL.\n-\n-The incompatibility is due to the OpenSSL update changing the\n-behavior of ECDSA validation to reject any signature which is\n-not encoded in a very rigid manner. This was a result of\n-OpenSSL's change for CVE-2014-8275 \"Certificate fingerprints\n-can be modified\".\n-\n-We are specifically aware of potential hard-forks due to signature\n-encoding handling and had been hoping to close them via BIP62 in 0.10.\n-BIP62's purpose is to improve transaction malleability handling and\n-as a side effect rigidly defines the encoding for signatures, but the\n-overall scope of BIP62 has made it take longer than we'd like to\n-deploy.\n-\n-0.9.4 changelog\n-================\n-\n-Validation:\n-- `b8e81b7` consensus: guard against openssl's new strict DER checks\n-- `60c51f1` fail immediately on an empty signature\n-- `037bfef` Improve robustness of DER recoding code\n-\n-Command-line options:\n-- `cd5164a` Make -proxy set all network types, avoiding a connect leak.\n-\n-P2P:\n-- `bb424e4` Limit the number of new addressses to accumulate\n-\n-RPC:\n-- `0a94661` Disable SSLv3 (in favor of TLS) for the RPC client and server.\n-\n-Build system:\n-- `f047dfa` gitian: openssl-1.0.1i.tar.gz -> openssl-1.0.1k.tar.gz\n-- `5b9f78d` build: Fix OSX build when using Homebrew and qt5\n-- `ffab1dd` Keep symlinks when copying into .app bundle\n-- `613247f` osx: fix signing to make Gatekeeper happy (again)\n-\n-Miscellaneous:\n-- `25b49b5` Refactor -alertnotify code\n-- `2743529` doc: Add instructions for consistent Mac OS X build names\n-\n-Credits\n---------\n-\n-Thanks to who contributed to this release, at least:\n-\n-- Cory Fields\n-- Gavin Andresen\n-- Gregory Maxwell\n-- Jeff Garzik\n-- Luke Dashjr\n-- Matt Corallo\n-- Pieter Wuille\n-- Saivann\n-- Sergio Demian Lerner\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "bed0af9879bf44e651b8726426d0209c4c75ef96",
        "filename": "doc/release-notes/release-notes-0.9.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 60,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/doc/release-notes/release-notes-0.9.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.5.md?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,60 +0,0 @@\n-Bitcoin Core version 0.9.5 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.5/\n-\n-This is a new minor version release, with the goal of backporting BIP66. There\n-are also a few bug fixes and updated translations. Upgrading to this release is\n-recommended.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n-===============\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Notable changes\n-================\n-\n-Mining and relay policy enhancements\n-------------------------------------\n-\n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n-software relying on its `getblocktemplate` must be updated in parallel to use\n-libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n-Core, which must be done prior to BIP66 achieving its 951/1001 status.\n-If you are mining with the stratum mining protocol: this does not affect you.\n-If you are mining with the getblocktemplate protocol to a pool: this will affect\n-you at the pool operator's discretion, which must be no later than BIP66\n-achieving its 951/1001 status.\n-\n-0.9.5 changelog\n-================\n-\n-- `74f29c2` Check pindexBestForkBase for null\n-- `9cd1dd9` Fix priority calculation in CreateTransaction\n-- `6b4163b` Sanitize command strings before logging them.\n-- `3230b32` Raise version of created blocks, and enforce DERSIG in mempool\n-- `989d499` Backport of some of BIP66's tests\n-- `ab03660` Implement BIP 66 validation rules and switchover logic\n-- `8438074` build: fix dynamic boost check when --with-boost= is used\n-\n-Credits\n---------\n-\n-Thanks to who contributed to this release, at least:\n-\n-- 21E14\n-- Alex Morcos\n-- Cory Fields\n-- Gregory Maxwell\n-- Pieter Wuille\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      }
    ]
  },
  {
    "sha": "913278c1768d61e8fbe753943e2272955f13dbe4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTMyNzhjMTc2OGQ2MWU4ZmJlNzUzOTQzZTIyNzI5NTVmMTNkYmU0",
    "commit": {
      "author": {
        "name": "blockcash",
        "email": "blockcashcoin@gmail.com",
        "date": "2017-12-25T14:24:19Z"
      },
      "committer": {
        "name": "blockcash",
        "email": "blockcashcoin@gmail.com",
        "date": "2017-12-25T14:24:19Z"
      },
      "message": "Blockcash: Branding",
      "tree": {
        "sha": "3b9887da4d0a3a89142adcb514b4e22507d13bf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b9887da4d0a3a89142adcb514b4e22507d13bf5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/913278c1768d61e8fbe753943e2272955f13dbe4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/913278c1768d61e8fbe753943e2272955f13dbe4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/913278c1768d61e8fbe753943e2272955f13dbe4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/913278c1768d61e8fbe753943e2272955f13dbe4/comments",
    "author": {
      "login": "blockcash",
      "id": 34801682,
      "node_id": "MDQ6VXNlcjM0ODAxNjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34801682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blockcash",
      "html_url": "https://github.com/blockcash",
      "followers_url": "https://api.github.com/users/blockcash/followers",
      "following_url": "https://api.github.com/users/blockcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/blockcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blockcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blockcash/subscriptions",
      "organizations_url": "https://api.github.com/users/blockcash/orgs",
      "repos_url": "https://api.github.com/users/blockcash/repos",
      "events_url": "https://api.github.com/users/blockcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blockcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "blockcash",
      "id": 34801682,
      "node_id": "MDQ6VXNlcjM0ODAxNjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34801682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blockcash",
      "html_url": "https://github.com/blockcash",
      "followers_url": "https://api.github.com/users/blockcash/followers",
      "following_url": "https://api.github.com/users/blockcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/blockcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blockcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blockcash/subscriptions",
      "organizations_url": "https://api.github.com/users/blockcash/orgs",
      "repos_url": "https://api.github.com/users/blockcash/repos",
      "events_url": "https://api.github.com/users/blockcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blockcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5180a86c96bc05d2a731f70f36aae28ab5a3fad4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5180a86c96bc05d2a731f70f36aae28ab5a3fad4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5180a86c96bc05d2a731f70f36aae28ab5a3fad4"
      }
    ],
    "stats": {
      "total": 44120,
      "additions": 27427,
      "deletions": 16693
    },
    "files": [
      {
        "sha": "89776efb0f68b12448afa76bc504dff440571075",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "modified",
        "additions": 27,
        "deletions": 12,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,21 +1,36 @@\n-<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+<!--- Remove sections that do not apply -->\n \n-General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+This issue tracker is only for technical issues related to blockcash.\n \n-For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n \n-If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n+For reporting security issues, please contact the Blockcash developers on the #blockcash-dev Freenode IRC channel or alternatively you can email us at contact@blockcash.org.\n \n-<!-- Describe the issue -->\n-<!--- What behavior did you expect? -->\n+### Describe the issue\n \n-<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+### Can you reliably reproduce the issue?\n+#### If so, please list the steps to reproduce below:\n+1.\n+2.\n+3.\n \n-<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+### Expected behaviour\n+Tell us what should happen\n \n-<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+### Actual behaviour\n+Tell us what happens instead\n \n-<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+### Screenshots.\n+If the issue is related to the GUI, screenshots can be added to this issue via drag & drop.\n \n-<!-- Any extra information that might be useful in the debugging process. -->\n-<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->\n+### What version of blockcash are you using?\n+List the version number/commit ID, and if it is an official binary, self compiled or a distribution package such as PPA.\n+\n+### Machine specs:\n+- OS:\n+- CPU:\n+- RAM:\n+- Disk size:\n+- Disk Type (HD/SDD):\n+\n+### Any extra information that might be useful in the debugging process.\n+This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred."
      },
      {
        "sha": "23517263d4c3e0aa825d2bf00e1a85f8f8c2b893",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 11,
        "deletions": 12,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,13 +1,13 @@\n *.tar.gz\n \n *.exe\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/test/test_bitcoin_fuzzy\n-src/qt/test/test_bitcoin-qt\n+src/blockcash\n+src/blockcashd\n+src/blockcash-cli\n+src/blockcash-tx\n+src/test/test_blockcash\n+src/test/test_blockcash_fuzzy\n+src/qt/test/test_blockcash-qt\n \n # autoreconf\n Makefile.in\n@@ -74,13 +74,12 @@ src/qt/test/moc*.cpp\n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n-bitcoin-qt\n-Bitcoin-Qt.app\n-background.tiff*\n+blockcash-qt\n+Blockcash-Qt.app\n \n # Unit-tests\n Makefile.test\n-bitcoin-qt_test\n+blockcash-qt_test\n \n # Resources cpp\n qrc_*.cpp\n@@ -93,7 +92,7 @@ build\n *.gcno\n *.gcda\n /*.info\n-test_bitcoin.coverage/\n+test_blockcash.coverage/\n total.coverage/\n coverage_percent.txt\n "
      },
      {
        "sha": "1cb6cf88194248d8b596e5384c14a1af6c135142",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 21,
        "deletions": 28,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,7 +1,7 @@\n sudo: required\n dist: trusty\n os: linux\n-language: minimal\n+language: generic\n cache:\n   directories:\n   - depends/built\n@@ -18,68 +18,61 @@ env:\n     - CCACHE_COMPRESS=1\n     - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n     - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n+    - PYTHON_DEBUG=1\n     - WINEDEBUG=fixme-all\n+    - LITECOIN_SCRYPT=0\n   matrix:\n # ARM\n-    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf python3-pip\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=0 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# Qt4 & system libs\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qt4-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb\" NO_DEPENDS=1 NEED_XVFB=1 RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER\"\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 python3-dev python3-pip nsis g++-mingw-w64-i686 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\" LITECOIN_SCRYPT=1\n # 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq python3-dev python3-pip\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\" LITECOIN_SCRYPT=1\n # Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 python3-dev python3-pip nsis g++-mingw-w64-x86-64 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports --enable-sse2\" LITECOIN_SCRYPT=1\n # x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq python3-dev python3-pip qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-sse2 CPPFLAGS=-DDEBUG_LOCKORDER\" LITECOIN_SCRYPT=1\n # x86_64 Linux, No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3 python3-dev python3-pip\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports --enable-sse2\" LITECOIN_SCRYPT=1\n # Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\" OSX_SDK=10.11 GOAL=\"deploy\"\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-sse2\" OSX_SDK=10.11 GOAL=\"deploy\"\n \n before_install:\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/pyenv/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n install:\n     - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then travis_retry pip3 install flake8 --user; fi\n+    - if [ \"$LITECOIN_SCRYPT\" = 1 ]; then travis_retry sudo pip3 install litecoin_scrypt; fi\n before_script:\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/crypto/ctaes; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/secp256k1; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/univalue; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/git-subtree-check.sh src/leveldb; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-rpc-mappings.py .; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/lint-all.sh; fi\n+    - if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n     - unset CC; unset CXX\n+    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n     - mkdir -p depends/SDKs depends/sdk-sources\n     - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -z \"$NO_DEPENDS\" ]; then make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n-    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n-    - if [ \"$NEED_XVFB\" = 1 ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n+    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n script:\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"Blockcash/Blockcash\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"Blockcash/Blockcash\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"Blockcash/Blockcash\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n     - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n     - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - if [ -z \"$NO_DEPENDS\" ]; then depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE; fi\n+    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n     - mkdir build && cd build\n     - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make distdir VERSION=$HOST\n-    - cd bitcoin-$HOST\n+    - cd Blockcash-$HOST\n     - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi\n     - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude pruning,dbcrash\"; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet ${extended}; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then test/functional/test_runner.py --coverage --quiet ${extended}; fi\n after_script:\n     - echo $TRAVIS_COMMIT_RANGE\n     - echo $TRAVIS_COMMIT_LOG"
      },
      {
        "sha": "fe7464403a796a50ad8f63b463b1620196d69195",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 17,
        "deletions": 27,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,7 +1,7 @@\n-Contributing to Bitcoin Core\n+Contributing to Blockcash Core\n ============================\n \n-The Bitcoin Core project operates an open contributor model where anyone is\n+The Blockcash Core project operates an open contributor model where anyone is\n welcome to contribute towards development in the form of peer review, testing\n and patches. This document explains the practical process and guidelines for\n contributing.\n@@ -24,9 +24,9 @@ facilitates social contribution, easy testing and peer review.\n \n To contribute a patch, the workflow is as follows:\n \n-  1. Fork repository\n-  1. Create topic branch\n-  1. Commit patches\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches\n \n The project coding conventions in the [developer notes](doc/developer-notes.md)\n must be adhered to.\n@@ -42,8 +42,8 @@ in init.cpp\") in which case a single title line is sufficient. Commit messages s\n helpful to people reading your code in the future, so explain the reasoning for\n your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n \n-If a particular commit references another issue, please add the reference. For\n-example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n+If a particular commit references another issue, please add the reference, for\n+example `refs #1234`, or `fixes #4321`. Using the `fixes` or `closes` keywords\n will cause the corresponding issue to be closed when the pull request is merged.\n \n Please refer to the [Git manual](https://git-scm.com/doc) for more information\n@@ -81,11 +81,7 @@ Examples:\n     Qt: Add feed bump button\n     Trivial: Fix typo in init.cpp\n \n-Note that translations should not be submitted as pull requests, please see\n-[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md) \n-for more information on helping with translations.\n-\n-If a pull request is not to be considered for merging (yet), please\n+If a pull request is specifically not to be considered for merging (yet) please\n prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n in the body of the pull request to indicate tasks are pending.\n \n@@ -157,23 +153,14 @@ behaviour of code within the pull request (bugs must be preserved as is).\n Project maintainers aim for a quick turnaround on refactoring pull requests, so\n where possible keep them short, uncomplex and easy to verify.\n \n-Pull requests that refactor the code should not be made by new contributors. It\n-requires a certain level of experience to know where the code belongs to and to\n-understand the full ramification (including rebase effort of open pull requests).\n-\n-Trivial pull requests or pull requests that refactor the code with no clear\n-benefits may be immediately closed by the maintainers to reduce unnecessary\n-workload on reviewing.\n-\n \n \"Decision Making\" Process\n -------------------------\n \n-The following applies to code changes to the Bitcoin Core project (and related\n-projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n+The following applies to code changes to the Blockcash Core project, and is not to be confused with overall Blockcash\n Network Protocol consensus changes.\n \n-Whether a pull request is merged into Bitcoin Core rests with the project merge\n+Whether a pull request is merged into Blockcash Core rests with the project merge\n maintainers and ultimately the project lead.\n \n Maintainers will take into consideration if a patch is in line with the general\n@@ -186,12 +173,12 @@ In general, all pull requests must:\n     the project (for example refactoring for modularisation);\n   - Be well peer reviewed;\n   - Have unit tests and functional tests where appropriate;\n-  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n+  - Follow code style guidelines;\n   - Not break the existing test suite;\n   - Where bugs are fixed, where possible, there should be unit tests\n     demonstrating the bug and also proving the fix. This helps prevent regression.\n \n-Patches that change Bitcoin consensus rules are considerably more involved than\n+Patches that change Blockcash consensus rules are considerably more involved than\n normal because they affect the entire ecosystem and so must be preceded by\n extensive mailing list discussions and have a numbered BIP. While each case will\n be different, one should be prepared to expend more time and effort than for\n@@ -232,7 +219,7 @@ higher in terms of discussion and peer review requirements, keeping in mind that\n mistakes could be very costly to the wider community. This includes refactoring\n of consensus critical code.\n \n-Where a patch set proposes to change the Bitcoin consensus, it must have been\n+Where a patch set proposes to change the Blockcash consensus, it must have been\n discussed extensively on the mailing list and IRC, be accompanied by a widely\n discussed BIP and have a generally widely perceived technical consensus of being\n a worthwhile change based on the judgement of the maintainers.\n@@ -272,10 +259,13 @@ about:\n Release Policy\n --------------\n \n-The project leader is the release manager for each Bitcoin Core release.\n+The project leader is the release manager for each Blockcash Core release.\n \n Copyright\n ---------\n+Copyright 2017 The Blockcash Core Developers\n+\n+- bitcoin: Copyright (c) 2009-2017 Bitcoin Core Developers (MIT License)\n \n By contributing to this repository, you agree to license your work under the \n MIT license unless specified otherwise in `contrib/debian/copyright` or at "
      },
      {
        "sha": "c6203c0f76d2b49f73b273413b464cac6e1c71c5",
        "filename": "COPYING",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,7 +1,6 @@\n The MIT License (MIT)\n \n Copyright (c) 2009-2017 The Bitcoin Core developers\n-Copyright (c) 2009-2017 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "55413ac3b96e98e996fbd8352a34cf249804f993",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 8,
        "deletions": 12,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -9,6 +9,7 @@ SUBDIRS += doc/man\n endif\n .PHONY: deploy FORCE\n \n+GZIP_ENV=\"-9n\"\n export PYTHONPATH\n \n if BUILD_BITCOIN_LIBS\n@@ -24,7 +25,7 @@ BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EX\n empty :=\n space := $(empty) $(empty)\n \n-OSX_APP=Bitcoin-Qt.app\n+OSX_APP=Blockcash-Qt.app\n OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n OSX_DMG = $(OSX_VOLNAME).dmg\n OSX_BACKGROUND_SVG=background.svg\n@@ -42,11 +43,7 @@ DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n \t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n \t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n \t       $(top_srcdir)/contrib/init \\\n-\t       $(top_srcdir)/contrib/install_db4.sh \\\n \t       $(top_srcdir)/contrib/rpm\n-DIST_SHARE = \\\n-  $(top_srcdir)/share/genbuild.sh \\\n-  $(top_srcdir)/share/rpcauth\n \n BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n            $(top_srcdir)/contrib/devtools/security-check.py\n@@ -95,7 +92,7 @@ $(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+$(OSX_APP)/Contents/MacOS/Blockcash-Qt: $(BITCOIN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n@@ -105,7 +102,7 @@ $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n   $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+  $(OSX_APP)/Contents/MacOS/Blockcash-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n osx_volname:\n \techo $(OSX_VOLNAME) >$@\n@@ -130,7 +127,7 @@ $(APP_DIST_DIR)/Applications:\n \t@rm -f $@\n \t@cd $(@D); $(LN_S) /Applications $(@F)\n \n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Blockcash-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n \t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n@@ -145,7 +142,7 @@ $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIF\n $(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n \t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n \n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Blockcash-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n \tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n \n deploydir: $(APP_DIST_EXTRAS)\n@@ -216,7 +213,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(DIST_SHARE) test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n \n EXTRA_DIST += \\\n     test/util/bitcoin-util-test.py \\\n@@ -252,7 +249,6 @@ EXTRA_DIST += \\\n     test/util/data/txcreatemultisig3.json \\\n     test/util/data/txcreatemultisig4.hex \\\n     test/util/data/txcreatemultisig4.json \\\n-    test/util/data/txcreatemultisig5.json \\\n     test/util/data/txcreateoutpubkey1.hex \\\n     test/util/data/txcreateoutpubkey1.json \\\n     test/util/data/txcreateoutpubkey2.hex \\\n@@ -279,4 +275,4 @@ DISTCHECK_CONFIGURE_FLAGS = --enable-man\n \n clean-local:\n \trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n-\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache\n+\trm -rf test/functional/__pycache__"
      },
      {
        "sha": "9c1d09c00a944a5050cc88788a198842e8cd8d6c",
        "filename": "README.md",
        "status": "modified",
        "additions": 15,
        "deletions": 18,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,43 +1,42 @@\n-Bitcoin Core integration/staging tree\n+Blockcash Core integration/staging tree\n =====================================\n \n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n+[![Build Status](https://travis-ci.org/blockcash/blockcash.svg?branch=master)](https://travis-ci.org/blockcash/blockcash)\n \n-https://bitcoincore.org\n+https://blockcash.org\n \n-What is Bitcoin?\n+What is Blockcash?\n ----------------\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+Blockcash is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Blockcash uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n+out collectively by the network. Blockcash Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+the Blockcash Core software, see [https://blockcash.org](https://blockcash.org).\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Blockcash Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n+completely stable. [Tags](https://github.com/blockcash/blockcash/tags) are created\n+regularly to indicate new official, stable release versions of Blockcash Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+The developer [mailing list](https://groups.google.com/forum/#!forum/blockcash-dev)\n should be used to discuss complicated or controversial changes before working\n on a patch set.\n \n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n+Developer IRC can be found on Freenode at #blockcash-dev.\n \n Testing\n -------\n@@ -70,13 +69,11 @@ not straightforward.\n Translations\n ------------\n \n-Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+We only accept translation fixes that are submitted through [Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+Translations are converted to Blockcash periodically.\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works.\n \n **Important**: We do not accept translation changes as GitHub pull requests because the next\n pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "bbf4ae346f87ba4864433fd56f3fb87dd822e124",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 43,
        "deletions": 54,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,22 +2,22 @@ dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 15)\n-define(_CLIENT_VERSION_REVISION, 99)\n-define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_CLIENT_VERSION_REVISION, 0)\n+define(_CLIENT_VERSION_BUILD, 1)\n+define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2017)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Blockcash Core]])\n+AC_INIT([Blockcash Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/blockcash/blockcash/issues],[blockcash],[https://blockcash.org/])\n AC_CONFIG_SRCDIR([src/validation.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n \n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n+BITCOIN_DAEMON_NAME=blockcashd\n+BITCOIN_GUI_NAME=blockcash-qt\n+BITCOIN_CLI_NAME=blockcash-cli\n+BITCOIN_TX_NAME=blockcash-tx\n \n dnl Unless the user specified ARFLAGS, force it to be cr\n AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n@@ -162,7 +162,7 @@ AC_ARG_ENABLE([ccache],\n AC_ARG_ENABLE([lcov],\n   [AS_HELP_STRING([--enable-lcov],\n   [enable lcov testing (default is no)])],\n-  [use_lcov=$enableval],\n+  [use_lcov=yes],\n   [use_lcov=no])\n   \n AC_ARG_ENABLE([lcov-branch-coverage],\n@@ -177,14 +177,14 @@ AC_ARG_ENABLE([glibc-back-compat],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n-AC_ARG_ENABLE([asm],\n-  [AS_HELP_STRING([--enable-asm],\n-  [Enable assembly routines (default is yes)])],\n-  [use_asm=$enableval],\n-  [use_asm=yes])\n+AC_ARG_ENABLE([experimental-asm],\n+  [AS_HELP_STRING([--enable-experimental-asm],\n+  [Enable experimental assembly routines (default is no)])],\n+  [experimental_asm=$enableval],\n+  [experimental_asm=no])\n \n-if test \"x$use_asm\" = xyes; then\n-  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n+if test \"x$experimental_asm\" = xyes; then\n+  AC_DEFINE(EXPERIMENTAL_ASM, 1, [Define this symbol to build in experimental assembly routines])\n fi\n \n AC_ARG_WITH([system-univalue],\n@@ -199,6 +199,12 @@ AC_ARG_ENABLE([zmq],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n \n+AC_ARG_ENABLE([sse2],\n+    [AS_HELP_STRING([--enable-sse2],\n+    [enable SSE2 instructions in the scrypt library. (default is disabled)])],\n+    [use_sse2=$enableval],\n+    [use_sse2=no])\n+\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n AC_ARG_ENABLE(man,\n@@ -241,7 +247,6 @@ if test \"x$enable_werror\" = \"xyes\"; then\n     AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n   fi\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n@@ -250,7 +255,6 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wvla],[CXXFLAGS=\"$CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[CXXFLAGS=\"$CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n \n   ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n   ## unknown options if any other warning is produced. Test the -Wfoo case, and\n@@ -659,28 +663,6 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n-TEMP_LDFLAGS=\"$LDFLAGS\"\n-LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n-AC_MSG_CHECKING([for thread_local support])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  #include <thread>\n-  static thread_local int foo = 0;\n-  static void run_thread() { foo++;}\n-  int main(){\n-  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n-  return foo;\n-  }\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-  ]\n-)\n-LDFLAGS=\"$TEMP_LDFLAGS\"\n-\n # Check for different ways of gathering OS randomness\n AC_MSG_CHECKING(for Linux getrandom syscall)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n@@ -761,9 +743,6 @@ define(MINIMUM_REQUIRED_BOOST, 1.47.0)\n \n dnl Check for boost libs\n AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n-if test x$want_boost = xno; then\n-    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n-fi\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_PROGRAM_OPTIONS\n@@ -854,14 +833,14 @@ TEMP_CPPFLAGS=\"$CPPFLAGS\"\n CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/config.hpp>\n-  #include <boost/version.hpp>\n+  #include \"boost/config.hpp\"\n+  #include \"boost/version.hpp\"\n   #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n   #define BOOST_NO_SCOPED_ENUMS\n   #define BOOST_NO_CXX11_SCOPED_ENUMS\n   #define CHECK\n   #endif\n-  #include <boost/filesystem.hpp>\n+  #include \"boost/filesystem.hpp\"\n   ]],[[\n   #if defined(CHECK)\n     boost::filesystem::copy_file(\"foo\", \"bar\");\n@@ -1057,11 +1036,11 @@ AC_SUBST(UNIVALUE_LIBS)\n \n BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-AC_MSG_CHECKING([whether to build bitcoind])\n+AC_MSG_CHECKING([whether to build blockcashd])\n AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n AC_MSG_RESULT($build_bitcoind)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n+AC_MSG_CHECKING([whether to build utils (blockcash-cli blockcash-tx)])\n AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n AC_MSG_RESULT($build_bitcoin_utils)\n \n@@ -1162,7 +1141,7 @@ if test x$bitcoin_enable_qt != xno; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n   fi\n \n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n+  AC_MSG_CHECKING([whether to build test_blockcash-qt])\n   if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n     AC_MSG_RESULT([yes])\n     BUILD_TEST_QT=\"yes\"\n@@ -1173,7 +1152,7 @@ fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n \n-AC_MSG_CHECKING([whether to build test_bitcoin])\n+AC_MSG_CHECKING([whether to build test_blockcash])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])\n   BUILD_TEST=\"yes\"\n@@ -1182,6 +1161,16 @@ else\n   BUILD_TEST=\"\"\n fi\n \n+AC_MSG_CHECKING([whether to enable sse2 instructions])\n+if test x$use_sse2 != xno; then\n+  AC_MSG_RESULT(yes)\n+  AC_DEFINE([USE_SSE2],[1],[Define if SSE2 support should be compiled in])\n+  use_sse2=yes\n+  CPPFLAGS=\"$CPPFLAGS -DUSE_SSE2=1\"\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+\n AC_MSG_CHECKING([whether to reduce exports])\n if test x$use_reduce_exports = xyes; then\n   AC_MSG_RESULT([yes])\n@@ -1202,11 +1191,12 @@ AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n+AM_CONDITIONAL([USE_SSE2], [test x$use_sse2 = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n-AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n+AM_CONDITIONAL([EXPERIMENTAL_ASM],[test x$experimental_asm = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1243,6 +1233,7 @@ AC_SUBST(SSE42_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n+AC_SUBST(USE_SSE2)\n AC_SUBST(BOOST_LIBS)\n AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n@@ -1258,7 +1249,6 @@ AC_SUBST(QR_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AC_CONFIG_FILES([doc/Doxyfile])\n-AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n \n@@ -1325,7 +1315,6 @@ echo \"  with zmq      = $use_zmq\"\n echo \"  with test     = $use_tests\"\n echo \"  with bench    = $use_bench\"\n echo \"  with upnp     = $use_upnp\"\n-echo \"  use asm       = $use_asm\"\n echo \"  debug enabled = $enable_debug\"\n echo \"  werror        = $enable_werror\"\n echo "
      },
      {
        "sha": "75b1b83be4763381d53d098f151ce2feee5db114",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -13,7 +13,7 @@ Construct a linear, no-fork, best version of the blockchain.\n \n ### [Qos](/contrib/qos) ###\n \n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Blockcash network. This means one can have an always-on blockcashd instance running, and another local blockcashd/blockcash-qt instance which connects to this node and receives blocks from it.\n \n ### [Seeds](/contrib/seeds) ###\n Utility to generate the pnSeed[] array that is compiled into the client.\n@@ -22,20 +22,20 @@ Build Tools and Keys\n ---------------------\n \n ### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+Contains files used to package blockcashd/blockcash-qt\n+for Debian-based Linux systems. If you compile blockcashd/blockcash-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n+Notes on getting Gitian builds up and running using KVM.\n \n ### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n+PGP keys used for signing Blockcash Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n ### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions.\n+RPM spec file for building blockcash-core on RPM based distributions\n \n ### [Gitian-build](/contrib/gitian-build.sh) ###\n Script for running full Gitian builds.\n@@ -44,7 +44,7 @@ Test and Verify Tools\n ---------------------\n \n ### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Blockcash tests.\n \n ### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org.\n+This script attempts to download and verify the signature file SHA256SUMS.asc from blockcash.org."
      },
      {
        "sha": "af87e97d80690c969db4de7a5b4cb9ea8b330cb8",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -30,7 +30,7 @@ _bitcoind() {\n             ;;\n         *)\n \n-            # only parse -help if sensible\n+            # only parse -help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n                 local helpopts\n                 helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )"
      },
      {
        "sha": "593d7584ab06d3147dfa56c708d250041472fd32",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,5 +1,5 @@\n [Desktop Entry]\n-Version=1.0\n+Encoding=UTF-8\n Name=Bitcoin Core\n Comment=Connect to the Bitcoin P2P Network\n Comment[de]=Verbinde mit dem Bitcoin peer-to-peer Netzwerk\n@@ -11,4 +11,3 @@ Type=Application\n Icon=bitcoin128\n MimeType=x-scheme-handler/bitcoin;\n Categories=Office;Finance;\n-StartupWMClass=Bitcoin-qt"
      },
      {
        "sha": "72d64ce62d2a7e588b495adeec2cdc497c0ead3a",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -15,14 +15,6 @@ Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n License: GPL-2+\n \n-Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n-Copyright: 2008 Don Anderson <dda@sleepycat.com>\n-License: GNU-All-permissive-License\n-\n-Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n-Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n-License: GNU-All-permissive-License\n-\n Files: src/qt/res/icons/add.png\n        src/qt/res/icons/address-book.png\n        src/qt/res/icons/chevron.png\n@@ -114,12 +106,6 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n-License: GNU-All-permissive-License\n- Copying and distribution of this file, with or without modification, are\n- permitted in any medium without royalty provided the copyright notice\n- and this notice are preserved. This file is offered as-is, without any\n- warranty.\n-\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the"
      },
      {
        "sha": "77795afa3b7ae10f1577d8725562230eaefa90ac",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -44,11 +44,11 @@\n \n # Use as many addnode= settings as you like to connect to specific peers\n #addnode=69.164.218.197\n-#addnode=10.0.0.2:8333\n+#addnode=10.0.0.2:29251\n \n # Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n #connect=69.164.218.197\n-#connect=10.0.0.1:8333\n+#connect=10.0.0.1:29251\n \n # Listening mode, enabled by default except when 'connect' is being used\n #listen=1\n@@ -76,10 +76,10 @@\n #rpcuser=Ulysseys\n #rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n #\n-# The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n-# using the output from the script in share/rpcauth/rpcauth.py after providing a username:\n+# The second method `rpcauth` can be added to server startup argument. It is set at intialization time\n+# using the output from the script in share/rpcuser/rpcuser.py after providing a username:\n #\n-# ./share/rpcauth/rpcauth.py alice\n+# ./share/rpcuser/rpcuser.py alice\n # String to be appended to bitcoin.conf:\n # rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n # Your password:\n@@ -110,7 +110,7 @@\n #rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n-#rpcport=8332\n+#rpcport=29252\n \n # You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n # running on another host using this option:"
      },
      {
        "sha": "3b7a8f9a61e62b53eb239b9969af7ade1740a8e4",
        "filename": "contrib/devtools/check-doc.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -12,7 +12,6 @@\n \n from subprocess import check_output\n import re\n-import sys\n \n FOLDER_GREP = 'src'\n FOLDER_TEST = 'src/test/'\n@@ -22,7 +21,7 @@\n REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n # list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio', '-forcecompactdb', '-usehd'])\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio', '-forcecompactdb'])\n \n def main():\n   used = check_output(CMD_GREP_ARGS, shell=True)\n@@ -40,7 +39,7 @@ def main():\n   print \"Args unknown     : %s\" % len(args_unknown)\n   print args_unknown\n \n-  sys.exit(len(args_need_doc))\n+  exit(len(args_need_doc))\n \n if __name__ == \"__main__\":\n     main()"
      },
      {
        "sha": "933a1dd39865eb6f9f0863e3c8d75ef8478aed66",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,18 +1,18 @@\n-#!/bin/bash\n+#!/bin/sh\n \n TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n SRCDIR=${SRCDIR:-$TOPDIR/src}\n MANDIR=${MANDIR:-$TOPDIR/doc/man}\n \n-BITCOIND=${BITCOIND:-$SRCDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$SRCDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$SRCDIR/bitcoin-tx}\n-BITCOINQT=${BITCOINQT:-$SRCDIR/qt/bitcoin-qt}\n+BITCOIND=${BITCOIND:-$SRCDIR/blockcashd}\n+BITCOINCLI=${BITCOINCLI:-$SRCDIR/blockcash-cli}\n+BITCOINTX=${BITCOINTX:-$SRCDIR/blockcash-tx}\n+BITCOINQT=${BITCOINQT:-$SRCDIR/qt/blockcash-qt}\n \n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+[ ! -x $BITCOIND ] && echo \"$BLOCKCASHD not found or not executable.\" && exit 1\n \n # The autodetected version git tag can screw up manpage output a little bit\n-BTCVER=($($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n+BTCVER=($($BLOCKCASHCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n \n # Create a footer file with copyright content.\n # This gets autodetected fine for bitcoind if --version-string is not set,"
      },
      {
        "sha": "2384d66cad2aa71778b27737629245ab839722da",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "modified",
        "additions": 10,
        "deletions": 27,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -18,7 +18,7 @@ find_latest_squash()\n \tsub=\n \tgit log --grep=\"^git-subtree-dir: $dir/*\\$\" \\\n \t\t--pretty=format:'START %H%n%s%n%n%b%nEND%n' \"$COMMIT\" |\n-\twhile read a b _; do\n+\twhile read a b junk; do\n \t\tcase \"$a\" in\n \t\t\tSTART) sq=\"$b\" ;;\n \t\t\tgit-subtree-mainline:) main=\"$b\" ;;\n@@ -41,17 +41,21 @@ find_latest_squash()\n \tdone\n }\n \n-# find latest subtree update\n latest_squash=\"$(find_latest_squash \"$DIR\")\"\n if [ -z \"$latest_squash\" ]; then\n     echo \"ERROR: $DIR is not a subtree\" >&2\n     exit 2\n fi\n+\n set $latest_squash\n old=$1\n rev=$2\n-\n-# get the tree in the current commit\n+if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n+    echo \"ERROR: subtree commit $rev unavailable. Fetch/update the subtree repository\" >&2\n+    exit 2\n+fi\n+tree_subtree=$(git show -s --format=\"%T\" $rev)\n+echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n tree_actual=$(git ls-tree -d \"$COMMIT\" \"$DIR\" | head -n 1)\n if [ -z \"$tree_actual\" ]; then\n     echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n@@ -65,30 +69,9 @@ if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n     echo \"FAIL: subtree directory $DIR is not a tree in $COMMIT\" >&2\n     exit 1\n fi\n-\n-# get the tree at the time of the last subtree update\n-tree_commit=$(git show -s --format=\"%T\" $old)\n-echo \"$DIR in $COMMIT was last updated in commit $old (tree $tree_commit)\"\n-\n-# ... and compare the actual tree with it\n-if [ \"$tree_actual_tree\" != \"$tree_commit\" ]; then\n-    git diff $tree_commit $tree_actual_tree >&2\n-    echo \"FAIL: subtree directory was touched without subtree merge\" >&2\n-    exit 1\n-fi\n-\n-# get the tree in the subtree commit referred to\n-if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n-    echo \"subtree commit $rev unavailable: cannot compare\" >&2\n-    exit\n-fi\n-tree_subtree=$(git show -s --format=\"%T\" $rev)\n-echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n-\n-# ... and compare the actual tree with it\n if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n-    echo \"FAIL: subtree update commit differs from upstream tree!\" >&2\n+    git diff-tree $tree_actual_tree $tree_subtree >&2\n+    echo \"FAIL: subtree directory tree doesn't match subtree commit tree\" >&2\n     exit 1\n fi\n-\n echo \"GOOD\""
      },
      {
        "sha": "c664cf81fa9f63ac3fb4a32a19840442927b7450",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 26,
        "deletions": 23,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -20,7 +20,6 @@\n import argparse\n import hashlib\n import subprocess\n-import sys\n import json,codecs\n try:\n     from urllib.request import Request,urlopen\n@@ -159,11 +158,11 @@ def main():\n     if repo is None:\n         print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n         print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        sys.exit(1)\n+        exit(1)\n     if signingkey is None:\n         print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n         print(\"git config --global user.signingkey <key>\",file=stderr)\n-        sys.exit(1)\n+        exit(1)\n \n     host_repo = host+\":\"+repo # shortcut for push/pull target\n \n@@ -174,7 +173,7 @@ def main():\n     # Receive pull information from github\n     info = retrieve_pr_info(repo,pull)\n     if info is None:\n-        sys.exit(1)\n+        exit(1)\n     title = info['title'].strip()\n     body = info['body'].strip()\n     # precedence order for destination branch argument:\n@@ -195,23 +194,27 @@ def main():\n         subprocess.check_call([GIT,'checkout','-q',branch])\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        sys.exit(3)\n+        exit(3)\n     try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*',\n-                                                          '+refs/heads/'+branch+':refs/heads/'+base_branch])\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n     except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find pull request #%s or branch %s on %s.\" % (pull,branch,host_repo), file=stderr)\n-        sys.exit(3)\n+        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        sys.exit(3)\n+        exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        sys.exit(3)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n+        exit(3)\n     subprocess.check_call([GIT,'checkout','-q',base_branch])\n     subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n     subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n@@ -233,30 +236,30 @@ def main():\n         except subprocess.CalledProcessError as e:\n             print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n             subprocess.check_call([GIT,'merge','--abort'])\n-            sys.exit(4)\n+            exit(4)\n         logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n         if logmsg.rstrip() != firstline.rstrip():\n             print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            sys.exit(4)\n+            exit(4)\n \n         symlink_files = get_symlink_files()\n         for f in symlink_files:\n             print(\"ERROR: File %s was a symlink\" % f)\n         if len(symlink_files) > 0:\n-            sys.exit(4)\n+            exit(4)\n \n         # Put tree SHA512 into the message\n         try:\n             first_sha512 = tree_sha512sum()\n             message += '\\n\\nTree-SHA512: ' + first_sha512\n         except subprocess.CalledProcessError as e:\n-            print(\"ERROR: Unable to compute tree hash\")\n-            sys.exit(4)\n+            printf(\"ERROR: Unable to compute tree hash\")\n+            exit(4)\n         try:\n             subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n         except subprocess.CalledProcessError as e:\n-            print(\"ERROR: Cannot update message.\", file=stderr)\n-            sys.exit(4)\n+            printf(\"ERROR: Cannot update message.\",file=stderr)\n+            exit(4)\n \n         print_merge_details(pull, title, branch, base_branch, head_branch)\n         print()\n@@ -265,7 +268,7 @@ def main():\n         if testcmd:\n             if subprocess.call(testcmd,shell=True):\n                 print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                sys.exit(5)\n+                exit(5)\n \n             # Show the created merge.\n             diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n@@ -276,7 +279,7 @@ def main():\n                 if reply.lower() == 'ignore':\n                     print(\"Difference with github ignored.\",file=stderr)\n                 else:\n-                    sys.exit(6)\n+                    exit(6)\n         else:\n             # Verify the result manually.\n             print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n@@ -289,7 +292,7 @@ def main():\n         second_sha512 = tree_sha512sum()\n         if first_sha512 != second_sha512:\n             print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n-            sys.exit(8)\n+            exit(8)\n \n         # Sign the merge commit.\n         print_merge_details(pull, title, branch, base_branch, head_branch)\n@@ -303,7 +306,7 @@ def main():\n                     print(\"Error while signing, asking again.\",file=stderr)\n             elif reply == 'x':\n                 print(\"Not signing off on merge, exiting.\",file=stderr)\n-                sys.exit(1)\n+                exit(1)\n \n         # Put the result in branch.\n         subprocess.check_call([GIT,'checkout','-q',branch])\n@@ -323,7 +326,7 @@ def main():\n             subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n             break\n         elif reply == 'x':\n-            sys.exit(1)\n+            exit(1)\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "c90541e27119cdc274554c11e20eaa7ce53f2ce9",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -212,5 +212,5 @@ def identify_executable(executable):\n         except IOError:\n             print('%s: cannot open' % filename)\n             retval = 1\n-    sys.exit(retval)\n+    exit(retval)\n "
      },
      {
        "sha": "8f8685006e1150ea4cd36ec60ae10ed223b69b51",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -159,6 +159,6 @@ def read_libraries(filename):\n                 print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n                 retval = 1\n \n-    sys.exit(retval)\n+    exit(retval)\n \n "
      },
      {
        "sha": "2011841005930eb975a54bcd59693c27b4a70f2c",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -36,12 +36,12 @@ def check_at_repository_root():\n     if not os.path.exists('.git'):\n         print('No .git directory found')\n         print('Execute this script at the root of the repository', file=sys.stderr)\n-        sys.exit(1)\n+        exit(1)\n \n def fetch_all_translations():\n     if subprocess.call([TX, 'pull', '-f', '-a']):\n         print('Error while fetching translations', file=sys.stderr)\n-        sys.exit(1)\n+        exit(1)\n \n def find_format_specifiers(s):\n     '''Find all format specifiers in a string.'''"
      },
      {
        "sha": "64e7bb5831106902eea2db8c80d4501fa315daca",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 39,
        "deletions": 36,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,6 +6,7 @@\n sign=false\n verify=false\n build=false\n+setupenv=false\n \n # Systems to build\n linux=true\n@@ -16,7 +17,7 @@ osx=true\n SIGNER=\n VERSION=\n commit=false\n-url=https://github.com/bitcoin/bitcoin\n+url=https://github.com/blockcash/blockcash\n proc=2\n mem=2000\n lxc=true\n@@ -30,24 +31,24 @@ commitFiles=true\n read -d '' usage <<- EOF\n Usage: $scriptName [-c|u|v|b|s|B|o|h|j|m|] signer version\n \n-Run this script from the directory containing the bitcoin, gitian-builder, gitian.sigs, and bitcoin-detached-sigs.\n+Run this script from the directory containing the blockcash, gitian-builder, gitian.sigs, and blockcash-detached-sigs.\n \n Arguments:\n signer          GPG signer to sign each build assert file\n version\t\tVersion number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n \n Options:\n -c|--commit\tIndicate that the version argument is for a commit or branch\n--u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n--v|--verify \tVerify the Gitian build\n--b|--build\tDo a Gitian build\n+-u|--url\tSpecify the URL of the repository. Default is https://github.com/blockcash/blockcash\n+-v|--verify \tVerify the gitian build\n+-b|--build\tDo a gitian build\n -s|--sign\tMake signed binaries for Windows and Mac OSX\n -B|--buildsign\tBuild both signed and unsigned binaries\n -o|--os\t\tSpecify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n -j\t\tNumber of processes to use. Default 2\n -m\t\tMemory to allocate in MiB. Default 2000\n --kvm           Use KVM instead of LXC\n---setup         Set up the Gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n+--setup         Setup the gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n --detach-sign   Create the assert file for detached signing. Will not commit anything.\n --no-commit     Do not commit anything to git\n -h|--help\tPrint this help message\n@@ -105,7 +106,7 @@ while :; do\n \t\tfi\n \t\tshift\n \t    else\n-\t\techo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)'\n+\t\techo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)\\n'\n \t\texit 1\n \t    fi\n \t    ;;\n@@ -178,6 +179,8 @@ done\n if [[ $lxc = true ]]\n then\n     export USE_LXC=1\n+    export LXC_BRIDGE=lxcbr0\n+    sudo ifconfig lxcbr0 up 10.0.2.2\n fi\n \n # Check for OSX SDK\n@@ -188,7 +191,7 @@ then\n fi\n \n # Get signer\n-if [[ -n \"$1\" ]]\n+if [[ -n\"$1\" ]]\n then\n     SIGNER=$1\n     shift\n@@ -229,8 +232,8 @@ echo ${COMMIT}\n if [[ $setup = true ]]\n then\n     sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm qemu-utils\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+    git clone https://github.com/blockcash/gitian.sigs.git\n+    git clone https://github.com/blockcash/blockcash-detached-sigs.git\n     git clone https://github.com/devrandom/gitian-builder.git\n     pushd ./gitian-builder\n     if [[ -n \"$USE_LXC\" ]]\n@@ -244,7 +247,7 @@ then\n fi\n \n # Set up build\n-pushd ./bitcoin\n+pushd ./blockcash\n git fetch\n git checkout ${COMMIT}\n popd\n@@ -253,7 +256,7 @@ popd\n if [[ $build = true ]]\n then\n \t# Make output folder\n-\tmkdir -p ./bitcoin-binaries/${VERSION}\n+\tmkdir -p ./blockcash-binaries/${VERSION}\n \t\n \t# Build Dependencies\n \techo \"\"\n@@ -263,39 +266,39 @@ then\n \tmkdir -p inputs\n \twget -N -P inputs $osslPatchUrl\n \twget -N -P inputs $osslTarUrl\n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+\tmake -C ../blockcash/depends download SOURCES_PATH=`pwd`/cache/common\n \n \t# Linux\n \tif [[ $linux = true ]]\n \tthen\n             echo \"\"\n \t    echo \"Compiling ${VERSION} Linux\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit blockcash=${COMMIT} --url blockcash=${url} ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+\t    mv build/out/blockcash-*.tar.gz build/out/src/blockcash-*.tar.gz ../blockcash-binaries/${VERSION}\n \tfi\n \t# Windows\n \tif [[ $windows = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Compiling ${VERSION} Windows\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit blockcash=${COMMIT} --url blockcash=${url} ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+\t    mv build/out/blockcash-*-win-unsigned.tar.gz inputs/blockcash-win-unsigned.tar.gz\n+\t    mv build/out/blockcash-*.zip build/out/blockcash-*.exe ../blockcash-binaries/${VERSION}\n \tfi\n \t# Mac OSX\n \tif [[ $osx = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Compiling ${VERSION} Mac OSX\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit blockcash=${COMMIT} --url blockcash=${url} ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n+\t    mv build/out/blockcash-*-osx-unsigned.tar.gz inputs/blockcash-osx-unsigned.tar.gz\n+\t    mv build/out/blockcash-*.tar.gz build/out/blockcash-*.dmg ../blockcash-binaries/${VERSION}\n \tfi\n \tpopd\n \n@@ -322,27 +325,27 @@ then\n \techo \"\"\n \techo \"Verifying v${VERSION} Linux\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n \t# Windows\n \techo \"\"\n \techo \"Verifying v${VERSION} Windows\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n \t# Mac OSX\t\n \techo \"\"\n \techo \"Verifying v${VERSION} Mac OSX\"\n \techo \"\"\t\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n \t# Signed Windows\n \techo \"\"\n \techo \"Verifying v${VERSION} Signed Windows\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n \t# Signed Mac OSX\n \techo \"\"\n \techo \"Verifying v${VERSION} Signed Mac OSX\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n \tpopd\n fi\n \n@@ -357,20 +360,20 @@ then\n \t    echo \"\"\n \t    echo \"Signing ${VERSION} Windows\"\n \t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n-\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -i --commit signature=${COMMIT} ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t    mv build/out/blockcash-*win64-setup.exe ../blockcash-binaries/${VERSION}\n+\t    mv build/out/blockcash-*win32-setup.exe ../blockcash-binaries/${VERSION}\n \tfi\n \t# Sign Mac OSX\n \tif [[ $osx = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Signing ${VERSION} Mac OSX\"\n \t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n+\t    ./bin/gbuild -i --commit signature=${COMMIT} ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t    mv build/out/blockcash-osx-signed.dmg ../blockcash-binaries/${VERSION}/blockcash-${VERSION}-osx.dmg\n \tfi\n \tpopd\n "
      },
      {
        "sha": "3850389f75675b2a050745f5ec8e804f18df542c",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,65 @@\n+### Gavin's notes on getting gitian builds up and running using KVM\n+\n+These instructions distilled from\n+[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n+\n+You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n+\n+You probably need to enable hardware virtualization in your machine's BIOS.\n+\n+You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n+\n+\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n+\n+Sanity checks:\n+\n+\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n+\tls -l /dev/kvm   # Should show a /dev/kvm device\n+\n+\n+Once you've got the right hardware and software:\n+\n+    git clone git://github.com/blockcash/blockcash.git\n+    git clone git://github.com/devrandom/gitian-builder.git\n+    mkdir gitian-builder/inputs\n+    cd gitian-builder/inputs\n+\n+    # Create base images\n+    cd gitian-builder\n+    bin/make-base-vm --suite trusty --arch amd64\n+    cd ..\n+\n+    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n+    ...\n+\n+    # For further build instructions see doc/release-process.md\n+    ...\n+\n+---------------------\n+\n+`gitian-builder` now also supports building using LXC. See\n+[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n+for how to get LXC up and running under Ubuntu.\n+\n+If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n+and at least 10 gigabytes of free disk space, you can `gitian-build` using\n+LXC running inside a virtual machine.\n+\n+Here's a description of Gavin's setup on OSX 10.6:\n+\n+1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n+\n+2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n+   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n+\n+3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n+\n+4. Inside the running Ubuntu desktop, install:\n+\n+\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n+\n+5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n+\n+\texport USE_LXC=1\n+\tgit clone git://github.com/blockcash/blockcash.git\n+\t... etc"
      },
      {
        "sha": "0e6d288434bde361f4efc9adce26c5c8b1ae6165",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.16\"\n+name: \"blockcash-linux-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -28,8 +28,8 @@ packages:\n - \"ca-certificates\"\n - \"python\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/blockcash-project/blockcash.git\"\n+  \"dir\": \"blockcash\"\n files: []\n script: |\n \n@@ -113,7 +113,7 @@ script: |\n   chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  cd bitcoin\n+  cd blockcash\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -135,13 +135,13 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo blockcash-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find blockcash-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   # Workaround for tarball not building with the bare tag version (prep)\n@@ -181,8 +181,14 @@ script: |\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n+ \n+    # Blockcash: Delete libbitcoin from binary distribution for now\n+    rm -rf ${DISTNAME}/lib/\n+    rm -rf ${DISTNAME}/include/\n+    # Blockcash: ends\n+ \n     find ${DISTNAME}/bin -type f -executable -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n-    find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n+    #find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\; # Blockcash: Delete libbitcoin from binary distribution for now\n     find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n     find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n     cd ../../"
      },
      {
        "sha": "123c7d51e33c15514086f45265ee2a0c70c791cd",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,16 +1,16 @@\n ---\n-name: \"bitcoin-dmg-signer\"\n+name: \"blockcash-dmg-signer\"\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n packages:\n - \"faketime\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/blockcash/blockcash-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n+- \"blockcash-osx-unsigned.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n@@ -27,8 +27,8 @@ script: |\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n+  UNSIGNED=blockcash-osx-unsigned.tar.gz\n+  SIGNED=blockcash-osx-signed.dmg\n \n   tar -xf ${UNSIGNED}\n   OSX_VOLNAME=\"$(cat osx_volname)\""
      },
      {
        "sha": "3738afcb685640df715a26ab82225ae6163cbd71",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.16\"\n+name: \"blockcash-osx-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -28,8 +28,8 @@ packages:\n - \"python-setuptools\"\n - \"fonts-tuffy\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/blockcash/blockcash.git\"\n+  \"dir\": \"blockcash\"\n files:\n - \"MacOSX10.11.sdk.tar.gz\"\n script: |\n@@ -83,7 +83,7 @@ script: |\n   create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd blockcash\n   BASEPREFIX=`pwd`/depends\n \n   mkdir -p ${BASEPREFIX}/SDKs\n@@ -104,14 +104,14 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo blockcash-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find blockcash-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   # Workaround for tarball not building with the bare tag version (prep)"
      },
      {
        "sha": "4ac45e31a56c6648bd24f3a343f5b792f0607626",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-signer\"\n+name: \"blockcash-win-signer\"\n suites:\n - \"trusty\"\n architectures:\n@@ -8,12 +8,12 @@ packages:\n - \"libssl-dev\"\n - \"autoconf\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/blockcash/blockcash-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n - \"osslsigncode-1.7.1.tar.gz\"\n - \"osslsigncode-Backports-to-1.7.1.patch\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n+- \"blockcash-win-unsigned.tar.gz\"\n script: |\n   BUILD_DIR=`pwd`\n   SIGDIR=${BUILD_DIR}/signature/win\n@@ -23,7 +23,7 @@ script: |\n   echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n \n   mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+  tar -C ${UNSIGNED_DIR} -xf blockcash-win-unsigned.tar.gz\n \n   tar xf osslsigncode-1.7.1.tar.gz\n   cd osslsigncode-1.7.1"
      },
      {
        "sha": "d146532f7db430de9a3186d17afd205317e37f68",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.16\"\n+name: \"blockcash-win-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -22,8 +22,8 @@ packages:\n - \"ca-certificates\"\n - \"python\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/blockcash/blockcash.git\"\n+  \"dir\": \"blockcash\"\n files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n@@ -101,7 +101,7 @@ script: |\n   create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd blockcash\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -119,14 +119,14 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo blockcash-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find blockcash-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   mkdir -p $OUTDIR/src\n   cp ../$SOURCEDIST $OUTDIR/src\n   popd\n@@ -155,7 +155,7 @@ script: |\n     make deploy\n     make install DESTDIR=${INSTALLPATH}\n     rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cp -f blockcash-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete\n@@ -171,7 +171,7 @@ script: |\n   cp -rf contrib/windeploy $BUILD_DIR\n   cd $BUILD_DIR/windeploy\n   mkdir unsigned\n-  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n+  cp $OUTDIR/blockcash-*setup-unsigned.exe unsigned/\n   find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n   mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip"
      },
      {
        "sha": "439910330d14a7d3f2f8e6be23c5393f75b163b1",
        "filename": "contrib/gitian-keys/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,7 +3,7 @@ PGP keys\n \n This folder contains the public keys of developers and active contributors.\n \n-The keys are mainly used to sign git commits or the build results of Gitian\n+The keys are mainly used to sign git commits or the build results of gitian\n builds.\n \n You can import the keys into gpg as follows. Also, make sure to fetch the"
      },
      {
        "sha": "f9554eecde7f2e536d7ac4422b58e870f2275eaa",
        "filename": "contrib/init/bitcoind.conf",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -30,12 +30,12 @@ pre-start script\n         echo\n         echo \"This password is security critical to securing wallets \"\n         echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following \"\n+        echo \"You can generate a suitable random password using the following\"\n         echo \"command from the shell:\"\n         echo\n         echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n         echo\n-        echo \"It is recommended that you also set alertnotify so you are \"\n+        echo \"It is also recommended that you also set alertnotify so you are \"\n         echo \"notified of problems:\"\n         echo\n         echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "eda1a96fb4fcbaf3a61cafcd80368b5104ec0f56",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,4 +1,4 @@\n-#!/sbin/openrc-run\n+#!/sbin/runscript\n \n # backward compatibility for existing gentoo layout \n #\n@@ -76,12 +76,12 @@ checkconfig()\n \t\teerror \"\"\n \t\teerror \"This password is security critical to securing wallets \"\n \t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following \"\n+\t\teerror \"You can generate a suitable random password using the following\"\n \t\teerror \"command from the shell:\"\n \t\teerror \"\"\n \t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n \t\teerror \"\"\n-\t\teerror \"It is recommended that you also set alertnotify so you are \"\n+\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n \t\teerror \"notified of problems:\"\n \t\teerror \"\"\n \t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "9132957c38b8d3ed6648b79d3948e41ee3861db0",
        "filename": "contrib/init/bitcoind.service",
        "status": "modified",
        "additions": 12,
        "deletions": 15,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,25 +1,22 @@\n-# It is not recommended to modify this file in-place, because it will\n-# be overwritten during package upgrades. If you want to add further\n-# options or overwrite existing ones then use\n-# $ systemctl edit bitcoind.service\n-# See \"man systemd.service\" for details.\n-\n-# Note that almost all daemon options could be specified in\n-# /etc/bitcoin/bitcoin.conf\n-\n [Unit]\n-Description=Bitcoin daemon\n+Description=Bitcoin's distributed currency daemon\n After=network.target\n \n [Service]\n-ExecStart=/usr/bin/bitcoind -daemon -conf=/etc/bitcoin/bitcoin.conf -pid=/run/bitcoind/bitcoind.pid\n-# Creates /run/bitcoind owned by bitcoin\n-RuntimeDirectory=bitcoind\n User=bitcoin\n+Group=bitcoin\n+\n Type=forking\n-PIDFile=/run/bitcoind/bitcoind.pid\n-Restart=on-failure\n+PIDFile=/var/lib/bitcoind/bitcoind.pid\n+ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n+-conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n+\n+Restart=always\n PrivateTmp=true\n+TimeoutStopSec=60s\n+TimeoutStartSec=2s\n+StartLimitInterval=120s\n+StartLimitBurst=5\n \n [Install]\n WantedBy=multi-user.target"
      },
      {
        "sha": "e94cd4466d226a992e2bb2e24d594dcb49b58dac",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -7,6 +7,7 @@\n \t<key>ProgramArguments</key>\n \t<array>\n \t\t<string>/usr/local/bin/bitcoind</string>\n+\t\t<string>-daemon</string>\n \t</array>\n \t<key>RunAtLoad</key>\n \t<true/>"
      },
      {
        "sha": "fa30210d0a5b5c2923603e1ca19a42b5251226e2",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,5 +1,5 @@\n # Linearize\n-Construct a linear, no-fork, best version of the Bitcoin blockchain. The scripts\n+Construct a linear, no-fork, best version of the Blockcash blockchain. The scripts\n run using Python 3 but are compatible with Python 2.\n \n ## Step 1: Download hash list\n@@ -12,7 +12,7 @@ Required configuration file settings for linearize-hashes:\n \n Optional config file setting for linearize-hashes:\n * RPC: `host`  (Default: `127.0.0.1`)\n-* RPC: `port`  (Default: `8332`)\n+* RPC: `port`  (Default: `29252`)\n * Blockchain: `min_height`, `max_height`\n * `rev_hash_bytes`: If true, the written block hash list will be\n byte-reversed. (In other words, the hash returned by getblockhash will have its\n@@ -21,7 +21,7 @@ standalone hash lists but safe to use with linearize-data.py, which will output\n the same data no matter which byte format is chosen.\n \n The `linearize-hashes` script requires a connection, local or remote, to a\n-JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n+JSON-RPC server. Running `blockcashd` or `blockcash-qt -server` will be sufficient.\n \n ## Step 2: Copy local block data\n \n@@ -39,14 +39,14 @@ will be printed.\n respectively, to the current time and to the timestamp of the most recent block\n written to the script's blockchain.\n * `genesis`: The hash of the genesis block in the blockchain.\n-* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n+* `input`: bkockcashd blocks/ directory containing blkNNNNN.dat\n * `hashlist`: text file containing list of block hashes created by\n linearize-hashes.py.\n * `max_out_sz`: Maximum size for files created by the `output_file` option.\n (Default: `1000*1000*1000 bytes`)\n * `netmagic`: Network magic number.\n * `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be sought again.\n+be written to a cache so that the blockchain doesn't have to be seeked again.\n This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n * `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n will be byte-reversed when read by linearize-data.py. See the linearize-hashes"
      },
      {
        "sha": "0e0a4421d8662843e30270d6dfd52186d3ef8748",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -87,7 +87,7 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t\tfor x,resp_obj in enumerate(reply):\n \t\t\tif rpc.response_is_error(resp_obj):\n \t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\tsys.exit(1)\n+\t\t\t\texit(1)\n \t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n \t\t\tif settings['rev_hash_bytes'] == 'true':\n \t\t\t\tresp_obj['result'] = hex_switchEndian(resp_obj['result'])\n@@ -125,7 +125,7 @@ def get_rpc_cookie():\n \tif 'host' not in settings:\n \t\tsettings['host'] = '127.0.0.1'\n \tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n+\t\tsettings['port'] = 29252\n \tif 'min_height' not in settings:\n \t\tsettings['min_height'] = 0\n \tif 'max_height' not in settings:\n@@ -140,7 +140,7 @@ def get_rpc_cookie():\n \tif 'datadir' in settings and not use_userpass:\n \t\tuse_datadir = True\n \tif not use_userpass and not use_datadir:\n-\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n+\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=stderr)\n \t\tsys.exit(1)\n \n \tsettings['port'] = int(settings['port'])"
      },
      {
        "sha": "cadd393c010cc0e4569bcefbaf8fc91ccf1b64aa",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Blockcash-Core.dmg`.\n "
      },
      {
        "sha": "83a2056972c8527e3aef8903fbbfbdce18c21547",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -45,16 +45,16 @@\n alias.volume.name = package_name_ns\n alias.volume.posix_path = '/Volumes/' + package_name_ns\n alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00blockcashuser:\\x00Documents:\\x00blockcash:\\x00blockcash:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/blockcashuser/Documents/blockcash/blockcash/' + package_name_ns + '.temp.dmg'\n alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n ds['.']['icvp'] = icvp\n \n ds['.']['vSrn'] = ('long', 1)\n \n ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+ds['Blockcash-Qt.app']['Iloc'] = (128, 156)\n \n ds.flush()\n ds.close()"
      },
      {
        "sha": "efccf41f726955bd0410465e2d8cd41597b97c8c",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,7 +6,7 @@\n set -e\n \n ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+BUNDLE=\"${ROOTDIR}/Blockcash-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt\n@@ -40,7 +40,7 @@ grep CodeResources < \"${TEMPLIST}\" | while read i; do\n   RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n   DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n   mkdir -p \"${DIRNAME}\"\n-  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n+  echo \"Adding resource for: \"${TARGETFILE}\"\"\n   cp \"${i}\" \"${RESOURCE}\"\n done\n "
      },
      {
        "sha": "26b5fc6b132ba85173acfe26993c1c20c7a62438",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n+\t\t<key>Blockcash-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "55ae67cefb511b9d2d9f1d3f711594ba336537d8",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -155,7 +155,7 @@ class FrameworkInfo(object):\n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = \"Bitcoin-Qt\"\n+        appName = \"Blockcash-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -603,7 +603,7 @@ else:\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+target = os.path.join(\"dist\", \"Blockcash-Qt.app\")\n \n if verbose >= 2:\n     print(\"+ Copying source bundle +\")"
      },
      {
        "sha": "1273aac8c4cc8fa000d327e73240a165edaec9fa",
        "filename": "contrib/qos/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,5 +1,5 @@\n-### QoS (Quality of service) ###\n+### Qos ###\n \n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Blockcash network. It limits outbound TCP traffic with a source or destination port of 29252, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n \n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+This means one can have an always-on blockcashd instance running, and another local blockcashd/blockcash-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "4635ac1779e2b467cb47f8822f527b19300a9b0b",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 9,
        "deletions": 23,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,12 +6,10 @@\n IF=\"eth0\"\n #limit of the network interface in question\n LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n+#limit outbound Blockcash protocol traffic to this rate\n LIMIT=\"160kbit\"\n-#defines the IPv4 address space for which you wish to disable rate limiting\n-LOCALNET_V4=\"192.168.0.0/16\"\n-#defines the IPv6 address space for which you wish to disable rate limiting\n-LOCALNET_V6=\"fe80::/10\"\n+#defines the address space for which you wish to disable rate limiting\n+LOCALNET=\"192.168.0.0/16\"\n \n #delete existing rules\n tc qdisc del dev ${IF} root\n@@ -30,12 +28,6 @@ tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} p\n tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n \n-if [ ! -z \"${LOCALNET_V6}\" ] ; then\n-\t# v6 cannot have the same priority value as v4\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n-\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n-fi\n-\n #delete any existing rules\n #disable for now\n #ret=0\n@@ -44,16 +36,10 @@ fi\n #\tret=$?\n #done\n \n-#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n-#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n-#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n-#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n-#\tthese packets are filtered by the tc filter with \"handle 2\"\n+#limit outgoing traffic to and from port 29252. but not when dealing with a host on the local network\n+#\t(defined by $LOCALNET)\n+#\t--set-mark marks packages matching these criteria with the number \"2\"\n+#\tthese packages are filtered by the tc filter with \"handle 2\"\n #\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-\n-if [ ! -z \"${LOCALNET_V6}\" ] ; then\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-fi\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 29252 ! -d ${LOCALNET} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 29252 ! -d ${LOCALNET} -j MARK --set-mark 0x2"
      },
      {
        "sha": "4ab2f356803a8933edd1fe7b573533281ef7c1f2",
        "filename": "contrib/rpm/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -84,16 +84,16 @@ If you would prefer not to build the GUI at all, you can pass the switch\n \n The desktop and KDE meta files are created in the spec file itself with the\n `cat` command. This is done to allow easy distribution specific changes without\n-needing to use any patches. A specific timestamp is given to the files so that\n+needing to use any patches. A specific time stamp is given to the files so that\n it does not they do not appear to have been updated every time the package is\n-built. If you do make changes to them, you probably should update timestamp\n-assigned to them in the `touch` command that specifies the timestamp.\n+built. If you do make changes to them, you probably should update time stamp\n+assigned to them in the `touch` command that specifies the time stamp.\n \n ## SVG, PNG, and XPM Icons\n \n The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n the source for the PNG and XPM files. The generated PNG and XPM files are given\n-the same timestamp as the source SVG file as a means of indicating they are\n+the same time stamp as the source SVG file as a means of indicating they are\n derived from it.\n \n ## Systemd\n@@ -105,10 +105,10 @@ distributions that still receive vendor updates do in fact use systemd.\n The files to control the service are created in the RPM spec file itself using\n the `cat` command. This is done to make it easy to modify for other\n distributions that may implement things differently without needing to patch\n-source. A specific timestamp is given to the files so that they do not appear\n+source. A specific time stamp is given to the files so that they do not appear\n to have been updated every time the package is built. If you do make changes to\n-them, you probably should update the timestamp assigned to them in the `touch`\n-command that specifies the timestamp.\n+them, you probably should update the time stamp assigned to them in the `touch`\n+command that specifies the time stamp.\n \n ## SELinux\n "
      },
      {
        "sha": "12ad1a18f1433eaa993eecb26657cbef95f0713a",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "modified",
        "additions": 8,
        "deletions": 12,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -332,12 +332,10 @@ if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n for selinuxvariant in %{selinux_variants}; do\n \t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n done\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18443\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18444\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 29251\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 29252\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 39251\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 39252\n %{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n %{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n fi\n@@ -353,12 +351,10 @@ fi\n # SELinux\n if [ $1 -eq 0 ]; then\n \tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-\t%{_sbindir}/semanage port -d -p tcp 8332\n-\t%{_sbindir}/semanage port -d -p tcp 8333\n-\t%{_sbindir}/semanage port -d -p tcp 18332\n-\t%{_sbindir}/semanage port -d -p tcp 18333\n-\t%{_sbindir}/semanage port -d -p tcp 18443\n-\t%{_sbindir}/semanage port -d -p tcp 18444\n+\t%{_sbindir}/semanage port -d -p tcp 29251\n+\t%{_sbindir}/semanage port -d -p tcp 29252\n+\t%{_sbindir}/semanage port -d -p tcp 39251\n+\t%{_sbindir}/semanage port -d -p tcp 39252\n \tfor selinuxvariant in %{selinux_variants}; do\n \t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n \tdone"
      },
      {
        "sha": "2b5e3d657cf3b4a3ce10b186d446dea37673a69c",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,9 +6,9 @@ Utility to generate the seeds.txt list that is compiled into the client\n Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n and remove old versions as necessary.\n \n-The seeds compiled into the release are created from sipa's DNS seed data, like this:\n+The seeds compiled into the release are created from poolers's DNS seed data, like this:\n \n-    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n+    curl -s https://www.blocashpool.org/seeds.txt > seeds_main.txt\n     python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n     python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n "
      },
      {
        "sha": "bff19be6f2aa32e34d265436564157c40de2c84c",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -114,23 +114,23 @@ def process_nodes(g, f, structname, defaultport):\n def main():\n     if len(sys.argv)<2:\n         print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        sys.exit(1)\n+        exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n     g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n     g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n     g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * List of fixed seed nodes for the blockcash network\\n')\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n     g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n     g.write(' */\\n')\n     with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n+        process_nodes(g, f, 'pnSeed6_main', 29252)\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n+        process_nodes(g, f, 'pnSeed6_test', 39252)\n     g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n             \n if __name__ == '__main__':"
      },
      {
        "sha": "9b760535bdcca18eacb2c43d772138a3afbcc890",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -30,7 +30,7 @@\n PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.13.(1|2|99)/|/Satoshi:0.14.(0|1|2|99)/)$\")\n+PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.13.(0|1|2|99)/|/Blockcashcore:0.13.(0|1|2|99)/|/Blockcashcore:0.14.(0|1|2|99)/)$\")\n \n def parseline(line):\n     sline = line.split()"
      },
      {
        "sha": "e095681b03c84f65e3e840429ea111976db0a952",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 3,
        "deletions": 1450,
        "changes": 1453,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,1450 +1,3 @@\n-2.228.70.198:8333\n-4.15.180.29:8333\n-4.15.180.30:8333\n-5.2.67.110:8333\n-5.39.224.103:8333\n-5.43.124.154:8333\n-5.189.165.102:8333\n-5.226.149.145:8333\n-5.228.7.146:8333\n-5.228.64.71:8333\n-5.249.152.101:8333\n-5.254.124.55:8333\n-5.255.64.231:8333\n-5.255.90.234:8333\n-14.192.8.27:21301\n-18.62.3.86:8333\n-18.85.35.80:8333\n-23.28.128.65:8333\n-23.108.83.12:8333\n-23.233.2.238:8333\n-24.27.65.168:8333\n-24.56.241.219:8333\n-24.64.75.132:8333\n-24.73.70.26:8333\n-24.121.154.140:8333\n-24.203.96.72:8333\n-24.225.34.62:8333\n-24.227.69.146:8333\n-24.232.136.119:8333\n-31.16.123.235:8333\n-31.19.205.53:8333\n-31.132.136.35:8333\n-31.184.234.85:8333\n-31.211.102.161:8333\n-37.48.64.140:8333\n-37.97.141.116:8333\n-37.120.160.12:8333\n-37.120.164.16:8333\n-37.134.226.181:8333\n-37.147.110.43:8333\n-37.194.10.30:8333\n-37.247.22.53:8333\n-38.27.65.158:8333\n-38.133.141.34:8333\n-43.248.160.151:8333\n-45.32.130.19:8333\n-45.32.193.157:8333\n-45.46.161.121:8333\n-45.56.97.63:8333\n-45.116.178.79:8188\n-46.16.240.98:8333\n-46.20.246.100:8333\n-46.21.97.135:8333\n-46.59.10.237:8333\n-46.59.13.59:8333\n-46.148.16.210:8333\n-46.166.160.96:8333\n-46.188.44.20:8333\n-46.229.238.187:8333\n-46.231.16.149:8333\n-47.88.35.181:8333\n-47.88.100.130:8333\n-47.184.129.94:8333\n-47.199.68.204:8333\n-50.30.38.203:8333\n-50.63.162.242:8333\n-50.97.133.208:8333\n-50.114.227.224:8333\n-51.15.0.17:8333\n-51.174.69.239:8333\n-52.7.135.69:8333\n-52.14.64.82:8333\n-52.204.105.25:8333\n-54.255.160.87:8333\n-61.47.2.20:8333\n-61.125.131.55:8333\n-62.43.130.178:8333\n-62.106.16.111:8333\n-62.107.200.30:8333\n-62.109.20.99:8333\n-62.133.194.2:8333\n-62.133.194.156:8333\n-62.176.6.94:8333\n-62.182.169.222:8333\n-62.205.132.245:8333\n-62.216.238.133:8333\n-63.231.239.212:8333\n-64.34.231.140:8333\n-64.203.102.86:8333\n-64.233.245.39:8333\n-65.183.76.73:8333\n-66.96.199.166:8333\n-66.194.38.250:8333\n-66.194.38.253:8333\n-66.196.12.63:8333\n-67.215.6.34:8333\n-67.221.193.55:8333\n-68.66.193.192:8333\n-68.69.235.230:8333\n-68.111.10.219:8333\n-68.119.138.175:8333\n-68.132.193.222:8333\n-68.194.42.76:8333\n-68.235.41.204:8333\n-69.11.97.43:8333\n-69.41.3.212:8333\n-69.41.171.35:8333\n-69.41.171.36:8333\n-69.55.64.216:8333\n-69.84.42.56:8333\n-70.48.48.250:8333\n-70.112.32.29:8333\n-70.250.74.20:8333\n-71.93.161.162:8333\n-71.198.0.126:8333\n-72.5.167.41:8333\n-72.224.11.103:8333\n-73.72.160.213:8333\n-74.122.237.124:8333\n-75.86.137.34:8333\n-75.165.99.144:8333\n-76.64.74.193:8333\n-76.76.227.136:8333\n-76.173.161.44:8333\n-76.178.22.44:8333\n-77.47.137.27:8333\n-77.77.46.250:8333\n-77.91.193.152:8333\n-77.95.226.194:8333\n-77.120.246.254:8333\n-77.163.136.136:8333\n-77.203.13.57:8333\n-77.236.37.214:8333\n-77.239.37.12:8333\n-77.247.179.44:8333\n-78.34.14.52:8333\n-78.109.163.153:8333\n-78.196.172.45:8333\n-79.132.230.144:8333\n-79.160.2.105:8333\n-80.82.77.138:8333\n-80.100.203.151:8333\n-80.147.68.237:8333\n-80.237.240.102:8333\n-81.2.246.127:8333\n-81.7.7.86:8333\n-81.7.10.238:8333\n-81.27.96.37:8333\n-81.83.96.5:8333\n-81.228.194.187:8333\n-82.45.69.216:8333\n-82.69.44.183:8333\n-82.72.198.68:8333\n-82.95.204.10:8333\n-82.118.236.127:8333\n-82.118.242.4:8333\n-82.134.66.146:8333\n-82.193.109.199:8333\n-82.197.210.65:8333\n-82.199.102.10:8333\n-82.200.205.30:8333\n-82.221.108.27:8333\n-82.221.128.81:8333\n-82.221.139.97:8333\n-82.232.202.246:8333\n-83.60.64.252:8333\n-83.61.8.228:8333\n-83.128.41.48:8333\n-83.128.111.69:8333\n-83.137.41.10:8333\n-83.150.43.17:8333\n-83.169.2.43:8333\n-83.174.209.87:8333\n-83.255.43.163:8333\n-84.42.193.6:8333\n-84.52.145.231:8333\n-84.52.234.70:8333\n-84.85.102.113:8333\n-84.92.92.247:8333\n-84.146.35.123:8333\n-84.212.198.222:8333\n-84.217.163.135:8333\n-84.245.27.185:8333\n-84.251.203.5:8333\n-85.21.144.226:8333\n-85.25.194.12:8333\n-85.25.194.28:8333\n-85.144.119.222:8333\n-85.183.140.62:8333\n-85.214.228.203:8333\n-85.214.234.254:8333\n-85.218.150.1:8333\n-85.228.196.10:8333\n-86.15.2.235:8333\n-86.61.6.210:8333\n-87.92.115.194:8333\n-87.120.8.5:8333\n-87.120.37.230:8333\n-87.233.181.146:8333\n-87.239.101.102:8333\n-88.87.78.126:8333\n-88.98.198.130:8333\n-88.98.225.214:8333\n-88.99.58.194:8333\n-88.150.192.17:8333\n-88.196.136.31:17556\n-88.208.58.193:8333\n-88.208.58.194:8333\n-89.22.96.132:8333\n-89.22.104.48:8333\n-89.25.80.98:8333\n-89.34.99.41:8333\n-89.142.195.112:8333\n-89.163.224.187:8333\n-89.163.224.195:8333\n-89.238.79.235:8333\n-90.46.240.214:8333\n-90.65.232.129:8333\n-90.71.117.90:8333\n-90.149.38.172:8333\n-90.156.97.145:8333\n-90.177.48.104:8333\n-91.106.194.97:8333\n-91.135.0.187:8333\n-91.150.189.155:8333\n-91.185.198.216:8333\n-91.196.11.45:8333\n-91.197.44.133:8333\n-91.224.0.227:8333\n-91.226.10.90:8333\n-91.228.45.130:8333\n-91.229.77.239:8333\n-91.238.100.249:8333\n-91.240.141.169:8333\n-92.27.7.209:8333\n-92.54.16.135:8333\n-93.89.84.93:8333\n-93.100.51.48:8333\n-93.100.76.151:8333\n-93.104.214.235:8333\n-93.115.86.246:8333\n-93.123.80.47:8333\n-93.174.88.211:8333\n-93.188.224.253:8333\n-93.190.69.242:8333\n-94.74.81.93:8333\n-94.156.35.8:8333\n-94.176.237.241:8333\n-94.181.44.104:8333\n-94.227.43.171:8333\n-95.79.102.208:8333\n-95.79.102.209:8333\n-95.154.237.24:8333\n-95.183.48.62:8333\n-95.183.48.71:8333\n-95.213.161.2:8333\n-95.213.201.94:8333\n-96.20.227.39:8333\n-96.28.41.91:8333\n-98.127.130.17:8333\n-100.36.48.101:8333\n-101.0.81.42:8333\n-101.0.81.43:8333\n-103.11.64.46:8333\n-103.24.244.69:8333\n-103.47.210.50:8333\n-103.76.41.169:8333\n-103.80.168.57:8333\n-103.203.51.186:8333\n-103.224.118.79:8333\n-103.250.4.74:8333\n-104.192.170.202:8333\n-104.196.0.99:8333\n-104.199.192.85:8333\n-104.219.251.46:8333\n-104.223.108.33:8333\n-104.237.2.189:8333\n-104.247.230.28:8333\n-107.150.45.210:8333\n-107.174.34.77:8333\n-107.174.34.78:8333\n-107.180.71.47:8333\n-108.59.12.163:8333\n-108.168.37.13:8333\n-108.175.3.18:8333\n-108.234.193.106:8333\n-109.9.173.13:8333\n-109.101.220.151:8333\n-109.172.104.119:8333\n-109.195.193.138:8333\n-109.206.177.21:8333\n-109.226.35.28:8333\n-109.255.0.107:8333\n-113.29.183.143:8333\n-114.145.97.73:8333\n-115.66.205.171:8333\n-118.67.201.40:8333\n-118.194.226.168:8333\n-119.28.70.144:8333\n-120.24.166.73:9998\n-120.76.244.201:10022\n-121.82.4.232:8333\n-121.254.173.40:8333\n-123.203.163.128:8333\n-124.171.70.45:8333\n-125.63.57.7:8333\n-125.128.35.41:8333\n-128.208.244.124:8333\n-128.230.208.73:8333\n-131.114.10.233:8333\n-131.114.10.235:8333\n-132.239.36.105:8333\n-134.213.214.233:8333\n-136.61.238.121:8333\n-136.62.86.140:8333\n-136.144.128.49:8333\n-137.48.144.52:8333\n-137.116.160.176:8333\n-137.117.193.113:8333\n-138.19.79.208:8333\n-138.68.64.19:8333\n-139.59.96.16:8333\n-139.162.160.232:8333\n-141.136.115.230:8333\n-142.59.232.111:8333\n-142.111.2.74:8333\n-142.162.128.23:8333\n-143.107.116.5:8333\n-143.229.22.74:8333\n-143.229.36.71:8333\n-144.2.105.60:8333\n-144.76.224.214:8333\n-146.185.19.30:8333\n-147.32.30.25:8333\n-147.229.13.210:8333\n-148.103.7.119:8333\n-150.101.114.194:8333\n-150.229.0.143:8333\n-154.66.207.126:8333\n-158.129.212.236:8333\n-158.129.212.251:8333\n-160.16.206.31:8333\n-162.209.1.233:8333\n-162.209.4.125:8333\n-162.220.246.225:8333\n-163.172.218.186:8333\n-166.230.70.145:8333\n-168.235.74.45:8333\n-169.44.34.88:8333\n-170.75.195.168:8333\n-172.112.2.67:8333\n-173.94.164.38:8333\n-173.183.232.109:8333\n-173.208.176.122:8333\n-173.212.194.114:8333\n-173.232.228.146:8333\n-175.126.124.92:8333\n-175.145.109.51:8333\n-176.24.198.205:8333\n-176.36.37.62:8333\n-176.36.99.222:8333\n-176.106.144.183:8333\n-177.33.1.40:8333\n-178.162.214.225:8333\n-178.164.109.83:8333\n-178.170.138.202:8333\n-178.175.136.122:8333\n-178.218.209.162:8333\n-178.254.2.64:8333\n-178.254.34.144:8333\n-178.255.41.21:8333\n-178.255.144.163:8333\n-180.181.208.42:8333\n-180.200.128.58:8333\n-180.235.50.14:8333\n-181.215.148.154:8333\n-184.64.13.43:8333\n-184.94.164.170:8333\n-184.152.107.251:8333\n-184.182.233.206:8333\n-185.4.24.199:8333\n-185.20.99.49:8333\n-185.24.97.11:8333\n-185.25.48.27:8333\n-185.25.48.71:8333\n-185.26.196.249:8333\n-185.28.76.179:8333\n-185.35.139.250:8333\n-185.41.113.69:8333\n-185.50.213.123:8333\n-185.50.213.124:8333\n-185.50.232.114:8333\n-185.51.192.40:8333\n-185.53.129.244:8333\n-185.71.177.100:8333\n-185.77.129.176:8333\n-185.82.201.51:8333\n-185.121.173.223:8333\n-185.140.252.253:8333\n-185.145.129.184:8333\n-185.145.130.163:8333\n-185.154.156.50:8333\n-185.162.124.69:8333\n-185.170.42.2:8333\n-186.149.197.96:8333\n-188.65.212.138:8333\n-188.65.213.48:8333\n-188.93.209.192:8333\n-188.113.79.45:8333\n-188.113.84.116:8333\n-188.113.164.231:8333\n-188.122.16.153:8333\n-188.165.224.28:8333\n-188.175.239.227:8333\n-188.214.128.18:8333\n-188.227.64.19:8333\n-188.253.2.125:8333\n-189.45.203.166:8333\n-190.184.198.34:8333\n-192.151.145.250:8333\n-192.206.202.6:8333\n-192.228.101.157:8333\n-193.2.76.41:8333\n-193.27.209.100:8333\n-193.33.237.187:8333\n-193.46.83.17:8333\n-193.49.43.219:8333\n-194.24.182.27:8333\n-194.28.206.201:8333\n-194.63.143.197:8333\n-194.71.109.91:8333\n-194.79.8.36:8333\n-194.135.93.38:8333\n-194.186.160.253:8333\n-195.9.140.134:8333\n-195.39.206.29:8333\n-195.67.36.89:8333\n-195.169.99.82:8333\n-195.214.214.253:8333\n-195.223.71.147:8333\n-198.37.118.11:8333\n-198.54.113.125:8333\n-198.101.12.139:8333\n-198.143.12.105:8333\n-198.251.83.19:8333\n-199.127.224.50:8333\n-200.12.138.146:8333\n-200.116.98.185:8333\n-200.122.128.130:8333\n-202.29.6.48:8333\n-202.133.115.115:8333\n-203.59.17.160:8333\n-204.15.11.4:8333\n-204.111.241.195:8333\n-205.251.85.151:8333\n-207.244.70.40:8333\n-207.254.50.72:8333\n-208.76.93.83:8333\n-208.107.97.242:8333\n-208.110.73.107:8333\n-208.118.235.190:8333\n-209.73.142.226:8333\n-209.81.9.223:8333\n-209.126.107.166:8333\n-209.177.86.19:8333\n-209.250.6.190:8333\n-210.1.219.155:8333\n-210.211.109.165:8333\n-210.223.3.44:8333\n-211.21.129.69:8333\n-212.50.98.161:8333\n-212.51.140.183:8333\n-212.56.108.81:8333\n-212.83.35.173:8333\n-212.90.179.206:8333\n-212.93.226.90:8333\n-212.110.171.118:8333\n-213.5.36.58:8333\n-213.5.181.205:8333\n-213.17.16.251:8333\n-213.91.205.134:8333\n-213.91.211.17:8333\n-213.155.3.216:8333\n-213.168.13.151:8333\n-213.186.170.109:8334\n-213.222.208.150:8333\n-216.32.213.112:8333\n-216.59.4.212:8333\n-216.126.193.163:8333\n-216.197.79.74:8333\n-216.218.147.140:8333\n-216.227.39.84:8333\n-216.245.206.181:8333\n-216.249.92.230:8333\n-217.12.199.207:8333\n-217.23.2.177:8333\n-217.23.5.68:8333\n-217.28.194.2:8333\n-217.35.130.42:8333\n-217.64.47.138:8333\n-217.101.72.242:8333\n-217.145.81.229:8333\n-217.168.143.169:8333\n-217.169.7.111:8333\n-217.182.192.7:8333\n-219.88.232.229:8333\n-219.113.244.52:8333\n-220.130.128.58:8333\n-220.244.225.239:8333\n-221.141.3.12:8333\n-222.166.176.99:8333\n-223.252.173.147:8333\n-[2001:0:4137:9e76:1025:4e5:acb0:22cd]:8333\n-[2001:0:4137:9e76:1078:18a6:5d2c:2461]:8333\n-[2001:0:4137:9e76:10ec:236a:bd3b:f3c0]:8333\n-[2001:0:4137:9e76:186d:3f17:b7ad:95cf]:8333\n-[2001:0:4137:9e76:1870:242:ac03:aaf9]:8333\n-[2001:0:4137:9e76:18a6:1102:2abf:eb70]:8333\n-[2001:0:4137:9e76:1ce5:248c:4ff5:2b1d]:8333\n-[2001:0:4137:9e76:200f:156a:bc77:3acd]:8333\n-[2001:0:4137:9e76:2418:19d1:cddc:b1af]:8333\n-[2001:0:4137:9e76:2857:3d78:aaf8:eb28]:8333\n-[2001:0:4137:9e76:28b2:1b84:64fb:2d6a]:8333\n-[2001:0:4137:9e76:2c70:d51:d046:1209]:8333\n-[2001:0:4137:9e76:2cac:2fcf:46bb:be0d]:8333\n-[2001:0:4137:9e76:305e:20ee:a94f:6f69]:8333\n-[2001:0:4137:9e76:30cd:849:adfe:6e67]:8333\n-[2001:0:4137:9e76:345b:f12:ae1e:2948]:8333\n-[2001:0:4137:9e76:3c40:146e:9741:5a3a]:8333\n-[2001:0:4137:9e76:3c9e:3c3e:9d6e:7340]:8333\n-[2001:0:4137:9e76:499:29a8:d047:7ea1]:8333\n-[2001:0:4137:9e76:51:24:81b2:59e3]:8333\n-[2001:0:4137:9e76:889:2d7c:b61b:bf0d]:8333\n-[2001:0:4137:9e76:c9f:379c:add2:c938]:8333\n-[2001:0:4137:9e76:cd6:2eb4:b82b:addb]:8333\n-[2001:0:4137:9e76:cf0:2e3a:b29d:6207]:8333\n-[2001:0:53aa:64c:1485:fbf9:a798:1ffe]:8333\n-[2001:0:53aa:64c:59:617f:a10d:e0]:8333\n-[2001:0:5ef5:79fb:1020:2cd0:4750:eb12]:8333\n-[2001:0:5ef5:79fb:1036:1d50:3881:6930]:8333\n-[2001:0:5ef5:79fb:10a4:27d8:9c0a:cfa9]:8333\n-[2001:0:5ef5:79fb:10ae:5a8:524b:dcc4]:8333\n-[2001:0:5ef5:79fb:1892:3e3a:3f74:affa]:8333\n-[2001:0:5ef5:79fb:1c95:1a60:d1f5:215b]:8333\n-[2001:0:5ef5:79fb:200b:16ef:b9cf:9860]:8333\n-[2001:0:5ef5:79fb:28e4:fbff:3237:992]:8333\n-[2001:0:5ef5:79fb:2ce8:1d9e:b3bf:b53e]:8333\n-[2001:0:5ef5:79fb:300a:2e20:4750:eb12]:8333\n-[2001:0:5ef5:79fb:30a2:1ad9:5324:836a]:8333\n-[2001:0:5ef5:79fb:3409:1996:bcac:241f]:8333\n-[2001:0:5ef5:79fb:344b:2bd4:bb3e:e26]:8333\n-[2001:0:5ef5:79fb:34b3:11db:e7da:d461]:8333\n-[2001:0:5ef5:79fb:3839:2e0c:ba30:288e]:8333\n-[2001:0:5ef5:79fb:3880:ef4:b5f0:ee4d]:8333\n-[2001:0:5ef5:79fb:389f:52:9c0c:1f41]:8333\n-[2001:0:5ef5:79fb:3c73:304a:9d8b:99d5]:8333\n-[2001:0:5ef5:79fb:3cac:33e4:39ca:38c]:8333\n-[2001:0:5ef5:79fb:6f:3667:5398:538f]:8333\n-[2001:0:5ef5:79fb:88c:3e6:9454:3331]:8333\n-[2001:0:5ef5:79fb:89:3b55:9fcc:8e66]:8333\n-[2001:0:5ef5:79fb:c9b:3d65:bdf4:5d58]:8333\n-[2001:0:5ef5:79fb:cb7:8cc:b8ee:6806]:8333\n-[2001:0:5ef5:79fd:24f6:37b5:b9d2:2aa7]:8333\n-[2001:0:5ef5:79fd:3c63:82e:aabc:bd39]:8333\n-[2001:0:5ef5:79fd:3cf5:2eb7:c966:561d]:8333\n-[2001:0:5ef5:79fd:cf4:28e2:aabd:b766]:8333\n-[2001:0:9d38:6ab8:10f6:453:3ca4:1a8e]:8333\n-[2001:0:9d38:6ab8:14dd:298b:431c:bfec]:8333\n-[2001:0:9d38:6ab8:3051:1561:b62d:73a5]:8333\n-[2001:0:9d38:6ab8:3467:ffa:b612:e9c6]:8333\n-[2001:0:9d38:6ab8:8e8:1e26:e8e3:eed7]:8333\n-[2001:0:9d38:6ab8:c82:37b3:47ee:3ae2]:8333\n-[2001:0:9d38:6abd:1052:3cd8:a89b:e67]:8333\n-[2001:0:9d38:6abd:144d:23f3:abcb:8bcb]:8333\n-[2001:0:9d38:6abd:1c2e:31df:adf1:e616]:8333\n-[2001:0:9d38:6abd:1c41:213b:facc:9c6b]:8333\n-[2001:0:9d38:6abd:2093:12b5:8cbf:4f57]:8333\n-[2001:0:9d38:6abd:243a:2394:fd91:712c]:8333\n-[2001:0:9d38:6abd:2833:9f8:c94c:6881]:8333\n-[2001:0:9d38:6abd:2c84:29d3:ae5a:f6f0]:8333\n-[2001:0:9d38:6abd:2ce4:d50:cb22:3672]:8333\n-[2001:0:9d38:6abd:3824:816:c30d:e9d4]:8333\n-[2001:0:9d38:6abd:389a:24e9:cb5c:a1cd]:8333\n-[2001:0:9d38:6abd:38bd:88f:2193:4932]:8333\n-[2001:0:9d38:6abd:3c4f:cb1:d65b:d775]:8333\n-[2001:0:9d38:6abd:3c51:280b:b1e9:ffd]:8333\n-[2001:0:9d38:6abd:3c5a:2e2:2193:4932]:8333\n-[2001:0:9d38:6abd:3c5e:3ebf:3dc0:703a]:8333\n-[2001:0:9d38:6abd:4c9:12fc:d1d9:dc21]:8333\n-[2001:0:9d38:6abd:6e:34e7:d0a7:6772]:8333\n-[2001:0:9d38:6abd:8de:1f29:2aea:f96f]:8333\n-[2001:0:9d38:6abd:c5f:2674:a467:787c]:8333\n-[2001:0:9d38:6abd:cc0:23a4:ad7c:c998]:8333\n-[2001:0:9d38:78cf:20c0:2097:d188:9c3b]:8333\n-[2001:0:9d38:78cf:2420:dda:4ff6:8794]:8333\n-[2001:0:9d38:78cf:2892:fcb:26b2:22ac]:8333\n-[2001:0:9d38:78cf:3020:1ad7:26b2:22ac]:8333\n-[2001:0:9d38:78cf:30ae:211b:e717:7788]:8333\n-[2001:0:9d38:78cf:30d0:6edd:a418:a9e9]:8333\n-[2001:0:9d38:78cf:30d9:3278:b004:65a7]:8333\n-[2001:0:9d38:78cf:387a:17d5:dacb:bdf1]:8333\n-[2001:0:9d38:78cf:3c38:c41:433c:7b87]:8333\n-[2001:0:9d38:78cf:467:193:a8b0:a122]:8333\n-[2001:0:9d38:78cf:c65:fb96:97d2:a9b0]:8333\n-[2001:0:9d38:78cf:c9f:2633:d169:9999]:8333\n-[2001:0:9d38:78cf:ce2:aba:d120:90db]:8333\n-[2001:0:9d38:90d7:105d:26f2:a241:7339]:8333\n-[2001:0:9d38:90d7:1062:3f95:e065:fc21]:8333\n-[2001:0:9d38:90d7:10a6:19f6:ab95:ebcb]:8333\n-[2001:0:9d38:90d7:14e2:22cb:738f:9489]:8333\n-[2001:0:9d38:90d7:18fb:3da9:893d:1d57]:8333\n-[2001:0:9d38:90d7:1cc3:2534:e020:53fa]:8333\n-[2001:0:9d38:90d7:206d:2b34:d0cb:9de8]:8333\n-[2001:0:9d38:90d7:20cb:2cb:b9a7:ca5e]:8333\n-[2001:0:9d38:90d7:245c:2753:4382:704b]:8333\n-[2001:0:9d38:90d7:24d6:225f:793b:bf5]:8333\n-[2001:0:9d38:90d7:24da:8f0:bbf9:9c93]:8333\n-[2001:0:9d38:90d7:28a2:107b:438e:b08d]:8333\n-[2001:0:9d38:90d7:2c16:d58:b381:b61]:8333\n-[2001:0:9d38:90d7:2c68:3068:cb59:3be7]:8333\n-[2001:0:9d38:90d7:2c90:3855:b94f:c926]:8333\n-[2001:0:9d38:90d7:2ca2:3592:c111:dd82]:8333\n-[2001:0:9d38:90d7:2cce:1f6e:b381:8605]:8333\n-[2001:0:9d38:90d7:3435:3915:2bcc:6cc7]:8333\n-[2001:0:9d38:90d7:3438:2b9f:ad57:a721]:8333\n-[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333\n-[2001:0:9d38:90d7:38c4:37af:ab0a:f5ef]:8333\n-[2001:0:9d38:90d7:3a:39fd:a43b:5591]:8333\n-[2001:0:9d38:90d7:3c9d:2a45:d537:3bd6]:8333\n-[2001:0:9d38:90d7:3cfb:2cf5:5254:4d1e]:8333\n-[2001:0:9d38:90d7:43f:337:adb4:6310]:8333\n-[2001:0:9d38:90d7:493:995:d2e9:39be]:8333\n-[2001:0:9d38:90d7:5b:ce3:b275:92ab]:8333\n-[2001:0:9d38:90d7:8a8:59d:d0cb:d585]:8333\n-[2001:0:9d38:90d7:c8e:1ba0:c5a9:dace]:8333\n-[2001:0:9d38:90d7:cdb:365f:2302:f729]:8333\n-[2001:0:9d38:90d7:cf5:222e:893e:716c]:8333\n-[2001:0:9d38:90d7:d6:1085:b8dd:41c2]:8333\n-[2001:0:9d38:953c:101a:23b3:6b98:f888]:8333\n-[2001:0:9d38:953c:1805:f38:3eb2:2121]:8333\n-[2001:0:9d38:953c:1858:16f9:3833:da19]:8333\n-[2001:0:9d38:953c:18ea:2735:e73d:adc5]:8333\n-[2001:0:9d38:953c:1c44:2b70:9de7:a7cc]:8333\n-[2001:0:9d38:953c:200a:3f95:bb7c:c09f]:8333\n-[2001:0:9d38:953c:200c:3473:b85d:ddd]:8333\n-[2001:0:9d38:953c:200f:5a0:47c6:5507]:8333\n-[2001:0:9d38:953c:2097:204a:47c5:5881]:8333\n-[2001:0:9d38:953c:248f:24cd:aaf5:dee3]:8333\n-[2001:0:9d38:953c:287d:168e:3caf:47af]:8333\n-[2001:0:9d38:953c:28c1:58d:b721:94c1]:8333\n-[2001:0:9d38:953c:2c31:30a3:39d3:528]:8188\n-[2001:0:9d38:953c:2c3d:309b:d2db:8288]:8333\n-[2001:0:9d38:953c:2c47:1b36:52c1:3c73]:8333\n-[2001:0:9d38:953c:304a:10e1:b739:822a]:8333\n-[2001:0:9d38:953c:30a3:29fd:33f6:eaab]:8333\n-[2001:0:9d38:953c:3427:859b:b525:1069]:8333\n-[2001:0:9d38:953c:3459:2541:3651:d675]:8333\n-[2001:0:9d38:953c:4f5:9c88:af91:d3d3]:8333\n-[2001:0:9d38:953c:cd1:1d54:b80a:42f4]:8333\n-[2001:0:9d38:953c:cfa:37e6:9d8e:7474]:8333\n-[2001:13d8:1c01:2000:2470::1]:8333\n-[2001:1470:fffd:202c:225:90ff:fe8f:5f62]:8333\n-[2001:14ba:200:0:543c:42ce:a48b:b0d0]:8333\n-[2001:14ba:2fc:700:41b2:df51:efd8:f581]:8333\n-[2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333\n-[2001:19f0:5:749:5400:ff:fe71:c3fc]:8333\n-[2001:19f0:5:bc:5400:ff:fe3b:9339]:8333\n-[2001:19f0:7402:42c:5400:ff:fe6c:b9b8]:8333\n-[2001:1af8:4010:a08f:f811:e5f0:3f63:e753]:8333\n-[2001:1af8:4010:a094:3333::8c38]:8333\n-[2001:1af8:4070:a016:3333::5afb]:8333\n-[2001:1af8:4700:a071:4444::e26e]:8333\n-[2001:1bc8:1a0:590e:2e0:f4ff:fe16:3a39]:8333\n-[2001:2040:77::89]:8333\n-[2001:288:1001:107:294e:5581:74bd:42f9]:8333\n-[2001:3c8:c103:a001::48]:8333\n-[2001:4128:6135:10:20c:29ff:fe69:9e81]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n-[2001:4178:6:1427:62:116:188:85]:8333\n-[2001:41d0:1004:20f0::]:8333\n-[2001:41d0:1008:2752::]:8333\n-[2001:41d0:1:4722::1]:8333\n-[2001:41d0:1:6f57::1]:8333\n-[2001:41d0:1:7353::1]:8333\n-[2001:41d0:1:7469::1]:8333\n-[2001:41d0:1:7d09::1]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:c129::1]:8333\n-[2001:41d0:1:d227::]:8333\n-[2001:41d0:1:e13b::1]:8333\n-[2001:41d0:1:e623::1]:8333\n-[2001:41d0:2:16be::1]:8333\n-[2001:41d0:2:203c::1]:8333\n-[2001:41d0:2:3242::]:8333\n-[2001:41d0:2:8a0f::]:8333\n-[2001:41d0:2:8c65::]:8333\n-[2001:41d0:2:8d13::]:8333\n-[2001:41d0:2:9459::]:8333\n-[2001:41d0:2:950a:ffff:ffff:0:3]:8333\n-[2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:a212::]:8333\n-[2001:41d0:2:a232::]:8333\n-[2001:41d0:2:ab1c::]:8333\n-[2001:41d0:2:bf2a::]:8333\n-[2001:41d0:2:c793::]:8333\n-[2001:41d0:302:1000::fa25]:8333\n-[2001:41d0:303:1907::]:8333\n-[2001:41d0:52:d00::6e2]:8333\n-[2001:41d0:52:d00::6e3]:8333\n-[2001:41d0:8:1b29::]:8333\n-[2001:41d0:8:3d4b::1]:8333\n-[2001:41d0:8:4d4d::1]:8333\n-[2001:41d0:8:7a38::1]:8333\n-[2001:41d0:8:8f46::1]:8333\n-[2001:41d0:8:ba87::1]:8333\n-[2001:41d0:8:bd45::1]:8333\n-[2001:41d0:8:bed3::]:8333\n-[2001:41d0:8:c67c::]:8333\n-[2001:41d0:8:d844:1337::1017]:8333\n-[2001:41d0:8:ddb::1]:8333\n-[2001:41d0:8:ddf::1]:8333\n-[2001:41d0:8:de3d::1]:8333\n-[2001:41d0:8:e3e4::1]:8333\n-[2001:41d0:a:4e3f::1c7d:6b01]:8333\n-[2001:41d0:a:635b::1]:8333\n-[2001:41d0:a:6810::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:6fd0::]:8333\n-[2001:41d0:a:fac7::1]:8333\n-[2001:41d0:d:111c::]:8333\n-[2001:41d0:d:2ac8::]:8333\n-[2001:41d0:e:1388::1]:8333\n-[2001:41f0:61:0:72f3:95ff:fe09:7521]:8333\n-[2001:41f0:61::7]:8333\n-[2001:470:1f07:151c:baac:6fff:feb7:3ba9]:8333\n-[2001:470:1f0b:8c4::5]:8333\n-[2001:470:1f0b:967::11]:8333\n-[2001:470:1f15:11f8::10]:8333\n-[2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333\n-[2001:470:1f15:f28::3]:8333\n-[2001:470:1f1a:172::2]:8333\n-[2001:470:1f1c:b07::2]:8333\n-[2001:470:1f1d:3a9::10]:8333\n-[2001:470:25:482::2]:8333\n-[2001:470:28:365::4]:8333\n-[2001:470:754f:42::17a]:8333\n-[2001:470:7:b74::2]:8333\n-[2001:470:7dda:1::1]:8333\n-[2001:470:8:c70:20c:29ff:fe6a:8fdc]:8333\n-[2001:470:8:c70::54]:8333\n-[2001:470:a:c13::2]:8333\n-[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n-[2001:470:dbf2:aaaa::b17:c01c]:8333\n-[2001:470:f457:8000::a6]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n-[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n-[2001:4ba0:cafe:13c0::1]:8333\n-[2001:4ba0:cafe:418::1]:8333\n-[2001:558:6045:23:1830:896c:d901:190d]:8333\n-[2001:67c:1220:80c::93e5:dd2]:8333\n-[2001:67c:2128:ffff:6062:36ff:fe30:6532]:8333\n-[2001:8d8:923:8400::87:ebd]:8333\n-[2001:981:4452:1::100]:8333\n-[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n-[2001:981:bdbd:1:c506:7d38:4b47:da15]:8333\n-[2001:985:79af:20::35]:8333\n-[2001:bc8:225f:10e:505:6573:7573:d0a]:8333\n-[2001:bc8:323c:100::53]:8333\n-[2001:bc8:323c:100::80:4]:8333\n-[2001:bc8:323c:100::cafe]:8333\n-[2001:bc8:3680:4242::1]:8333\n-[2001:bc8:399f:f000::1]:8333\n-[2002:1e2:5587::1e2:5587]:8333\n-[2002:1e2:5588::1e2:5588]:8333\n-[2002:2a33:21c4::2a33:21c4]:8333\n-[2002:2e04:784b::2e04:784b]:8333\n-[2002:2ebc:2c14::16]:8333\n-[2002:2f5a:3c1c::2f5a:3c1c]:10011\n-[2002:2f5a:562a::2f5a:562a]:8333\n-[2002:2f5b:a5f9::2f5b:a5f9]:8333\n-[2002:3141:28c::3141:28c]:8333\n-[2002:323f:a2f2::323f:a2f2]:8333\n-[2002:323f:fbd::323f:fbd]:8333\n-[2002:33ff:69a0::1]:8333\n-[2002:3e6a:106f::3e6a:106f]:8333\n-[2002:3e70:bbc::3e70:bbc]:8333\n-[2002:3e7a:6727::3e7a:6727]:8333\n-[2002:3f62:e6bb::3f62:e6bb]:8333\n-[2002:4540:4b30::4540:4b30]:8333\n-[2002:4e6b:c745::1]:8333\n-[2002:5052:4d8a::5052:4d8a]:8333\n-[2002:51a9:9cc9::51a9:9cc9]:8333\n-[2002:54fb:cb05::1]:8333\n-[2002:5bc2:5428::5bc2:5428]:8333\n-[2002:5bce:1253::5bce:1253]:8333\n-[2002:5bdb:19e8::5bdb:19e8]:8333\n-[2002:5c3f:3912::5c3f:3912]:8333\n-[2002:5dbd:91a9::5dbd:91a9]:8333\n-[2002:5dbe:8cc6::5dbe:8cc6]:8333\n-[2002:5fd3:8944::5fd3:8944]:8333\n-[2002:65c8:a018::65c8:a018]:8333\n-[2002:6750:a839::6750:a839]:8333\n-[2002:67fa:44b::67fa:44b]:8333\n-[2002:6a0e:3ea8::6a0e:3ea8]:10011\n-[2002:6a0f:2497::6a0f:2497]:8333\n-[2002:6dec:5ac7::6dec:5ac7]:8333\n-[2002:704a:d6d4::704a:d6d4]:9997\n-[2002:7237:fcf6::7237:fcf6]:20188\n-[2002:76b2:7f40::76b2:7f40]:8333\n-[2002:7819:7e80::7819:7e80]:7743\n-[2002:781b:8db8::781b:8db8]:8333\n-[2002:7b38:cd00::7b38:cd00]:8333\n-[2002:ac52:b854::ac52:b854]:8333\n-[2002:b610:1ca3::b610:1ca3]:8333\n-[2002:b946:694a::b946:694a]:8339\n-[2002:b994:9167::b994:9167]:8333\n-[2002:bc28:6b92::bc28:6b92]:8333\n-[2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:c338:3f0a::c338:3f0a]:8333\n-[2002:d1b1:5615::d1b1:5615]:8333\n-[2002:d2d3:6da5::d2d3:6da5]:8333\n-[2002:d917:2b1::d917:2b1]:8333\n-[2002:db71:f434::db71:f434]:8333\n-[2003:a:36f:4f01::1]:8333\n-[2003:a:37f:ef4f:dead:babe:b00b:beef]:8333\n-[2400:8901::f03c:91ff:fe2c:63d8]:8333\n-[2400:8902::f03c:91ff:fed5:9d8d]:8333\n-[2401:2500:203:10:153:120:156:83]:8333\n-[2401:a400:3200:5600:14ee:f361:4bdc:1f7c]:8333\n-[2402:1f00:8100:36::]:8333\n-[2403:4200:403:2::ff]:8333\n-[2405:9800:b440:947f:59a5:f379:1876:858c]:8333\n-[2405:aa00:2::40]:8333\n-[2406:da14:445:5201::4]:8333\n-[2406:da18:f7c:4351:1a58:81fe:6ed0:1103]:8333\n-[2406:da18:f7c:4351:22aa:2585:fe88:7d58]:8333\n-[2406:da18:f7c:4351:2674:33bb:25d6:cbba]:8333\n-[2406:da18:f7c:4351:2e19:a8c7:a36a:bde0]:8333\n-[2406:da18:f7c:4351:3cc8:43d:fbcc:5067]:8333\n-[2406:da18:f7c:4351:5228:2b53:bb9a:edf5]:8333\n-[2406:da18:f7c:4351:5729:102:998c:d41a]:8333\n-[2406:da18:f7c:4351:591b:4881:3986:3703]:8333\n-[2406:da18:f7c:4351:59b9:b50:f47f:b560]:8333\n-[2406:da18:f7c:4351:61f2:cfb0:8c45:5fdd]:8333\n-[2406:da18:f7c:4351:6356:68e0:73fc:ac0b]:8333\n-[2406:da18:f7c:4351:660e:f6bc:3563:ba8e]:8333\n-[2406:da18:f7c:4351:691:9e:f2df:227d]:8333\n-[2406:da18:f7c:4351:721c:83d2:6765:4300]:8333\n-[2406:da18:f7c:4351:7237:9be:4601:bc15]:8333\n-[2406:da18:f7c:4351:7a3b:c203:fd11:6c7d]:8333\n-[2406:da18:f7c:4351:7a74:a80e:889a:ba42]:8333\n-[2406:da18:f7c:4351:7ee3:a181:f25c:fa79]:8333\n-[2406:da18:f7c:4351:8a25:9084:140:4549]:8333\n-[2406:da18:f7c:4351:8bc0:c6fd:ecfb:f074]:8333\n-[2406:da18:f7c:4351:91ce:d0ba:1b9e:c27b]:8333\n-[2406:da18:f7c:4351:9336:44e7:84b4:85b9]:8333\n-[2406:da18:f7c:4351:936c:c3b9:a1d0:848]:8333\n-[2406:da18:f7c:4351:93ef:1eef:65c8:766d]:8333\n-[2406:da18:f7c:4351:94e0:5b27:78c2:5111]:8333\n-[2406:da18:f7c:4351:9815:a202:18a3:2a36]:8333\n-[2406:da18:f7c:4351:9e1b:135c:7472:9d9]:8333\n-[2406:da18:f7c:4351:9f84:278:68f5:b8ea]:8333\n-[2406:da18:f7c:4351:a062:493f:a6f8:ca75]:8333\n-[2406:da18:f7c:4351:a192:b98:3066:8f11]:8333\n-[2406:da18:f7c:4351:a1cb:2f19:4a54:38c9]:8333\n-[2406:da18:f7c:4351:a4a2:4c9:c43a:98ae]:8333\n-[2406:da18:f7c:4351:a7e9:cd48:fa90:46d3]:8333\n-[2406:da18:f7c:4351:a88:99:6671:fce4]:8333\n-[2406:da18:f7c:4351:abe1:2e48:eb97:2ab5]:8333\n-[2406:da18:f7c:4351:acf5:2b21:5d2a:6b31]:8333\n-[2406:da18:f7c:4351:b51f:8966:74a5:6c53]:8333\n-[2406:da18:f7c:4351:b8e3:f3ca:e412:daa5]:8333\n-[2406:da18:f7c:4351:ba7c:6da8:da59:b1b6]:8333\n-[2406:da18:f7c:4351:be04:6f8e:8f93:c555]:8333\n-[2406:da18:f7c:4351:c82d:2a0b:31a5:e28d]:8333\n-[2406:da18:f7c:4351:c993:eb06:bd2c:1e65]:8333\n-[2406:da18:f7c:4351:d4b9:bff8:c4d4:1e05]:8333\n-[2406:da18:f7c:4351:d70d:a73d:1ddd:439e]:8333\n-[2406:da18:f7c:4351:e103:f456:b296:9f29]:8333\n-[2406:da18:f7c:4351:ea3b:27ec:7c2:aebc]:8333\n-[2406:da18:f7c:4351:f62c:5013:379b:363e]:8333\n-[240b:10:ca20:f0:224:e8ff:fe1f:60d9]:8333\n-[240b:250:1e0:2400:b9ef:8fe3:a69a:7378]:8333\n-[2600:1f14:34a:fe00:13f4:ceb6:a9db:4f47]:8333\n-[2600:1f14:34a:fe00:2550:9366:a5d9:78a5]:8333\n-[2600:1f14:34a:fe00:27d:6ed:7c8d:7bee]:8333\n-[2600:1f14:34a:fe00:2ed6:8a19:4eb:36c1]:8333\n-[2600:1f14:34a:fe00:34c7:2e9e:e60e:f823]:8333\n-[2600:1f14:34a:fe00:38de:442:72df:6346]:8333\n-[2600:1f14:34a:fe00:3a1e:878f:991a:9582]:8333\n-[2600:1f14:34a:fe00:3d88:1805:54e3:f4c8]:8333\n-[2600:1f14:34a:fe00:3f3e:58bd:ec82:5dac]:8333\n-[2600:1f14:34a:fe00:449a:9515:8436:f407]:8333\n-[2600:1f14:34a:fe00:4f84:277f:e64d:1f06]:8333\n-[2600:1f14:34a:fe00:5229:de84:8226:7257]:8333\n-[2600:1f14:34a:fe00:5743:42c3:951b:e97a]:8333\n-[2600:1f14:34a:fe00:5a29:85b:86b5:fa0e]:8333\n-[2600:1f14:34a:fe00:5de8:81e:6d79:330b]:8333\n-[2600:1f14:34a:fe00:5fca:ad1e:5b9c:5265]:8333\n-[2600:1f14:34a:fe00:68c4:ca1b:813e:1bce]:8333\n-[2600:1f14:34a:fe00:6:de9e:7b5e:a558]:8333\n-[2600:1f14:34a:fe00:6c72:1fcd:433:dc97]:8333\n-[2600:1f14:34a:fe00:77ee:629f:bc13:fb4f]:8333\n-[2600:1f14:34a:fe00:79d0:85d6:516f:3293]:8333\n-[2600:1f14:34a:fe00:81:422f:9ef3:4579]:8333\n-[2600:1f14:34a:fe00:822b:5f05:ec8d:48c6]:8333\n-[2600:1f14:34a:fe00:82a:76a2:fdc9:845e]:8333\n-[2600:1f14:34a:fe00:83ca:cef6:e04c:50c0]:8333\n-[2600:1f14:34a:fe00:8ba2:a36c:8687:d5aa]:8333\n-[2600:1f14:34a:fe00:8c80:5c67:3b47:90b3]:8333\n-[2600:1f14:34a:fe00:8eb8:f47f:6d53:e3ae]:8333\n-[2600:1f14:34a:fe00:989c:f8f8:a922:1b9a]:8333\n-[2600:1f14:34a:fe00:98c9:1eb3:ea12:a8f0]:8333\n-[2600:1f14:34a:fe00:9ee5:a8f6:6b2a:866e]:8333\n-[2600:1f14:34a:fe00:a46b:7bd5:629f:f75c]:8333\n-[2600:1f14:34a:fe00:a627:8299:8784:d439]:8333\n-[2600:1f14:34a:fe00:ad0b:955e:b4e5:d97d]:8333\n-[2600:1f14:34a:fe00:ae82:7117:9d69:7c86]:8333\n-[2600:1f14:34a:fe00:ccee:365a:43f8:b871]:8333\n-[2600:1f14:34a:fe00:d5ee:a3e2:2f85:e593]:8333\n-[2600:1f14:34a:fe00:d5f0:1fe0:6bd5:18a8]:8333\n-[2600:1f14:34a:fe00:e4a7:5aba:af87:4cdb]:8333\n-[2600:1f14:34a:fe00:e8e5:2d0:fb6f:2f5]:8333\n-[2600:1f14:34a:fe00:e9ef:4690:a5ac:92be]:8333\n-[2600:1f14:34a:fe00:efba:2260:6997:fcf7]:8333\n-[2600:1f14:34a:fe00:f107:2d08:c67:e5dd]:8333\n-[2600:1f14:34a:fe00:f1b9:88fb:f3db:a86e]:8333\n-[2600:1f14:34a:fe00:f79c:17b7:6f75:95b7]:8333\n-[2600:1f14:6ae:d900:6550:3fc5:e074:a72c]:8333\n-[2600:1f16:625:e00:1243:38b3:caa:d62e]:8333\n-[2600:1f16:625:e00:166d:a956:1041:f97d]:8333\n-[2600:1f16:625:e00:35f2:2428:fc57:d638]:8333\n-[2600:1f16:625:e00:3c75:333e:b7f:8cc0]:8333\n-[2600:1f16:625:e00:3fbf:31f:1b57:8b18]:8333\n-[2600:1f16:625:e00:5617:7575:379:a8cc]:8333\n-[2600:1f16:625:e00:58fa:fce6:30:a5dc]:8333\n-[2600:1f16:625:e00:5e74:70dc:af78:6b77]:8333\n-[2600:1f16:625:e00:7036:f651:2ee:39cd]:8333\n-[2600:1f16:625:e00:7fc:9004:e7be:ffe2]:8333\n-[2600:1f16:625:e00:814a:23f6:e996:5e64]:8333\n-[2600:1f16:625:e00:822c:a88b:f9c:57e3]:8333\n-[2600:1f16:625:e00:8314:b91e:a7ba:702]:8333\n-[2600:1f16:625:e00:88bb:ee9a:10de:12]:8333\n-[2600:1f16:625:e00:8c30:56f5:a29a:91de]:8333\n-[2600:1f16:625:e00:8fdf:6517:7718:8c42]:8333\n-[2600:1f16:625:e00:91fd:78b1:62a3:193]:8333\n-[2600:1f16:625:e00:930d:93ed:76a6:3285]:8333\n-[2600:1f16:625:e00:93c2:615f:a79a:c11f]:8333\n-[2600:1f16:625:e00:a780:8bc8:a1f6:d417]:8333\n-[2600:1f16:625:e00:a951:e663:4046:8c3a]:8333\n-[2600:1f16:625:e00:ab19:5fe3:f155:1371]:8333\n-[2600:1f16:625:e00:aefd:9cc7:d3:6e86]:8333\n-[2600:1f16:625:e00:b031:e86e:8604:324a]:8333\n-[2600:1f16:625:e00:b6e:4399:9dc2:6b45]:8333\n-[2600:1f16:625:e00:b7c7:58c6:21a1:fd41]:8333\n-[2600:1f16:625:e00:c169:6282:178c:27d6]:8333\n-[2600:1f16:625:e00:c94e:58b:bd35:d815]:8333\n-[2600:1f16:625:e00:caa5:7369:73a4:5711]:8333\n-[2600:1f16:625:e00:cd15:b9f2:6e3e:6fd1]:8333\n-[2600:1f16:625:e00:d6f3:775:66b7:3e92]:8333\n-[2600:1f16:625:e00:dbec:f7d9:e15:f8e0]:8333\n-[2600:1f16:625:e00:dbf4:4d41:594e:bc20]:8333\n-[2600:1f16:625:e00:e11b:4589:a0c3:9cc7]:8333\n-[2600:1f16:625:e00:ed68:15b0:3a97:be0c]:8333\n-[2600:1f16:625:e00:eef3:bce0:84ee:a98b]:8333\n-[2600:1f16:625:e00:ef3a:f66e:f059:d03f]:8333\n-[2600:1f16:625:e00:f67c:d398:5b6:d34f]:8333\n-[2600:1f16:625:e00:fe35:5099:3a8e:d123]:8333\n-[2600:1f18:64d9:1603:6f6f:eef9:b595:1958]:8333\n-[2600:3c00::f03c:91ff:fe84:d650]:8333\n-[2600:3c00::f03c:91ff:fe89:7438]:8333\n-[2600:3c00::f03c:91ff:fe91:3e49]:8333\n-[2600:3c00::f03c:91ff:febb:981e]:8333\n-[2600:3c01::f03c:91ff:fe69:89e9]:8333\n-[2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2600:3c03::f03c:91ff:fee0:233e]:8333\n-[2600:6c55:7200:24d:cf4:811c:7cb3:f7a7]:8333\n-[2600:8805:2400:14e:226:4aff:fe02:2ba4]:8333\n-[2601:18d:4600:3cc2:20e7:b3ff:fecf:a99]:8333\n-[2601:1c2:1702:5241:47d:4016:ec42:6705]:8333\n-[2601:441:4101:70cd:4e3:8e81:3250:1f0b]:8333\n-[2601:602:9980:f78:211:11ff:fec5:1ae]:8333\n-[2601:646:4103:179f:5809:1bff:fe55:6678]:8333\n-[2602:4c:323:b101:35a3:9de8:6984:ef56]:8333\n-[2602:ff62:104:ac1:8000::]:8333\n-[2602:ffc5:40::1:711e]:8333\n-[2602:ffc5::c30:1c75]:8333\n-[2604:a880:2:d0::17e9:2001]:8333\n-[2604:a880:2:d0::22f8:f001]:8333\n-[2604:a880:2:d0::22f9:1]:8333\n-[2604:a880:2:d0::22f9:c001]:8333\n-[2604:a880:2:d0::22f9:d001]:8333\n-[2604:a880:2:d0::22f9:e001]:8333\n-[2604:a880:2:d0::22fa:2001]:8333\n-[2604:a880:2:d0::22fa:3001]:8333\n-[2604:a880:400:d0::1684:5001]:8333\n-[2604:a880:400:d0::1ac4:b001]:8333\n-[2604:a880:400:d0::2004:4001]:8333\n-[2604:a880:400:d0::2004:5001]:8333\n-[2604:a880:400:d0::2004:6001]:8333\n-[2604:a880:400:d0::2004:c001]:8333\n-[2604:a880:400:d0::2004:d001]:8333\n-[2604:a880:400:d0::2004:e001]:8333\n-[2604:a880:400:d0::2004:f001]:8333\n-[2604:a880:400:d0::2005:1]:8333\n-[2604:a880:400:d0::2005:3001]:8333\n-[2604:a880:400:d0::261f:6001]:8333\n-[2604:a880:400:d0::28b8:5001]:8333\n-[2604:a880:400:d0::ad7:e001]:8333\n-[2605:4d00::50]:8333\n-[2605:5d80:2002::245]:8333\n-[2605:9880:0:953:225:90ff:fed2:c0b4]:8333\n-[2606:c380::215:17ff:feb3:3ec]:8333\n-[2607:1c00:a:6:3c1c:1b0d:ba4:8ea9]:8333\n-[2607:1c00:a:6::1000]:8333\n-[2607:4480:2:2000:250:56ff:fe86:6449]:8333\n-[2607:5300:120:671::]:8333\n-[2607:5300:120:962::]:8333\n-[2607:5300:201:2000::1:556]:8333\n-[2607:5300:203:118:3733::1414]:8333\n-[2607:5300:60:10aa::1]:8333\n-[2607:5300:60:1e83::]:8333\n-[2607:5300:60:1e83::1000]:8333\n-[2607:5300:60:1e83::2000]:8333\n-[2607:5300:60:2d0::1]:8333\n-[2607:5300:60:3ddf::]:8333\n-[2607:5300:60:3f3c::]:8333\n-[2607:5300:60:5428::]:8333\n-[2607:5300:60:ac0::1]:8333\n-[2607:5300:61:f4b::1]:8333\n-[2607:9000:0:1:5054:ff:fe5d:264e]:8333\n-[2607:f1c0:846:9a00::87:d00e]:8333\n-[2607:f2d8:4005:d:a8a2:eeff:fee0:a859]:8333\n-[2607:f948:0:1::1:40]:8333\n-[2607:fa18:3a01::50]:8333\n-[2607:fea8:3ca0:926::2]:8333\n-[2607:fea8:4da0:3b0::2]:8333\n-[2607:ff10:c5:502:225:90ff:fe32:d446]:8333\n-[2607:ff28:9005:1::2567:57e0]:8333\n-[2620:71:4000:0:192:30:120:110]:8333\n-[2620:b8:4000:1000::93:1]:8333\n-[2800:1a0::9]:8333\n-[2801:84:0:1034:76d4:35ff:fe7f:5033]:8333\n-[2a00:16d8:c::5b6a:c261]:8333\n-[2a00:1768:2001:24::148:218]:8333\n-[2a00:19e0:1:1:225:90ff:fea5:fc0]:8333\n-[2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333\n-[2a00:6340:2004:0:5054:ff:fe54:38c]:8333\n-[2a00:7b80:477:21::1c8c:83a6]:8333\n-[2a00:7c80:0:71::8]:8333\n-[2a00:7c80:0:97::7]:8333\n-[2a01:238:4363:4900:d85e:c1d9:2b32:61d0]:8333\n-[2a01:488:66:1000:53a9:22b:0:1]:8333\n-[2a01:488:67:1000:5bfa:5526:0:1]:8333\n-[2a01:488:67:1000:b01c:3379:0:1]:8333\n-[2a01:4d60:3:1:5::1]:8333\n-[2a01:4f8:10a:1d8f::2]:8333\n-[2a01:4f8:10a:1e81::2]:8333\n-[2a01:4f8:10a:2261::2]:8833\n-[2a01:4f8:10a:239c::2]:9002\n-[2a01:4f8:10a:294a::2]:8333\n-[2a01:4f8:10a:31d3::2]:8333\n-[2a01:4f8:10a:3fe6::2]:8333\n-[2a01:4f8:10a:b2e::2]:8333\n-[2a01:4f8:10b:12d7::2]:8333\n-[2a01:4f8:10b:d50::2]:8333\n-[2a01:4f8:10b:e2d::2]:8333\n-[2a01:4f8:10b:ee1::2]:8333\n-[2a01:4f8:110:5107::2]:8333\n-[2a01:4f8:110:5292::2]:8333\n-[2a01:4f8:110:536e::2]:8333\n-[2a01:4f8:120:43e4::2]:8333\n-[2a01:4f8:130:3332::2]:8333\n-[2a01:4f8:130:430b::2]:8333\n-[2a01:4f8:130:618e::2]:8333\n-[2a01:4f8:130:71d2::2]:8333\n-[2a01:4f8:130:7422::2]:8333\n-[2a01:4f8:131:33ad::2]:8333\n-[2a01:4f8:131:33ad:fea1::666]:8333\n-[2a01:4f8:131:3428::2]:8333\n-[2a01:4f8:140:1326::2]:8333\n-[2a01:4f8:140:524a::2]:8333\n-[2a01:4f8:140:6055::2]:8333\n-[2a01:4f8:140:7410::2]:8333\n-[2a01:4f8:140:931a::2]:8333\n-[2a01:4f8:141:2254::2]:8333\n-[2a01:4f8:141:22ae::2]:8333\n-[2a01:4f8:150:11d4::2]:8333\n-[2a01:4f8:150:70a4::2]:8333\n-[2a01:4f8:150:726b::2]:8333\n-[2a01:4f8:150:72ee::4202]:8333\n-[2a01:4f8:150:90ca::2]:8333\n-[2a01:4f8:151:30c9::2]:8333\n-[2a01:4f8:151:334d::3]:8333\n-[2a01:4f8:151:7175::2]:8333\n-[2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:636e::2]:8333\n-[2a01:4f8:161:7026::2]:8333\n-[2a01:4f8:162:2108::2]:8333\n-[2a01:4f8:162:3121::50]:8333\n-[2a01:4f8:162:424c::2]:8333\n-[2a01:4f8:171:1c1b::2]:8333\n-[2a01:4f8:171:1c3::2]:8333\n-[2a01:4f8:171:2258::2]:8333\n-[2a01:4f8:171:27d6::2]:8333\n-[2a01:4f8:171:2f28::2]:8333\n-[2a01:4f8:171:d23::2]:8333\n-[2a01:4f8:172:10da::2]:8333\n-[2a01:4f8:172:504::2]:8333\n-[2a01:4f8:173:1622::2]:8333\n-[2a01:4f8:173:42::2]:8333\n-[2a01:4f8:190:24eb::2]:8333\n-[2a01:4f8:190:528d::2]:8333\n-[2a01:4f8:190:61f3::2]:8333\n-[2a01:4f8:191:418f::2]:3333\n-[2a01:4f8:191:63b4:5000::1]:8333\n-[2a01:4f8:191:81b7::2]:8333\n-[2a01:4f8:191:8328::3]:8333\n-[2a01:4f8:192:4a5::2]:8333\n-[2a01:4f8:192:5230::2]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:32a6::2]:8333\n-[2a01:4f8:200:414e::2]:8333\n-[2a01:4f8:200:416a::2]:8333\n-[2a01:4f8:200:90c3::2]:8333\n-[2a01:4f8:201:148d::2]:8333\n-[2a01:4f8:201:2cc::2]:8333\n-[2a01:4f8:201:3e3::2]:8333\n-[2a01:4f8:201:53cc::2]:8333\n-[2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:202:3030::2]:8333\n-[2a01:4f8:202:31e3::2]:8333\n-[2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:202:6035::2]:8333\n-[2a01:4f8:210:5488::2]:8333\n-[2a01:4f8:211:1e17::2]:8333\n-[2a01:4f8:211:1ec5::2]:8333\n-[2a01:4f8:212:1826::2]:8333\n-[2a01:4f8:221:f59::2]:8333\n-[2a01:4f8:c0c:1026::2]:8333\n-[2a01:4f8:c0c:1028::2]:8333\n-[2a01:4f8:c0c:1029::2]:8333\n-[2a01:4f8:c0c:105f::2]:8333\n-[2a01:4f8:c0c:1064::2]:8333\n-[2a01:4f8:c0c:106b::2]:8333\n-[2a01:4f8:c0c:106d::2]:8333\n-[2a01:4f8:c0c:1070::2]:8333\n-[2a01:4f8:c0c:1105::2]:8333\n-[2a01:4f8:c0c:1106::2]:8333\n-[2a01:4f8:c0c:1134::2]:8333\n-[2a01:4f8:c0c:1135::2]:8333\n-[2a01:4f8:c0c:113c::2]:8333\n-[2a01:4f8:c0c:115c::2]:8333\n-[2a01:4f8:c0c:115e::2]:8333\n-[2a01:4f8:c0c:1170::2]:8333\n-[2a01:4f8:c0c:1172::2]:8333\n-[2a01:4f8:c0c:117b::2]:8333\n-[2a01:4f8:c0c:117c::2]:8333\n-[2a01:4f8:c0c:1180::2]:8333\n-[2a01:4f8:c0c:1181::2]:8333\n-[2a01:4f8:c0c:1185::2]:8333\n-[2a01:4f8:c0c:1186::2]:8333\n-[2a01:4f8:c0c:1187::2]:8333\n-[2a01:4f8:c0c:1188::2]:8333\n-[2a01:4f8:c0c:1189::2]:8333\n-[2a01:4f8:c0c:121::2]:8333\n-[2a01:4f8:c0c:122::2]:8333\n-[2a01:4f8:c0c:15a8::2]:8333\n-[2a01:4f8:c0c:1da4::2]:8333\n-[2a01:4f8:c0c:1ff7::2]:8333\n-[2a01:4f8:c0c:2262::2]:8333\n-[2a01:4f8:c0c:73d::2]:8333\n-[2a01:4f8:c0c:790::2]:8333\n-[2a01:4f8:c0c:7a8::2]:8333\n-[2a01:4f8:c0c:7a9::2]:8333\n-[2a01:4f8:c0c:7e9::2]:8333\n-[2a01:4f8:c0c:816::2]:8333\n-[2a01:4f8:c0c:817::2]:8333\n-[2a01:4f8:c0c:818::2]:8333\n-[2a01:4f8:c0c:820::2]:8333\n-[2a01:4f8:c0c:821::2]:8333\n-[2a01:4f8:c0c:822::2]:8333\n-[2a01:4f8:c0c:896::2]:8333\n-[2a01:4f8:c0c:8c6::2]:8333\n-[2a01:4f8:c0c:8c9::2]:8333\n-[2a01:4f8:c0c:8d1::2]:8333\n-[2a01:4f8:c0c:8d2::2]:8333\n-[2a01:4f8:c0c:8d9::2]:8333\n-[2a01:4f8:c0c:8da::2]:8333\n-[2a01:4f8:c0c:8dc::2]:8333\n-[2a01:4f8:c0c:8f1::2]:8333\n-[2a01:4f8:c0c:91e::2]:8333\n-[2a01:4f8:c0c:927::2]:8333\n-[2a01:4f8:c0c:939::2]:8333\n-[2a01:4f8:c0c:944::2]:8333\n-[2a01:4f8:c0c:951::2]:8333\n-[2a01:4f8:c0c:967::2]:8333\n-[2a01:4f8:c0c:96f::2]:8333\n-[2a01:4f8:c0c:97d::2]:8333\n-[2a01:4f8:c0c:982::2]:8333\n-[2a01:4f8:c0c:9fc::2]:8333\n-[2a01:4f8:c0c:b35::2]:8333\n-[2a01:4f8:c0c:b4c::2]:8333\n-[2a01:4f8:c0c:bfe::2]:8333\n-[2a01:4f8:c0c:c08::2]:8333\n-[2a01:4f8:c0c:c13::2]:8333\n-[2a01:4f8:c0c:c14::2]:8333\n-[2a01:4f8:c0c:c16::2]:8333\n-[2a01:4f8:c0c:c19::2]:8333\n-[2a01:4f8:c0c:c32::2]:8333\n-[2a01:4f8:c0c:c36::2]:8333\n-[2a01:4f8:c0c:c39::2]:8333\n-[2a01:4f8:c0c:c58::2]:8333\n-[2a01:4f8:c0c:c5e::2]:8333\n-[2a01:4f8:c0c:c70::2]:8333\n-[2a01:4f8:c0c:c72::2]:8333\n-[2a01:4f8:c0c:c79::2]:8333\n-[2a01:4f8:c0c:cb1::2]:8333\n-[2a01:4f8:c0c:cf5::2]:8333\n-[2a01:4f8:c0c:cff::2]:8333\n-[2a01:4f8:c0c:d0e::2]:8333\n-[2a01:4f8:c0c:d1b::2]:8333\n-[2a01:4f8:c0c:d67::2]:8333\n-[2a01:4f8:c0c:d68::2]:8333\n-[2a01:4f8:c0c:d81::2]:8333\n-[2a01:4f8:c0c:e2d::2]:8333\n-[2a01:4f8:c0c:e30::2]:8333\n-[2a01:4f8:c0c:e4f::2]:8333\n-[2a01:4f8:c0c:e5b::2]:8333\n-[2a01:4f8:c0c:e88::2]:8333\n-[2a01:4f8:c0c:f69::2]:8333\n-[2a01:4f8:c0c:f76::2]:8333\n-[2a01:4f8:c0c:f77::2]:8333\n-[2a01:4f8:c0c:f78::2]:8333\n-[2a01:4f8:c0c:f89::2]:8333\n-[2a01:4f8:c0c:f8a::2]:8333\n-[2a01:4f8:c0c:fd6::2]:8333\n-[2a01:4f8:c0c:fea::2]:8333\n-[2a01:4f8:c17:24ee::2]:8333\n-[2a01:4f8:c17:2c16::2]:8333\n-[2a01:4f8:c17:330f::2]:8333\n-[2a01:4f8:c17:34f0::2]:8333\n-[2a01:4f8:c17:3986::2]:8333\n-[2a01:4f8:c17:3b02::2]:8333\n-[2a01:4f8:c17:3d85::2]:8333\n-[2a01:4f8:c17:4271::2]:8333\n-[2a01:4f8:c17:5dc0::2]:8333\n-[2a01:4f8:c17:63a0::2]:8333\n-[2a01:4f8:c17:67f8::2]:8333\n-[2a01:4f8:c17:710b::2]:8333\n-[2a01:4f8:c17:e00::2]:8333\n-[2a01:680:10:10::1]:8333\n-[2a01:6f0:ffff:120::8dcb]:8333\n-[2a01:79d:b7dd:ffb4:5d86:70b8:fc7f:f253]:8333\n-[2a01:7a0:2:1374::4]:8333\n-[2a01:7a0:2:1374::5]:8333\n-[2a01:7a0:2:137c::3]:8333\n-[2a01:7c8:aaaa:373:5054:ff:feb3:2947]:8333\n-[2a01:7c8:aaaa:3a0:5054:ff:fe8c:974c]:8333\n-[2a01:7c8:aab0:4b7:910d:625e:a13e:c342]:8333\n-[2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n-[2a01:7c8:aab5:41e:5054:ff:fe38:f4fb]:8333\n-[2a01:7c8:aaba:343::8333]:8333\n-[2a01:7c8:aabc:18c:5054:ff:fefd:3b49]:8333\n-[2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333\n-[2a01:7e00::f03c:91ff:fe50:94b8]:8333\n-[2a01:8e01:b943:3a63:d250:99ff:fe1f:4fb2]:8333\n-[2a01:b2e0:2::40]:8333\n-[2a01:d0:0:1c::245]:8333\n-[2a01:d0:8fc3::2]:8333\n-[2a01:e34:ec29:e8d0:25c7:c1ce:b7a3:d238]:8333\n-[2a01:e34:ec4a:c2d0:1cf3:40d2:a79f:3901]:8333\n-[2a01:e34:eed7:6670:ec1b:bf7c:b012:6069]:8333\n-[2a01:e35:2433:e320:9c8e:6ff0:990f:f06e]:8333\n-[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a02:1205:5051:a640:d6ae:52ff:fea3:ac]:8333\n-[2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333\n-[2a02:168:6273::614]:8333\n-[2a02:180:6:1::18]:8333\n-[2a02:180:6:1::ed]:8333\n-[2a02:1811:b707:116:8c1f:c5be:bf3a:54df]:8333\n-[2a02:20c8:1422:1::a3]:8333\n-[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333\n-[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n-[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333\n-[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:7aa0:1201::bd4e:1219]:8333\n-[2a02:7aa0:1619::590:eba2]:8333\n-[2a02:7aa0:1619::a7a2:7e86]:8333\n-[2a02:c200:1:10:2:5:800:1]:8333\n-[2a02:c205:2002:2550::17]:8333\n-[2a02:c205:2008:272::1]:8333\n-[2a02:c205:2010:5484::1]:8333\n-[2a02:c205:3001:6710::1]:8333\n-[2a02:c205:3001:7714::2]:8333\n-[2a02:c205:3002:888::1]:8333\n-[2a02:c207:2002:9013::1]:8333\n-[2a02:c207:2008:3392::1]:8333\n-[2a02:c207:2008:8337::1]:8333\n-[2a02:c207:2009:213::1]:8333\n-[2a02:c207:2010:7751::1]:8333\n-[2a02:c207:2010:7986::1]:8333\n-[2a02:c207:2011:7829::1]:8333\n-[2a02:c207:2011:8299::1]:8333\n-[2a02:c207:2012:2133::1]:8333\n-[2a02:c207:2012:263::1]:8333\n-[2a02:c207:2012:2682::1]:8333\n-[2a02:c207:2012:3635::1]:8333\n-[2a02:c207:2012:4826::1]:8333\n-[2a02:c207:2012:5668::1]:8333\n-[2a02:c207:3001:5824::1]:8333\n-[2a02:c207:3001:7776::1]:8333\n-[2a02:c207:3002:621::1]:8333\n-[2a02:ce80:0:20::1]:8333\n-[2a03:2260:11e:301::8]:8333\n-[2a03:2260:11e:302::3]:8333\n-[2a03:4000:2:496::8]:8333\n-[2a03:4000:6:12e7::1]:8333\n-[2a03:4000:6:416c::53]:8333\n-[2a03:b0c0:3:d0::1219:6001]:8333\n-[2a03:b0c0:3:d0::1b99:c001]:8333\n-[2a03:b0c0:3:d0::1b99:e001]:8333\n-[2a03:b0c0:3:d0::1b9a:3001]:8333\n-[2a03:b0c0:3:d0::23f7:1001]:8333\n-[2a03:b0c0:3:d0::23f7:2001]:8333\n-[2a03:b0c0:3:d0::23f7:4001]:8333\n-[2a03:b0c0:3:d0::23f7:5001]:8333\n-[2a03:b0c0:3:d0::23f7:7001]:8333\n-[2a03:b0c0:3:d0::23f7:9001]:8333\n-[2a03:b0c0:3:d0::23fb:1001]:8333\n-[2a03:b0c0:3:d0::23fb:2001]:8333\n-[2a03:b0c0:3:d0::23fb:3001]:8333\n-[2a03:b0c0:3:d0::23fb:5001]:8333\n-[2a03:b0c0:3:d0::23fb:6001]:8333\n-[2a03:b0c0:3:d0::23fb:8001]:8333\n-[2a03:b0c0:3:d0::23ff:b001]:8333\n-[2a03:b0c0:3:d0::2400:1]:8333\n-[2a03:b0c0:3:d0::2400:3001]:8333\n-[2a03:b0c0:3:d0::2400:4001]:8333\n-[2a03:b0c0:3:d0::2400:e001]:8333\n-[2a03:b0c0:3:d0::2400:f001]:8333\n-[2a03:b0c0:3:d0::2401:e001]:8333\n-[2a03:b0c0:3:d0::2402:1]:8333\n-[2a03:b0c0:3:d0::2402:2001]:8333\n-[2a03:b0c0:3:d0::2402:8001]:8333\n-[2a03:b0c0:3:d0::2402:9001]:8333\n-[2a03:b0c0:3:d0::2402:b001]:8333\n-[2a03:b0c0:3:d0::2402:d001]:8333\n-[2a03:b0c0:3:d0::2402:e001]:8333\n-[2a03:b0c0:3:d0::2403:1001]:8333\n-[2a03:b0c0:3:d0::2403:2001]:8333\n-[2a03:b0c0:3:d0::2403:3001]:8333\n-[2a03:b0c0:3:d0::2403:4001]:8333\n-[2a03:b0c0:3:d0::2403:6001]:8333\n-[2a03:b0c0:3:d0::2403:a001]:8333\n-[2a03:b0c0:3:d0::2403:b001]:8333\n-[2a03:b0c0:3:d0::2403:e001]:8333\n-[2a03:b0c0:3:d0::2403:f001]:8333\n-[2a03:b0c0:3:d0::2404:1]:8333\n-[2a03:b0c0:3:d0::2404:3001]:8333\n-[2a03:b0c0:3:d0::2404:4001]:8333\n-[2a03:b0c0:3:d0::2404:6001]:8333\n-[2a03:b0c0:3:d0::2404:8001]:8333\n-[2a03:b0c0:3:d0::2404:9001]:8333\n-[2a03:b0c0:3:d0::2404:b001]:8333\n-[2a03:b0c0:3:d0::2405:2001]:8333\n-[2a03:b0c0:3:d0::2405:3001]:8333\n-[2a03:b0c0:3:d0::2405:8001]:8333\n-[2a03:b0c0:3:d0::2405:9001]:8333\n-[2a03:b0c0:3:d0::2405:a001]:8333\n-[2a03:b0c0:3:d0::44b8:9001]:8333\n-[2a03:b0c0:3:d0::44b8:e001]:8333\n-[2a03:b0c0:3:d0::44b8:f001]:8333\n-[2a03:b0c0:3:d0::44b9:1]:8333\n-[2a03:b0c0:3:d0::44b9:1001]:8333\n-[2a03:b0c0:3:d0::44b9:2001]:8333\n-[2a03:b0c0:3:d0::44b9:4001]:8333\n-[2a04:2180:0:2::94]:8333\n-[2a04:3542:1000:910:8492:b8ff:fe91:711d]:8333\n-[2a04:52c0:101:122::ba8e]:8333\n-[2a05:3580:d400:140d:da6e:826e:e771:4100]:8333\n-[2a06:9fc0:2a06:9fc0:2a06:9fc1:67c:e706]:8333\n-226eupdnaouu4h2v.onion:8333\n-2frgxpe5mheghyom.onion:8333\n-3ihjnsvwc3x6dp2o.onion:8333\n-3w77hrilg6q64opl.onion:8333\n-4ls4o6iszcd7mkfw.onion:8333\n-4p3abjxqppzxi7qi.onion:8333\n-546esc6botbjfbxb.onion:8333\n-5msftytzlsskr4ut.onion:8333\n-5ty6rxpgrkmdnk4a.onion:8333\n-akmqyuidrf56ip26.onion:8333\n-alhlegtjkdmbqsvt.onion:8333\n-bafk5ioatlgt7dgl.onion:8333\n-bup5n5e3kurvjzf3.onion:8333\n-cjygd7pu5lqkky5j.onion:8333\n-cyvpgt25274i5b7c.onion:8333\n-dekj4wacywpqsad3.onion:8333\n-dqpxwlpnv3z3hznl.onion:8333\n-drarzpycbtxwbcld.onion:8333\n-drp4pvejybx2ejdr.onion:8333\n-dxkmtmwiq7ddtgul.onion:8333\n-e6j57zkyibu2smad.onion:8333\n-ejcqevujcqltqn7d.onion:8333\n-eqgbt2ghfvsshbvo.onion:8333\n-fgizgkdnndilo6ka.onion:8333\n-fqxup4oev33eeidg.onion:8333\n-gb5ypqt63du3wfhn.onion:8333\n-ggdy2pb2avlbtjwq.onion:8333\n-hahhloezyfqh3hci.onion:8333\n-ihdv6bzz2gx72fs7.onion:8333\n-in7r5ieo7ogkxbne.onion:8333\n-kvd44sw7skb5folw.onion:8333\n-mn744hbioayn3ojs.onion:8333\n-ms4ntrrisfxzpvmy.onion:8333\n-n5lqwpjabqg62ihx.onion:8333\n-o4sl5na6jeqgi3l6.onion:8333\n-omjv24nbck4k5ud6.onion:8333\n-po3j2hfkmf7sh36o.onion:8333\n-psco6bxjewljrczx.onion:8333\n-qi5yr6lvlckzffor.onion:8333\n-qlv6py6hdtzipntn.onion:8333\n-qynmpgdbp23xyfnj.onion:8333\n-rhtawcs7xak4gi3t.onion:8333\n-rjacws757ai66lre.onion:8333\n-rjlnp3hwvrsmap6e.onion:8333\n-rkdvqcrtfv6yt4oy.onion:8333\n-rlafimkctvz63llg.onion:8333\n-rlj4ppok4dnsdu5n.onion:8333\n-seoskudzk6vn6mqz.onion:8333\n-tayqi57tfiy7x3vk.onion:8333\n-tchop676j6yppwwm.onion:8333\n-trrtyp3sirmwttyu.onion:8333\n-tx4zd7d5exonnblh.onion:8333\n-u4ecb7txxi6l3gix.onion:8333\n-umcxcmfycvejw264.onion:8333\n-v7xqd42ocemalurd.onion:8333\n-vb267mt3lnwfdmdb.onion:8333\n-vev3n5fxfrtqj6e5.onion:8333\n-visevrizz3quyagj.onion:8333\n-vpg6p5e5ln33dqtp.onion:8333\n-vr2ruasinafoy3fl.onion:8333\n-x6pthvd5x6abyfo7.onion:8333\n-xbwbzrspvav7u5ie.onion:8333\n-xfcevnql2chnawko.onion:8333\n-ycivnom44dmxx4ob.onion:8333\n-yzdvlv5daitafekn.onion:8333\n+31.220.60.129:29252\n+195.110.59.120:29252\n+"
      },
      {
        "sha": "43370d402e07e277317fed707f6d92f98e8ee1bf",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 9,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,11 +1,4 @@\n # List of fixed seed nodes for testnet\n \n-# Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n-\n+31.220.60.129\n+195.110.59.120"
      },
      {
        "sha": "e1b5e9caeed7111ff2e1786311440511a3983099",
        "filename": "contrib/spendfrom/spendfrom.py",
        "status": "added",
        "additions": 270,
        "deletions": 0,
        "changes": 270,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/spendfrom/spendfrom.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/spendfrom/spendfrom.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/spendfrom.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,270 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2013 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Use the raw transactions API to spend bitcoins received on particular addresses,\n+# and send any change back to that same address.\n+#\n+# Example usage:\n+#  spendfrom.py  # Lists available funds\n+#  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00\n+#\n+# Assumes it will talk to a bitcoind or Bitcoin-Qt running\n+# on localhost.\n+#\n+# Depends on jsonrpc\n+#\n+\n+from decimal import *\n+import getpass\n+import math\n+import os\n+import os.path\n+import platform\n+import sys\n+import time\n+from jsonrpc import ServiceProxy, json\n+\n+BASE_FEE=Decimal(\"0.001\")\n+\n+def check_json_precision():\n+    \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n+    n = Decimal(\"20000000.00000003\")\n+    satoshis = int(json.loads(json.dumps(float(n)))*1.0e8)\n+    if satoshis != 2000000000000003:\n+        raise RuntimeError(\"JSON encode/decode loses precision\")\n+\n+def determine_db_dir():\n+    \"\"\"Return the default location of the litecoin data directory\"\"\"\n+    if platform.system() == \"Darwin\":\n+        return os.path.expanduser(\"~/Library/Application Support/Litecoin/\")\n+    elif platform.system() == \"Windows\":\n+        return os.path.join(os.environ['APPDATA'], \"Litecoin\")\n+    return os.path.expanduser(\"~/.litecoin\")\n+\n+def read_bitcoin_config(dbdir):\n+    \"\"\"Read the litecoin.conf file from dbdir, returns dictionary of settings\"\"\"\n+    from ConfigParser import SafeConfigParser\n+\n+    class FakeSecHead(object):\n+        def __init__(self, fp):\n+            self.fp = fp\n+            self.sechead = '[all]\\n'\n+        def readline(self):\n+            if self.sechead:\n+                try: return self.sechead\n+                finally: self.sechead = None\n+            else:\n+                s = self.fp.readline()\n+                if s.find('#') != -1:\n+                    s = s[0:s.find('#')].strip() +\"\\n\"\n+                return s\n+\n+    config_parser = SafeConfigParser()\n+    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"litecoin.conf\"))))\n+    return dict(config_parser.items(\"all\"))\n+\n+def connect_JSON(config):\n+    \"\"\"Connect to a litecoin JSON-RPC server\"\"\"\n+    testnet = config.get('testnet', '0')\n+    testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False\n+    if not 'rpcport' in config:\n+        config['rpcport'] = 19332 if testnet else 9332\n+    connect = \"http://%s:%s@127.0.0.1:%s\"%(config['rpcuser'], config['rpcpassword'], config['rpcport'])\n+    try:\n+        result = ServiceProxy(connect)\n+        # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,\n+        # but also make sure the bitcoind we're talking to is/isn't testnet:\n+        if result.getmininginfo()['testnet'] != testnet:\n+            sys.stderr.write(\"RPC server at \"+connect+\" testnet setting mismatch\\n\")\n+            sys.exit(1)\n+        return result\n+    except:\n+        sys.stderr.write(\"Error connecting to RPC server at \"+connect+\"\\n\")\n+        sys.exit(1)\n+\n+def unlock_wallet(bitcoind):\n+    info = bitcoind.getinfo()\n+    if 'unlocked_until' not in info:\n+        return True # wallet is not encrypted\n+    t = int(info['unlocked_until'])\n+    if t <= time.time():\n+        try:\n+            passphrase = getpass.getpass(\"Wallet is locked; enter passphrase: \")\n+            bitcoind.walletpassphrase(passphrase, 5)\n+        except:\n+            sys.stderr.write(\"Wrong passphrase\\n\")\n+\n+    info = bitcoind.getinfo()\n+    return int(info['unlocked_until']) > time.time()\n+\n+def list_available(bitcoind):\n+    address_summary = dict()\n+\n+    address_to_account = dict()\n+    for info in bitcoind.listreceivedbyaddress(0):\n+        address_to_account[info[\"address\"]] = info[\"account\"]\n+\n+    unspent = bitcoind.listunspent(0)\n+    for output in unspent:\n+        # listunspent doesn't give addresses, so:\n+        rawtx = bitcoind.getrawtransaction(output['txid'], 1)\n+        vout = rawtx[\"vout\"][output['vout']]\n+        pk = vout[\"scriptPubKey\"]\n+\n+        # This code only deals with ordinary pay-to-bitcoin-address\n+        # or pay-to-script-hash outputs right now; anything exotic is ignored.\n+        if pk[\"type\"] != \"pubkeyhash\" and pk[\"type\"] != \"scripthash\":\n+            continue\n+        \n+        address = pk[\"addresses\"][0]\n+        if address in address_summary:\n+            address_summary[address][\"total\"] += vout[\"value\"]\n+            address_summary[address][\"outputs\"].append(output)\n+        else:\n+            address_summary[address] = {\n+                \"total\" : vout[\"value\"],\n+                \"outputs\" : [output],\n+                \"account\" : address_to_account.get(address, \"\")\n+                }\n+\n+    return address_summary\n+\n+def select_coins(needed, inputs):\n+    # Feel free to improve this, this is good enough for my simple needs:\n+    outputs = []\n+    have = Decimal(\"0.0\")\n+    n = 0\n+    while have < needed and n < len(inputs):\n+        outputs.append({ \"txid\":inputs[n][\"txid\"], \"vout\":inputs[n][\"vout\"]})\n+        have += inputs[n][\"amount\"]\n+        n += 1\n+    return (outputs, have-needed)\n+\n+def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n+    all_coins = list_available(bitcoind)\n+\n+    total_available = Decimal(\"0.0\")\n+    needed = amount+fee\n+    potential_inputs = []\n+    for addr in fromaddresses:\n+        if addr not in all_coins:\n+            continue\n+        potential_inputs.extend(all_coins[addr][\"outputs\"])\n+        total_available += all_coins[addr][\"total\"]\n+\n+    if total_available < needed:\n+        sys.stderr.write(\"Error, only %f BTC available, need %f\\n\"%(total_available, needed));\n+        sys.exit(1)\n+\n+    #\n+    # Note:\n+    # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.\n+    # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode\n+    # Decimals, I'm casting amounts to float before sending them to bitcoind.\n+    #  \n+    outputs = { toaddress : float(amount) }\n+    (inputs, change_amount) = select_coins(needed, potential_inputs)\n+    if change_amount > BASE_FEE:  # don't bother with zero or tiny change\n+        change_address = fromaddresses[-1]\n+        if change_address in outputs:\n+            outputs[change_address] += float(change_amount)\n+        else:\n+            outputs[change_address] = float(change_amount)\n+\n+    rawtx = bitcoind.createrawtransaction(inputs, outputs)\n+    signed_rawtx = bitcoind.signrawtransaction(rawtx)\n+    if not signed_rawtx[\"complete\"]:\n+        sys.stderr.write(\"signrawtransaction failed\\n\")\n+        sys.exit(1)\n+    txdata = signed_rawtx[\"hex\"]\n+\n+    return txdata\n+\n+def compute_amount_in(bitcoind, txinfo):\n+    result = Decimal(\"0.0\")\n+    for vin in txinfo['vin']:\n+        in_info = bitcoind.getrawtransaction(vin['txid'], 1)\n+        vout = in_info['vout'][vin['vout']]\n+        result = result + vout['value']\n+    return result\n+\n+def compute_amount_out(txinfo):\n+    result = Decimal(\"0.0\")\n+    for vout in txinfo['vout']:\n+        result = result + vout['value']\n+    return result\n+\n+def sanity_test_fee(bitcoind, txdata_hex, max_fee):\n+    class FeeError(RuntimeError):\n+        pass\n+    try:\n+        txinfo = bitcoind.decoderawtransaction(txdata_hex)\n+        total_in = compute_amount_in(bitcoind, txinfo)\n+        total_out = compute_amount_out(txinfo)\n+        if total_in-total_out > max_fee:\n+            raise FeeError(\"Rejecting transaction, unreasonable fee of \"+str(total_in-total_out))\n+\n+        tx_size = len(txdata_hex)/2\n+        kb = tx_size/1000  # integer division rounds down\n+        if kb > 1 and fee < BASE_FEE:\n+            raise FeeError(\"Rejecting no-fee transaction, larger than 1000 bytes\")\n+        if total_in < 0.01 and fee < BASE_FEE:\n+            raise FeeError(\"Rejecting no-fee, tiny-amount transaction\")\n+        # Exercise for the reader: compute transaction priority, and\n+        # warn if this is a very-low-priority transaction\n+\n+    except FeeError as err:\n+        sys.stderr.write((str(err)+\"\\n\"))\n+        sys.exit(1)\n+\n+def main():\n+    import optparse\n+\n+    parser = optparse.OptionParser(usage=\"%prog [options]\")\n+    parser.add_option(\"--from\", dest=\"fromaddresses\", default=None,\n+                      help=\"addresses to get litecoins from\")\n+    parser.add_option(\"--to\", dest=\"to\", default=None,\n+                      help=\"address to get send litecoins to\")\n+    parser.add_option(\"--amount\", dest=\"amount\", default=None,\n+                      help=\"amount to send\")\n+    parser.add_option(\"--fee\", dest=\"fee\", default=\"0.0\",\n+                      help=\"fee to include\")\n+    parser.add_option(\"--datadir\", dest=\"datadir\", default=determine_db_dir(),\n+                      help=\"location of litecoin.conf file with RPC username/password (default: %default)\")\n+    parser.add_option(\"--testnet\", dest=\"testnet\", default=False, action=\"store_true\",\n+                      help=\"Use the test network\")\n+    parser.add_option(\"--dry_run\", dest=\"dry_run\", default=False, action=\"store_true\",\n+                      help=\"Don't broadcast the transaction, just create and print the transaction data\")\n+\n+    (options, args) = parser.parse_args()\n+\n+    check_json_precision()\n+    config = read_bitcoin_config(options.datadir)\n+    if options.testnet: config['testnet'] = True\n+    bitcoind = connect_JSON(config)\n+\n+    if options.amount is None:\n+        address_summary = list_available(bitcoind)\n+        for address,info in address_summary.iteritems():\n+            n_transactions = len(info['outputs'])\n+            if n_transactions > 1:\n+                print(\"%s %.8f %s (%d transactions)\"%(address, info['total'], info['account'], n_transactions))\n+            else:\n+                print(\"%s %.8f %s\"%(address, info['total'], info['account']))\n+    else:\n+        fee = Decimal(options.fee)\n+        amount = Decimal(options.amount)\n+        while unlock_wallet(bitcoind) == False:\n+            pass # Keep asking for passphrase until they get it right\n+        txdata = create_tx(bitcoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n+        sanity_test_fee(bitcoind, txdata, amount*Decimal(\"0.01\"))\n+        if options.dry_run:\n+            print(txdata)\n+        else:\n+            txid = bitcoind.sendrawtransaction(txdata)\n+            print(txid)\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "fad904bc94bf947012ae7ad554dc689af09f5d94",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,6 +1,6 @@\n ### TestGen ###\n \n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Blockcash tests.\n \n Usage: \n "
      },
      {
        "sha": "bb6641043af20e1b786695683752462cdbff235f",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -18,11 +18,11 @@\n from binascii import b2a_hex\n \n # key types\n-PUBKEY_ADDRESS = 0\n+PUBKEY_ADDRESS = 19\n SCRIPT_ADDRESS = 5\n PUBKEY_ADDRESS_TEST = 111\n SCRIPT_ADDRESS_TEST = 196\n-PRIVKEY = 128\n+PRIVKEY = 176\n PRIVKEY_TEST = 239\n \n metadata_keys = ['isPrivkey', 'isTestnet', 'addrType', 'isCompressed']"
      },
      {
        "sha": "88a88db7e47e91312de995f24c22393d48925e91",
        "filename": "contrib/tidy_datadir.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -4,10 +4,10 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n if [ -d \"$1\" ]; then\n-  cd \"$1\" || exit 1\n+  cd \"$1\"\n else\n   echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n+  echo \"Removes obsolete Blockcash database files\" >&2\n   exit 1\n fi\n \n@@ -19,22 +19,22 @@ if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/C\n \n case $LEVEL in\n   0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n+    echo \"Error: no Blockcash datadir detected.\"\n     exit 1\n     ;;\n   1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n+    echo \"Detected old Blockcash datadir (before 0.7).\"\n     echo \"Nothing to do.\"\n     exit 0\n     ;;\n   2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n+    echo \"Detected Blockcash 0.7 datadir.\"\n     ;;\n   3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n+    echo \"Detected Blockcash pre-0.8 datadir.\"\n     ;;\n   4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n+    echo \"Detected Blockcash 0.8 datadir.\"\n     ;;\n esac\n "
      },
      {
        "sha": "b01e2a6d39e5a30d30eca515844b4ac75af2ecca",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -9,7 +9,7 @@ REVSIG=false\n IFS='\n '\n if [ \"$BITCOIN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n-\tGPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n+\tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n else\n \t# Note how we've disabled SHA1 with the --weak-digest option, disabling\n \t# signatures - including selfsigs - that use SHA1. While you might think that\n@@ -24,15 +24,15 @@ else\n \t\tcase \"$LINE\" in\n \t\t\t\"gpg (GnuPG) 1.4.1\"*|\"gpg (GnuPG) 2.0.\"*)\n \t\t\t\techo \"Please upgrade to at least gpg 2.1.10 to check for weak signatures\" > /dev/stderr\n-\t\t\t\tGPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n+\t\t\t\tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n \t\t\t\t;;\n \t\t\t# We assume if you're running 2.1+, you're probably running 2.1.10+\n \t\t\t# gpg will fail otherwise\n \t\t\t# We assume if you're running 1.X, it is either 1.4.1X or 1.4.20+\n \t\t\t# gpg will fail otherwise\n \t\tesac\n \tdone\n-\t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n+\t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n fi\n for LINE in $(echo \"$GPG_RES\"); do\n \tcase \"$LINE\" in\n@@ -46,19 +46,14 @@ for LINE in $(echo \"$GPG_RES\"); do\n \t\tREVSIG=true\n \t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n \t\t;;\n-\t\"[GNUPG:] EXPKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n-\t\tREVSIG=true\n-\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n-\t\t;;\n \tesac\n done\n if ! $VALID; then\n \texit 1\n fi\n if $VALID && $REVSIG; then\n-\tprintf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\"\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\"\n \techo \"$GOODREVSIG\"\n else\n-\tprintf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n fi"
      },
      {
        "sha": "74b7f38375ac371571466e1b1af44522b41fbcf2",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -12,6 +12,8 @@ VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n VERIFIED_SHA512_ROOT=$(cat \"${DIR}/trusted-sha512-root-commit\")\n REVSIG_ALLOWED=$(cat \"${DIR}/allow-revsig-commits\")\n \n+HAVE_FAILED=false\n+\n HAVE_GNU_SHA512=1\n [ ! -x \"$(which sha512sum)\" ] && HAVE_GNU_SHA512=0\n \n@@ -33,12 +35,11 @@ fi\n \n NO_SHA1=1\n PREV_COMMIT=\"\"\n-INITIAL_COMMIT=\"${CURRENT_COMMIT}\"\n \n while true; do\n \tif [ \"$CURRENT_COMMIT\" = $VERIFIED_ROOT ]; then\n-\t\techo \"There is a valid path from \\\"$INITIAL_COMMIT\\\" to $VERIFIED_ROOT where all commits are signed!\"\n-\t\texit 0\n+\t\techo \"There is a valid path from \"$CURRENT_COMMIT\" to $VERIFIED_ROOT where all commits are signed!\"\n+\t\texit 0;\n \tfi\n \n \tif [ \"$CURRENT_COMMIT\" = $VERIFIED_SHA512_ROOT ]; then\n@@ -94,9 +95,9 @@ while true; do\n \t\tFILE_HASHES=\"\"\n \t\tfor FILE in $(git ls-tree --full-tree -r --name-only \"$CURRENT_COMMIT\" | LC_ALL=C sort); do\n \t\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n-\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | sha512sum | { read FIRST _; echo $FIRST; } )\n+\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | sha512sum | { read FIRST OTHER; echo $FIRST; } )\n \t\t\telse\n-\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | shasum -a 512 | { read FIRST _; echo $FIRST; } )\n+\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | shasum -a 512 | { read FIRST OTHER; echo $FIRST; } )\n \t\t\tfi\n \t\t\t[ \"$FILE_HASHES\" != \"\" ] && FILE_HASHES=\"$FILE_HASHES\"'\n '"
      },
      {
        "sha": "409f517c9fb2691549a8ff280461d14d1b2e9dd7",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -33,7 +33,7 @@ if [ ! -d \"$WORKINGDIR\" ]; then\n    mkdir \"$WORKINGDIR\"\n fi\n \n-cd \"$WORKINGDIR\" || exit 1\n+cd \"$WORKINGDIR\"\n \n #test if a version number has been passed as an argument\n if [ -n \"$1\" ]; then\n@@ -76,6 +76,8 @@ if [ -n \"$1\" ]; then\n          BASEDIR=\"$BASEDIR$RCSUBDIR.$RCVERSION/\"\n       fi\n    fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n else\n    echo \"Error: need to specify a version on the command line\"\n    exit 2\n@@ -87,7 +89,7 @@ WGETOUT=$(wget -N \"$HOST1$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n #and then see if wget completed successfully\n if [ $? -ne 0 ]; then\n    echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: ${VERSIONPREFIX}0.10.4-${RCVERSIONSTRING}1)\"\n+   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: \"$VERSIONPREFIX\"0.10.4-\"$RCVERSIONSTRING\"1)\"\n    echo \"wget output:\"\n    echo \"$WGETOUT\"|sed 's/^/\\t/g'\n    exit 2"
      },
      {
        "sha": "ea398a27eacd78001244023534e77a325a6e1d13",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -8,8 +8,8 @@\n \n     Bitcoin should be started with the command line arguments:\n         bitcoind -testnet -daemon \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashblock=tcp://127.0.0.1:28332\n \n@@ -32,7 +32,7 @@\n \n if not (sys.version_info.major >= 3 and sys.version_info.minor >= 5):\n     print(\"This example only works with Python 3.5 and greater\")\n-    sys.exit(1)\n+    exit(1)\n \n port = 28332\n "
      },
      {
        "sha": "1cb7eec0c08660d1c2fa7deac45393292f549ea5",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -8,8 +8,8 @@\n \n     Bitcoin should be started with the command line arguments:\n         bitcoind -testnet -daemon \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashblock=tcp://127.0.0.1:28332\n \n@@ -36,7 +36,7 @@\n \n if not (sys.version_info.major >= 3 and sys.version_info.minor >= 4):\n     print(\"This example only works with Python 3.4 and greater\")\n-    sys.exit(1)\n+    exit(1)\n \n port = 28332\n "
      },
      {
        "sha": "f36c1355357ffce7eb15217bc88c5e212236b60f",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 19,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -12,9 +12,9 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-A prefix will be generated that's suitable for plugging into Bitcoin's\n+A prefix will be generated that's suitable for plugging into Blockcash's\n configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n+created. To use it for Blockcash:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n \n@@ -28,22 +28,6 @@ Common `host-platform-triplets` for cross compilation are:\n \n No other options are needed, the paths are automatically configured.\n \n-Install the required dependencies: Ubuntu & Debian\n---------------------------------------------------\n-\n-For macOS cross compilation:\n-\n-    sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev libz-dev libbz2-dev python-setuptools\n-\n-For Win32/Win64 cross compilation:\n-\n-- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n-\n-For linux (including i386, ARM) cross compilation:\n-\n-    sudo apt-get install curl g++-aarch64-linux-gnu g++-4.8-aarch64-linux-gnu gcc-4.8-aarch64-linux-gnu binutils-aarch64-linux-gnu g++-arm-linux-gnueabihf g++-4.8-arm-linux-gnueabihf gcc-4.8-arm-linux-gnueabihf binutils-arm-linux-gnueabihf g++-4.8-multilib gcc-4.8-multilib binutils-gold bsdmainutils\n-\n-\n Dependency Options:\n The following can be set when running make: make FOO=bar\n \n@@ -59,7 +43,7 @@ The following can be set when running make: make FOO=bar\n     BUILD_ID_SALT: Optional salt to use when generating build package ids\n \n If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n+options will be passed to Blockcash's configure. In this case, `--disable-wallet`.\n \n Additional targets:\n "
      },
      {
        "sha": "00231d75d5f2f297b798b652c2e85ca865fc2e02",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -9,7 +9,7 @@ define $(package)_preprocess_cmds\n endef\n \n define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress --disable-samples\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n   $(package)_config_opts_release=--disable-debug-mode\n   $(package)_config_opts_linux=--with-pic\n endef"
      },
      {
        "sha": "49f5829ac1c0264acd6c47a9c4ad8006b683807a",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,8 +1,9 @@\n package=native_ds_store\n-$(package)_version=1.1.2\n-$(package)_download_path=https://github.com/al45tair/ds_store/archive/\n-$(package)_file_name=v$($(package)_version).tar.gz\n-$(package)_sha256_hash=3b3ecb7bf0a5157f5b6010bc3af7c141fb0ad3527084e63336220d22744bc20c\n+$(package)_version=1.1.0\n+$(package)_download_path=https://bitbucket.org/al45tair/ds_store/get\n+$(package)_download_file=v$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=921596764d71d1bbd3297a90ef6d286f718794d667e4f81d91d14053525d64c1\n $(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n $(package)_dependencies=native_biplist\n "
      },
      {
        "sha": "85a8a402bf92cefb0b406a6d8ddefa87984157cc",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,13 +1,14 @@\n package=native_mac_alias\n-$(package)_version=2.0.6\n-$(package)_download_path=https://github.com/al45tair/mac_alias/archive/\n-$(package)_file_name=v$($(package)_version).tar.gz\n-$(package)_sha256_hash=78a3332d9a597eebf09ae652d38ad1e263b28db5c2e6dd725fad357b03b77371\n+$(package)_version=1.1.0\n+$(package)_download_path=https://bitbucket.org/al45tair/mac_alias/get\n+$(package)_download_file=v$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=87ad827e66790028361e43fc754f68ed041a9bdb214cca03c853f079b04fb120\n $(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n $(package)_patches=python3.patch\n \n define $(package)_preprocess_cmds\n-    patch -p1 < $($(package)_patch_dir)/python3.patch\n+  patch -p1 < $($(package)_patch_dir)/python3.patch\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "01146c26f69bc426f351424bc2cdcfded19e0b65",
        "filename": "depends/packages/zeromq.mk",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,18 +1,19 @@\n package=zeromq\n-$(package)_version=4.2.2\n-$(package)_download_path=https://github.com/zeromq/libzmq/releases/download/v$($(package)_version)/\n+$(package)_version=4.1.5\n+$(package)_download_path=https://github.com/zeromq/zeromq4-1/releases/download/v$($(package)_version)/\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=5b23f4ca9ef545d5bd3af55d305765e3ee06b986263b31967435d285a3e6df6b\n-$(package)_patches=0001-fix-build-with-older-mingw64.patch\n+$(package)_sha256_hash=04aac57f081ffa3a2ee5ed04887be9e205df3a7ddade0027460b8042432bdbcf\n+$(package)_patches=9114d3957725acd34aa8b8d011585812f3369411.patch 9e6745c12e0b100cd38acecc16ce7db02905e27c.patch\n \n define $(package)_set_vars\n-  $(package)_config_opts=--without-docs --disable-shared --without-libsodium --disable-curve --disable-curve-keygen --disable-perf\n+  $(package)_config_opts=--without-documentation --disable-shared --without-libsodium --disable-curve\n   $(package)_config_opts_linux=--with-pic\n   $(package)_cxxflags=-std=c++11\n endef\n \n define $(package)_preprocess_cmds\n-   patch -p1 < $($(package)_patch_dir)/0001-fix-build-with-older-mingw64.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/9114d3957725acd34aa8b8d011585812f3369411.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch && \\\n   ./autogen.sh\n endef\n \n@@ -21,14 +22,13 @@ define $(package)_config_cmds\n endef\n \n define $(package)_build_cmds\n-  $(MAKE) src/libzmq.la\n+  $(MAKE) libzmq.la\n endef\n \n define $(package)_stage_cmds\n   $(MAKE) DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-includeHEADERS install-pkgconfigDATA\n endef\n \n define $(package)_postprocess_cmds\n-  sed -i.old \"s/ -lstdc++//\" lib/pkgconfig/libzmq.pc && \\\n   rm -rf bin share\n endef"
      },
      {
        "sha": "1a32340be5b13ae1d5be3e775462c3052c12953a",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "modified",
        "additions": 22,
        "deletions": 6,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,7 +1,7 @@\n diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n---- a/mac_alias/alias.py\n-+++ b/mac_alias/alias.py\n-@@ -258,10 +258,10 @@\n+--- a/mac_alias/alias.py\t2015-10-19 12:12:48.000000000 +0200\n++++ b/mac_alias/alias.py\t2016-04-03 12:13:12.037159417 +0200\n+@@ -243,10 +243,10 @@\n          alias = Alias()\n          alias.appinfo = appinfo\n              \n@@ -14,7 +14,7 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n                                     folder_cnid, cnid,\n                                     crdate, creator_code, type_code)\n          alias.target.levels_from = levels_from\n-@@ -276,9 +276,9 @@\n+@@ -261,9 +261,9 @@\n                  b.read(1)\n  \n              if tag == TAG_CARBON_FOLDER_NAME:\n@@ -26,7 +26,7 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n                                                             value)\n              elif tag == TAG_CARBON_PATH:\n                  alias.target.carbon_path = value\n-@@ -313,9 +313,9 @@\n+@@ -298,9 +298,9 @@\n                  alias.target.creation_date \\\n                      = mac_epoch + datetime.timedelta(seconds=seconds)\n              elif tag == TAG_POSIX_PATH:\n@@ -38,7 +38,23 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n              elif tag == TAG_RECURSIVE_ALIAS_OF_DISK_IMAGE:\n                  alias.volume.disk_image_alias = Alias.from_bytes(value)\n              elif tag == TAG_USER_HOME_LENGTH_PREFIX:\n-@@ -467,12 +467,12 @@\n+@@ -422,13 +422,13 @@\n+         #       (so doing so is ridiculous, and nothing could rely on it).\n+         b.write(struct.pack(b'>h28pI2shI64pII4s4shhI2s10s',\n+                             self.target.kind,\n+-                            carbon_volname, voldate,\n++                            carbon_volname, int(voldate),\n+                             self.volume.fs_type,\n+                             self.volume.disk_type,\n+                             self.target.folder_cnid,\n+                             carbon_filename,\n+                             self.target.cnid,\n+-                            crdate,\n++                            int(crdate),\n+                             self.target.creator_code,\n+                             self.target.type_code,\n+                             self.target.levels_from,\n+@@ -449,12 +449,12 @@\n  \n          b.write(struct.pack(b'>hhQhhQ',\n                  TAG_HIGH_RES_VOLUME_CREATION_DATE,"
      },
      {
        "sha": "1a005d25da87053f1218b131f08ac58f9282e895",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 16,
        "deletions": 18,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,43 +1,42 @@\n-Bitcoin Core\n+Blockcash Core\n =============\n \n Setup\n ---------------------\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Bitcoin transactions (which is currently more than 100 GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+Blockcash Core is the original Blockcash client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Blockcash transactions (which is currently more than 7 GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n-To download Bitcoin Core, visit [bitcoincore.org](https://bitcoincore.org/en/releases/).\n+To download Blockcash Core, visit [blockcash.org](https://blockcash.org).\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform.\n+The following are some helpful notes on how to run Blockcash on your native platform.\n \n ### Unix\n \n Unpack the files into a directory and run:\n \n-- `bin/bitcoin-qt` (GUI) or\n-- `bin/bitcoind` (headless)\n+- `bin/blockcash-qt` (GUI) or\n+- `bin/blockcashd` (headless)\n \n ### Windows\n \n-Unpack the files into a directory, and then run bitcoin-qt.exe.\n+Unpack the files into a directory, and then run blockcash-qt.exe.\n \n ### OS X\n \n-Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n+Drag Blockcash-Core to your applications folder, and then run Blockcash-Core.\n \n ### Need Help?\n \n-* See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n+* See the documentation at the [Blockcash Wiki](https://blockcash.info/)\n for help and more information.\n-* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n-* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n+* Ask for help on [#blockcash](http://webchat.freenode.net?channels=blockcash) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=blockcash).\n+* Ask for help on the [BlockcashTalk](https://blockcashtalk.io/) forums.\n \n Building\n ---------------------\n-The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n+The following are developer notes on how to build Blockcash on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n-- [Dependencies](dependencies.md)\n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n - [Windows Build Notes](build-windows.md)\n@@ -46,12 +45,12 @@ The following are developer notes on how to build Bitcoin on your native platfor\n \n Development\n ---------------------\n-The Bitcoin repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n+The Blockcash repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n \n - [Developer Notes](developer-notes.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n-- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Source Code Documentation (External Link)](https://dev.visucore.com/blockcash/doxygen/)\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [Travis CI](travis-ci.md)\n@@ -62,9 +61,8 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Benchmarking](benchmarking.md)\n \n ### Resources\n-* Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n-* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss on the [BlockcashTalk](https://blockcashtalk.io/) forums.\n+* Discuss general Blockcash development on #blockcash-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=blockcash-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)"
      },
      {
        "sha": "8a73027881041f9a07948425f0006a021bc18e05",
        "filename": "doc/README_osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -92,6 +92,6 @@ build process to remain somewhat deterministic. Here's how it works:\n   that have been previously (deterministically) built in order to create a\n   final dmg.\n - The Apple keyholder uses this unsigned app to create a detached signature,\n-  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/blockcash/blockcash-detached-sigs).\n - Builders feed the unsigned app + detached signature back into Gitian. It\n   uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "ca980ab238007f22018a914afcac87f14c019488",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,23 +1,23 @@\n-Bitcoin Core\r\n+Blockcash Core\r\n =============\r\n \r\n Intro\r\n -----\r\n-Bitcoin is a free open source peer-to-peer electronic cash system that is\r\n+Blockcash is a free open source peer-to-peer electronic cash system that is\r\n completely decentralized, without the need for a central server or trusted\r\n parties.  Users hold the crypto keys to their own money and transact directly\r\n with each other, with the help of a P2P network to check for double-spending.\r\n \r\n \r\n Setup\r\n -----\r\n-Unpack the files into a directory and run bitcoin-qt.exe.\r\n+Unpack the files into a directory and run blockcash-qt.exe.\r\n \r\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n-However, it downloads and stores the entire history of Bitcoin transactions;\r\n+Blockcash Core is the original Blockcash client and it builds the backbone of the network.\r\n+However, it downloads and stores the entire history of Blockcash transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r\n \r\n-See the bitcoin wiki at:\r\n-  https://en.bitcoin.it/wiki/Main_Page\r\n+See the blockcash wiki at:\r\n+  https://blockcash.info/\r\n for more help and information.\r"
      },
      {
        "sha": "9969dc065851d755e141c061710560577c5d8c9a",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,20 +3,19 @@ Unauthenticated REST Interface\n \n The REST API can be enabled with the `-rest` option.\n \n-The interface runs on the same port as the JSON-RPC interface, by default port 8332 for mainnet, port 18332 for testnet,\n-and port 18443 for regtest.\n+The interface runs on the same port as the JSON-RPC interface, by default port 8332 for mainnet and port 18332 for testnet.\n \n Supported API\n -------------\n \n-#### Transactions\n+####Transactions\n `GET /rest/tx/<TX-HASH>.<bin|hex|json>`\n \n Given a transaction hash: returns a transaction in binary, hex-encoded binary, or JSON formats.\n \n For full TX query capability, one must enable the transaction index via \"txindex=1\" command line / configuration option.\n \n-#### Blocks\n+####Blocks\n `GET /rest/block/<BLOCK-HASH>.<bin|hex|json>`\n `GET /rest/block/notxdetails/<BLOCK-HASH>.<bin|hex|json>`\n \n@@ -26,12 +25,12 @@ The HTTP request and response are both handled entirely in-memory, thus making m\n \n With the /notxdetails/ option JSON response will only contain the transaction hash instead of the complete transaction details. The option only affects the JSON response.\n \n-#### Blockheaders\n+####Blockheaders\n `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>`\n \n Given a block hash: returns <COUNT> amount of blockheaders in upward direction.\n \n-#### Chaininfos\n+####Chaininfos\n `GET /rest/chaininfo.json`\n \n Returns various state info regarding block chain processing.\n@@ -49,7 +48,7 @@ Only supports JSON as output format.\n * softforks : (array) status of softforks in progress\n * bip9_softforks : (object) status of BIP9 softforks in progress\n \n-#### Query UTXO set\n+####Query UTXO set\n `GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>/.../<txid>-<n>.<bin|hex|json>`\n \n The getutxo command allows querying of the UTXO set given a set of outpoints.\n@@ -58,7 +57,7 @@ https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki\n \n Example:\n ```\n-$ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff7627ff72e5e8b0f71210f92ea7a4000c5d75-0.json 2>/dev/null | json_pp\n+$ curl localhost:39251/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff7627ff72e5e8b0f71210f92ea7a4000c5d75-0.json 2>/dev/null | json_pp\n {\n    \"chainHeight\" : 325347,\n    \"chaintipHash\" : \"00000000fb01a7f3745a717f8caebee056c484e6e0bfe4a9591c235bb70506fb\",\n@@ -82,7 +81,7 @@ $ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff76\n }\n ```\n \n-#### Memory pool\n+####Memory pool\n `GET /rest/mempool/info.json`\n \n Returns various information about the TX mempool.\n@@ -100,4 +99,4 @@ Only supports JSON as output format.\n \n Risks\n -------------\n-Running a web browser on the same node with a REST enabled bitcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy.\n+Running a web browser on the same node with a REST enabled blockcashd can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:29521/rest/tx/1234567890.json\">` which might break the nodes privacy."
      },
      {
        "sha": "cdd0ea8a9cffd016a782ebac5b0bb53da4c2bbc7",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1 +1 @@\n-The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright).\n+The list of assets used in the blockcash source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      },
      {
        "sha": "46e3ea9f473f684412e7d17f03eb7636ba071db9",
        "filename": "doc/benchmarking.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,11 +1,11 @@\n Benchmarking\n ============\n \n-Bitcoin Core has an internal benchmarking framework, with benchmarks\n+Blockcash Core has an internal benchmarking framework, with benchmarks\n for cryptographic algorithms such as SHA1, SHA256, SHA512 and RIPEMD160. As well as the rolling bloom filter.\n \n-After compiling bitcoin-core, the benchmarks can be run with:\n-`src/bench/bench_bitcoin`\n+After compiling blockcash-core, the benchmarks can be run with:\n+`src/bench/bench_blockcash`\n \n The output will look similar to:\n ```"
      },
      {
        "sha": "bc8dcb6fb3c33cbd1d9fda2535de703c9765fdab",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -33,4 +33,3 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.13.0**):\n * [`BIP 145`](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n * [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n * [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068)).\n-* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): NODE_NETWORK_LIMITED service bit [signaling only] is supported as of **v0.16.0** ([PR 10740](https://github.com/bitcoin/bitcoin/pull/10740))."
      },
      {
        "sha": "54a7c108dbcc051271fe1540099ebbba77032873",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 102,
        "deletions": 32,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,62 +1,105 @@\n OpenBSD build guide\n ======================\n-(updated for OpenBSD 6.2)\n+(updated for OpenBSD 6.1)\n \n-This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+This guide describes how to build blockcashd and command-line utilities on OpenBSD.\n \n-OpenBSD is most commonly used as a server OS, so this guide does not contain instructions for building the GUI.\n+As OpenBSD is most common as a server OS, we will not bother with the GUI.\n \n Preparation\n -------------\n \n Run the following as root to install the base dependencies for building:\n \n ```bash\n-pkg_add git gmake libevent libtool\n+pkg_add gmake libtool libevent\n pkg_add autoconf # (select highest version, e.g. 2.69)\n pkg_add automake # (select highest version, e.g. 1.15)\n-pkg_add python # (select highest version, e.g. 3.6)\n-pkg_add boost\n-\n-git clone https://github.com/bitcoin/bitcoin.git\n+pkg_add python # (select highest version, e.g. 3.5)\n ```\n \n-See [dependencies.md](dependencies.md) for a complete overview.\n+The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Blockcash Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n \n GCC\n -------\n \n-The default C++ compiler that comes with OpenBSD 6.2 is g++ 4.2.1. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core because it has no C++11 support. We'll install a newer version of GCC:\n+You can install a newer version of gcc with:\n \n ```bash\n- pkg_add g++\n- ```\n+pkg_add g++ # (select newest 4.x version, e.g. 4.9.3)\n+```\n+\n+This compiler will not overwrite the system compiler, it will be installed as `egcc` and `eg++` in `/usr/local/bin`.\n+\n+### Building boost\n+\n+Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n+\n+    test_blockcash:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    ...\n+    Segmentation fault (core dumped)\n \n- This compiler will not overwrite the system compiler, it will be installed as `egcc` and `eg++` in `/usr/local/bin`.\n+This makes it necessary to build boost, or at least the parts used by Blockcash Core, manually:\n+\n+```\n+# Pick some path to install boost to, here we create a directory within the blockcash directory\n+LITECOIN_ROOT=$(pwd)\n+BOOST_PREFIX=\"${LITECOIN_ROOT}/boost\"\n+mkdir -p $BOOST_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+curl -o boost_1_64_0.tar.bz2 https://netcologne.dl.sourceforge.net/project/boost/boost/1.64.0/boost_1_64_0.tar.bz2\n+echo '7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332 boost_1_64_0.tar.bz2' | sha256 -c\n+# MUST output: (SHA256) boost_1_64_0.tar.bz2: OK\n+tar -xjf boost_1_64_0.tar.bz2\n+\n+# Boost 1.64 needs one small patch for OpenBSD\n+cd boost_1_64_0\n+# Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n+patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n+\n+# Build w/ minimum configuration necessary for blockcash\n+echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n+config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n+./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n+./b2 -d2 -j2 -d1 ${config_opts} --prefix=${BOOST_PREFIX} stage\n+./b2 -d0 -j4 ${config_opts} --prefix=${BOOST_PREFIX} install\n+```\n \n ### Building BerkeleyDB\n \n BerkeleyDB is only necessary for the wallet functionality. To skip this, pass `--disable-wallet` to `./configure`.\n \n-It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n-from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n-If you have to build it yourself, you can use [the installation script included\n-in contrib/](contrib/install_db4.sh) like so\n+See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to build BerkeleyDB 4.8.\n+You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n \n-```shell\n-./contrib/install_db4.sh `pwd` CC=egcc CXX=eg++ CPP=ecpp\n+```bash\n+# Pick some path to install BDB to, here we create a directory within the blockcash directory\n+LITECOIN_ROOT=$(pwd)\n+BDB_PREFIX=\"${LITECOIN_ROOT}/db4\"\n+mkdir -p $BDB_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+curl -o db-4.8.30.NC.tar.gz 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256 -c\n+# MUST output: (SHA256) db-4.8.30.NC.tar.gz: OK\n+tar -xzf db-4.8.30.NC.tar.gz\n+\n+# Build the library and install to specified prefix\n+cd db-4.8.30.NC/build_unix/\n+#  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp\n+make install # do NOT use -jX, this is broken\n ```\n \n-from the root of the repository.\n-\n ### Resource limits\n \n The standard ulimit restrictions in OpenBSD are very strict:\n \n     data(kbytes)         1572864\n \n-This, unfortunately, may no longer be enough to compile some `.cpp` files in the project,\n-at least with GCC 4.9.4 (see issue [#6658](https://github.com/bitcoin/bitcoin/issues/6658)).\n+This is, unfortunately, no longer enough to compile some `.cpp` files in the project,\n+at least with gcc 4.9.3 (see issue https://github.com/bitcoin/bitcoin/issues/6658).\n If your user is in the `staff` group the limit can be raised with:\n \n     ulimit -d 3000000\n@@ -65,7 +108,7 @@ The change will only affect the current shell and processes spawned by it. To\n make the change system-wide, change `datasize-cur` and `datasize-max` in\n `/etc/login.conf`, and reboot.\n \n-### Building Bitcoin Core\n+### Building Blockcash Core\n \n **Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n \n@@ -75,32 +118,59 @@ export AUTOCONF_VERSION=2.69 # replace this with the autoconf version that you i\n export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you installed\n ./autogen.sh\n ```\n-Make sure `BDB_PREFIX` is set to the appropriate path from the above steps.\n+Make sure `BDB_PREFIX` and `BOOST_PREFIX` are set to the appropriate paths from the above steps.\n \n To configure with wallet:\n ```bash\n-./configure --with-gui=no CC=egcc CXX=eg++ CPP=ecpp \\\n+./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp \\\n     BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\"\n ```\n \n To configure without wallet:\n ```bash\n-./configure --disable-wallet --with-gui=no CC=egcc CXX=eg++ CPP=ecpp\n+./configure --disable-wallet --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp\n ```\n \n Build and run the tests:\n ```bash\n-gmake # use -jX here for parallelism\n+gmake # can use -jX here for parallelism\n gmake check\n ```\n \n-Clang\n+Clang (not currently working)\n ------------------------------\n \n+WARNING: This is outdated, needs to be updated for OpenBSD 6.0 and re-tried.\n+\n+Using a newer g++ results in linking the new code to a new libstdc++.\n+Libraries built with the old g++, will still import the old library.\n+This gives conflicts, necessitating rebuild of all C++ dependencies of the application.\n+\n+With clang this can - at least theoretically - be avoided because it uses the\n+base system's libstdc++.\n+\n ```bash\n-pkg_add llvm\n+pkg_add llvm boost\n+```\n \n+```bash\n ./configure --disable-wallet --with-gui=no CC=clang CXX=clang++\n-gmake # use -jX here for parallelism\n-gmake check\n+gmake\n ```\n+\n+However, this does not appear to work. Compilation succeeds, but link fails\n+with many 'local symbol discarded' errors:\n+\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+\n+According to similar reported errors this is a binutils (ld) issue in 2.15, the\n+version installed by OpenBSD 5.7:\n+\n+- http://openbsd-archive.7691.n7.nabble.com/UPDATE-cppcheck-1-65-td248900.html\n+- https://llvm.org/bugs/show_bug.cgi?id=9758\n+\n+There is no known workaround for this."
      },
      {
        "sha": "6e67523ced5d002f1541eb370fac37f60ecfa94b",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 18,
        "deletions": 34,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -16,41 +16,25 @@ Then install [Homebrew](https://brew.sh).\n Dependencies\n ----------------------\n \n-    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf python3 qt libevent\n-\n-See [dependencies.md](dependencies.md) for a complete overview.\n+    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf qt libevent\n \n If you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG\n \n     brew install librsvg\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. Building with Qt5 is recommended.\n \n-Berkeley DB\n------------\n-It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\n-you can use [the installation script included in contrib/](/contrib/install_db4.sh)\n-like so\n-\n-```shell\n-./contrib/install_db4.sh .\n-```\n-\n-from the root of the repository.\n-\n-**Note**: You only need Berkeley DB if the wallet is enabled (see the section *Disable-Wallet mode* below).\n-\n-Build Bitcoin Core\n+Build Blockcash Core\n ------------------------\n \n-1. Clone the bitcoin source code and cd into `bitcoin`\n+1. Clone the blockcash source code and cd into `blockcash`\n \n-        git clone https://github.com/bitcoin/bitcoin\n-        cd bitcoin\n+        git clone https://github.com/blockcash/blockcash\n+        cd blockcash\n \n-2.  Build bitcoin-core:\n+2.  Build blockcash-core:\n \n-    Configure and build the headless bitcoin binaries as well as the GUI (if Qt is found).\n+    Configure and build the headless blockcash binaries as well as the GUI (if Qt is found).\n \n     You can disable the GUI build by passing `--without-gui` to configure.\n \n@@ -69,37 +53,37 @@ Build Bitcoin Core\n Running\n -------\n \n-Bitcoin Core is now available at `./src/bitcoind`\n+Blockcash Core is now available at `./src/blockcashd`\n \n Before running, it's recommended you create an RPC configuration file.\n \n-    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    echo -e \"rpcuser=blockcashrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Blockcash/blockcash.conf\"\n \n-    chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    chmod 600 \"/Users/${USER}/Library/Application Support/Blockcash/blockcash.conf\"\n \n-The first time you run bitcoind, it will start downloading the blockchain. This process could take several hours.\n+The first time you run blockcashd, it will start downloading the blockchain. This process could take several hours.\n \n You can monitor the download process by looking at the debug.log file:\n \n-    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n+    tail -f $HOME/Library/Application\\ Support/Blockcash/debug.log\n \n Other commands:\n -------\n \n-    ./src/bitcoind -daemon # Starts the bitcoin daemon.\n-    ./src/bitcoin-cli --help # Outputs a list of command-line options.\n-    ./src/bitcoin-cli help # Outputs a list of RPC commands when the daemon is running.\n+    ./src/blockcashd -daemon # Starts the blockcash daemon.\n+    ./src/blockcash-cli --help # Outputs a list of command-line options.\n+    ./src/blockcash-cli help # Outputs a list of RPC commands when the daemon is running.\n \n Using Qt Creator as IDE\n ------------------------\n-You can use Qt Creator as an IDE, for bitcoin development.\n+You can use Qt Creator as an IDE, for blockcash development.\n Download and install the community edition of [Qt Creator](https://www.qt.io/download/).\n Uncheck everything except Qt Creator during the installation process.\n \n 1. Make sure you installed everything through Homebrew mentioned above\n 2. Do a proper ./configure --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n-4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+4. Enter \"blockcash-qt\" as project name, enter src/qt as location\n 5. Leave the file selection as it is\n 6. Confirm the \"summary page\"\n 7. In the \"Projects\" tab select \"Manage Kits...\"\n@@ -110,6 +94,6 @@ Uncheck everything except Qt Creator during the installation process.\n Notes\n -----\n \n-* Tested on OS X 10.8 through 10.13 on 64-bit Intel processors only.\n+* Tested on OS X 10.8 through 10.12 on 64-bit Intel processors only.\n \n * Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)"
      },
      {
        "sha": "223295740e6372c8f9fc924309ffa9aa0b67dd57",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 50,
        "deletions": 29,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,12 +1,12 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin Core in Unix.\n+Some notes on how to build Blockcash Core in Unix.\n \n (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n Note\n ---------------------\n-Always use absolute paths to configure and compile bitcoin and the dependencies,\n+Always use absolute paths to configure and compile blockcash and the dependencies,\n for example, when specifying the path of the dependency:\n \n \t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n@@ -24,7 +24,7 @@ make\n make install # optional\n ```\n \n-This will build bitcoin-qt as well if the dependencies are met.\n+This will build blockcash-qt as well if the dependencies are met.\n \n Dependencies\n ---------------------\n@@ -49,13 +49,13 @@ Optional dependencies:\n  univalue    | Utility          | JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)\n  libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.x)\n \n-For the versions used, see [dependencies.md](dependencies.md)\n+For the versions used in the release, see [release-process.md](release-process.md) under *Fetch and build inputs*.\n \n Memory Requirements\n --------------------\n \n C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n-memory available when compiling Bitcoin Core. On systems with less, gcc can be\n+memory available when compiling Blockcash Core. On systems with less, gcc can be\n tuned to conserve memory with additional CXXFLAGS:\n \n \n@@ -65,7 +65,7 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3\n+    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils\n \n Options when installing required Boost library files:\n \n@@ -94,7 +94,7 @@ BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distri\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n \n-See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n+See the section \"Disable-wallet mode\" to build Blockcash Core without wallet.\n \n Optional (see --with-miniupnpc and --enable-upnp-default):\n \n@@ -107,7 +107,7 @@ ZMQ dependencies (provides ZMQ API 4.x):\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n-If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n+If you want to build Blockcash-Qt, make sure that the required packages for Qt development\n are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n@@ -124,14 +124,14 @@ libqrencode (optional) can be installed with:\n \n     sudo apt-get install libqrencode-dev\n \n-Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n+Once these are installed, they will be found by configure and a blockcash-qt executable will be\n built by default.\n \n Dependency Build Instructions: Fedora\n -------------------------------------\n Build requirements:\n \n-    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n+    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel\n \n Optional:\n \n@@ -147,7 +147,7 @@ libqrencode (optional) can be installed with:\n \n Notes\n -----\n-The release is built with GCC and then \"strip bitcoind\" to strip the debug\n+The release is built with GCC and then \"strip blockcashd\" to strip the debug\n symbols, which reduces the executable size by about 90%.\n \n \n@@ -165,16 +165,33 @@ turned off by default.  See the configure options for upnp behavior desired:\n \n Berkeley DB\n -----------\n-It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\n-you can use [the installation script included in contrib/](/contrib/install_db4.sh)\n-like so\n+It is recommended to use Berkeley DB 4.8. If you have to build it yourself:\n \n-```shell\n-./contrib/install_db4.sh `pwd`\n+```bash\n+LITECOIN_ROOT=$(pwd)\n+\n+# Pick some path to install BDB to, here we create a directory within the blockcash directory\n+BDB_PREFIX=\"${LITECOIN_ROOT}/db4\"\n+mkdir -p $BDB_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256sum -c\n+# -> db-4.8.30.NC.tar.gz: OK\n+tar -xzvf db-4.8.30.NC.tar.gz\n+\n+# Build the library and install to our prefix\n+cd db-4.8.30.NC/build_unix/\n+#  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n+make install\n+\n+# Configure Blockcash Core to use our own-built instance of BDB\n+cd $LITECOIN_ROOT\n+./autogen.sh\n+./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n \n-from the root of the repository.\n-\n **Note**: You only need Berkeley DB if the wallet is enabled (see the section *Disable-Wallet mode* below).\n \n Boost\n@@ -188,7 +205,7 @@ If you need to build Boost yourself:\n \n Security\n --------\n-To help make your bitcoin installation more secure by making certain attacks impossible to\n+To help make your blockcash installation more secure by making certain attacks impossible to\n exploit even if a vulnerability is found, binaries are hardened by default.\n This can be disabled with:\n \n@@ -212,7 +229,7 @@ Hardening enables the following features:\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n-    \tscanelf -e ./bitcoin\n+    \tscanelf -e ./blockcash\n \n     The output should contain:\n \n@@ -221,13 +238,13 @@ Hardening enables the following features:\n \n * Non-executable Stack\n     If the stack is executable then trivial stack based buffer overflow exploits are possible if\n-    vulnerable buffers are found. By default, bitcoin should be built with a non-executable stack\n+    vulnerable buffers are found. By default, blockcash should be built with a non-executable stack\n     but if one of the libraries it uses asks for an executable stack or someone makes a mistake\n     and uses a compiler extension which requires an executable stack, it will silently build an\n     executable without the non-executable stack protection.\n \n     To verify that the stack is non-executable after compiling use:\n-    `scanelf -e ./bitcoin`\n+    `scanelf -e ./blockcash`\n \n     the output should contain:\n \tSTK/REL/PTL\n@@ -237,7 +254,7 @@ Hardening enables the following features:\n \n Disable-wallet mode\n --------------------\n-When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+When the intention is to run only a P2P node without a wallet, blockcash may be compiled in\n disable-wallet mode with:\n \n     ./configure --disable-wallet\n@@ -259,8 +276,8 @@ Setup and Build Example: Arch Linux\n This example lists the steps necessary to setup and build a command line only, non-wallet distribution of the latest changes on Arch Linux:\n \n     pacman -S git base-devel boost libevent python\n-    git clone https://github.com/bitcoin/bitcoin.git\n-    cd bitcoin/\n+    git clone https://github.com/blockcash/blockcash.git\n+    cd blockcash/\n     ./autogen.sh\n     ./configure --disable-wallet --without-gui --without-miniupnpc\n     make check\n@@ -269,7 +286,7 @@ Note:\n Enabling wallet support requires either compiling against a Berkeley DB newer than 4.8 (package `db`) using `--with-incompatible-bdb`,\n or building and depending on a local version of Berkeley DB 4.8. The readily available Arch Linux packages are currently built using\n `--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/bitcoin/trunk/PKGBUILD).\n-As mentioned above, when maintaining portability of the wallet between the standard Bitcoin Core distributions and independently built\n+As mentioned above, when maintaining portability of the wallet between the standard Blockcash Core distributions and independently built\n node software is desired, Berkeley DB 4.8 must be used.\n \n \n@@ -312,13 +329,17 @@ You need to use GNU make (`gmake`) instead of `make`.\n \n For the wallet (optional):\n \n-    ./contrib/install_db4.sh `pwd`\n-    setenv BDB_PREFIX $PWD/db4\n+    pkg install db5\n+\n+This will give a warning \"configure: WARNING: Found Berkeley DB other\n+than 4.8; wallets opened by this build will not be portable!\", but as FreeBSD never\n+had a binary release, this may not matter. If backwards compatibility\n+with 4.8-built Blockcash Core is needed follow the steps under \"Berkeley DB\" above.\n \n Then build using:\n \n     ./autogen.sh\n-    ./configure BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx\"\n+    ./configure --with-incompatible-bdb BDB_CFLAGS=\"-I/usr/local/include/db5\" BDB_LIBS=\"-L/usr/local/lib -ldb_cxx-5\"\n     gmake\n \n *Note on debugging*: The version of `gdb` installed by default is [ancient and considered harmful](https://wiki.freebsd.org/GdbRetirement)."
      },
      {
        "sha": "a8a95e58766adb727a635770636fa98347bdc5d1",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 33,
        "deletions": 106,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,116 +1,75 @@\n WINDOWS BUILD NOTES\n ====================\n \n-Below are some notes on how to build Bitcoin Core for Windows.\n+Below are some notes on how to build Blockcash Core for Windows.\n \n-The options known to work for building Bitcoin Core on Windows are:\n+Most developers use cross-compilation from Ubuntu to build executables for\n+Windows. This is also used to build the release binaries.\n \n-* On Linux using the [Mingw-w64](https://mingw-w64.org/doku.php) cross compiler tool chain. Ubuntu Trusty 14.04 is recommended\n-and is the platform used to build the Bitcoin Core Windows release binaries.\n-* On Windows using [Windows\n-Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about) and the Mingw-w64 cross compiler tool chain.\n+Currently only building on Ubuntu Trusty 14.04 is supported.\n+Other versions are unsupported or known to be broken (e.g. Ubuntu Xenial 16.04).\n \n-Other options which may work but which have not been extensively tested are (please contribute instructions):\n+While there are potentially a number of ways to build on Windows (for example using msys / mingw-w64),\n+using the Windows Subsystem For Linux is the most straightforward. If you are building with\n+another method, please contribute the instructions here for others who are running versions\n+of Windows that are not compatible with the Windows Subsystem for Linux.\n \n-* On Windows using a POSIX compatibility layer application such as [cygwin](http://www.cygwin.com/) or [msys2](http://www.msys2.org/).\n-* On Windows using a native compiler tool chain such as [Visual Studio](https://www.visualstudio.com).\n-\n-Installing Windows Subsystem for Linux\n----------------------------------------\n+Compiling with Windows Subsystem For Linux\n+-------------------------------------------\n \n With Windows 10, Microsoft has released a new feature named the [Windows\n-Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about). This\n+Subsystem for Linux](https://msdn.microsoft.com/commandline/wsl/about). This\n feature allows you to run a bash shell directly on Windows in an Ubuntu-based\n environment. Within this environment you can cross compile for Windows without\n-the need for a separate Linux VM or server. Note that while WSL can be installed with\n-other Linux variants, such as OpenSUSE, the following instructions have only been\n-tested with Ubuntu.\n+the need for a separate Linux VM or server.\n \n This feature is not supported in versions of Windows prior to Windows 10 or on\n Windows Server SKUs. In addition, it is available [only for 64-bit versions of\n Windows](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide).\n \n-Full instructions to install WSL are available on the above link.\n-To install WSL on Windows 10 with Fall Creators Update installed (version >= 16215.0) do the following:\n+To get the bash shell, you must first activate the feature in Windows.\n \n-1. Enable the Windows Subsystem for Linux feature\n+1. Turn on Developer Mode\n+  * Open Settings -> Update and Security -> For developers\n+  * Select the Developer Mode radio button\n+  * Restart if necessary\n+2. Enable the Windows Subsystem for Linux feature\n   * From Start, search for \"Turn Windows features on or off\" (type 'turn')\n-  * Select Windows Subsystem for Linux\n+  * Select Windows Subsystem for Linux (beta)\n   * Click OK\n   * Restart if necessary\n-2. Install Ubuntu\n-  * Open Microsoft Store and search for Ubuntu or use [this link](https://www.microsoft.com/store/productId/9NBLGGH4MSV6)\n-  * Click Install\n 3. Complete Installation\n-  * Open a cmd prompt and type \"Ubuntu\"\n+  * Open a cmd prompt and type \"bash\"\n+  * Accept the license\n   * Create a new UNIX user account (this is a separate account from your Windows account)\n \n After the bash shell is active, you can follow the instructions below, starting\n with the \"Cross-compilation\" section. Compiling the 64-bit version is\n recommended but it is possible to compile the 32-bit version.\n \n-Cross-compilation for Ubuntu and Windows Subsystem for Linux\n-------------------------------------------------------------\n-\n-At the time of writing the Windows Subsystem for Linux installs Ubuntu Xenial 16.04. The Mingw-w64 package\n-for Ubuntu Xenial does not produce working executables for some of the Bitcoin Core applications.\n-It is possible to build on Ubuntu Xenial by installing the cross compiler packages from Ubuntu Zesty, see the steps below.\n-Building on Ubuntu Zesty 17.04 up to 17.10 has been verified to work.\n+Cross-compilation\n+-------------------\n \n-The steps below can be performed on Ubuntu (including in a VM) or WSL. The depends system\n+These steps can be performed on, for example, an Ubuntu VM. The depends system\n will also work on other Linux distributions, however the commands for\n installing the toolchain will be different.\n \n First, install the general dependencies:\n \n-    sudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git\n+    sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl\n \n A host toolchain (`build-essential`) is necessary because some dependency\n packages (such as `protobuf`) need to build host utilities that are used in the\n build process.\n \n-See also: [dependencies.md](dependencies.md).\n-\n ## Building for 64-bit Windows\n \n-The first step is to install the mingw-w64 cross-compilation tool chain. Due to different Ubuntu\n-packages for each distribution and problems with the Xenial packages the steps for each are different.\n-\n-Common steps to install mingw32 cross compiler tool chain:\n-\n-    sudo apt install g++-mingw-w64-x86-64\n-\n-Ubuntu Trusty 14.04:\n-\n-    No further steps required\n-\n-Ubuntu Xenial 16.04 and Windows Subsystem for Linux <sup>[1](#footnote1),[2](#footnote2)</sup>:\n-\n-    sudo apt install software-properties-common\n-    sudo add-apt-repository \"deb http://archive.ubuntu.com/ubuntu zesty universe\"\n-    sudo apt update\n-    sudo apt upgrade\n-    sudo update-alternatives --config x86_64-w64-mingw32-g++ # Set the default mingw32 g++ compiler option to posix.\n-\n-Ubuntu Zesty 17.04 <sup>[2](#footnote2)</sup>:\n+To build executables for Windows 64-bit, install the following dependencies:\n \n-    sudo update-alternatives --config x86_64-w64-mingw32-g++ # Set the default mingw32 g++ compiler option to posix.\n+    sudo apt-get install g++-mingw-w64-x86-64 mingw-w64-x86-64-dev\n \n-Once the tool chain is installed the build steps are common:\n-\n-Note that for WSL the Bitcoin Core source path MUST be somewhere in the default mount file system, for\n-example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n-This means you cannot use a directory that located directly on the host Windows file system to perform the build.\n-\n-The next three steps are an example of how to acquire the source in an appropriate way.\n-\n-    cd /usr/src\n-    sudo git clone https://github.com/bitcoin/bitcoin.git\n-    sudo chmod -R a+rw bitcoin\n-\n-Once the source code is ready the build steps are below.\n+Then build using:\n \n-    PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=x86_64-w64-mingw32\n     cd ..\n@@ -122,25 +81,10 @@ Once the source code is ready the build steps are below.\n \n To build executables for Windows 32-bit, install the following dependencies:\n \n-    sudo apt install g++-mingw-w64-i686 mingw-w64-i686-dev\n-\n-For Ubuntu Xenial 16.04, Ubuntu Zesty 17.04 and Windows Subsystem for Linux <sup>[2](#footnote2)</sup>:\n-\n-    sudo update-alternatives --config i686-w64-mingw32-g++  # Set the default mingw32 g++ compiler option to posix.\n-\n-Note that for WSL the Bitcoin Core source path MUST be somewhere in the default mount file system, for\n-example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n-This means you cannot use a directory that located directly on the host Windows file system to perform the build.\n-\n-The next three steps are an example of how to acquire the source in an appropriate way.\n-\n-    cd /usr/src\n-    sudo git clone https://github.com/bitcoin/bitcoin.git\n-    sudo chmod -R a+rw bitcoin\n+    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev \n \n Then build using:\n \n-    PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=i686-w64-mingw32\n     cd ..\n@@ -158,23 +102,6 @@ Installation\n After building using the Windows subsystem it can be useful to copy the compiled\n executables to a directory on the windows drive in the same directory structure\n as they appear in the release `.zip` archive. This can be done in the following\n-way. This will install to `c:\\workspace\\bitcoin`, for example:\n-\n-    make install DESTDIR=/mnt/c/workspace/bitcoin\n-\n-Footnotes\n----------\n-\n-<a name=\"footnote1\">1</a>: There is currently a bug in the 64 bit Mingw-w64 cross compiler packaged for WSL/Ubuntu Xenial 16.04 that\n-causes two of the bitcoin executables to crash shortly after start up. The bug is related to the\n--fstack-protector-all g++ compiler flag which is used to mitigate buffer overflows.\n-Installing the Mingw-w64 packages from the Ubuntu 17 distribution solves the issue, however, this is not\n-an officially supported approach and it's only recommended if you are prepared to reinstall WSL/Ubuntu should\n-something break.\n-\n-<a name=\"footnote2\">2</a>: Starting from Ubuntu Xenial 16.04 both the 32 and 64 bit Mingw-w64 packages install two different\n-compiler options to allow a choice between either posix or win32 threads. The default option is win32 threads which is the more\n-efficient since it will result in binary code that links directly with the Windows kernel32.lib. Unfortunately, the headers\n-required to support win32 threads conflict with some of the classes in the C++11 standard library in particular std::mutex.\n-It's not possible to build the bitcoin code using the win32 version of the Mingw-w64 cross compilers (at least not without\n-modifying headers in the bitcoin source code).\n+way. This will install to `c:\\workspace\\blockcash`, for example:\n+\n+    make install DESTDIR=/mnt/c/workspace/blockcash"
      },
      {
        "sha": "1ad2bb5d154932f80efda632ef7193628e263c7d",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 22,
        "deletions": 105,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -4,7 +4,7 @@ Developer Notes\n Various coding styles have been used during the history of the codebase,\n and the result is not very consistent. However, we're now trying to converge to\n a single style, which is specified below. When writing patches, favor the new\n-style over attempting to mimic the surrounding style, except for move-only\n+style over attempting to mimick the surrounding style, except for move-only\n commits.\n \n Do not submit patches solely to modify the style of existing code.\n@@ -37,8 +37,6 @@ code.\n \n - **Miscellaneous**\n   - `++i` is preferred over `i++`.\n-  - `nullptr` is preferred over `NULL` or `(void*)0`.\n-  - `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\n \n Block style example:\n ```c++\n@@ -153,7 +151,7 @@ to see it.\n \n **testnet and regtest modes**\n \n-Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+Run with the -testnet option to run with \"play blockcashs\" on the test network, if you\n are testing multi-machine code that needs to operate across the internet.\n \n If you are testing something that can run on one machine, run with the -regtest option.\n@@ -162,42 +160,11 @@ that run in -regtest mode.\n \n **DEBUG_LOCKORDER**\n \n-Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+Blockcash Core is a multithreaded application, and deadlocks or other multithreading bugs\n can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n are held, and adds warnings to the debug.log file if inconsistencies are detected.\n \n-**Valgrind suppressions file**\n-\n-Valgrind is a programming tool for memory debugging, memory leak detection, and\n-profiling. The repo contains a Valgrind suppressions file\n-([`valgrind.supp`](https://github.com/bitcoin/bitcoin/blob/master/contrib/valgrind.supp))\n-which includes known Valgrind warnings in our dependencies that cannot be fixed\n-in-tree. Example use:\n-\n-```shell\n-$ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n-$ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n-      --show-leak-kinds=all src/test/test_bitcoin --log_level=test_suite\n-$ valgrind -v --leak-check=full src/bitcoind -printtoconsole\n-```\n-\n-**compiling for test coverage**\n-\n-LCOV can be used to generate a test coverage report based upon `make check`\n-execution. LCOV must be installed on your system (e.g. the `lcov` package\n-on Debian/Ubuntu).\n-\n-To enable LCOV report generation during test runs:\n-\n-```shell\n-./configure --enable-lcov\n-make\n-make cov\n-\n-# A coverage report will now be accessible at `./test_bitcoin.coverage/index.html`.\n-```\n-\n Locking/mutex usage notes\n -------------------------\n \n@@ -228,7 +195,7 @@ Threads\n \n - ThreadMapPort : Universal plug-and-play startup/shutdown\n \n-- ThreadSocketHandler : Sends/Receives data from peers on port 8333.\n+- ThreadSocketHandler : Sends/Receives data from peers on port 29251.\n \n - ThreadOpenAddedConnections : Opens network connections to added nodes.\n \n@@ -240,9 +207,9 @@ Threads\n \n - ThreadFlushWalletDB : Close the wallet.dat file if it hasn't been used in 500ms.\n \n-- ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n+- ThreadRPCServer : Remote procedure call handler, listens on port 29252 for connections and services them.\n \n-- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n+- BitcoinMiner : Generates blockcashs (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n \n@@ -252,7 +219,7 @@ Ignoring IDE/editor files\n In closed-source environments in which everyone uses the same IDE it is common\n to add temporary files it produces to the project-wide `.gitignore` file.\n \n-However, in open source software such as Bitcoin Core, where everyone uses\n+However, in open source software such as Blockcash Core, where everyone uses\n their own editors/IDE/tools, it is less common. Only you know what files your\n editor produces and this may change from version to version. The canonical way\n to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n@@ -282,9 +249,9 @@ Development guidelines\n ============================\n \n A few non-style-related recommendations for developers, as well as points to\n-pay attention to for reviewers of Bitcoin Core code.\n+pay attention to for reviewers of Blockcash Core code.\n \n-General Bitcoin Core\n+General Blockcash Core\n ----------------------\n \n - New features should be exposed on RPC first, then can be made available in the GUI\n@@ -308,7 +275,7 @@ Wallet\n \n   - *Rationale*: In RPC code that conditionally uses the wallet (such as\n     `validateaddress`) it is easy to forget that global pointer `pwalletMain`\n-    can be nullptr. See `test/functional/disablewallet.py` for functional tests\n+    can be NULL. See `test/functional/disablewallet.py` for functional tests\n     exercising the API with `-disablewallet`\n \n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set\n@@ -363,12 +330,6 @@ C++ data structures\n   - *Rationale*: Ensure determinism by avoiding accidental use of uninitialized\n     values. Also, static analyzers balk about this.\n \n-- By default, declare single-argument constructors `explicit`.\n-\n-  - *Rationale*: This is a precaution to avoid unintended conversions that might\n-    arise when single-argument constructors are used as implicit conversion\n-    functions.\n-\n - Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API.\n   This type can be signed or unsigned depending on the architecture, which can\n@@ -400,7 +361,7 @@ Strings and formatting\n \n - For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n \n-  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+  - *Rationale*: Blockcash Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n \n Variable names\n --------------\n@@ -492,14 +453,6 @@ namespace {\n \n   - *Rationale*: Avoids confusion about the namespace context\n \n-- Prefer `#include <primitives/transaction.h>` bracket syntax instead of\n-  `#include \"primitives/transactions.h\"` quote syntax when possible.\n-\n-  - *Rationale*: Bracket syntax is less ambiguous because the preprocessor\n-    searches a fixed list of include directories without taking location of the\n-    source file into account. This allows quoted includes to stand out more when\n-    the location of the source file actually is relevant.\n-\n GUI\n -----\n \n@@ -514,12 +467,12 @@ Subtrees\n \n Several parts of the repository are subtrees of software maintained elsewhere.\n \n-Some of these are maintained by active developers of Bitcoin Core, in which case changes should probably go\n+Some of these are maintained by active developers of Blockcash Core, in which case changes should probably go\n directly upstream without being PRed directly against the project.  They will be merged back in the next\n subtree merge.\n \n Others are external projects without a tight relationship with our project.  Changes to these should also\n-be sent upstream but bugfixes may also be prudent to PR against Bitcoin Core so that they can be integrated\n+be sent upstream but bugfixes may also be prudent to PR against Blockcash Core so that they can be integrated\n quickly.  Cosmetic changes should be purely taken upstream.\n \n There is a tool in contrib/devtools/git-subtree-check.sh to check a subtree directory for consistency with\n@@ -582,32 +535,12 @@ Git and GitHub tips\n \n         [remote \"upstream-pull\"]\n                 fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n-                url = git@github.com:bitcoin/bitcoin.git\n+                url = git@github.com:blockcash/blockcash.git\n \n   This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n   or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n   `git checkout` and anywhere a commit id would be acceptable to see the changes from pull request NUMBER.\n \n-Scripted diffs\n---------------\n-\n-For reformatting and refactoring commits where the changes can be easily automated using a bash script, we use\n-scripted-diff commits. The bash script is included in the commit message and our Travis CI job checks that\n-the result of the script is identical to the commit. This aids reviewers since they can verify that the script\n-does exactly what it's supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n-on the new master commit).\n-\n-To create a scripted-diff:\n-\n-- start the commit message with `scripted-diff:` (and then a description of the diff on the same line)\n-- in the commit message include the bash script between lines containing just the following text:\n-    - `-BEGIN VERIFY SCRIPT-`\n-    - `-END VERIFY SCRIPT-`\n-\n-The scripted-diff is verified by the tool `contrib/devtools/commit-script-check.sh`\n-\n-Commit `bb81e173` is an example of a scripted-diff.\n-\n RPC interface guidelines\n --------------------------\n \n@@ -637,14 +570,16 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n     is specified as-is in BIP22.\n \n - Missing arguments and 'null' should be treated the same: as default values. If there is no\n-  default value, both cases should fail in the same way. The easiest way to follow this\n-  guideline is detect unspecified arguments with `params[x].isNull()` instead of\n-  `params.size() <= x`. The former returns true if the argument is either null or missing,\n-  while the latter returns true if is missing, and false if it is null.\n+  default value, both cases should fail in the same way.\n \n   - *Rationale*: Avoids surprises when switching to name-based arguments. Missing name-based arguments\n   are passed as 'null'.\n \n+  - *Exception*: Many legacy exceptions to this exist, one of the worst ones is\n+    `getbalance` which follows a completely different code path based on the\n+    number of arguments. We are still in the process of cleaning these up. Do not introduce\n+    new ones.\n+\n - Try not to overload methods on argument type. E.g. don't make `getblock(true)` and `getblock(\"hash\")`\n   do different things.\n \n@@ -672,27 +607,9 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n     from there.\n \n - A RPC method must either be a wallet method or a non-wallet method. Do not\n-  introduce new methods such as `signrawtransaction` that differ in behavior\n-  based on presence of a wallet.\n+  introduce new methods such as `getinfo` and `signrawtransaction` that differ\n+  in behavior based on presence of a wallet.\n \n   - *Rationale*: as well as complicating the implementation and interfering\n     with the introduction of multi-wallet, wallet and non-wallet code should be\n     separated to avoid introducing circular dependencies between code units.\n-\n-- Try to make the RPC response a JSON object.\n-\n-  - *Rationale*: If a RPC response is not a JSON object then it is harder to avoid API breakage if\n-    new data in the response is needed.\n-\n-- Wallet RPCs call BlockUntilSyncedToCurrentChain to maintain consistency with\n-  `getblockchaininfo`'s state immediately prior to the call's execution. Wallet\n-  RPCs whose behavior does *not* depend on the current chainstate may omit this\n-  call.\n-\n-  - *Rationale*: In previous versions of Bitcoin Core, the wallet was always\n-    in-sync with the chainstate (by virtue of them all being updated in the\n-    same cs_main lock). In order to maintain the behavior that wallet RPCs\n-    return results as of at least the highest best-known block an RPC\n-    client may be aware of prior to entering a wallet RPC call, we must block\n-    until the wallet is caught up to the chainstate as of the RPC call's entry.\n-    This also makes the API much easier for RPC clients to reason about."
      },
      {
        "sha": "d627c6c8ffff2b0bc06cacafa2b89b3ab641d5d6",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,12 +1,12 @@\n Expectations for DNS Seed operators\n ====================================\n \n-Bitcoin Core attempts to minimize the level of trust in DNS seeds,\n+Blockcash Core attempts to minimize the level of trust in DNS seeds,\n but DNS seeds still pose a small amount of risk for the network.\n As such, DNS seeds must be run by entities which have some minimum\n-level of trust within the Bitcoin community.\n+level of trust within the Blockcash community.\n \n-Other implementations of Bitcoin software may also use the same\n+Other implementations of Blockcash software may also use the same\n seeds and may be more exposed. In light of this exposure, this\n document establishes some basic expectations for operating dnsseeds.\n \n@@ -16,7 +16,7 @@ and not sell or transfer control of the DNS seed. Any hosting services\n contracted by the operator are equally expected to uphold these expectations.\n \n 1. The DNS seed results must consist exclusively of fairly selected and\n-functioning Bitcoin nodes from the public network to the best of the\n+functioning Blockcash nodes from the public network to the best of the\n operator's understanding and capability.\n \n 2. For the avoidance of doubt, the results may be randomized but must not\n@@ -26,7 +26,7 @@ urgent technical necessity and disclosed.\n 3. The results may not be served with a DNS TTL of less than one minute.\n \n 4. Any logging of DNS queries should be only that which is necessary\n-for the operation of the service or urgent health of the Bitcoin\n+for the operation of the service or urgent health of the Blockcash\n network and must not be retained longer than necessary nor disclosed\n to any third party.\n \n@@ -42,13 +42,13 @@ details of their operating practices.\n related to the DNS seed operation.\n \n If these expectations cannot be satisfied the operator should\n-discontinue providing services and contact the active Bitcoin\n+discontinue providing services and contact the active Blockcash\n Core development team as well as posting on\n-[bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\n+[blockcash-dev](https://groups.google.com/forum/#!forum/blockcash-dev).\n \n Behavior outside of these expectations may be reasonable in some\n situations but should be discussed in public in advance.\n \n See also\n ----------\n-- [bitcoin-seeder](https://github.com/sipa/bitcoin-seeder) is a reference implementation of a DNS seed.\n+- [blockcash-seeder](https://github.com/bpooler/blockcash-seeder) is a reference implementation of a DNS seed."
      },
      {
        "sha": "80f6dd6e5b38a31e0d19767b3dcdf2c41e44d56e",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,24 +1,20 @@\n \n * banlist.dat: stores the IPs/Subnets of banned nodes\n-* bitcoin.conf: contains configuration settings for bitcoind or bitcoin-qt\n-* bitcoind.pid: stores the process id of bitcoind while running\n+* blockcash.conf: contains configuration settings for blockcashd or blockcash-qt\n+* blockcashd.pid: stores the process id of blockcashd while running\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n * blocks/index/*; block index (LevelDB); since 0.8.0\n * chainstate/*; block chain state database (LevelDB); since 0.8.0\n-* database/*: BDB database environment; only used for wallet since 0.8.0; moved to wallets/ directory on new installs since 0.16.0\n-* db.log: wallet database log file; moved to wallets/ directory on new installs since 0.16.0\n-* debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n+* database/*: BDB database environment; only used for wallet since 0.8.0\n+* db.log: wallet database log file\n+* debug.log: contains debug information and general logging generated by blockcashd or blockcash-qt\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n * mempool.dat: dump of the mempool's transactions; since 0.14.0.\n * peers.dat: peer IP address database (custom format); since 0.7.0\n-* wallet.dat: personal wallet (BDB) with keys and transactions; moved to wallets/ directory on new installs since 0.16.0\n-* wallets/database/*: BDB database environment; used for wallets since 0.16.0\n-* wallets/db.log: wallet database log file; since 0.16.0\n-* wallets/wallet.dat: personal wallet (BDB) with keys and transactions; since 0.16.0\n+* wallet.dat: personal wallet (BDB) with keys and transactions\n * .cookie: session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n * onion_private_key: cached Tor hidden service private key for `-listenonion`: since 0.12.0\n-* guisettings.ini.bak: backup of former GUI settings after `-resetguisettings` is used\n \n Only used in pre-0.8.0\n ---------------------"
      },
      {
        "sha": "e17a2103ceae541df9fc043eadf44a7762e76680",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,7 +1,7 @@\n-Fuzz-testing Bitcoin Core\n+Fuzz-testing Blockcash Core\n ==========================\n \n-A special test harness `test_bitcoin_fuzzy` is provided to provide an easy\n+A special test harness `test_blockcash_fuzzy` is provided to provide an easy\n entry point for fuzzers and the like. In this document we'll describe how to\n use it with AFL.\n \n@@ -20,13 +20,13 @@ export AFLPATH=$PWD\n Instrumentation\n ----------------\n \n-To build Bitcoin Core using AFL instrumentation (this assumes that the\n+To build Blockcash Core using AFL instrumentation (this assumes that the\n `AFLPATH` was set as above):\n ```\n ./configure --disable-ccache --disable-shared --enable-tests CC=${AFLPATH}/afl-gcc CXX=${AFLPATH}/afl-g++\n export AFL_HARDEN=1\n cd src/\n-make test/test_bitcoin_fuzzy\n+make test/test_blockcash_fuzzy\n ```\n We disable ccache because we don't want to pollute the ccache with instrumented\n objects, and similarly don't want to use non-instrumented cached objects linked\n@@ -65,7 +65,7 @@ Fuzzing\n \n To start the actual fuzzing use:\n ```\n-$AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_bitcoin_fuzzy\n+$AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_blockcash_fuzzy\n ```\n \n You may have to change a few kernel parameters to test optimally - `afl-fuzz`"
      },
      {
        "sha": "ddce5154d5e630bdaef4f7f972b407ad0edbd2b9",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 481,
        "deletions": 1,
        "changes": 482,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,4 +1,484 @@\n Gitian building\n ================\n \n-This file was moved to [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs/blob/master/gitian-building.md) at [https://github.com/bitcoin-core/docs](https://github.com/bitcoin-core/docs).\n+*Setup instructions for a Gitian build of Blockcash Core using a Debian VM or physical system.*\n+\n+Gitian is the deterministic build process that is used to build the Blockcash\n+Core executables. It provides a way to be reasonably sure that the\n+executables are really built from the source on GitHub. It also makes sure that\n+the same, tested dependencies are used and statically built into the executable.\n+\n+Multiple developers build the source code by following a specific descriptor\n+(\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n+These results are compared and only if they match, the build is accepted and uploaded\n+to blockcash.org.\n+\n+More independent Gitian builders are needed, which is why this guide exists.\n+It is preferred you follow these steps yourself instead of using someone else's\n+VM image to avoid 'contaminating' the build.\n+\n+Table of Contents\n+------------------\n+\n+- [Create a new VirtualBox VM](#create-a-new-virtualbox-vm)\n+- [Connecting to the VM](#connecting-to-the-vm)\n+- [Setting up Debian for Gitian building](#setting-up-debian-for-gitian-building)\n+- [Installing Gitian](#installing-gitian)\n+- [Setting up the Gitian image](#setting-up-the-gitian-image)\n+- [Getting and building the inputs](#getting-and-building-the-inputs)\n+- [Building Blockcash Core](#building-blockcash-core)\n+- [Building an alternative repository](#building-an-alternative-repository)\n+- [Signing externally](#signing-externally)\n+- [Uploading signatures](#uploading-signatures)\n+\n+Preparing the Gitian builder host\n+---------------------------------\n+\n+The first step is to prepare the host environment that will be used to perform the Gitian builds.\n+This guide explains how to set up the environment, and how to start the builds.\n+\n+Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n+Any kind of virtualization can be used, for example:\n+- [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n+- [KVM](http://www.linux-kvm.org/page/Main_Page)\n+- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n+\n+You can also install Gitian on actual hardware instead of using virtualization.\n+\n+Create a new VirtualBox VM\n+---------------------------\n+In the VirtualBox GUI click \"New\" and choose the following parameters in the wizard:\n+\n+![](gitian-building/create_new_vm.png)\n+\n+- Type: Linux, Debian (64-bit)\n+\n+![](gitian-building/create_vm_memsize.png)\n+\n+- Memory Size: at least 3000MB, anything less and the build might not complete.\n+\n+![](gitian-building/create_vm_hard_disk.png)\n+\n+- Hard Disk: Create a virtual hard disk now\n+\n+![](gitian-building/create_vm_hard_disk_file_type.png)\n+\n+- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image)\n+\n+![](gitian-building/create_vm_storage_physical_hard_disk.png)\n+\n+- Storage on physical hard disk: Dynamically Allocated\n+\n+![](gitian-building/create_vm_file_location_size.png)\n+\n+- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side\n+- Click `Create`\n+\n+After creating the VM, we need to configure it.\n+\n+- Click the `Settings` button, then go to `System` tab and `Processor` sub-tab. Increase the number of processors to the number of cores on your machine if you want builds to be faster.\n+\n+![](gitian-building/system_settings.png)\n+\n+- Go to the `Network` tab. Adapter 1 should be attached to `NAT`.\n+\n+![](gitian-building/network_settings.png)\n+\n+- Click `Advanced`, then `Port Forwarding`. We want to set up a port through which we can reach the VM to get files in and out.\n+- Create a new rule by clicking the plus icon.\n+\n+![](gitian-building/port_forwarding_rules.png)\n+\n+- Set up the new rule the following way:\n+  - Name: `SSH`\n+  - Protocol: `TCP`\n+  - Leave Host IP empty\n+  - Host Port: `22222`\n+  - Leave Guest IP empty\n+  - Guest Port: `22`\n+\n+- Click `Ok` twice to save.\n+\n+Get the [Debian 8.x net installer](http://cdimage.debian.org/mirror/cdimage/archive/8.5.0/amd64/iso-cd/debian-8.5.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n+This DVD image can be [validated](https://www.debian.org/CD/verify) using a SHA256 hashing tool, for example on\n+Unixy OSes by entering the following in a terminal:\n+\n+    echo \"ad4e8c27c561ad8248d5ebc1d36eb172f884057bfeb2c22ead823f59fa8c3dff  debian-8.5.0-amd64-netinst.iso\" | sha256sum -c\n+    # (must return OK)\n+\n+Then start the VM. On the first launch you will be asked for a CD or DVD image. Choose the downloaded ISO.\n+\n+![](gitian-building/select_startup_disk.png)\n+\n+Installing Debian\n+------------------\n+\n+This section will explain how to install Debian on the newly created VM.\n+\n+- Choose the non-graphical installer.  We do not need the graphical environment; it will only increase installation time and disk usage.\n+\n+![](gitian-building/debian_install_1_boot_menu.png)\n+\n+**Note**: Navigating in the Debian installer:\n+To keep a setting at the default and proceed, just press `Enter`.\n+To select a different button, press `Tab`.\n+\n+- Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n+\n+![](gitian-building/debian_install_2_select_a_language.png)\n+![](gitian-building/debian_install_3_select_location.png)\n+![](gitian-building/debian_install_4_configure_keyboard.png)\n+\n+- The VM will detect network settings using DHCP, this should all proceed automatically\n+- Configure the network:\n+  - Hostname `debian`.\n+  - Leave domain name empty.\n+\n+![](gitian-building/debian_install_5_configure_the_network.png)\n+![](gitian-building/debian_install_6_domain_name.png)\n+\n+- Choose a root password and enter it twice (remember it for later)\n+\n+![](gitian-building/debian_install_6a_set_up_root_password.png)\n+\n+- Name the new user `debian` (the full name doesn't matter, you can leave it empty)\n+- Set the account username as `debian`\n+\n+![](gitian-building/debian_install_7_set_up_user_fullname.png)\n+![](gitian-building/debian_install_8_set_up_username.png)\n+\n+- Choose a user password and enter it twice (remember it for later)\n+\n+![](gitian-building/debian_install_9_user_password.png)\n+\n+- The installer will set up the clock using a time server; this process should be automatic\n+- Set up the clock: choose a time zone (depends on the locale settings that you picked earlier; specifics don't matter)  \n+\n+![](gitian-building/debian_install_10_configure_clock.png)\n+\n+- Disk setup\n+  - Partitioning method: Guided - Use the entire disk\n+\n+![](gitian-building/debian_install_11_partition_disks.png)\n+\n+  - Select disk to partition: SCSI1 (0,0,0)\n+\n+![](gitian-building/debian_install_12_choose_disk.png)\n+\n+  - Partition Disks -> *All files in one partition*\n+\n+![](gitian-building/all_files_in_one_partition.png)\n+\n+  - Finish partitioning and write changes to disk -> *Yes* (`Tab`, `Enter` to select the `Yes` button)\n+\n+![](gitian-building/debian_install_14_finish.png)\n+![](gitian-building/debian_install_15_write_changes.png)\n+\n+- The base system will be installed, this will take a minute or so\n+- Choose a mirror (any will do)\n+\n+![](gitian-building/debian_install_16_choose_a_mirror.png)\n+\n+- Enter proxy information (unless you are on an intranet, leave this empty)\n+\n+![](gitian-building/debian_install_18_proxy_settings.png)\n+\n+- Wait a bit while 'Select and install software' runs\n+- Participate in popularity contest -> *No*\n+- Choose software to install. We need just the base system.\n+- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n+- Uncheck 'Debian Desktop Environment' and 'Print Server'\n+\n+![](gitian-building/debian_install_19_software_selection.png)\n+\n+- Install the GRUB boot loader to the master boot record? -> Yes\n+\n+![](gitian-building/debian_install_20_install_grub.png)\n+\n+- Device for boot loader installation -> ata-VBOX_HARDDISK\n+\n+![](gitian-building/debian_install_21_install_grub_bootloader.png)\n+\n+- Installation Complete -> *Continue*\n+- After installation, the VM will reboot and you will have a working Debian VM. Congratulations!\n+\n+![](gitian-building/debian_install_22_finish_installation.png)\n+\n+\n+After Installation\n+-------------------\n+The next step in the guide involves logging in as root via SSH.\n+SSH login for root users is disabled by default, so we'll enable that now.\n+\n+Login to the VM using username `root` and the root password you chose earlier.\n+You'll be presented with a screen similar to this.\n+\n+![](gitian-building/debian_root_login.png)\n+\n+Type:\n+\n+```\n+sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config\n+```\n+and press enter. Then,\n+```\n+/etc/init.d/ssh restart\n+```\n+and enter to restart SSH. Logout by typing 'logout' and pressing 'enter'.\n+\n+Connecting to the VM\n+----------------------\n+\n+After the VM has booted you can connect to it using SSH, and files can be copied from and to the VM using a SFTP utility.\n+Connect to `localhost`, port `22222` (or the port configured when installing the VM).\n+On Windows you can use [putty](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) and [WinSCP](http://winscp.net/eng/index.php).\n+\n+For example, to connect as `root` from a Linux command prompt use\n+\n+    $ ssh root@localhost -p 22222\n+    The authenticity of host '[localhost]:22222 ([127.0.0.1]:22222)' can't be established.\n+    RSA key fingerprint is ae:f5:c8:9f:17:c6:c7:1b:c2:1b:12:31:1d:bb:d0:c7.\n+    Are you sure you want to continue connecting (yes/no)? yes\n+    Warning: Permanently added '[localhost]:22222' (RSA) to the list of known hosts.\n+    root@localhost's password: (enter root password configured during install)\n+\n+    The programs included with the Debian GNU/Linux system are free software;\n+    the exact distribution terms for each program are described in the\n+    individual files in /usr/share/doc/*/copyright.\n+\n+    Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\n+    permitted by applicable law.\n+    root@debian:~#\n+\n+Replace `root` with `debian` to log in as user.\n+\n+Setting up Debian for Gitian building\n+--------------------------------------\n+\n+In this section we will be setting up the Debian installation for Gitian building.\n+\n+First we need to log in as `root` to set up dependencies and make sure that our\n+user can use the sudo command. Type/paste the following in the terminal:\n+\n+```bash\n+apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring curl\n+adduser debian sudo\n+```\n+\n+Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n+\n+```bash\n+# the version of lxc-start in Debian needs to run as root, so make sure\n+# that the build script can execute it without providing a password\n+echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n+echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-execute\" >> /etc/sudoers.d/gitian-lxc\n+# make /etc/rc.local script that sets up bridge between guest and host\n+echo '#!/bin/sh -e' > /etc/rc.local\n+echo 'brctl addbr br0' >> /etc/rc.local\n+echo 'ifconfig br0 10.0.3.2/24 up' >> /etc/rc.local\n+echo 'iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE' >> /etc/rc.local\n+echo 'echo 1 > /proc/sys/net/ipv4/ip_forward' >> /etc/rc.local\n+echo 'exit 0' >> /etc/rc.local\n+# make sure that USE_LXC is always set when logging in as debian,\n+# and configure LXC IP addresses\n+echo 'export USE_LXC=1' >> /home/debian/.profile\n+echo 'export GITIAN_HOST_IP=10.0.3.2' >> /home/debian/.profile\n+echo 'export LXC_GUEST_IP=10.0.3.5' >> /home/debian/.profile\n+reboot\n+```\n+\n+At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n+section only need to be performed once.\n+\n+Installing Gitian\n+------------------\n+\n+Re-login as the user `debian` that was created during installation.\n+The rest of the steps in this guide will be performed as that user.\n+\n+There is no `python-vm-builder` package in Debian, so we need to install it from source ourselves,\n+\n+```bash\n+wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr494.orig.tar.gz\n+echo \"76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e  vm-builder_0.12.4+bzr494.orig.tar.gz\" | sha256sum -c\n+# (verification -- must return OK)\n+tar -zxvf vm-builder_0.12.4+bzr494.orig.tar.gz\n+cd vm-builder-0.12.4+bzr494\n+sudo python setup.py install\n+cd ..\n+```\n+\n+**Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n+\n+Clone the git repositories for blockcash and Gitian.\n+\n+```bash\n+git clone https://github.com/devrandom/gitian-builder.git\n+git clone https://github.com/blockcash/blockcash\n+git clone https://github.com/blockcash/gitian.sigs.git\n+```\n+\n+Setting up the Gitian image\n+-------------------------\n+\n+Gitian needs a virtual image of the operating system to build in.\n+Currently this is Ubuntu Trusty x86_64.\n+This image will be copied and used every time that a build is started to\n+make sure that the build is deterministic.\n+Creating the image will take a while, but only has to be done once.\n+\n+Execute the following as user `debian`:\n+\n+```bash\n+cd gitian-builder\n+bin/make-base-vm --lxc --arch amd64 --suite trusty\n+```\n+\n+There will be a lot of warnings printed during the build of the image. These can be ignored.\n+\n+**Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n+\n+Getting and building the inputs\n+--------------------------------\n+\n+At this point you have two options, you can either use the automated script (found in [contrib/gitian-build.sh](/contrib/gitian-build.sh)) or you could manually do everything by following this guide. If you're using the automated script, then run it with the \"--setup\" command. Afterwards, run it with the \"--build\" command (example: \"contrib/gitian-build.sh -b signer 0.13.0\"). Otherwise ignore this.\n+\n+Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-create-inputs-first-time-or-when-dependency-versions-change)\n+in the blockcash repository under 'Fetch and create inputs' to install sources which require\n+manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n+and offline git repositories' which will fetch the remaining files required for building\n+offline.\n+\n+Building Blockcash Core\n+----------------\n+\n+To build Blockcash Core (for Linux, OS X and Windows) just follow the steps under 'perform\n+Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the blockcash repository.\n+\n+This may take some time as it will build all the dependencies needed for each descriptor.\n+These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n+\n+At any time you can check the package installation and build progress with\n+\n+```bash\n+tail -f var/install.log\n+tail -f var/build.log\n+```\n+\n+Output from `gbuild` will look something like\n+\n+    Initialized empty Git repository in /home/debian/gitian-builder/inputs/blockcash/.git/\n+    remote: Counting objects: 57959, done.\n+    remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n+    Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n+    Resolving deltas: 100% (41590/41590), done.\n+    From https://github.com/blockcash/blockcash\n+    ... (new tags, new branch etc)\n+    --- Building for trusty amd64 ---\n+    Stopping target if it is up\n+    Making a new image copy\n+    stdin: is not a tty\n+    Starting target\n+    Checking if target is up\n+    Preparing build environment\n+    Updating apt-get repository (log in var/install.log)\n+    Installing additional packages (log in var/install.log)\n+    Grabbing package manifest\n+    stdin: is not a tty\n+    Creating build script (var/build-script)\n+    lxc-start: Connection refused - inotify event with no name (mask 32768)\n+    Running build script (log in var/build.log)\n+\n+Building an alternative repository\n+-----------------------------------\n+\n+If you want to do a test build of a pull on GitHub it can be useful to point\n+the Gitian builder at an alternative repository, using the same descriptors\n+and inputs.\n+\n+For example:\n+```bash\n+URL=https://github.com/thrasher-/blockcash.git\n+COMMIT=2014_03_windows_unicode_path\n+./bin/gbuild --commit blockcash=${COMMIT} --url blockcash=${URL} ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+./bin/gbuild --commit blockcash=${COMMIT} --url blockcash=${URL} ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+./bin/gbuild --commit blockcash=${COMMIT} --url blockcash=${URL} ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n+```\n+\n+Building fully offline\n+-----------------------\n+\n+For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n+and the blockcash git repository with the desired tag must both be available locally, and then gbuild must be\n+told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n+manually disabling gitian-builder's use of apt-get to update the VM build environment.\n+\n+To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n+files. You must additionally patch target-bin/bootstrap-fixup to set its apt sources to something other than\n+plain archive.ubuntu.com: us.archive.ubuntu.com works.\n+\n+So, if you use LXC:\n+\n+```bash\n+export PATH=\"$PATH\":/path/to/gitian-builder/libexec\n+export USE_LXC=1\n+cd /path/to/gitian-builder\n+./libexec/make-clean-vm --suite trusty --arch amd64\n+\n+LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get update\n+LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root \\\n+  -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../blockcash/contrib/gitian-descriptors/*|sort|uniq )\n+LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get -q -y purge grub\n+LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n+```\n+\n+And then set offline mode for apt-cacher-ng:\n+\n+```\n+/etc/apt-cacher-ng/acng.conf\n+[...]\n+Offlinemode: 1\n+[...]\n+\n+service apt-cacher-ng restart\n+```\n+\n+Then when building, override the remote URLs that gbuild would otherwise pull from the Gitian descriptors::\n+```bash\n+\n+cd /some/root/path/\n+git clone https://github.com/blockcash/blockcash-detached-sigs.git\n+\n+BTCPATH=/some/root/path/blockcash\n+SIGPATH=/some/root/path/blockcash-detached-sigs\n+\n+./bin/gbuild --url blockcash=${BTCPATH},signature=${SIGPATH} ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+```\n+\n+Signing externally\n+-------------------\n+\n+If you want to do the PGP signing on another device, that's also possible; just define `SIGNER` as mentioned\n+and follow the steps in the build process as normal.\n+\n+    gpg: skipped \"laanwj\": secret key not available\n+\n+When you execute `gsign` you will get an error from GPG, which can be ignored. Copy the resulting `.assert` files\n+in `gitian.sigs` to your signing machine and do\n+\n+```bash\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/blockcash-linux-build.assert\n+    gpg --detach-sign ${VERSION}-win/${SIGNER}/blockcash-win-build.assert\n+    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/blockcash-osx-build.assert\n+```\n+\n+This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n+Gitian build.\n+\n+Uploading signatures\n+---------------------\n+\n+After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n+[blockcash/gitian.sigs](https://github.com/blockcash/gitian.sigs/) repository, or if that's not possible create a pull\n+request. You can also mail the files to thrasher (thrasher@addictionsofware.com) and he will commit them."
      },
      {
        "sha": "e3db5b05efcd6f93eaf114d731cf090a4882d07f",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -10,14 +10,14 @@ can be found in the contrib/init folder.\n     contrib/init/bitcoind.conf:       Upstart service configuration file\n     contrib/init/bitcoind.init:       CentOS compatible SysV style init script\n \n-Service User\n+1. Service User\n ---------------------------------\n \n All three Linux startup configurations assume the existence of a \"bitcoin\" user\n and group.  They must be created before attempting to use these scripts.\n The OS X configuration assumes bitcoind will be set up for the current user.\n \n-Configuration\n+2. Configuration\n ---------------------------------\n \n At a bare minimum, bitcoind requires that the rpcpassword setting be set\n@@ -46,10 +46,10 @@ relative to the data directory. `wallet` *only* supports relative paths.\n For an example configuration file that describes the configuration settings,\n see `contrib/debian/examples/bitcoin.conf`.\n \n-Paths\n+3. Paths\n ---------------------------------\n \n-### Linux\n+3a) Linux\n \n All three configurations assume several paths that might need to be adjusted.\n \n@@ -65,17 +65,17 @@ reasons to make the configuration file and data directory only readable by the\n bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n can then be controlled by group membership.\n \n-### Mac OS X\n+3b) Mac OS X\n \n Binary:              `/usr/local/bin/bitcoind`  \n Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n-Data directory:      `~/Library/Application Support/Bitcoin`  \n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`  \n+Data directory:      `~/Library/Application Support/Bitcoin`\n+Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n \n-Installing Service Configuration\n+4. Installing Service Configuration\n -----------------------------------\n \n-### systemd\n+4a) systemd\n \n Installing this .service file consists of just copying it to\n /usr/lib/systemd/system directory, followed by the command\n@@ -84,30 +84,30 @@ Installing this .service file consists of just copying it to\n To test, run `systemctl start bitcoind` and to enable for system startup run\n `systemctl enable bitcoind`\n \n-### OpenRC\n+4b) OpenRC\n \n Rename bitcoind.openrc to bitcoind and drop it in /etc/init.d.  Double\n check ownership and permissions and make it executable.  Test it with\n `/etc/init.d/bitcoind start` and configure it to run on startup with\n `rc-update add bitcoind`\n \n-### Upstart (for Debian/Ubuntu based distributions)\n+4c) Upstart (for Debian/Ubuntu based distributions)\n \n Drop bitcoind.conf in /etc/init.  Test by running `service bitcoind start`\n it will automatically start on reboot.\n \n NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they\n use old versions of Upstart and do not supply the start-stop-daemon utility.\n \n-### CentOS\n+4d) CentOS\n \n Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n \n Using this script, you can adjust the path and flags to the bitcoind program by\n setting the BITCOIND and FLAGS environment variables in the file\n /etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n \n-### Mac OS X\n+4e) Mac OS X\n \n Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n@@ -118,7 +118,7 @@ NOTE: This approach is intended for those wanting to run bitcoind as the current\n You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n Launch Daemon with a dedicated bitcoin user.\n \n-Auto-respawn\n+5. Auto-respawn\n -----------------------------------\n \n Auto respawning is currently only configured for Upstart and systemd."
      },
      {
        "sha": "65379cc2141cc1aa6f001c5b6a1a693fadbbeca6",
        "filename": "doc/man/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,13 +1,13 @@\n dist_man1_MANS=\n \n if BUILD_BITCOIND\n-  dist_man1_MANS+=bitcoind.1\n+  dist_man1_MANS+=blockcahd.1\n endif\n \n if ENABLE_QT\n-  dist_man1_MANS+=bitcoin-qt.1\n+  dist_man1_MANS+=blockcash-qt.1\n endif\n \n if BUILD_BITCOIN_UTILS\n-  dist_man1_MANS+=bitcoin-cli.1 bitcoin-tx.1\n+  dist_man1_MANS+=blockcash-cli.1 blockcash-tx.1\n endif"
      },
      {
        "sha": "7c29bcebd4fc2e94a2213ff35c7b40a55f55df6a",
        "filename": "doc/man/blockcash-cli.1",
        "status": "added",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/blockcash-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/blockcash-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/blockcash-cli.1?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,94 @@\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n+.TH BLOCKCASH-CLI \"1\" \"September 2017\" \"blockcash-cli v0.15.0.1\" \"User Commands\"\n+.SH NAME\n+blockcash-cli \\- manual page for blockcash-cli v0.15.0.1\n+.SH DESCRIPTION\n+Blockcash Core RPC client version v0.15.0.1\\-dirty\n+.SS \"Usage:\"\n+.TP\n+blockcash\\-cli [options] <command> [params]\n+Send command to Blockcash Core\n+.IP\n+blockcash\\-cli [options] \\fB\\-named\\fR <command> [name=value] ... Send command to Blockcash Core (with named arguments)\n+blockcash\\-cli [options] help                List commands\n+blockcash\\-cli [options] help <command>      Get help for a command\n+.SH OPTIONS\n+.HP\n+\\-?\n+.IP\n+This help message\n+.HP\n+\\fB\\-conf=\\fR<file>\n+.IP\n+Specify configuration file (default: blockcash.conf)\n+.HP\n+\\fB\\-datadir=\\fR<dir>\n+.IP\n+Specify data directory\n+.PP\n+Chain selection options:\n+.HP\n+\\fB\\-testnet\\fR\n+.IP\n+Use the test chain\n+.HP\n+\\fB\\-regtest\\fR\n+.IP\n+Enter regression test mode, which uses a special chain in which blocks\n+can be solved instantly. This is intended for regression testing\n+tools and app development.\n+.HP\n+\\fB\\-named\\fR\n+.IP\n+Pass named instead of positional arguments (default: false)\n+.HP\n+\\fB\\-rpcconnect=\\fR<ip>\n+.IP\n+Send commands to node running on <ip> (default: 127.0.0.1)\n+.HP\n+\\fB\\-rpcport=\\fR<port>\n+.IP\n+Connect to JSON\\-RPC on <port> (default: 9332 or testnet: 19332)\n+.HP\n+\\fB\\-rpcwait\\fR\n+.IP\n+Wait for RPC server to start\n+.HP\n+\\fB\\-rpcuser=\\fR<user>\n+.IP\n+Username for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcpassword=\\fR<pw>\n+.IP\n+Password for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcclienttimeout=\\fR<n>\n+.IP\n+Timeout in seconds during HTTP requests, or 0 for no timeout. (default:\n+900)\n+.HP\n+\\fB\\-stdin\\fR\n+.IP\n+Read extra arguments from standard input, one per line until EOF/Ctrl\\-D\n+(recommended for sensitive information such as passphrases)\n+.HP\n+\\fB\\-rpcwallet=\\fR<walletname>\n+.IP\n+Send RPC for non\\-default wallet on RPC server (argument is wallet\n+filename in blockcashd directory, required if blockcashd/\\-Qt runs\n+with multiple wallets)\n+.SH COPYRIGHT\n+Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (C) 2011-2017 The Blockcash Core developers\n+\n+Please contribute if you find Blockcash Core useful. Visit\n+<https://blockcash.org> for further information about the software.\n+The source code is available from <https://github.com/blockcash/blockcash>.\n+\n+This is experimental software.\n+Distributed under the MIT software license, see the accompanying file COPYING\n+or <https://opensource.org/licenses/MIT>\n+\n+This product includes software developed by the OpenSSL Project for use in the\n+OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n+Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "14d605b141ddcf01dbf7b400837e5df3ba2f0263",
        "filename": "doc/man/blockcash-qt.1",
        "status": "added",
        "additions": 562,
        "deletions": 0,
        "changes": 562,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/blockcash-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/blockcash-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/blockcash-qt.1?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,562 @@\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n+.TH BLOCKCASH-QT \"1\" \"September 2017\" \"blockcash-qt v0.15.0.1\" \"User Commands\"\n+.SH NAME\n+blockcash-qt \\- manual page for blockcash-qt v0.15.0.1\n+.SH DESCRIPTION\n+Blockcash Core version v0.15.0.1\\-dirty (64\\-bit)\n+Usage:\n+.IP\n+blockcash\\-qt [command\\-line options]\n+.SH OPTIONS\n+.HP\n+\\-?\n+.IP\n+Print this help message and exit\n+.HP\n+\\fB\\-version\\fR\n+.IP\n+Print version and exit\n+.HP\n+\\fB\\-alertnotify=\\fR<cmd>\n+.IP\n+Execute command when a relevant alert is received or we see a really\n+long fork (%s in cmd is replaced by message)\n+.HP\n+\\fB\\-blocknotify=\\fR<cmd>\n+.IP\n+Execute command when the best block changes (%s in cmd is replaced by\n+block hash)\n+.HP\n+\\fB\\-assumevalid=\\fR<hex>\n+.IP\n+If this block is in the chain assume that it and its ancestors are valid\n+and potentially skip their script verification (0 to verify all,\n+default:\n+29c8c00e1a5f446a6364a29633d3f1ee16428d87c8d3851a1c570be8170b04c2,\n+testnet:\n+ad8ff6c2f5580d2b50bd881e11312425ea84fa99f322bf132beb722f97971bba)\n+.HP\n+\\fB\\-conf=\\fR<file>\n+.IP\n+Specify configuration file (default: blockcash.conf)\n+.HP\n+\\fB\\-datadir=\\fR<dir>\n+.IP\n+Specify data directory\n+.HP\n+\\fB\\-dbcache=\\fR<n>\n+.IP\n+Set database cache size in megabytes (4 to 16384, default: 450)\n+.HP\n+\\fB\\-loadblock=\\fR<file>\n+.IP\n+Imports blocks from external blk000??.dat file on startup\n+.HP\n+\\fB\\-maxorphantx=\\fR<n>\n+.IP\n+Keep at most <n> unconnectable transactions in memory (default: 100)\n+.HP\n+\\fB\\-maxmempool=\\fR<n>\n+.IP\n+Keep the transaction memory pool below <n> megabytes (default: 5)\n+.HP\n+\\fB\\-mempoolexpiry=\\fR<n>\n+.IP\n+Do not keep transactions in the mempool longer than <n> hours (default:\n+336)\n+.HP\n+\\fB\\-persistmempool\\fR\n+.IP\n+Whether to save the mempool on shutdown and load on restart (default: 1)\n+.HP\n+\\fB\\-blockreconstructionextratxn=\\fR<n>\n+.IP\n+Extra transactions to keep in memory for compact block reconstructions\n+(default: 100)\n+.HP\n+\\fB\\-par=\\fR<n>\n+.IP\n+Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n+leave that many cores free, default: 0)\n+.HP\n+\\fB\\-pid=\\fR<file>\n+.IP\n+Specify pid file (default: blockcashd.pid)\n+.HP\n+\\fB\\-prune=\\fR<n>\n+.IP\n+Reduce storage requirements by enabling pruning (deleting) of old\n+blocks. This allows the pruneblockchain RPC to be called to\n+delete specific blocks, and enables automatic pruning of old\n+blocks if a target size in MiB is provided. This mode is\n+incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR. Warning: Reverting this\n+setting requires re\\-downloading the entire blockchain. (default:\n+0 = disable pruning blocks, 1 = allow manual pruning via RPC,\n+>550 = automatically prune block files to stay under the\n+specified target size in MiB)\n+.HP\n+\\fB\\-reindex\\-chainstate\\fR\n+.IP\n+Rebuild chain state from the currently indexed blocks\n+.HP\n+\\fB\\-reindex\\fR\n+.IP\n+Rebuild chain state and block index from the blk*.dat files on disk\n+.HP\n+\\fB\\-sysperms\\fR\n+.IP\n+Create new files with system default permissions, instead of umask 077\n+(only effective with disabled wallet functionality)\n+.HP\n+\\fB\\-txindex\\fR\n+.IP\n+Maintain a full transaction index, used by the getrawtransaction rpc\n+call (default: 0)\n+.PP\n+Connection options:\n+.HP\n+\\fB\\-addnode=\\fR<ip>\n+.IP\n+Add a node to connect to and attempt to keep the connection open\n+.HP\n+\\fB\\-banscore=\\fR<n>\n+.IP\n+Threshold for disconnecting misbehaving peers (default: 100)\n+.HP\n+\\fB\\-bantime=\\fR<n>\n+.IP\n+Number of seconds to keep misbehaving peers from reconnecting (default:\n+86400)\n+.HP\n+\\fB\\-bind=\\fR<addr>\n+.IP\n+Bind to given address and always listen on it. Use [host]:port notation\n+for IPv6\n+.HP\n+\\fB\\-connect=\\fR<ip>\n+.IP\n+Connect only to the specified node(s); \\fB\\-connect\\fR=\\fI\\,0\\/\\fR disables automatic\n+connections\n+.HP\n+\\fB\\-discover\\fR\n+.IP\n+Discover own IP addresses (default: 1 when listening and no \\fB\\-externalip\\fR\n+or \\fB\\-proxy\\fR)\n+.HP\n+\\fB\\-dns\\fR\n+.IP\n+Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (default: 1)\n+.HP\n+\\fB\\-dnsseed\\fR\n+.IP\n+Query for peer addresses via DNS lookup, if low on addresses (default: 1\n+unless \\fB\\-connect\\fR used)\n+.HP\n+\\fB\\-externalip=\\fR<ip>\n+.IP\n+Specify your own public address\n+.HP\n+\\fB\\-forcednsseed\\fR\n+.IP\n+Always query for peer addresses via DNS lookup (default: 0)\n+.HP\n+\\fB\\-listen\\fR\n+.IP\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n+.HP\n+\\fB\\-listenonion\\fR\n+.IP\n+Automatically create Tor hidden service (default: 1)\n+.HP\n+\\fB\\-maxconnections=\\fR<n>\n+.IP\n+Maintain at most <n> connections to peers (default: 125)\n+.HP\n+\\fB\\-maxreceivebuffer=\\fR<n>\n+.IP\n+Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n+.HP\n+\\fB\\-maxsendbuffer=\\fR<n>\n+.IP\n+Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n+.HP\n+\\fB\\-maxtimeadjustment\\fR\n+.IP\n+Maximum allowed median peer time offset adjustment. Local perspective of\n+time may be influenced by peers forward or backward by this\n+amount. (default: 4200 seconds)\n+.HP\n+\\fB\\-onion=\\fR<ip:port>\n+.IP\n+Use separate SOCKS5 proxy to reach peers via Tor hidden services\n+(default: \\fB\\-proxy\\fR)\n+.HP\n+\\fB\\-onlynet=\\fR<net>\n+.IP\n+Only connect to nodes in network <net> (ipv4, ipv6 or onion)\n+.HP\n+\\fB\\-permitbaremultisig\\fR\n+.IP\n+Relay non\\-P2SH multisig (default: 1)\n+.HP\n+\\fB\\-peerbloomfilters\\fR\n+.IP\n+Support filtering of blocks and transaction with bloom filters (default:\n+1)\n+.HP\n+\\fB\\-port=\\fR<port>\n+.IP\n+Listen for connections on <port> (default: 8333 or testnet: 18333)\n+.HP\n+\\fB\\-proxy=\\fR<ip:port>\n+.IP\n+Connect through SOCKS5 proxy\n+.HP\n+\\fB\\-proxyrandomize\\fR\n+.IP\n+Randomize credentials for every proxy connection. This enables Tor\n+stream isolation (default: 1)\n+.HP\n+\\fB\\-seednode=\\fR<ip>\n+.IP\n+Connect to a node to retrieve peer addresses, and disconnect\n+.HP\n+\\fB\\-timeout=\\fR<n>\n+.IP\n+Specify connection timeout in milliseconds (minimum: 1, default: 5000)\n+.HP\n+\\fB\\-torcontrol=\\fR<ip>:<port>\n+.IP\n+Tor control port to use if onion listening enabled (default:\n+127.0.0.1:9051)\n+.HP\n+\\fB\\-torpassword=\\fR<pass>\n+.IP\n+Tor control port password (default: empty)\n+.HP\n+\\fB\\-upnp\\fR\n+.IP\n+Use UPnP to map the listening port (default: 0)\n+.HP\n+\\fB\\-whitebind=\\fR<addr>\n+.IP\n+Bind to given address and whitelist peers connecting to it. Use\n+[host]:port notation for IPv6\n+.HP\n+\\fB\\-whitelist=\\fR<IP address or network>\n+.IP\n+Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n+CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n+times. Whitelisted peers cannot be DoS banned and their\n+transactions are always relayed, even if they are already in the\n+mempool, useful e.g. for a gateway\n+.HP\n+\\fB\\-maxuploadtarget=\\fR<n>\n+.IP\n+Tries to keep outbound traffic under the given target (in MiB per 24h),\n+0 = no limit (default: 0)\n+.PP\n+Wallet options:\n+.HP\n+\\fB\\-disablewallet\\fR\n+.IP\n+Do not load the wallet and disable wallet RPC calls\n+.HP\n+\\fB\\-keypool=\\fR<n>\n+.IP\n+Set key pool size to <n> (default: 1000)\n+.HP\n+\\fB\\-fallbackfee=\\fR<amt>\n+.IP\n+A fee rate (in LTC/kB) that will be used when fee estimation has\n+insufficient data (default: 0.002)\n+.HP\n+\\fB\\-discardfee=\\fR<amt>\n+.IP\n+The fee rate (in LTC/kB) that indicates your tolerance for discarding\n+change by adding it to the fee (default: 0.0001). Note: An output\n+is discarded if it is dust at this rate, but we will always\n+discard up to the dust relay fee and a discard fee above that is\n+limited by the fee estimate for the longest target\n+.HP\n+\\fB\\-mintxfee=\\fR<amt>\n+.IP\n+Fees (in LTC/kB) smaller than this are considered zero fee for\n+transaction creation (default: 0.001)\n+.HP\n+\\fB\\-paytxfee=\\fR<amt>\n+.IP\n+Fee (in LTC/kB) to add to transactions you send (default: 0.00)\n+.HP\n+\\fB\\-rescan\\fR\n+.IP\n+Rescan the block chain for missing wallet transactions on startup\n+.HP\n+\\fB\\-salvagewallet\\fR\n+.IP\n+Attempt to recover private keys from a corrupt wallet on startup\n+.HP\n+\\fB\\-spendzeroconfchange\\fR\n+.IP\n+Spend unconfirmed change when sending transactions (default: 1)\n+.HP\n+\\fB\\-txconfirmtarget=\\fR<n>\n+.IP\n+If paytxfee is not set, include enough fee so transactions begin\n+confirmation on average within n blocks (default: 6)\n+.HP\n+\\fB\\-usehd\\fR\n+.IP\n+Use hierarchical deterministic key generation (HD) after BIP32. Only has\n+effect during wallet creation/first start (default: 1)\n+.HP\n+\\fB\\-walletrbf\\fR\n+.IP\n+Send transactions with full\\-RBF opt\\-in enabled (default: 0)\n+.HP\n+\\fB\\-upgradewallet\\fR\n+.IP\n+Upgrade wallet to latest format on startup\n+.HP\n+\\fB\\-wallet=\\fR<file>\n+.IP\n+Specify wallet file (within data directory) (default: wallet.dat)\n+.HP\n+\\fB\\-walletbroadcast\\fR\n+.IP\n+Make the wallet broadcast transactions (default: 1)\n+.HP\n+\\fB\\-walletnotify=\\fR<cmd>\n+.IP\n+Execute command when a wallet transaction changes (%s in cmd is replaced\n+by TxID)\n+.HP\n+\\fB\\-zapwallettxes=\\fR<mode>\n+.IP\n+Delete all wallet transactions and only recover those parts of the\n+blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n+account owner and payment request information, 2 = drop tx meta\n+data)\n+.PP\n+ZeroMQ notification options:\n+.HP\n+\\fB\\-zmqpubhashblock=\\fR<address>\n+.IP\n+Enable publish hash block in <address>\n+.HP\n+\\fB\\-zmqpubhashtx=\\fR<address>\n+.IP\n+Enable publish hash transaction in <address>\n+.HP\n+\\fB\\-zmqpubrawblock=\\fR<address>\n+.IP\n+Enable publish raw block in <address>\n+.HP\n+\\fB\\-zmqpubrawtx=\\fR<address>\n+.IP\n+Enable publish raw transaction in <address>\n+.PP\n+Debugging/Testing options:\n+.HP\n+\\fB\\-uacomment=\\fR<cmt>\n+.IP\n+Append comment to the user agent string\n+.HP\n+\\fB\\-debug=\\fR<category>\n+.IP\n+Output debugging information (default: 0, supplying <category> is\n+optional). If <category> is not supplied or if <category> = 1,\n+output all debugging information. <category> can be: net, tor,\n+mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n+selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n+libevent, coindb, qt, leveldb.\n+.HP\n+\\fB\\-debugexclude=\\fR<category>\n+.IP\n+Exclude debugging information for a category. Can be used in conjunction\n+with \\fB\\-debug\\fR=\\fI\\,1\\/\\fR to output debug logs for all categories except one\n+or more specified categories.\n+.HP\n+\\fB\\-help\\-debug\\fR\n+.IP\n+Show all debugging options (usage: \\fB\\-\\-help\\fR \\fB\\-help\\-debug\\fR)\n+.HP\n+\\fB\\-logips\\fR\n+.IP\n+Include IP addresses in debug output (default: 0)\n+.HP\n+\\fB\\-logtimestamps\\fR\n+.IP\n+Prepend debug output with timestamp (default: 1)\n+.HP\n+\\fB\\-maxtxfee=\\fR<amt>\n+.IP\n+Maximum total fees (in LTC) to use in a single wallet transaction or raw\n+transaction; setting this too low may abort large transactions\n+(default: 0.10)\n+.HP\n+\\fB\\-printtoconsole\\fR\n+.IP\n+Send trace/debug info to console instead of debug.log file\n+.HP\n+\\fB\\-shrinkdebugfile\\fR\n+.IP\n+Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n+.PP\n+Chain selection options:\n+.HP\n+\\fB\\-testnet\\fR\n+.IP\n+Use the test chain\n+.PP\n+Node relay options:\n+.HP\n+\\fB\\-bytespersigop\\fR\n+.IP\n+Equivalent bytes per sigop in transactions for relay and mining\n+(default: 20)\n+.HP\n+\\fB\\-datacarrier\\fR\n+.IP\n+Relay and mine data carrier transactions (default: 1)\n+.HP\n+\\fB\\-datacarriersize\\fR\n+.IP\n+Maximum size of data in data carrier transactions we relay and mine\n+(default: 83)\n+.HP\n+\\fB\\-mempoolreplacement\\fR\n+.IP\n+Enable transaction replacement in the memory pool (default: 1)\n+.HP\n+\\fB\\-minrelaytxfee=\\fR<amt>\n+.IP\n+Fees (in LTC/kB) smaller than this are considered zero fee for relaying,\n+mining and transaction creation (default: 0.001)\n+.HP\n+\\fB\\-whitelistrelay\\fR\n+.IP\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n+.HP\n+\\fB\\-whitelistforcerelay\\fR\n+.IP\n+Force relay of transactions from whitelisted peers even if they violate\n+local relay policy (default: 1)\n+.PP\n+Block creation options:\n+.HP\n+\\fB\\-blockmaxweight=\\fR<n>\n+.IP\n+Set maximum BIP141 block weight (default: 3000000)\n+.HP\n+\\fB\\-blockmaxsize=\\fR<n>\n+.IP\n+Set maximum block size in bytes (default: 750000)\n+.HP\n+\\fB\\-blockmintxfee=\\fR<amt>\n+.IP\n+Set lowest fee rate (in LTC/kB) for transactions to be included in block\n+creation. (default: 0.00001)\n+.PP\n+RPC server options:\n+.HP\n+\\fB\\-server\\fR\n+.IP\n+Accept command line and JSON\\-RPC commands\n+.HP\n+\\fB\\-rest\\fR\n+.IP\n+Accept public REST requests (default: 0)\n+.HP\n+\\fB\\-rpcbind=\\fR<addr>[:port]\n+.IP\n+Bind to given address to listen for JSON\\-RPC connections. This option is\n+ignored unless \\fB\\-rpcallowip\\fR is also passed. Port is optional and\n+overrides \\fB\\-rpcport\\fR. Use [host]:port notation for IPv6. This\n+option can be specified multiple times (default: 127.0.0.1 and\n+::1 i.e., localhost, or if \\fB\\-rpcallowip\\fR has been specified,\n+0.0.0.0 and :: i.e., all addresses)\n+.HP\n+\\fB\\-rpccookiefile=\\fR<loc>\n+.IP\n+Location of the auth cookie (default: data dir)\n+.HP\n+\\fB\\-rpcuser=\\fR<user>\n+.IP\n+Username for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcpassword=\\fR<pw>\n+.IP\n+Password for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcauth=\\fR<userpw>\n+.IP\n+Username and hashed password for JSON\\-RPC connections. The field\n+<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n+canonical python script is included in share/rpcuser. The client\n+then connects normally using the\n+rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n+option can be specified multiple times\n+.HP\n+\\fB\\-rpcport=\\fR<port>\n+.IP\n+Listen for JSON\\-RPC connections on <port> (default: 29252 or testnet:\n+39252)\n+.HP\n+\\fB\\-rpcallowip=\\fR<ip>\n+.IP\n+Allow JSON\\-RPC connections from specified source. Valid for <ip> are a\n+single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n+1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n+option can be specified multiple times\n+.HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n+\\fB\\-rpcthreads=\\fR<n>\n+.IP\n+Set the number of threads to service RPC calls (default: 4)\n+.PP\n+UI Options:\n+.HP\n+\\fB\\-choosedatadir\\fR\n+.IP\n+Choose data directory on startup (default: 0)\n+.HP\n+\\fB\\-lang=\\fR<lang>\n+.IP\n+Set language, for example \"de_DE\" (default: system locale)\n+.HP\n+\\fB\\-min\\fR\n+.IP\n+Start minimized\n+.HP\n+\\fB\\-rootcertificates=\\fR<file>\n+.IP\n+Set SSL root certificates for payment request (default: \\fB\\-system\\-\\fR)\n+.HP\n+\\fB\\-splash\\fR\n+.IP\n+Show splash screen on startup (default: 1)\n+.HP\n+\\fB\\-resetguisettings\\fR\n+.IP\n+Reset all settings changed in the GUI\n+.SH COPYRIGHT\n+Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (C) 2011-2017 The Blockcash Core developers\n+\n+Please contribute if you find Blockcash Core useful. Visit\n+<https://blockcash.org> for further information about the software.\n+The source code is available from <https://github.com/blockcash/blockcash>.\n+\n+This is experimental software.\n+Distributed under the MIT software license, see the accompanying file COPYING\n+or <https://opensource.org/licenses/MIT>\n+\n+This product includes software developed by the OpenSSL Project for use in the\n+OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n+Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "40ab75b4af97c6402da2ee1f6b12914a7f6a00fc",
        "filename": "doc/man/blockcash-t.1",
        "status": "added",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/blockcash-t.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/blockcash-t.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/blockcash-t.1?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,128 @@\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n+.TH BLOCKCASH-TX \"1\" \"September 2017\" \"blockcash-tx v0.15.0.1\" \"User Commands\"\n+.SH NAME\n+blockcash-tx \\- manual page for blockcash-tx v0.15.0.1\n+.SH DESCRIPTION\n+Blockcash Core blockcash\\-tx utility version v0.15.0.1\\-dirty\n+.SS \"Usage:\"\n+.TP\n+blockcash\\-tx [options] <hex\\-tx> [commands]\n+Update hex\\-encoded blockcash transaction\n+.TP\n+blockcash\\-tx [options] \\fB\\-create\\fR [commands]\n+Create hex\\-encoded blockcash transaction\n+.SH OPTIONS\n+.HP\n+\\-?\n+.IP\n+This help message\n+.HP\n+\\fB\\-create\\fR\n+.IP\n+Create new, empty TX.\n+.HP\n+\\fB\\-json\\fR\n+.IP\n+Select JSON output\n+.HP\n+\\fB\\-txid\\fR\n+.IP\n+Output only the hex\\-encoded transaction id of the resultant transaction.\n+.PP\n+Chain selection options:\n+.HP\n+\\fB\\-testnet\\fR\n+.IP\n+Use the test chain\n+.HP\n+\\fB\\-regtest\\fR\n+.IP\n+Enter regression test mode, which uses a special chain in which blocks\n+can be solved instantly. This is intended for regression testing\n+tools and app development.\n+.PP\n+Commands:\n+.IP\n+delin=N\n+.IP\n+Delete input N from TX\n+.IP\n+delout=N\n+.IP\n+Delete output N from TX\n+.IP\n+in=TXID:VOUT(:SEQUENCE_NUMBER)\n+.IP\n+Add input to TX\n+.IP\n+locktime=N\n+.IP\n+Set TX lock time to N\n+.IP\n+nversion=N\n+.IP\n+Set TX version to N\n+.IP\n+replaceable(=N)\n+.IP\n+Set RBF opt\\-in sequence number for input N (if not provided, opt\\-in all\n+available inputs)\n+.IP\n+outaddr=VALUE:ADDRESS\n+.IP\n+Add address\\-based output to TX\n+.IP\n+outpubkey=VALUE:PUBKEY[:FLAGS]\n+.IP\n+Add pay\\-to\\-pubkey output to TX. Optionally add the \"W\" flag to produce a\n+pay\\-to\\-witness\\-pubkey\\-hash output. Optionally add the \"S\" flag to\n+wrap the output in a pay\\-to\\-script\\-hash.\n+.IP\n+outdata=[VALUE:]DATA\n+.IP\n+Add data\\-based output to TX\n+.IP\n+outscript=VALUE:SCRIPT[:FLAGS]\n+.IP\n+Add raw script output to TX. Optionally add the \"W\" flag to produce a\n+pay\\-to\\-witness\\-script\\-hash output. Optionally add the \"S\" flag to\n+wrap the output in a pay\\-to\\-script\\-hash.\n+.IP\n+outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]\n+.IP\n+Add Pay To n\\-of\\-m Multi\\-sig output to TX. n = REQUIRED, m = PUBKEYS.\n+Optionally add the \"W\" flag to produce a\n+pay\\-to\\-witness\\-script\\-hash output. Optionally add the \"S\" flag to\n+wrap the output in a pay\\-to\\-script\\-hash.\n+.IP\n+sign=SIGHASH\\-FLAGS\n+.IP\n+Add zero or more signatures to transaction. This command requires JSON\n+registers:prevtxs=JSON object, privatekeys=JSON object. See\n+signrawtransaction docs for format of sighash flags, JSON\n+objects.\n+.PP\n+Register Commands:\n+.IP\n+load=NAME:FILENAME\n+.IP\n+Load JSON file FILENAME into register NAME\n+.IP\n+set=NAME:JSON\\-STRING\n+.IP\n+Set register NAME to given JSON\\-STRING\n+.SH COPYRIGHT\n+Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (C) 2011-2017 The Blockcash Core developers\n+\n+Please contribute if you find Blockcash Core useful. Visit\n+<https://blockcash.org> for further information about the software.\n+The source code is available from <https://github.com/blockcash-project/blockcash>.\n+\n+This is experimental software.\n+Distributed under the MIT software license, see the accompanying file COPYING\n+or <https://opensource.org/licenses/MIT>\n+\n+This product includes software developed by the OpenSSL Project for use in the\n+OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n+Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "8e1f7dad8508c6727ef98d3a74c567dd1baeb397",
        "filename": "doc/man/blockcashd.1",
        "status": "added",
        "additions": 541,
        "deletions": 0,
        "changes": 541,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/blockcashd.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/man/blockcashd.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/blockcashd.1?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,541 @@\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n+.TH BLOCKCASHD \"1\" \"September 2017\" \"blockcashd v0.15.0.1\" \"User Commands\"\n+.SH NAME\n+blockcashd \\- manual page for blockcashd v0.15.0.1\n+.SH DESCRIPTION\n+Blockcash Core Daemon version v0.15.0.1\\-dirty\n+.SS \"Usage:\"\n+.TP\n+blockcashd [options]\n+Start Blockcash Core Daemon\n+.SH OPTIONS\n+.HP\n+\\-?\n+.IP\n+Print this help message and exit\n+.HP\n+\\fB\\-version\\fR\n+.IP\n+Print version and exit\n+.HP\n+\\fB\\-alertnotify=\\fR<cmd>\n+.IP\n+Execute command when a relevant alert is received or we see a really\n+long fork (%s in cmd is replaced by message)\n+.HP\n+\\fB\\-blocknotify=\\fR<cmd>\n+.IP\n+Execute command when the best block changes (%s in cmd is replaced by\n+block hash)\n+.HP\n+\\fB\\-assumevalid=\\fR<hex>\n+.IP\n+If this block is in the chain assume that it and its ancestors are valid\n+and potentially skip their script verification (0 to verify all,\n+default:\n+29c8c00e1a5f446a6364a29633d3f1ee16428d87c8d3851a1c570be8170b04c2,\n+testnet:\n+ad8ff6c2f5580d2b50bd881e11312425ea84fa99f322bf132beb722f97971bba)\n+.HP\n+\\fB\\-conf=\\fR<file>\n+.IP\n+Specify configuration file (default: blockcash.conf)\n+.HP\n+\\fB\\-daemon\\fR\n+.IP\n+Run in the background as a daemon and accept commands\n+.HP\n+\\fB\\-datadir=\\fR<dir>\n+.IP\n+Specify data directory\n+.HP\n+\\fB\\-dbcache=\\fR<n>\n+.IP\n+Set database cache size in megabytes (4 to 16384, default: 450)\n+.HP\n+\\fB\\-loadblock=\\fR<file>\n+.IP\n+Imports blocks from external blk000??.dat file on startup\n+.HP\n+\\fB\\-maxorphantx=\\fR<n>\n+.IP\n+Keep at most <n> unconnectable transactions in memory (default: 100)\n+.HP\n+\\fB\\-maxmempool=\\fR<n>\n+.IP\n+Keep the transaction memory pool below <n> megabytes (default: 5)\n+.HP\n+\\fB\\-mempoolexpiry=\\fR<n>\n+.IP\n+Do not keep transactions in the mempool longer than <n> hours (default:\n+336)\n+.HP\n+\\fB\\-persistmempool\\fR\n+.IP\n+Whether to save the mempool on shutdown and load on restart (default: 1)\n+.HP\n+\\fB\\-blockreconstructionextratxn=\\fR<n>\n+.IP\n+Extra transactions to keep in memory for compact block reconstructions\n+(default: 100)\n+.HP\n+\\fB\\-par=\\fR<n>\n+.IP\n+Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n+leave that many cores free, default: 0)\n+.HP\n+\\fB\\-pid=\\fR<file>\n+.IP\n+Specify pid file (default: blockcashd.pid)\n+.HP\n+\\fB\\-prune=\\fR<n>\n+.IP\n+Reduce storage requirements by enabling pruning (deleting) of old\n+blocks. This allows the pruneblockchain RPC to be called to\n+delete specific blocks, and enables automatic pruning of old\n+blocks if a target size in MiB is provided. This mode is\n+incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR. Warning: Reverting this\n+setting requires re\\-downloading the entire blockchain. (default:\n+0 = disable pruning blocks, 1 = allow manual pruning via RPC,\n+>550 = automatically prune block files to stay under the\n+specified target size in MiB)\n+.HP\n+\\fB\\-reindex\\-chainstate\\fR\n+.IP\n+Rebuild chain state from the currently indexed blocks\n+.HP\n+\\fB\\-reindex\\fR\n+.IP\n+Rebuild chain state and block index from the blk*.dat files on disk\n+.HP\n+\\fB\\-sysperms\\fR\n+.IP\n+Create new files with system default permissions, instead of umask 077\n+(only effective with disabled wallet functionality)\n+.HP\n+\\fB\\-txindex\\fR\n+.IP\n+Maintain a full transaction index, used by the getrawtransaction rpc\n+call (default: 0)\n+.PP\n+Connection options:\n+.HP\n+\\fB\\-addnode=\\fR<ip>\n+.IP\n+Add a node to connect to and attempt to keep the connection open\n+.HP\n+\\fB\\-banscore=\\fR<n>\n+.IP\n+Threshold for disconnecting misbehaving peers (default: 100)\n+.HP\n+\\fB\\-bantime=\\fR<n>\n+.IP\n+Number of seconds to keep misbehaving peers from reconnecting (default:\n+86400)\n+.HP\n+\\fB\\-bind=\\fR<addr>\n+.IP\n+Bind to given address and always listen on it. Use [host]:port notation\n+for IPv6\n+.HP\n+\\fB\\-connect=\\fR<ip>\n+.IP\n+Connect only to the specified node(s); \\fB\\-connect\\fR=\\fI\\,0\\/\\fR disables automatic\n+connections\n+.HP\n+\\fB\\-discover\\fR\n+.IP\n+Discover own IP addresses (default: 1 when listening and no \\fB\\-externalip\\fR\n+or \\fB\\-proxy\\fR)\n+.HP\n+\\fB\\-dns\\fR\n+.IP\n+Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (default: 1)\n+.HP\n+\\fB\\-dnsseed\\fR\n+.IP\n+Query for peer addresses via DNS lookup, if low on addresses (default: 1\n+unless \\fB\\-connect\\fR used)\n+.HP\n+\\fB\\-externalip=\\fR<ip>\n+.IP\n+Specify your own public address\n+.HP\n+\\fB\\-forcednsseed\\fR\n+.IP\n+Always query for peer addresses via DNS lookup (default: 0)\n+.HP\n+\\fB\\-listen\\fR\n+.IP\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n+.HP\n+\\fB\\-listenonion\\fR\n+.IP\n+Automatically create Tor hidden service (default: 1)\n+.HP\n+\\fB\\-maxconnections=\\fR<n>\n+.IP\n+Maintain at most <n> connections to peers (default: 125)\n+.HP\n+\\fB\\-maxreceivebuffer=\\fR<n>\n+.IP\n+Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n+.HP\n+\\fB\\-maxsendbuffer=\\fR<n>\n+.IP\n+Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n+.HP\n+\\fB\\-maxtimeadjustment\\fR\n+.IP\n+Maximum allowed median peer time offset adjustment. Local perspective of\n+time may be influenced by peers forward or backward by this\n+amount. (default: 4200 seconds)\n+.HP\n+\\fB\\-onion=\\fR<ip:port>\n+.IP\n+Use separate SOCKS5 proxy to reach peers via Tor hidden services\n+(default: \\fB\\-proxy\\fR)\n+.HP\n+\\fB\\-onlynet=\\fR<net>\n+.IP\n+Only connect to nodes in network <net> (ipv4, ipv6 or onion)\n+.HP\n+\\fB\\-permitbaremultisig\\fR\n+.IP\n+Relay non\\-P2SH multisig (default: 1)\n+.HP\n+\\fB\\-peerbloomfilters\\fR\n+.IP\n+Support filtering of blocks and transaction with bloom filters (default:\n+1)\n+.HP\n+\\fB\\-port=\\fR<port>\n+.IP\n+Listen for connections on <port> (default: 8333 or testnet: 18333)\n+.HP\n+\\fB\\-proxy=\\fR<ip:port>\n+.IP\n+Connect through SOCKS5 proxy\n+.HP\n+\\fB\\-proxyrandomize\\fR\n+.IP\n+Randomize credentials for every proxy connection. This enables Tor\n+stream isolation (default: 1)\n+.HP\n+\\fB\\-seednode=\\fR<ip>\n+.IP\n+Connect to a node to retrieve peer addresses, and disconnect\n+.HP\n+\\fB\\-timeout=\\fR<n>\n+.IP\n+Specify connection timeout in milliseconds (minimum: 1, default: 5000)\n+.HP\n+\\fB\\-torcontrol=\\fR<ip>:<port>\n+.IP\n+Tor control port to use if onion listening enabled (default:\n+127.0.0.1:9051)\n+.HP\n+\\fB\\-torpassword=\\fR<pass>\n+.IP\n+Tor control port password (default: empty)\n+.HP\n+\\fB\\-upnp\\fR\n+.IP\n+Use UPnP to map the listening port (default: 0)\n+.HP\n+\\fB\\-whitebind=\\fR<addr>\n+.IP\n+Bind to given address and whitelist peers connecting to it. Use\n+[host]:port notation for IPv6\n+.HP\n+\\fB\\-whitelist=\\fR<IP address or network>\n+.IP\n+Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n+CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n+times. Whitelisted peers cannot be DoS banned and their\n+transactions are always relayed, even if they are already in the\n+mempool, useful e.g. for a gateway\n+.HP\n+\\fB\\-maxuploadtarget=\\fR<n>\n+.IP\n+Tries to keep outbound traffic under the given target (in MiB per 24h),\n+0 = no limit (default: 0)\n+.PP\n+Wallet options:\n+.HP\n+\\fB\\-disablewallet\\fR\n+.IP\n+Do not load the wallet and disable wallet RPC calls\n+.HP\n+\\fB\\-keypool=\\fR<n>\n+.IP\n+Set key pool size to <n> (default: 1000)\n+.HP\n+\\fB\\-fallbackfee=\\fR<amt>\n+.IP\n+A fee rate (in LTC/kB) that will be used when fee estimation has\n+insufficient data (default: 0.002)\n+.HP\n+\\fB\\-discardfee=\\fR<amt>\n+.IP\n+The fee rate (in BTC/kB) that indicates your tolerance for discarding\n+change by adding it to the fee (default: 0.0001). Note: An output\n+is discarded if it is dust at this rate, but we will always\n+discard up to the dust relay fee and a discard fee above that is\n+limited by the fee estimate for the longest target\n+.HP\n+\\fB\\-mintxfee=\\fR<amt>\n+.IP\n+Fees (in LTC/kB) smaller than this are considered zero fee for\n+transaction creation (default: 0.001)\n+.HP\n+\\fB\\-paytxfee=\\fR<amt>\n+.IP\n+Fee (in LTC/kB) to add to transactions you send (default: 0.00)\n+.HP\n+\\fB\\-rescan\\fR\n+.IP\n+Rescan the block chain for missing wallet transactions on startup\n+.HP\n+\\fB\\-salvagewallet\\fR\n+.IP\n+Attempt to recover private keys from a corrupt wallet on startup\n+.HP\n+\\fB\\-spendzeroconfchange\\fR\n+.IP\n+Spend unconfirmed change when sending transactions (default: 1)\n+.HP\n+\\fB\\-txconfirmtarget=\\fR<n>\n+.IP\n+If paytxfee is not set, include enough fee so transactions begin\n+confirmation on average within n blocks (default: 6)\n+.HP\n+\\fB\\-usehd\\fR\n+.IP\n+Use hierarchical deterministic key generation (HD) after BIP32. Only has\n+effect during wallet creation/first start (default: 1)\n+.HP\n+\\fB\\-walletrbf\\fR\n+.IP\n+Send transactions with full\\-RBF opt\\-in enabled (default: 0)\n+.HP\n+\\fB\\-upgradewallet\\fR\n+.IP\n+Upgrade wallet to latest format on startup\n+.HP\n+\\fB\\-wallet=\\fR<file>\n+.IP\n+Specify wallet file (within data directory) (default: wallet.dat)\n+.HP\n+\\fB\\-walletbroadcast\\fR\n+.IP\n+Make the wallet broadcast transactions (default: 1)\n+.HP\n+\\fB\\-walletnotify=\\fR<cmd>\n+.IP\n+Execute command when a wallet transaction changes (%s in cmd is replaced\n+by TxID)\n+.HP\n+\\fB\\-zapwallettxes=\\fR<mode>\n+.IP\n+Delete all wallet transactions and only recover those parts of the\n+blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n+account owner and payment request information, 2 = drop tx meta\n+data)\n+.PP\n+ZeroMQ notification options:\n+.HP\n+\\fB\\-zmqpubhashblock=\\fR<address>\n+.IP\n+Enable publish hash block in <address>\n+.HP\n+\\fB\\-zmqpubhashtx=\\fR<address>\n+.IP\n+Enable publish hash transaction in <address>\n+.HP\n+\\fB\\-zmqpubrawblock=\\fR<address>\n+.IP\n+Enable publish raw block in <address>\n+.HP\n+\\fB\\-zmqpubrawtx=\\fR<address>\n+.IP\n+Enable publish raw transaction in <address>\n+.PP\n+Debugging/Testing options:\n+.HP\n+\\fB\\-uacomment=\\fR<cmt>\n+.IP\n+Append comment to the user agent string\n+.HP\n+\\fB\\-debug=\\fR<category>\n+.IP\n+Output debugging information (default: 0, supplying <category> is\n+optional). If <category> is not supplied or if <category> = 1,\n+output all debugging information. <category> can be: net, tor,\n+mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n+selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n+libevent, coindb, qt, leveldb.\n+.HP\n+\\fB\\-debugexclude=\\fR<category>\n+.IP\n+Exclude debugging information for a category. Can be used in conjunction\n+with \\fB\\-debug\\fR=\\fI\\,1\\/\\fR to output debug logs for all categories except one\n+or more specified categories.\n+.HP\n+\\fB\\-help\\-debug\\fR\n+.IP\n+Show all debugging options (usage: \\fB\\-\\-help\\fR \\fB\\-help\\-debug\\fR)\n+.HP\n+\\fB\\-logips\\fR\n+.IP\n+Include IP addresses in debug output (default: 0)\n+.HP\n+\\fB\\-logtimestamps\\fR\n+.IP\n+Prepend debug output with timestamp (default: 1)\n+.HP\n+\\fB\\-maxtxfee=\\fR<amt>\n+.IP\n+Maximum total fees (in LTC) to use in a single wallet transaction or raw\n+transaction; setting this too low may abort large transactions\n+(default: 0.10)\n+.HP\n+\\fB\\-printtoconsole\\fR\n+.IP\n+Send trace/debug info to console instead of debug.log file\n+.HP\n+\\fB\\-shrinkdebugfile\\fR\n+.IP\n+Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n+.PP\n+Chain selection options:\n+.HP\n+\\fB\\-testnet\\fR\n+.IP\n+Use the test chain\n+.PP\n+Node relay options:\n+.HP\n+\\fB\\-bytespersigop\\fR\n+.IP\n+Equivalent bytes per sigop in transactions for relay and mining\n+(default: 20)\n+.HP\n+\\fB\\-datacarrier\\fR\n+.IP\n+Relay and mine data carrier transactions (default: 1)\n+.HP\n+\\fB\\-datacarriersize\\fR\n+.IP\n+Maximum size of data in data carrier transactions we relay and mine\n+(default: 83)\n+.HP\n+\\fB\\-mempoolreplacement\\fR\n+.IP\n+Enable transaction replacement in the memory pool (default: 1)\n+.HP\n+\\fB\\-minrelaytxfee=\\fR<amt>\n+.IP\n+Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n+mining and transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-whitelistrelay\\fR\n+.IP\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n+.HP\n+\\fB\\-whitelistforcerelay\\fR\n+.IP\n+Force relay of transactions from whitelisted peers even if they violate\n+local relay policy (default: 1)\n+.PP\n+Block creation options:\n+.HP\n+\\fB\\-blockmaxweight=\\fR<n>\n+.IP\n+Set maximum BIP141 block weight (default: 3000000)\n+.HP\n+\\fB\\-blockmaxsize=\\fR<n>\n+.IP\n+Set maximum block size in bytes (default: 750000)\n+.HP\n+\\fB\\-blockmintxfee=\\fR<amt>\n+.IP\n+Set lowest fee rate (in LTC/kB) for transactions to be included in block\n+creation. (default: 0.00001)\n+.PP\n+RPC server options:\n+.HP\n+\\fB\\-server\\fR\n+.IP\n+Accept command line and JSON\\-RPC commands\n+.HP\n+\\fB\\-rest\\fR\n+.IP\n+Accept public REST requests (default: 0)\n+.HP\n+\\fB\\-rpcbind=\\fR<addr>[:port]\n+.IP\n+Bind to given address to listen for JSON\\-RPC connections. This option is\n+ignored unless \\fB\\-rpcallowip\\fR is also passed. Port is optional and\n+overrides \\fB\\-rpcport\\fR. Use [host]:port notation for IPv6. This\n+option can be specified multiple times (default: 127.0.0.1 and\n+::1 i.e., localhost, or if \\fB\\-rpcallowip\\fR has been specified,\n+0.0.0.0 and :: i.e., all addresses)\n+.HP\n+\\fB\\-rpccookiefile=\\fR<loc>\n+.IP\n+Location of the auth cookie (default: data dir)\n+.HP\n+\\fB\\-rpcuser=\\fR<user>\n+.IP\n+Username for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcpassword=\\fR<pw>\n+.IP\n+Password for JSON\\-RPC connections\n+.HP\n+\\fB\\-rpcauth=\\fR<userpw>\n+.IP\n+Username and hashed password for JSON\\-RPC connections. The field\n+<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n+canonical python script is included in share/rpcuser. The client\n+then connects normally using the\n+rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n+option can be specified multiple times\n+.HP\n+\\fB\\-rpcport=\\fR<port>\n+.IP\n+Listen for JSON\\-RPC connections on <port> (default: 9332 or testnet:\n+19332)\n+.HP\n+\\fB\\-rpcallowip=\\fR<ip>\n+.IP\n+Allow JSON\\-RPC connections from specified source. Valid for <ip> are a\n+single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n+1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n+option can be specified multiple times\n+.HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n+\\fB\\-rpcthreads=\\fR<n>\n+.IP\n+Set the number of threads to service RPC calls (default: 4)\n+.SH COPYRIGHT\n+Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (C) 2011-2017 The Blockcash Core developers\n+\n+Please contribute if you find Blockcash Core useful. Visit\n+<https://blockcash.org> for further information about the software.\n+The source code is available from <https://github.com/blockcash/blockcash>.\n+\n+This is experimental software.\n+Distributed under the MIT software license, see the accompanying file COPYING\n+or <https://opensource.org/licenses/MIT>\n+\n+This product includes software developed by the OpenSSL Project for use in the\n+OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n+Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "81857070843f05c26f27cf21b7a2b819bf324bd3",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,7 +3,7 @@ Reduce Traffic\n \n Some node operators need to deal with bandwidth caps imposed by their ISPs.\n \n-By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+By default, blockcash-core allows up to 125 connections to different peers, 8 of\n which are outbound. You can therefore, have at most 117 inbound connections.\n \n The default settings can result in relatively significant traffic consumption.\n@@ -33,5 +33,5 @@ blocks and transactions to fewer nodes.\n ## 3. Reduce maximum connections (`-maxconnections=<num>`)\n \n Reducing the maximum connected nodes to a minimum could be desirable if traffic\n-limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+limits are tiny. Keep in mind that blockcash's trustless model works best if you are\n connected to a handful of nodes."
      },
      {
        "sha": "42edffecb6cabdf620a4347b127ed82c54d6c98f",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 66,
        "deletions": 91,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@ Before every release candidate:\n \n * Update translations (ping wumpus on IRC) see [translation_process.md](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#synchronising-translations).\n \n-* Update manpages, see [gen-manpages.sh](https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/README.md#gen-manpagessh).\n+* Update manpages, see [gen-manpages.sh](https://github.com/blockcash/blockcash/blob/master/contrib/devtools/README.md#gen-manpagessh).\n \n Before every minor and major release:\n \n@@ -33,12 +33,12 @@ If you're using the automated script (found in [contrib/gitian-build.sh](/contri\n Check out the source code in the following directory hierarchy.\n \n     cd /path/to/your/toplevel/build\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+    git clone https://github.com/blockcash/gitian.sigs.ltc.git\n+    git clone https://github.com/blockcash/blockcash-detached-sigs.git\n     git clone https://github.com/devrandom/gitian-builder.git\n-    git clone https://github.com/bitcoin/bitcoin.git\n+    git clone https://github.com/blockcash/blockcash.git\n \n-### Bitcoin maintainers/release engineers, suggestion for writing release notes\n+### Blockcash maintainers/release engineers, suggestion for writing release notes\n \n Write release notes. git shortlog helps a lot, for example:\n \n@@ -61,16 +61,16 @@ If you're using the automated script (found in [contrib/gitian-build.sh](/contri\n \n Setup Gitian descriptors:\n \n-    pushd ./bitcoin\n+    pushd ./blockcash\n     export SIGNER=(your Gitian key, ie bluematt, sipa, etc)\n     export VERSION=(new version, e.g. 0.8.0)\n     git fetch\n     git checkout v${VERSION}\n     popd\n \n-Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other Gitian signatures.\n+Ensure your gitian.sigs.ltc are up-to-date if you wish to gverify your builds against other Gitian signatures.\n \n-    pushd ./gitian.sigs\n+    pushd ./gitian.sigs.ltc\n     git pull\n     popd\n \n@@ -95,58 +95,58 @@ Create the OS X SDK tarball, see the [OS X readme](README_osx.md) for details, a\n By default, Gitian will fetch source files as needed. To cache them ahead of time:\n \n     pushd ./gitian-builder\n-    make -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+    make -C ../blockcash/depends download SOURCES_PATH=`pwd`/cache/common\n     popd\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from local URLs. For example:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+    ./bin/gbuild --url blockcash=/path/to/blockcash,signature=/path/to/sigs {rest of arguments}\n     popd\n \n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n-### Build and sign Bitcoin Core for Linux, Windows, and OS X:\n+### Build and sign Blockcash Core for Linux, Windows, and OS X:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --num-make 2 --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n-\n-    ./bin/gbuild --num-make 2 --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n-\n-    ./bin/gbuild --num-make 2 --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n+    ./bin/gbuild --num-make 2 --memory 3000 --commit blockcash=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs.ltc/ ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+    mv build/out/blockcash-*.tar.gz build/out/src/blockcash-*.tar.gz ../\n+\n+    ./bin/gbuild --num-make 2 --memory 3000 --commit blockcash=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs.ltc/ ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+    mv build/out/blockcash-*-win-unsigned.tar.gz inputs/blockcash-win-unsigned.tar.gz\n+    mv build/out/blockcash-*.zip build/out/blockcash-*.exe ../\n+\n+    ./bin/gbuild --num-make 2 --memory 3000 --commit blockcash=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs.ltc/ ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n+    mv build/out/blockcash-*-osx-unsigned.tar.gz inputs/blockcash-osx-unsigned.tar.gz\n+    mv build/out/blockcash-*.tar.gz build/out/blockcash-*.dmg ../\n     popd\n \n Build output expected:\n \n-  1. source tarball (`bitcoin-${VERSION}.tar.gz`)\n-  2. linux 32-bit and 64-bit dist tarballs (`bitcoin-${VERSION}-linux[32|64].tar.gz`)\n-  3. windows 32-bit and 64-bit unsigned installers and dist zips (`bitcoin-${VERSION}-win[32|64]-setup-unsigned.exe`, `bitcoin-${VERSION}-win[32|64].zip`)\n-  4. OS X unsigned installer and dist tarball (`bitcoin-${VERSION}-osx-unsigned.dmg`, `bitcoin-${VERSION}-osx64.tar.gz`)\n-  5. Gitian signatures (in `gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/`)\n+  1. source tarball (`blockcash-${VERSION}.tar.gz`)\n+  2. linux 32-bit and 64-bit dist tarballs (`blockcash-${VERSION}-linux[32|64].tar.gz`)\n+  3. windows 32-bit and 64-bit unsigned installers and dist zips (`blockcash-${VERSION}-win[32|64]-setup-unsigned.exe`, `blockcash-${VERSION}-win[32|64].zip`)\n+  4. OS X unsigned installer and dist tarball (`blockcash-${VERSION}-osx-unsigned.dmg`, `blockcash-${VERSION}-osx64.tar.gz`)\n+  5. Gitian signatures (in `gitian.sigs.ltc/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/`)\n \n ### Verify other gitian builders signatures to your own. (Optional)\n \n Add other gitian builders keys to your gpg keyring, and/or refresh keys.\n \n-    gpg --import bitcoin/contrib/gitian-keys/*.pgp\n+    gpg --import blockcash/contrib/gitian-keys/*.pgp\n     gpg --refresh-keys\n \n Verify the signatures\n \n     pushd ./gitian-builder\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n     popd\n \n ### Next steps:\n@@ -167,22 +167,22 @@ Codesigner only: Create Windows/OS X detached signatures:\n \n Codesigner only: Sign the osx binary:\n \n-    transfer bitcoin-osx-unsigned.tar.gz to osx for signing\n-    tar xf bitcoin-osx-unsigned.tar.gz\n+    transfer blockcash-osx-unsigned.tar.gz to osx for signing\n+    tar xf blockcash-osx-unsigned.tar.gz\n     ./detached-sig-create.sh -s \"Key ID\"\n     Enter the keychain password and authorize the signature\n     Move signature-osx.tar.gz back to the gitian host\n \n Codesigner only: Sign the windows binaries:\n \n-    tar xf bitcoin-win-unsigned.tar.gz\n+    tar xf blockcash-win-unsigned.tar.gz\n     ./detached-sig-create.sh -key /path/to/codesign.key\n     Enter the passphrase for the key when prompted\n     signature-win.tar.gz will be created\n \n Codesigner only: Commit the detached codesign payloads:\n \n-    cd ~/bitcoin-detached-sigs\n+    cd ~/blockcash-detached-sigs\n     checkout the appropriate branch for this release series\n     rm -rf *\n     tar xf signature-osx.tar.gz\n@@ -195,25 +195,25 @@ Codesigner only: Commit the detached codesign payloads:\n Non-codesigners: wait for Windows/OS X detached signatures:\n \n - Once the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n-- Detached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin-core/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n+- Detached signatures will then be committed to the [blockcash-detached-sigs](https://github.com/blockcash/blockcash-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n Create (and optionally verify) the signed OS X binary:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-${VERSION}-osx.dmg\n+    ./bin/gbuild -i --commit signature=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs.ltc/ ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    ./bin/gverify -v -d ../gitian.sigs.ltc/ -r ${VERSION}-osx-signed ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    mv build/out/blockcash-osx-signed.dmg ../blockcash-${VERSION}-osx.dmg\n     popd\n \n Create (and optionally verify) the signed Windows binaries:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-${VERSION}-win64-setup.exe\n-    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n+    ./bin/gbuild -i --commit signature=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs.ltc/ ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+    ./bin/gverify -v -d ../gitian.sigs.ltc/ -r ${VERSION}-win-signed ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+    mv build/out/blockcash-*win64-setup.exe ../blockcash-${VERSION}-win64-setup.exe\n+    mv build/out/blockcash-*win32-setup.exe ../blockcash-${VERSION}-win32-setup.exe\n     popd\n \n Commit your signature for the signed OS X/Windows binaries:\n@@ -235,23 +235,23 @@ sha256sum * > SHA256SUMS\n \n The list of files should be:\n ```\n-bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz\n-bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz\n-bitcoin-${VERSION}-i686-pc-linux-gnu.tar.gz\n-bitcoin-${VERSION}-x86_64-linux-gnu.tar.gz\n-bitcoin-${VERSION}-osx64.tar.gz\n-bitcoin-${VERSION}-osx.dmg\n-bitcoin-${VERSION}.tar.gz\n-bitcoin-${VERSION}-win32-setup.exe\n-bitcoin-${VERSION}-win32.zip\n-bitcoin-${VERSION}-win64-setup.exe\n-bitcoin-${VERSION}-win64.zip\n+blockcash-${VERSION}-aarch64-linux-gnu.tar.gz\n+blockcash-${VERSION}-arm-linux-gnueabihf.tar.gz\n+blockcash-${VERSION}-i686-pc-linux-gnu.tar.gz\n+blockcash-${VERSION}-x86_64-linux-gnu.tar.gz\n+blockcash-${VERSION}-osx64.tar.gz\n+blockcash-${VERSION}-osx.dmg\n+blockcash-${VERSION}.tar.gz\n+blockcash-${VERSION}-win32-setup.exe\n+blockcash-${VERSION}-win32.zip\n+blockcash-${VERSION}-win64-setup.exe\n+blockcash-${VERSION}-win64.zip\n ```\n The `*-debug*` files generated by the gitian build contain debug symbols\n for troubleshooting by developers. It is assumed that anyone that is interested\n in debugging can run gitian to generate the files for themselves. To avoid\n end-user confusion about which file to pick, as well as save storage\n-space *do not upload these to the bitcoin.org server, nor put them in the torrent*.\n+space *do not upload these to the blockcash.org server, nor put them in the torrent*.\n \n - GPG-sign it, delete the unsigned file:\n ```\n@@ -261,49 +261,24 @@ rm SHA256SUMS\n (the digest algorithm is forced to sha256 to avoid confusion of the `Hash:` header that GPG adds with the SHA256 used for the files)\n Note: check that SHA256SUMS itself doesn't end up in SHA256SUMS, which is a spurious/nonsensical entry.\n \n-- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the bitcoin.org server\n-  into `/var/www/bin/bitcoin-core-${VERSION}`\n+- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the blockcash.org server.\n \n-- A `.torrent` will appear in the directory after a few minutes. Optionally help seed this torrent. To get the `magnet:` URI use:\n-```bash\n-transmission-show -m <torrent file>\n ```\n-Insert the magnet URI into the announcement sent to mailing lists. This permits\n-people without access to `bitcoin.org` to download the binary distribution.\n-Also put it into the `optional_magnetlink:` slot in the YAML file for\n-bitcoin.org (see below for bitcoin.org update instructions).\n-\n-- Update bitcoin.org version\n-\n-  - First, check to see if the Bitcoin.org maintainers have prepared a\n-    release: https://github.com/bitcoin-dot-org/bitcoin.org/labels/Releases\n-\n-      - If they have, it will have previously failed their Travis CI\n-        checks because the final release files weren't uploaded.\n-        Trigger a Travis CI rebuild---if it passes, merge.\n \n-  - If they have not prepared a release, follow the Bitcoin.org release\n-    instructions: https://github.com/bitcoin-dot-org/bitcoin.org#release-notes\n-\n-  - After the pull request is merged, the website will automatically show the newest version within 15 minutes, as well\n-    as update the OS download links. Ping @saivann/@harding (saivann/harding on Freenode) in case anything goes wrong\n+- Update blockcash.org version\n \n - Announce the release:\n \n-  - bitcoin-dev and bitcoin-core-dev mailing list\n-\n-  - Bitcoin Core announcements list https://bitcoincore.org/en/list/announcements/join/\n-\n-  - bitcoincore.org blog post\n+  - blockcash-dev and blockcash-dev mailing list\n \n-  - Update title of #bitcoin on Freenode IRC\n+  - blog.blockcash.org blog post\n \n-  - Optionally twitter, reddit /r/Bitcoin, ... but this will usually sort out itself\n+  - Update title of #blockcash and #blockcash-dev on Freenode IRC\n \n-  - Notify BlueMatt so that he can start building [the PPAs](https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin)\n+  - Optionally twitter, reddit /r/Blockcash, ... but this will usually sort out itself\n \n   - Archive release notes for the new version to `doc/release-notes/` (branch `master` and branch of the release)\n \n-  - Create a [new GitHub release](https://github.com/bitcoin/bitcoin/releases/new) with a link to the archived release notes.\n+  - Create a [new GitHub release](https://github.com/blockcash/blockcash/releases/new) with a link to the archived release notes.\n \n   - Celebrate"
      },
      {
        "sha": "9dba2feb7850e78447f505491fccf79b0fb3c647",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,16 +1,16 @@\n-TOR SUPPORT IN BITCOIN\n+TOR SUPPORT IN BLOCKCASH\n ======================\n \n-It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n+It is possible to run Blockcash as a Tor hidden service, and connect to such services.\n \n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on port 9150. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n \n-1. Run bitcoin behind a Tor proxy\n+1. Run blockcash behind a Tor proxy\n ---------------------------------\n \n-The first step is running Bitcoin behind a Tor proxy. This will already make all\n+The first step is running Blockcash behind a Tor proxy. This will already make all\n outgoing connections be anonymized, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n@@ -31,27 +31,27 @@ outgoing connections be anonymized, but more is possible.\n \n In a typical situation, this suffices to run behind a Tor proxy:\n \n-\t./bitcoin -proxy=127.0.0.1:9050\n+\t./blockcash -proxy=127.0.0.1:9050\n \n \n-2. Run a bitcoin hidden server\n+2. Run a blockcash hidden server\n ------------------------------\n \n If you configure your Tor system accordingly, it is possible to make your node also\n reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n config file):\n \n-\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n-\tHiddenServicePort 8333 127.0.0.1:8333\n-\tHiddenServicePort 18333 127.0.0.1:18333\n+\tHiddenServiceDir /var/lib/tor/blockcash-service/\n+\tHiddenServicePort 29251 127.0.0.1:29251\n+\tHiddenServicePort 39251 127.0.0.1:39251\n \n The directory can be different of course, but (both) port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default).\n+your blockcashd's P2P listen port (29251 by default).\n \n-\t-externalip=X   You can tell bitcoin about its publicly reachable address using\n+\t-externalip=X   You can tell blockcash about its publicly reachable address using\n \t                this option, and this can be a .onion address. Given the above\n \t                configuration, you can find your onion address in\n-\t                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n+\t                /var/lib/tor/blockcash-service/hostname. Onion addresses are given\n \t                preference for your node to advertise itself with, for connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n \t                Tor proxy typically runs).\n@@ -68,57 +68,57 @@ your bitcoind's P2P listen port (8333 by default).\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\t./blockcashd -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n \n (obviously, replace the Onion address with your own). It should be noted that you still\n listen on all devices and another node could establish a clearnet connection, when knowing\n your address. To mitigate this, additionally bind the address of your Tor proxy:\n \n-\t./bitcoind ... -bind=127.0.0.1\n+\t./blockcashd ... -bind=127.0.0.1\n \n If you don't care too much about hiding your node, and want to be reachable on IPv4\n as well, use `discover` instead:\n \n-\t./bitcoind ... -discover\n+\t./blockcashd ... -discover\n \n-and open port 8333 on your firewall (or use -upnp).\n+and open port 9333 on your firewall (or use -upnp).\n \n If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\t./blockcash -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n \n 3. Automatically listen on Tor\n --------------------------------\n \n Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n+Blockcash Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates a hidden service to listen on. This will positively \n+Blockcash Core automatically creates a hidden service to listen on. This will positively \n affect the number of available .onion nodes.\n \n-This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n+This new feature is enabled by default if Blockcash Core is listening (`-listen`), and\n requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n To show verbose debugging information, pass `-debug=tor`.\n \n Connecting to Tor's control socket API requires one of two authentication methods to be \n-configured. For cookie authentication the user running bitcoind must have write access \n+configured. For cookie authentication the user running blockcashd must have write access \n to the `CookieAuthFile` specified in Tor configuration. In some cases this is \n preconfigured and the creation of a hidden service is automatic. If permission problems \n are seen with `-debug=tor` they can be resolved by adding both the user running tor and \n-the user running bitcoind to the same group and setting permissions appropriately. On \n-Debian-based systems the user running bitcoind can be added to the debian-tor group, \n+the user running blockcashd to the same group and setting permissions appropriately. On \n+Debian-based systems the user running blockcashd can be added to the debian-tor group, \n which has the appropriate permissions. An alternative authentication method is the use \n of the `-torpassword` flag and a `hash-password` which can be enabled and specified in \n Tor configuration.\n \n 4. Privacy recommendations\n ---------------------------\n \n-- Do not add anything but bitcoin ports to the hidden service created in section 2.\n+- Do not add anything but blockcash ports to the hidden service created in section 2.\n   If you run a web service too, create a new hidden service for that.\n   Otherwise it is trivial to link them, which may reduce privacy. Hidden\n   services created automatically (as in section 3) always have only one port"
      },
      {
        "sha": "535f23a38dd983ca2e9b700c1dd202cde3902064",
        "filename": "doc/travis-ci.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/travis-ci.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/travis-ci.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -32,7 +32,7 @@ trigger cache-invalidation and rebuilds as necessary.\n \n These caches can be manually removed if necessary. This is one of the very few\n manual operations that is possible with Travis, and it can be done by the\n-Bitcoin Core committer via the Travis web interface.\n+Blockcash Core committer via the Travis web interface.\n \n In some cases, secure strings may be needed for hiding sensitive info such as\n private keys or URLs. The travis client may be used to create these strings:"
      },
      {
        "sha": "14147a7887545ea902e062a94729182589c9dcef",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,8 +5,8 @@ connections, inter-process communication, and shared-memory,\n providing various message-oriented semantics such as publish/subscribe,\n request/reply, and push/pull.\n \n-The Bitcoin Core daemon can be configured to act as a trusted \"border\n-router\", implementing the bitcoin wire protocol and relay, making\n+The Blockcash Core daemon can be configured to act as a trusted \"border\n+router\", implementing the blockcash wire protocol and relay, making\n consensus decisions, maintaining the local blockchain database,\n broadcasting locally generated transactions into the network, and\n providing a queryable RPC interface to interact on a polled basis for\n@@ -33,7 +33,7 @@ buffering or reassembly.\n \n ## Prerequisites\n \n-The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n+The ZeroMQ feature in Blockcash Core requires ZeroMQ API version 4.x or\n newer. Typically, it is packaged by distributions as something like\n *libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n \n@@ -45,7 +45,7 @@ operation.\n \n By default, the ZeroMQ feature is automatically compiled in if the\n necessary prerequisites are found.  To disable, use --disable-zmq\n-during the *configure* step of building bitcoind:\n+during the *configure* step of building blockcashd:\n \n     $ ./configure --disable-zmq (other options)\n \n@@ -66,16 +66,16 @@ address. The same address can be used in more than one notification.\n \n For instance:\n \n-    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+    $ blockcashd -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+               -zmqpubrawtx=ipc:///tmp/blockcashd.tx.raw\n \n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the\n notification `-zmqpubhashtx` the topic is `hashtx` (no null\n-terminator) and the body is the transaction hash (32\n+terminator) and the body is the hexadecimal transaction hash (32\n bytes).\n \n-These options can also be provided in bitcoin.conf.\n+These options can also be provided in blockcash.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n [ZeroMQ API](http://api.zeromq.org/4-0:_start).\n@@ -87,9 +87,9 @@ arriving. Please see `contrib/zmq/zmq_sub.py` for a working example.\n \n ## Remarks\n \n-From the perspective of bitcoind, the ZeroMQ socket is write-only; PUB\n+From the perspective of blockcashd, the ZeroMQ socket is write-only; PUB\n sockets don't even have a read function. Thus, there is no state\n-introduced into bitcoind directly. Furthermore, no information is\n+introduced into blockcashd directly. Furthermore, no information is\n broadcast that wasn't already received from the public P2P network.\n \n No authentication or authorization is done on connecting clients; it\n@@ -102,5 +102,5 @@ retrieve the chain from the last known block to the new tip.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type your are\n-using. Bitcoind appends an up-counting sequence number to each\n+using. Blockcashd appends an up-counting sequence number to each\n notification which allows listeners to detect lost notifications."
      },
      {
        "sha": "beb0d7073c0d27596dce49fe58aa2b05307bea7f",
        "filename": "share/certs/BitcoinFoundation_Apple_Cert.pem",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Apple_Cert.pem?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,37 @@\n+Bag Attributes\n+    friendlyName: Developer ID Application: BITCOIN FOUNDATION, INC., THE\n+    localKeyID: 6B 9C 6C A8 A5 73 70 70 E2 57 A3 49 D8 62 FB 97 C7 A5 5D 5E \n+subject=/UID=PBV4GLS9J4/CN=Developer ID Application: BITCOIN FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=BITCOIN FOUNDATION, INC., THE/C=US\n+issuer=/CN=Developer ID Certification Authority/OU=Apple Certification Authority/O=Apple Inc./C=US\n+-----BEGIN CERTIFICATE-----\n+MIIFhzCCBG+gAwIBAgIIJ0r1rumyfZAwDQYJKoZIhvcNAQELBQAweTEtMCsGA1UE\n+AwwkRGV2ZWxvcGVyIElEIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSYwJAYDVQQL\n+DB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUg\n+SW5jLjELMAkGA1UEBhMCVVMwHhcNMTMwMTEwMjIzOTAxWhcNMTgwMTExMjIzOTAx\n+WjCBqDEaMBgGCgmSJomT8ixkAQEMClBCVjRHTFM5SjQxQDA+BgNVBAMMN0RldmVs\n+b3BlciBJRCBBcHBsaWNhdGlvbjogQklUQ09JTiBGT1VOREFUSU9OLCBJTkMuLCBU\n+SEUxEzARBgNVBAsMClBCVjRHTFM5SjQxJjAkBgNVBAoMHUJJVENPSU4gRk9VTkRB\n+VElPTiwgSU5DLiwgVEhFMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQAD\n+ggEPADCCAQoCggEBALTd5zURuZVoJviusr119aktXksenb9IN9vq6kBbq38vxEk7\n+9wkKMES2XfBRh0HxcEizGzhMNy5OCXuTLMaNMihYdfwYSoBoR2foEU+6kjPUnyJ4\n+dQBFLJZJr5/QeQmALmYHEgZ6lwXFD2lU8t92340zeJ4y5LZw5pcEHtH9IummYDut\n+OGCkCGXDcjL+5nHhNScJiXHhswM+62o6XXsQiP6EWbM1CsgrGTNLtaa0U/UvVDwE\n+79YKklSC5Bog2LD0jBcTuveI66mFzqu++L9X9u+ZArtebwCl7BPNQ+uboYy5uV2d\n+zf8lpNNZLfXCFjoLe9bLICKfZ7ub9V5aC8+GhckCAwEAAaOCAeEwggHdMD4GCCsG\n+AQUFBwEBBDIwMDAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuYXBwbGUuY29tL29j\n+c3AtZGV2aWQwMTAdBgNVHQ4EFgQUa5xsqKVzcHDiV6NJ2GL7l8elXV4wDAYDVR0T\n+AQH/BAIwADAfBgNVHSMEGDAWgBRXF+2iz9x8mKEQ4Py+hy0s8uMXVDCCAQ4GA1Ud\n+IASCAQUwggEBMIH+BgkqhkiG92NkBQEwgfAwKAYIKwYBBQUHAgEWHGh0dHA6Ly93\n+d3cuYXBwbGUuY29tL2FwcGxlY2EwgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug\n+b24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh\n+bmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv\n+bmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj\n+YXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wDgYDVR0PAQH/BAQDAgeAMBYGA1Ud\n+JQEB/wQMMAoGCCsGAQUFBwMDMBMGCiqGSIb3Y2QGAQ0BAf8EAgUAMA0GCSqGSIb3\n+DQEBCwUAA4IBAQAfJ0BjID/1dS2aEeVyhAzPzCBjG8vm0gDf+/qfwRn3+yWeL9vS\n+nMdbilwM48IyQWTagjGGcojbsAd/vE4N7NhQyHInoCllNoeor1I5xx+blTaGRBK+\n+dDhJbbdlGCjsLnH/BczGZi5fyEJds9lUIrp1hJidRcUKO76qb/9gc6qNZpl1vH5k\n+lDUuJYt7YhAs+L6rTXDyqcK9maeQr0gaOPsRRAQLLwiQCorPeMTUNsbVMdMwZYJs\n+R+PxiAnk+nyi7rfiFvPoASAYUuI6OzYL/Fa6QU4/gYyPgic944QYVkaQBnc0vEP1\n+nXq6LGKwgVGcqJnkr/E2kui5gJoV5C3qll3e\n+-----END CERTIFICATE-----"
      },
      {
        "sha": "dc752d455c911113eac90c4a601925ce6dd59f5f",
        "filename": "share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Comodo_Cert.pem?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,37 @@\n+Bag Attributes\n+    friendlyName: The Bitcoin Foundation, Inc.'s COMODO CA Limited ID\n+    localKeyID: 8C 94 64 E3 B5 B0 41 89 5B 89 B0 57 CC 74 B9 44 E5 B2 92 66 \n+subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Bitcoin Foundation, Inc./CN=The Bitcoin Foundation, Inc.\n+issuer=/C=GB/ST=Greater Manchester/L=Salford/O=COMODO CA Limited/CN=COMODO Code Signing CA 2\n+-----BEGIN CERTIFICATE-----\n+MIIFeDCCBGCgAwIBAgIRAJVYMd+waOER7lUqtiz3M2IwDQYJKoZIhvcNAQEFBQAw\n+ezELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxITAfBgNV\n+BAMTGENPTU9ETyBDb2RlIFNpZ25pbmcgQ0EgMjAeFw0xMzAxMTYwMDAwMDBaFw0x\n+NDAxMTYyMzU5NTlaMIG8MQswCQYDVQQGEwJVUzETMBEGA1UEEQwKOTgxMDQtMTQ0\n+NDELMAkGA1UECAwCV0ExEDAOBgNVBAcMB1NlYXR0bGUxEjAQBgNVBAkMCVN1aXRl\n+IDMwMDEXMBUGA1UECQwONzEgQ29sdW1iaWEgU3QxJTAjBgNVBAoMHFRoZSBCaXRj\n+b2luIEZvdW5kYXRpb24sIEluYy4xJTAjBgNVBAMMHFRoZSBCaXRjb2luIEZvdW5k\n+YXRpb24sIEluYy4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQChUwLD\n+u/hu5aFZ/n11B27awONaaDrmHm0pamiWHb01yL4JmTBtaLCrSftF8RhCscQ8jpI0\n+UG1Cchmay0e3zH5o5XRs0H9C3x+SM5ozms0TWDmAYiB8aQEghsGovDk0D2nyTQeK\n+Q0xqyCh0m8ZPOnMnYrakHEmF6WvhLdJvI6Od4KIwbKxgN17cPFIfLVsZ7GrzmmbU\n+Gdi4wSQCHy5rxzvBxho8Qq/SfBl93uOMUrqOHjOUAPhNuTJG3t/MdhU8Zp24s29M\n+abHtYkT9W86hMjIiI8RTAR+WHKVglx9SB0cjDabXN8SZ3gME0+H++LyzlySHT8sI\n+ykepojZ7UBRgp9w3AgMBAAGjggGzMIIBrzAfBgNVHSMEGDAWgBQexbEsfYfaAmh8\n+JbwMB4Q/ts/e8TAdBgNVHQ4EFgQUfPf+ZyDWl/4LH0Y5BuJTelkRd/EwDgYDVR0P\n+AQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYIKwYBBQUHAwMwEQYJ\n+YIZIAYb4QgEBBAQDAgQQMEYGA1UdIAQ/MD0wOwYMKwYBBAGyMQECAQMCMCswKQYI\n+KwYBBQUHAgEWHWh0dHBzOi8vc2VjdXJlLmNvbW9kby5uZXQvQ1BTMEEGA1UdHwQ6\n+MDgwNqA0oDKGMGh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL0NPTU9ET0NvZGVTaWdu\n+aW5nQ0EyLmNybDByBggrBgEFBQcBAQRmMGQwPAYIKwYBBQUHMAKGMGh0dHA6Ly9j\n+cnQuY29tb2RvY2EuY29tL0NPTU9ET0NvZGVTaWduaW5nQ0EyLmNydDAkBggrBgEF\n+BQcwAYYYaHR0cDovL29jc3AuY29tb2RvY2EuY29tMCgGA1UdEQQhMB+BHWxpbmRz\n+YXlAYml0Y29pbmZvdW5kYXRpb24ub3JnMA0GCSqGSIb3DQEBBQUAA4IBAQAqibjo\n+D4HG5XSIIMCmYE5RgQBSEAJfI+EZERk1G9F83ZUWr0yNRZCw4O+RaM7xQhvJhEoD\n+G2kpk/q2bNOc71/VyZ6SrE1JRVUON41/Flhz4M6cP0BclTicXvh+efVwqZhIz+ws\n+UxF2hvC/1Xx6rqI7NYAlOYXk2MSUq3HREo+gWUPKM8em4MZZV/7XCH4QbsfxOl1J\n+xS6EOQmV8hfUN4KRXI5WfGUmedBxq7dM0RSJOSQl8fq2f+JjRLfjQwQucy7LDY+y\n+pRTsL2TdQV/DuDuI3s0NHRGznQNddoX5jqpXhSQFAAdgrhN1gGkWaaTPzr9IF2TG\n+qgr6PEp9tIYC+MbM\n+-----END CERTIFICATE-----"
      },
      {
        "sha": "8d50144c21f9bd3726b9b12e09e8c3ff44d6e595",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,46 @@\n+Code-signing private key notes\n+==\n+\n+The private keys for these certificates were generated on Gavin's main work machine,\n+following the certificate authority's recommendations for generating certificate\n+signing requests.\n+\n+For OSX, the private key was generated by Keychain.app on Gavin's main work machine.\n+The key and certificate is in a separate, passphrase-protected keychain file that is\n+unlocked to sign the Bitcoin-Qt.app bundle.\n+\n+For Windows, the private key was generated by Firefox running on Gavin's main work machine.\n+The key and certificate were exported into a separate, passphrase-protected PKCS#12 file, and\n+then deleted from Firefox's keystore. The exported file is used to sign the Windows setup.exe.\n+\n+Threat analysis\n+--\n+\n+Gavin is a single point of failure. He could be coerced to divulge the secret signing keys,\n+allowing somebody to distribute a Bitcoin-Qt.app or bitcoin-qt-setup.exe with a valid\n+signature but containing a malicious binary.\n+\n+Or the machine Gavin uses to sign the binaries could be compromised, either remotely or\n+by breaking in to his office, allowing the attacker to get the private key files and then\n+install a keylogger to get the passphrase that protects them.\n+\n+Threat Mitigation\n+--\n+\n+\"Air gapping\" the machine used to do the signing will not work, because the signing\n+process needs to access a timestamp server over the network. And it would not\n+prevent the \"rubber hose cryptography\" threat (coercing Gavin to sign a bad binary\n+or divulge the private keys).\n+\n+Windows binaries are reproducibly 'gitian-built', and the setup.exe file created\n+by the NSIS installer system is a 7zip archive, so you could check to make sure\n+that the bitcoin-qt.exe file inside the installer had not been tampered with.\n+However, an attacker could modify the installer's code, so when the setup.exe\n+was run it compromised users' systems. A volunteer to write an auditing tool\n+that checks the setup.exe for tampering, and checks the files in it against\n+the list of gitian signatures, is needed.\n+\n+The long-term solution is something like the 'gitian downloader' system, which\n+uses signatures from multiple developers to determine whether or not a binary\n+should be trusted. However, that just pushes the problem to \"how will\n+non-technical users securely get the gitian downloader code to start?\""
      },
      {
        "sha": "32ef2a5755aa4e93d3da541f78f576a846b53db0",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -4,7 +4,7 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n if [ $# -gt 1 ]; then\n-    cd \"$2\" || exit 1\n+    cd \"$2\"\n fi\n if [ $# -gt 0 ]; then\n     FILE=\"$1\""
      },
      {
        "sha": "b0d09e244ad4ee6809a459329ffac9e559f04f01",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -29,27 +29,27 @@\n   <string>????</string>\n \n   <key>CFBundleExecutable</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Blockcash-Qt</string>\n   \n   <key>CFBundleName</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Blockcash-Qt</string>\n \n   <key>LSHasLocalizedDisplayName</key>\n   <true/>\n \n   <key>CFBundleIdentifier</key>\n-  <string>org.bitcoinfoundation.Bitcoin-Qt</string>\n+  <string>org.blockcash.Blockcash-Qt</string>\n \n   <key>CFBundleURLTypes</key>\n   <array>\n     <dict>\n       <key>CFBundleTypeRole</key>\n       <string>Editor</string>\n       <key>CFBundleURLName</key>\n-      <string>org.bitcoin.BitcoinPayment</string>\n+      <string>org.blockcash.BlockcashPayment</string>\n       <key>CFBundleURLSchemes</key>\n       <array>\n-        <string>bitcoin</string>\n+        <string>blockcash</string>\n       </array>\n     </dict>\n   </array>\n@@ -58,20 +58,20 @@\n   <array>\n     <dict>\n       <key>UTTypeIdentifier</key>\n-      <string>org.bitcoin.paymentrequest</string>\n+      <string>org.blockcash.paymentrequest</string>\n       <key>UTTypeDescription</key>\n-      <string>Bitcoin payment request</string>\n+      <string>Blockcash payment request</string>\n       <key>UTTypeConformsTo</key>\n       <array>\n         <string>public.data</string>\n       </array>\n       <key>UTTypeTagSpecification</key>\n       <dict>\n         <key>public.mime-type</key>\n-        <string>application/x-bitcoin-payment-request</string>\n+        <string>application/x-blockcash-payment-request</string>\n         <key>public.filename-extension</key>\n         <array>\n-          <string>bitcoinpaymentrequest</string>\n+          <string>blockcashpaymentrequest</string>\n         </array>\n       </dict>\n     </dict>\n@@ -84,7 +84,7 @@\n       <string>Editor</string>\n       <key>LSItemContentTypes</key>\n       <array>\n-        <string>org.bitcoin.paymentrequest</string>\n+        <string>org.blockcash.paymentrequest</string>\n       </array>\n       <key>LSHandlerRank</key>\n       <string>Owner</string>"
      },
      {
        "sha": "5492fdb8c552418040aed93f2a763e4ec0f8e7a2",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -58,7 +58,7 @@ def parse_po(text):\n if not XGETTEXT:\n     print('Cannot extract strings: xgettext utility is not installed or not configured.',file=sys.stderr)\n     print('Please install package \"gettext\" and re-run \\'./configure\\'.',file=sys.stderr)\n-    sys.exit(1)\n+    exit(1)\n child = Popen([XGETTEXT,'--output=-','-n','--keyword=_'] + files, stdout=PIPE)\n (out, err) = child.communicate()\n "
      },
      {
        "sha": "12a8e6fb0cc5b9458cf1ca430ed8e497096dfeeb",
        "filename": "share/rpcuser/README.md",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/rpcuser/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/rpcuser/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/README.md?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,10 @@\n+RPC Tools\n+---------------------\n+\n+### [RPCUser](/share/rpcuser) ###\n+\n+Create an RPC user login credential.\n+\n+Usage:\n+\n+    ./rpcuser.py <username>"
      },
      {
        "sha": "e2669862868b561ad2709c7ce331355bddad5273",
        "filename": "share/rpcuser/rpcuser.py",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python2 \n+# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying \n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import hashlib\n+import sys\n+import os\n+from random import SystemRandom\n+import base64\n+import hmac\n+\n+if len(sys.argv) < 2:\n+    sys.stderr.write('Please include username as an argument.\\n')\n+    sys.exit(0)\n+\n+username = sys.argv[1]\n+\n+#This uses os.urandom() underneath\n+cryptogen = SystemRandom()\n+\n+#Create 16 byte hex salt\n+salt_sequence = [cryptogen.randrange(256) for i in range(16)]\n+hexseq = list(map(hex, salt_sequence))\n+salt = \"\".join([x[2:] for x in hexseq])\n+\n+#Create 32 byte b64 password\n+password = base64.urlsafe_b64encode(os.urandom(32))\n+\n+digestmod = hashlib.sha256\n+\n+if sys.version_info.major >= 3:\n+    password = password.decode('utf-8')\n+    digestmod = 'SHA256'\n+ \n+m = hmac.new(bytearray(salt, 'utf-8'), bytearray(password, 'utf-8'), digestmod)\n+result = m.hexdigest()\n+\n+print(\"String to be appended to litecoin.conf:\")\n+print(\"rpcauth=\"+username+\":\"+salt+\"$\"+result)\n+print(\"Your password:\\n\"+password)"
      },
      {
        "sha": "eb146c099e12bf54cdca5c50b7c932be0158b29b",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -50,9 +50,9 @@ Var StartMenuGroup\n # Installer attributes\n OutFile @abs_top_srcdir@/@PACKAGE_TARNAME@-${VERSION}-win@WINDOWS_BITS@-setup.exe\n !if \"@WINDOWS_BITS@\" == \"64\"\n-InstallDir $PROGRAMFILES64\\Bitcoin\n+InstallDir $PROGRAMFILES64\\Blockcash\n !else\n-InstallDir $PROGRAMFILES\\Bitcoin\n+InstallDir $PROGRAMFILES\\Blockcash\n !endif\n CRCCheck on\n XPStyle on\n@@ -104,7 +104,7 @@ Section -post SEC0001\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\n     WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"URL Protocol\" \"\"\n-    WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"\" \"URL:Bitcoin\"\n+    WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"\" \"URL:Blockcash\"\n     WriteRegStr HKCR \"@PACKAGE_TARNAME@\\DefaultIcon\" \"\" $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n     WriteRegStr HKCR \"@PACKAGE_TARNAME@\\shell\\open\\command\" \"\" '\"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" \"%1\"'\n SectionEnd\n@@ -137,7 +137,7 @@ Section -un.post UNSEC0001\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\"\n-    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMSTARTUP\\Blockcash.lnk\"\n     Delete /REBOOTOK $INSTDIR\\uninstall.exe\n     Delete /REBOOTOK $INSTDIR\\debug.log\n     Delete /REBOOTOK $INSTDIR\\db.log"
      },
      {
        "sha": "7ea381cca762dca733d1bb74d33ec6c69e42fa50",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 38,
        "deletions": 39,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -18,7 +18,8 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n+BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n+BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n@@ -65,11 +66,11 @@ TESTS =\n BENCHMARKS =\n \n if BUILD_BITCOIND\n-  bin_PROGRAMS += bitcoind\n+  bin_PROGRAMS += blockcashd\n endif\n \n if BUILD_BITCOIN_UTILS\n-  bin_PROGRAMS += bitcoin-cli bitcoin-tx\n+  bin_PROGRAMS += blockcash-cli blockcash-tx\n endif\n \n .PHONY: FORCE check-symbols check-security\n@@ -78,7 +79,6 @@ BITCOIN_CORE_H = \\\n   addrdb.h \\\n   addrman.h \\\n   base58.h \\\n-  bech32.h \\\n   bloom.h \\\n   blockencodings.h \\\n   chain.h \\\n@@ -130,7 +130,6 @@ BITCOIN_CORE_H = \\\n   rpc/client.h \\\n   rpc/mining.h \\\n   rpc/protocol.h \\\n-  rpc/safemode.h \\\n   rpc/server.h \\\n   rpc/register.h \\\n   scheduler.h \\\n@@ -163,12 +162,9 @@ BITCOIN_CORE_H = \\\n   wallet/crypter.h \\\n   wallet/db.h \\\n   wallet/feebumper.h \\\n-  wallet/fees.h \\\n-  wallet/init.h \\\n   wallet/rpcwallet.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n-  wallet/walletutil.h \\\n   warnings.h \\\n   zmq/zmqabstractnotifier.h \\\n   zmq/zmqconfig.h\\\n@@ -212,7 +208,6 @@ libbitcoin_server_a_SOURCES = \\\n   rpc/misc.cpp \\\n   rpc/net.cpp \\\n   rpc/rawtransaction.cpp \\\n-  rpc/safemode.cpp \\\n   rpc/server.cpp \\\n   script/sigcache.cpp \\\n   script/ismine.cpp \\\n@@ -244,17 +239,14 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n   wallet/feebumper.cpp \\\n-  wallet/fees.cpp \\\n-  wallet/init.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n-  wallet/walletutil.cpp \\\n   $(BITCOIN_CORE_H)\n \n # crypto primitives library\n-crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS)\n+crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_CONFIG_INCLUDES) $(SSL_CFLAGS)\n crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/aes.cpp \\\n@@ -268,14 +260,17 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/hmac_sha512.h \\\n   crypto/ripemd160.cpp \\\n   crypto/ripemd160.h \\\n+  crypto/scrypt.cpp \\\n+  crypto/scrypt-sse2.cpp \\\n+  crypto/scrypt.h \\\n   crypto/sha1.cpp \\\n   crypto/sha1.h \\\n   crypto/sha256.cpp \\\n   crypto/sha256.h \\\n   crypto/sha512.cpp \\\n   crypto/sha512.h\n \n-if USE_ASM\n+if EXPERIMENTAL_ASM\n crypto_libbitcoin_crypto_a_SOURCES += crypto/sha256_sse4.cpp\n endif\n \n@@ -319,7 +314,6 @@ libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_common_a_SOURCES = \\\n   base58.cpp \\\n-  bech32.cpp \\\n   chainparams.cpp \\\n   coins.cpp \\\n   compressor.cpp \\\n@@ -376,16 +370,16 @@ nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n #\n \n # bitcoind binary #\n-bitcoind_SOURCES = bitcoind.cpp\n-bitcoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+blockcashd_SOURCES = bitcoind.cpp\n+blockcashd_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+blockcashd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+blockcashd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoind_SOURCES += bitcoind-res.rc\n+blockcashd_SOURCES += bitcoind-res.rc\n endif\n \n-bitcoind_LDADD = \\\n+blockcashd_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBUNIVALUE) \\\n@@ -399,46 +393,46 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+blockcashd_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n \n # bitcoin-cli binary #\n-bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n-bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+blockcash_cli_SOURCES = bitcoin-cli.cpp\n+blockcash_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n+blockcash_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+blockcash_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n+blockcash_cli_SOURCES += bitcoin-cli-res.rc\n endif\n \n-bitcoin_cli_LDADD = \\\n+blockcash_cli_LDADD = \\\n   $(LIBBITCOIN_CLI) \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+blockcash_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #\n-bitcoin_tx_SOURCES = bitcoin-tx.cpp\n-bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+blockcash_tx_SOURCES = bitcoin-tx.cpp\n+blockcash_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+blockcash_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+blockcash_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_tx_SOURCES += bitcoin-tx-res.rc\n+blockcash_tx_SOURCES += bitcoin-tx-res.rc\n endif\n \n-bitcoin_tx_LDADD = \\\n+blockcash_tx_LDADD = \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+blockcash_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n # bitcoinconsensus library #\n@@ -451,8 +445,8 @@ if GLIBC_BACK_COMPAT\n endif\n \n libbitcoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n-libbitcoinconsensus_la_LIBADD = $(LIBSECP256K1)\n-libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL\n+libbitcoinconsensus_la_LIBADD = $(LIBSECP256K1) $(CRYPTO_LIBS)\n+libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL $(SSL_CFLAGS)\n libbitcoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n endif\n@@ -478,7 +472,8 @@ CLEANFILES += univalue/*.gcda univalue/*.gcno\n CLEANFILES += wallet/*.gcda wallet/*.gcno\n CLEANFILES += wallet/test/*.gcda wallet/test/*.gcno\n CLEANFILES += zmq/*.gcda zmq/*.gcno\n-CLEANFILES += obj/build.h\n+\n+DISTCLEANFILES = obj/build.h\n \n EXTRA_DIST = $(CTAES_DIST)\n \n@@ -502,6 +497,10 @@ clean-local:\n \t## FIXME: How to get the appropriate modulename_CPPFLAGS in here?\n \t$(AM_V_GEN) $(WINDRES) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) -DWINDRES_PREPROC -i $< -o $@\n \n+.mm.o:\n+\t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) -c -o $@ $<\n+\n check-symbols: $(bin_PROGRAMS)\n if GLIBC_BACK_COMPAT\n \t@echo \"Checking glibc back compat...\""
      },
      {
        "sha": "ff97a622cb1051b9e0364da6af3d4704ba2a6469",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 15,
        "deletions": 16,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,16 +2,15 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += bench/bench_bitcoin\n+bin_PROGRAMS += bench/bench_blockcash\n BENCH_SRCDIR = bench\n-BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)\n+BENCH_BINARY = bench/bench_blockcash$(EXEEXT)\n \n-RAW_BENCH_FILES = \\\n+RAW_TEST_FILES = \\\n   bench/data/block413567.raw\n-GENERATED_BENCH_FILES = $(RAW_BENCH_FILES:.raw=.raw.h)\n+GENERATED_TEST_FILES = $(RAW_TEST_FILES:.raw=.raw.h)\n \n-bench_bench_bitcoin_SOURCES = \\\n-  $(RAW_BENCH_FILES) \\\n+bench_bench_blockcash_SOURCES = \\\n   bench/bench_bitcoin.cpp \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n@@ -29,11 +28,11 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/perf.h \\\n   bench/prevector_destructor.cpp\n \n-nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_BENCH_FILES)\n+nodist_bench_bench_blockcash_SOURCES = $(GENERATED_TEST_FILES)\n \n-bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n-bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bench_bench_bitcoin_LDADD = \\\n+bench_bench_blockcash_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_blockcash_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bench_bench_blockcash_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n@@ -46,18 +45,18 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBUNIVALUE)\n \n if ENABLE_ZMQ\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+bench_bench_blockcash_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n \n if ENABLE_WALLET\n-bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CRYPTO)\n+bench_bench_blockcash_SOURCES += bench/coin_selection.cpp\n+bench_bench_blockcash_LDADD += $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CRYPTO)\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bench_bench_blockcash_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+bench_bench_blockcash_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)\n+CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_TEST_FILES)\n \n CLEANFILES += $(CLEAN_BITCOIN_BENCH)\n "
      },
      {
        "sha": "c38701901762f676694ab91afeab43159d77f942",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 34,
        "deletions": 18,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,7 +2,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += qt/bitcoin-qt\n+bin_PROGRAMS += qt/blockcash-qt\n EXTRA_LIBRARIES += qt/libbitcoinqt.a\n \n # bitcoin qt core #\n@@ -13,18 +13,24 @@ QT_TS = \\\n   qt/locale/bitcoin_be_BY.ts \\\n   qt/locale/bitcoin_bg_BG.ts \\\n   qt/locale/bitcoin_bg.ts \\\n+  qt/locale/bitcoin_bn.ts \\\n+  qt/locale/bitcoin_bs.ts \\\n   qt/locale/bitcoin_ca_ES.ts \\\n   qt/locale/bitcoin_ca.ts \\\n   qt/locale/bitcoin_ca@valencia.ts \\\n   qt/locale/bitcoin_cs.ts \\\n   qt/locale/bitcoin_cy.ts \\\n   qt/locale/bitcoin_da.ts \\\n+  qt/locale/bitcoin_de_DE.ts \\\n   qt/locale/bitcoin_de.ts \\\n   qt/locale/bitcoin_el_GR.ts \\\n   qt/locale/bitcoin_el.ts \\\n+  qt/locale/bitcoin_en_AU.ts \\\n   qt/locale/bitcoin_en_GB.ts \\\n   qt/locale/bitcoin_en.ts \\\n+  qt/locale/bitcoin_en_US.ts \\\n   qt/locale/bitcoin_eo.ts \\\n+  qt/locale/bitcoin_es_419.ts \\\n   qt/locale/bitcoin_es_AR.ts \\\n   qt/locale/bitcoin_es_CL.ts \\\n   qt/locale/bitcoin_es_CO.ts \\\n@@ -44,13 +50,16 @@ QT_TS = \\\n   qt/locale/bitcoin_fr_FR.ts \\\n   qt/locale/bitcoin_fr.ts \\\n   qt/locale/bitcoin_gl.ts \\\n+  qt/locale/bitcoin_he_IL.ts \\\n   qt/locale/bitcoin_he.ts \\\n   qt/locale/bitcoin_hi_IN.ts \\\n   qt/locale/bitcoin_hr.ts \\\n   qt/locale/bitcoin_hu.ts \\\n   qt/locale/bitcoin_id_ID.ts \\\n+  qt/locale/bitcoin_id.ts \\\n   qt/locale/bitcoin_it_IT.ts \\\n   qt/locale/bitcoin_it.ts \\\n+  qt/locale/bitcoin_ja_JP.ts \\\n   qt/locale/bitcoin_ja.ts \\\n   qt/locale/bitcoin_ka.ts \\\n   qt/locale/bitcoin_kk_KZ.ts \\\n@@ -63,8 +72,11 @@ QT_TS = \\\n   qt/locale/bitcoin_mk_MK.ts \\\n   qt/locale/bitcoin_mn.ts \\\n   qt/locale/bitcoin_ms_MY.ts \\\n+  qt/locale/bitcoin_my.ts \\\n+  qt/locale/bitcoin_nb_NO.ts \\\n   qt/locale/bitcoin_nb.ts \\\n   qt/locale/bitcoin_ne.ts \\\n+  qt/locale/bitcoin_nl_NL.ts \\\n   qt/locale/bitcoin_nl.ts \\\n   qt/locale/bitcoin_pam.ts \\\n   qt/locale/bitcoin_pl.ts \\\n@@ -74,14 +86,17 @@ QT_TS = \\\n   qt/locale/bitcoin_ro.ts \\\n   qt/locale/bitcoin_ru_RU.ts \\\n   qt/locale/bitcoin_ru.ts \\\n+  qt/locale/bitcoin_si.ts \\\n   qt/locale/bitcoin_sk.ts \\\n   qt/locale/bitcoin_sl_SI.ts \\\n   qt/locale/bitcoin_sq.ts \\\n   qt/locale/bitcoin_sr@latin.ts \\\n   qt/locale/bitcoin_sr.ts \\\n   qt/locale/bitcoin_sv.ts \\\n   qt/locale/bitcoin_ta.ts \\\n+  qt/locale/bitcoin_te.ts \\\n   qt/locale/bitcoin_th_TH.ts \\\n+  qt/locale/bitcoin_th.ts \\\n   qt/locale/bitcoin_tr_TR.ts \\\n   qt/locale/bitcoin_tr.ts \\\n   qt/locale/bitcoin_uk.ts \\\n@@ -273,6 +288,7 @@ RES_ICONS = \\\n   qt/res/icons/history.png \\\n   qt/res/icons/info.png \\\n   qt/res/icons/key.png \\\n+  qt/res/icons/blockcash_splash.png \\\n   qt/res/icons/lock_closed.png \\\n   qt/res/icons/lock_open.png \\\n   qt/res/icons/network_disabled.png \\\n@@ -362,12 +378,12 @@ RES_MOVIES = $(wildcard $(srcdir)/qt/res/movies/spinner-*.png)\n \n BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n \n-BITCOIN_QT_INCLUDES = -DQT_NO_KEYWORDS\n+BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n+  -I$(builddir)/qt/forms -DQT_NO_KEYWORDS\n \n qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n-qt_libbitcoinqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n   $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n@@ -381,37 +397,37 @@ QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:\n # Most files will depend on the forms and moc files as includes. Generate them\n # before anything else.\n $(QT_MOC): $(QT_FORMS_H)\n-$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n+$(qt_libbitcoinqt_a_OBJECTS) $(qt_blockcash_qt_OBJECTS) : | $(QT_MOC)\n \n #Generating these with a half-written protobuf header leads to wacky results.\n #This makes sure it's done.\n $(QT_MOC): $(PROTOBUF_H)\n $(QT_MOC_CPP): $(PROTOBUF_H)\n \n # bitcoin-qt binary #\n-qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_blockcash_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_blockcash_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n+qt_blockcash_qt_SOURCES = qt/bitcoin.cpp\n if TARGET_DARWIN\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_MM)\n+  qt_blockcash_qt_SOURCES += $(BITCOIN_MM)\n endif\n if TARGET_WINDOWS\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_RC)\n+  qt_blockcash_qt_SOURCES += $(BITCOIN_RC)\n endif\n-qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+qt_blockcash_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_blockcash_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_blockcash_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n+qt_blockcash_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_bitcoin_qt_LIBTOOLFLAGS = --tag CXX\n+qt_blockcash_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_blockcash_qt_LIBTOOLFLAGS = --tag CXX\n \n #locale/foo.ts -> locale/foo.qm\n QT_QM=$(QT_TS:.ts=.qm)\n@@ -438,14 +454,14 @@ $(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n \t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n-CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_bitcoin_locale.qrc\n+CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n \n CLEANFILES += $(CLEAN_QT)\n \n bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)\n+\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_blockcash_qt_OBJECTS) qt/blockcash-qt$(EXEEXT) $(LIBBITCOINQT)\n \n-bitcoin_qt : qt/bitcoin-qt$(EXEEXT)\n+bitcoin_qt : qt/blockcash-qt$(EXEEXT)\n \n ui_%.h: %.ui\n \t@test -f $(UIC)"
      },
      {
        "sha": "461c633db6d70e0df799772c5be70b866b90529e",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 18,
        "deletions": 16,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,8 +2,8 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += qt/test/test_bitcoin-qt\n-TESTS += qt/test/test_bitcoin-qt\n+bin_PROGRAMS += qt/test/test_blockcash-qt\n+TESTS += qt/test/test_blockcash-qt\n \n TEST_QT_MOC_CPP = \\\n   qt/test/moc_compattests.cpp \\\n@@ -25,15 +25,17 @@ TEST_QT_H = \\\n   qt/test/wallettests.h\n \n TEST_BITCOIN_CPP = \\\n-  test/test_bitcoin.cpp\n+  test/test_bitcoin.cpp \\\n+  test/testutil.cpp\n \n TEST_BITCOIN_H = \\\n-  test/test_bitcoin.h\n+  test/test_bitcoin.h \\\n+  test/testutil.h\n \n-qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_test_test_blockcash_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n \n-qt_test_test_bitcoin_qt_SOURCES = \\\n+qt_test_test_blockcash_qt_SOURCES = \\\n   qt/test/compattests.cpp \\\n   qt/test/rpcnestedtests.cpp \\\n   qt/test/test_main.cpp \\\n@@ -42,35 +44,35 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n   $(TEST_BITCOIN_CPP) \\\n   $(TEST_BITCOIN_H)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_SOURCES += \\\n+qt_test_test_blockcash_qt_SOURCES += \\\n   qt/test/paymentservertests.cpp \\\n   qt/test/wallettests.cpp \\\n   wallet/test/wallet_test_fixture.cpp\n endif\n \n-nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+nodist_qt_test_test_blockcash_qt_SOURCES = $(TEST_QT_MOC_CPP)\n \n-qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+qt_test_test_blockcash_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_test_test_blockcash_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_test_test_blockcash_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_blockcash_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_test_test_blockcash_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_test_test_blockcash_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n \n CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)\n \n-test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)\n+test_bitcoin_qt : qt/test/test_blockcash-qt$(EXEEXT)\n \n-test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE\n+test_bitcoin_qt_check : qt/test/test_blockcash-qt$(EXEEXT) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n test_bitcoin_qt_clean: FORCE"
      },
      {
        "sha": "83ecd3ba7139bf42b523bb3fff2e638d20d73565",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 25,
        "deletions": 27,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,11 +2,11 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-TESTS += test/test_bitcoin\n-bin_PROGRAMS += test/test_bitcoin\n-noinst_PROGRAMS += test/test_bitcoin_fuzzy\n+TESTS += test/test_blockcash\n+bin_PROGRAMS += test/test_blockcash\n+noinst_PROGRAMS += test/test_blockcash_fuzzy\n TEST_SRCDIR = test\n-TEST_BINARY=test/test_bitcoin$(EXEEXT)\n+TEST_BINARY=test/test_blockcash$(EXEEXT)\n \n JSON_TEST_FILES = \\\n   test/data/script_tests.json \\\n@@ -31,10 +31,7 @@ BITCOIN_TESTS =\\\n   test/base32_tests.cpp \\\n   test/base58_tests.cpp \\\n   test/base64_tests.cpp \\\n-  test/bech32_tests.cpp \\\n   test/bip32_tests.cpp \\\n-  test/blockchain_tests.cpp \\\n-  test/blockencodings_tests.cpp \\\n   test/bloom_tests.cpp \\\n   test/bswap_tests.cpp \\\n   test/checkqueue_tests.cpp \\\n@@ -51,7 +48,6 @@ BITCOIN_TESTS =\\\n   test/main_tests.cpp \\\n   test/mempool_tests.cpp \\\n   test/merkle_tests.cpp \\\n-  test/merkleblock_tests.cpp \\\n   test/miner_tests.cpp \\\n   test/multisig_tests.cpp \\\n   test/net_tests.cpp \\\n@@ -68,8 +64,8 @@ BITCOIN_TESTS =\\\n   test/scheduler_tests.cpp \\\n   test/script_P2SH_tests.cpp \\\n   test/script_tests.cpp \\\n-  test/script_standard_tests.cpp \\\n   test/scriptnum_tests.cpp \\\n+  test/scrypt_tests.cpp \\\n   test/serialize_tests.cpp \\\n   test/sighash_tests.cpp \\\n   test/sigopcount_tests.cpp \\\n@@ -78,13 +74,15 @@ BITCOIN_TESTS =\\\n   test/test_bitcoin.cpp \\\n   test/test_bitcoin.h \\\n   test/test_bitcoin_main.cpp \\\n+  test/testutil.cpp \\\n+  test/testutil.h \\\n   test/timedata_tests.cpp \\\n   test/torcontrol_tests.cpp \\\n   test/transaction_tests.cpp \\\n-  test/txvalidation_tests.cpp \\\n   test/txvalidationcache_tests.cpp \\\n   test/versionbits_tests.cpp \\\n   test/uint256_tests.cpp \\\n+  test/univalue_tests.cpp \\\n   test/util_tests.cpp\n \n if ENABLE_WALLET\n@@ -96,31 +94,31 @@ BITCOIN_TESTS += \\\n   wallet/test/crypto_tests.cpp\n endif\n \n-test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(TESTDEFS) $(EVENT_CFLAGS)\n-test_test_bitcoin_LDADD =\n+test_test_blockcash_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+test_test_blockcash_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n+test_test_blockcash_LDADD =\n if ENABLE_WALLET\n-test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+test_test_blockcash_LDADD += $(LIBBITCOIN_WALLET)\n endif\n-test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \\\n+test_test_blockcash_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \\\n   $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n-test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_blockcash_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n-test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n+test_test_blockcash_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+test_test_blockcash_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ\n-test_test_bitcoin_LDADD += $(ZMQ_LIBS)\n+test_test_blockcash_LDADD += $(ZMQ_LIBS)\n endif\n #\n \n # test_bitcoin_fuzzy binary #\n-test_test_bitcoin_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp\n-test_test_bitcoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_test_bitcoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_test_bitcoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_test_blockcash_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp\n+test_test_blockcash_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_test_blockcash_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_blockcash_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-test_test_bitcoin_fuzzy_LDADD = \\\n+test_test_blockcash_fuzzy_LDADD = \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n@@ -129,10 +127,10 @@ test_test_bitcoin_fuzzy_LDADD = \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-test_test_bitcoin_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+test_test_blockcash_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n-nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+nodist_test_test_blockcash_SOURCES = $(GENERATED_TEST_FILES)\n \n $(BITCOIN_TESTS): $(GENERATED_TEST_FILES)\n \n@@ -150,7 +148,7 @@ bitcoin_test_clean : FORCE\n \n check-local:\n \t@echo \"Running test/util/bitcoin-util-test.py...\"\n-\t$(PYTHON) $(top_builddir)/test/util/bitcoin-util-test.py\n+\t$(top_builddir)/test/util/bitcoin-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n if EMBEDDED_UNIVALUE\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check"
      },
      {
        "sha": "7f85c16585aa28b471d16c15b689ba23da6391a8",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,16 +3,17 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <addrdb.h>\n-\n-#include <addrman.h>\n-#include <chainparams.h>\n-#include <clientversion.h>\n-#include <hash.h>\n-#include <random.h>\n-#include <streams.h>\n-#include <tinyformat.h>\n-#include <util.h>\n+#include \"addrdb.h\"\n+\n+#include \"addrman.h\"\n+#include \"chainparams.h\"\n+#include \"clientversion.h\"\n+#include \"fs.h\"\n+#include \"hash.h\"\n+#include \"random.h\"\n+#include \"streams.h\"\n+#include \"tinyformat.h\"\n+#include \"util.h\"\n \n namespace {\n "
      },
      {
        "sha": "6cb36dfac4e60ee8512f8dfdac28101aa6ecc48c",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,8 +6,8 @@\n #ifndef BITCOIN_ADDRDB_H\n #define BITCOIN_ADDRDB_H\n \n-#include <fs.h>\n-#include <serialize.h>\n+#include \"fs.h\"\n+#include \"serialize.h\"\n \n #include <string>\n #include <map>\n@@ -37,7 +37,7 @@ class CBanEntry\n         SetNull();\n     }\n \n-    explicit CBanEntry(int64_t nCreateTimeIn)\n+    CBanEntry(int64_t nCreateTimeIn)\n     {\n         SetNull();\n         nCreateTime = nCreateTimeIn;\n@@ -61,7 +61,7 @@ class CBanEntry\n         banReason = BanReasonUnknown;\n     }\n \n-    std::string banReasonToString() const\n+    std::string banReasonToString()\n     {\n         switch (banReason) {\n         case BanReasonNodeMisbehaving:"
      },
      {
        "sha": "a56bb4f9c1c75136f25f7e0f5b064a81f7ead431",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,11 +3,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <addrman.h>\n+#include \"addrman.h\"\n \n-#include <hash.h>\n-#include <serialize.h>\n-#include <streams.h>\n+#include \"hash.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n \n int CAddrInfo::GetTriedBucket(const uint256& nKey) const\n {\n@@ -390,9 +390,9 @@ int CAddrMan::Check_()\n     if (vRandom.size() != nTried + nNew)\n         return -7;\n \n-    for (const auto& entry : mapInfo) {\n-        int n = entry.first;\n-        const CAddrInfo& info = entry.second;\n+    for (std::map<int, CAddrInfo>::iterator it = mapInfo.begin(); it != mapInfo.end(); it++) {\n+        int n = (*it).first;\n+        CAddrInfo& info = (*it).second;\n         if (info.fInTried) {\n             if (!info.nLastSuccess)\n                 return -1;"
      },
      {
        "sha": "547088aedf4f35f8b833426fccb43b1253e8e98c",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 11,
        "deletions": 14,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,12 +6,12 @@\n #ifndef BITCOIN_ADDRMAN_H\n #define BITCOIN_ADDRMAN_H\n \n-#include <netaddress.h>\n-#include <protocol.h>\n-#include <random.h>\n-#include <sync.h>\n-#include <timedata.h>\n-#include <util.h>\n+#include \"netaddress.h\"\n+#include \"protocol.h\"\n+#include \"random.h\"\n+#include \"sync.h\"\n+#include \"timedata.h\"\n+#include \"util.h\"\n \n #include <map>\n #include <set>\n@@ -313,18 +313,18 @@ class CAddrMan\n         s << nUBuckets;\n         std::map<int, int> mapUnkIds;\n         int nIds = 0;\n-        for (const auto& entry : mapInfo) {\n-            mapUnkIds[entry.first] = nIds;\n-            const CAddrInfo &info = entry.second;\n+        for (std::map<int, CAddrInfo>::const_iterator it = mapInfo.begin(); it != mapInfo.end(); it++) {\n+            mapUnkIds[(*it).first] = nIds;\n+            const CAddrInfo &info = (*it).second;\n             if (info.nRefCount) {\n                 assert(nIds != nNew); // this means nNew was wrong, oh ow\n                 s << info;\n                 nIds++;\n             }\n         }\n         nIds = 0;\n-        for (const auto& entry : mapInfo) {\n-            const CAddrInfo &info = entry.second;\n+        for (std::map<int, CAddrInfo>::const_iterator it = mapInfo.begin(); it != mapInfo.end(); it++) {\n+            const CAddrInfo &info = (*it).second;\n             if (info.fInTried) {\n                 assert(nIds != nTried); // this means nTried was wrong, oh ow\n                 s << info;\n@@ -455,7 +455,6 @@ class CAddrMan\n \n     void Clear()\n     {\n-        LOCK(cs);\n         std::vector<int>().swap(vRandom);\n         nKey = GetRandHash();\n         for (size_t bucket = 0; bucket < ADDRMAN_NEW_BUCKET_COUNT; bucket++) {\n@@ -473,8 +472,6 @@ class CAddrMan\n         nTried = 0;\n         nNew = 0;\n         nLastGood = 1; //Initially at 1 so that \"never\" is strictly worse.\n-        mapInfo.clear();\n-        mapAddr.clear();\n     }\n \n     CAddrMan()"
      },
      {
        "sha": "951599646432864d4dd419eac7c6e44b3a58f4ae",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -23,7 +23,7 @@ static const CAmount CENT = 1000000;\n  * critical; in unusual circumstances like a(nother) overflow bug that allowed\n  * for the creation of coins out of thin air modification could lead to a fork.\n  * */\n-static const CAmount MAX_MONEY = 21000000 * COIN;\n+static const CAmount MAX_MONEY = 28000000 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "b4952af6f48906a29db02ce9a86766e01d7d92ca",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,11 +3,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <arith_uint256.h>\n+#include \"arith_uint256.h\"\n \n-#include <uint256.h>\n-#include <utilstrencodings.h>\n-#include <crypto/common.h>\n+#include \"uint256.h\"\n+#include \"utilstrencodings.h\"\n+#include \"crypto/common.h\"\n \n #include <stdio.h>\n #include <string.h>"
      },
      {
        "sha": "6223e4afeb782788aa5086ba5a6ef2ced34789ec",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -25,7 +25,7 @@ template<unsigned int BITS>\n class base_uint\n {\n protected:\n-    static constexpr int WIDTH = BITS / 32;\n+    enum { WIDTH=BITS/32 };\n     uint32_t pn[WIDTH];\n public:\n \n@@ -250,7 +250,7 @@ class base_uint\n \n     uint64_t GetLow64() const\n     {\n-        static_assert(WIDTH >= 2, \"Assertion WIDTH >= 2 failed (WIDTH = BITS / 32). BITS is a template parameter.\");\n+        assert(WIDTH >= 2);\n         return pn[0] | (uint64_t)pn[1] << 32;\n     }\n };"
      },
      {
        "sha": "a5a346a56f624e2c7b3236c0e949cb67ff471f99",
        "filename": "src/bench/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/.gitignore?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1 +1 @@\n-bench_bitcoin\n+bench_blockcash"
      },
      {
        "sha": "314947d48c3f00bf5dbfa059a5226178d33c453e",
        "filename": "src/bench/Examples.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/Examples.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/Examples.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/Examples.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n-#include <validation.h>\n-#include <utiltime.h>\n+#include \"bench.h\"\n+#include \"validation.h\"\n+#include \"utiltime.h\"\n \n // Sanity test: this should loop ten times, and\n // min/max/average should be close to 100ms.\n@@ -15,7 +15,7 @@ static void Sleep100ms(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(Sleep100ms, 10);\n+BENCHMARK(Sleep100ms);\n \n // Extremely fast-running benchmark:\n #include <math.h>\n@@ -31,4 +31,4 @@ static void Trig(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(Trig, 12 * 1000 * 1000);\n+BENCHMARK(Trig);"
      },
      {
        "sha": "65e27a615d9344c765068a95676691a19314504a",
        "filename": "src/bench/base58.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/base58.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,10 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n+#include \"bench.h\"\n \n-#include <validation.h>\n-#include <base58.h>\n+#include \"validation.h\"\n+#include \"base58.h\"\n \n #include <array>\n #include <vector>\n@@ -22,7 +22,7 @@ static void Base58Encode(benchmark::State& state)\n         }\n     };\n     while (state.KeepRunning()) {\n-        EncodeBase58(buff.data(), buff.data() + buff.size());\n+        EncodeBase58(buff.begin(), buff.end());\n     }\n }\n \n@@ -54,6 +54,6 @@ static void Base58Decode(benchmark::State& state)\n }\n \n \n-BENCHMARK(Base58Encode, 470 * 1000);\n-BENCHMARK(Base58CheckEncode, 320 * 1000);\n-BENCHMARK(Base58Decode, 800 * 1000);\n+BENCHMARK(Base58Encode);\n+BENCHMARK(Base58CheckEncode);\n+BENCHMARK(Base58Decode);"
      },
      {
        "sha": "849d924af276d215c6e516c8da43396218e54a71",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 111,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,142 +2,105 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n-#include <bench/perf.h>\n+#include \"bench.h\"\n+#include \"perf.h\"\n \n #include <assert.h>\n #include <iostream>\n #include <iomanip>\n-#include <algorithm>\n-#include <regex>\n-#include <numeric>\n+#include <sys/time.h>\n \n-void benchmark::ConsolePrinter::header()\n-{\n-    std::cout << \"# Benchmark, evals, iterations, total, min, max, median\" << std::endl;\n-}\n-\n-void benchmark::ConsolePrinter::result(const State& state)\n-{\n-    auto results = state.m_elapsed_results;\n-    std::sort(results.begin(), results.end());\n-\n-    double total = state.m_num_iters * std::accumulate(results.begin(), results.end(), 0.0);\n-\n-    double front = 0;\n-    double back = 0;\n-    double median = 0;\n-\n-    if (!results.empty()) {\n-        front = results.front();\n-        back = results.back();\n-\n-        size_t mid = results.size() / 2;\n-        median = results[mid];\n-        if (0 == results.size() % 2) {\n-            median = (results[mid] + results[mid + 1]) / 2;\n-        }\n-    }\n-\n-    std::cout << std::setprecision(6);\n-    std::cout << state.m_name << \", \" << state.m_num_evals << \", \" << state.m_num_iters << \", \" << total << \", \" << front << \", \" << back << \", \" << median << std::endl;\n+benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks() {\n+    static std::map<std::string, benchmark::BenchFunction> benchmarks_map;\n+    return benchmarks_map;\n }\n \n-void benchmark::ConsolePrinter::footer() {}\n-benchmark::PlotlyPrinter::PlotlyPrinter(std::string plotly_url, int64_t width, int64_t height)\n-    : m_plotly_url(plotly_url), m_width(width), m_height(height)\n-{\n+static double gettimedouble(void) {\n+    struct timeval tv;\n+    gettimeofday(&tv, nullptr);\n+    return tv.tv_usec * 0.000001 + tv.tv_sec;\n }\n \n-void benchmark::PlotlyPrinter::header()\n+benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func)\n {\n-    std::cout << \"<html><head>\"\n-              << \"<script src=\\\"\" << m_plotly_url << \"\\\"></script>\"\n-              << \"</head><body><div id=\\\"myDiv\\\" style=\\\"width:\" << m_width << \"px; height:\" << m_height << \"px\\\"></div>\"\n-              << \"<script> var data = [\"\n-              << std::endl;\n+    benchmarks().insert(std::make_pair(name, func));\n }\n \n-void benchmark::PlotlyPrinter::result(const State& state)\n+void\n+benchmark::BenchRunner::RunAll(double elapsedTimeForOne)\n {\n-    std::cout << \"{ \" << std::endl\n-              << \"  name: '\" << state.m_name << \"', \" << std::endl\n-              << \"  y: [\";\n+    perf_init();\n+    std::cout << \"#Benchmark\" << \",\" << \"count\" << \",\" << \"min\" << \",\" << \"max\" << \",\" << \"average\" << \",\"\n+              << \"min_cycles\" << \",\" << \"max_cycles\" << \",\" << \"average_cycles\" << \"\\n\";\n \n-    const char* prefix = \"\";\n-    for (const auto& e : state.m_elapsed_results) {\n-        std::cout << prefix << std::setprecision(6) << e;\n-        prefix = \", \";\n+    for (const auto &p: benchmarks()) {\n+        State state(p.first, elapsedTimeForOne);\n+        p.second(state);\n     }\n-    std::cout << \"],\" << std::endl\n-              << \"  boxpoints: 'all', jitter: 0.3, pointpos: 0, type: 'box',\"\n-              << std::endl\n-              << \"},\" << std::endl;\n-}\n-\n-void benchmark::PlotlyPrinter::footer()\n-{\n-    std::cout << \"]; var layout = { showlegend: false, yaxis: { rangemode: 'tozero', autorange: true } };\"\n-              << \"Plotly.newPlot('myDiv', data, layout);\"\n-              << \"</script></body></html>\";\n-}\n-\n-\n-benchmark::BenchRunner::BenchmarkMap& benchmark::BenchRunner::benchmarks()\n-{\n-    static std::map<std::string, Bench> benchmarks_map;\n-    return benchmarks_map;\n-}\n-\n-benchmark::BenchRunner::BenchRunner(std::string name, benchmark::BenchFunction func, uint64_t num_iters_for_one_second)\n-{\n-    benchmarks().insert(std::make_pair(name, Bench{func, num_iters_for_one_second}));\n+    perf_fini();\n }\n \n-void benchmark::BenchRunner::RunAll(Printer& printer, uint64_t num_evals, double scaling, const std::string& filter, bool is_list_only)\n+bool benchmark::State::KeepRunning()\n {\n-    perf_init();\n-    if (!std::ratio_less_equal<benchmark::clock::period, std::micro>::value) {\n-        std::cerr << \"WARNING: Clock precision is worse than microsecond - benchmarks may be less accurate!\\n\";\n+    if (count & countMask) {\n+      ++count;\n+      return true;\n     }\n-\n-    std::regex reFilter(filter);\n-    std::smatch baseMatch;\n-\n-    printer.header();\n-\n-    for (const auto& p : benchmarks()) {\n-        if (!std::regex_match(p.first, baseMatch, reFilter)) {\n-            continue;\n-        }\n-\n-        uint64_t num_iters = static_cast<uint64_t>(p.second.num_iters_for_one_second * scaling);\n-        if (0 == num_iters) {\n-            num_iters = 1;\n+    double now;\n+    uint64_t nowCycles;\n+    if (count == 0) {\n+        lastTime = beginTime = now = gettimedouble();\n+        lastCycles = beginCycles = nowCycles = perf_cpucycles();\n+    }\n+    else {\n+        now = gettimedouble();\n+        double elapsed = now - lastTime;\n+        double elapsedOne = elapsed * countMaskInv;\n+        if (elapsedOne < minTime) minTime = elapsedOne;\n+        if (elapsedOne > maxTime) maxTime = elapsedOne;\n+\n+        // We only use relative values, so don't have to handle 64-bit wrap-around specially\n+        nowCycles = perf_cpucycles();\n+        uint64_t elapsedOneCycles = (nowCycles - lastCycles) * countMaskInv;\n+        if (elapsedOneCycles < minCycles) minCycles = elapsedOneCycles;\n+        if (elapsedOneCycles > maxCycles) maxCycles = elapsedOneCycles;\n+\n+        if (elapsed*128 < maxElapsed) {\n+          // If the execution was much too fast (1/128th of maxElapsed), increase the count mask by 8x and restart timing.\n+          // The restart avoids including the overhead of this code in the measurement.\n+          countMask = ((countMask<<3)|7) & ((1LL<<60)-1);\n+          countMaskInv = 1./(countMask+1);\n+          count = 0;\n+          minTime = std::numeric_limits<double>::max();\n+          maxTime = std::numeric_limits<double>::min();\n+          minCycles = std::numeric_limits<uint64_t>::max();\n+          maxCycles = std::numeric_limits<uint64_t>::min();\n+          return true;\n         }\n-        State state(p.first, num_evals, num_iters, printer);\n-        if (!is_list_only) {\n-            p.second.func(state);\n+        if (elapsed*16 < maxElapsed) {\n+          uint64_t newCountMask = ((countMask<<1)|1) & ((1LL<<60)-1);\n+          if ((count & newCountMask)==0) {\n+              countMask = newCountMask;\n+              countMaskInv = 1./(countMask+1);\n+          }\n         }\n-        printer.result(state);\n     }\n+    lastTime = now;\n+    lastCycles = nowCycles;\n+    ++count;\n \n-    printer.footer();\n+    if (now - beginTime < maxElapsed) return true; // Keep going\n \n-    perf_fini();\n-}\n+    --count;\n \n-bool benchmark::State::UpdateTimer(const benchmark::time_point current_time)\n-{\n-    if (m_start_time != time_point()) {\n-        std::chrono::duration<double> diff = current_time - m_start_time;\n-        m_elapsed_results.push_back(diff.count() / m_num_iters);\n+    assert(count != 0 && \"count == 0 => (now == 0 && beginTime == 0) => return above\");\n \n-        if (m_elapsed_results.size() == m_num_evals) {\n-            return false;\n-        }\n-    }\n+    // Output results\n+    double average = (now-beginTime)/count;\n+    int64_t averageCycles = (nowCycles-beginCycles)/count;\n+    std::cout << std::fixed << std::setprecision(15) << name << \",\" << count << \",\" << minTime << \",\" << maxTime << \",\" << average << \",\"\n+              << minCycles << \",\" << maxCycles << \",\" << averageCycles << \"\\n\";\n+    std::cout.copyfmt(std::ios(nullptr));\n \n-    m_num_iters_left = m_num_iters - 1;\n-    return true;\n+    return false;\n }"
      },
      {
        "sha": "1f36f2a4bca1b07e2577aebb8392463aabe0a2b4",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 34,
        "deletions": 95,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -9,8 +9,6 @@\n #include <limits>\n #include <map>\n #include <string>\n-#include <vector>\n-#include <chrono>\n \n #include <boost/preprocessor/cat.hpp>\n #include <boost/preprocessor/stringize.hpp>\n@@ -33,110 +31,51 @@ static void CODE_TO_TIME(benchmark::State& state)\n     ... do any cleanup needed...\n }\n \n-// default to running benchmark for 5000 iterations\n-BENCHMARK(CODE_TO_TIME, 5000);\n+BENCHMARK(CODE_TO_TIME);\n \n  */\n-\n+ \n namespace benchmark {\n-// In case high_resolution_clock is steady, prefer that, otherwise use steady_clock.\n-struct best_clock {\n-    using hi_res_clock = std::chrono::high_resolution_clock;\n-    using steady_clock = std::chrono::steady_clock;\n-    using type = std::conditional<hi_res_clock::is_steady, hi_res_clock, steady_clock>::type;\n-};\n-using clock = best_clock::type;\n-using time_point = clock::time_point;\n-using duration = clock::duration;\n-\n-class Printer;\n-\n-class State\n-{\n-public:\n-    std::string m_name;\n-    uint64_t m_num_iters_left;\n-    const uint64_t m_num_iters;\n-    const uint64_t m_num_evals;\n-    std::vector<double> m_elapsed_results;\n-    time_point m_start_time;\n-\n-    bool UpdateTimer(time_point finish_time);\n \n-    State(std::string name, uint64_t num_evals, double num_iters, Printer& printer) : m_name(name), m_num_iters_left(0), m_num_iters(num_iters), m_num_evals(num_evals)\n-    {\n-    }\n-\n-    inline bool KeepRunning()\n-    {\n-        if (m_num_iters_left--) {\n-            return true;\n+    class State {\n+        std::string name;\n+        double maxElapsed;\n+        double beginTime;\n+        double lastTime, minTime, maxTime, countMaskInv;\n+        uint64_t count;\n+        uint64_t countMask;\n+        uint64_t beginCycles;\n+        uint64_t lastCycles;\n+        uint64_t minCycles;\n+        uint64_t maxCycles;\n+    public:\n+        State(std::string _name, double _maxElapsed) : name(_name), maxElapsed(_maxElapsed), count(0) {\n+            minTime = std::numeric_limits<double>::max();\n+            maxTime = std::numeric_limits<double>::min();\n+            minCycles = std::numeric_limits<uint64_t>::max();\n+            maxCycles = std::numeric_limits<uint64_t>::min();\n+            countMask = 1;\n+            countMaskInv = 1./(countMask + 1);\n         }\n-\n-        bool result = UpdateTimer(clock::now());\n-        // measure again so runtime of UpdateTimer is not included\n-        m_start_time = clock::now();\n-        return result;\n-    }\n-};\n-\n-typedef std::function<void(State&)> BenchFunction;\n-\n-class BenchRunner\n-{\n-    struct Bench {\n-        BenchFunction func;\n-        uint64_t num_iters_for_one_second;\n+        bool KeepRunning();\n     };\n-    typedef std::map<std::string, Bench> BenchmarkMap;\n-    static BenchmarkMap& benchmarks();\n \n-public:\n-    BenchRunner(std::string name, BenchFunction func, uint64_t num_iters_for_one_second);\n-\n-    static void RunAll(Printer& printer, uint64_t num_evals, double scaling, const std::string& filter, bool is_list_only);\n-};\n-\n-// interface to output benchmark results.\n-class Printer\n-{\n-public:\n-    virtual ~Printer() {}\n-    virtual void header() = 0;\n-    virtual void result(const State& state) = 0;\n-    virtual void footer() = 0;\n-};\n+    typedef std::function<void(State&)> BenchFunction;\n \n-// default printer to console, shows min, max, median.\n-class ConsolePrinter : public Printer\n-{\n-public:\n-    void header();\n-    void result(const State& state);\n-    void footer();\n-};\n+    class BenchRunner\n+    {\n+        typedef std::map<std::string, BenchFunction> BenchmarkMap;\n+        static BenchmarkMap &benchmarks();\n \n-// creates box plot with plotly.js\n-class PlotlyPrinter : public Printer\n-{\n-public:\n-    PlotlyPrinter(std::string plotly_url, int64_t width, int64_t height);\n-    void header();\n-    void result(const State& state);\n-    void footer();\n+    public:\n+        BenchRunner(std::string name, BenchFunction func);\n \n-private:\n-    std::string m_plotly_url;\n-    int64_t m_width;\n-    int64_t m_height;\n-};\n+        static void RunAll(double elapsedTimeForOne=1.0);\n+    };\n }\n \n-\n-// BENCHMARK(foo, num_iters_for_one_second) expands to:  benchmark::BenchRunner bench_11foo(\"foo\", num_iterations);\n-// Choose a num_iters_for_one_second that takes roughly 1 second. The goal is that all benchmarks should take approximately\n-// the same time, and scaling factor can be used that the total time is appropriate for your system.\n-#define BENCHMARK(n, num_iters_for_one_second) \\\n-    benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n, (num_iters_for_one_second));\n+// BENCHMARK(foo) expands to:  benchmark::BenchRunner bench_11foo(\"foo\", foo);\n+#define BENCHMARK(n) \\\n+    benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n \n #endif // BITCOIN_BENCH_BENCH_H"
      },
      {
        "sha": "37fd772435ed70ce760fc1ad8f3b36f1f37776e1",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 53,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,70 +2,24 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n+#include \"bench.h\"\n \n-#include <crypto/sha256.h>\n-#include <key.h>\n-#include <validation.h>\n-#include <util.h>\n-#include <random.h>\n-\n-#include <boost/lexical_cast.hpp>\n-\n-#include <memory>\n-\n-static const int64_t DEFAULT_BENCH_EVALUATIONS = 5;\n-static const char* DEFAULT_BENCH_FILTER = \".*\";\n-static const char* DEFAULT_BENCH_SCALING = \"1.0\";\n-static const char* DEFAULT_BENCH_PRINTER = \"console\";\n-static const char* DEFAULT_PLOT_PLOTLYURL = \"https://cdn.plot.ly/plotly-latest.min.js\";\n-static const int64_t DEFAULT_PLOT_WIDTH = 1024;\n-static const int64_t DEFAULT_PLOT_HEIGHT = 768;\n+#include \"crypto/sha256.h\"\n+#include \"key.h\"\n+#include \"validation.h\"\n+#include \"util.h\"\n+#include \"random.h\"\n \n int\n main(int argc, char** argv)\n {\n-    gArgs.ParseParameters(argc, argv);\n-\n-    if (gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\")) {\n-        std::cout << HelpMessageGroup(_(\"Options:\"))\n-                  << HelpMessageOpt(\"-?\", _(\"Print this help message and exit\"))\n-                  << HelpMessageOpt(\"-list\", _(\"List benchmarks without executing them. Can be combined with -scaling and -filter\"))\n-                  << HelpMessageOpt(\"-evals=<n>\", strprintf(_(\"Number of measurement evaluations to perform. (default: %u)\"), DEFAULT_BENCH_EVALUATIONS))\n-                  << HelpMessageOpt(\"-filter=<regex>\", strprintf(_(\"Regular expression filter to select benchmark by name (default: %s)\"), DEFAULT_BENCH_FILTER))\n-                  << HelpMessageOpt(\"-scaling=<n>\", strprintf(_(\"Scaling factor for benchmark's runtime (default: %u)\"), DEFAULT_BENCH_SCALING))\n-                  << HelpMessageOpt(\"-printer=(console|plot)\", strprintf(_(\"Choose printer format. console: print data to console. plot: Print results as HTML graph (default: %s)\"), DEFAULT_BENCH_PRINTER))\n-                  << HelpMessageOpt(\"-plot-plotlyurl=<uri>\", strprintf(_(\"URL to use for plotly.js (default: %s)\"), DEFAULT_PLOT_PLOTLYURL))\n-                  << HelpMessageOpt(\"-plot-width=<x>\", strprintf(_(\"Plot width in pixel (default: %u)\"), DEFAULT_PLOT_WIDTH))\n-                  << HelpMessageOpt(\"-plot-height=<x>\", strprintf(_(\"Plot height in pixel (default: %u)\"), DEFAULT_PLOT_HEIGHT));\n-\n-        return 0;\n-    }\n-\n     SHA256AutoDetect();\n     RandomInit();\n     ECC_Start();\n     SetupEnvironment();\n     fPrintToDebugLog = false; // don't want to write to debug.log file\n \n-    int64_t evaluations = gArgs.GetArg(\"-evals\", DEFAULT_BENCH_EVALUATIONS);\n-    std::string regex_filter = gArgs.GetArg(\"-filter\", DEFAULT_BENCH_FILTER);\n-    std::string scaling_str = gArgs.GetArg(\"-scaling\", DEFAULT_BENCH_SCALING);\n-    bool is_list_only = gArgs.GetBoolArg(\"-list\", false);\n-\n-    double scaling_factor = boost::lexical_cast<double>(scaling_str);\n-\n-\n-    std::unique_ptr<benchmark::Printer> printer(new benchmark::ConsolePrinter());\n-    std::string printer_arg = gArgs.GetArg(\"-printer\", DEFAULT_BENCH_PRINTER);\n-    if (\"plot\" == printer_arg) {\n-        printer.reset(new benchmark::PlotlyPrinter(\n-            gArgs.GetArg(\"-plot-plotlyurl\", DEFAULT_PLOT_PLOTLYURL),\n-            gArgs.GetArg(\"-plot-width\", DEFAULT_PLOT_WIDTH),\n-            gArgs.GetArg(\"-plot-height\", DEFAULT_PLOT_HEIGHT)));\n-    }\n-\n-    benchmark::BenchRunner::RunAll(*printer, evaluations, scaling_factor, regex_filter, is_list_only);\n+    benchmark::BenchRunner::RunAll();\n \n     ECC_Stop();\n }"
      },
      {
        "sha": "5aab3381fd21dd64684306b01b1dfce9861212fd",
        "filename": "src/bench/ccoins_caching.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/ccoins_caching.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/ccoins_caching.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/ccoins_caching.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,10 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n-#include <coins.h>\n-#include <policy/policy.h>\n-#include <wallet/crypter.h>\n+#include \"bench.h\"\n+#include \"coins.h\"\n+#include \"policy/policy.h\"\n+#include \"wallet/crypter.h\"\n \n #include <vector>\n \n@@ -84,4 +84,4 @@ static void CCoinsCaching(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(CCoinsCaching, 170 * 1000);\n+BENCHMARK(CCoinsCaching);"
      },
      {
        "sha": "88a2a570f93d2a83aae94700ea7b854426f54c9e",
        "filename": "src/bench/checkqueue.cpp",
        "status": "modified",
        "additions": 50,
        "deletions": 9,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkqueue.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,21 +2,61 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n-#include <util.h>\n-#include <validation.h>\n-#include <checkqueue.h>\n-#include <prevector.h>\n+#include \"bench.h\"\n+#include \"util.h\"\n+#include \"validation.h\"\n+#include \"checkqueue.h\"\n+#include \"prevector.h\"\n #include <vector>\n #include <boost/thread/thread.hpp>\n-#include <random.h>\n+#include \"random.h\"\n \n \n+// This Benchmark tests the CheckQueue with the lightest\n+// weight Checks, so it should make any lock contention\n+// particularly visible\n static const int MIN_CORES = 2;\n static const size_t BATCHES = 101;\n static const size_t BATCH_SIZE = 30;\n static const int PREVECTOR_SIZE = 28;\n-static const unsigned int QUEUE_BATCH_SIZE = 128;\n+static const int QUEUE_BATCH_SIZE = 128;\n+static void CCheckQueueSpeed(benchmark::State& state)\n+{\n+    struct FakeJobNoWork {\n+        bool operator()()\n+        {\n+            return true;\n+        }\n+        void swap(FakeJobNoWork& x){};\n+    };\n+    CCheckQueue<FakeJobNoWork> queue {QUEUE_BATCH_SIZE};\n+    boost::thread_group tg;\n+    for (auto x = 0; x < std::max(MIN_CORES, GetNumCores()); ++x) {\n+       tg.create_thread([&]{queue.Thread();});\n+    }\n+    while (state.KeepRunning()) {\n+        CCheckQueueControl<FakeJobNoWork> control(&queue);\n+\n+        // We call Add a number of times to simulate the behavior of adding\n+        // a block of transactions at once.\n+\n+        std::vector<std::vector<FakeJobNoWork>> vBatches(BATCHES);\n+        for (auto& vChecks : vBatches) {\n+            vChecks.resize(BATCH_SIZE);\n+        }\n+        for (auto& vChecks : vBatches) {\n+            // We can't make vChecks in the inner loop because we want to measure\n+            // the cost of getting the memory to each thread and we might get the same\n+            // memory\n+            control.Add(vChecks);\n+        }\n+        // control waits for completion by RAII, but\n+        // it is done explicitly here for clarity\n+        control.Wait();\n+    }\n+    tg.interrupt_all();\n+    tg.join_all();\n+}\n \n // This Benchmark tests the CheckQueue with a slightly realistic workload,\n // where checks all contain a prevector that is indirect 50% of the time\n@@ -27,7 +67,7 @@ static void CCheckQueueSpeedPrevectorJob(benchmark::State& state)\n         prevector<PREVECTOR_SIZE, uint8_t> p;\n         PrevectorJob(){\n         }\n-        explicit PrevectorJob(FastRandomContext& insecure_rand){\n+        PrevectorJob(FastRandomContext& insecure_rand){\n             p.resize(insecure_rand.randrange(PREVECTOR_SIZE*2));\n         }\n         bool operator()()\n@@ -59,4 +99,5 @@ static void CCheckQueueSpeedPrevectorJob(benchmark::State& state)\n     tg.interrupt_all();\n     tg.join_all();\n }\n-BENCHMARK(CCheckQueueSpeedPrevectorJob, 1400);\n+BENCHMARK(CCheckQueueSpeed);\n+BENCHMARK(CCheckQueueSpeedPrevectorJob);"
      },
      {
        "sha": "f8956508f68216fba8b4534419ffafbac62002ff",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n-#include <wallet/wallet.h>\n+#include \"bench.h\"\n+#include \"wallet/wallet.h\"\n \n #include <set>\n \n@@ -56,4 +56,4 @@ static void CoinSelection(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(CoinSelection, 650);\n+BENCHMARK(CoinSelection);"
      },
      {
        "sha": "14938d4f252191ef8b726c310f4019d66f04abaf",
        "filename": "src/bench/data/block413567.raw",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/data/block413567.raw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/data/block413567.raw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/data/block413567.raw?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "43a1422795434fd763629d17d98eb1ed88f9d808",
        "filename": "src/bench/lockedpool.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/lockedpool.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n+#include \"bench.h\"\n \n-#include <support/lockedpool.h>\n+#include \"support/lockedpool.h\"\n \n #include <iostream>\n #include <vector>\n@@ -21,14 +21,14 @@ static void BenchLockedPool(benchmark::State& state)\n \n     std::vector<void*> addr;\n     for (int x=0; x<ASIZE; ++x)\n-        addr.push_back(nullptr);\n+        addr.push_back(0);\n     uint32_t s = 0x12345678;\n     while (state.KeepRunning()) {\n         for (int x=0; x<BITER; ++x) {\n             int idx = s & (addr.size()-1);\n             if (s & 0x80000000) {\n                 b.free(addr[idx]);\n-                addr[idx] = nullptr;\n+                addr[idx] = 0;\n             } else if(!addr[idx]) {\n                 addr[idx] = b.alloc((s >> 16) & (MSIZE-1));\n             }\n@@ -43,4 +43,5 @@ static void BenchLockedPool(benchmark::State& state)\n     addr.clear();\n }\n \n-BENCHMARK(BenchLockedPool, 530);\n+BENCHMARK(BenchLockedPool);\n+"
      },
      {
        "sha": "073bbde01659b08447da9eed8b5bb50017ac3e30",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n-#include <policy/policy.h>\n-#include <txmempool.h>\n+#include \"bench.h\"\n+#include \"policy/policy.h\"\n+#include \"txmempool.h\"\n \n #include <list>\n #include <vector>\n@@ -111,4 +111,4 @@ static void MempoolEviction(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(MempoolEviction, 41000);\n+BENCHMARK(MempoolEviction);"
      },
      {
        "sha": "a549ec29eaafdf97eac290251c3f7f8d33519a6f",
        "filename": "src/bench/perf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/perf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/perf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/perf.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/perf.h>\n+#include \"perf.h\"\n \n #if defined(__i386__) || defined(__x86_64__)\n "
      },
      {
        "sha": "55af3de4fe756ae007b000d247eb4558ae5352f9",
        "filename": "src/bench/prevector_destructor.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/prevector_destructor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/prevector_destructor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/prevector_destructor.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n-#include <prevector.h>\n+#include \"bench.h\"\n+#include \"prevector.h\"\n \n static void PrevectorDestructor(benchmark::State& state)\n {\n@@ -32,5 +32,5 @@ static void PrevectorClear(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(PrevectorDestructor, 5700);\n-BENCHMARK(PrevectorClear, 5600);\n+BENCHMARK(PrevectorDestructor);\n+BENCHMARK(PrevectorClear);"
      },
      {
        "sha": "73c02cf7189eb1b0514b1bcf8e4cdd61a09e3bd5",
        "filename": "src/bench/rollingbloom.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/rollingbloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/rollingbloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rollingbloom.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -4,23 +4,34 @@\n \n #include <iostream>\n \n-#include <bench/bench.h>\n-#include <bloom.h>\n+#include \"bench.h\"\n+#include \"bloom.h\"\n+#include \"utiltime.h\"\n \n static void RollingBloom(benchmark::State& state)\n {\n     CRollingBloomFilter filter(120000, 0.000001);\n     std::vector<unsigned char> data(32);\n     uint32_t count = 0;\n+    uint32_t nEntriesPerGeneration = (120000 + 1) / 2;\n+    uint32_t countnow = 0;\n     uint64_t match = 0;\n     while (state.KeepRunning()) {\n         count++;\n         data[0] = count;\n         data[1] = count >> 8;\n         data[2] = count >> 16;\n         data[3] = count >> 24;\n-        filter.insert(data);\n-\n+        if (countnow == nEntriesPerGeneration) {\n+            int64_t b = GetTimeMicros();\n+            filter.insert(data);\n+            int64_t e = GetTimeMicros();\n+            std::cout << \"RollingBloom-refresh,1,\" << (e-b)*0.000001 << \",\" << (e-b)*0.000001 << \",\" << (e-b)*0.000001 << \"\\n\";\n+            countnow = 0;\n+        } else {\n+            filter.insert(data);\n+        }\n+        countnow++;\n         data[0] = count >> 24;\n         data[1] = count >> 16;\n         data[2] = count >> 8;\n@@ -29,4 +40,4 @@ static void RollingBloom(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(RollingBloom, 1500 * 1000);\n+BENCHMARK(RollingBloom);"
      },
      {
        "sha": "ef7381c1201db0d37438c7de10ca1d17e221333b",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,14 +2,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n-#include <key.h>\n+#include \"bench.h\"\n+#include \"key.h\"\n #if defined(HAVE_CONSENSUS_LIB)\n-#include <script/bitcoinconsensus.h>\n+#include \"script/bitcoinconsensus.h\"\n #endif\n-#include <script/script.h>\n-#include <script/sign.h>\n-#include <streams.h>\n+#include \"script/script.h\"\n+#include \"script/sign.h\"\n+#include \"streams.h\"\n \n #include <array>\n \n@@ -105,4 +105,4 @@ static void VerifyScriptBench(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(VerifyScriptBench, 6300);\n+BENCHMARK(VerifyScriptBench);"
      },
      {
        "sha": "bb45562f57abfeb2e5e3060b33f5917f56c247ce",
        "filename": "src/bitcoin-cli-res.rc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoin-cli-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoin-cli-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli-res.rc?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -16,14 +16,14 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"bitcoin-cli (JSON-RPC client for \" PACKAGE_NAME \")\"\n+            VALUE \"CompanyName\",        \"Blockcash\"\n+            VALUE \"FileDescription\",    \"blockcash-cli (JSON-RPC client for \" PACKAGE_NAME \")\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"bitcoin-cli\"\n+            VALUE \"InternalName\",       \"blockcash-cli\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"bitcoin-cli.exe\"\n-            VALUE \"ProductName\",        \"bitcoin-cli\"\n+            VALUE \"OriginalFilename\",   \"blockcash-cli.exe\"\n+            VALUE \"ProductName\",        \"blockcash-cli\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "808c236a237d261e330c5ca529dee6b3e64f9d9c",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 133,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -4,22 +4,22 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <chainparamsbase.h>\n-#include <clientversion.h>\n-#include <fs.h>\n-#include <rpc/client.h>\n-#include <rpc/protocol.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include \"chainparamsbase.h\"\n+#include \"clientversion.h\"\n+#include \"fs.h\"\n+#include \"rpc/client.h\"\n+#include \"rpc/protocol.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n \n #include <stdio.h>\n \n #include <event2/buffer.h>\n #include <event2/keyvalq_struct.h>\n-#include <support/events.h>\n+#include \"support/events.h\"\n \n #include <univalue.h>\n \n@@ -37,7 +37,6 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n-    strUsage += HelpMessageOpt(\"-getinfo\", _(\"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\"));\n     AppendParamsHelpMessages(strUsage);\n     strUsage += HelpMessageOpt(\"-named\", strprintf(_(\"Pass named instead of positional arguments (default: %s)\"), DEFAULT_NAMED));\n     strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), DEFAULT_RPCCONNECT));\n@@ -46,8 +45,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n-    strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n-    strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n+    strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases)\"));\n     strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n \n     return strUsage;\n@@ -86,10 +84,10 @@ static int AppInitRPC(int argc, char* argv[])\n         std::string strUsage = strprintf(_(\"%s RPC client version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\";\n         if (!gArgs.IsArgSet(\"-version\")) {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoin-cli [options] <command> [params]  \" + strprintf(_(\"Send command to %s\"), _(PACKAGE_NAME)) + \"\\n\" +\n-                  \"  bitcoin-cli [options] -named <command> [name=value] ... \" + strprintf(_(\"Send command to %s (with named arguments)\"), _(PACKAGE_NAME)) + \"\\n\" +\n-                  \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n-                  \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n+                  \"  blockcash-cli [options] <command> [params]  \" + strprintf(_(\"Send command to %s\"), _(PACKAGE_NAME)) + \"\\n\" +\n+                  \"  blockcash-cli [options] -named <command> [name=value] ... \" + strprintf(_(\"Send command to %s (with named arguments)\"), _(PACKAGE_NAME)) + \"\\n\" +\n+                  \"  blockcash-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n+                  \"  blockcash-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n             strUsage += \"\\n\" + HelpMessageCli();\n         }\n@@ -192,99 +190,7 @@ static void http_error_cb(enum evhttp_request_error err, void *ctx)\n }\n #endif\n \n-/** Class that handles the conversion from a command-line to a JSON-RPC request,\n- * as well as converting back to a JSON object that can be shown as result.\n- */\n-class BaseRequestHandler\n-{\n-public:\n-    virtual UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) = 0;\n-    virtual UniValue ProcessReply(const UniValue &batch_in) = 0;\n-};\n-\n-/** Process getinfo requests */\n-class GetinfoRequestHandler: public BaseRequestHandler\n-{\n-public:\n-    const int ID_NETWORKINFO = 0;\n-    const int ID_BLOCKCHAININFO = 1;\n-    const int ID_WALLETINFO = 2;\n-\n-    /** Create a simulated `getinfo` request. */\n-    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n-    {\n-        if (!args.empty()) {\n-            throw std::runtime_error(\"-getinfo takes no arguments\");\n-        }\n-        UniValue result(UniValue::VARR);\n-        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n-        result.push_back(JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO));\n-        result.push_back(JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO));\n-        return result;\n-    }\n-\n-    /** Collect values from the batch and form a simulated `getinfo` reply. */\n-    UniValue ProcessReply(const UniValue &batch_in) override\n-    {\n-        UniValue result(UniValue::VOBJ);\n-        std::vector<UniValue> batch = JSONRPCProcessBatchReply(batch_in, 3);\n-        // Errors in getnetworkinfo() and getblockchaininfo() are fatal, pass them on\n-        // getwalletinfo() is allowed to fail in case there is no wallet.\n-        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) {\n-            return batch[ID_NETWORKINFO];\n-        }\n-        if (!batch[ID_BLOCKCHAININFO][\"error\"].isNull()) {\n-            return batch[ID_BLOCKCHAININFO];\n-        }\n-        result.pushKV(\"version\", batch[ID_NETWORKINFO][\"result\"][\"version\"]);\n-        result.pushKV(\"protocolversion\", batch[ID_NETWORKINFO][\"result\"][\"protocolversion\"]);\n-        if (!batch[ID_WALLETINFO].isNull()) {\n-            result.pushKV(\"walletversion\", batch[ID_WALLETINFO][\"result\"][\"walletversion\"]);\n-            result.pushKV(\"balance\", batch[ID_WALLETINFO][\"result\"][\"balance\"]);\n-        }\n-        result.pushKV(\"blocks\", batch[ID_BLOCKCHAININFO][\"result\"][\"blocks\"]);\n-        result.pushKV(\"timeoffset\", batch[ID_NETWORKINFO][\"result\"][\"timeoffset\"]);\n-        result.pushKV(\"connections\", batch[ID_NETWORKINFO][\"result\"][\"connections\"]);\n-        result.pushKV(\"proxy\", batch[ID_NETWORKINFO][\"result\"][\"networks\"][0][\"proxy\"]);\n-        result.pushKV(\"difficulty\", batch[ID_BLOCKCHAININFO][\"result\"][\"difficulty\"]);\n-        result.pushKV(\"testnet\", UniValue(batch[ID_BLOCKCHAININFO][\"result\"][\"chain\"].get_str() == \"test\"));\n-        if (!batch[ID_WALLETINFO].isNull()) {\n-            result.pushKV(\"walletversion\", batch[ID_WALLETINFO][\"result\"][\"walletversion\"]);\n-            result.pushKV(\"balance\", batch[ID_WALLETINFO][\"result\"][\"balance\"]);\n-            result.pushKV(\"keypoololdest\", batch[ID_WALLETINFO][\"result\"][\"keypoololdest\"]);\n-            result.pushKV(\"keypoolsize\", batch[ID_WALLETINFO][\"result\"][\"keypoolsize\"]);\n-            if (!batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"].isNull()) {\n-                result.pushKV(\"unlocked_until\", batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"]);\n-            }\n-            result.pushKV(\"paytxfee\", batch[ID_WALLETINFO][\"result\"][\"paytxfee\"]);\n-        }\n-        result.pushKV(\"relayfee\", batch[ID_NETWORKINFO][\"result\"][\"relayfee\"]);\n-        result.pushKV(\"warnings\", batch[ID_NETWORKINFO][\"result\"][\"warnings\"]);\n-        return JSONRPCReplyObj(result, NullUniValue, 1);\n-    }\n-};\n-\n-/** Process default single requests */\n-class DefaultRequestHandler: public BaseRequestHandler {\n-public:\n-    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n-    {\n-        UniValue params;\n-        if(gArgs.GetBoolArg(\"-named\", DEFAULT_NAMED)) {\n-            params = RPCConvertNamedValues(method, args);\n-        } else {\n-            params = RPCConvertValues(method, args);\n-        }\n-        return JSONRPCRequestObj(method, params, 1);\n-    }\n-\n-    UniValue ProcessReply(const UniValue &reply) override\n-    {\n-        return reply.get_obj();\n-    }\n-};\n-\n-static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, const std::vector<std::string>& args)\n+UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n {\n     std::string host;\n     // In preference order, we choose the following for the port:\n@@ -316,7 +222,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n         // Try fall back to cookie-based authentication if no password is provided\n         if (!GetAuthCookie(&strRPCUserColonPass)) {\n             throw std::runtime_error(strprintf(\n-                _(\"Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (%s)\"),\n+                _(\"Could not locate RPC credentials. No authentication cookie could be found, and no rpcpassword is set in the configuration file (%s)\"),\n                     GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string().c_str()));\n \n         }\n@@ -331,7 +237,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n     evhttp_add_header(output_headers, \"Authorization\", (std::string(\"Basic \") + EncodeBase64(strRPCUserColonPass)).c_str());\n \n     // Attach request data\n-    std::string strRequest = rh->PrepareRequest(strMethod, args).write() + \"\\n\";\n+    std::string strRequest = JSONRPCRequestObj(strMethod, params, 1).write() + \"\\n\";\n     struct evbuffer* output_buffer = evhttp_request_get_output_buffer(req.get());\n     assert(output_buffer);\n     evbuffer_add(output_buffer, strRequest.data(), strRequest.size());\n@@ -370,7 +276,7 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n     UniValue valReply(UniValue::VSTR);\n     if (!valReply.read(response.body))\n         throw std::runtime_error(\"couldn't parse reply from server\");\n-    const UniValue reply = rh->ProcessReply(valReply);\n+    const UniValue& reply = valReply.get_obj();\n     if (reply.empty())\n         throw std::runtime_error(\"expected reply to have result, error and id properties\");\n \n@@ -387,40 +293,30 @@ int CommandLineRPC(int argc, char *argv[])\n             argc--;\n             argv++;\n         }\n-        std::string rpcPass;\n-        if (gArgs.GetBoolArg(\"-stdinrpcpass\", false)) {\n-            if (!std::getline(std::cin, rpcPass)) {\n-                throw std::runtime_error(\"-stdinrpcpass specified but failed to read from standard input\");\n-            }\n-            gArgs.ForceSetArg(\"-rpcpassword\", rpcPass);\n-        }\n         std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);\n         if (gArgs.GetBoolArg(\"-stdin\", false)) {\n             // Read one arg per line from stdin and append\n             std::string line;\n-            while (std::getline(std::cin, line)) {\n+            while (std::getline(std::cin,line))\n                 args.push_back(line);\n-            }\n         }\n-        std::unique_ptr<BaseRequestHandler> rh;\n-        std::string method;\n-        if (gArgs.GetBoolArg(\"-getinfo\", false)) {\n-            rh.reset(new GetinfoRequestHandler());\n-            method = \"\";\n+        if (args.size() < 1)\n+            throw std::runtime_error(\"too few parameters (need at least command)\");\n+        std::string strMethod = args[0];\n+        args.erase(args.begin()); // Remove trailing method name from arguments vector\n+\n+        UniValue params;\n+        if(gArgs.GetBoolArg(\"-named\", DEFAULT_NAMED)) {\n+            params = RPCConvertNamedValues(strMethod, args);\n         } else {\n-            rh.reset(new DefaultRequestHandler());\n-            if (args.size() < 1) {\n-                throw std::runtime_error(\"too few parameters (need at least command)\");\n-            }\n-            method = args[0];\n-            args.erase(args.begin()); // Remove trailing method name from arguments vector\n+            params = RPCConvertValues(strMethod, args);\n         }\n \n         // Execute and handle connection failures with -rpcwait\n         const bool fWait = gArgs.GetBoolArg(\"-rpcwait\", false);\n         do {\n             try {\n-                const UniValue reply = CallRPC(rh.get(), method, args);\n+                const UniValue reply = CallRPC(strMethod, params);\n \n                 // Parse reply\n                 const UniValue& result = find_value(reply, \"result\");"
      },
      {
        "sha": "a61684f2e9a8c96eaf21ed0f61e620fa0f1c54fe",
        "filename": "src/bitcoin-tx-res.rc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoin-tx-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoin-tx-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx-res.rc?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -16,14 +16,14 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"bitcoin-tx (CLI Bitcoin transaction editor utility)\"\n+            VALUE \"CompanyName\",        \"Blockcash\"\n+            VALUE \"FileDescription\",    \"blockcash-tx (CLI Blockcash transaction editor utility)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"bitcoin-tx\"\n+            VALUE \"InternalName\",       \"blockcash-tx\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"bitcoin-tx.exe\"\n-            VALUE \"ProductName\",        \"bitcoin-tx\"\n+            VALUE \"OriginalFilename\",   \"blockcash-tx.exe\"\n+            VALUE \"ProductName\",        \"blockcash-tx\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "d9338b95dd7c2634d867811db506d5bbe643d3db",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 52,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,24 +3,24 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <base58.h>\n-#include <clientversion.h>\n-#include <coins.h>\n-#include <consensus/consensus.h>\n-#include <core_io.h>\n-#include <keystore.h>\n-#include <policy/policy.h>\n-#include <policy/rbf.h>\n-#include <primitives/transaction.h>\n-#include <script/script.h>\n-#include <script/sign.h>\n+#include \"base58.h\"\n+#include \"clientversion.h\"\n+#include \"coins.h\"\n+#include \"consensus/consensus.h\"\n+#include \"core_io.h\"\n+#include \"keystore.h\"\n+#include \"policy/policy.h\"\n+#include \"policy/rbf.h\"\n+#include \"primitives/transaction.h\"\n+#include \"script/script.h\"\n+#include \"script/sign.h\"\n #include <univalue.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n-#include <utilstrencodings.h>\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"utilstrencodings.h\"\n \n #include <stdio.h>\n \n@@ -54,10 +54,10 @@ static int AppInitRawTx(int argc, char* argv[])\n     if (argc<2 || gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\"))\n     {\n         // First part of help message is specific to this utility\n-        std::string strUsage = strprintf(_(\"%s bitcoin-tx utility version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+        std::string strUsage = strprintf(_(\"%s blockcash-tx utility version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n             _(\"Usage:\") + \"\\n\" +\n-              \"  bitcoin-tx [options] <hex-tx> [commands]  \" + _(\"Update hex-encoded bitcoin transaction\") + \"\\n\" +\n-              \"  bitcoin-tx [options] -create [commands]   \" + _(\"Create hex-encoded bitcoin transaction\") + \"\\n\" +\n+              \"  blockcash-tx [options] <hex-tx> [commands]  \" + _(\"Update hex-encoded blockcash transaction\") + \"\\n\" +\n+              \"  blockcash-tx [options] -create [commands]   \" + _(\"Create hex-encoded blockcash transaction\") + \"\\n\" +\n               \"\\n\";\n \n         fprintf(stdout, \"%s\", strUsage.c_str());\n@@ -271,11 +271,11 @@ static void MutateTxAddOutAddr(CMutableTransaction& tx, const std::string& strIn\n \n     // extract and validate ADDRESS\n     std::string strAddr = vStrInputParts[1];\n-    CTxDestination destination = DecodeDestination(strAddr);\n-    if (!IsValidDestination(destination)) {\n+    CBitcoinAddress addr(strAddr);\n+    if (!addr.IsValid())\n         throw std::runtime_error(\"invalid TX output address\");\n-    }\n-    CScript scriptPubKey = GetScriptForDestination(destination);\n+    // build standard output script via GetScriptForDestination()\n+    CScript scriptPubKey = GetScriptForDestination(addr.Get());\n \n     // construct TxOut, append to transaction output list\n     CTxOut txout(value, scriptPubKey);\n@@ -310,15 +310,14 @@ static void MutateTxAddOutPubKey(CMutableTransaction& tx, const std::string& str\n     }\n \n     if (bSegWit) {\n-        if (!pubkey.IsCompressed()) {\n-            throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n-        }\n         // Call GetScriptForWitness() to build a P2WSH scriptPubKey\n         scriptPubKey = GetScriptForWitness(scriptPubKey);\n     }\n     if (bScriptHash) {\n-        // Get the ID for the script, and then construct a P2SH destination for it.\n-        scriptPubKey = GetScriptForDestination(CScriptID(scriptPubKey));\n+        // Get the address for the redeem script, then call\n+        // GetScriptForDestination() to construct a P2SH scriptPubKey.\n+        CBitcoinAddress redeemScriptAddr(scriptPubKey);\n+        scriptPubKey = GetScriptForDestination(redeemScriptAddr.Get());\n     }\n \n     // construct TxOut, append to transaction output list\n@@ -378,21 +377,14 @@ static void MutateTxAddOutMultiSig(CMutableTransaction& tx, const std::string& s\n     CScript scriptPubKey = GetScriptForMultisig(required, pubkeys);\n \n     if (bSegWit) {\n-        for (CPubKey& pubkey : pubkeys) {\n-            if (!pubkey.IsCompressed()) {\n-                throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n-            }\n-        }\n         // Call GetScriptForWitness() to build a P2WSH scriptPubKey\n         scriptPubKey = GetScriptForWitness(scriptPubKey);\n     }\n     if (bScriptHash) {\n-        if (scriptPubKey.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n-            throw std::runtime_error(strprintf(\n-                        \"redeemScript exceeds size limit: %d > %d\", scriptPubKey.size(), MAX_SCRIPT_ELEMENT_SIZE));\n-        }\n-        // Get the ID for the script, and then construct a P2SH destination for it.\n-        scriptPubKey = GetScriptForDestination(CScriptID(scriptPubKey));\n+        // Get the address for the redeem script, then call\n+        // GetScriptForDestination() to construct a P2SH scriptPubKey.\n+        CBitcoinAddress addr(scriptPubKey);\n+        scriptPubKey = GetScriptForDestination(addr.Get());\n     }\n \n     // construct TxOut, append to transaction output list\n@@ -451,20 +443,12 @@ static void MutateTxAddOutScript(CMutableTransaction& tx, const std::string& str\n         bScriptHash = (flags.find(\"S\") != std::string::npos);\n     }\n \n-    if (scriptPubKey.size() > MAX_SCRIPT_SIZE) {\n-        throw std::runtime_error(strprintf(\n-                    \"script exceeds size limit: %d > %d\", scriptPubKey.size(), MAX_SCRIPT_SIZE));\n-    }\n-\n     if (bSegWit) {\n-        scriptPubKey = GetScriptForWitness(scriptPubKey);\n+      scriptPubKey = GetScriptForWitness(scriptPubKey);\n     }\n     if (bScriptHash) {\n-        if (scriptPubKey.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n-            throw std::runtime_error(strprintf(\n-                        \"redeemScript exceeds size limit: %d > %d\", scriptPubKey.size(), MAX_SCRIPT_ELEMENT_SIZE));\n-        }\n-        scriptPubKey = GetScriptForDestination(CScriptID(scriptPubKey));\n+      CBitcoinAddress addr(scriptPubKey);\n+      scriptPubKey = GetScriptForDestination(addr.Get());\n     }\n \n     // construct TxOut, append to transaction output list\n@@ -703,18 +687,18 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n     else if (command == \"outaddr\")\n         MutateTxAddOutAddr(tx, commandVal);\n     else if (command == \"outpubkey\") {\n-        ecc.reset(new Secp256k1Init());\n+        if (!ecc) { ecc.reset(new Secp256k1Init()); }\n         MutateTxAddOutPubKey(tx, commandVal);\n     } else if (command == \"outmultisig\") {\n-        ecc.reset(new Secp256k1Init());\n+        if (!ecc) { ecc.reset(new Secp256k1Init()); }\n         MutateTxAddOutMultiSig(tx, commandVal);\n     } else if (command == \"outscript\")\n         MutateTxAddOutScript(tx, commandVal);\n     else if (command == \"outdata\")\n         MutateTxAddOutData(tx, commandVal);\n \n     else if (command == \"sign\") {\n-        ecc.reset(new Secp256k1Init());\n+        if (!ecc) { ecc.reset(new Secp256k1Init()); }\n         MutateTxSign(tx, commandVal);\n     }\n "
      },
      {
        "sha": "dcb65f64d90c841fc08e3eadbb03d8b0ac9bb283",
        "filename": "src/bitcoind-res.rc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoind-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoind-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind-res.rc?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -16,14 +16,14 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"bitcoind (Bitcoin node with a JSON-RPC server)\"\n+            VALUE \"CompanyName\",        \"Blockcash\"\n+            VALUE \"FileDescription\",    \"blockcashd (Blockcash node with a JSON-RPC server)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"bitcoind\"\n+            VALUE \"InternalName\",       \"blockcashd\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"bitcoind.exe\"\n-            VALUE \"ProductName\",        \"bitcoind\"\n+            VALUE \"OriginalFilename\",   \"blockcashd.exe\"\n+            VALUE \"ProductName\",        \"blockcashd\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "f5c96a4bf1c5e7dbb255a3ba528f3d8d6cc4aa0b",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -4,21 +4,21 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <chainparams.h>\n-#include <clientversion.h>\n-#include <compat.h>\n-#include <fs.h>\n-#include <rpc/server.h>\n-#include <init.h>\n-#include <noui.h>\n-#include <scheduler.h>\n-#include <util.h>\n-#include <httpserver.h>\n-#include <httprpc.h>\n-#include <utilstrencodings.h>\n+#include \"chainparams.h\"\n+#include \"clientversion.h\"\n+#include \"compat.h\"\n+#include \"fs.h\"\n+#include \"rpc/server.h\"\n+#include \"init.h\"\n+#include \"noui.h\"\n+#include \"scheduler.h\"\n+#include \"util.h\"\n+#include \"httpserver.h\"\n+#include \"httprpc.h\"\n+#include \"utilstrencodings.h\"\n \n #include <boost/thread.hpp>\n \n@@ -85,7 +85,7 @@ bool AppInit(int argc, char* argv[])\n         else\n         {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoind [options]                     \" + strprintf(_(\"Start %s Daemon\"), _(PACKAGE_NAME)) + \"\\n\";\n+                  \"  blockcashd [options]                     \" + strprintf(_(\"Start %s Daemon\"), _(PACKAGE_NAME)) + \"\\n\";\n \n             strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n         }\n@@ -119,8 +119,8 @@ bool AppInit(int argc, char* argv[])\n         // Error out when loose non-argument tokens are encountered on command line\n         for (int i = 1; i < argc; i++) {\n             if (!IsSwitchChar(argv[i][0])) {\n-                fprintf(stderr, \"Error: Command line contains unexpected token '%s', see bitcoind -h for a list of options.\\n\", argv[i]);\n-                return false;\n+                fprintf(stderr, \"Error: Command line contains unexpected token '%s', see blockcashd -h for a list of options.\\n\", argv[i]);\n+                exit(EXIT_FAILURE);\n             }\n         }\n \n@@ -132,22 +132,22 @@ bool AppInit(int argc, char* argv[])\n         if (!AppInitBasicSetup())\n         {\n             // InitError will have been called with detailed error, which ends up on console\n-            return false;\n+            exit(EXIT_FAILURE);\n         }\n         if (!AppInitParameterInteraction())\n         {\n             // InitError will have been called with detailed error, which ends up on console\n-            return false;\n+            exit(EXIT_FAILURE);\n         }\n         if (!AppInitSanityChecks())\n         {\n             // InitError will have been called with detailed error, which ends up on console\n-            return false;\n+            exit(EXIT_FAILURE);\n         }\n         if (gArgs.GetBoolArg(\"-daemon\", false))\n         {\n #if HAVE_DECL_DAEMON\n-            fprintf(stdout, \"Bitcoin server starting\\n\");\n+            fprintf(stdout, \"Blockcash server starting\\n\");\n \n             // Daemonize\n             if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n@@ -163,7 +163,7 @@ bool AppInit(int argc, char* argv[])\n         if (!AppInitLockDataDirectory())\n         {\n             // If locking the data directory failed, exit immediately\n-            return false;\n+            exit(EXIT_FAILURE);\n         }\n         fRet = AppInitMain(threadGroup, scheduler);\n     }"
      },
      {
        "sha": "6f27b7b9dc5dff082ab3c773a99786789ae315de",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,16 +2,16 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <blockencodings.h>\n-#include <consensus/consensus.h>\n-#include <consensus/validation.h>\n-#include <chainparams.h>\n-#include <hash.h>\n-#include <random.h>\n-#include <streams.h>\n-#include <txmempool.h>\n-#include <validation.h>\n-#include <util.h>\n+#include \"blockencodings.h\"\n+#include \"consensus/consensus.h\"\n+#include \"consensus/validation.h\"\n+#include \"chainparams.h\"\n+#include \"hash.h\"\n+#include \"random.h\"\n+#include \"streams.h\"\n+#include \"txmempool.h\"\n+#include \"validation.h\"\n+#include \"util.h\"\n \n #include <unordered_map>\n "
      },
      {
        "sha": "5a1d80d421210907ce3bedb3bcd32f5a738d3467",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_BLOCK_ENCODINGS_H\n #define BITCOIN_BLOCK_ENCODINGS_H\n \n-#include <primitives/block.h>\n+#include \"primitives/block.h\"\n \n #include <memory>\n \n@@ -16,7 +16,7 @@ struct TransactionCompressor {\n private:\n     CTransactionRef& tx;\n public:\n-    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+    TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n \n     ADD_SERIALIZE_METHODS;\n \n@@ -75,7 +75,7 @@ class BlockTransactions {\n     std::vector<CTransactionRef> txn;\n \n     BlockTransactions() {}\n-    explicit BlockTransactions(const BlockTransactionsRequest& req) :\n+    BlockTransactions(const BlockTransactionsRequest& req) :\n         blockhash(req.blockhash), txn(req.indexes.size()) {}\n \n     ADD_SERIALIZE_METHODS;\n@@ -198,7 +198,7 @@ class PartiallyDownloadedBlock {\n     CTxMemPool* pool;\n public:\n     CBlockHeader header;\n-    explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\n+    PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\n \n     // extra_txn is a list of extra transactions to look at, in <witness hash, reference> form\n     ReadStatus InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<std::pair<uint256, CTransactionRef>>& extra_txn);"
      },
      {
        "sha": "fa884f0bf32ef5d34a85f5712b6a44aa28d007aa",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,14 +2,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bloom.h>\n-\n-#include <primitives/transaction.h>\n-#include <hash.h>\n-#include <script/script.h>\n-#include <script/standard.h>\n-#include <random.h>\n-#include <streams.h>\n+#include \"bloom.h\"\n+\n+#include \"primitives/transaction.h\"\n+#include \"hash.h\"\n+#include \"script/script.h\"\n+#include \"script/standard.h\"\n+#include \"random.h\"\n+#include \"streams.h\"\n \n #include <math.h>\n #include <stdlib.h>"
      },
      {
        "sha": "7ca96822396b909ec076e7f2f562b7d0f1766133",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_BLOOM_H\n #define BITCOIN_BLOOM_H\n \n-#include <serialize.h>\n+#include \"serialize.h\"\n \n #include <vector>\n "
      },
      {
        "sha": "47acde882e875f76078270bd3b4b5d97f3c6035c",
        "filename": "src/chain.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,7 +3,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <chain.h>\n+#include \"chain.h\"\n \n /**\n  * CChain implementation\n@@ -80,13 +80,12 @@ int static inline GetSkipHeight(int height) {\n     return (height & 1) ? InvertLowestOne(InvertLowestOne(height - 1)) + 1 : InvertLowestOne(height);\n }\n \n-const CBlockIndex* CBlockIndex::GetAncestor(int height) const\n+CBlockIndex* CBlockIndex::GetAncestor(int height)\n {\n-    if (height > nHeight || height < 0) {\n+    if (height > nHeight || height < 0)\n         return nullptr;\n-    }\n \n-    const CBlockIndex* pindexWalk = this;\n+    CBlockIndex* pindexWalk = this;\n     int heightWalk = nHeight;\n     while (heightWalk > height) {\n         int heightSkip = GetSkipHeight(heightWalk);\n@@ -107,9 +106,9 @@ const CBlockIndex* CBlockIndex::GetAncestor(int height) const\n     return pindexWalk;\n }\n \n-CBlockIndex* CBlockIndex::GetAncestor(int height)\n+const CBlockIndex* CBlockIndex::GetAncestor(int height) const\n {\n-    return const_cast<CBlockIndex*>(static_cast<const CBlockIndex*>(this)->GetAncestor(height));\n+    return const_cast<CBlockIndex*>(this)->GetAncestor(height);\n }\n \n void CBlockIndex::BuildSkip()\n@@ -129,7 +128,7 @@ arith_uint256 GetBlockProof(const CBlockIndex& block)\n     // We need to compute 2**256 / (bnTarget+1), but we can't represent 2**256\n     // as it's too large for an arith_uint256. However, as 2**256 is at least as large\n     // as bnTarget+1, it is equal to ((2**256 - bnTarget - 1) / (bnTarget+1)) + 1,\n-    // or ~bnTarget / (bnTarget+1) + 1.\n+    // or ~bnTarget / (nTarget+1) + 1.\n     return (~bnTarget / (bnTarget + 1)) + 1;\n }\n "
      },
      {
        "sha": "6320f4fd4195fd38e2b5bba8458bed39de53d8c3",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 18,
        "deletions": 13,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,11 +6,11 @@\n #ifndef BITCOIN_CHAIN_H\n #define BITCOIN_CHAIN_H\n \n-#include <arith_uint256.h>\n-#include <primitives/block.h>\n-#include <pow.h>\n-#include <tinyformat.h>\n-#include <uint256.h>\n+#include \"arith_uint256.h\"\n+#include \"primitives/block.h\"\n+#include \"pow.h\"\n+#include \"tinyformat.h\"\n+#include \"uint256.h\"\n \n #include <vector>\n \n@@ -204,19 +204,19 @@ class CBlockIndex\n     unsigned int nChainTx;\n \n     //! Verification status of this block. See enum BlockStatus\n-    uint32_t nStatus;\n+    unsigned int nStatus;\n \n     //! block header\n-    int32_t nVersion;\n+    int nVersion;\n     uint256 hashMerkleRoot;\n-    uint32_t nTime;\n-    uint32_t nBits;\n-    uint32_t nNonce;\n+    unsigned int nTime;\n+    unsigned int nBits;\n+    unsigned int nNonce;\n \n     //! (memory only) Sequential id assigned to distinguish order in which blocks are received.\n     int32_t nSequenceId;\n \n-    //! (memory only) Maximum nTime in the chain up to and including this block.\n+    //! (memory only) Maximum nTime in the chain upto and including this block.\n     unsigned int nTimeMax;\n \n     void SetNull()\n@@ -247,7 +247,7 @@ class CBlockIndex\n         SetNull();\n     }\n \n-    explicit CBlockIndex(const CBlockHeader& block)\n+    CBlockIndex(const CBlockHeader& block)\n     {\n         SetNull();\n \n@@ -294,6 +294,11 @@ class CBlockIndex\n         return *phashBlock;\n     }\n \n+    uint256 GetBlockPoWHash() const\n+    {\n+        return GetBlockHeader().GetPoWHash();\n+    }\n+\n     int64_t GetBlockTime() const\n     {\n         return (int64_t)nTime;\n@@ -304,7 +309,7 @@ class CBlockIndex\n         return (int64_t)nTimeMax;\n     }\n \n-    static constexpr int nMedianTimeSpan = 11;\n+    enum { nMedianTimeSpan=11 };\n \n     int64_t GetMedianTimePast() const\n     {"
      },
      {
        "sha": "867dc743fcd49e4a9faeac583ad140b33bf08828",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,10 +6,10 @@\n #ifndef BITCOIN_CHAINPARAMS_H\n #define BITCOIN_CHAINPARAMS_H\n \n-#include <chainparamsbase.h>\n-#include <consensus/params.h>\n-#include <primitives/block.h>\n-#include <protocol.h>\n+#include \"chainparamsbase.h\"\n+#include \"consensus/params.h\"\n+#include \"primitives/block.h\"\n+#include \"protocol.h\"\n \n #include <memory>\n #include <vector>\n@@ -50,6 +50,7 @@ class CChainParams\n     enum Base58Type {\n         PUBKEY_ADDRESS,\n         SCRIPT_ADDRESS,\n+        SCRIPT_ADDRESS2,\n         SECRET_KEY,\n         EXT_PUBLIC_KEY,\n         EXT_SECRET_KEY,\n@@ -73,7 +74,6 @@ class CChainParams\n     std::string NetworkIDString() const { return strNetworkID; }\n     const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n-    const std::string& Bech32HRP() const { return bech32_hrp; }\n     const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n     const ChainTxData& TxData() const { return chainTxData; }\n@@ -87,7 +87,6 @@ class CChainParams\n     uint64_t nPruneAfterHeight;\n     std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n-    std::string bech32_hrp;\n     std::string strNetworkID;\n     CBlock genesis;\n     std::vector<SeedSpec6> vFixedSeeds;"
      },
      {
        "sha": "cde7589db02c54b4b70f7814d20d055d3d777336",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,10 +3,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <chainparamsbase.h>\n+#include \"chainparamsbase.h\"\n \n-#include <tinyformat.h>\n-#include <util.h>\n+#include \"tinyformat.h\"\n+#include \"util.h\"\n \n #include <assert.h>\n \n@@ -32,7 +32,7 @@ class CBaseMainParams : public CBaseChainParams\n public:\n     CBaseMainParams()\n     {\n-        nRPCPort = 8332;\n+        nRPCPort = 29252;\n     }\n };\n \n@@ -44,8 +44,8 @@ class CBaseTestNetParams : public CBaseChainParams\n public:\n     CBaseTestNetParams()\n     {\n-        nRPCPort = 18332;\n-        strDataDir = \"testnet3\";\n+        nRPCPort = 39252;\n+        strDataDir = \"testnet4\";\n     }\n };\n \n@@ -57,7 +57,7 @@ class CBaseRegTestParams : public CBaseChainParams\n public:\n     CBaseRegTestParams()\n     {\n-        nRPCPort = 18443;\n+        nRPCPort = 39252;\n         strDataDir = \"regtest\";\n     }\n };"
      },
      {
        "sha": "5afe3e66b625a0e4a9888ad1a8d6eb3f84bb011a",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,12 +2,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <checkpoints.h>\n+#include \"checkpoints.h\"\n \n-#include <chain.h>\n-#include <chainparams.h>\n-#include <reverse_iterator.h>\n-#include <validation.h>\n+#include \"chain.h\"\n+#include \"chainparams.h\"\n+#include \"reverse_iterator.h\"\n+#include \"validation.h\"\n+#include \"uint256.h\"\n \n #include <stdint.h>\n "
      },
      {
        "sha": "7449d1063babdf2cafd3c92c567ee28c3495ab0e",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_CHECKPOINTS_H\n #define BITCOIN_CHECKPOINTS_H\n \n-#include <uint256.h>\n+#include \"uint256.h\"\n \n #include <map>\n "
      },
      {
        "sha": "4bc6be45f8f315428dd79e94f72b4210a8367cd0",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_CHECKQUEUE_H\n #define BITCOIN_CHECKQUEUE_H\n \n-#include <sync.h>\n+#include \"sync.h\"\n \n #include <algorithm>\n #include <vector>\n@@ -131,7 +131,7 @@ class CCheckQueue\n     boost::mutex ControlMutex;\n \n     //! Create a new check queue\n-    explicit CCheckQueue(unsigned int nBatchSizeIn) : nIdle(0), nTotal(0), fAllOk(true), nTodo(0), fQuit(false), nBatchSize(nBatchSizeIn) {}\n+    CCheckQueue(unsigned int nBatchSizeIn) : nIdle(0), nTotal(0), fAllOk(true), nTodo(0), fQuit(false), nBatchSize(nBatchSizeIn) {}\n \n     //! Worker thread\n     void Thread()"
      },
      {
        "sha": "b3dbc7af589de8f5284f0d08081a5ead74fb0086",
        "filename": "src/clientversion.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/clientversion.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/clientversion.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,17 +2,18 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <clientversion.h>\n+#include \"clientversion.h\"\n \n-#include <tinyformat.h>\n+#include \"tinyformat.h\"\n \n+#include <string>\n \n /**\n  * Name of client reported in the 'version' message. Report the same name\n- * for both bitcoind and bitcoin-qt, to make it harder for attackers to\n+ * for both bitcoind and bitcoin-core, to make it harder for attackers to\n  * target servers or GUI users specifically.\n  */\n-const std::string CLIENT_NAME(\"Satoshi\");\n+const std::string CLIENT_NAME(\"BlockcashCore\");\n \n /**\n  * Client version number\n@@ -38,7 +39,7 @@ const std::string CLIENT_NAME(\"Satoshi\");\n \n //! First, include build.h if requested\n #ifdef HAVE_BUILD_INFO\n-#include <obj/build.h>\n+#include \"build.h\"\n #endif\n \n //! git will put \"#define GIT_ARCHIVE 1\" on the next line inside archives. $Format:%n#define GIT_ARCHIVE 1$"
      },
      {
        "sha": "3d5392619b1beebb4c4ff812127f5306e2e1d153",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,7 +6,7 @@\n #define BITCOIN_CLIENTVERSION_H\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif //HAVE_CONFIG_H\n \n // Check that required client information is defined"
      },
      {
        "sha": "e30bda930ae6c9e24ea2d121b36ac3157e341745",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 52,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,16 +2,19 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <coins.h>\n+#include \"coins.h\"\n \n-#include <consensus/consensus.h>\n-#include <random.h>\n+#include \"consensus/consensus.h\"\n+#include \"memusage.h\"\n+#include \"random.h\"\n+\n+#include <assert.h>\n \n bool CCoinsView::GetCoin(const COutPoint &outpoint, Coin &coin) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(); }\n std::vector<uint256> CCoinsView::GetHeadBlocks() const { return std::vector<uint256>(); }\n bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n-CCoinsViewCursor *CCoinsView::Cursor() const { return nullptr; }\n+CCoinsViewCursor *CCoinsView::Cursor() const { return 0; }\n \n bool CCoinsView::HaveCoin(const COutPoint &outpoint) const\n {\n@@ -143,58 +146,56 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n }\n \n bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn) {\n-    for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); it = mapCoins.erase(it)) {\n-        // Ignore non-dirty entries (optimization).\n-        if (!(it->second.flags & CCoinsCacheEntry::DIRTY)) {\n-            continue;\n-        }\n-        CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n-        if (itUs == cacheCoins.end()) {\n-            // The parent cache does not have an entry, while the child does\n-            // We can ignore it if it's both FRESH and pruned in the child\n-            if (!(it->second.flags & CCoinsCacheEntry::FRESH && it->second.coin.IsSpent())) {\n-                // Otherwise we will need to create it in the parent\n-                // and move the data up and mark it as dirty\n-                CCoinsCacheEntry& entry = cacheCoins[it->first];\n-                entry.coin = std::move(it->second.coin);\n-                cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n-                entry.flags = CCoinsCacheEntry::DIRTY;\n-                // We can mark it FRESH in the parent if it was FRESH in the child\n-                // Otherwise it might have just been flushed from the parent's cache\n-                // and already exist in the grandparent\n-                if (it->second.flags & CCoinsCacheEntry::FRESH) {\n-                    entry.flags |= CCoinsCacheEntry::FRESH;\n+    for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end();) {\n+        if (it->second.flags & CCoinsCacheEntry::DIRTY) { // Ignore non-dirty entries (optimization).\n+            CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n+            if (itUs == cacheCoins.end()) {\n+                // The parent cache does not have an entry, while the child does\n+                // We can ignore it if it's both FRESH and pruned in the child\n+                if (!(it->second.flags & CCoinsCacheEntry::FRESH && it->second.coin.IsSpent())) {\n+                    // Otherwise we will need to create it in the parent\n+                    // and move the data up and mark it as dirty\n+                    CCoinsCacheEntry& entry = cacheCoins[it->first];\n+                    entry.coin = std::move(it->second.coin);\n+                    cachedCoinsUsage += entry.coin.DynamicMemoryUsage();\n+                    entry.flags = CCoinsCacheEntry::DIRTY;\n+                    // We can mark it FRESH in the parent if it was FRESH in the child\n+                    // Otherwise it might have just been flushed from the parent's cache\n+                    // and already exist in the grandparent\n+                    if (it->second.flags & CCoinsCacheEntry::FRESH)\n+                        entry.flags |= CCoinsCacheEntry::FRESH;\n                 }\n-            }\n-        } else {\n-            // Assert that the child cache entry was not marked FRESH if the\n-            // parent cache entry has unspent outputs. If this ever happens,\n-            // it means the FRESH flag was misapplied and there is a logic\n-            // error in the calling code.\n-            if ((it->second.flags & CCoinsCacheEntry::FRESH) && !itUs->second.coin.IsSpent()) {\n-                throw std::logic_error(\"FRESH flag misapplied to cache entry for base transaction with spendable outputs\");\n-            }\n-\n-            // Found the entry in the parent cache\n-            if ((itUs->second.flags & CCoinsCacheEntry::FRESH) && it->second.coin.IsSpent()) {\n-                // The grandparent does not have an entry, and the child is\n-                // modified and being pruned. This means we can just delete\n-                // it from the parent.\n-                cachedCoinsUsage -= itUs->second.coin.DynamicMemoryUsage();\n-                cacheCoins.erase(itUs);\n             } else {\n-                // A normal modification.\n-                cachedCoinsUsage -= itUs->second.coin.DynamicMemoryUsage();\n-                itUs->second.coin = std::move(it->second.coin);\n-                cachedCoinsUsage += itUs->second.coin.DynamicMemoryUsage();\n-                itUs->second.flags |= CCoinsCacheEntry::DIRTY;\n-                // NOTE: It is possible the child has a FRESH flag here in\n-                // the event the entry we found in the parent is pruned. But\n-                // we must not copy that FRESH flag to the parent as that\n-                // pruned state likely still needs to be communicated to the\n-                // grandparent.\n+                // Assert that the child cache entry was not marked FRESH if the\n+                // parent cache entry has unspent outputs. If this ever happens,\n+                // it means the FRESH flag was misapplied and there is a logic\n+                // error in the calling code.\n+                if ((it->second.flags & CCoinsCacheEntry::FRESH) && !itUs->second.coin.IsSpent())\n+                    throw std::logic_error(\"FRESH flag misapplied to cache entry for base transaction with spendable outputs\");\n+\n+                // Found the entry in the parent cache\n+                if ((itUs->second.flags & CCoinsCacheEntry::FRESH) && it->second.coin.IsSpent()) {\n+                    // The grandparent does not have an entry, and the child is\n+                    // modified and being pruned. This means we can just delete\n+                    // it from the parent.\n+                    cachedCoinsUsage -= itUs->second.coin.DynamicMemoryUsage();\n+                    cacheCoins.erase(itUs);\n+                } else {\n+                    // A normal modification.\n+                    cachedCoinsUsage -= itUs->second.coin.DynamicMemoryUsage();\n+                    itUs->second.coin = std::move(it->second.coin);\n+                    cachedCoinsUsage += itUs->second.coin.DynamicMemoryUsage();\n+                    itUs->second.flags |= CCoinsCacheEntry::DIRTY;\n+                    // NOTE: It is possible the child has a FRESH flag here in\n+                    // the event the entry we found in the parent is pruned. But\n+                    // we must not copy that FRESH flag to the parent as that\n+                    // pruned state likely still needs to be communicated to the\n+                    // grandparent.\n+                }\n             }\n         }\n+        CCoinsMap::iterator itOld = it++;\n+        mapCoins.erase(itOld);\n     }\n     hashBlock = hashBlockIn;\n     return true;"
      },
      {
        "sha": "efb5ce869c3fc13365cc07e436b75c2a7364d3dd",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,13 +6,13 @@\n #ifndef BITCOIN_COINS_H\n #define BITCOIN_COINS_H\n \n-#include <primitives/transaction.h>\n-#include <compressor.h>\n-#include <core_memusage.h>\n-#include <hash.h>\n-#include <memusage.h>\n-#include <serialize.h>\n-#include <uint256.h>\n+#include \"primitives/transaction.h\"\n+#include \"compressor.h\"\n+#include \"core_memusage.h\"\n+#include \"hash.h\"\n+#include \"memusage.h\"\n+#include \"serialize.h\"\n+#include \"uint256.h\"\n \n #include <assert.h>\n #include <stdint.h>\n@@ -214,11 +214,6 @@ class CCoinsViewCache : public CCoinsViewBacked\n public:\n     CCoinsViewCache(CCoinsView *baseIn);\n \n-    /**\n-     * By deleting the copy constructor, we prevent accidentally using it when one intends to create a cache on top of a base cache.\n-     */\n-    CCoinsViewCache(const CCoinsViewCache &) = delete;\n-\n     // Standard CCoinsView methods\n     bool GetCoin(const COutPoint &outpoint, Coin &coin) const override;\n     bool HaveCoin(const COutPoint &outpoint) const override;\n@@ -295,6 +290,11 @@ class CCoinsViewCache : public CCoinsViewBacked\n \n private:\n     CCoinsMap::iterator FetchCoin(const COutPoint &outpoint) const;\n+\n+    /**\n+     * By making the copy constructor private, we prevent accidentally using it when one intends to create a cache on top of a base cache.\n+     */\n+    CCoinsViewCache(const CCoinsViewCache &);\n };\n \n //! Utility function to add all of a transaction's outputs to a cache."
      },
      {
        "sha": "e022659c018ac32c65d18dc605be8826a6dbde6e",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 2,
        "deletions": 12,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -7,7 +7,7 @@\n #define BITCOIN_COMPAT_H\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #ifdef WIN32\n@@ -31,7 +31,6 @@\n #include <mswsock.h>\n #include <windows.h>\n #include <ws2tcpip.h>\n-#include <stdint.h>\n #else\n #include <sys/fcntl.h>\n #include <sys/mman.h>\n@@ -50,7 +49,7 @@\n \n #ifndef WIN32\n typedef unsigned int SOCKET;\n-#include <errno.h>\n+#include \"errno.h\"\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL\n #define WSAEALREADY         EALREADY\n@@ -72,15 +71,6 @@ typedef unsigned int SOCKET;\n #else\n #define MAX_PATH            1024\n #endif\n-#ifdef _MSC_VER\n-#if !defined(ssize_t)\n-#ifdef _WIN64\n-typedef int64_t ssize_t;\n-#else\n-typedef int32_t ssize_t;\n-#endif\n-#endif\n-#endif\n \n #if HAVE_DECL_STRNLEN == 0\n size_t strnlen( const char *start, size_t max_len);"
      },
      {
        "sha": "3c5a5c08379811e4e3de84ad78322dc427cc5f20",
        "filename": "src/compat/byteswap.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/byteswap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/byteswap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/byteswap.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,7 +6,7 @@\n #define BITCOIN_COMPAT_BYTESWAP_H\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include <stdint.h>\n@@ -35,17 +35,17 @@\n #if HAVE_DECL_BSWAP_16 == 0\n inline uint16_t bswap_16(uint16_t x)\n {\n-    return (x >> 8) | (x << 8);\n+    return (x >> 8) | ((x & 0x00ff) << 8);\n }\n-#endif // HAVE_DECL_BSWAP16 == 0\n+#endif // HAVE_DECL_BSWAP16\n \n #if HAVE_DECL_BSWAP_32 == 0\n inline uint32_t bswap_32(uint32_t x)\n {\n     return (((x & 0xff000000U) >> 24) | ((x & 0x00ff0000U) >>  8) |\n             ((x & 0x0000ff00U) <<  8) | ((x & 0x000000ffU) << 24));\n }\n-#endif // HAVE_DECL_BSWAP32 == 0\n+#endif // HAVE_DECL_BSWAP32\n \n #if HAVE_DECL_BSWAP_64 == 0\n inline uint64_t bswap_64(uint64_t x)\n@@ -59,7 +59,7 @@ inline uint64_t bswap_64(uint64_t x)\n           | ((x & 0x000000000000ff00ull) << 40)\n           | ((x & 0x00000000000000ffull) << 56));\n }\n-#endif // HAVE_DECL_BSWAP64 == 0\n+#endif // HAVE_DECL_BSWAP64\n \n #endif // defined(__APPLE__)\n "
      },
      {
        "sha": "79d6b2fdbb297f05fc123e492c0d0f3f684f6329",
        "filename": "src/compat/endian.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/endian.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/endian.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/endian.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,13 +6,13 @@\n #define BITCOIN_COMPAT_ENDIAN_H\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <compat/byteswap.h>\n-\n #include <stdint.h>\n \n+#include \"compat/byteswap.h\"\n+\n #if defined(HAVE_ENDIAN_H)\n #include <endian.h>\n #elif defined(HAVE_SYS_ENDIAN_H)"
      },
      {
        "sha": "3b9c70df7fe81e1cc83c7e92bfefae716a933fd7",
        "filename": "src/compat/glibc_compat.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/glibc_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/glibc_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_compat.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include <cstddef>"
      },
      {
        "sha": "b4d1c90992b767f2f3676936f0478f2ef44a1b98",
        "filename": "src/compat/glibc_sanity.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/glibc_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/glibc_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include <cstddef>"
      },
      {
        "sha": "1ac266c2d1b9a90dcaec1314d46efb1b00be9a1c",
        "filename": "src/compat/strnlen.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/strnlen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/compat/strnlen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/strnlen.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include <cstring>"
      },
      {
        "sha": "f4c12f38d2d1fc7494669adbc3c3191978743db0",
        "filename": "src/compressor.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/compressor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/compressor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,11 +3,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <compressor.h>\n+#include \"compressor.h\"\n \n-#include <hash.h>\n-#include <pubkey.h>\n-#include <script/standard.h>\n+#include \"hash.h\"\n+#include \"pubkey.h\"\n+#include \"script/standard.h\"\n \n bool CScriptCompressor::IsToKeyID(CKeyID &hash) const\n {"
      },
      {
        "sha": "015911484a1966189ca22bd365e45c9ccec39b66",
        "filename": "src/compressor.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/compressor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/compressor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,9 +6,9 @@\n #ifndef BITCOIN_COMPRESSOR_H\n #define BITCOIN_COMPRESSOR_H\n \n-#include <primitives/transaction.h>\n-#include <script/script.h>\n-#include <serialize.h>\n+#include \"primitives/transaction.h\"\n+#include \"script/script.h\"\n+#include \"serialize.h\"\n \n class CKeyID;\n class CPubKey;\n@@ -53,7 +53,7 @@ class CScriptCompressor\n     unsigned int GetSpecialSize(unsigned int nSize) const;\n     bool Decompress(unsigned int nSize, const std::vector<unsigned char> &out);\n public:\n-    explicit CScriptCompressor(CScript &scriptIn) : script(scriptIn) { }\n+    CScriptCompressor(CScript &scriptIn) : script(scriptIn) { }\n \n     template<typename Stream>\n     void Serialize(Stream &s) const {\n@@ -99,7 +99,7 @@ class CTxOutCompressor\n     static uint64_t CompressAmount(uint64_t nAmount);\n     static uint64_t DecompressAmount(uint64_t nAmount);\n \n-    explicit CTxOutCompressor(CTxOut &txoutIn) : txout(txoutIn) { }\n+    CTxOutCompressor(CTxOut &txoutIn) : txout(txoutIn) { }\n \n     ADD_SERIALIZE_METHODS;\n "
      },
      {
        "sha": "ddd4ee9fab489977a5d5f36a89f37ebdec767f9d",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -24,9 +24,12 @@ static const size_t MIN_TRANSACTION_WEIGHT = WITNESS_SCALE_FACTOR * 60; // 60 is\n static const size_t MIN_SERIALIZABLE_TRANSACTION_WEIGHT = WITNESS_SCALE_FACTOR * 10; // 10 is the lower bound for the size of a serialized CTransaction\n \n /** Flags for nSequence and nLockTime locks */\n-/** Interpret sequence numbers as relative lock-time constraints. */\n-static constexpr unsigned int LOCKTIME_VERIFY_SEQUENCE = (1 << 0);\n-/** Use GetMedianTimePast() instead of nTime for end point timestamp. */\n-static constexpr unsigned int LOCKTIME_MEDIAN_TIME_PAST = (1 << 1);\n+enum {\n+    /* Interpret sequence numbers as relative lock-time constraints. */\n+    LOCKTIME_VERIFY_SEQUENCE = (1 << 0),\n+\n+    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n+    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n+};\n \n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "798ce4b5fd8a74a4341a482f8581086b5c3c16a1",
        "filename": "src/consensus/merkle.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <consensus/merkle.h>\n-#include <hash.h>\n-#include <utilstrencodings.h>\n+#include \"merkle.h\"\n+#include \"hash.h\"\n+#include \"utilstrencodings.h\"\n \n /*     WARNING! If you're reading this because you're learning about crypto\n        and/or designing a new system that will use merkle trees, keep in mind"
      },
      {
        "sha": "33764c74606946d02ade4a439879f7da742cd3c5",
        "filename": "src/consensus/merkle.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/merkle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/merkle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -8,9 +8,9 @@\n #include <stdint.h>\n #include <vector>\n \n-#include <primitives/transaction.h>\n-#include <primitives/block.h>\n-#include <uint256.h>\n+#include \"primitives/transaction.h\"\n+#include \"primitives/block.h\"\n+#include \"uint256.h\"\n \n uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated = nullptr);\n std::vector<uint256> ComputeMerkleBranch(const std::vector<uint256>& leaves, uint32_t position);"
      },
      {
        "sha": "6240e82857eb99c6fe2f371a058211b4a77469ff",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 1,
        "deletions": 13,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,8 +6,7 @@\n #ifndef BITCOIN_CONSENSUS_PARAMS_H\n #define BITCOIN_CONSENSUS_PARAMS_H\n \n-#include <uint256.h>\n-#include <limits>\n+#include \"uint256.h\"\n #include <map>\n #include <string>\n \n@@ -32,15 +31,6 @@ struct BIP9Deployment {\n     int64_t nStartTime;\n     /** Timeout/expiry MedianTime for the deployment attempt. */\n     int64_t nTimeout;\n-\n-    /** Constant for nTimeout very far in the future. */\n-    static constexpr int64_t NO_TIMEOUT = std::numeric_limits<int64_t>::max();\n-\n-    /** Special value for nStartTime indicating that the deployment is always active.\n-     *  This is useful for testing, as it means tests don't need to deal with the activation\n-     *  process (which takes at least 3 BIP9 intervals). Only tests that specifically test the\n-     *  behaviour during activation cannot use this. */\n-    static constexpr int64_t ALWAYS_ACTIVE = -1;\n };\n \n /**\n@@ -49,8 +39,6 @@ struct BIP9Deployment {\n struct Params {\n     uint256 hashGenesisBlock;\n     int nSubsidyHalvingInterval;\n-    /** Block height at which BIP16 becomes active */\n-    int BIP16Height;\n     /** Block height and hash at which BIP34 becomes active */\n     int BIP34Height;\n     uint256 BIP34Hash;"
      },
      {
        "sha": "0a71915d1df129362300fdefe6e5b9b1b51e7ca9",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 46,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,18 +2,18 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <consensus/tx_verify.h>\n+#include \"tx_verify.h\"\n \n-#include <consensus/consensus.h>\n-#include <primitives/transaction.h>\n-#include <script/interpreter.h>\n-#include <consensus/validation.h>\n+#include \"consensus.h\"\n+#include \"primitives/transaction.h\"\n+#include \"script/interpreter.h\"\n+#include \"validation.h\"\n \n // TODO remove the following dependencies\n-#include <chain.h>\n-#include <coins.h>\n-#include <utilmoneystr.h>\n-\n+#include \"chain.h\"\n+#include \"coins.h\"\n+#include \"utilmoneystr.h\"\n+ \n bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n {\n     if (tx.nLockTime == 0)\n@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n {\n-    // are the actual inputs available?\n-    if (!inputs.HaveInputs(tx)) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n-                         strprintf(\"%s: inputs missing/spent\", __func__));\n-    }\n-\n-    CAmount nValueIn = 0;\n-    for (unsigned int i = 0; i < tx.vin.size(); ++i) {\n-        const COutPoint &prevout = tx.vin[i].prevout;\n-        const Coin& coin = inputs.AccessCoin(prevout);\n-        assert(!coin.IsSpent());\n-\n-        // If prev is coinbase, check that it's matured\n-        if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(false,\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-        }\n+        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n+        // for an attacker to attempt to split the network.\n+        if (!inputs.HaveInputs(tx))\n+            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n+\n+        CAmount nValueIn = 0;\n+        CAmount nFees = 0;\n+        for (unsigned int i = 0; i < tx.vin.size(); i++)\n+        {\n+            const COutPoint &prevout = tx.vin[i].prevout;\n+            const Coin& coin = inputs.AccessCoin(prevout);\n+            assert(!coin.IsSpent());\n+\n+            // If prev is coinbase, check that it's matured\n+            if (coin.IsCoinBase()) {\n+                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n+                    return state.Invalid(false,\n+                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n+            }\n+\n+            // Check for negative or overflow input values\n+            nValueIn += coin.out.nValue;\n+            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n+                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n \n-        // Check for negative or overflow input values\n-        nValueIn += coin.out.nValue;\n-        if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn)) {\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n         }\n-    }\n-\n-    const CAmount value_out = tx.GetValueOut();\n-    if (nValueIn < value_out) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n-            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n-    }\n-\n-    // Tally transaction fees\n-    const CAmount txfee_aux = nValueIn - value_out;\n-    if (!MoneyRange(txfee_aux)) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-outofrange\");\n-    }\n \n-    txfee = txfee_aux;\n+        if (nValueIn < tx.GetValueOut())\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n+                strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n+\n+        // Tally transaction fees\n+        CAmount nTxFee = nValueIn - tx.GetValueOut();\n+        if (nTxFee < 0)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n+        nFees += nTxFee;\n+        if (!MoneyRange(nFees))\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-outofrange\");\n     return true;\n }"
      },
      {
        "sha": "d46d3294ca25039e8ebdaf1d0cd4d73abebb3597",
        "filename": "src/consensus/tx_verify.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/tx_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/tx_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,8 +5,6 @@\n #ifndef BITCOIN_CONSENSUS_TX_VERIFY_H\n #define BITCOIN_CONSENSUS_TX_VERIFY_H\n \n-#include <amount.h>\n-\n #include <stdint.h>\n #include <vector>\n \n@@ -24,10 +22,9 @@ namespace Consensus {\n /**\n  * Check whether all inputs of this transaction are valid (no double spends and amounts)\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n- * @param[out] txfee Set to the transaction fee if successful.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee);\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n } // namespace Consensus\n \n /** Auxiliary functions for transaction validation (ideally should not be exposed) */"
      },
      {
        "sha": "5494ce40eac4204e06026d589958ff42e8f1fc0a",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -7,10 +7,10 @@\n #define BITCOIN_CONSENSUS_VALIDATION_H\n \n #include <string>\n-#include <version.h>\n-#include <consensus/consensus.h>\n-#include <primitives/transaction.h>\n-#include <primitives/block.h>\n+#include \"version.h\"\n+#include \"consensus/consensus.h\"\n+#include \"primitives/transaction.h\"\n+#include \"primitives/block.h\"\n \n /** \"reject\" message codes */\n static const unsigned char REJECT_MALFORMED = 0x01;\n@@ -89,16 +89,17 @@ class CValidationState {\n     std::string GetDebugMessage() const { return strDebugMessage; }\n };\n \n-// These implement the weight = (stripped_size * 4) + witness_size formula,\n-// using only serialization with and without witness data. As witness_size\n-// is equal to total_size - stripped_size, this formula is identical to:\n-// weight = (stripped_size * 3) + total_size.\n static inline int64_t GetTransactionWeight(const CTransaction& tx)\n {\n-    return ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n+    return ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR -1) + ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n }\n+\n static inline int64_t GetBlockWeight(const CBlock& block)\n {\n+    // This implements the weight = (stripped_size * 4) + witness_size formula,\n+    // using only serialization with and without witness data. As witness_size\n+    // is equal to total_size - stripped_size, this formula is identical to:\n+    // weight = (stripped_size * 3) + total_size.\n     return ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION);\n }\n "
      },
      {
        "sha": "ccc72ebb3219280396ce0d65d6ae844ae3771110",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_CORE_IO_H\n #define BITCOIN_CORE_IO_H\n \n-#include <amount.h>\n+#include \"amount.h\"\n \n #include <string>\n #include <vector>\n@@ -20,7 +20,7 @@ class UniValue;\n // core_read.cpp\n CScript ParseScript(const std::string& s);\n std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode = false);\n-bool DecodeHexTx(CMutableTransaction& tx, const std::string& hex_tx, bool try_no_witness = false, bool try_witness = true);\n+bool DecodeHexTx(CMutableTransaction& tx, const std::string& strHexTx, bool fTryNoWitness = false);\n bool DecodeHexBlk(CBlock&, const std::string& strHexBlk);\n uint256 ParseHashUV(const UniValue& v, const std::string& strName);\n uint256 ParseHashStr(const std::string&, const std::string& strName);"
      },
      {
        "sha": "f038e7b15487471566295dce78d24a6f903c83ab",
        "filename": "src/core_memusage.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/core_memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/core_memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_memusage.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,9 +5,9 @@\n #ifndef BITCOIN_CORE_MEMUSAGE_H\n #define BITCOIN_CORE_MEMUSAGE_H\n \n-#include <primitives/transaction.h>\n-#include <primitives/block.h>\n-#include <memusage.h>\n+#include \"primitives/transaction.h\"\n+#include \"primitives/block.h\"\n+#include \"memusage.h\"\n \n static inline size_t RecursiveDynamicUsage(const CScript& script) {\n     return memusage::DynamicUsage(script);"
      },
      {
        "sha": "7018131a134ad08042c41ae1441594211448325c",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 26,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,17 +2,17 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <core_io.h>\n+#include \"core_io.h\"\n \n-#include <primitives/block.h>\n-#include <primitives/transaction.h>\n-#include <script/script.h>\n-#include <serialize.h>\n-#include <streams.h>\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n+#include \"script/script.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n #include <univalue.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n-#include <version.h>\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+#include \"version.h\"\n \n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/predicate.hpp>\n@@ -108,39 +108,39 @@ bool CheckTxScriptsSanity(const CMutableTransaction& tx)\n     return true;\n }\n \n-bool DecodeHexTx(CMutableTransaction& tx, const std::string& hex_tx, bool try_no_witness, bool try_witness)\n+bool DecodeHexTx(CMutableTransaction& tx, const std::string& strHexTx, bool fTryNoWitness)\n {\n-    if (!IsHex(hex_tx)) {\n+    if (!IsHex(strHexTx)) {\n         return false;\n     }\n \n-    std::vector<unsigned char> txData(ParseHex(hex_tx));\n+    std::vector<unsigned char> txData(ParseHex(strHexTx));\n \n-    if (try_no_witness) {\n+    if (fTryNoWitness) {\n         CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS);\n         try {\n             ssData >> tx;\n-            if (ssData.eof() && (!try_witness || CheckTxScriptsSanity(tx))) {\n+            if (ssData.eof() && CheckTxScriptsSanity(tx)) {\n                 return true;\n             }\n-        } catch (const std::exception&) {\n+        }\n+        catch (const std::exception&) {\n             // Fall through.\n         }\n     }\n \n-    if (try_witness) {\n-        CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);\n-        try {\n-            ssData >> tx;\n-            if (ssData.empty()) {\n-                return true;\n-            }\n-        } catch (const std::exception&) {\n-            // Fall through.\n+    CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);\n+    try {\n+        ssData >> tx;\n+        if (!ssData.empty()) {\n+            return false;\n         }\n     }\n-    \n-    return false;\n+    catch (const std::exception&) {\n+        return false;\n+    }\n+\n+    return true;\n }\n \n bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)"
      },
      {
        "sha": "1431fa0c9beed3490a32fe6ffa43c7b619ab1ab6",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 15,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,19 +2,19 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <core_io.h>\n-\n-#include <base58.h>\n-#include <consensus/consensus.h>\n-#include <consensus/validation.h>\n-#include <script/script.h>\n-#include <script/standard.h>\n-#include <serialize.h>\n-#include <streams.h>\n+#include \"core_io.h\"\n+\n+#include \"base58.h\"\n+#include \"consensus/consensus.h\"\n+#include \"consensus/validation.h\"\n+#include \"script/script.h\"\n+#include \"script/standard.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n #include <univalue.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n-#include <utilstrencodings.h>\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"utilstrencodings.h\"\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n@@ -148,9 +148,8 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n     out.pushKV(\"type\", GetTxnOutputType(type));\n \n     UniValue a(UniValue::VARR);\n-    for (const CTxDestination& addr : addresses) {\n-        a.push_back(EncodeDestination(addr));\n-    }\n+    for (const CTxDestination& addr : addresses)\n+        a.push_back(CBitcoinAddress(addr).ToString());\n     out.pushKV(\"addresses\", a);\n }\n "
      },
      {
        "sha": "5e70d25eeeef4862bccaf2b64647411ba3f0673c",
        "filename": "src/crypto/aes.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/aes.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/aes.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/aes.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,14 +2,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <crypto/aes.h>\n-#include <crypto/common.h>\n+#include \"aes.h\"\n+#include \"crypto/common.h\"\n \n #include <assert.h>\n #include <string.h>\n \n extern \"C\" {\n-#include <crypto/ctaes/ctaes.c>\n+#include \"crypto/ctaes/ctaes.c\"\n }\n \n AES128Encrypt::AES128Encrypt(const unsigned char key[16])"
      },
      {
        "sha": "e9f1b52e714e833f0d108180aad94dcb8c1292d7",
        "filename": "src/crypto/aes.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/aes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/aes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/aes.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -8,7 +8,7 @@\n #define BITCOIN_CRYPTO_AES_H\n \n extern \"C\" {\n-#include <crypto/ctaes/ctaes.h>\n+#include \"crypto/ctaes/ctaes.h\"\n }\n \n static const int AES_BLOCKSIZE = 16;\n@@ -22,7 +22,7 @@ class AES128Encrypt\n     AES128_ctx ctx;\n \n public:\n-    explicit AES128Encrypt(const unsigned char key[16]);\n+    AES128Encrypt(const unsigned char key[16]);\n     ~AES128Encrypt();\n     void Encrypt(unsigned char ciphertext[16], const unsigned char plaintext[16]) const;\n };\n@@ -34,7 +34,7 @@ class AES128Decrypt\n     AES128_ctx ctx;\n \n public:\n-    explicit AES128Decrypt(const unsigned char key[16]);\n+    AES128Decrypt(const unsigned char key[16]);\n     ~AES128Decrypt();\n     void Decrypt(unsigned char plaintext[16], const unsigned char ciphertext[16]) const;\n };\n@@ -46,7 +46,7 @@ class AES256Encrypt\n     AES256_ctx ctx;\n \n public:\n-    explicit AES256Encrypt(const unsigned char key[32]);\n+    AES256Encrypt(const unsigned char key[32]);\n     ~AES256Encrypt();\n     void Encrypt(unsigned char ciphertext[16], const unsigned char plaintext[16]) const;\n };\n@@ -58,7 +58,7 @@ class AES256Decrypt\n     AES256_ctx ctx;\n \n public:\n-    explicit AES256Decrypt(const unsigned char key[32]);\n+    AES256Decrypt(const unsigned char key[32]);\n     ~AES256Decrypt();\n     void Decrypt(unsigned char plaintext[16], const unsigned char ciphertext[16]) const;\n };"
      },
      {
        "sha": "4038ae9f868e054ee6baa64bafd997c85e260226",
        "filename": "src/crypto/chacha20.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,8 +5,8 @@\n // Based on the public domain implementation 'merged' by D. J. Bernstein\n // See https://cr.yp.to/chacha.html.\n \n-#include <crypto/common.h>\n-#include <crypto/chacha20.h>\n+#include \"crypto/common.h\"\n+#include \"crypto/chacha20.h\"\n \n #include <string.h>\n "
      },
      {
        "sha": "bcca3d30ea7d686b4244049a3d63f28f50ca8d7c",
        "filename": "src/crypto/common.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/common.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,13 +6,13 @@\n #define BITCOIN_CRYPTO_COMMON_H\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"bitcoin-config.h\"\n #endif\n \n #include <stdint.h>\n #include <string.h>\n \n-#include <compat/endian.h>\n+#include \"compat/endian.h\"\n \n uint16_t static inline ReadLE16(const unsigned char* ptr)\n {"
      },
      {
        "sha": "3c791625d01efcde30f4b91fa97b35d69aef881f",
        "filename": "src/crypto/hmac_sha256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/hmac_sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/hmac_sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha256.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <crypto/hmac_sha256.h>\n+#include \"crypto/hmac_sha256.h\"\n \n #include <string.h>\n "
      },
      {
        "sha": "1519c1457e0ad5b4f80b79e8d384b53dbb65809b",
        "filename": "src/crypto/hmac_sha256.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/hmac_sha256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/hmac_sha256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha256.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,12 +5,12 @@\n #ifndef BITCOIN_CRYPTO_HMAC_SHA256_H\n #define BITCOIN_CRYPTO_HMAC_SHA256_H\n \n-#include <crypto/sha256.h>\n+#include \"crypto/sha256.h\"\n \n #include <stdint.h>\n #include <stdlib.h>\n \n-/** A hasher class for HMAC-SHA-256. */\n+/** A hasher class for HMAC-SHA-512. */\n class CHMAC_SHA256\n {\n private:"
      },
      {
        "sha": "5939c6ec47f304a7a647eefb6b12e2ea94255911",
        "filename": "src/crypto/hmac_sha512.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/hmac_sha512.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/hmac_sha512.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha512.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <crypto/hmac_sha512.h>\n+#include \"crypto/hmac_sha512.h\"\n \n #include <string.h>\n "
      },
      {
        "sha": "17dee61ea8e1cf15b4cfef4aac3a35e6cfaec13b",
        "filename": "src/crypto/hmac_sha512.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/hmac_sha512.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/hmac_sha512.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha512.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_CRYPTO_HMAC_SHA512_H\n #define BITCOIN_CRYPTO_HMAC_SHA512_H\n \n-#include <crypto/sha512.h>\n+#include \"crypto/sha512.h\"\n \n #include <stdint.h>\n #include <stdlib.h>"
      },
      {
        "sha": "77c9acfc26e5f73f486673a92d4f81a036786a58",
        "filename": "src/crypto/ripemd160.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/ripemd160.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/ripemd160.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/ripemd160.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <crypto/ripemd160.h>\n+#include \"crypto/ripemd160.h\"\n \n-#include <crypto/common.h>\n+#include \"crypto/common.h\"\n \n #include <string.h>\n "
      },
      {
        "sha": "9b8c48b8fc6ca67fa6dfc35058c2dcc5724f81d6",
        "filename": "src/crypto/scrypt-sse2.cpp",
        "status": "added",
        "additions": 140,
        "deletions": 0,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/scrypt-sse2.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/scrypt-sse2.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/scrypt-sse2.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,140 @@\n+/*\n+ * Copyright 2009 Colin Percival, 2011 ArtForz, 2012-2013 pooler\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in the\n+ *    documentation and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ *\n+ * This file was originally written by Colin Percival as part of the Tarsnap\n+ * online backup system.\n+ */\n+\n+#if defined(USE_SSE2)\n+\n+#include \"crypto/scrypt.h\"\n+#include <stdlib.h>\n+#include <stdint.h>\n+#include <string.h>\n+#include <openssl/sha.h>\n+\n+#include <emmintrin.h>\n+\n+static inline void xor_salsa8_sse2(__m128i B[4], const __m128i Bx[4])\n+{\n+\t__m128i X0, X1, X2, X3;\n+\t__m128i T;\n+\tint i;\n+\n+\tX0 = B[0] = _mm_xor_si128(B[0], Bx[0]);\n+\tX1 = B[1] = _mm_xor_si128(B[1], Bx[1]);\n+\tX2 = B[2] = _mm_xor_si128(B[2], Bx[2]);\n+\tX3 = B[3] = _mm_xor_si128(B[3], Bx[3]);\n+\n+\tfor (i = 0; i < 8; i += 2) {\n+\t\t/* Operate on \"columns\". */\n+\t\tT = _mm_add_epi32(X0, X3);\n+\t\tX1 = _mm_xor_si128(X1, _mm_slli_epi32(T, 7));\n+\t\tX1 = _mm_xor_si128(X1, _mm_srli_epi32(T, 25));\n+\t\tT = _mm_add_epi32(X1, X0);\n+\t\tX2 = _mm_xor_si128(X2, _mm_slli_epi32(T, 9));\n+\t\tX2 = _mm_xor_si128(X2, _mm_srli_epi32(T, 23));\n+\t\tT = _mm_add_epi32(X2, X1);\n+\t\tX3 = _mm_xor_si128(X3, _mm_slli_epi32(T, 13));\n+\t\tX3 = _mm_xor_si128(X3, _mm_srli_epi32(T, 19));\n+\t\tT = _mm_add_epi32(X3, X2);\n+\t\tX0 = _mm_xor_si128(X0, _mm_slli_epi32(T, 18));\n+\t\tX0 = _mm_xor_si128(X0, _mm_srli_epi32(T, 14));\n+\n+\t\t/* Rearrange data. */\n+\t\tX1 = _mm_shuffle_epi32(X1, 0x93);\n+\t\tX2 = _mm_shuffle_epi32(X2, 0x4E);\n+\t\tX3 = _mm_shuffle_epi32(X3, 0x39);\n+\n+\t\t/* Operate on \"rows\". */\n+\t\tT = _mm_add_epi32(X0, X1);\n+\t\tX3 = _mm_xor_si128(X3, _mm_slli_epi32(T, 7));\n+\t\tX3 = _mm_xor_si128(X3, _mm_srli_epi32(T, 25));\n+\t\tT = _mm_add_epi32(X3, X0);\n+\t\tX2 = _mm_xor_si128(X2, _mm_slli_epi32(T, 9));\n+\t\tX2 = _mm_xor_si128(X2, _mm_srli_epi32(T, 23));\n+\t\tT = _mm_add_epi32(X2, X3);\n+\t\tX1 = _mm_xor_si128(X1, _mm_slli_epi32(T, 13));\n+\t\tX1 = _mm_xor_si128(X1, _mm_srli_epi32(T, 19));\n+\t\tT = _mm_add_epi32(X1, X2);\n+\t\tX0 = _mm_xor_si128(X0, _mm_slli_epi32(T, 18));\n+\t\tX0 = _mm_xor_si128(X0, _mm_srli_epi32(T, 14));\n+\n+\t\t/* Rearrange data. */\n+\t\tX1 = _mm_shuffle_epi32(X1, 0x39);\n+\t\tX2 = _mm_shuffle_epi32(X2, 0x4E);\n+\t\tX3 = _mm_shuffle_epi32(X3, 0x93);\n+\t}\n+\n+\tB[0] = _mm_add_epi32(B[0], X0);\n+\tB[1] = _mm_add_epi32(B[1], X1);\n+\tB[2] = _mm_add_epi32(B[2], X2);\n+\tB[3] = _mm_add_epi32(B[3], X3);\n+}\n+\n+void scrypt_1024_1_1_256_sp_sse2(const char *input, char *output, char *scratchpad)\n+{\n+\tuint8_t B[128];\n+\tunion {\n+\t\t__m128i i128[8];\n+\t\tuint32_t u32[32];\n+\t} X;\n+\t__m128i *V;\n+\tuint32_t i, j, k;\n+\n+\tV = (__m128i *)(((uintptr_t)(scratchpad) + 63) & ~ (uintptr_t)(63));\n+\n+\tPBKDF2_SHA256((const uint8_t *)input, 80, (const uint8_t *)input, 80, 1, B, 128);\n+\n+\tfor (k = 0; k < 2; k++) {\n+\t\tfor (i = 0; i < 16; i++) {\n+\t\t\tX.u32[k * 16 + i] = le32dec(&B[(k * 16 + (i * 5 % 16)) * 4]);\n+\t\t}\n+\t}\n+\n+\tfor (i = 0; i < 1024; i++) {\n+\t\tfor (k = 0; k < 8; k++)\n+\t\t\tV[i * 8 + k] = X.i128[k];\n+\t\txor_salsa8_sse2(&X.i128[0], &X.i128[4]);\n+\t\txor_salsa8_sse2(&X.i128[4], &X.i128[0]);\n+\t}\n+\tfor (i = 0; i < 1024; i++) {\n+\t\tj = 8 * (X.u32[16] & 1023);\n+\t\tfor (k = 0; k < 8; k++)\n+\t\t\tX.i128[k] = _mm_xor_si128(X.i128[k], V[j + k]);\n+\t\txor_salsa8_sse2(&X.i128[0], &X.i128[4]);\n+\t\txor_salsa8_sse2(&X.i128[4], &X.i128[0]);\n+\t}\n+\n+\tfor (k = 0; k < 2; k++) {\n+\t\tfor (i = 0; i < 16; i++) {\n+\t\t\tle32enc(&B[(k * 16 + (i * 5 % 16)) * 4], X.u32[k * 16 + i]);\n+\t\t}\n+\t}\n+\n+\tPBKDF2_SHA256((const uint8_t *)input, 80, B, 128, 1, (uint8_t *)output, 32);\n+}\n+\n+#endif // USE_SSE2"
      },
      {
        "sha": "9da803f67ca345634de9daf88be5748de3f73c9b",
        "filename": "src/crypto/scrypt.cpp",
        "status": "added",
        "additions": 331,
        "deletions": 0,
        "changes": 331,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/scrypt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/scrypt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/scrypt.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,331 @@\n+/*\n+ * Copyright 2009 Colin Percival, 2011 ArtForz, 2012-2013 pooler\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in the\n+ *    documentation and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ *\n+ * This file was originally written by Colin Percival as part of the Tarsnap\n+ * online backup system.\n+ */\n+\n+#include \"crypto/scrypt.h\"\n+//#include \"util.h\"\n+#include <stdlib.h>\n+#include <stdint.h>\n+#include <string.h>\n+#include <openssl/sha.h>\n+\n+#if defined(USE_SSE2) && !defined(USE_SSE2_ALWAYS)\n+#ifdef _MSC_VER\n+// MSVC 64bit is unable to use inline asm\n+#include <intrin.h>\n+#else\n+// GCC Linux or i686-w64-mingw32\n+#include <cpuid.h>\n+#endif\n+#endif\n+\n+static inline uint32_t be32dec(const void *pp)\n+{\n+\tconst uint8_t *p = (uint8_t const *)pp;\n+\treturn ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +\n+\t    ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));\n+}\n+\n+static inline void be32enc(void *pp, uint32_t x)\n+{\n+\tuint8_t *p = (uint8_t *)pp;\n+\tp[3] = x & 0xff;\n+\tp[2] = (x >> 8) & 0xff;\n+\tp[1] = (x >> 16) & 0xff;\n+\tp[0] = (x >> 24) & 0xff;\n+}\n+\n+typedef struct HMAC_SHA256Context {\n+\tSHA256_CTX ictx;\n+\tSHA256_CTX octx;\n+} HMAC_SHA256_CTX;\n+\n+/* Initialize an HMAC-SHA256 operation with the given key. */\n+static void\n+HMAC_SHA256_Init(HMAC_SHA256_CTX *ctx, const void *_K, size_t Klen)\n+{\n+\tunsigned char pad[64];\n+\tunsigned char khash[32];\n+\tconst unsigned char *K = (const unsigned char *)_K;\n+\tsize_t i;\n+\n+\t/* If Klen > 64, the key is really SHA256(K). */\n+\tif (Klen > 64) {\n+\t\tSHA256_Init(&ctx->ictx);\n+\t\tSHA256_Update(&ctx->ictx, K, Klen);\n+\t\tSHA256_Final(khash, &ctx->ictx);\n+\t\tK = khash;\n+\t\tKlen = 32;\n+\t}\n+\n+\t/* Inner SHA256 operation is SHA256(K xor [block of 0x36] || data). */\n+\tSHA256_Init(&ctx->ictx);\n+\tmemset(pad, 0x36, 64);\n+\tfor (i = 0; i < Klen; i++)\n+\t\tpad[i] ^= K[i];\n+\tSHA256_Update(&ctx->ictx, pad, 64);\n+\n+\t/* Outer SHA256 operation is SHA256(K xor [block of 0x5c] || hash). */\n+\tSHA256_Init(&ctx->octx);\n+\tmemset(pad, 0x5c, 64);\n+\tfor (i = 0; i < Klen; i++)\n+\t\tpad[i] ^= K[i];\n+\tSHA256_Update(&ctx->octx, pad, 64);\n+\n+\t/* Clean the stack. */\n+\tmemset(khash, 0, 32);\n+}\n+\n+/* Add bytes to the HMAC-SHA256 operation. */\n+static void\n+HMAC_SHA256_Update(HMAC_SHA256_CTX *ctx, const void *in, size_t len)\n+{\n+\t/* Feed data to the inner SHA256 operation. */\n+\tSHA256_Update(&ctx->ictx, in, len);\n+}\n+\n+/* Finish an HMAC-SHA256 operation. */\n+static void\n+HMAC_SHA256_Final(unsigned char digest[32], HMAC_SHA256_CTX *ctx)\n+{\n+\tunsigned char ihash[32];\n+\n+\t/* Finish the inner SHA256 operation. */\n+\tSHA256_Final(ihash, &ctx->ictx);\n+\n+\t/* Feed the inner hash to the outer SHA256 operation. */\n+\tSHA256_Update(&ctx->octx, ihash, 32);\n+\n+\t/* Finish the outer SHA256 operation. */\n+\tSHA256_Final(digest, &ctx->octx);\n+\n+\t/* Clean the stack. */\n+\tmemset(ihash, 0, 32);\n+}\n+\n+/**\n+ * PBKDF2_SHA256(passwd, passwdlen, salt, saltlen, c, buf, dkLen):\n+ * Compute PBKDF2(passwd, salt, c, dkLen) using HMAC-SHA256 as the PRF, and\n+ * write the output to buf.  The value dkLen must be at most 32 * (2^32 - 1).\n+ */\n+void\n+PBKDF2_SHA256(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt,\n+    size_t saltlen, uint64_t c, uint8_t *buf, size_t dkLen)\n+{\n+\tHMAC_SHA256_CTX PShctx, hctx;\n+\tsize_t i;\n+\tuint8_t ivec[4];\n+\tuint8_t U[32];\n+\tuint8_t T[32];\n+\tuint64_t j;\n+\tint k;\n+\tsize_t clen;\n+\n+\t/* Compute HMAC state after processing P and S. */\n+\tHMAC_SHA256_Init(&PShctx, passwd, passwdlen);\n+\tHMAC_SHA256_Update(&PShctx, salt, saltlen);\n+\n+\t/* Iterate through the blocks. */\n+\tfor (i = 0; i * 32 < dkLen; i++) {\n+\t\t/* Generate INT(i + 1). */\n+\t\tbe32enc(ivec, (uint32_t)(i + 1));\n+\n+\t\t/* Compute U_1 = PRF(P, S || INT(i)). */\n+\t\tmemcpy(&hctx, &PShctx, sizeof(HMAC_SHA256_CTX));\n+\t\tHMAC_SHA256_Update(&hctx, ivec, 4);\n+\t\tHMAC_SHA256_Final(U, &hctx);\n+\n+\t\t/* T_i = U_1 ... */\n+\t\tmemcpy(T, U, 32);\n+\n+\t\tfor (j = 2; j <= c; j++) {\n+\t\t\t/* Compute U_j. */\n+\t\t\tHMAC_SHA256_Init(&hctx, passwd, passwdlen);\n+\t\t\tHMAC_SHA256_Update(&hctx, U, 32);\n+\t\t\tHMAC_SHA256_Final(U, &hctx);\n+\n+\t\t\t/* ... xor U_j ... */\n+\t\t\tfor (k = 0; k < 32; k++)\n+\t\t\t\tT[k] ^= U[k];\n+\t\t}\n+\n+\t\t/* Copy as many bytes as necessary into buf. */\n+\t\tclen = dkLen - i * 32;\n+\t\tif (clen > 32)\n+\t\t\tclen = 32;\n+\t\tmemcpy(&buf[i * 32], T, clen);\n+\t}\n+\n+\t/* Clean PShctx, since we never called _Final on it. */\n+\tmemset(&PShctx, 0, sizeof(HMAC_SHA256_CTX));\n+}\n+\n+#define ROTL(a, b) (((a) << (b)) | ((a) >> (32 - (b))))\n+\n+static inline void xor_salsa8(uint32_t B[16], const uint32_t Bx[16])\n+{\n+\tuint32_t x00,x01,x02,x03,x04,x05,x06,x07,x08,x09,x10,x11,x12,x13,x14,x15;\n+\tint i;\n+\n+\tx00 = (B[ 0] ^= Bx[ 0]);\n+\tx01 = (B[ 1] ^= Bx[ 1]);\n+\tx02 = (B[ 2] ^= Bx[ 2]);\n+\tx03 = (B[ 3] ^= Bx[ 3]);\n+\tx04 = (B[ 4] ^= Bx[ 4]);\n+\tx05 = (B[ 5] ^= Bx[ 5]);\n+\tx06 = (B[ 6] ^= Bx[ 6]);\n+\tx07 = (B[ 7] ^= Bx[ 7]);\n+\tx08 = (B[ 8] ^= Bx[ 8]);\n+\tx09 = (B[ 9] ^= Bx[ 9]);\n+\tx10 = (B[10] ^= Bx[10]);\n+\tx11 = (B[11] ^= Bx[11]);\n+\tx12 = (B[12] ^= Bx[12]);\n+\tx13 = (B[13] ^= Bx[13]);\n+\tx14 = (B[14] ^= Bx[14]);\n+\tx15 = (B[15] ^= Bx[15]);\n+\tfor (i = 0; i < 8; i += 2) {\n+\t\t/* Operate on columns. */\n+\t\tx04 ^= ROTL(x00 + x12,  7);  x09 ^= ROTL(x05 + x01,  7);\n+\t\tx14 ^= ROTL(x10 + x06,  7);  x03 ^= ROTL(x15 + x11,  7);\n+\n+\t\tx08 ^= ROTL(x04 + x00,  9);  x13 ^= ROTL(x09 + x05,  9);\n+\t\tx02 ^= ROTL(x14 + x10,  9);  x07 ^= ROTL(x03 + x15,  9);\n+\n+\t\tx12 ^= ROTL(x08 + x04, 13);  x01 ^= ROTL(x13 + x09, 13);\n+\t\tx06 ^= ROTL(x02 + x14, 13);  x11 ^= ROTL(x07 + x03, 13);\n+\n+\t\tx00 ^= ROTL(x12 + x08, 18);  x05 ^= ROTL(x01 + x13, 18);\n+\t\tx10 ^= ROTL(x06 + x02, 18);  x15 ^= ROTL(x11 + x07, 18);\n+\n+\t\t/* Operate on rows. */\n+\t\tx01 ^= ROTL(x00 + x03,  7);  x06 ^= ROTL(x05 + x04,  7);\n+\t\tx11 ^= ROTL(x10 + x09,  7);  x12 ^= ROTL(x15 + x14,  7);\n+\n+\t\tx02 ^= ROTL(x01 + x00,  9);  x07 ^= ROTL(x06 + x05,  9);\n+\t\tx08 ^= ROTL(x11 + x10,  9);  x13 ^= ROTL(x12 + x15,  9);\n+\n+\t\tx03 ^= ROTL(x02 + x01, 13);  x04 ^= ROTL(x07 + x06, 13);\n+\t\tx09 ^= ROTL(x08 + x11, 13);  x14 ^= ROTL(x13 + x12, 13);\n+\n+\t\tx00 ^= ROTL(x03 + x02, 18);  x05 ^= ROTL(x04 + x07, 18);\n+\t\tx10 ^= ROTL(x09 + x08, 18);  x15 ^= ROTL(x14 + x13, 18);\n+\t}\n+\tB[ 0] += x00;\n+\tB[ 1] += x01;\n+\tB[ 2] += x02;\n+\tB[ 3] += x03;\n+\tB[ 4] += x04;\n+\tB[ 5] += x05;\n+\tB[ 6] += x06;\n+\tB[ 7] += x07;\n+\tB[ 8] += x08;\n+\tB[ 9] += x09;\n+\tB[10] += x10;\n+\tB[11] += x11;\n+\tB[12] += x12;\n+\tB[13] += x13;\n+\tB[14] += x14;\n+\tB[15] += x15;\n+}\n+\n+void scrypt_1024_1_1_256_sp_generic(const char *input, char *output, char *scratchpad)\n+{\n+\tuint8_t B[128];\n+\tuint32_t X[32];\n+\tuint32_t *V;\n+\tuint32_t i, j, k;\n+\n+\tV = (uint32_t *)(((uintptr_t)(scratchpad) + 63) & ~ (uintptr_t)(63));\n+\n+\tPBKDF2_SHA256((const uint8_t *)input, 80, (const uint8_t *)input, 80, 1, B, 128);\n+\n+\tfor (k = 0; k < 32; k++)\n+\t\tX[k] = le32dec(&B[4 * k]);\n+\n+\tfor (i = 0; i < 1024; i++) {\n+\t\tmemcpy(&V[i * 32], X, 128);\n+\t\txor_salsa8(&X[0], &X[16]);\n+\t\txor_salsa8(&X[16], &X[0]);\n+\t}\n+\tfor (i = 0; i < 1024; i++) {\n+\t\tj = 32 * (X[16] & 1023);\n+\t\tfor (k = 0; k < 32; k++)\n+\t\t\tX[k] ^= V[j + k];\n+\t\txor_salsa8(&X[0], &X[16]);\n+\t\txor_salsa8(&X[16], &X[0]);\n+\t}\n+\n+\tfor (k = 0; k < 32; k++)\n+\t\tle32enc(&B[4 * k], X[k]);\n+\n+\tPBKDF2_SHA256((const uint8_t *)input, 80, B, 128, 1, (uint8_t *)output, 32);\n+}\n+\n+#if defined(USE_SSE2)\n+// By default, set to generic scrypt function. This will prevent crash in case when scrypt_detect_sse2() wasn't called\n+void (*scrypt_1024_1_1_256_sp_detected)(const char *input, char *output, char *scratchpad) = &scrypt_1024_1_1_256_sp_generic;\n+\n+std::string scrypt_detect_sse2()\n+{\n+    std::string ret;\n+#if defined(USE_SSE2_ALWAYS)\n+    ret = \"scrypt: using scrypt-sse2 as built.\";\n+#else // USE_SSE2_ALWAYS\n+    // 32bit x86 Linux or Windows, detect cpuid features\n+    unsigned int cpuid_edx=0;\n+#if defined(_MSC_VER)\n+    // MSVC\n+    int x86cpuid[4];\n+    __cpuid(x86cpuid, 1);\n+    cpuid_edx = (unsigned int)buffer[3];\n+#else // _MSC_VER\n+    // Linux or i686-w64-mingw32 (gcc-4.6.3)\n+    unsigned int eax, ebx, ecx;\n+    __get_cpuid(1, &eax, &ebx, &ecx, &cpuid_edx);\n+#endif // _MSC_VER\n+\n+    if (cpuid_edx & 1<<26)\n+    {\n+        scrypt_1024_1_1_256_sp_detected = &scrypt_1024_1_1_256_sp_sse2;\n+        ret = \"scrypt: using scrypt-sse2 as detected\");\n+    }\n+    else\n+    {\n+        scrypt_1024_1_1_256_sp_detected = &scrypt_1024_1_1_256_sp_generic;\n+        ret = \"scrypt: using scrypt-generic, SSE2 unavailable\";\n+    }\n+#endif // USE_SSE2_ALWAYS\n+    return ret;\n+}\n+#endif\n+\n+void scrypt_1024_1_1_256(const char *input, char *output)\n+{\n+\tchar scratchpad[SCRYPT_SCRATCHPAD_SIZE];\n+    scrypt_1024_1_1_256_sp(input, output, scratchpad);\n+}"
      },
      {
        "sha": "bcf9dc60f4745b0822e0c3d03f2684787c25b8c4",
        "filename": "src/crypto/scrypt.h",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/scrypt.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/scrypt.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/scrypt.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,46 @@\n+#ifndef SCRYPT_H\n+#define SCRYPT_H\n+#include <stdlib.h>\n+#include <stdint.h>\n+\n+static const int SCRYPT_SCRATCHPAD_SIZE = 131072 + 63;\n+\n+void scrypt_1024_1_1_256(const char *input, char *output);\n+void scrypt_1024_1_1_256_sp_generic(const char *input, char *output, char *scratchpad);\n+\n+#if defined(USE_SSE2)\n+#include <string>\n+#if defined(_M_X64) || defined(__x86_64__) || defined(_M_AMD64) || (defined(MAC_OSX) && defined(__i386__))\n+#define USE_SSE2_ALWAYS 1\n+#define scrypt_1024_1_1_256_sp(input, output, scratchpad) scrypt_1024_1_1_256_sp_sse2((input), (output), (scratchpad))\n+#else\n+#define scrypt_1024_1_1_256_sp(input, output, scratchpad) scrypt_1024_1_1_256_sp_detected((input), (output), (scratchpad))\n+#endif\n+\n+std::string scrypt_detect_sse2();\n+void scrypt_1024_1_1_256_sp_sse2(const char *input, char *output, char *scratchpad);\n+extern void (*scrypt_1024_1_1_256_sp_detected)(const char *input, char *output, char *scratchpad);\n+#else\n+#define scrypt_1024_1_1_256_sp(input, output, scratchpad) scrypt_1024_1_1_256_sp_generic((input), (output), (scratchpad))\n+#endif\n+\n+void\n+PBKDF2_SHA256(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt,\n+    size_t saltlen, uint64_t c, uint8_t *buf, size_t dkLen);\n+\n+static inline uint32_t le32dec(const void *pp)\n+{\n+        const uint8_t *p = (uint8_t const *)pp;\n+        return ((uint32_t)(p[0]) + ((uint32_t)(p[1]) << 8) +\n+            ((uint32_t)(p[2]) << 16) + ((uint32_t)(p[3]) << 24));\n+}\n+\n+static inline void le32enc(void *pp, uint32_t x)\n+{\n+        uint8_t *p = (uint8_t *)pp;\n+        p[0] = x & 0xff;\n+        p[1] = (x >> 8) & 0xff;\n+        p[2] = (x >> 16) & 0xff;\n+        p[3] = (x >> 24) & 0xff;\n+}\n+#endif"
      },
      {
        "sha": "0b895b33a29381d5d5ee181c96a4ad151e65c274",
        "filename": "src/crypto/sha1.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/sha1.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/sha1.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha1.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <crypto/sha1.h>\n+#include \"crypto/sha1.h\"\n \n-#include <crypto/common.h>\n+#include \"crypto/common.h\"\n \n #include <string.h>\n "
      },
      {
        "sha": "15d6db90c2469fdee46fda454a471ce6d506b258",
        "filename": "src/crypto/sha256.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,15 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <crypto/sha256.h>\n-#include <crypto/common.h>\n+#include \"crypto/sha256.h\"\n+#include \"crypto/common.h\"\n \n #include <assert.h>\n #include <string.h>\n #include <atomic>\n \n #if defined(__x86_64__) || defined(__amd64__)\n-#if defined(USE_ASM)\n+#if defined(EXPERIMENTAL_ASM)\n #include <cpuid.h>\n namespace sha256_sse4\n {\n@@ -178,7 +178,7 @@ TransformType Transform = sha256::Transform;\n \n std::string SHA256AutoDetect()\n {\n-#if defined(USE_ASM) && (defined(__x86_64__) || defined(__amd64__))\n+#if defined(EXPERIMENTAL_ASM) && (defined(__x86_64__) || defined(__amd64__))\n     uint32_t eax, ebx, ecx, edx;\n     if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx >> 19) & 1) {\n         Transform = sha256_sse4::Transform;"
      },
      {
        "sha": "564127cc319bd69b668a30b73db2caa7cd1e1258",
        "filename": "src/crypto/sha512.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/sha512.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/crypto/sha512.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha512.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <crypto/sha512.h>\n+#include \"crypto/sha512.h\"\n \n-#include <crypto/common.h>\n+#include \"crypto/common.h\"\n \n #include <string.h>\n "
      },
      {
        "sha": "fd24d05ee7b998eab6bc7a4510e4d13fd1841f22",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CUCKOOCACHE_H\n-#define BITCOIN_CUCKOOCACHE_H\n+#ifndef _BITCOIN_CUCKOOCACHE_H_\n+#define _BITCOIN_CUCKOOCACHE_H_\n \n #include <array>\n #include <algorithm>\n@@ -58,7 +58,7 @@ class bit_packed_atomic_flags\n      * @post All calls to bit_is_set (without subsequent bit_unset) will return\n      * true.\n      */\n-    explicit bit_packed_atomic_flags(uint32_t size)\n+    bit_packed_atomic_flags(uint32_t size)\n     {\n         // pad out the size if needed\n         size = (size + 7) / 8;\n@@ -478,4 +478,4 @@ class cache\n };\n } // namespace CuckooCache\n \n-#endif // BITCOIN_CUCKOOCACHE_H\n+#endif"
      },
      {
        "sha": "3e72c5bb9b80bcda64d8710c1918bd4ab940714e",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <dbwrapper.h>\n+#include \"dbwrapper.h\"\n \n-#include <random.h>\n+#include \"fs.h\"\n+#include \"util.h\"\n+#include \"random.h\"\n \n #include <leveldb/cache.h>\n #include <leveldb/env.h>\n@@ -17,7 +19,7 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n public:\n     // This code is adapted from posix_logger.h, which is why it is using vsprintf.\n     // Please do not do this in normal code\n-    void Logv(const char * format, va_list ap) override {\n+    virtual void Logv(const char * format, va_list ap) override {\n             if (!LogAcceptCategory(BCLog::LEVELDB)) {\n                 return;\n             }\n@@ -62,7 +64,7 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n \n                 assert(p <= limit);\n                 base[std::min(bufsize - 1, (int)(p - base))] = '\\0';\n-                LogPrintf(\"leveldb: %s\", base);\n+                LogPrintStr(base);\n                 if (base != buffer) {\n                     delete[] base;\n                 }\n@@ -188,7 +190,7 @@ bool CDBWrapper::IsEmpty()\n }\n \n CDBIterator::~CDBIterator() { delete piter; }\n-bool CDBIterator::Valid() const { return piter->Valid(); }\n+bool CDBIterator::Valid() { return piter->Valid(); }\n void CDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n void CDBIterator::Next() { piter->Next(); }\n "
      },
      {
        "sha": "7575d207ae5a450ca073049bb69b52f0b5219608",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,13 +5,13 @@\n #ifndef BITCOIN_DBWRAPPER_H\n #define BITCOIN_DBWRAPPER_H\n \n-#include <clientversion.h>\n-#include <fs.h>\n-#include <serialize.h>\n-#include <streams.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n-#include <version.h>\n+#include \"clientversion.h\"\n+#include \"fs.h\"\n+#include \"serialize.h\"\n+#include \"streams.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+#include \"version.h\"\n \n #include <leveldb/db.h>\n #include <leveldb/write_batch.h>\n@@ -22,7 +22,7 @@ static const size_t DBWRAPPER_PREALLOC_VALUE_SIZE = 1024;\n class dbwrapper_error : public std::runtime_error\n {\n public:\n-    explicit dbwrapper_error(const std::string& msg) : std::runtime_error(msg) {}\n+    dbwrapper_error(const std::string& msg) : std::runtime_error(msg) {}\n };\n \n class CDBWrapper;\n@@ -61,7 +61,7 @@ class CDBBatch\n     /**\n      * @param[in] _parent   CDBWrapper that this batch is to be submitted to\n      */\n-    explicit CDBBatch(const CDBWrapper &_parent) : parent(_parent), ssKey(SER_DISK, CLIENT_VERSION), ssValue(SER_DISK, CLIENT_VERSION), size_estimate(0) { };\n+    CDBBatch(const CDBWrapper &_parent) : parent(_parent), ssKey(SER_DISK, CLIENT_VERSION), ssValue(SER_DISK, CLIENT_VERSION), size_estimate(0) { };\n \n     void Clear()\n     {\n@@ -130,7 +130,7 @@ class CDBIterator\n         parent(_parent), piter(_piter) { };\n     ~CDBIterator();\n \n-    bool Valid() const;\n+    bool Valid();\n \n     void SeekToFirst();\n "
      },
      {
        "sha": "a5e12f1cfcb70e0c2fcc628d8f53bf6fa3adee1c",
        "filename": "src/fs.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/fs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/fs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,4 +1,4 @@\n-#include <fs.h>\n+#include \"fs.h\"\n \n namespace fsbridge {\n "
      },
      {
        "sha": "5a15600be55e82dc595f3fee61e398431a4c219e",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <hash.h>\n-#include <crypto/common.h>\n-#include <crypto/hmac_sha512.h>\n+#include \"hash.h\"\n+#include \"crypto/common.h\"\n+#include \"crypto/hmac_sha512.h\"\n+#include \"pubkey.h\"\n \n \n inline uint32_t ROTL32(uint32_t x, int8_t r)"
      },
      {
        "sha": "b9952d39fc97dc1472a1c11b6e9e312f1b7a5e01",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 21,
        "deletions": 7,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,12 +6,12 @@\n #ifndef BITCOIN_HASH_H\n #define BITCOIN_HASH_H\n \n-#include <crypto/ripemd160.h>\n-#include <crypto/sha256.h>\n-#include <prevector.h>\n-#include <serialize.h>\n-#include <uint256.h>\n-#include <version.h>\n+#include \"crypto/ripemd160.h\"\n+#include \"crypto/sha256.h\"\n+#include \"prevector.h\"\n+#include \"serialize.h\"\n+#include \"uint256.h\"\n+#include \"version.h\"\n \n #include <vector>\n \n@@ -88,6 +88,20 @@ inline uint256 Hash(const T1 p1begin, const T1 p1end,\n     return result;\n }\n \n+/** Compute the 256-bit hash of the concatenation of three objects. */\n+template<typename T1, typename T2, typename T3>\n+inline uint256 Hash(const T1 p1begin, const T1 p1end,\n+                    const T2 p2begin, const T2 p2end,\n+                    const T3 p3begin, const T3 p3end) {\n+    static const unsigned char pblank[1] = {};\n+    uint256 result;\n+    CHash256().Write(p1begin == p1end ? pblank : (const unsigned char*)&p1begin[0], (p1end - p1begin) * sizeof(p1begin[0]))\n+              .Write(p2begin == p2end ? pblank : (const unsigned char*)&p2begin[0], (p2end - p2begin) * sizeof(p2begin[0]))\n+              .Write(p3begin == p3end ? pblank : (const unsigned char*)&p3begin[0], (p3end - p3begin) * sizeof(p3begin[0]))\n+              .Finalize((unsigned char*)&result);\n+    return result;\n+}\n+\n /** Compute the 160-bit hash an object. */\n template<typename T1>\n inline uint160 Hash160(const T1 pbegin, const T1 pend)\n@@ -154,7 +168,7 @@ class CHashVerifier : public CHashWriter\n     Source* source;\n \n public:\n-    explicit CHashVerifier(Source* source_) : CHashWriter(source_->GetType(), source_->GetVersion()), source(source_) {}\n+    CHashVerifier(Source* source_) : CHashWriter(source_->GetType(), source_->GetVersion()), source(source_) {}\n \n     void read(char* pch, size_t nSize)\n     {"
      },
      {
        "sha": "dd219c72915024bca6cd28f1e88e8c871ff52032",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 20,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,19 +2,19 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <httprpc.h>\n-\n-#include <base58.h>\n-#include <chainparams.h>\n-#include <httpserver.h>\n-#include <rpc/protocol.h>\n-#include <rpc/server.h>\n-#include <random.h>\n-#include <sync.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n-#include <ui_interface.h>\n-#include <crypto/hmac_sha256.h>\n+#include \"httprpc.h\"\n+\n+#include \"base58.h\"\n+#include \"chainparams.h\"\n+#include \"httpserver.h\"\n+#include \"rpc/protocol.h\"\n+#include \"rpc/server.h\"\n+#include \"random.h\"\n+#include \"sync.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+#include \"ui_interface.h\"\n+#include \"crypto/hmac_sha256.h\"\n #include <stdio.h>\n \n #include <boost/algorithm/string.hpp> // boost::trim\n@@ -43,7 +43,7 @@ class HTTPRPCTimer : public RPCTimerBase\n class HTTPRPCTimerInterface : public RPCTimerInterface\n {\n public:\n-    explicit HTTPRPCTimerInterface(struct event_base* _base) : base(_base)\n+    HTTPRPCTimerInterface(struct event_base* _base) : base(_base)\n     {\n     }\n     const char* Name() override\n@@ -62,7 +62,7 @@ class HTTPRPCTimerInterface : public RPCTimerInterface\n /* Pre-base64-encoded authentication token */\n static std::string strRPCUserColonPass;\n /* Stored RPC timer interface (for unregistration) */\n-static std::unique_ptr<HTTPRPCTimerInterface> httpRPCTimerInterface;\n+static HTTPRPCTimerInterface* httpRPCTimerInterface = 0;\n \n static void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const UniValue& id)\n {\n@@ -192,7 +192,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n \n         // array of requests\n         } else if (valRequest.isArray())\n-            strReply = JSONRPCExecBatch(jreq, valRequest.get_array());\n+            strReply = JSONRPCExecBatch(valRequest.get_array());\n         else\n             throw JSONRPCError(RPC_PARSE_ERROR, \"Top-level object parse error\");\n \n@@ -238,8 +238,8 @@ bool StartHTTPRPC()\n     RegisterHTTPHandler(\"/wallet/\", false, HTTPReq_JSONRPC);\n #endif\n     assert(EventBase());\n-    httpRPCTimerInterface = MakeUnique<HTTPRPCTimerInterface>(EventBase());\n-    RPCSetTimerInterface(httpRPCTimerInterface.get());\n+    httpRPCTimerInterface = new HTTPRPCTimerInterface(EventBase());\n+    RPCSetTimerInterface(httpRPCTimerInterface);\n     return true;\n }\n \n@@ -253,7 +253,8 @@ void StopHTTPRPC()\n     LogPrint(BCLog::RPC, \"Stopping HTTP RPC server\\n\");\n     UnregisterHTTPHandler(\"/\", true);\n     if (httpRPCTimerInterface) {\n-        RPCUnsetTimerInterface(httpRPCTimerInterface.get());\n-        httpRPCTimerInterface.reset();\n+        RPCUnsetTimerInterface(httpRPCTimerInterface);\n+        delete httpRPCTimerInterface;\n+        httpRPCTimerInterface = 0;\n     }\n }"
      },
      {
        "sha": "86b37f79bb46d2243ee6d85f204782b4cc1e9f72",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 49,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,16 +2,16 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <httpserver.h>\n+#include \"httpserver.h\"\n \n-#include <chainparamsbase.h>\n-#include <compat.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n-#include <netbase.h>\n-#include <rpc/protocol.h> // For HTTP status codes\n-#include <sync.h>\n-#include <ui_interface.h>\n+#include \"chainparamsbase.h\"\n+#include \"compat.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+#include \"netbase.h\"\n+#include \"rpc/protocol.h\" // For HTTP status codes\n+#include \"sync.h\"\n+#include \"ui_interface.h\"\n \n #include <stdio.h>\n #include <stdlib.h>\n@@ -24,11 +24,10 @@\n \n #include <event2/thread.h>\n #include <event2/buffer.h>\n-#include <event2/bufferevent.h>\n #include <event2/util.h>\n #include <event2/keyvalq_struct.h>\n \n-#include <support/events.h>\n+#include \"support/events.h\"\n \n #ifdef EVENT__HAVE_NETINET_IN_H\n #include <netinet/in.h>\n@@ -41,7 +40,7 @@\n static const size_t MAX_HEADERS_SIZE = 8192;\n \n /** HTTP request work item */\n-class HTTPWorkItem final : public HTTPClosure\n+class HTTPWorkItem : public HTTPClosure\n {\n public:\n     HTTPWorkItem(std::unique_ptr<HTTPRequest> _req, const std::string &_path, const HTTPRequestHandler& _func):\n@@ -80,7 +79,7 @@ class WorkQueue\n     {\n     public:\n         WorkQueue &wq;\n-        explicit ThreadCounter(WorkQueue &w): wq(w)\n+        ThreadCounter(WorkQueue &w): wq(w)\n         {\n             std::lock_guard<std::mutex> lock(wq.cs);\n             wq.numThreads += 1;\n@@ -94,7 +93,7 @@ class WorkQueue\n     };\n \n public:\n-    explicit WorkQueue(size_t _maxDepth) : running(true),\n+    WorkQueue(size_t _maxDepth) : running(true),\n                                  maxDepth(_maxDepth),\n                                  numThreads(0)\n     {\n@@ -165,13 +164,13 @@ struct HTTPPathHandler\n /** HTTP module state */\n \n //! libevent event loop\n-static struct event_base* eventBase = nullptr;\n+static struct event_base* eventBase = 0;\n //! HTTP server\n-struct evhttp* eventHTTP = nullptr;\n+struct evhttp* eventHTTP = 0;\n //! List of subnets to allow RPC connections from\n static std::vector<CSubNet> rpc_allow_subnets;\n //! Work queue for handling longer requests off the event loop thread\n-static WorkQueue<HTTPClosure>* workQueue = nullptr;\n+static WorkQueue<HTTPClosure>* workQueue = 0;\n //! Handlers for (sub)paths\n std::vector<HTTPPathHandler> pathHandlers;\n //! Bound listening sockets\n@@ -240,16 +239,6 @@ static std::string RequestMethodString(HTTPRequest::RequestMethod m)\n /** HTTP request callback */\n static void http_request_cb(struct evhttp_request* req, void* arg)\n {\n-    // Disable reading to work around a libevent bug, fixed in 2.2.0.\n-    if (event_get_version_number() >= 0x02010600 && event_get_version_number() < 0x02020001) {\n-        evhttp_connection* conn = evhttp_request_get_connection(req);\n-        if (conn) {\n-            bufferevent* bev = evhttp_connection_get_bufferevent(conn);\n-            if (bev) {\n-                bufferevent_disable(bev, EV_READ);\n-            }\n-        }\n-    }\n     std::unique_ptr<HTTPRequest> hreq(new HTTPRequest(req));\n \n     LogPrint(BCLog::HTTP, \"Received a %s request for %s from %s\\n\",\n@@ -427,7 +416,7 @@ bool InitHTTPServer()\n     LogPrintf(\"HTTP: creating work queue of depth %d\\n\", workQueueDepth);\n \n     workQueue = new WorkQueue<HTTPClosure>(workQueueDepth);\n-    // transfer ownership to eventBase/HTTP via .release()\n+    // tranfer ownership to eventBase/HTTP via .release()\n     eventBase = base_ctr.release();\n     eventHTTP = http_ctr.release();\n     return true;\n@@ -492,8 +481,6 @@ void StopHTTPServer()\n     }\n     if (eventBase) {\n         LogPrint(BCLog::HTTP, \"Waiting for HTTP event thread to exit\\n\");\n-        // Exit the event loop as soon as there are no active events.\n-        event_base_loopexit(eventBase, nullptr);\n         // Give event loop a few seconds to exit (to send back last RPC responses), then break it\n         // Before this was solved with event_base_loopexit, but that didn't work as expected in\n         // at least libevent 2.0.21 and always introduced a delay. In libevent\n@@ -508,11 +495,11 @@ void StopHTTPServer()\n     }\n     if (eventHTTP) {\n         evhttp_free(eventHTTP);\n-        eventHTTP = nullptr;\n+        eventHTTP = 0;\n     }\n     if (eventBase) {\n         event_base_free(eventBase);\n-        eventBase = nullptr;\n+        eventBase = 0;\n     }\n     LogPrint(BCLog::HTTP, \"Stopped HTTP server\\n\");\n }\n@@ -612,24 +599,11 @@ void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n     struct evbuffer* evb = evhttp_request_get_output_buffer(req);\n     assert(evb);\n     evbuffer_add(evb, strReply.data(), strReply.size());\n-    auto req_copy = req;\n-    HTTPEvent* ev = new HTTPEvent(eventBase, true, [req_copy, nStatus]{\n-        evhttp_send_reply(req_copy, nStatus, nullptr, nullptr);\n-        // Re-enable reading from the socket. This is the second part of the libevent\n-        // workaround above.\n-        if (event_get_version_number() >= 0x02010600 && event_get_version_number() < 0x02020001) {\n-            evhttp_connection* conn = evhttp_request_get_connection(req_copy);\n-            if (conn) {\n-                bufferevent* bev = evhttp_connection_get_bufferevent(conn);\n-                if (bev) {\n-                    bufferevent_enable(bev, EV_READ | EV_WRITE);\n-                }\n-            }\n-        }\n-    });\n-    ev->trigger(nullptr);\n+    HTTPEvent* ev = new HTTPEvent(eventBase, true,\n+        std::bind(evhttp_send_reply, req, nStatus, (const char*)nullptr, (struct evbuffer *)nullptr));\n+    ev->trigger(0);\n     replySent = true;\n-    req = nullptr; // transferred back to main thread\n+    req = 0; // transferred back to main thread\n }\n \n CService HTTPRequest::GetPeer()"
      },
      {
        "sha": "3e434bf0a0b263ae1a26924710f29f2c5a33bf79",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -61,7 +61,7 @@ class HTTPRequest\n     bool replySent;\n \n public:\n-    explicit HTTPRequest(struct evhttp_request* req);\n+    HTTPRequest(struct evhttp_request* req);\n     ~HTTPRequest();\n \n     enum RequestMethod {"
      },
      {
        "sha": "6be6b83d41c0622af34e561558444b819110bf0d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 145,
        "deletions": 160,
        "changes": 305,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -4,49 +4,48 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <init.h>\n-\n-#include <addrman.h>\n-#include <amount.h>\n-#include <chain.h>\n-#include <chainparams.h>\n-#include <checkpoints.h>\n-#include <compat/sanity.h>\n-#include <consensus/validation.h>\n-#include <fs.h>\n-#include <httpserver.h>\n-#include <httprpc.h>\n-#include <key.h>\n-#include <validation.h>\n-#include <miner.h>\n-#include <netbase.h>\n-#include <net.h>\n-#include <net_processing.h>\n-#include <policy/feerate.h>\n-#include <policy/fees.h>\n-#include <policy/policy.h>\n-#include <rpc/server.h>\n-#include <rpc/register.h>\n-#include <rpc/safemode.h>\n-#include <rpc/blockchain.h>\n-#include <script/standard.h>\n-#include <script/sigcache.h>\n-#include <scheduler.h>\n-#include <timedata.h>\n-#include <txdb.h>\n-#include <txmempool.h>\n-#include <torcontrol.h>\n-#include <ui_interface.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n-#include <validationinterface.h>\n+#include \"init.h\"\n+\n+#include \"addrman.h\"\n+#include \"amount.h\"\n+#include \"chain.h\"\n+#include \"chainparams.h\"\n+#include \"checkpoints.h\"\n+#include \"compat/sanity.h\"\n+#include \"consensus/validation.h\"\n+#include \"fs.h\"\n+#include \"httpserver.h\"\n+#include \"httprpc.h\"\n+#include \"key.h\"\n+#include \"validation.h\"\n+#include \"miner.h\"\n+#include \"netbase.h\"\n+#include \"net.h\"\n+#include \"net_processing.h\"\n+#include \"policy/feerate.h\"\n+#include \"policy/fees.h\"\n+#include \"policy/policy.h\"\n+#include \"rpc/server.h\"\n+#include \"rpc/register.h\"\n+#include \"rpc/blockchain.h\"\n+#include \"script/standard.h\"\n+#include \"script/sigcache.h\"\n+#include \"scheduler.h\"\n+#include \"timedata.h\"\n+#include \"txdb.h\"\n+#include \"txmempool.h\"\n+#include \"torcontrol.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n #ifdef ENABLE_WALLET\n-#include <wallet/init.h>\n+#include \"wallet/wallet.h\"\n #endif\n-#include <warnings.h>\n+#include \"warnings.h\"\n #include <stdint.h>\n #include <stdio.h>\n #include <memory>\n@@ -64,12 +63,17 @@\n #include <openssl/crypto.h>\n \n #if ENABLE_ZMQ\n-#include <zmq/zmqnotificationinterface.h>\n+#include \"zmq/zmqnotificationinterface.h\"\n+#endif\n+\n+#ifdef USE_SSE2\n+#include \"crypto/scrypt.h\"\n #endif\n \n bool fFeeEstimatesInitialized = false;\n static const bool DEFAULT_PROXYRANDOMIZE = true;\n static const bool DEFAULT_REST_ENABLE = false;\n+static const bool DEFAULT_DISABLE_SAFEMODE = false;\n static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n \n std::unique_ptr<CConnman> g_connman;\n@@ -102,11 +106,12 @@ static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n // created by AppInit() or the Qt main() function.\n //\n // A clean exit happens when StartShutdown() or the SIGTERM\n-// signal handler sets fRequestShutdown, which makes main thread's\n-// WaitForShutdown() interrupts the thread group.\n-// And then, WaitForShutdown() makes all other on-going threads\n-// in the thread group join the main thread.\n-// Shutdown() is then called to clean up database connections, and stop other\n+// signal handler sets fRequestShutdown, which triggers\n+// the DetectShutdownThread(), which interrupts the main thread group.\n+// DetectShutdownThread() then exits, which causes AppInit() to\n+// continue (it .joins the shutdown thread).\n+// Shutdown() is then\n+// called to clean up database connections, and stop other\n // threads that should only be stopped after the main network-processing\n // threads have exited.\n //\n@@ -132,10 +137,10 @@ bool ShutdownRequested()\n  * chainstate, while keeping user interface out of the common library, which is shared\n  * between bitcoind, and bitcoin-qt and non-server tools.\n */\n-class CCoinsViewErrorCatcher final : public CCoinsViewBacked\n+class CCoinsViewErrorCatcher : public CCoinsViewBacked\n {\n public:\n-    explicit CCoinsViewErrorCatcher(CCoinsView* view) : CCoinsViewBacked(view) {}\n+    CCoinsViewErrorCatcher(CCoinsView* view) : CCoinsViewBacked(view) {}\n     bool GetCoin(const COutPoint &outpoint, Coin &coin) const override {\n         try {\n             return CCoinsViewBacked::GetCoin(outpoint, coin);\n@@ -152,7 +157,7 @@ class CCoinsViewErrorCatcher final : public CCoinsViewBacked\n     // Writes do not need similar protection, as failure to write is handled by the caller.\n };\n \n-static std::unique_ptr<CCoinsViewErrorCatcher> pcoinscatcher;\n+static CCoinsViewErrorCatcher *pcoinscatcher = nullptr;\n static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n \n void Interrupt(boost::thread_group& threadGroup)\n@@ -187,18 +192,17 @@ void Shutdown()\n     StopRPC();\n     StopHTTPServer();\n #ifdef ENABLE_WALLET\n-    FlushWallets();\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->Flush(false);\n+    }\n #endif\n     MapPort(false);\n-\n-    // Because these depend on each-other, we make sure that neither can be\n-    // using the other before destroying them.\n-    if (peerLogic) UnregisterValidationInterface(peerLogic.get());\n-    if (g_connman) g_connman->Stop();\n+    UnregisterValidationInterface(peerLogic.get());\n     peerLogic.reset();\n     g_connman.reset();\n \n     StopTorControl();\n+    UnregisterNodeSignals(GetNodeSignals());\n     if (fDumpMempoolLater && gArgs.GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n         DumpMempool();\n     }\n@@ -235,13 +239,19 @@ void Shutdown()\n         if (pcoinsTip != nullptr) {\n             FlushStateToDisk();\n         }\n-        pcoinsTip.reset();\n-        pcoinscatcher.reset();\n-        pcoinsdbview.reset();\n-        pblocktree.reset();\n+        delete pcoinsTip;\n+        pcoinsTip = nullptr;\n+        delete pcoinscatcher;\n+        pcoinscatcher = nullptr;\n+        delete pcoinsdbview;\n+        pcoinsdbview = nullptr;\n+        delete pblocktree;\n+        pblocktree = nullptr;\n     }\n #ifdef ENABLE_WALLET\n-    StopWallets();\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->Flush(true);\n+    }\n #endif\n \n #if ENABLE_ZMQ\n@@ -261,9 +271,11 @@ void Shutdown()\n #endif\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n-    GetMainSignals().UnregisterWithMempoolSignals(mempool);\n #ifdef ENABLE_WALLET\n-    CloseWallets();\n+    for (CWalletRef pwallet : vpwallets) {\n+        delete pwallet;\n+    }\n+    vpwallets.clear();\n #endif\n     globalVerifyHandle.reset();\n     ECC_Stop();\n@@ -309,6 +321,15 @@ void OnRPCStopped()\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n \n+void OnRPCPreCommand(const CRPCCommand& cmd)\n+{\n+    // Observe safe mode\n+    std::string strWarning = GetWarnings(\"rpc\");\n+    if (strWarning != \"\" && !gArgs.GetBoolArg(\"-disablesafemode\", DEFAULT_DISABLE_SAFEMODE) &&\n+        !cmd.okSafeMode)\n+        throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, std::string(\"Safe mode: \") + strWarning);\n+}\n+\n std::string HelpMessage(HelpMessageMode mode)\n {\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n@@ -342,13 +363,9 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER));\n     strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file on startup\"));\n-    strUsage += HelpMessageOpt(\"-debuglogfile=<file>\", strprintf(_(\"Specify location of debug log file: this can be an absolute path or a path relative to the data directory (default: %s)\"), DEFAULT_DEBUGLOGFILE));\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n-    if (showDebug) {\n-        strUsage += HelpMessageOpt(\"-minimumchainwork=<hex>\", strprintf(\"Minimum work assumed to exist on a valid chain in hex (default: %s, testnet: %s)\", defaultChainParams->GetConsensus().nMinimumChainWork.GetHex(), testnetChainParams->GetConsensus().nMinimumChainWork.GetHex()));\n-    }\n     strUsage += HelpMessageOpt(\"-persistmempool\", strprintf(_(\"Whether to save the mempool on shutdown and load on restart (default: %u)\"), DEFAULT_PERSIST_MEMPOOL));\n     strUsage += HelpMessageOpt(\"-blockreconstructionextratxn=<n>\", strprintf(_(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\"), DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n@@ -367,11 +384,11 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-txindex\", strprintf(_(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\"), DEFAULT_TXINDEX));\n \n     strUsage += HelpMessageGroup(_(\"Connection options:\"));\n-    strUsage += HelpMessageOpt(\"-addnode=<ip>\", _(\"Add a node to connect to and attempt to keep the connection open (see the `addnode` RPC command help for more info)\"));\n+    strUsage += HelpMessageOpt(\"-addnode=<ip>\", _(\"Add a node to connect to and attempt to keep the connection open\"));\n     strUsage += HelpMessageOpt(\"-banscore=<n>\", strprintf(_(\"Threshold for disconnecting misbehaving peers (default: %u)\"), DEFAULT_BANSCORE_THRESHOLD));\n     strUsage += HelpMessageOpt(\"-bantime=<n>\", strprintf(_(\"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\"), DEFAULT_MISBEHAVING_BANTIME));\n     strUsage += HelpMessageOpt(\"-bind=<addr>\", _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\"));\n-    strUsage += HelpMessageOpt(\"-connect=<ip>\", _(\"Connect only to the specified node(s); -connect=0 disables automatic connections (the rules for this peer are the same as for -addnode)\"));\n+    strUsage += HelpMessageOpt(\"-connect=<ip>\", _(\"Connect only to the specified node(s); -connect=0 disables automatic connections\"));\n     strUsage += HelpMessageOpt(\"-discover\", _(\"Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)\"));\n     strUsage += HelpMessageOpt(\"-dns\", _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_NAME_LOOKUP));\n     strUsage += HelpMessageOpt(\"-dnsseed\", _(\"Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect used)\"));\n@@ -407,7 +424,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxuploadtarget=<n>\", strprintf(_(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\"), DEFAULT_MAX_UPLOAD_TARGET));\n \n #ifdef ENABLE_WALLET\n-    strUsage += GetWalletHelpString(showDebug);\n+    strUsage += CWallet::GetWalletHelpString(showDebug);\n #endif\n \n #if ENABLE_ZMQ\n@@ -428,7 +445,6 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", defaultChainParams->DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED));\n         strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", DEFAULT_DISABLE_SAFEMODE));\n-        strUsage += HelpMessageOpt(\"-deprecatedrpc=<method>\", \"Allows deprecated RPC method(s) to be used\");\n         strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", DEFAULT_TESTSAFEMODE));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n@@ -467,7 +483,7 @@ std::string HelpMessage(HelpMessageMode mode)\n \n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     if (showDebug) {\n-        strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", !testnetChainParams->RequireStandard()));\n+        strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", defaultChainParams->RequireStandard()));\n         strUsage += HelpMessageOpt(\"-incrementalrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to define cost of relay, used for mempool limiting and BIP 125 replacement. (default: %s)\", CURRENCY_UNIT, FormatMoney(DEFAULT_INCREMENTAL_RELAY_FEE)));\n         strUsage += HelpMessageOpt(\"-dustrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to defined dust, the value of an output such that it will cost more than its value in fees at this fee rate to spend it. (default: %s)\", CURRENCY_UNIT, FormatMoney(DUST_RELAY_TX_FEE)));\n     }\n@@ -482,7 +498,7 @@ std::string HelpMessage(HelpMessageMode mode)\n \n     strUsage += HelpMessageGroup(_(\"Block creation options:\"));\n     strUsage += HelpMessageOpt(\"-blockmaxweight=<n>\", strprintf(_(\"Set maximum BIP141 block weight (default: %d)\"), DEFAULT_BLOCK_MAX_WEIGHT));\n-    strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", _(\"Set maximum BIP141 block weight to this * 4. Deprecated, use blockmaxweight\"));\n+    strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE));\n     strUsage += HelpMessageOpt(\"-blockmintxfee=<amt>\", strprintf(_(\"Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)\"), CURRENCY_UNIT, FormatMoney(DEFAULT_BLOCK_MIN_TX_FEE)));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blockversion=<n>\", \"Override block version to test forking scenarios\");\n@@ -509,10 +525,10 @@ std::string HelpMessage(HelpMessageMode mode)\n \n std::string LicenseInfo()\n {\n-    const std::string URL_SOURCE_CODE = \"<https://github.com/bitcoin/bitcoin>\";\n-    const std::string URL_WEBSITE = \"<https://bitcoincore.org>\";\n+    const std::string URL_SOURCE_CODE = \"<https://github.com/litecoin-project/litecoin>\";\n+    const std::string URL_WEBSITE = \"<https://litecoin.org>\";\n \n-    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\"), 2009, COPYRIGHT_YEAR) + \" \") + \"\\n\" +\n+    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\"), 2011, COPYRIGHT_YEAR) + \" \") + \"\\n\" +\n            \"\\n\" +\n            strprintf(_(\"Please contribute if you find %s useful. \"\n                        \"Visit %s for further information about the software.\"),\n@@ -535,21 +551,20 @@ static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex\n         return;\n \n     std::string strCmd = gArgs.GetArg(\"-blocknotify\", \"\");\n-    if (!strCmd.empty()) {\n-        boost::replace_all(strCmd, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n-        boost::thread t(runCommand, strCmd); // thread runs free\n-    }\n+\n+    boost::replace_all(strCmd, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n+    boost::thread t(runCommand, strCmd); // thread runs free\n }\n \n static bool fHaveGenesis = false;\n-static CWaitableCriticalSection cs_GenesisWait;\n+static boost::mutex cs_GenesisWait;\n static CConditionVariable condvar_GenesisWait;\n \n static void BlockNotifyGenesisWait(bool, const CBlockIndex *pBlockIndex)\n {\n     if (pBlockIndex != nullptr) {\n         {\n-            WaitableLock lock_GenesisWait(cs_GenesisWait);\n+            boost::unique_lock<boost::mutex> lock_GenesisWait(cs_GenesisWait);\n             fHaveGenesis = true;\n         }\n         condvar_GenesisWait.notify_all();\n@@ -586,7 +601,7 @@ void CleanupBlockRevFiles()\n     LogPrintf(\"Removing unusable blk?????.dat and rev?????.dat files for -reindex with -prune\\n\");\n     fs::path blocksdir = GetDataDir() / \"blocks\";\n     for (fs::directory_iterator it(blocksdir); it != fs::directory_iterator(); it++) {\n-        if (fs::is_regular_file(*it) &&\n+        if (is_regular_file(*it) &&\n             it->path().filename().string().length() == 12 &&\n             it->path().filename().string().substr(8,4) == \".dat\")\n         {\n@@ -709,6 +724,7 @@ bool AppInitServers(boost::thread_group& threadGroup)\n {\n     RPCServer::OnStarted(&OnRPCStarted);\n     RPCServer::OnStopped(&OnRPCStopped);\n+    RPCServer::OnPreCommand(&OnRPCPreCommand);\n     if (!InitHTTPServer())\n         return false;\n     if (!StartRPC())\n@@ -784,15 +800,6 @@ void InitParameterInteraction()\n         if (gArgs.SoftSetBoolArg(\"-whitelistrelay\", true))\n             LogPrintf(\"%s: parameter interaction: -whitelistforcerelay=1 -> setting -whitelistrelay=1\\n\", __func__);\n     }\n-\n-    if (gArgs.IsArgSet(\"-blockmaxsize\")) {\n-        unsigned int max_size = gArgs.GetArg(\"-blockmaxsize\", 0);\n-        if (gArgs.SoftSetArg(\"blockmaxweight\", strprintf(\"%d\", max_size * WITNESS_SCALE_FACTOR))) {\n-            LogPrintf(\"%s: parameter interaction: -blockmaxsize=%d -> setting -blockmaxweight=%d (-blockmaxsize is deprecated!)\\n\", __func__, max_size, max_size * WITNESS_SCALE_FACTOR);\n-        } else {\n-            LogPrintf(\"%s: Ignoring blockmaxsize setting which is overridden by blockmaxweight\", __func__);\n-        }\n-    }\n }\n \n static std::string ResolveErrMsg(const char * const optname, const std::string& strBind)\n@@ -808,15 +815,16 @@ void InitLogging()\n     fLogIPs = gArgs.GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n \n     LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n-    LogPrintf(\"Bitcoin version %s\\n\", FormatFullVersion());\n+    LogPrintf(\"Litecoin version %s\\n\", FormatFullVersion());\n }\n \n namespace { // Variables internal to initialization process only\n \n+ServiceFlags nRelevantServices = NODE_NETWORK;\n int nMaxConnections;\n int nUserMaxConnections;\n int nFD;\n-ServiceFlags nLocalServices = ServiceFlags(NODE_NETWORK | NODE_NETWORK_LIMITED);\n+ServiceFlags nLocalServices = NODE_NETWORK;\n \n } // namespace\n \n@@ -920,8 +928,7 @@ bool AppInitParameterInteraction()\n         // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n         const std::vector<std::string> categories = gArgs.GetArgs(\"-debug\");\n \n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n+        if (find(categories.begin(), categories.end(), std::string(\"0\")) == categories.end()) {\n             for (const auto& cat : categories) {\n                 uint32_t flag = 0;\n                 if (!GetLogCategory(&flag, &cat)) {\n@@ -976,20 +983,6 @@ bool AppInitParameterInteraction()\n     else\n         LogPrintf(\"Validating signatures for all blocks.\\n\");\n \n-    if (gArgs.IsArgSet(\"-minimumchainwork\")) {\n-        const std::string minChainWorkStr = gArgs.GetArg(\"-minimumchainwork\", \"\");\n-        if (!IsHexNumber(minChainWorkStr)) {\n-            return InitError(strprintf(\"Invalid non-hex (%s) minimum chain work value specified\", minChainWorkStr));\n-        }\n-        nMinimumChainWork = UintToArith256(uint256S(minChainWorkStr));\n-    } else {\n-        nMinimumChainWork = UintToArith256(chainparams.GetConsensus().nMinimumChainWork);\n-    }\n-    LogPrintf(\"Setting nMinimumChainWork=%s\\n\", nMinimumChainWork.GetHex());\n-    if (nMinimumChainWork < UintToArith256(chainparams.GetConsensus().nMinimumChainWork)) {\n-        LogPrintf(\"Warning: nMinimumChainWork set below default value of %s\\n\", chainparams.GetConsensus().nMinimumChainWork.GetHex());\n-    }\n-\n     // mempool limits\n     int64_t nMempoolSizeMax = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     int64_t nMempoolSizeMin = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000 * 40;\n@@ -1032,6 +1025,11 @@ bool AppInitParameterInteraction()\n         fPruneMode = true;\n     }\n \n+    RegisterAllCoreRPCCommands(tableRPC);\n+#ifdef ENABLE_WALLET\n+    RegisterWalletRPCCommands(tableRPC);\n+#endif\n+\n     nConnectTimeout = gArgs.GetArg(\"-timeout\", DEFAULT_CONNECT_TIMEOUT);\n     if (nConnectTimeout <= 0)\n         nConnectTimeout = DEFAULT_CONNECT_TIMEOUT;\n@@ -1041,7 +1039,7 @@ bool AppInitParameterInteraction()\n         if (!ParseMoney(gArgs.GetArg(\"-minrelaytxfee\", \"\"), n)) {\n             return InitError(AmountErrMsg(\"minrelaytxfee\", gArgs.GetArg(\"-minrelaytxfee\", \"\")));\n         }\n-        // High fee check is done afterward in WalletParameterInteraction()\n+        // High fee check is done afterward in CWallet::ParameterInteraction()\n         ::minRelayTxFee = CFeeRate(n);\n     } else if (incrementalRelayFee > ::minRelayTxFee) {\n         // Allow only setting incrementalRelayFee to control both\n@@ -1074,7 +1072,7 @@ bool AppInitParameterInteraction()\n     nBytesPerSigOp = gArgs.GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n #ifdef ENABLE_WALLET\n-    if (!WalletParameterInteraction())\n+    if (!CWallet::ParameterInteraction())\n         return false;\n #endif\n \n@@ -1210,11 +1208,8 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         ShrinkDebugFile();\n     }\n \n-    if (fPrintToDebugLog) {\n-        if (!OpenDebugLog()) {\n-            return InitError(strprintf(\"Could not open debug log file %s\", GetDebugLogPath().string()));\n-        }\n-    }\n+    if (fPrintToDebugLog)\n+        OpenDebugLog();\n \n     if (!fLogTimestamps)\n         LogPrintf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()));\n@@ -1237,15 +1232,6 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     threadGroup.create_thread(boost::bind(&TraceThread<CScheduler::Function>, \"scheduler\", serviceLoop));\n \n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n-    GetMainSignals().RegisterWithMempoolSignals(mempool);\n-\n-    /* Register RPC commands regardless of -server setting so they will be\n-     * available in the GUI RPC console even if external calls are disabled.\n-     */\n-    RegisterAllCoreRPCCommands(tableRPC);\n-#ifdef ENABLE_WALLET\n-    RegisterWalletRPC(tableRPC);\n-#endif\n \n     /* Start the RPC server already.  It will be started in \"warmup\" mode\n      * and not really process calls already (but it will signify connections\n@@ -1261,9 +1247,14 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     int64_t nStart;\n \n+#if defined(USE_SSE2)\n+    std::string sse2detect = scrypt_detect_sse2();\n+    LogPrintf(\"%s\\n\", sse2detect);\n+#endif\n+\n     // ********************************************************* Step 5: verify wallet database integrity\n #ifdef ENABLE_WALLET\n-    if (!VerifyWallets())\n+    if (!CWallet::Verify())\n         return false;\n #endif\n     // ********************************************************* Step 6: network initialization\n@@ -1276,8 +1267,9 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     g_connman = std::unique_ptr<CConnman>(new CConnman(GetRand(std::numeric_limits<uint64_t>::max()), GetRand(std::numeric_limits<uint64_t>::max())));\n     CConnman& connman = *g_connman;\n \n-    peerLogic.reset(new PeerLogicValidation(&connman, scheduler));\n+    peerLogic.reset(new PeerLogicValidation(&connman));\n     RegisterValidationInterface(peerLogic.get());\n+    RegisterNodeSignals(GetNodeSignals());\n \n     // sanitize comments per BIP-0014, format user agent and check total size\n     std::vector<std::string> uacomments;\n@@ -1412,10 +1404,12 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         do {\n             try {\n                 UnloadBlockIndex();\n-                pcoinsTip.reset();\n-                pcoinsdbview.reset();\n-                pcoinscatcher.reset();\n-                pblocktree.reset(new CBlockTreeDB(nBlockTreeDBCache, false, fReset));\n+                delete pcoinsTip;\n+                delete pcoinsdbview;\n+                delete pcoinscatcher;\n+                delete pblocktree;\n+\n+                pblocktree = new CBlockTreeDB(nBlockTreeDBCache, false, fReset);\n \n                 if (fReset) {\n                     pblocktree->WriteReindexing(true);\n@@ -1466,8 +1460,8 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 // At this point we're either in reindex or we've loaded a useful\n                 // block tree into mapBlockIndex!\n \n-                pcoinsdbview.reset(new CCoinsViewDB(nCoinDBCache, false, fReset || fReindexChainState));\n-                pcoinscatcher.reset(new CCoinsViewErrorCatcher(pcoinsdbview.get()));\n+                pcoinsdbview = new CCoinsViewDB(nCoinDBCache, false, fReset || fReindexChainState);\n+                pcoinscatcher = new CCoinsViewErrorCatcher(pcoinsdbview);\n \n                 // If necessary, upgrade from older database format.\n                 // This is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n@@ -1477,13 +1471,13 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 }\n \n                 // ReplayBlocks is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n-                if (!ReplayBlocks(chainparams, pcoinsdbview.get())) {\n+                if (!ReplayBlocks(chainparams, pcoinsdbview)) {\n                     strLoadError = _(\"Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.\");\n                     break;\n                 }\n \n                 // The on-disk coinsdb is now in a good state, create the cache\n-                pcoinsTip.reset(new CCoinsViewCache(pcoinscatcher.get()));\n+                pcoinsTip = new CCoinsViewCache(pcoinscatcher);\n \n                 bool is_coinsview_empty = fReset || fReindexChainState || pcoinsTip->GetBestBlock().IsNull();\n                 if (!is_coinsview_empty) {\n@@ -1525,7 +1519,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                         }\n                     }\n \n-                    if (!CVerifyDB().VerifyDB(chainparams, pcoinsdbview.get(), gArgs.GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n+                    if (!CVerifyDB().VerifyDB(chainparams, pcoinsdbview, gArgs.GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n                                   gArgs.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n                         strLoadError = _(\"Corrupted block database detected\");\n                         break;\n@@ -1581,7 +1575,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n-    if (!OpenWallets())\n+    if (!CWallet::InitLoadWallet())\n         return false;\n #else\n     LogPrintf(\"No wallet support compiled in!\\n\");\n@@ -1607,6 +1601,9 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         // Note that setting NODE_WITNESS is never required: the only downside from not\n         // doing so is that after activation, no upgraded nodes will fetch from you.\n         nLocalServices = ServiceFlags(nLocalServices | NODE_WITNESS);\n+        // Only care about others providing witness capabilities if there is a softfork\n+        // defined.\n+        nRelevantServices = ServiceFlags(nRelevantServices | NODE_WITNESS);\n     }\n \n     // ********************************************************* Step 10: import blocks\n@@ -1634,7 +1631,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // Wait for genesis block to be processed\n     {\n-        WaitableLock lock(cs_GenesisWait);\n+        boost::unique_lock<boost::mutex> lock(cs_GenesisWait);\n         while (!fHaveGenesis) {\n             condvar_GenesisWait.wait(lock);\n         }\n@@ -1643,16 +1640,9 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // ********************************************************* Step 11: start node\n \n-    int chain_active_height;\n-\n     //// debug print\n-    {\n-        LOCK(cs_main);\n-        LogPrintf(\"mapBlockIndex.size() = %u\\n\", mapBlockIndex.size());\n-        chain_active_height = chainActive.Height();\n-    }\n-    LogPrintf(\"nBestHeight = %d\\n\", chain_active_height);\n-\n+    LogPrintf(\"mapBlockIndex.size() = %u\\n\",   mapBlockIndex.size());\n+    LogPrintf(\"nBestHeight = %d\\n\",                   chainActive.Height());\n     if (gArgs.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n         StartTorControl(threadGroup, scheduler);\n \n@@ -1663,16 +1653,15 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     CConnman::Options connOptions;\n     connOptions.nLocalServices = nLocalServices;\n+    connOptions.nRelevantServices = nRelevantServices;\n     connOptions.nMaxConnections = nMaxConnections;\n     connOptions.nMaxOutbound = std::min(MAX_OUTBOUND_CONNECTIONS, connOptions.nMaxConnections);\n     connOptions.nMaxAddnode = MAX_ADDNODE_CONNECTIONS;\n     connOptions.nMaxFeeler = 1;\n-    connOptions.nBestHeight = chain_active_height;\n+    connOptions.nBestHeight = chainActive.Height();\n     connOptions.uiInterface = &uiInterface;\n-    connOptions.m_msgproc = peerLogic.get();\n     connOptions.nSendBufferMaxSize = 1000*gArgs.GetArg(\"-maxsendbuffer\", DEFAULT_MAXSENDBUFFER);\n     connOptions.nReceiveFloodSize = 1000*gArgs.GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER);\n-    connOptions.m_added_nodes = gArgs.GetArgs(\"-addnode\");\n \n     connOptions.nMaxOutboundTimeframe = nMaxOutboundTimeframe;\n     connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n@@ -1703,16 +1692,10 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         connOptions.vWhitelistedRange.push_back(subnet);\n     }\n \n-    connOptions.vSeedNodes = gArgs.GetArgs(\"-seednode\");\n-\n-    // Initiate outbound connections unless connect=0\n-    connOptions.m_use_addrman_outgoing = !gArgs.IsArgSet(\"-connect\");\n-    if (!connOptions.m_use_addrman_outgoing) {\n-        const auto connect = gArgs.GetArgs(\"-connect\");\n-        if (connect.size() != 1 || connect[0] != \"0\") {\n-            connOptions.m_specified_outgoing = connect;\n-        }\n+    if (gArgs.IsArgSet(\"-seednode\")) {\n+        connOptions.vSeedNodes = gArgs.GetArgs(\"-seednode\");\n     }\n+\n     if (!connman.Start(scheduler, connOptions)) {\n         return false;\n     }\n@@ -1723,8 +1706,10 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     uiInterface.InitMessage(_(\"Done loading\"));\n \n #ifdef ENABLE_WALLET\n-    StartWallets(scheduler);\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->postInitProcess(scheduler);\n+    }\n #endif\n \n-    return true;\n+    return !fRequestShutdown;\n }"
      },
      {
        "sha": "315a3978c8243ba2b21807d1b990ceeb2c48e863",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 59,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,96 +1,66 @@\n // Copyright (c) 2009-2016 The Bitcoin Core developers\n-// Copyright (c) 2017 The Zcash developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <key.h>\n+#include \"key.h\"\n \n-#include <arith_uint256.h>\n-#include <crypto/common.h>\n-#include <crypto/hmac_sha512.h>\n-#include <random.h>\n+#include \"arith_uint256.h\"\n+#include \"crypto/common.h\"\n+#include \"crypto/hmac_sha512.h\"\n+#include \"pubkey.h\"\n+#include \"random.h\"\n \n #include <secp256k1.h>\n #include <secp256k1_recovery.h>\n \n static secp256k1_context* secp256k1_context_sign = nullptr;\n \n /** These functions are taken from the libsecp256k1 distribution and are very ugly. */\n-\n-/**\n- * This parses a format loosely based on a DER encoding of the ECPrivateKey type from\n- * section C.4 of SEC 1 <http://www.secg.org/sec1-v2.pdf>, with the following caveats:\n- *\n- * * The octet-length of the SEQUENCE must be encoded as 1 or 2 octets. It is not\n- *   required to be encoded as one octet if it is less than 256, as DER would require.\n- * * The octet-length of the SEQUENCE must not be greater than the remaining\n- *   length of the key encoding, but need not match it (i.e. the encoding may contain\n- *   junk after the encoded SEQUENCE).\n- * * The privateKey OCTET STRING is zero-filled on the left to 32 octets.\n- * * Anything after the encoding of the privateKey OCTET STRING is ignored, whether\n- *   or not it is validly encoded DER.\n- *\n- * out32 must point to an output buffer of length at least 32 bytes.\n- */\n static int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *privkey, size_t privkeylen) {\n     const unsigned char *end = privkey + privkeylen;\n+    int lenb = 0;\n+    int len = 0;\n     memset(out32, 0, 32);\n     /* sequence header */\n-    if (end - privkey < 1 || *privkey != 0x30u) {\n+    if (end < privkey+1 || *privkey != 0x30) {\n         return 0;\n     }\n     privkey++;\n     /* sequence length constructor */\n-    if (end - privkey < 1 || !(*privkey & 0x80u)) {\n+    if (end < privkey+1 || !(*privkey & 0x80)) {\n         return 0;\n     }\n-    size_t lenb = *privkey & ~0x80u; privkey++;\n+    lenb = *privkey & ~0x80; privkey++;\n     if (lenb < 1 || lenb > 2) {\n         return 0;\n     }\n-    if (end - privkey < lenb) {\n+    if (end < privkey+lenb) {\n         return 0;\n     }\n     /* sequence length */\n-    size_t len = privkey[lenb-1] | (lenb > 1 ? privkey[lenb-2] << 8 : 0u);\n+    len = privkey[lenb-1] | (lenb > 1 ? privkey[lenb-2] << 8 : 0);\n     privkey += lenb;\n-    if (end - privkey < len) {\n+    if (end < privkey+len) {\n         return 0;\n     }\n     /* sequence element 0: version number (=1) */\n-    if (end - privkey < 3 || privkey[0] != 0x02u || privkey[1] != 0x01u || privkey[2] != 0x01u) {\n+    if (end < privkey+3 || privkey[0] != 0x02 || privkey[1] != 0x01 || privkey[2] != 0x01) {\n         return 0;\n     }\n     privkey += 3;\n     /* sequence element 1: octet string, up to 32 bytes */\n-    if (end - privkey < 2 || privkey[0] != 0x04u) {\n-        return 0;\n-    }\n-    size_t oslen = privkey[1];\n-    privkey += 2;\n-    if (oslen > 32 || end - privkey < oslen) {\n+    if (end < privkey+2 || privkey[0] != 0x04 || privkey[1] > 0x20 || end < privkey+2+privkey[1]) {\n         return 0;\n     }\n-    memcpy(out32 + (32 - oslen), privkey, oslen);\n+    memcpy(out32 + 32 - privkey[1], privkey + 2, privkey[1]);\n     if (!secp256k1_ec_seckey_verify(ctx, out32)) {\n         memset(out32, 0, 32);\n         return 0;\n     }\n     return 1;\n }\n \n-/**\n- * This serializes to a DER encoding of the ECPrivateKey type from section C.4 of SEC 1\n- * <http://www.secg.org/sec1-v2.pdf>. The optional parameters and publicKey fields are\n- * included.\n- *\n- * privkey must point to an output buffer of length at least CKey::PRIVATE_KEY_SIZE bytes.\n- * privkeylen must initially be set to the size of the privkey buffer. Upon return it\n- * will be set to the number of bytes used in the buffer.\n- * key32 must point to a 32-byte raw private key.\n- */\n static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, int compressed) {\n-    assert(*privkeylen >= CKey::PRIVATE_KEY_SIZE);\n     secp256k1_pubkey pubkey;\n     size_t pubkeylen = 0;\n     if (!secp256k1_ec_pubkey_create(ctx, &pubkey, key32)) {\n@@ -116,11 +86,10 @@ static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *pr\n         memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n         memcpy(ptr, key32, 32); ptr += 32;\n         memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n-        pubkeylen = CPubKey::COMPRESSED_PUBLIC_KEY_SIZE;\n+        pubkeylen = 33;\n         secp256k1_ec_pubkey_serialize(ctx, ptr, &pubkeylen, &pubkey, SECP256K1_EC_COMPRESSED);\n         ptr += pubkeylen;\n         *privkeylen = ptr - privkey;\n-        assert(*privkeylen == CKey::COMPRESSED_PRIVATE_KEY_SIZE);\n     } else {\n         static const unsigned char begin[] = {\n             0x30,0x82,0x01,0x13,0x02,0x01,0x01,0x04,0x20\n@@ -142,11 +111,10 @@ static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *pr\n         memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n         memcpy(ptr, key32, 32); ptr += 32;\n         memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n-        pubkeylen = CPubKey::PUBLIC_KEY_SIZE;\n+        pubkeylen = 65;\n         secp256k1_ec_pubkey_serialize(ctx, ptr, &pubkeylen, &pubkey, SECP256K1_EC_UNCOMPRESSED);\n         ptr += pubkeylen;\n         *privkeylen = ptr - privkey;\n-        assert(*privkeylen == CKey::PRIVATE_KEY_SIZE);\n     }\n     return 1;\n }\n@@ -168,8 +136,8 @@ CPrivKey CKey::GetPrivKey() const {\n     CPrivKey privkey;\n     int ret;\n     size_t privkeylen;\n-    privkey.resize(PRIVATE_KEY_SIZE);\n-    privkeylen = PRIVATE_KEY_SIZE;\n+    privkey.resize(279);\n+    privkeylen = 279;\n     ret = ec_privkey_export_der(secp256k1_context_sign, (unsigned char*) privkey.data(), &privkeylen, begin(), fCompressed ? SECP256K1_EC_COMPRESSED : SECP256K1_EC_UNCOMPRESSED);\n     assert(ret);\n     privkey.resize(privkeylen);\n@@ -179,7 +147,7 @@ CPrivKey CKey::GetPrivKey() const {\n CPubKey CKey::GetPubKey() const {\n     assert(fValid);\n     secp256k1_pubkey pubkey;\n-    size_t clen = CPubKey::PUBLIC_KEY_SIZE;\n+    size_t clen = 65;\n     CPubKey result;\n     int ret = secp256k1_ec_pubkey_create(secp256k1_context_sign, &pubkey, begin());\n     assert(ret);\n@@ -192,8 +160,8 @@ CPubKey CKey::GetPubKey() const {\n bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, uint32_t test_case) const {\n     if (!fValid)\n         return false;\n-    vchSig.resize(CPubKey::SIGNATURE_SIZE);\n-    size_t nSigLen = CPubKey::SIGNATURE_SIZE;\n+    vchSig.resize(72);\n+    size_t nSigLen = 72;\n     unsigned char extra_entropy[32] = {0};\n     WriteLE32(extra_entropy, test_case);\n     secp256k1_ecdsa_signature sig;\n@@ -221,7 +189,7 @@ bool CKey::VerifyPubKey(const CPubKey& pubkey) const {\n bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig) const {\n     if (!fValid)\n         return false;\n-    vchSig.resize(CPubKey::COMPACT_SIGNATURE_SIZE);\n+    vchSig.resize(65);\n     int rec = -1;\n     secp256k1_ecdsa_recoverable_signature sig;\n     int ret = secp256k1_ecdsa_sign_recoverable(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, nullptr);\n@@ -251,10 +219,10 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n     std::vector<unsigned char, secure_allocator<unsigned char>> vout(64);\n     if ((nChild >> 31) == 0) {\n         CPubKey pubkey = GetPubKey();\n-        assert(pubkey.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE);\n+        assert(pubkey.begin() + 33 == pubkey.end());\n         BIP32Hash(cc, nChild, *pubkey.begin(), pubkey.begin()+1, vout.data());\n     } else {\n-        assert(size() == 32);\n+        assert(begin() + 32 == end());\n         BIP32Hash(cc, nChild, 0, begin(), vout.data());\n     }\n     memcpy(ccChild.begin(), vout.data()+32, 32);"
      },
      {
        "sha": "151e63531b131ade8ec5a65a8b0b19653c4401c9",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 20,
        "deletions": 21,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,45 +1,39 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n // Copyright (c) 2009-2016 The Bitcoin Core developers\n-// Copyright (c) 2017 The Zcash developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #ifndef BITCOIN_KEY_H\n #define BITCOIN_KEY_H\n \n-#include <pubkey.h>\n-#include <serialize.h>\n-#include <support/allocators/secure.h>\n-#include <uint256.h>\n+#include \"pubkey.h\"\n+#include \"serialize.h\"\n+#include \"support/allocators/secure.h\"\n+#include \"uint256.h\"\n \n #include <stdexcept>\n #include <vector>\n \n \n+/**\n+ * secp256k1:\n+ * const unsigned int PRIVATE_KEY_SIZE = 279;\n+ * const unsigned int PUBLIC_KEY_SIZE  = 65;\n+ * const unsigned int SIGNATURE_SIZE   = 72;\n+ *\n+ * see www.keylength.com\n+ * script supports up to 75 for single byte push\n+ */\n+\n /**\n  * secure_allocator is defined in allocators.h\n- * CPrivKey is a serialized private key, with all parameters included\n- * (PRIVATE_KEY_SIZE bytes)\n+ * CPrivKey is a serialized private key, with all parameters included (279 bytes)\n  */\n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CPrivKey;\n \n /** An encapsulated private key. */\n class CKey\n {\n-public:\n-    /**\n-     * secp256k1:\n-     */\n-    static const unsigned int PRIVATE_KEY_SIZE            = 279;\n-    static const unsigned int COMPRESSED_PRIVATE_KEY_SIZE = 214;\n-    /**\n-     * see www.keylength.com\n-     * script supports up to 75 for single byte push\n-     */\n-    static_assert(\n-        PRIVATE_KEY_SIZE >= COMPRESSED_PRIVATE_KEY_SIZE,\n-        \"COMPRESSED_PRIVATE_KEY_SIZE is larger than PRIVATE_KEY_SIZE\");\n-\n private:\n     //! Whether this private key is valid. We check for correctness when modifying the key\n     //! data, so fValid should always correspond to the actual state.\n@@ -62,6 +56,11 @@ class CKey\n         keydata.resize(32);\n     }\n \n+    //! Destructor (again necessary because of memlocking).\n+    ~CKey()\n+    {\n+    }\n+\n     friend bool operator==(const CKey& a, const CKey& b)\n     {\n         return a.fCompressed == b.fCompressed &&"
      },
      {
        "sha": "8454175ca81a0e5538a8b1ce054e46b65b3d67ea",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 39,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,9 +3,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <keystore.h>\n+#include \"keystore.h\"\n \n-#include <util.h>\n+#include \"key.h\"\n+#include \"pubkey.h\"\n+#include \"util.h\"\n \n bool CKeyStore::AddKey(const CKey &key) {\n     return AddKeyPubKey(key, key.GetPubKey());\n@@ -34,33 +36,6 @@ bool CBasicKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n     return true;\n }\n \n-bool CBasicKeyStore::HaveKey(const CKeyID &address) const\n-{\n-    LOCK(cs_KeyStore);\n-    return mapKeys.count(address) > 0;\n-}\n-\n-std::set<CKeyID> CBasicKeyStore::GetKeys() const\n-{\n-    LOCK(cs_KeyStore);\n-    std::set<CKeyID> set_address;\n-    for (const auto& mi : mapKeys) {\n-        set_address.insert(mi.first);\n-    }\n-    return set_address;\n-}\n-\n-bool CBasicKeyStore::GetKey(const CKeyID &address, CKey &keyOut) const\n-{\n-    LOCK(cs_KeyStore);\n-    KeyMap::const_iterator mi = mapKeys.find(address);\n-    if (mi != mapKeys.end()) {\n-        keyOut = mi->second;\n-        return true;\n-    }\n-    return false;\n-}\n-\n bool CBasicKeyStore::AddCScript(const CScript& redeemScript)\n {\n     if (redeemScript.size() > MAX_SCRIPT_ELEMENT_SIZE)\n@@ -77,16 +52,6 @@ bool CBasicKeyStore::HaveCScript(const CScriptID& hash) const\n     return mapScripts.count(hash) > 0;\n }\n \n-std::set<CScriptID> CBasicKeyStore::GetCScripts() const\n-{\n-    LOCK(cs_KeyStore);\n-    std::set<CScriptID> set_script;\n-    for (const auto& mi : mapScripts) {\n-        set_script.insert(mi.first);\n-    }\n-    return set_script;\n-}\n-\n bool CBasicKeyStore::GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const\n {\n     LOCK(cs_KeyStore);"
      },
      {
        "sha": "965ae0c79ad865193afe0fb7041ca2c0ffe5f751",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 48,
        "deletions": 18,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,11 +6,11 @@\n #ifndef BITCOIN_KEYSTORE_H\n #define BITCOIN_KEYSTORE_H\n \n-#include <key.h>\n-#include <pubkey.h>\n-#include <script/script.h>\n-#include <script/standard.h>\n-#include <sync.h>\n+#include \"key.h\"\n+#include \"pubkey.h\"\n+#include \"script/script.h\"\n+#include \"script/standard.h\"\n+#include \"sync.h\"\n \n #include <boost/signals2/signal.hpp>\n \n@@ -30,13 +30,12 @@ class CKeyStore\n     //! Check whether a key corresponding to a given address is present in the store.\n     virtual bool HaveKey(const CKeyID &address) const =0;\n     virtual bool GetKey(const CKeyID &address, CKey& keyOut) const =0;\n-    virtual std::set<CKeyID> GetKeys() const =0;\n+    virtual void GetKeys(std::set<CKeyID> &setAddress) const =0;\n     virtual bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const =0;\n \n     //! Support for BIP 0013 : see https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki\n     virtual bool AddCScript(const CScript& redeemScript) =0;\n     virtual bool HaveCScript(const CScriptID &hash) const =0;\n-    virtual std::set<CScriptID> GetCScripts() const =0;\n     virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const =0;\n \n     //! Support for Watch-only addresses\n@@ -63,18 +62,49 @@ class CBasicKeyStore : public CKeyStore\n public:\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey) override;\n     bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const override;\n-    bool HaveKey(const CKeyID &address) const override;\n-    std::set<CKeyID> GetKeys() const override;\n-    bool GetKey(const CKeyID &address, CKey &keyOut) const override;\n-    bool AddCScript(const CScript& redeemScript) override;\n-    bool HaveCScript(const CScriptID &hash) const override;\n-    std::set<CScriptID> GetCScripts() const override;\n-    bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const override;\n+    bool HaveKey(const CKeyID &address) const override\n+    {\n+        bool result;\n+        {\n+            LOCK(cs_KeyStore);\n+            result = (mapKeys.count(address) > 0);\n+        }\n+        return result;\n+    }\n+    void GetKeys(std::set<CKeyID> &setAddress) const override\n+    {\n+        setAddress.clear();\n+        {\n+            LOCK(cs_KeyStore);\n+            KeyMap::const_iterator mi = mapKeys.begin();\n+            while (mi != mapKeys.end())\n+            {\n+                setAddress.insert((*mi).first);\n+                mi++;\n+            }\n+        }\n+    }\n+    bool GetKey(const CKeyID &address, CKey &keyOut) const override\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            KeyMap::const_iterator mi = mapKeys.find(address);\n+            if (mi != mapKeys.end())\n+            {\n+                keyOut = mi->second;\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+    virtual bool AddCScript(const CScript& redeemScript) override;\n+    virtual bool HaveCScript(const CScriptID &hash) const override;\n+    virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const override;\n \n-    bool AddWatchOnly(const CScript &dest) override;\n-    bool RemoveWatchOnly(const CScript &dest) override;\n-    bool HaveWatchOnly(const CScript &dest) const override;\n-    bool HaveWatchOnly() const override;\n+    virtual bool AddWatchOnly(const CScript &dest) override;\n+    virtual bool RemoveWatchOnly(const CScript &dest) override;\n+    virtual bool HaveWatchOnly(const CScript &dest) const override;\n+    virtual bool HaveWatchOnly() const override;\n };\n \n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;"
      },
      {
        "sha": "e9dcb6defdb1fd5b0b06677cedd39eaf4ff30f81",
        "filename": "src/limitedmap.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/limitedmap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/limitedmap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/limitedmap.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -27,7 +27,7 @@ class limitedmap\n     size_type nMaxSize;\n \n public:\n-    explicit limitedmap(size_type nMaxSizeIn)\n+    limitedmap(size_type nMaxSizeIn)\n     {\n         assert(nMaxSizeIn > 0);\n         nMaxSize = nMaxSizeIn;"
      },
      {
        "sha": "93fd6a0eb5b30c1e73cccb2fe4e0644be2f455af",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_MEMUSAGE_H\n #define BITCOIN_MEMUSAGE_H\n \n-#include <indirectmap.h>\n+#include \"indirectmap.h\"\n \n #include <stdlib.h>\n "
      },
      {
        "sha": "f0abea0611b9314c2e150bc8382bdd08172e786f",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 11,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,14 +3,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <merkleblock.h>\n+#include \"merkleblock.h\"\n \n-#include <hash.h>\n-#include <consensus/consensus.h>\n-#include <utilstrencodings.h>\n+#include \"hash.h\"\n+#include \"consensus/consensus.h\"\n+#include \"utilstrencodings.h\"\n \n-\n-CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter* filter, const std::set<uint256>* txids)\n+CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter& filter)\n {\n     header = block.GetBlockHeader();\n \n@@ -23,14 +22,36 @@ CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter* filter, const std:\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n         const uint256& hash = block.vtx[i]->GetHash();\n-        if (txids && txids->count(hash)) {\n+        if (filter.IsRelevantAndUpdate(*block.vtx[i]))\n+        {\n             vMatch.push_back(true);\n-        } else if (filter && filter->IsRelevantAndUpdate(*block.vtx[i])) {\n+            vMatchedTxn.push_back(std::make_pair(i, hash));\n+        }\n+        else\n+            vMatch.push_back(false);\n+        vHashes.push_back(hash);\n+    }\n+\n+    txn = CPartialMerkleTree(vHashes, vMatch);\n+}\n+\n+CMerkleBlock::CMerkleBlock(const CBlock& block, const std::set<uint256>& txids)\n+{\n+    header = block.GetBlockHeader();\n+\n+    std::vector<bool> vMatch;\n+    std::vector<uint256> vHashes;\n+\n+    vMatch.reserve(block.vtx.size());\n+    vHashes.reserve(block.vtx.size());\n+\n+    for (unsigned int i = 0; i < block.vtx.size(); i++)\n+    {\n+        const uint256& hash = block.vtx[i]->GetHash();\n+        if (txids.count(hash))\n             vMatch.push_back(true);\n-            vMatchedTxn.emplace_back(i, hash);\n-        } else {\n+        else\n             vMatch.push_back(false);\n-        }\n         vHashes.push_back(hash);\n     }\n "
      },
      {
        "sha": "f590c487dee0f70d668cf725ffa38560b80a6827",
        "filename": "src/merkleblock.h",
        "status": "modified",
        "additions": 9,
        "deletions": 17,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/merkleblock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/merkleblock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,10 +6,10 @@\n #ifndef BITCOIN_MERKLEBLOCK_H\n #define BITCOIN_MERKLEBLOCK_H\n \n-#include <serialize.h>\n-#include <uint256.h>\n-#include <primitives/block.h>\n-#include <bloom.h>\n+#include \"serialize.h\"\n+#include \"uint256.h\"\n+#include \"primitives/block.h\"\n+#include \"bloom.h\"\n \n #include <vector>\n \n@@ -63,7 +63,7 @@ class CPartialMerkleTree\n     bool fBad;\n \n     /** helper function to efficiently calculate the number of nodes at given height in the merkle tree */\n-    unsigned int CalcTreeWidth(int height) const {\n+    unsigned int CalcTreeWidth(int height) {\n         return (nTransactions+(1 << height)-1) >> height;\n     }\n \n@@ -131,23 +131,19 @@ class CMerkleBlock\n     CBlockHeader header;\n     CPartialMerkleTree txn;\n \n-    /**\n-     * Public only for unit testing and relay testing (not relayed).\n-     *\n-     * Used only when a bloom filter is specified to allow\n-     * testing the transactions which matched the bloom filter.\n-     */\n+public:\n+    /** Public only for unit testing and relay testing (not relayed) */\n     std::vector<std::pair<unsigned int, uint256> > vMatchedTxn;\n \n     /**\n      * Create from a CBlock, filtering transactions according to filter\n      * Note that this will call IsRelevantAndUpdate on the filter for each transaction,\n      * thus the filter will likely be modified.\n      */\n-    CMerkleBlock(const CBlock& block, CBloomFilter& filter) : CMerkleBlock(block, &filter, nullptr) { }\n+    CMerkleBlock(const CBlock& block, CBloomFilter& filter);\n \n     // Create from a CBlock, matching the txids in the set\n-    CMerkleBlock(const CBlock& block, const std::set<uint256>& txids) : CMerkleBlock(block, nullptr, &txids) { }\n+    CMerkleBlock(const CBlock& block, const std::set<uint256>& txids);\n \n     CMerkleBlock() {}\n \n@@ -158,10 +154,6 @@ class CMerkleBlock\n         READWRITE(header);\n         READWRITE(txn);\n     }\n-\n-private:\n-    // Combined constructor to consolidate code\n-    CMerkleBlock(const CBlock& block, CBloomFilter* filter, const std::set<uint256>* txids);\n };\n \n #endif // BITCOIN_MERKLEBLOCK_H"
      },
      {
        "sha": "01366fea462ee08bc3bb385627ffcb9f8b48f299",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 61,
        "deletions": 26,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,28 +3,30 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <miner.h>\n-\n-#include <amount.h>\n-#include <chain.h>\n-#include <chainparams.h>\n-#include <coins.h>\n-#include <consensus/consensus.h>\n-#include <consensus/tx_verify.h>\n-#include <consensus/merkle.h>\n-#include <consensus/validation.h>\n-#include <hash.h>\n-#include <validation.h>\n-#include <net.h>\n-#include <policy/feerate.h>\n-#include <policy/policy.h>\n-#include <pow.h>\n-#include <primitives/transaction.h>\n-#include <script/standard.h>\n-#include <timedata.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n-#include <validationinterface.h>\n+#include \"miner.h\"\n+\n+#include \"amount.h\"\n+#include \"chain.h\"\n+#include \"chainparams.h\"\n+#include \"coins.h\"\n+#include \"consensus/consensus.h\"\n+#include \"consensus/tx_verify.h\"\n+#include \"consensus/merkle.h\"\n+#include \"consensus/validation.h\"\n+#include \"hash.h\"\n+#include \"crypto/scrypt.h\"\n+#include \"validation.h\"\n+#include \"net.h\"\n+#include \"policy/feerate.h\"\n+#include \"policy/policy.h\"\n+#include \"pow.h\"\n+#include \"primitives/transaction.h\"\n+#include \"script/standard.h\"\n+#include \"timedata.h\"\n+#include \"txmempool.h\"\n+#include \"util.h\"\n+#include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n \n #include <algorithm>\n #include <queue>\n@@ -42,6 +44,7 @@\n // its ancestors.\n \n uint64_t nLastBlockTx = 0;\n+uint64_t nLastBlockSize = 0;\n uint64_t nLastBlockWeight = 0;\n \n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n@@ -62,13 +65,18 @@ int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParam\n BlockAssembler::Options::Options() {\n     blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n     nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n+    nBlockMaxSize = DEFAULT_BLOCK_MAX_SIZE;\n }\n \n BlockAssembler::BlockAssembler(const CChainParams& params, const Options& options) : chainparams(params)\n {\n     blockMinFeeRate = options.blockMinFeeRate;\n     // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n     nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n+    // Limit size to between 1K and MAX_BLOCK_SERIALIZED_SIZE-1K for sanity:\n+    nBlockMaxSize = std::max<size_t>(1000, std::min<size_t>(MAX_BLOCK_SERIALIZED_SIZE - 1000, options.nBlockMaxSize));\n+    // Whether we need to account for byte usage (in addition to weight usage)\n+    fNeedSizeAccounting = (nBlockMaxSize < MAX_BLOCK_SERIALIZED_SIZE - 1000);\n }\n \n static BlockAssembler::Options DefaultOptions(const CChainParams& params)\n@@ -78,7 +86,20 @@ static BlockAssembler::Options DefaultOptions(const CChainParams& params)\n     // If only one is given, only restrict the specified resource.\n     // If both are given, restrict both.\n     BlockAssembler::Options options;\n-    options.nBlockMaxWeight = gArgs.GetArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n+    options.nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n+    options.nBlockMaxSize = DEFAULT_BLOCK_MAX_SIZE;\n+    bool fWeightSet = false;\n+    if (gArgs.IsArgSet(\"-blockmaxweight\")) {\n+        options.nBlockMaxWeight = gArgs.GetArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n+        options.nBlockMaxSize = MAX_BLOCK_SERIALIZED_SIZE;\n+        fWeightSet = true;\n+    }\n+    if (gArgs.IsArgSet(\"-blockmaxsize\")) {\n+        options.nBlockMaxSize = gArgs.GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n+        if (!fWeightSet) {\n+            options.nBlockMaxWeight = options.nBlockMaxSize * WITNESS_SCALE_FACTOR;\n+        }\n+    }\n     if (gArgs.IsArgSet(\"-blockmintxfee\")) {\n         CAmount n = 0;\n         ParseMoney(gArgs.GetArg(\"-blockmintxfee\", \"\"), n);\n@@ -96,6 +117,7 @@ void BlockAssembler::resetBlock()\n     inBlock.clear();\n \n     // Reserve space for coinbase tx\n+    nBlockSize = 1000;\n     nBlockWeight = 4000;\n     nBlockSigOpsCost = 400;\n     fIncludeWitness = false;\n@@ -124,7 +146,6 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n \n     LOCK2(cs_main, mempool.cs);\n     CBlockIndex* pindexPrev = chainActive.Tip();\n-    assert(pindexPrev != nullptr);\n     nHeight = pindexPrev->nHeight + 1;\n \n     pblock->nVersion = ComputeBlockVersion(pindexPrev, chainparams.GetConsensus());\n@@ -155,6 +176,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     int64_t nTime1 = GetTimeMicros();\n \n     nLastBlockTx = nBlockTx;\n+    nLastBlockSize = nBlockSize;\n     nLastBlockWeight = nBlockWeight;\n \n     // Create coinbase transaction.\n@@ -169,7 +191,8 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     pblocktemplate->vchCoinbaseCommitment = GenerateCoinbaseCommitment(*pblock, pindexPrev, chainparams.GetConsensus());\n     pblocktemplate->vTxFees[0] = -nFees;\n \n-    LogPrintf(\"CreateNewBlock(): block weight: %u txs: %u fees: %ld sigops %d\\n\", GetBlockWeight(*pblock), nBlockTx, nFees, nBlockSigOpsCost);\n+    uint64_t nSerializeSize = GetSerializeSize(*pblock, SER_NETWORK, PROTOCOL_VERSION);\n+    LogPrintf(\"CreateNewBlock(): total size: %u block weight: %u txs: %u fees: %ld sigops %d\\n\", nSerializeSize, GetBlockWeight(*pblock), nBlockTx, nFees, nBlockSigOpsCost);\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n@@ -202,7 +225,7 @@ void BlockAssembler::onlyUnconfirmed(CTxMemPool::setEntries& testSet)\n     }\n }\n \n-bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost) const\n+bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost)\n {\n     // TODO: switch to weight-based accounting for packages instead of vsize-based accounting.\n     if (nBlockWeight + WITNESS_SCALE_FACTOR * packageSize >= nBlockMaxWeight)\n@@ -216,13 +239,22 @@ bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost\n // - transaction finality (locktime)\n // - premature witness (in case segwit transactions are added to mempool before\n //   segwit activation)\n+// - serialized size (in case -blockmaxsize is in use)\n bool BlockAssembler::TestPackageTransactions(const CTxMemPool::setEntries& package)\n {\n+    uint64_t nPotentialBlockSize = nBlockSize; // only used with fNeedSizeAccounting\n     for (const CTxMemPool::txiter it : package) {\n         if (!IsFinalTx(it->GetTx(), nHeight, nLockTimeCutoff))\n             return false;\n         if (!fIncludeWitness && it->GetTx().HasWitness())\n             return false;\n+        if (fNeedSizeAccounting) {\n+            uint64_t nTxSize = ::GetSerializeSize(it->GetTx(), SER_NETWORK, PROTOCOL_VERSION);\n+            if (nPotentialBlockSize + nTxSize >= nBlockMaxSize) {\n+                return false;\n+            }\n+            nPotentialBlockSize += nTxSize;\n+        }\n     }\n     return true;\n }\n@@ -232,6 +264,9 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n     pblock->vtx.emplace_back(iter->GetSharedTx());\n     pblocktemplate->vTxFees.push_back(iter->GetFee());\n     pblocktemplate->vTxSigOpsCost.push_back(iter->GetSigOpCost());\n+    if (fNeedSizeAccounting) {\n+        nBlockSize += ::GetSerializeSize(iter->GetTx(), SER_NETWORK, PROTOCOL_VERSION);\n+    }\n     nBlockWeight += iter->GetTxWeight();\n     ++nBlockTx;\n     nBlockSigOpsCost += iter->GetSigOpCost();"
      },
      {
        "sha": "5c9cfd78f0444a0a661a4ee7ef78a6910c39d3d5",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 14,
        "deletions": 11,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,13 +6,13 @@\n #ifndef BITCOIN_MINER_H\n #define BITCOIN_MINER_H\n \n-#include <primitives/block.h>\n-#include <txmempool.h>\n+#include \"primitives/block.h\"\n+#include \"txmempool.h\"\n \n #include <stdint.h>\n #include <memory>\n-#include <boost/multi_index_container.hpp>\n-#include <boost/multi_index/ordered_index.hpp>\n+#include \"boost/multi_index_container.hpp\"\n+#include \"boost/multi_index/ordered_index.hpp\"\n \n class CBlockIndex;\n class CChainParams;\n@@ -33,7 +33,7 @@ struct CBlockTemplate\n // Container for tracking updates to ancestor feerate as we include (parent)\n // transactions in a block\n struct CTxMemPoolModifiedEntry {\n-    explicit CTxMemPoolModifiedEntry(CTxMemPool::txiter entry)\n+    CTxMemPoolModifiedEntry(CTxMemPool::txiter entry)\n     {\n         iter = entry;\n         nSizeWithAncestors = entry->GetSizeWithAncestors();\n@@ -71,7 +71,7 @@ struct modifiedentry_iter {\n // except operating on CTxMemPoolModifiedEntry.\n // TODO: refactor to avoid duplication of this logic.\n struct CompareModifiedEntry {\n-    bool operator()(const CTxMemPoolModifiedEntry &a, const CTxMemPoolModifiedEntry &b) const\n+    bool operator()(const CTxMemPoolModifiedEntry &a, const CTxMemPoolModifiedEntry &b)\n     {\n         double f1 = (double)a.nModFeesWithAncestors * b.nSizeWithAncestors;\n         double f2 = (double)b.nModFeesWithAncestors * a.nSizeWithAncestors;\n@@ -86,7 +86,7 @@ struct CompareModifiedEntry {\n // This is sufficient to sort an ancestor package in an order that is valid\n // to appear in a block.\n struct CompareTxIterByAncestorCount {\n-    bool operator()(const CTxMemPool::txiter &a, const CTxMemPool::txiter &b) const\n+    bool operator()(const CTxMemPool::txiter &a, const CTxMemPool::txiter &b)\n     {\n         if (a->GetCountWithAncestors() != b->GetCountWithAncestors())\n             return a->GetCountWithAncestors() < b->GetCountWithAncestors();\n@@ -116,7 +116,7 @@ typedef indexed_modified_transaction_set::index<ancestor_score>::type::iterator\n \n struct update_for_parent_inclusion\n {\n-    explicit update_for_parent_inclusion(CTxMemPool::txiter it) : iter(it) {}\n+    update_for_parent_inclusion(CTxMemPool::txiter it) : iter(it) {}\n \n     void operator() (CTxMemPoolModifiedEntry &e)\n     {\n@@ -139,11 +139,13 @@ class BlockAssembler\n \n     // Configuration parameters for the block size\n     bool fIncludeWitness;\n-    unsigned int nBlockMaxWeight;\n+    unsigned int nBlockMaxWeight, nBlockMaxSize;\n+    bool fNeedSizeAccounting;\n     CFeeRate blockMinFeeRate;\n \n     // Information on the current status of the block\n     uint64_t nBlockWeight;\n+    uint64_t nBlockSize;\n     uint64_t nBlockTx;\n     uint64_t nBlockSigOpsCost;\n     CAmount nFees;\n@@ -158,10 +160,11 @@ class BlockAssembler\n     struct Options {\n         Options();\n         size_t nBlockMaxWeight;\n+        size_t nBlockMaxSize;\n         CFeeRate blockMinFeeRate;\n     };\n \n-    explicit BlockAssembler(const CChainParams& params);\n+    BlockAssembler(const CChainParams& params);\n     BlockAssembler(const CChainParams& params, const Options& options);\n \n     /** Construct a new block template with coinbase to scriptPubKeyIn */\n@@ -184,7 +187,7 @@ class BlockAssembler\n     /** Remove confirmed (inBlock) entries from given set */\n     void onlyUnconfirmed(CTxMemPool::setEntries& testSet);\n     /** Test if a new package would \"fit\" in the block */\n-    bool TestPackage(uint64_t packageSize, int64_t packageSigOpsCost) const;\n+    bool TestPackage(uint64_t packageSize, int64_t packageSigOpsCost);\n     /** Perform checks on each transaction in a package:\n       * locktime, premature-witness, serialized size (if necessary)\n       * These checks should always succeed, and they're here"
      },
      {
        "sha": "2a1f41aeb8a2dee5b2e9fe65246f611ec38993e7",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 237,
        "deletions": 250,
        "changes": 487,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -4,21 +4,23 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <net.h>\n-\n-#include <chainparams.h>\n-#include <clientversion.h>\n-#include <consensus/consensus.h>\n-#include <crypto/common.h>\n-#include <crypto/sha256.h>\n-#include <primitives/transaction.h>\n-#include <netbase.h>\n-#include <scheduler.h>\n-#include <ui_interface.h>\n-#include <utilstrencodings.h>\n+#include \"net.h\"\n+\n+#include \"addrman.h\"\n+#include \"chainparams.h\"\n+#include \"clientversion.h\"\n+#include \"consensus/consensus.h\"\n+#include \"crypto/common.h\"\n+#include \"crypto/sha256.h\"\n+#include \"hash.h\"\n+#include \"primitives/transaction.h\"\n+#include \"netbase.h\"\n+#include \"scheduler.h\"\n+#include \"ui_interface.h\"\n+#include \"utilstrencodings.h\"\n \n #ifdef WIN32\n #include <string.h>\n@@ -87,6 +89,10 @@ std::string strSubVersion;\n \n limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n \n+// Signals for message handling\n+static CNodeSignals g_signals;\n+CNodeSignals& GetNodeSignals() { return g_signals; }\n+\n void CConnman::AddOneShot(const std::string& strDest)\n {\n     LOCK(cs_vOneShots);\n@@ -108,13 +114,13 @@ bool GetLocal(CService& addr, const CNetAddr *paddrPeer)\n     int nBestReachability = -1;\n     {\n         LOCK(cs_mapLocalHost);\n-        for (const auto& entry : mapLocalHost)\n+        for (std::map<CNetAddr, LocalServiceInfo>::iterator it = mapLocalHost.begin(); it != mapLocalHost.end(); it++)\n         {\n-            int nScore = entry.second.nScore;\n-            int nReachability = entry.first.GetReachabilityFrom(paddrPeer);\n+            int nScore = (*it).second.nScore;\n+            int nReachability = (*it).first.GetReachabilityFrom(paddrPeer);\n             if (nReachability > nBestReachability || (nReachability == nBestReachability && nScore > nBestScore))\n             {\n-                addr = CService(entry.first, entry.second.nPort);\n+                addr = CService((*it).first, (*it).second.nPort);\n                 nBestReachability = nReachability;\n                 nBestScore = nScore;\n             }\n@@ -133,10 +139,11 @@ static std::vector<CAddress> convertSeed6(const std::vector<SeedSpec6> &vSeedsIn\n     const int64_t nOneWeek = 7*24*60*60;\n     std::vector<CAddress> vSeedsOut;\n     vSeedsOut.reserve(vSeedsIn.size());\n-    for (const auto& seed_in : vSeedsIn) {\n+    for (std::vector<SeedSpec6>::const_iterator i(vSeedsIn.begin()); i != vSeedsIn.end(); ++i)\n+    {\n         struct in6_addr ip;\n-        memcpy(&ip, seed_in.addr, sizeof(ip));\n-        CAddress addr(CService(ip, seed_in.port), NODE_NETWORK);\n+        memcpy(&ip, i->addr, sizeof(ip));\n+        CAddress addr(CService(ip, i->port), NODE_NETWORK);\n         addr.nTime = GetTime() - GetRand(nOneWeek) - nOneWeek;\n         vSeedsOut.push_back(addr);\n     }\n@@ -296,22 +303,18 @@ bool IsReachable(const CNetAddr& addr)\n CNode* CConnman::FindNode(const CNetAddr& ip)\n {\n     LOCK(cs_vNodes);\n-    for (CNode* pnode : vNodes) {\n-        if ((CNetAddr)pnode->addr == ip) {\n-            return pnode;\n-        }\n-    }\n+    for (CNode* pnode : vNodes)\n+        if ((CNetAddr)pnode->addr == ip)\n+            return (pnode);\n     return nullptr;\n }\n \n CNode* CConnman::FindNode(const CSubNet& subNet)\n {\n     LOCK(cs_vNodes);\n-    for (CNode* pnode : vNodes) {\n-        if (subNet.Match((CNetAddr)pnode->addr)) {\n-            return pnode;\n-        }\n-    }\n+    for (CNode* pnode : vNodes)\n+    if (subNet.Match((CNetAddr)pnode->addr))\n+        return (pnode);\n     return nullptr;\n }\n \n@@ -320,7 +323,7 @@ CNode* CConnman::FindNode(const std::string& addrName)\n     LOCK(cs_vNodes);\n     for (CNode* pnode : vNodes) {\n         if (pnode->GetAddrName() == addrName) {\n-            return pnode;\n+            return (pnode);\n         }\n     }\n     return nullptr;\n@@ -329,11 +332,9 @@ CNode* CConnman::FindNode(const std::string& addrName)\n CNode* CConnman::FindNode(const CService& addr)\n {\n     LOCK(cs_vNodes);\n-    for (CNode* pnode : vNodes) {\n-        if ((CService)pnode->addr == addr) {\n-            return pnode;\n-        }\n-    }\n+    for (CNode* pnode : vNodes)\n+        if ((CService)pnode->addr == addr)\n+            return (pnode);\n     return nullptr;\n }\n \n@@ -383,16 +384,19 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         pszDest ? pszDest : addrConnect.ToString(),\n         pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n \n-    // Resolve\n-    const int default_port = Params().GetDefaultPort();\n-    if (pszDest) {\n-        std::vector<CService> resolved;\n-        if (Lookup(pszDest, resolved,  default_port, fNameLookup && !HaveNameProxy(), 256) && !resolved.empty()) {\n-            addrConnect = CAddress(resolved[GetRand(resolved.size())], NODE_NONE);\n-            if (!addrConnect.IsValid()) {\n-                LogPrint(BCLog::NET, \"Resolver returned invalid address %s for %s\", addrConnect.ToString(), pszDest);\n-                return nullptr;\n-            }\n+    // Connect\n+    SOCKET hSocket;\n+    bool proxyConnectionFailed = false;\n+    if (pszDest ? ConnectSocketByName(addrConnect, hSocket, pszDest, Params().GetDefaultPort(), nConnectTimeout, &proxyConnectionFailed) :\n+                  ConnectSocket(addrConnect, hSocket, nConnectTimeout, &proxyConnectionFailed))\n+    {\n+        if (!IsSelectableSocket(hSocket)) {\n+            LogPrintf(\"Cannot create connection: non-selectable socket created (fd >= FD_SETSIZE ?)\\n\");\n+            CloseSocket(hSocket);\n+            return nullptr;\n+        }\n+\n+        if (pszDest && addrConnect.IsValid()) {\n             // It is possible that we already have a connection to the IP/port pszDest resolved to.\n             // In that case, drop the connection that was just created, and return the existing CNode instead.\n             // Also store the name we used to connect in that CNode, so that future FindNode() calls to that\n@@ -402,61 +406,30 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n             if (pnode)\n             {\n                 pnode->MaybeSetAddrName(std::string(pszDest));\n+                CloseSocket(hSocket);\n                 LogPrintf(\"Failed to open new connection, already connected\\n\");\n                 return nullptr;\n             }\n         }\n-    }\n \n-    // Connect\n-    bool connected = false;\n-    SOCKET hSocket;\n-    proxyType proxy;\n-    if (addrConnect.IsValid()) {\n-        bool proxyConnectionFailed = false;\n+        addrman.Attempt(addrConnect, fCountFailure);\n \n-        if (GetProxy(addrConnect.GetNetwork(), proxy)) {\n-            hSocket = CreateSocket(proxy.proxy);\n-            if (hSocket == INVALID_SOCKET) {\n-                return nullptr;\n-            }\n-            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(), hSocket, nConnectTimeout, &proxyConnectionFailed);\n-        } else {\n-            // no proxy needed (none set for target network)\n-            hSocket = CreateSocket(addrConnect);\n-            if (hSocket == INVALID_SOCKET) {\n-                return nullptr;\n-            }\n-            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout);\n-        }\n-        if (!proxyConnectionFailed) {\n-            // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\n-            // the proxy, mark this as an attempt.\n-            addrman.Attempt(addrConnect, fCountFailure);\n-        }\n-    } else if (pszDest && GetNameProxy(proxy)) {\n-        hSocket = CreateSocket(proxy.proxy);\n-        if (hSocket == INVALID_SOCKET) {\n-            return nullptr;\n-        }\n-        std::string host;\n-        int port = default_port;\n-        SplitHostPort(std::string(pszDest), port, host);\n-        connected = ConnectThroughProxy(proxy, host, port, hSocket, nConnectTimeout, nullptr);\n-    }\n-    if (!connected) {\n-        CloseSocket(hSocket);\n-        return nullptr;\n-    }\n+        // Add node\n+        NodeId id = GetNewNodeId();\n+        uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n+        CAddress addr_bind = GetBindAddress(hSocket);\n+        CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", false);\n+        pnode->nServicesExpected = ServiceFlags(addrConnect.nServices & nRelevantServices);\n+        pnode->AddRef();\n \n-    // Add node\n-    NodeId id = GetNewNodeId();\n-    uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n-    CAddress addr_bind = GetBindAddress(hSocket);\n-    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", false);\n-    pnode->AddRef();\n+        return pnode;\n+    } else if (!proxyConnectionFailed) {\n+        // If connecting to the node failed, and failure is not caused by a problem connecting to\n+        // the proxy, mark this as an attempt.\n+        addrman.Attempt(addrConnect, fCountFailure);\n+    }\n \n-    return pnode;\n+    return nullptr;\n }\n \n void CConnman::DumpBanlist()\n@@ -505,9 +478,10 @@ void CConnman::ClearBanned()\n bool CConnman::IsBanned(CNetAddr ip)\n {\n     LOCK(cs_setBanned);\n-    for (const auto& it : setBanned) {\n-        CSubNet subNet = it.first;\n-        CBanEntry banEntry = it.second;\n+    for (banmap_t::iterator it = setBanned.begin(); it != setBanned.end(); it++)\n+    {\n+        CSubNet subNet = (*it).first;\n+        CBanEntry banEntry = (*it).second;\n \n         if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n             return true;\n@@ -603,28 +577,21 @@ void CConnman::SetBanned(const banmap_t &banMap)\n void CConnman::SweepBanned()\n {\n     int64_t now = GetTime();\n-    bool notifyUI = false;\n+\n+    LOCK(cs_setBanned);\n+    banmap_t::iterator it = setBanned.begin();\n+    while(it != setBanned.end())\n     {\n-        LOCK(cs_setBanned);\n-        banmap_t::iterator it = setBanned.begin();\n-        while(it != setBanned.end())\n+        CSubNet subNet = (*it).first;\n+        CBanEntry banEntry = (*it).second;\n+        if(now > banEntry.nBanUntil)\n         {\n-            CSubNet subNet = (*it).first;\n-            CBanEntry banEntry = (*it).second;\n-            if(now > banEntry.nBanUntil)\n-            {\n-                setBanned.erase(it++);\n-                setBannedIsDirty = true;\n-                notifyUI = true;\n-                LogPrint(BCLog::NET, \"%s: Removed banned node ip/subnet from banlist.dat: %s\\n\", __func__, subNet.ToString());\n-            }\n-            else\n-                ++it;\n+            setBanned.erase(it++);\n+            setBannedIsDirty = true;\n+            LogPrint(BCLog::NET, \"%s: Removed banned node ip/subnet from banlist.dat: %s\\n\", __func__, subNet.ToString());\n         }\n-    }\n-    // update UI\n-    if(notifyUI && clientInterface) {\n-        clientInterface->BannedListChanged();\n+        else\n+            ++it;\n     }\n }\n \n@@ -698,7 +665,7 @@ void CNode::copyStats(CNodeStats &stats)\n         X(cleanSubVer);\n     }\n     X(fInbound);\n-    X(m_manual_connection);\n+    X(fAddnode);\n     X(nStartingHeight);\n     {\n         LOCK(cs_vSend);\n@@ -975,16 +942,6 @@ static bool CompareNodeTXTime(const NodeEvictionCandidate &a, const NodeEviction\n     return a.nTimeConnected > b.nTimeConnected;\n }\n \n-\n-//! Sort an array by the specified comparator, then erase the last K elements.\n-template<typename T, typename Comparator>\n-static void EraseLastKElements(std::vector<T> &elements, Comparator comparator, size_t k)\n-{\n-    std::sort(elements.begin(), elements.end(), comparator);\n-    size_t eraseSize = std::min(k, elements.size());\n-    elements.erase(elements.end() - eraseSize, elements.end());\n-}\n-\n /** Try to find a connection to evict when the node is full.\n  *  Extreme care must be taken to avoid opening the node to attacker\n  *   triggered network partitioning.\n@@ -999,7 +956,7 @@ bool CConnman::AttemptToEvictConnection()\n     {\n         LOCK(cs_vNodes);\n \n-        for (const CNode* node : vNodes) {\n+        for (CNode *node : vNodes) {\n             if (node->fWhitelisted)\n                 continue;\n             if (!node->fInbound)\n@@ -1008,29 +965,48 @@ bool CConnman::AttemptToEvictConnection()\n                 continue;\n             NodeEvictionCandidate candidate = {node->GetId(), node->nTimeConnected, node->nMinPingUsecTime,\n                                                node->nLastBlockTime, node->nLastTXTime,\n-                                               HasAllDesirableServiceFlags(node->nServices),\n+                                               (node->nServices & nRelevantServices) == nRelevantServices,\n                                                node->fRelayTxes, node->pfilter != nullptr, node->addr, node->nKeyedNetGroup};\n             vEvictionCandidates.push_back(candidate);\n         }\n     }\n \n+    if (vEvictionCandidates.empty()) return false;\n+\n     // Protect connections with certain characteristics\n \n     // Deterministically select 4 peers to protect by netgroup.\n     // An attacker cannot predict which netgroups will be protected\n-    EraseLastKElements(vEvictionCandidates, CompareNetGroupKeyed, 4);\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNetGroupKeyed);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty()) return false;\n+\n     // Protect the 8 nodes with the lowest minimum ping time.\n     // An attacker cannot manipulate this metric without physically moving nodes closer to the target.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeMinPingTime, 8);\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeMinPingTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(8, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty()) return false;\n+\n     // Protect 4 nodes that most recently sent us transactions.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeTXTime, 4);\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeTXTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty()) return false;\n+\n     // Protect 4 nodes that most recently sent us blocks.\n     // An attacker cannot manipulate this metric without performing useful work.\n-    EraseLastKElements(vEvictionCandidates, CompareNodeBlockTime, 4);\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), CompareNodeBlockTime);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - std::min(4, static_cast<int>(vEvictionCandidates.size())), vEvictionCandidates.end());\n+\n+    if (vEvictionCandidates.empty()) return false;\n+\n     // Protect the half of the remaining nodes which have been connected the longest.\n     // This replicates the non-eviction implicit behavior, and precludes attacks that start later.\n-    EraseLastKElements(vEvictionCandidates, ReverseCompareNodeTimeConnected, vEvictionCandidates.size() / 2);\n+    std::sort(vEvictionCandidates.begin(), vEvictionCandidates.end(), ReverseCompareNodeTimeConnected);\n+    vEvictionCandidates.erase(vEvictionCandidates.end() - static_cast<int>(vEvictionCandidates.size() / 2), vEvictionCandidates.end());\n \n     if (vEvictionCandidates.empty()) return false;\n \n@@ -1041,12 +1017,12 @@ bool CConnman::AttemptToEvictConnection()\n     int64_t nMostConnectionsTime = 0;\n     std::map<uint64_t, std::vector<NodeEvictionCandidate> > mapNetGroupNodes;\n     for (const NodeEvictionCandidate &node : vEvictionCandidates) {\n-        std::vector<NodeEvictionCandidate> &group = mapNetGroupNodes[node.nKeyedNetGroup];\n-        group.push_back(node);\n-        int64_t grouptime = group[0].nTimeConnected;\n+        mapNetGroupNodes[node.nKeyedNetGroup].push_back(node);\n+        int64_t grouptime = mapNetGroupNodes[node.nKeyedNetGroup][0].nTimeConnected;\n+        size_t groupsize = mapNetGroupNodes[node.nKeyedNetGroup].size();\n \n-        if (group.size() > nMostConnections || (group.size() == nMostConnections && grouptime > nMostConnectionsTime)) {\n-            nMostConnections = group.size();\n+        if (groupsize > nMostConnections || (groupsize == nMostConnections && grouptime > nMostConnectionsTime)) {\n+            nMostConnections = groupsize;\n             nMostConnectionsTime = grouptime;\n             naMostConnections = node.nKeyedNetGroup;\n         }\n@@ -1058,9 +1034,9 @@ bool CConnman::AttemptToEvictConnection()\n     // Disconnect from the network group with the most connections\n     NodeId evicted = vEvictionCandidates.front().id;\n     LOCK(cs_vNodes);\n-    for (CNode* pnode : vNodes) {\n-        if (pnode->GetId() == evicted) {\n-            pnode->fDisconnect = true;\n+    for(std::vector<CNode*>::const_iterator it(vNodes.begin()); it != vNodes.end(); ++it) {\n+        if ((*it)->GetId() == evicted) {\n+            (*it)->fDisconnect = true;\n             return true;\n         }\n     }\n@@ -1084,9 +1060,9 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     bool whitelisted = hListenSocket.whitelisted || IsWhitelistedRange(addr);\n     {\n         LOCK(cs_vNodes);\n-        for (const CNode* pnode : vNodes) {\n-            if (pnode->fInbound) nInbound++;\n-        }\n+        for (CNode* pnode : vNodes)\n+            if (pnode->fInbound)\n+                nInbound++;\n     }\n \n     if (hSocket == INVALID_SOCKET)\n@@ -1116,7 +1092,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n \n     if (IsBanned(addr) && !whitelisted)\n     {\n-        LogPrint(BCLog::NET, \"connection from %s dropped (banned)\\n\", addr.ToString());\n+        LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n         CloseSocket(hSocket);\n         return;\n     }\n@@ -1138,7 +1114,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addr, CalculateKeyedNetGroup(addr), nonce, addr_bind, \"\", true);\n     pnode->AddRef();\n     pnode->fWhitelisted = whitelisted;\n-    m_msgproc->InitializeNode(pnode);\n+    GetNodeSignals().InitializeNode(pnode, *this);\n \n     LogPrint(BCLog::NET, \"connection from %s accepted\\n\", addr.ToString());\n \n@@ -1462,9 +1438,9 @@ void CConnman::WakeMessageHandler()\n void ThreadMapPort()\n {\n     std::string port = strprintf(\"%u\", GetListenPort());\n-    const char * multicastif = nullptr;\n-    const char * minissdpdpath = nullptr;\n-    struct UPNPDev * devlist = nullptr;\n+    const char * multicastif = 0;\n+    const char * minissdpdpath = 0;\n+    struct UPNPDev * devlist = 0;\n     char lanaddr[64];\n \n #ifndef UPNPDISCOVER_SUCCESS\n@@ -1507,7 +1483,7 @@ void ThreadMapPort()\n             }\n         }\n \n-        std::string strDesc = \"Bitcoin \" + FormatFullVersion();\n+        std::string strDesc = \"Blockcash \" + FormatFullVersion();\n \n         try {\n             while (true) {\n@@ -1534,34 +1510,36 @@ void ThreadMapPort()\n         {\n             r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n             LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n-            freeUPNPDevlist(devlist); devlist = nullptr;\n+            freeUPNPDevlist(devlist); devlist = 0;\n             FreeUPNPUrls(&urls);\n             throw;\n         }\n     } else {\n         LogPrintf(\"No valid UPnP IGDs found\\n\");\n-        freeUPNPDevlist(devlist); devlist = nullptr;\n+        freeUPNPDevlist(devlist); devlist = 0;\n         if (r != 0)\n             FreeUPNPUrls(&urls);\n     }\n }\n \n void MapPort(bool fUseUPnP)\n {\n-    static std::unique_ptr<boost::thread> upnp_thread;\n+    static boost::thread* upnp_thread = nullptr;\n \n     if (fUseUPnP)\n     {\n         if (upnp_thread) {\n             upnp_thread->interrupt();\n             upnp_thread->join();\n+            delete upnp_thread;\n         }\n-        upnp_thread.reset(new boost::thread(boost::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n+        upnp_thread = new boost::thread(boost::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort));\n     }\n     else if (upnp_thread) {\n         upnp_thread->interrupt();\n         upnp_thread->join();\n-        upnp_thread.reset();\n+        delete upnp_thread;\n+        upnp_thread = nullptr;\n     }\n }\n \n@@ -1604,7 +1582,7 @@ void CConnman::ThreadDNSAddressSeed()\n         LOCK(cs_vNodes);\n         int nRelevant = 0;\n         for (auto pnode : vNodes) {\n-            nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n+            nRelevant += pnode->fSuccessfullyConnected && ((pnode->nServices & nRelevantServices) == nRelevantServices);\n         }\n         if (nRelevant >= 2) {\n             LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n@@ -1626,7 +1604,7 @@ void CConnman::ThreadDNSAddressSeed()\n         } else {\n             std::vector<CNetAddr> vIPs;\n             std::vector<CAddress> vAdd;\n-            ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n+            ServiceFlags requiredServiceBits = nRelevantServices;\n             std::string host = GetDNSHost(seed, &requiredServiceBits);\n             CNetAddr resolveSource;\n             if (!resolveSource.SetInternal(host)) {\n@@ -1696,49 +1674,18 @@ void CConnman::ProcessOneShot()\n     }\n }\n \n-bool CConnman::GetTryNewOutboundPeer()\n-{\n-    return m_try_another_outbound_peer;\n-}\n-\n-void CConnman::SetTryNewOutboundPeer(bool flag)\n-{\n-    m_try_another_outbound_peer = flag;\n-    LogPrint(BCLog::NET, \"net: setting try another outbound peer=%s\\n\", flag ? \"true\" : \"false\");\n-}\n-\n-// Return the number of peers we have over our outbound connection limit\n-// Exclude peers that are marked for disconnect, or are going to be\n-// disconnected soon (eg one-shots and feelers)\n-// Also exclude peers that haven't finished initial connection handshake yet\n-// (so that we don't decide we're over our desired connection limit, and then\n-// evict some peer that has finished the handshake)\n-int CConnman::GetExtraOutboundCount()\n-{\n-    int nOutbound = 0;\n-    {\n-        LOCK(cs_vNodes);\n-        for (CNode* pnode : vNodes) {\n-            if (!pnode->fInbound && !pnode->m_manual_connection && !pnode->fFeeler && !pnode->fDisconnect && !pnode->fOneShot && pnode->fSuccessfullyConnected) {\n-                ++nOutbound;\n-            }\n-        }\n-    }\n-    return std::max(nOutbound - nMaxOutbound, 0);\n-}\n-\n-void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n+void CConnman::ThreadOpenConnections()\n {\n     // Connect to specific addresses\n-    if (!connect.empty())\n+    if (gArgs.IsArgSet(\"-connect\"))\n     {\n         for (int64_t nLoop = 0;; nLoop++)\n         {\n             ProcessOneShot();\n-            for (const std::string& strAddr : connect)\n+            for (const std::string& strAddr : gArgs.GetArgs(\"-connect\"))\n             {\n                 CAddress addr(CService(), NODE_NONE);\n-                OpenNetworkConnection(addr, false, nullptr, strAddr.c_str(), false, false, true);\n+                OpenNetworkConnection(addr, false, nullptr, strAddr.c_str());\n                 for (int i = 0; i < 10 && i < nLoop; i++)\n                 {\n                     if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n@@ -1786,11 +1733,17 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // Only connect out to one peer per network group (/16 for IPv4).\n         // Do this here so we don't have to critsect vNodes inside mapAddresses critsect.\n         int nOutbound = 0;\n+        int nOutboundRelevant = 0;\n         std::set<std::vector<unsigned char> > setConnected;\n         {\n             LOCK(cs_vNodes);\n             for (CNode* pnode : vNodes) {\n-                if (!pnode->fInbound && !pnode->m_manual_connection) {\n+                if (!pnode->fInbound && !pnode->fAddnode) {\n+\n+                    // Count the peers that have all relevant services\n+                    if (pnode->fSuccessfullyConnected && !pnode->fFeeler && ((pnode->nServices & nRelevantServices) == nRelevantServices)) {\n+                        nOutboundRelevant++;\n+                    }\n                     // Netgroups for inbound and addnode peers are not excluded because our goal here\n                     // is to not use multiple of our limited outbound slots on a single netgroup\n                     // but inbound and addnode peers do not use our outbound slots.  Inbound peers\n@@ -1815,8 +1768,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //  * Only make a feeler connection once every few minutes.\n         //\n         bool fFeeler = false;\n-\n-        if (nOutbound >= nMaxOutbound && !GetTryNewOutboundPeer()) {\n+        if (nOutbound >= nMaxOutbound) {\n             int64_t nTime = GetTimeMicros(); // The current time right now (in microseconds).\n             if (nTime > nNextFeeler) {\n                 nNextFeeler = PoissonNextSend(nTime, FEELER_INTERVAL);\n@@ -1846,16 +1798,21 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             if (IsLimited(addr))\n                 continue;\n \n+            // only connect to full nodes\n+            if ((addr.nServices & REQUIRED_SERVICES) != REQUIRED_SERVICES)\n+                continue;\n+\n             // only consider very recently tried nodes after 30 failed attempts\n             if (nANow - addr.nLastTry < 600 && nTries < 30)\n                 continue;\n \n-            // for non-feelers, require all the services we'll want,\n-            // for feelers, only require they be a full node (only because most\n-            // SPV clients don't have a good address DB available)\n-            if (!fFeeler && !HasAllDesirableServiceFlags(addr.nServices)) {\n-                continue;\n-            } else if (fFeeler && !MayHaveUsefulAddressDB(addr.nServices)) {\n+            // only consider nodes missing relevant services after 40 failed attempts and only if less than half the outbound are up.\n+            ServiceFlags nRequiredServices = nRelevantServices;\n+            if (nTries >= 40 && nOutbound < (nMaxOutbound >> 1)) {\n+                nRequiredServices = REQUIRED_SERVICES;\n+            }\n+\n+            if ((addr.nServices & nRequiredServices) != nRequiredServices) {\n                 continue;\n             }\n \n@@ -1864,6 +1821,13 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n                 continue;\n \n             addrConnect = addr;\n+\n+            // regardless of the services assumed to be available, only require the minimum if half or more outbound have relevant services\n+            if (nOutboundRelevant >= (nMaxOutbound >> 1)) {\n+                addrConnect.nServices = REQUIRED_SERVICES;\n+            } else {\n+                addrConnect.nServices = nRequiredServices;\n+            }\n             break;\n         }\n \n@@ -1890,7 +1854,8 @@ std::vector<AddedNodeInfo> CConnman::GetAddedNodeInfo()\n     {\n         LOCK(cs_vAddedNodes);\n         ret.reserve(vAddedNodes.size());\n-        std::copy(vAddedNodes.cbegin(), vAddedNodes.cend(), std::back_inserter(lAddresses));\n+        for (const std::string& strAddNode : vAddedNodes)\n+            lAddresses.push_back(strAddNode);\n     }\n \n \n@@ -1936,6 +1901,11 @@ std::vector<AddedNodeInfo> CConnman::GetAddedNodeInfo()\n \n void CConnman::ThreadOpenAddedConnections()\n {\n+    {\n+        LOCK(cs_vAddedNodes);\n+        vAddedNodes = gArgs.GetArgs(\"-addnode\");\n+    }\n+\n     while (true)\n     {\n         CSemaphoreGrant grant(*semAddnode);\n@@ -1948,9 +1918,11 @@ void CConnman::ThreadOpenAddedConnections()\n                     // the addednodeinfo state might change.\n                     break;\n                 }\n+                // If strAddedNode is an IP/port, decode it immediately, so\n+                // OpenNetworkConnection can detect existing connections to that IP/port.\n                 tried = true;\n-                CAddress addr(CService(), NODE_NONE);\n-                OpenNetworkConnection(addr, false, &grant, info.strAddedNode.c_str(), false, false, true);\n+                CService service(LookupNumeric(info.strAddedNode.c_str(), Params().GetDefaultPort()));\n+                OpenNetworkConnection(CAddress(service, NODE_NONE), false, &grant, info.strAddedNode.c_str(), false, false, true);\n                 if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n                     return;\n             }\n@@ -1962,7 +1934,7 @@ void CConnman::ThreadOpenAddedConnections()\n }\n \n // if successful, this moves the passed grant to the constructed node\n-bool CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound, const char *pszDest, bool fOneShot, bool fFeeler, bool manual_connection)\n+bool CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound, const char *pszDest, bool fOneShot, bool fFeeler, bool fAddnode)\n {\n     //\n     // Initiate outbound network connection\n@@ -1991,10 +1963,10 @@ bool CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n         pnode->fOneShot = true;\n     if (fFeeler)\n         pnode->fFeeler = true;\n-    if (manual_connection)\n-        pnode->m_manual_connection = true;\n+    if (fAddnode)\n+        pnode->fAddnode = true;\n \n-    m_msgproc->InitializeNode(pnode);\n+    GetNodeSignals().InitializeNode(pnode, *this);\n     {\n         LOCK(cs_vNodes);\n         vNodes.push_back(pnode);\n@@ -2024,16 +1996,16 @@ void CConnman::ThreadMessageHandler()\n                 continue;\n \n             // Receive messages\n-            bool fMoreNodeWork = m_msgproc->ProcessMessages(pnode, flagInterruptMsgProc);\n+            bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n             fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n             if (flagInterruptMsgProc)\n                 return;\n+\n             // Send messages\n             {\n                 LOCK(pnode->cs_sendProcessing);\n-                m_msgproc->SendMessages(pnode, flagInterruptMsgProc);\n+                GetNodeSignals().SendMessages(pnode, *this, flagInterruptMsgProc);\n             }\n-\n             if (flagInterruptMsgProc)\n                 return;\n         }\n@@ -2072,21 +2044,44 @@ bool CConnman::BindListenPort(const CService &addrBind, std::string& strError, b\n         return false;\n     }\n \n-    SOCKET hListenSocket = CreateSocket(addrBind);\n+    SOCKET hListenSocket = socket(((struct sockaddr*)&sockaddr)->sa_family, SOCK_STREAM, IPPROTO_TCP);\n     if (hListenSocket == INVALID_SOCKET)\n     {\n         strError = strprintf(\"Error: Couldn't open socket for incoming connections (socket returned error %s)\", NetworkErrorString(WSAGetLastError()));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n+    if (!IsSelectableSocket(hListenSocket))\n+    {\n+        strError = \"Error: Couldn't create a listenable socket for incoming connections\";\n+        LogPrintf(\"%s\\n\", strError);\n+        return false;\n+    }\n+\n+\n #ifndef WIN32\n+#ifdef SO_NOSIGPIPE\n+    // Different way of disabling SIGPIPE on BSD\n+    setsockopt(hListenSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&nOne, sizeof(int));\n+#endif\n     // Allow binding if the port is still in TIME_WAIT state after\n     // the program was closed and restarted.\n     setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (void*)&nOne, sizeof(int));\n+    // Disable Nagle's algorithm\n+    setsockopt(hListenSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&nOne, sizeof(int));\n #else\n     setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (const char*)&nOne, sizeof(int));\n+    setsockopt(hListenSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&nOne, sizeof(int));\n #endif\n \n+    // Set to non-blocking, incoming connections will also inherit this\n+    if (!SetSocketNonBlocking(hListenSocket, true)) {\n+        CloseSocket(hListenSocket);\n+        strError = strprintf(\"BindListenPort: Setting listening socket to non-blocking failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));\n+        LogPrintf(\"%s\\n\", strError);\n+        return false;\n+    }\n+\n     // some systems don't have IPV6_V6ONLY but are always v6only; others do have the option\n     // and enable it by default or not. Try to enable it, if possible.\n     if (addrBind.IsIPv6()) {\n@@ -2213,8 +2208,9 @@ CConnman::CConnman(uint64_t nSeed0In, uint64_t nSeed1In) : nSeed0(nSeed0In), nSe\n     nLastNodeId = 0;\n     nSendBufferMaxSize = 0;\n     nReceiveFloodSize = 0;\n+    semOutbound = nullptr;\n+    semAddnode = nullptr;\n     flagInterruptMsgProc = false;\n-    SetTryNewOutboundPeer(false);\n \n     Options connOptions;\n     Init(connOptions);\n@@ -2260,16 +2256,10 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n {\n     Init(connOptions);\n \n-    {\n-        LOCK(cs_totalBytesRecv);\n-        nTotalBytesRecv = 0;\n-    }\n-    {\n-        LOCK(cs_totalBytesSent);\n-        nTotalBytesSent = 0;\n-        nMaxOutboundTotalBytesSentInCycle = 0;\n-        nMaxOutboundCycleStartTime = 0;\n-    }\n+    nTotalBytesRecv = 0;\n+    nTotalBytesSent = 0;\n+    nMaxOutboundTotalBytesSentInCycle = 0;\n+    nMaxOutboundCycleStartTime = 0;\n \n     if (fListen && !InitBinds(connOptions.vBinds, connOptions.vWhiteBinds)) {\n         if (clientInterface) {\n@@ -2324,17 +2314,16 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n \n     if (semOutbound == nullptr) {\n         // initialize semaphore\n-        semOutbound = MakeUnique<CSemaphore>(std::min((nMaxOutbound + nMaxFeeler), nMaxConnections));\n+        semOutbound = new CSemaphore(std::min((nMaxOutbound + nMaxFeeler), nMaxConnections));\n     }\n     if (semAddnode == nullptr) {\n         // initialize semaphore\n-        semAddnode = MakeUnique<CSemaphore>(nMaxAddnode);\n+        semAddnode = new CSemaphore(nMaxAddnode);\n     }\n \n     //\n     // Start threads\n     //\n-    assert(m_msgproc);\n     InterruptSocks5(false);\n     interruptNet.reset();\n     flagInterruptMsgProc = false;\n@@ -2355,16 +2344,9 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     // Initiate outbound connections from -addnode\n     threadOpenAddedConnections = std::thread(&TraceThread<std::function<void()> >, \"addcon\", std::function<void()>(std::bind(&CConnman::ThreadOpenAddedConnections, this)));\n \n-    if (connOptions.m_use_addrman_outgoing && !connOptions.m_specified_outgoing.empty()) {\n-        if (clientInterface) {\n-            clientInterface->ThreadSafeMessageBox(\n-                _(\"Cannot provide specific connections and have addrman find outgoing connections at the same.\"),\n-                \"\", CClientUIInterface::MSG_ERROR);\n-        }\n-        return false;\n-    }\n-    if (connOptions.m_use_addrman_outgoing || !connOptions.m_specified_outgoing.empty())\n-        threadOpenConnections = std::thread(&TraceThread<std::function<void()> >, \"opencon\", std::function<void()>(std::bind(&CConnman::ThreadOpenConnections, this, connOptions.m_specified_outgoing)));\n+    // Initiate outbound connections unless connect=0\n+    if (!gArgs.IsArgSet(\"-connect\") || gArgs.GetArgs(\"-connect\").size() != 1 || gArgs.GetArgs(\"-connect\")[0] != \"0\")\n+        threadOpenConnections = std::thread(&TraceThread<std::function<void()> >, \"opencon\", std::function<void()>(std::bind(&CConnman::ThreadOpenConnections, this)));\n \n     // Process messages\n     threadMessageHandler = std::thread(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n@@ -2451,18 +2433,19 @@ void CConnman::Stop()\n     vNodes.clear();\n     vNodesDisconnected.clear();\n     vhListenSocket.clear();\n-    semOutbound.reset();\n-    semAddnode.reset();\n+    delete semOutbound;\n+    semOutbound = nullptr;\n+    delete semAddnode;\n+    semAddnode = nullptr;\n }\n \n void CConnman::DeleteNode(CNode* pnode)\n {\n     assert(pnode);\n     bool fUpdateConnectionTime = false;\n-    m_msgproc->FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n-    if(fUpdateConnectionTime) {\n+    GetNodeSignals().FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n+    if(fUpdateConnectionTime)\n         addrman.Connected(pnode->addr);\n-    }\n     delete pnode;\n }\n \n@@ -2500,8 +2483,9 @@ std::vector<CAddress> CConnman::GetAddresses()\n bool CConnman::AddNode(const std::string& strNode)\n {\n     LOCK(cs_vAddedNodes);\n-    for (const std::string& it : vAddedNodes) {\n-        if (strNode == it) return false;\n+    for(std::vector<std::string>::const_iterator it = vAddedNodes.begin(); it != vAddedNodes.end(); ++it) {\n+        if (strNode == *it)\n+            return false;\n     }\n \n     vAddedNodes.push_back(strNode);\n@@ -2527,11 +2511,9 @@ size_t CConnman::GetNodeCount(NumConnections flags)\n         return vNodes.size();\n \n     int nNum = 0;\n-    for (const auto& pnode : vNodes) {\n-        if (flags & (pnode->fInbound ? CONNECTIONS_IN : CONNECTIONS_OUT)) {\n+    for(std::vector<CNode*>::const_iterator it = vNodes.begin(); it != vNodes.end(); ++it)\n+        if (flags & ((*it)->fInbound ? CONNECTIONS_IN : CONNECTIONS_OUT))\n             nNum++;\n-        }\n-    }\n \n     return nNum;\n }\n@@ -2541,7 +2523,8 @@ void CConnman::GetNodeStats(std::vector<CNodeStats>& vstats)\n     vstats.clear();\n     LOCK(cs_vNodes);\n     vstats.reserve(vNodes.size());\n-    for (CNode* pnode : vNodes) {\n+    for(std::vector<CNode*>::iterator it = vNodes.begin(); it != vNodes.end(); ++it) {\n+        CNode* pnode = *it;\n         vstats.emplace_back();\n         pnode->copyStats(vstats.back());\n     }\n@@ -2708,6 +2691,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     nSendVersion(0)\n {\n     nServices = NODE_NONE;\n+    nServicesExpected = NODE_NONE;\n     hSocket = hSocketIn;\n     nRecvVersion = INIT_PROTO_VERSION;\n     nLastSend = 0;\n@@ -2720,7 +2704,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     strSubVer = \"\";\n     fWhitelisted = false;\n     fOneShot = false;\n-    m_manual_connection = false;\n+    fAddnode = false;\n     fClient = false; // set by version message\n     fFeeler = false;\n     fSuccessfullyConnected = false;\n@@ -2738,7 +2722,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     nNextInvSend = 0;\n     fRelayTxes = false;\n     fSentAddr = false;\n-    pfilter = MakeUnique<CBloomFilter>();\n+    pfilter = new CBloomFilter();\n     timeLastMempoolReq = 0;\n     nLastBlockTime = 0;\n     nLastTXTime = 0;\n@@ -2768,6 +2752,9 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n CNode::~CNode()\n {\n     CloseSocket(hSocket);\n+\n+    if (pfilter)\n+        delete pfilter;\n }\n \n void CNode::AskFor(const CInv& inv)"
      },
      {
        "sha": "a32736aa97bf2be8153d63ee0e7fdaa3618cc99b",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 55,
        "deletions": 76,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,21 +6,21 @@\n #ifndef BITCOIN_NET_H\n #define BITCOIN_NET_H\n \n-#include <addrdb.h>\n-#include <addrman.h>\n-#include <amount.h>\n-#include <bloom.h>\n-#include <compat.h>\n-#include <hash.h>\n-#include <limitedmap.h>\n-#include <netaddress.h>\n-#include <policy/feerate.h>\n-#include <protocol.h>\n-#include <random.h>\n-#include <streams.h>\n-#include <sync.h>\n-#include <uint256.h>\n-#include <threadinterrupt.h>\n+#include \"addrdb.h\"\n+#include \"addrman.h\"\n+#include \"amount.h\"\n+#include \"bloom.h\"\n+#include \"compat.h\"\n+#include \"hash.h\"\n+#include \"limitedmap.h\"\n+#include \"netaddress.h\"\n+#include \"policy/feerate.h\"\n+#include \"protocol.h\"\n+#include \"random.h\"\n+#include \"streams.h\"\n+#include \"sync.h\"\n+#include \"uint256.h\"\n+#include \"threadinterrupt.h\"\n \n #include <atomic>\n #include <deque>\n@@ -33,6 +33,7 @@\n #include <arpa/inet.h>\n #endif\n \n+#include <boost/signals2/signal.hpp>\n \n class CScheduler;\n class CNode;\n@@ -84,6 +85,8 @@ static const bool DEFAULT_FORCEDNSSEED = false;\n static const size_t DEFAULT_MAXRECEIVEBUFFER = 5 * 1000;\n static const size_t DEFAULT_MAXSENDBUFFER    = 1 * 1000;\n \n+static const ServiceFlags REQUIRED_SERVICES = NODE_NETWORK;\n+\n // NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n static const unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n \n@@ -113,7 +116,7 @@ struct CSerializedNetMsg\n     std::string command;\n };\n \n-class NetEventsInterface;\n+\n class CConnman\n {\n public:\n@@ -128,46 +131,36 @@ class CConnman\n     struct Options\n     {\n         ServiceFlags nLocalServices = NODE_NONE;\n+        ServiceFlags nRelevantServices = NODE_NONE;\n         int nMaxConnections = 0;\n         int nMaxOutbound = 0;\n         int nMaxAddnode = 0;\n         int nMaxFeeler = 0;\n         int nBestHeight = 0;\n         CClientUIInterface* uiInterface = nullptr;\n-        NetEventsInterface* m_msgproc = nullptr;\n         unsigned int nSendBufferMaxSize = 0;\n         unsigned int nReceiveFloodSize = 0;\n         uint64_t nMaxOutboundTimeframe = 0;\n         uint64_t nMaxOutboundLimit = 0;\n         std::vector<std::string> vSeedNodes;\n         std::vector<CSubNet> vWhitelistedRange;\n         std::vector<CService> vBinds, vWhiteBinds;\n-        bool m_use_addrman_outgoing = true;\n-        std::vector<std::string> m_specified_outgoing;\n-        std::vector<std::string> m_added_nodes;\n     };\n \n     void Init(const Options& connOptions) {\n         nLocalServices = connOptions.nLocalServices;\n+        nRelevantServices = connOptions.nRelevantServices;\n         nMaxConnections = connOptions.nMaxConnections;\n         nMaxOutbound = std::min(connOptions.nMaxOutbound, connOptions.nMaxConnections);\n         nMaxAddnode = connOptions.nMaxAddnode;\n         nMaxFeeler = connOptions.nMaxFeeler;\n         nBestHeight = connOptions.nBestHeight;\n         clientInterface = connOptions.uiInterface;\n-        m_msgproc = connOptions.m_msgproc;\n         nSendBufferMaxSize = connOptions.nSendBufferMaxSize;\n         nReceiveFloodSize = connOptions.nReceiveFloodSize;\n-        {\n-            LOCK(cs_totalBytesSent);\n-            nMaxOutboundTimeframe = connOptions.nMaxOutboundTimeframe;\n-            nMaxOutboundLimit = connOptions.nMaxOutboundLimit;\n-        }\n+        nMaxOutboundTimeframe = connOptions.nMaxOutboundTimeframe;\n+        nMaxOutboundLimit = connOptions.nMaxOutboundLimit;\n         vWhitelistedRange = connOptions.vWhitelistedRange;\n-        {\n-            LOCK(cs_vAddedNodes);\n-            vAddedNodes = connOptions.m_added_nodes;\n-        }\n     }\n \n     CConnman(uint64_t seed0, uint64_t seed1);\n@@ -177,7 +170,7 @@ class CConnman\n     void Interrupt();\n     bool GetNetworkActive() const { return fNetworkActive; };\n     void SetNetworkActive(bool active);\n-    bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound = nullptr, const char *strDest = nullptr, bool fOneShot = false, bool fFeeler = false, bool manual_connection = false);\n+    bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound = nullptr, const char *strDest = nullptr, bool fOneShot = false, bool fFeeler = false, bool fAddnode = false);\n     bool CheckIncomingNonce(uint64_t nonce);\n \n     bool ForNode(NodeId id, std::function<bool(CNode* pnode)> func);\n@@ -257,19 +250,6 @@ class CConnman\n     void GetBanned(banmap_t &banmap);\n     void SetBanned(const banmap_t &banmap);\n \n-    // This allows temporarily exceeding nMaxOutbound, with the goal of finding\n-    // a peer that is better than all our current peers.\n-    void SetTryNewOutboundPeer(bool flag);\n-    bool GetTryNewOutboundPeer();\n-\n-    // Return the number of outbound peers we have in excess of our target (eg,\n-    // if we previously called SetTryNewOutboundPeer(true), and have since set\n-    // to false, we may have extra peers that we wish to disconnect). This may\n-    // return a value less than (num_outbound_connections - num_outbound_slots)\n-    // in cases where some outbound connections are not yet fully connected, or\n-    // not yet fully disconnected.\n-    int GetExtraOutboundCount();\n-\n     bool AddNode(const std::string& node);\n     bool RemoveAddedNode(const std::string& node);\n     std::vector<AddedNodeInfo> GetAddedNodeInfo();\n@@ -328,7 +308,7 @@ class CConnman\n     void ThreadOpenAddedConnections();\n     void AddOneShot(const std::string& strDest);\n     void ProcessOneShot();\n-    void ThreadOpenConnections(std::vector<std::string> connect);\n+    void ThreadOpenConnections();\n     void ThreadMessageHandler();\n     void AcceptConnection(const ListenSocket& hListenSocket);\n     void ThreadSocketHandler();\n@@ -370,14 +350,14 @@ class CConnman\n     // Network usage totals\n     CCriticalSection cs_totalBytesRecv;\n     CCriticalSection cs_totalBytesSent;\n-    uint64_t nTotalBytesRecv GUARDED_BY(cs_totalBytesRecv);\n-    uint64_t nTotalBytesSent GUARDED_BY(cs_totalBytesSent);\n+    uint64_t nTotalBytesRecv;\n+    uint64_t nTotalBytesSent;\n \n     // outbound limit & stats\n-    uint64_t nMaxOutboundTotalBytesSentInCycle GUARDED_BY(cs_totalBytesSent);\n-    uint64_t nMaxOutboundCycleStartTime GUARDED_BY(cs_totalBytesSent);\n-    uint64_t nMaxOutboundLimit GUARDED_BY(cs_totalBytesSent);\n-    uint64_t nMaxOutboundTimeframe GUARDED_BY(cs_totalBytesSent);\n+    uint64_t nMaxOutboundTotalBytesSentInCycle;\n+    uint64_t nMaxOutboundCycleStartTime;\n+    uint64_t nMaxOutboundLimit;\n+    uint64_t nMaxOutboundTimeframe;\n \n     // Whitelisted ranges. Any node connecting from these is automatically\n     // whitelisted (as well as those connecting to whitelisted binds).\n@@ -395,7 +375,7 @@ class CConnman\n     CAddrMan addrman;\n     std::deque<std::string> vOneShots;\n     CCriticalSection cs_vOneShots;\n-    std::vector<std::string> vAddedNodes GUARDED_BY(cs_vAddedNodes);\n+    std::vector<std::string> vAddedNodes;\n     CCriticalSection cs_vAddedNodes;\n     std::vector<CNode*> vNodes;\n     std::list<CNode*> vNodesDisconnected;\n@@ -405,15 +385,17 @@ class CConnman\n     /** Services this instance offers */\n     ServiceFlags nLocalServices;\n \n-    std::unique_ptr<CSemaphore> semOutbound;\n-    std::unique_ptr<CSemaphore> semAddnode;\n+    /** Services this instance cares about */\n+    ServiceFlags nRelevantServices;\n+\n+    CSemaphore *semOutbound;\n+    CSemaphore *semAddnode;\n     int nMaxConnections;\n     int nMaxOutbound;\n     int nMaxAddnode;\n     int nMaxFeeler;\n     std::atomic<int> nBestHeight;\n     CClientUIInterface* clientInterface;\n-    NetEventsInterface* m_msgproc;\n \n     /** SipHasher seeds for deterministic randomness */\n     const uint64_t nSeed0, nSeed1;\n@@ -432,13 +414,6 @@ class CConnman\n     std::thread threadOpenAddedConnections;\n     std::thread threadOpenConnections;\n     std::thread threadMessageHandler;\n-\n-    /** flag for deciding to connect to an extra outbound peer,\n-     *  in excess of nMaxOutbound\n-     *  This takes the place of a feeler connection */\n-    std::atomic_bool m_try_another_outbound_peer;\n-\n-    friend struct CConnmanTest;\n };\n extern std::unique_ptr<CConnman> g_connman;\n void Discover(boost::thread_group& threadGroup);\n@@ -461,18 +436,19 @@ struct CombinerAll\n     }\n };\n \n-/**\n- * Interface for message handling\n- */\n-class NetEventsInterface\n+// Signals for message handling\n+struct CNodeSignals\n {\n-public:\n-    virtual bool ProcessMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n-    virtual bool SendMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n-    virtual void InitializeNode(CNode* pnode) = 0;\n-    virtual void FinalizeNode(NodeId id, bool& update_connection_time) = 0;\n+    boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> ProcessMessages;\n+    boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> SendMessages;\n+    boost::signals2::signal<void (CNode*, CConnman&)> InitializeNode;\n+    boost::signals2::signal<void (NodeId, bool&)> FinalizeNode;\n };\n \n+\n+CNodeSignals& GetNodeSignals();\n+\n+\n enum\n {\n     LOCAL_NONE,   // unknown\n@@ -532,7 +508,7 @@ class CNodeStats\n     int nVersion;\n     std::string cleanSubVer;\n     bool fInbound;\n-    bool m_manual_connection;\n+    bool fAddnode;\n     int nStartingHeight;\n     uint64_t nSendBytes;\n     mapMsgCmdSize mapSendBytesPerMsgCmd;\n@@ -604,6 +580,7 @@ class CNode\n public:\n     // socket\n     std::atomic<ServiceFlags> nServices;\n+    ServiceFlags nServicesExpected;\n     SOCKET hSocket;\n     size_t nSendSize; // total size of all vSendMsg entries\n     size_t nSendOffset; // offset inside the first vSendMsg already sent\n@@ -641,7 +618,7 @@ class CNode\n     bool fWhitelisted; // This peer can bypass DoS banning.\n     bool fFeeler; // If true this node is being used as a short lived feeler.\n     bool fOneShot;\n-    bool m_manual_connection;\n+    bool fAddnode;\n     bool fClient;\n     const bool fInbound;\n     std::atomic_bool fSuccessfullyConnected;\n@@ -654,7 +631,7 @@ class CNode\n     bool fSentAddr;\n     CSemaphoreGrant grantOutbound;\n     CCriticalSection cs_filter;\n-    std::unique_ptr<CBloomFilter> pfilter;\n+    CBloomFilter* pfilter;\n     std::atomic<int> nRefCount;\n \n     const uint64_t nKeyedNetGroup;\n@@ -722,11 +699,13 @@ class CNode\n \n     CNode(NodeId id, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn, const CAddress &addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress &addrBindIn, const std::string &addrNameIn = \"\", bool fInboundIn = false);\n     ~CNode();\n-    CNode(const CNode&) = delete;\n-    CNode& operator=(const CNode&) = delete;\n \n private:\n+    CNode(const CNode&);\n+    void operator=(const CNode&);\n     const NodeId id;\n+\n+\n     const uint64_t nLocalHostNonce;\n     // Services offered to this peer\n     const ServiceFlags nLocalServices;"
      },
      {
        "sha": "65f31e8b525e9cd21d2737cb2abd201f0470e7f4",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 365,
        "deletions": 701,
        "changes": 1066,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "db6d81e6b67f47a56e45a17815fea164c33e263a",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 22,
        "deletions": 39,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,9 +6,8 @@\n #ifndef BITCOIN_NET_PROCESSING_H\n #define BITCOIN_NET_PROCESSING_H\n \n-#include <net.h>\n-#include <validationinterface.h>\n-#include <consensus/params.h>\n+#include \"net.h\"\n+#include \"validationinterface.h\"\n \n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n@@ -22,51 +21,23 @@ static const unsigned int DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN = 100;\n  *  Timeout = base + per_header * (expected number of headers) */\n static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_BASE = 15 * 60 * 1000000; // 15 minutes\n static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER = 1000; // 1ms/header\n-/** Protect at least this many outbound peers from disconnection due to slow/\n- * behind headers chain.\n- */\n-static constexpr int32_t MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT = 4;\n-/** Timeout for (unprotected) outbound peers to sync to our chainwork, in seconds */\n-static constexpr int64_t CHAIN_SYNC_TIMEOUT = 20 * 60; // 20 minutes\n-/** How frequently to check for stale tips, in seconds */\n-static constexpr int64_t STALE_CHECK_INTERVAL = 10 * 60; // 10 minutes\n-/** How frequently to check for extra outbound peers and disconnect, in seconds */\n-static constexpr int64_t EXTRA_PEER_CHECK_INTERVAL = 45;\n-/** Minimum time an outbound-peer-eviction candidate must be connected for, in order to evict, in seconds */\n-static constexpr int64_t MINIMUM_CONNECT_TIME = 30;\n \n-class PeerLogicValidation : public CValidationInterface, public NetEventsInterface {\n+/** Register with a network node to receive its signals */\n+void RegisterNodeSignals(CNodeSignals& nodeSignals);\n+/** Unregister a network node */\n+void UnregisterNodeSignals(CNodeSignals& nodeSignals);\n+\n+class PeerLogicValidation : public CValidationInterface {\n private:\n-    CConnman* const connman;\n+    CConnman* connman;\n \n public:\n-    explicit PeerLogicValidation(CConnman* connman, CScheduler &scheduler);\n+    PeerLogicValidation(CConnman* connmanIn);\n \n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected, const std::vector<CTransactionRef>& vtxConflicted) override;\n     void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n     void BlockChecked(const CBlock& block, const CValidationState& state) override;\n     void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n-\n-\n-    void InitializeNode(CNode* pnode) override;\n-    void FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) override;\n-    /** Process protocol messages received from a given node */\n-    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n-    /**\n-    * Send queued protocol messages to be sent to a give node.\n-    *\n-    * @param[in]   pto             The node which we are sending messages to.\n-    * @param[in]   interrupt       Interrupt condition for processing threads\n-    * @return                      True if there is more work to be done\n-    */\n-    bool SendMessages(CNode* pto, std::atomic<bool>& interrupt) override;\n-\n-    void ConsiderEviction(CNode *pto, int64_t time_in_seconds);\n-    void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n-    void EvictExtraOutboundPeers(int64_t time_in_seconds);\n-\n-private:\n-    int64_t m_stale_tip_check_time; //! Next time to check for stale tip\n };\n \n struct CNodeStateStats {\n@@ -81,4 +52,16 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n /** Increase a node's misbehavior score. */\n void Misbehaving(NodeId nodeid, int howmuch);\n \n+/** Process protocol messages received from a given node */\n+bool ProcessMessages(CNode* pfrom, CConnman& connman, const std::atomic<bool>& interrupt);\n+/**\n+ * Send queued protocol messages to be sent to a give node.\n+ *\n+ * @param[in]   pto             The node which we are sending messages to.\n+ * @param[in]   connman         The connection manager for that node.\n+ * @param[in]   interrupt       Interrupt condition for processing threads\n+ * @return                      True if there is more work to be done\n+ */\n+bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interrupt);\n+\n #endif // BITCOIN_NET_PROCESSING_H"
      },
      {
        "sha": "b8a261c921027a7531c8e3b301668d6a301c57e5",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,10 +3,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <netaddress.h>\n-#include <hash.h>\n-#include <utilstrencodings.h>\n-#include <tinyformat.h>\n+#ifdef HAVE_CONFIG_H\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include \"netaddress.h\"\n+#include \"hash.h\"\n+#include \"utilstrencodings.h\"\n+#include \"tinyformat.h\"\n \n static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};"
      },
      {
        "sha": "57ce897db5e523c444b10c39a3402176fdabdd60",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,11 +6,11 @@\n #define BITCOIN_NETADDRESS_H\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <compat.h>\n-#include <serialize.h>\n+#include \"compat.h\"\n+#include \"serialize.h\"\n \n #include <stdint.h>\n #include <string>\n@@ -36,7 +36,7 @@ class CNetAddr\n \n     public:\n         CNetAddr();\n-        explicit CNetAddr(const struct in_addr& ipv4Addr);\n+        CNetAddr(const struct in_addr& ipv4Addr);\n         void Init();\n         void SetIP(const CNetAddr& ip);\n \n@@ -82,7 +82,7 @@ class CNetAddr\n         std::vector<unsigned char> GetGroup() const;\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = nullptr) const;\n \n-        explicit CNetAddr(const struct in6_addr& pipv6Addr, const uint32_t scope = 0);\n+        CNetAddr(const struct in6_addr& pipv6Addr, const uint32_t scope = 0);\n         bool GetIn6Addr(struct in6_addr* pipv6Addr) const;\n \n         friend bool operator==(const CNetAddr& a, const CNetAddr& b);\n@@ -146,7 +146,7 @@ class CService : public CNetAddr\n         CService();\n         CService(const CNetAddr& ip, unsigned short port);\n         CService(const struct in_addr& ipv4Addr, unsigned short port);\n-        explicit CService(const struct sockaddr_in& addr);\n+        CService(const struct sockaddr_in& addr);\n         void Init();\n         unsigned short GetPort() const;\n         bool GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const;\n@@ -160,7 +160,7 @@ class CService : public CNetAddr\n         std::string ToStringIPPort() const;\n \n         CService(const struct in6_addr& ipv6Addr, unsigned short port);\n-        explicit CService(const struct sockaddr_in6& addr);\n+        CService(const struct sockaddr_in6& addr);\n \n         ADD_SERIALIZE_METHODS;\n "
      },
      {
        "sha": "05f9f6961c45d884ac8469ec9e013aff91ab7bd4",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 126,
        "deletions": 128,
        "changes": 254,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,14 +3,18 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <netbase.h>\n+#ifdef HAVE_CONFIG_H\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include \"netbase.h\"\n \n-#include <hash.h>\n-#include <sync.h>\n-#include <uint256.h>\n-#include <random.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include \"hash.h\"\n+#include \"sync.h\"\n+#include \"uint256.h\"\n+#include \"random.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n \n #include <atomic>\n \n@@ -180,48 +184,6 @@ struct timeval MillisToTimeval(int64_t nTimeout)\n     return timeout;\n }\n \n-/** SOCKS version */\n-enum SOCKSVersion: uint8_t {\n-    SOCKS4 = 0x04,\n-    SOCKS5 = 0x05\n-};\n-\n-/** Values defined for METHOD in RFC1928 */\n-enum SOCKS5Method: uint8_t {\n-    NOAUTH = 0x00,        //! No authentication required\n-    GSSAPI = 0x01,        //! GSSAPI\n-    USER_PASS = 0x02,     //! Username/password\n-    NO_ACCEPTABLE = 0xff, //! No acceptable methods\n-};\n-\n-/** Values defined for CMD in RFC1928 */\n-enum SOCKS5Command: uint8_t {\n-    CONNECT = 0x01,\n-    BIND = 0x02,\n-    UDP_ASSOCIATE = 0x03\n-};\n-\n-/** Values defined for REP in RFC1928 */\n-enum SOCKS5Reply: uint8_t {\n-    SUCCEEDED = 0x00,        //! Succeeded\n-    GENFAILURE = 0x01,       //! General failure\n-    NOTALLOWED = 0x02,       //! Connection not allowed by ruleset\n-    NETUNREACHABLE = 0x03,   //! Network unreachable\n-    HOSTUNREACHABLE = 0x04,  //! Network unreachable\n-    CONNREFUSED = 0x05,      //! Connection refused\n-    TTLEXPIRED = 0x06,       //! TTL expired\n-    CMDUNSUPPORTED = 0x07,   //! Command not supported\n-    ATYPEUNSUPPORTED = 0x08, //! Address type not supported\n-};\n-\n-/** Values defined for ATYPE in RFC1928 */\n-enum SOCKS5Atyp: uint8_t {\n-    IPV4 = 0x01,\n-    DOMAINNAME = 0x03,\n-    IPV6 = 0x04,\n-};\n-\n-/** Status codes that can be returned by InterruptibleRecv */\n enum class IntrRecvError {\n     OK,\n     Timeout,\n@@ -241,15 +203,15 @@ enum class IntrRecvError {\n  *\n  * @note This function requires that hSocket is in non-blocking mode.\n  */\n-static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, const SOCKET& hSocket)\n+static IntrRecvError InterruptibleRecv(char* data, size_t len, int timeout, const SOCKET& hSocket)\n {\n     int64_t curTime = GetTimeMillis();\n     int64_t endTime = curTime + timeout;\n     // Maximum time to wait in one select call. It will take up until this time (in millis)\n     // to break off in case of an interruption.\n     const int64_t maxWait = 1000;\n     while (len > 0 && curTime < endTime) {\n-        ssize_t ret = recv(hSocket, (char*)data, len, 0); // Optimistically try the recv first\n+        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n         if (ret > 0) {\n             len -= ret;\n             data += ret;\n@@ -280,73 +242,66 @@ static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, c\n     return len == 0 ? IntrRecvError::OK : IntrRecvError::Timeout;\n }\n \n-/** Credentials for proxy authentication */\n struct ProxyCredentials\n {\n     std::string username;\n     std::string password;\n };\n \n-/** Convert SOCKS5 reply to an error message */\n-std::string Socks5ErrorString(uint8_t err)\n+std::string Socks5ErrorString(int err)\n {\n     switch(err) {\n-        case SOCKS5Reply::GENFAILURE:\n-            return \"general failure\";\n-        case SOCKS5Reply::NOTALLOWED:\n-            return \"connection not allowed\";\n-        case SOCKS5Reply::NETUNREACHABLE:\n-            return \"network unreachable\";\n-        case SOCKS5Reply::HOSTUNREACHABLE:\n-            return \"host unreachable\";\n-        case SOCKS5Reply::CONNREFUSED:\n-            return \"connection refused\";\n-        case SOCKS5Reply::TTLEXPIRED:\n-            return \"TTL expired\";\n-        case SOCKS5Reply::CMDUNSUPPORTED:\n-            return \"protocol error\";\n-        case SOCKS5Reply::ATYPEUNSUPPORTED:\n-            return \"address type not supported\";\n-        default:\n-            return \"unknown\";\n+        case 0x01: return \"general failure\";\n+        case 0x02: return \"connection not allowed\";\n+        case 0x03: return \"network unreachable\";\n+        case 0x04: return \"host unreachable\";\n+        case 0x05: return \"connection refused\";\n+        case 0x06: return \"TTL expired\";\n+        case 0x07: return \"protocol error\";\n+        case 0x08: return \"address type not supported\";\n+        default:   return \"unknown\";\n     }\n }\n \n /** Connect using SOCKS5 (as described in RFC1928) */\n-static bool Socks5(const std::string& strDest, int port, const ProxyCredentials *auth, const SOCKET& hSocket)\n+static bool Socks5(const std::string& strDest, int port, const ProxyCredentials *auth, SOCKET& hSocket)\n {\n     IntrRecvError recvr;\n     LogPrint(BCLog::NET, \"SOCKS5 connecting %s\\n\", strDest);\n     if (strDest.size() > 255) {\n+        CloseSocket(hSocket);\n         return error(\"Hostname too long\");\n     }\n     // Accepted authentication methods\n     std::vector<uint8_t> vSocks5Init;\n-    vSocks5Init.push_back(SOCKSVersion::SOCKS5);\n+    vSocks5Init.push_back(0x05);\n     if (auth) {\n-        vSocks5Init.push_back(0x02); // Number of methods\n-        vSocks5Init.push_back(SOCKS5Method::NOAUTH);\n-        vSocks5Init.push_back(SOCKS5Method::USER_PASS);\n+        vSocks5Init.push_back(0x02); // # METHODS\n+        vSocks5Init.push_back(0x00); // X'00' NO AUTHENTICATION REQUIRED\n+        vSocks5Init.push_back(0x02); // X'02' USERNAME/PASSWORD (RFC1929)\n     } else {\n-        vSocks5Init.push_back(0x01); // Number of methods\n-        vSocks5Init.push_back(SOCKS5Method::NOAUTH);\n+        vSocks5Init.push_back(0x01); // # METHODS\n+        vSocks5Init.push_back(0x00); // X'00' NO AUTHENTICATION REQUIRED\n     }\n     ssize_t ret = send(hSocket, (const char*)vSocks5Init.data(), vSocks5Init.size(), MSG_NOSIGNAL);\n     if (ret != (ssize_t)vSocks5Init.size()) {\n+        CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n     }\n-    uint8_t pchRet1[2];\n+    char pchRet1[2];\n     if ((recvr = InterruptibleRecv(pchRet1, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n+        CloseSocket(hSocket);\n         LogPrintf(\"Socks5() connect to %s:%d failed: InterruptibleRecv() timeout or other failure\\n\", strDest, port);\n         return false;\n     }\n-    if (pchRet1[0] != SOCKSVersion::SOCKS5) {\n+    if (pchRet1[0] != 0x05) {\n+        CloseSocket(hSocket);\n         return error(\"Proxy failed to initialize\");\n     }\n-    if (pchRet1[1] == SOCKS5Method::USER_PASS && auth) {\n+    if (pchRet1[1] == 0x02 && auth) {\n         // Perform username/password authentication (as described in RFC1929)\n         std::vector<uint8_t> vAuth;\n-        vAuth.push_back(0x01); // Current (and only) version of user/pass subnegotiation\n+        vAuth.push_back(0x01);\n         if (auth->username.size() > 255 || auth->password.size() > 255)\n             return error(\"Proxy username or password too long\");\n         vAuth.push_back(auth->username.size());\n@@ -355,36 +310,42 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n         vAuth.insert(vAuth.end(), auth->password.begin(), auth->password.end());\n         ret = send(hSocket, (const char*)vAuth.data(), vAuth.size(), MSG_NOSIGNAL);\n         if (ret != (ssize_t)vAuth.size()) {\n+            CloseSocket(hSocket);\n             return error(\"Error sending authentication to proxy\");\n         }\n         LogPrint(BCLog::PROXY, \"SOCKS5 sending proxy authentication %s:%s\\n\", auth->username, auth->password);\n-        uint8_t pchRetA[2];\n+        char pchRetA[2];\n         if ((recvr = InterruptibleRecv(pchRetA, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n+            CloseSocket(hSocket);\n             return error(\"Error reading proxy authentication response\");\n         }\n         if (pchRetA[0] != 0x01 || pchRetA[1] != 0x00) {\n+            CloseSocket(hSocket);\n             return error(\"Proxy authentication unsuccessful\");\n         }\n-    } else if (pchRet1[1] == SOCKS5Method::NOAUTH) {\n+    } else if (pchRet1[1] == 0x00) {\n         // Perform no authentication\n     } else {\n+        CloseSocket(hSocket);\n         return error(\"Proxy requested wrong authentication method %02x\", pchRet1[1]);\n     }\n     std::vector<uint8_t> vSocks5;\n-    vSocks5.push_back(SOCKSVersion::SOCKS5); // VER protocol version\n-    vSocks5.push_back(SOCKS5Command::CONNECT); // CMD CONNECT\n-    vSocks5.push_back(0x00); // RSV Reserved must be 0\n-    vSocks5.push_back(SOCKS5Atyp::DOMAINNAME); // ATYP DOMAINNAME\n+    vSocks5.push_back(0x05); // VER protocol version\n+    vSocks5.push_back(0x01); // CMD CONNECT\n+    vSocks5.push_back(0x00); // RSV Reserved\n+    vSocks5.push_back(0x03); // ATYP DOMAINNAME\n     vSocks5.push_back(strDest.size()); // Length<=255 is checked at beginning of function\n     vSocks5.insert(vSocks5.end(), strDest.begin(), strDest.end());\n     vSocks5.push_back((port >> 8) & 0xFF);\n     vSocks5.push_back((port >> 0) & 0xFF);\n     ret = send(hSocket, (const char*)vSocks5.data(), vSocks5.size(), MSG_NOSIGNAL);\n     if (ret != (ssize_t)vSocks5.size()) {\n+        CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n     }\n-    uint8_t pchRet2[4];\n+    char pchRet2[4];\n     if ((recvr = InterruptibleRecv(pchRet2, 4, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n+        CloseSocket(hSocket);\n         if (recvr == IntrRecvError::Timeout) {\n             /* If a timeout happens here, this effectively means we timed out while connecting\n              * to the remote node. This is very common for Tor, so do not print an\n@@ -394,62 +355,64 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n             return error(\"Error while reading proxy response\");\n         }\n     }\n-    if (pchRet2[0] != SOCKSVersion::SOCKS5) {\n+    if (pchRet2[0] != 0x05) {\n+        CloseSocket(hSocket);\n         return error(\"Proxy failed to accept request\");\n     }\n-    if (pchRet2[1] != SOCKS5Reply::SUCCEEDED) {\n+    if (pchRet2[1] != 0x00) {\n         // Failures to connect to a peer that are not proxy errors\n+        CloseSocket(hSocket);\n         LogPrintf(\"Socks5() connect to %s:%d failed: %s\\n\", strDest, port, Socks5ErrorString(pchRet2[1]));\n         return false;\n     }\n-    if (pchRet2[2] != 0x00) { // Reserved field must be 0\n+    if (pchRet2[2] != 0x00) {\n+        CloseSocket(hSocket);\n         return error(\"Error: malformed proxy response\");\n     }\n-    uint8_t pchRet3[256];\n+    char pchRet3[256];\n     switch (pchRet2[3])\n     {\n-        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case SOCKS5Atyp::DOMAINNAME:\n+        case 0x01: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case 0x04: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case 0x03:\n         {\n             recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, hSocket);\n             if (recvr != IntrRecvError::OK) {\n+                CloseSocket(hSocket);\n                 return error(\"Error reading from proxy\");\n             }\n             int nRecv = pchRet3[0];\n             recvr = InterruptibleRecv(pchRet3, nRecv, SOCKS5_RECV_TIMEOUT, hSocket);\n             break;\n         }\n-        default: return error(\"Error: malformed proxy response\");\n+        default: CloseSocket(hSocket); return error(\"Error: malformed proxy response\");\n     }\n     if (recvr != IntrRecvError::OK) {\n+        CloseSocket(hSocket);\n         return error(\"Error reading from proxy\");\n     }\n     if ((recvr = InterruptibleRecv(pchRet3, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n+        CloseSocket(hSocket);\n         return error(\"Error reading from proxy\");\n     }\n     LogPrint(BCLog::NET, \"SOCKS5 connected %s\\n\", strDest);\n     return true;\n }\n \n-SOCKET CreateSocket(const CService &addrConnect)\n+bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRet, int nTimeout)\n {\n+    hSocketRet = INVALID_SOCKET;\n+\n     struct sockaddr_storage sockaddr;\n     socklen_t len = sizeof(sockaddr);\n     if (!addrConnect.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n-        LogPrintf(\"Cannot create socket for %s: unsupported network\\n\", addrConnect.ToString());\n-        return INVALID_SOCKET;\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", addrConnect.ToString());\n+        return false;\n     }\n \n     SOCKET hSocket = socket(((struct sockaddr*)&sockaddr)->sa_family, SOCK_STREAM, IPPROTO_TCP);\n     if (hSocket == INVALID_SOCKET)\n-        return INVALID_SOCKET;\n-\n-    if (!IsSelectableSocket(hSocket)) {\n-        CloseSocket(hSocket);\n-        LogPrintf(\"Cannot create connection: non-selectable socket created (fd >= FD_SETSIZE ?)\\n\");\n-        return INVALID_SOCKET;\n-    }\n+        return false;\n \n #ifdef SO_NOSIGPIPE\n     int set = 1;\n@@ -463,23 +426,9 @@ SOCKET CreateSocket(const CService &addrConnect)\n     // Set to non-blocking\n     if (!SetSocketNonBlocking(hSocket, true)) {\n         CloseSocket(hSocket);\n-        LogPrintf(\"ConnectSocketDirectly: Setting socket to non-blocking failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));\n+        return error(\"ConnectSocketDirectly: Setting socket to non-blocking failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));\n     }\n-    return hSocket;\n-}\n \n-bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, int nTimeout)\n-{\n-    struct sockaddr_storage sockaddr;\n-    socklen_t len = sizeof(sockaddr);\n-    if (hSocket == INVALID_SOCKET) {\n-        LogPrintf(\"Cannot connect to %s: invalid socket\\n\", addrConnect.ToString());\n-        return false;\n-    }\n-    if (!addrConnect.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n-        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", addrConnect.ToString());\n-        return false;\n-    }\n     if (connect(hSocket, (struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)\n     {\n         int nErr = WSAGetLastError();\n@@ -494,11 +443,13 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n             if (nRet == 0)\n             {\n                 LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n+                CloseSocket(hSocket);\n                 return false;\n             }\n             if (nRet == SOCKET_ERROR)\n             {\n                 LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+                CloseSocket(hSocket);\n                 return false;\n             }\n             socklen_t nRetSize = sizeof(nRet);\n@@ -509,11 +460,13 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n #endif\n             {\n                 LogPrintf(\"getsockopt() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+                CloseSocket(hSocket);\n                 return false;\n             }\n             if (nRet != 0)\n             {\n                 LogPrintf(\"connect() to %s failed after select(): %s\\n\", addrConnect.ToString(), NetworkErrorString(nRet));\n+                CloseSocket(hSocket);\n                 return false;\n             }\n         }\n@@ -524,9 +477,12 @@ bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocket, i\n #endif\n         {\n             LogPrintf(\"connect() to %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n+            CloseSocket(hSocket);\n             return false;\n         }\n     }\n+\n+    hSocketRet = hSocket;\n     return true;\n }\n \n@@ -578,8 +534,9 @@ bool IsProxy(const CNetAddr &addr) {\n     return false;\n }\n \n-bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int port, const SOCKET& hSocket, int nTimeout, bool *outProxyConnectionFailed)\n+static bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int port, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed)\n {\n+    SOCKET hSocket = INVALID_SOCKET;\n     // first connect to proxy server\n     if (!ConnectSocketDirectly(proxy.proxy, hSocket, nTimeout)) {\n         if (outProxyConnectionFailed)\n@@ -591,16 +548,57 @@ bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int\n         ProxyCredentials random_auth;\n         static std::atomic_int counter(0);\n         random_auth.username = random_auth.password = strprintf(\"%i\", counter++);\n-        if (!Socks5(strDest, (unsigned short)port, &random_auth, hSocket)) {\n+        if (!Socks5(strDest, (unsigned short)port, &random_auth, hSocket))\n             return false;\n-        }\n     } else {\n-        if (!Socks5(strDest, (unsigned short)port, 0, hSocket)) {\n+        if (!Socks5(strDest, (unsigned short)port, 0, hSocket))\n             return false;\n-        }\n     }\n+\n+    hSocketRet = hSocket;\n     return true;\n }\n+\n+bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed)\n+{\n+    proxyType proxy;\n+    if (outProxyConnectionFailed)\n+        *outProxyConnectionFailed = false;\n+\n+    if (GetProxy(addrDest.GetNetwork(), proxy))\n+        return ConnectThroughProxy(proxy, addrDest.ToStringIP(), addrDest.GetPort(), hSocketRet, nTimeout, outProxyConnectionFailed);\n+    else // no proxy needed (none set for target network)\n+        return ConnectSocketDirectly(addrDest, hSocketRet, nTimeout);\n+}\n+\n+bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout, bool *outProxyConnectionFailed)\n+{\n+    std::string strDest;\n+    int port = portDefault;\n+\n+    if (outProxyConnectionFailed)\n+        *outProxyConnectionFailed = false;\n+\n+    SplitHostPort(std::string(pszDest), port, strDest);\n+\n+    proxyType proxy;\n+    GetNameProxy(proxy);\n+\n+    std::vector<CService> addrResolved;\n+    if (Lookup(strDest.c_str(), addrResolved, port, fNameLookup && !HaveNameProxy(), 256)) {\n+        if (addrResolved.size() > 0) {\n+            addr = addrResolved[GetRand(addrResolved.size())];\n+            return ConnectSocket(addr, hSocketRet, nTimeout);\n+        }\n+    }\n+\n+    addr = CService();\n+\n+    if (!HaveNameProxy())\n+        return false;\n+    return ConnectThroughProxy(proxy, strDest, port, hSocketRet, nTimeout, outProxyConnectionFailed);\n+}\n+\n bool LookupSubNet(const char* pszName, CSubNet& ret)\n {\n     std::string strSubnet(pszName);"
      },
      {
        "sha": "941da31f9ce49e766ab0114d9bb3170b3d730d08",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,12 +6,12 @@\n #define BITCOIN_NETBASE_H\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <compat.h>\n-#include <netaddress.h>\n-#include <serialize.h>\n+#include \"compat.h\"\n+#include \"netaddress.h\"\n+#include \"serialize.h\"\n \n #include <stdint.h>\n #include <string>\n@@ -29,7 +29,7 @@ class proxyType\n {\n public:\n     proxyType(): randomize_credentials(false) {}\n-    explicit proxyType(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n+    proxyType(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n \n     bool IsValid() const { return proxy.IsValid(); }\n \n@@ -44,16 +44,14 @@ bool GetProxy(enum Network net, proxyType &proxyInfoOut);\n bool IsProxy(const CNetAddr &addr);\n bool SetNameProxy(const proxyType &addrProxy);\n bool HaveNameProxy();\n-bool GetNameProxy(proxyType &nameProxyOut);\n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup);\n bool LookupHost(const char *pszName, CNetAddr& addr, bool fAllowLookup);\n bool Lookup(const char *pszName, CService& addr, int portDefault, bool fAllowLookup);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions);\n CService LookupNumeric(const char *pszName, int portDefault = 0);\n bool LookupSubNet(const char *pszName, CSubNet& subnet);\n-SOCKET CreateSocket(const CService &addrConnect);\n-bool ConnectSocketDirectly(const CService &addrConnect, const SOCKET& hSocketRet, int nTimeout);\n-bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int port, const SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed);\n+bool ConnectSocket(const CService &addr, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed = 0);\n+bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout, bool *outProxyConnectionFailed = 0);\n /** Return readable error string for a network error code */\n std::string NetworkErrorString(int err);\n /** Close socket and set hSocket to INVALID_SOCKET */"
      },
      {
        "sha": "8e8a6e4a026ee824795e2af21c3eec1c7e761299",
        "filename": "src/netmessagemaker.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/netmessagemaker.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/netmessagemaker.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netmessagemaker.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,13 +6,13 @@\n #ifndef BITCOIN_NETMESSAGEMAKER_H\n #define BITCOIN_NETMESSAGEMAKER_H\n \n-#include <net.h>\n-#include <serialize.h>\n+#include \"net.h\"\n+#include \"serialize.h\"\n \n class CNetMsgMaker\n {\n public:\n-    explicit CNetMsgMaker(int nVersionIn) : nVersion(nVersionIn){}\n+    CNetMsgMaker(int nVersionIn) : nVersion(nVersionIn){}\n \n     template <typename... Args>\n     CSerializedNetMsg Make(int nFlags, std::string sCommand, Args&&... args) const"
      },
      {
        "sha": "4bfb75fa2977acd616299d5438801145fea65f8f",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,10 +3,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <noui.h>\n+#include \"noui.h\"\n \n-#include <ui_interface.h>\n-#include <util.h>\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n \n #include <cstdio>\n #include <stdint.h>"
      },
      {
        "sha": "8fb950e13a419f58dfd2b7fc3002bc3e9399b2b5",
        "filename": "src/policy/feerate.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/feerate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/feerate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,11 +3,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <policy/feerate.h>\n+#include \"feerate.h\"\n \n-#include <tinyformat.h>\n+#include \"tinyformat.h\"\n \n-const std::string CURRENCY_UNIT = \"BTC\";\n+const std::string CURRENCY_UNIT = \"BSC\";\n \n CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nBytes_)\n {"
      },
      {
        "sha": "565da6c1541e9d8edec25109f31dee25cc35ed0a",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,8 +6,8 @@\n #ifndef BITCOIN_POLICY_FEERATE_H\n #define BITCOIN_POLICY_FEERATE_H\n \n-#include <amount.h>\n-#include <serialize.h>\n+#include \"amount.h\"\n+#include \"serialize.h\"\n \n #include <string>\n \n@@ -20,17 +20,13 @@ class CFeeRate\n {\n private:\n     CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n-\n public:\n     /** Fee rate of 0 satoshis per kB */\n     CFeeRate() : nSatoshisPerK(0) { }\n-    template<typename I>\n-    CFeeRate(const I _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) {\n-        // We've previously had bugs creep in from silent double->int conversion...\n-        static_assert(std::is_integral<I>::value, \"CFeeRate should be used without floats\");\n-    }\n+    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n     /** Constructor for a fee rate in satoshis per kB. The size in bytes must not exceed (2^63 - 1)*/\n     CFeeRate(const CAmount& nFeePaid, size_t nBytes);\n+    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n     /**\n      * Return the fee in satoshis for the given size in bytes.\n      */"
      },
      {
        "sha": "b9476407cf163cc9d882930f02ed5a889a2a6870",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 39,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,14 +3,16 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <policy/fees.h>\n-#include <policy/policy.h>\n+#include \"policy/fees.h\"\n+#include \"policy/policy.h\"\n \n-#include <clientversion.h>\n-#include <primitives/transaction.h>\n-#include <streams.h>\n-#include <txmempool.h>\n-#include <util.h>\n+#include \"amount.h\"\n+#include \"clientversion.h\"\n+#include \"primitives/transaction.h\"\n+#include \"random.h\"\n+#include \"streams.h\"\n+#include \"txmempool.h\"\n+#include \"util.h\"\n \n static constexpr double INF_FEERATE = 1e99;\n \n@@ -178,7 +180,6 @@ TxConfirmStats::TxConfirmStats(const std::vector<double>& defaultBuckets,\n     : buckets(defaultBuckets), bucketMap(defaultBucketMap)\n {\n     decay = _decay;\n-    assert(_scale != 0 && \"_scale must be non-zero\");\n     scale = _scale;\n     confAvg.resize(maxPeriods);\n     for (unsigned int i = 0; i < maxPeriods; i++) {\n@@ -411,13 +412,12 @@ void TxConfirmStats::Read(CAutoFile& filein, int nFileVersion, size_t numBuckets\n     size_t maxConfirms, maxPeriods;\n \n     // The current version will store the decay with each individual TxConfirmStats and also keep a scale factor\n-    filein >> decay;\n-    if (decay <= 0 || decay >= 1) {\n-        throw std::runtime_error(\"Corrupt estimates file. Decay must be between 0 and 1 (non-inclusive)\");\n-    }\n-    filein >> scale;\n-    if (scale == 0) {\n-        throw std::runtime_error(\"Corrupt estimates file. Scale must be non-zero\");\n+    if (nFileVersion >= 149900) {\n+        filein >> decay;\n+        if (decay <= 0 || decay >= 1) {\n+            throw std::runtime_error(\"Corrupt estimates file. Decay must be between 0 and 1 (non-inclusive)\");\n+        }\n+        filein >> scale;\n     }\n \n     filein >> avg;\n@@ -441,13 +441,20 @@ void TxConfirmStats::Read(CAutoFile& filein, int nFileVersion, size_t numBuckets\n         }\n     }\n \n-    filein >> failAvg;\n-    if (maxPeriods != failAvg.size()) {\n-        throw std::runtime_error(\"Corrupt estimates file. Mismatch in confirms tracked for failures\");\n-    }\n-    for (unsigned int i = 0; i < maxPeriods; i++) {\n-        if (failAvg[i].size() != numBuckets) {\n-            throw std::runtime_error(\"Corrupt estimates file. Mismatch in one of failure average bucket counts\");\n+    if (nFileVersion >= 149900) {\n+        filein >> failAvg;\n+        if (maxPeriods != failAvg.size()) {\n+            throw std::runtime_error(\"Corrupt estimates file. Mismatch in confirms tracked for failures\");\n+        }\n+        for (unsigned int i = 0; i < maxPeriods; i++) {\n+            if (failAvg[i].size() != numBuckets) {\n+                throw std::runtime_error(\"Corrupt estimates file. Mismatch in one of failure average bucket counts\");\n+            }\n+        }\n+    } else {\n+        failAvg.resize(confAvg.size());\n+        for (unsigned int i = 0; i < failAvg.size(); i++) {\n+            failAvg[i].resize(numBuckets);\n         }\n     }\n \n@@ -496,7 +503,6 @@ void TxConfirmStats::removeTx(unsigned int entryHeight, unsigned int nBestSeenHe\n         }\n     }\n     if (!inBlock && (unsigned int)blocksAgo >= scale) { // Only counts as a failure if not confirmed for entire period\n-        assert(scale != 0);\n         unsigned int periodsAgo = blocksAgo / scale;\n         for (size_t i = 0; i < periodsAgo && i < failAvg.size(); i++) {\n             failAvg[i][bucketindex]++;\n@@ -537,13 +543,16 @@ CBlockPolicyEstimator::CBlockPolicyEstimator()\n     bucketMap[INF_FEERATE] = bucketIndex;\n     assert(bucketMap.size() == buckets.size());\n \n-    feeStats = std::unique_ptr<TxConfirmStats>(new TxConfirmStats(buckets, bucketMap, MED_BLOCK_PERIODS, MED_DECAY, MED_SCALE));\n-    shortStats = std::unique_ptr<TxConfirmStats>(new TxConfirmStats(buckets, bucketMap, SHORT_BLOCK_PERIODS, SHORT_DECAY, SHORT_SCALE));\n-    longStats = std::unique_ptr<TxConfirmStats>(new TxConfirmStats(buckets, bucketMap, LONG_BLOCK_PERIODS, LONG_DECAY, LONG_SCALE));\n+    feeStats = new TxConfirmStats(buckets, bucketMap, MED_BLOCK_PERIODS, MED_DECAY, MED_SCALE);\n+    shortStats = new TxConfirmStats(buckets, bucketMap, SHORT_BLOCK_PERIODS, SHORT_DECAY, SHORT_SCALE);\n+    longStats = new TxConfirmStats(buckets, bucketMap, LONG_BLOCK_PERIODS, LONG_DECAY, LONG_SCALE);\n }\n \n CBlockPolicyEstimator::~CBlockPolicyEstimator()\n {\n+    delete feeStats;\n+    delete shortStats;\n+    delete longStats;\n }\n \n void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, bool validFeeEstimate)\n@@ -554,7 +563,7 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n     if (mapMemPoolTxs.count(hash)) {\n         LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error mempool tx %s already being tracked\\n\",\n                  hash.ToString().c_str());\n-        return;\n+\treturn;\n     }\n \n     if (txHeight != nBestSeenHeight) {\n@@ -676,16 +685,16 @@ CFeeRate CBlockPolicyEstimator::estimateRawFee(int confTarget, double successThr\n     double sufficientTxs = SUFFICIENT_FEETXS;\n     switch (horizon) {\n     case FeeEstimateHorizon::SHORT_HALFLIFE: {\n-        stats = shortStats.get();\n+        stats = shortStats;\n         sufficientTxs = SUFFICIENT_TXS_SHORT;\n         break;\n     }\n     case FeeEstimateHorizon::MED_HALFLIFE: {\n-        stats = feeStats.get();\n+        stats = feeStats;\n         break;\n     }\n     case FeeEstimateHorizon::LONG_HALFLIFE: {\n-        stats = longStats.get();\n+        stats = longStats;\n         break;\n     }\n     default: {\n@@ -705,7 +714,7 @@ CFeeRate CBlockPolicyEstimator::estimateRawFee(int confTarget, double successThr\n     if (median < 0)\n         return CFeeRate(0);\n \n-    return CFeeRate(llround(median));\n+    return CFeeRate(median);\n }\n \n unsigned int CBlockPolicyEstimator::HighestTargetTracked(FeeEstimateHorizon horizon) const\n@@ -892,7 +901,7 @@ CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, FeeCalculation\n \n     if (median < 0) return CFeeRate(0); // error condition\n \n-    return CFeeRate(llround(median));\n+    return CFeeRate(median);\n }\n \n \n@@ -935,9 +944,32 @@ bool CBlockPolicyEstimator::Read(CAutoFile& filein)\n         unsigned int nFileBestSeenHeight;\n         filein >> nFileBestSeenHeight;\n \n-        if (nVersionRequired < 149900) {\n-            LogPrintf(\"%s: incompatible old fee estimation data (non-fatal). Version: %d\\n\", __func__, nVersionRequired);\n-        } else { // New format introduced in 149900\n+        if (nVersionThatWrote < 149900) {\n+            // Read the old fee estimates file for temporary use, but then discard.  Will start collecting data from scratch.\n+            // decay is stored before buckets in old versions, so pre-read decay and pass into TxConfirmStats constructor\n+            double tempDecay;\n+            filein >> tempDecay;\n+            if (tempDecay <= 0 || tempDecay >= 1)\n+                throw std::runtime_error(\"Corrupt estimates file. Decay must be between 0 and 1 (non-inclusive)\");\n+\n+            std::vector<double> tempBuckets;\n+            filein >> tempBuckets;\n+            size_t tempNum = tempBuckets.size();\n+            if (tempNum <= 1 || tempNum > 1000)\n+                throw std::runtime_error(\"Corrupt estimates file. Must have between 2 and 1000 feerate buckets\");\n+\n+            std::map<double, unsigned int> tempMap;\n+\n+            std::unique_ptr<TxConfirmStats> tempFeeStats(new TxConfirmStats(tempBuckets, tempMap, MED_BLOCK_PERIODS, tempDecay, 1));\n+            tempFeeStats->Read(filein, nVersionThatWrote, tempNum);\n+            // if nVersionThatWrote < 139900 then another TxConfirmStats (for priority) follows but can be ignored.\n+\n+            tempMap.clear();\n+            for (unsigned int i = 0; i < tempBuckets.size(); i++) {\n+                tempMap[tempBuckets[i]] = i;\n+            }\n+        }\n+        else { // nVersionThatWrote >= 149900\n             unsigned int nFileHistoricalFirst, nFileHistoricalBest;\n             filein >> nFileHistoricalFirst >> nFileHistoricalBest;\n             if (nFileHistoricalFirst > nFileHistoricalBest || nFileHistoricalBest > nFileBestSeenHeight) {\n@@ -965,9 +997,12 @@ bool CBlockPolicyEstimator::Read(CAutoFile& filein)\n             }\n \n             // Destroy old TxConfirmStats and point to new ones that already reference buckets and bucketMap\n-            feeStats = std::move(fileFeeStats);\n-            shortStats = std::move(fileShortStats);\n-            longStats = std::move(fileLongStats);\n+            delete feeStats;\n+            delete shortStats;\n+            delete longStats;\n+            feeStats = fileFeeStats.release();\n+            shortStats = fileShortStats.release();\n+            longStats = fileLongStats.release();\n \n             nBestSeenHeight = nFileBestSeenHeight;\n             historicalFirst = nFileHistoricalFirst;\n@@ -1008,5 +1043,5 @@ CAmount FeeFilterRounder::round(CAmount currentMinFee)\n     if ((it != feeset.begin() && insecure_rand.rand32() % 3 != 0) || it == feeset.end()) {\n         it--;\n     }\n-    return static_cast<CAmount>(*it);\n+    return *it;\n }"
      },
      {
        "sha": "f4ef793643076ca22ac8fb726b1717f31304c094",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,11 +5,11 @@\n #ifndef BITCOIN_POLICYESTIMATOR_H\n #define BITCOIN_POLICYESTIMATOR_H\n \n-#include <amount.h>\n-#include <policy/feerate.h>\n-#include <uint256.h>\n-#include <random.h>\n-#include <sync.h>\n+#include \"amount.h\"\n+#include \"feerate.h\"\n+#include \"uint256.h\"\n+#include \"random.h\"\n+#include \"sync.h\"\n \n #include <map>\n #include <string>\n@@ -245,9 +245,9 @@ class CBlockPolicyEstimator\n     std::map<uint256, TxStatsInfo> mapMemPoolTxs;\n \n     /** Classes to track historical data on transaction confirmations */\n-    std::unique_ptr<TxConfirmStats> feeStats;\n-    std::unique_ptr<TxConfirmStats> shortStats;\n-    std::unique_ptr<TxConfirmStats> longStats;\n+    TxConfirmStats* feeStats;\n+    TxConfirmStats* shortStats;\n+    TxConfirmStats* longStats;\n \n     unsigned int trackedTxs;\n     unsigned int untrackedTxs;\n@@ -284,7 +284,7 @@ class FeeFilterRounder\n \n public:\n     /** Create new FeeFilterRounder */\n-    explicit FeeFilterRounder(const CFeeRate& minIncrementalFee);\n+    FeeFilterRounder(const CFeeRate& minIncrementalFee);\n \n     /** Quantize a minimum fee for privacy purpose before broadcast **/\n     CAmount round(CAmount currentMinFee);"
      },
      {
        "sha": "605e3e06968eb6741a795edbbc9928c44f7bfa2a",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 24,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,14 +5,14 @@\n \n // NOTE: This file is intended to be customised by the end user, and includes only local node policy logic\n \n-#include <policy/policy.h>\n+#include \"policy/policy.h\"\n \n-#include <consensus/validation.h>\n-#include <validation.h>\n-#include <coins.h>\n-#include <tinyformat.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include \"consensus/validation.h\"\n+#include \"validation.h\"\n+#include \"coins.h\"\n+#include \"tinyformat.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n \n \n CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n@@ -54,6 +54,23 @@ bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n     return (txout.nValue < GetDustThreshold(txout, dustRelayFeeIn));\n }\n \n+    /**\n+     * Check transaction inputs to mitigate two\n+     * potential denial-of-service attacks:\n+     * \n+     * 1. scriptSigs with extra data stuffed into them,\n+     *    not consumed by scriptPubKey (or P2SH script)\n+     * 2. P2SH scripts with a crazy number of expensive\n+     *    CHECKSIG/CHECKMULTISIG operations\n+     *\n+     * Why bother? To avoid denial-of-service attacks; an attacker\n+     * can submit a standard HASH... OP_EQUAL transaction,\n+     * which will get accepted into blocks. The redemption\n+     * script can be anything; an attacker could use a very\n+     * expensive-to-check-upon-redemption script like:\n+     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+     */\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType, const bool witnessEnabled)\n {\n     std::vector<std::vector<unsigned char> > vSolutions;\n@@ -76,7 +93,7 @@ bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType, const bool w\n     else if (!witnessEnabled && (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH))\n         return false;\n \n-    return whichType != TX_NONSTANDARD && whichType != TX_WITNESS_UNKNOWN;\n+    return whichType != TX_NONSTANDARD;\n }\n \n bool IsStandardTx(const CTransaction& tx, std::string& reason, const bool witnessEnabled)\n@@ -143,22 +160,6 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason, const bool witnes\n     return true;\n }\n \n-/**\n- * Check transaction inputs to mitigate two\n- * potential denial-of-service attacks:\n- *\n- * 1. scriptSigs with extra data stuffed into them,\n- *    not consumed by scriptPubKey (or P2SH script)\n- * 2. P2SH scripts with a crazy number of expensive\n- *    CHECKSIG/CHECKMULTISIG operations\n- *\n- * Why bother? To avoid denial-of-service attacks; an attacker\n- * can submit a standard HASH... OP_EQUAL transaction,\n- * which will get accepted into blocks. The redemption\n- * script can be anything; an attacker could use a very\n- * expensive-to-check-upon-redemption script like:\n- *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n- */\n bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n {\n     if (tx.IsCoinBase())"
      },
      {
        "sha": "f6c7eadbf8161973bdcd92251dfd534ecf8ba453",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,18 +6,20 @@\n #ifndef BITCOIN_POLICY_POLICY_H\n #define BITCOIN_POLICY_POLICY_H\n \n-#include <consensus/consensus.h>\n-#include <policy/feerate.h>\n-#include <script/interpreter.h>\n-#include <script/standard.h>\n+#include \"consensus/consensus.h\"\n+#include \"feerate.h\"\n+#include \"script/interpreter.h\"\n+#include \"script/standard.h\"\n \n #include <string>\n \n class CCoinsViewCache;\n class CTxOut;\n \n+/** Default for -blockmaxsize, which controls the maximum size of block the mining code will create **/\n+static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n /** Default for -blockmaxweight, which controls the range of block weights the mining code will create **/\n-static const unsigned int DEFAULT_BLOCK_MAX_WEIGHT = MAX_BLOCK_WEIGHT - 4000;\n+static const unsigned int DEFAULT_BLOCK_MAX_WEIGHT = 3000000;\n /** Default for -blockmintxfee, which sets the minimum feerate for a transaction in blocks created by mining code **/\n static const unsigned int DEFAULT_BLOCK_MIN_TX_FEE = 1000;\n /** The maximum weight for transactions we're willing to relay/mine */\n@@ -27,7 +29,7 @@ static const unsigned int MAX_P2SH_SIGOPS = 15;\n /** The maximum number of sigops we're willing to relay/mine in a single tx */\n static const unsigned int MAX_STANDARD_TX_SIGOPS_COST = MAX_BLOCK_SIGOPS_COST/5;\n /** Default for -maxmempool, maximum megabytes of mempool memory usage */\n-static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 5;\n /** Default for -incrementalrelayfee, which sets the minimum feerate increase for mempool limiting or BIP 125 replacement **/\n static const unsigned int DEFAULT_INCREMENTAL_RELAY_FEE = 1000;\n /** Default for -bytespersigop */\n@@ -43,7 +45,7 @@ static const unsigned int MAX_STANDARD_P2WSH_SCRIPT_SIZE = 3600;\n  * standard and should be done with care and ideally rarely. It makes sense to\n  * only increase the dust limit after prior releases were already not creating\n  * outputs below the new threshold */\n-static const unsigned int DUST_RELAY_TX_FEE = 3000;\n+static const unsigned int DUST_RELAY_TX_FEE = 300000;\n /**\n  * Standard script verification flags that standard transactions will comply\n  * with. However scripts violating these flags may still be present in valid"
      },
      {
        "sha": "755ef83c9af11a3d01efa95216b94eb8f897a167",
        "filename": "src/policy/rbf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <policy/rbf.h>\n+#include \"policy/rbf.h\"\n \n bool SignalsOptInRBF(const CTransaction &tx)\n {"
      },
      {
        "sha": "22c73f3319340453f5f5f254e38761d66f2e70c9",
        "filename": "src/policy/rbf.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_POLICY_RBF_H\n #define BITCOIN_POLICY_RBF_H\n \n-#include <txmempool.h>\n+#include \"txmempool.h\"\n \n static const uint32_t MAX_BIP125_RBF_SEQUENCE = 0xfffffffd;\n "
      },
      {
        "sha": "2d5fb96c2148026310dcb9a5948af34c686bf35b",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 9,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,12 +3,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <pow.h>\n+#include \"pow.h\"\n \n-#include <arith_uint256.h>\n-#include <chain.h>\n-#include <primitives/block.h>\n-#include <uint256.h>\n+#include \"arith_uint256.h\"\n+#include \"chain.h\"\n+#include \"primitives/block.h\"\n+#include \"uint256.h\"\n+#include \"util.h\"\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n {\n@@ -38,9 +39,17 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n     }\n \n     // Go back by what we want to be 14 days worth of blocks\n-    int nHeightFirst = pindexLast->nHeight - (params.DifficultyAdjustmentInterval()-1);\n-    assert(nHeightFirst >= 0);\n-    const CBlockIndex* pindexFirst = pindexLast->GetAncestor(nHeightFirst);\n+    // Blockcash: This fixes an issue where a 51% attack can change difficulty at will.\n+    // Go back the full period unless it's the first retarget after genesis. Code courtesy of Art Forz\n+    int blockstogoback = params.DifficultyAdjustmentInterval()-1;\n+    if ((pindexLast->nHeight+1) != params.DifficultyAdjustmentInterval())\n+        blockstogoback = params.DifficultyAdjustmentInterval();\n+\n+    // Go back by what we want to be 14 days worth of blocks\n+    const CBlockIndex* pindexFirst = pindexLast;\n+    for (int i = 0; pindexFirst && i < blockstogoback; i++)\n+        pindexFirst = pindexFirst->pprev;\n+\n     assert(pindexFirst);\n \n     return CalculateNextWorkRequired(pindexLast, pindexFirst->GetBlockTime(), params);\n@@ -59,11 +68,19 @@ unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nF\n         nActualTimespan = params.nPowTargetTimespan*4;\n \n     // Retarget\n-    const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);\n     arith_uint256 bnNew;\n+    arith_uint256 bnOld;\n     bnNew.SetCompact(pindexLast->nBits);\n+    bnOld = bnNew;\n+    // Blockcash: intermediate uint256 can overflow by 1 bit\n+    const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);\n+    bool fShift = bnNew.bits() > bnPowLimit.bits() - 1;\n+    if (fShift)\n+        bnNew >>= 1;\n     bnNew *= nActualTimespan;\n     bnNew /= params.nPowTargetTimespan;\n+    if (fShift)\n+        bnNew <<= 1;\n \n     if (bnNew > bnPowLimit)\n         bnNew = bnPowLimit;"
      },
      {
        "sha": "e203f492a19d875f14404c8848b05baf50055993",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,7 +6,7 @@\n #ifndef BITCOIN_POW_H\n #define BITCOIN_POW_H\n \n-#include <consensus/params.h>\n+#include \"consensus/params.h\"\n \n #include <stdint.h>\n "
      },
      {
        "sha": "f7bde8911a1a1933a07e8dfae6139713a6b5cc0f",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_PREVECTOR_H\n-#define BITCOIN_PREVECTOR_H\n+#ifndef _BITCOIN_PREVECTOR_H_\n+#define _BITCOIN_PREVECTOR_H_\n \n #include <assert.h>\n #include <stdlib.h>\n@@ -514,4 +514,4 @@ class prevector {\n };\n #pragma pack(pop)\n \n-#endif // BITCOIN_PREVECTOR_H\n+#endif"
      },
      {
        "sha": "454f10ed3d22725d5153a6cae6dde2612247d5cf",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,18 +3,26 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <primitives/block.h>\n+#include \"primitives/block.h\"\n \n-#include <hash.h>\n-#include <tinyformat.h>\n-#include <utilstrencodings.h>\n-#include <crypto/common.h>\n+#include \"hash.h\"\n+#include \"tinyformat.h\"\n+#include \"utilstrencodings.h\"\n+#include \"crypto/common.h\"\n+#include \"crypto/scrypt.h\"\n \n uint256 CBlockHeader::GetHash() const\n {\n     return SerializeHash(*this);\n }\n \n+uint256 CBlockHeader::GetPoWHash() const\n+{\n+    uint256 thash;\n+    scrypt_1024_1_1_256(BEGIN(nVersion), BEGIN(thash));\n+    return thash;\n+}\n+\n std::string CBlock::ToString() const\n {\n     std::stringstream s;"
      },
      {
        "sha": "fe51b8a7297ae633fd5efab87bb38ce94fd3a9b7",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,9 +6,9 @@\n #ifndef BITCOIN_PRIMITIVES_BLOCK_H\n #define BITCOIN_PRIMITIVES_BLOCK_H\n \n-#include <primitives/transaction.h>\n-#include <serialize.h>\n-#include <uint256.h>\n+#include \"primitives/transaction.h\"\n+#include \"serialize.h\"\n+#include \"uint256.h\"\n \n /** Nodes collect new transactions into a block, hash them into a hash tree,\n  * and scan through nonce values to make the block's hash satisfy proof-of-work\n@@ -62,6 +62,8 @@ class CBlockHeader\n \n     uint256 GetHash() const;\n \n+    uint256 GetPoWHash() const;\n+\n     int64_t GetBlockTime() const\n     {\n         return (int64_t)nTime;\n@@ -129,7 +131,7 @@ struct CBlockLocator\n \n     CBlockLocator() {}\n \n-    explicit CBlockLocator(const std::vector<uint256>& vHaveIn) : vHave(vHaveIn) {}\n+    CBlockLocator(const std::vector<uint256>& vHaveIn) : vHave(vHaveIn) {}\n \n     ADD_SERIALIZE_METHODS;\n "
      },
      {
        "sha": "9b6a814e1f3d7ef6409ed46c1bfeddf0ba669a25",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,11 +3,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <primitives/transaction.h>\n+#include \"primitives/transaction.h\"\n \n-#include <hash.h>\n-#include <tinyformat.h>\n-#include <utilstrencodings.h>\n+#include \"hash.h\"\n+#include \"tinyformat.h\"\n+#include \"utilstrencodings.h\"\n \n std::string COutPoint::ToString() const\n {\n@@ -55,7 +55,7 @@ std::string CTxOut::ToString() const\n }\n \n CMutableTransaction::CMutableTransaction() : nVersion(CTransaction::CURRENT_VERSION), nLockTime(0) {}\n-CMutableTransaction::CMutableTransaction(const CTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime) {}\n+CMutableTransaction::CMutableTransaction(const CTransaction& tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), nLockTime(tx.nLockTime) {}\n \n uint256 CMutableTransaction::GetHash() const\n {\n@@ -76,9 +76,9 @@ uint256 CTransaction::GetWitnessHash() const\n }\n \n /* For backward compatibility, the hash is initialized to 0. TODO: remove the need for this default constructor entirely. */\n-CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash() {}\n-CTransaction::CTransaction(const CMutableTransaction &tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n-CTransaction::CTransaction(CMutableTransaction &&tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0), hash() {}\n+CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n \n CAmount CTransaction::GetValueOut() const\n {"
      },
      {
        "sha": "041034bb8b6f78ed03c995ff8e2877639ffad659",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -7,10 +7,10 @@\n #define BITCOIN_PRIMITIVES_TRANSACTION_H\n \n #include <stdint.h>\n-#include <amount.h>\n-#include <script/script.h>\n-#include <serialize.h>\n-#include <uint256.h>\n+#include \"amount.h\"\n+#include \"script/script.h\"\n+#include \"serialize.h\"\n+#include \"uint256.h\"\n \n static const int SERIALIZE_TRANSACTION_NO_WITNESS = 0x40000000;\n \n@@ -278,9 +278,9 @@ class CTransaction\n     // actually immutable; deserialization and assignment are implemented,\n     // and bypass the constness. This is safe, as they update the entire\n     // structure, including the hash.\n+    const int32_t nVersion;\n     const std::vector<CTxIn> vin;\n     const std::vector<CTxOut> vout;\n-    const int32_t nVersion;\n     const uint32_t nLockTime;\n \n private:\n@@ -361,9 +361,9 @@ class CTransaction\n /** A mutable version of CTransaction. */\n struct CMutableTransaction\n {\n+    int32_t nVersion;\n     std::vector<CTxIn> vin;\n     std::vector<CTxOut> vout;\n-    int32_t nVersion;\n     uint32_t nLockTime;\n \n     CMutableTransaction();"
      },
      {
        "sha": "da87e40091f65088ce6fff620cb27884bbbbae22",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,10 +3,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <protocol.h>\n+#include \"protocol.h\"\n \n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n \n #ifndef WIN32\n # include <arpa/inet.h>"
      },
      {
        "sha": "7890bb627de36ccb4f8b48fc657c319f194c7273",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 18,
        "deletions": 55,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -10,10 +10,10 @@\n #ifndef BITCOIN_PROTOCOL_H\n #define BITCOIN_PROTOCOL_H\n \n-#include <netaddress.h>\n-#include <serialize.h>\n-#include <uint256.h>\n-#include <version.h>\n+#include \"netaddress.h\"\n+#include \"serialize.h\"\n+#include \"uint256.h\"\n+#include \"version.h\"\n \n #include <stdint.h>\n #include <string>\n@@ -27,16 +27,19 @@\n class CMessageHeader\n {\n public:\n-    static constexpr size_t MESSAGE_START_SIZE = 4;\n-    static constexpr size_t COMMAND_SIZE = 12;\n-    static constexpr size_t MESSAGE_SIZE_SIZE = 4;\n-    static constexpr size_t CHECKSUM_SIZE = 4;\n-    static constexpr size_t MESSAGE_SIZE_OFFSET = MESSAGE_START_SIZE + COMMAND_SIZE;\n-    static constexpr size_t CHECKSUM_OFFSET = MESSAGE_SIZE_OFFSET + MESSAGE_SIZE_SIZE;\n-    static constexpr size_t HEADER_SIZE = MESSAGE_START_SIZE + COMMAND_SIZE + MESSAGE_SIZE_SIZE + CHECKSUM_SIZE;\n+    enum {\n+        MESSAGE_START_SIZE = 4,\n+        COMMAND_SIZE = 12,\n+        MESSAGE_SIZE_SIZE = 4,\n+        CHECKSUM_SIZE = 4,\n+\n+        MESSAGE_SIZE_OFFSET = MESSAGE_START_SIZE + COMMAND_SIZE,\n+        CHECKSUM_OFFSET = MESSAGE_SIZE_OFFSET + MESSAGE_SIZE_SIZE,\n+        HEADER_SIZE = MESSAGE_START_SIZE + COMMAND_SIZE + MESSAGE_SIZE_SIZE + CHECKSUM_SIZE\n+    };\n     typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n \n-    explicit CMessageHeader(const MessageStartChars& pchMessageStartIn);\n+    CMessageHeader(const MessageStartChars& pchMessageStartIn);\n     CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn);\n \n     std::string GetCommand() const;\n@@ -246,8 +249,9 @@ const std::vector<std::string> &getAllNetMessageTypes();\n enum ServiceFlags : uint64_t {\n     // Nothing\n     NODE_NONE = 0,\n-    // NODE_NETWORK means that the node is capable of serving the complete block chain. It is currently\n-    // set by all Bitcoin Core non pruned nodes, and is unset by SPV clients or other light clients.\n+    // NODE_NETWORK means that the node is capable of serving the block chain. It is currently\n+    // set by all Bitcoin Core nodes, and is unset by SPV clients or other peers that just want\n+    // network services but don't provide them.\n     NODE_NETWORK = (1 << 0),\n     // NODE_GETUTXO means the node is capable of responding to the getutxo protocol request.\n     // Bitcoin Core does not support this but a patch set called Bitcoin XT does.\n@@ -263,10 +267,6 @@ enum ServiceFlags : uint64_t {\n     // NODE_XTHIN means the node supports Xtreme Thinblocks\n     // If this is turned off then the node will not service nor make xthin requests\n     NODE_XTHIN = (1 << 4),\n-    // NODE_NETWORK_LIMITED means the same as NODE_NETWORK with the limitation of only\n-    // serving the last 288 (2 day) blocks\n-    // See BIP159 for details on how this is implemented.\n-    NODE_NETWORK_LIMITED = (1 << 10),\n \n     // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\n     // isn't getting used, or one not being used much, and notify the\n@@ -277,43 +277,6 @@ enum ServiceFlags : uint64_t {\n     // BIP process.\n };\n \n-/**\n- * Gets the set of service flags which are \"desirable\" for a given peer.\n- *\n- * These are the flags which are required for a peer to support for them\n- * to be \"interesting\" to us, ie for us to wish to use one of our few\n- * outbound connection slots for or for us to wish to prioritize keeping\n- * their connection around.\n- *\n- * Relevant service flags may be peer- and state-specific in that the\n- * version of the peer may determine which flags are required (eg in the\n- * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n- * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n- * case NODE_NETWORK_LIMITED suffices).\n- *\n- * Thus, generally, avoid calling with peerServices == NODE_NONE.\n- */\n-static ServiceFlags GetDesirableServiceFlags(ServiceFlags services) {\n-    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);\n-}\n-\n-/**\n- * A shortcut for (services & GetDesirableServiceFlags(services))\n- * == GetDesirableServiceFlags(services), ie determines whether the given\n- * set of service flags are sufficient for a peer to be \"relevant\".\n- */\n-static inline bool HasAllDesirableServiceFlags(ServiceFlags services) {\n-    return !(GetDesirableServiceFlags(services) & (~services));\n-}\n-\n-/**\n- * Checks if a peer with the given service flags may be capable of having a\n- * robust address-storage DB. Currently an alias for checking NODE_NETWORK.\n- */\n-static inline bool MayHaveUsefulAddressDB(ServiceFlags services) {\n-    return services & NODE_NETWORK;\n-}\n-\n /** A CService with information about it as peer */\n class CAddress : public CService\n {"
      },
      {
        "sha": "2da7be783f870706712927f2ad8f8f5f87cb9112",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 19,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,9 +1,8 @@\n // Copyright (c) 2009-2016 The Bitcoin Core developers\n-// Copyright (c) 2017 The Zcash developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <pubkey.h>\n+#include \"pubkey.h\"\n \n #include <secp256k1.h>\n #include <secp256k1_recovery.h>\n@@ -47,7 +46,7 @@ static int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1\n     lenbyte = input[pos++];\n     if (lenbyte & 0x80) {\n         lenbyte -= 0x80;\n-        if (lenbyte > inputlen - pos) {\n+        if (pos + lenbyte > inputlen) {\n             return 0;\n         }\n         pos += lenbyte;\n@@ -66,15 +65,14 @@ static int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1\n     lenbyte = input[pos++];\n     if (lenbyte & 0x80) {\n         lenbyte -= 0x80;\n-        if (lenbyte > inputlen - pos) {\n+        if (pos + lenbyte > inputlen) {\n             return 0;\n         }\n         while (lenbyte > 0 && input[pos] == 0) {\n             pos++;\n             lenbyte--;\n         }\n-        static_assert(sizeof(size_t) >= 4, \"size_t too small\");\n-        if (lenbyte >= 4) {\n+        if (lenbyte >= sizeof(size_t)) {\n             return 0;\n         }\n         rlen = 0;\n@@ -105,15 +103,14 @@ static int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1\n     lenbyte = input[pos++];\n     if (lenbyte & 0x80) {\n         lenbyte -= 0x80;\n-        if (lenbyte > inputlen - pos) {\n+        if (pos + lenbyte > inputlen) {\n             return 0;\n         }\n         while (lenbyte > 0 && input[pos] == 0) {\n             pos++;\n             lenbyte--;\n         }\n-        static_assert(sizeof(size_t) >= 4, \"size_t too small\");\n-        if (lenbyte >= 4) {\n+        if (lenbyte >= sizeof(size_t)) {\n             return 0;\n         }\n         slen = 0;\n@@ -129,6 +126,7 @@ static int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1\n         return 0;\n     }\n     spos = pos;\n+    pos += slen;\n \n     /* Ignore leading zeroes in R */\n     while (rlen > 0 && input[rpos] == 0) {\n@@ -184,7 +182,7 @@ bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchS\n }\n \n bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig) {\n-    if (vchSig.size() != COMPACT_SIGNATURE_SIZE)\n+    if (vchSig.size() != 65)\n         return false;\n     int recid = (vchSig[0] - 27) & 3;\n     bool fComp = ((vchSig[0] - 27) & 4) != 0;\n@@ -196,8 +194,8 @@ bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned cha\n     if (!secp256k1_ecdsa_recover(secp256k1_context_verify, &pubkey, &sig, hash.begin())) {\n         return false;\n     }\n-    unsigned char pub[PUBLIC_KEY_SIZE];\n-    size_t publen = PUBLIC_KEY_SIZE;\n+    unsigned char pub[65];\n+    size_t publen = 65;\n     secp256k1_ec_pubkey_serialize(secp256k1_context_verify, pub, &publen, &pubkey, fComp ? SECP256K1_EC_COMPRESSED : SECP256K1_EC_UNCOMPRESSED);\n     Set(pub, pub + publen);\n     return true;\n@@ -217,8 +215,8 @@ bool CPubKey::Decompress() {\n     if (!secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, &(*this)[0], size())) {\n         return false;\n     }\n-    unsigned char pub[PUBLIC_KEY_SIZE];\n-    size_t publen = PUBLIC_KEY_SIZE;\n+    unsigned char pub[65];\n+    size_t publen = 65;\n     secp256k1_ec_pubkey_serialize(secp256k1_context_verify, pub, &publen, &pubkey, SECP256K1_EC_UNCOMPRESSED);\n     Set(pub, pub + publen);\n     return true;\n@@ -227,7 +225,7 @@ bool CPubKey::Decompress() {\n bool CPubKey::Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChild, const ChainCode& cc) const {\n     assert(IsValid());\n     assert((nChild >> 31) == 0);\n-    assert(size() == COMPRESSED_PUBLIC_KEY_SIZE);\n+    assert(begin() + 33 == end());\n     unsigned char out[64];\n     BIP32Hash(cc, nChild, *begin(), begin()+1, out);\n     memcpy(ccChild.begin(), out+32, 32);\n@@ -238,8 +236,8 @@ bool CPubKey::Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChi\n     if (!secp256k1_ec_pubkey_tweak_add(secp256k1_context_verify, &pubkey, out)) {\n         return false;\n     }\n-    unsigned char pub[COMPRESSED_PUBLIC_KEY_SIZE];\n-    size_t publen = COMPRESSED_PUBLIC_KEY_SIZE;\n+    unsigned char pub[33];\n+    size_t publen = 33;\n     secp256k1_ec_pubkey_serialize(secp256k1_context_verify, pub, &publen, &pubkey, SECP256K1_EC_COMPRESSED);\n     pubkeyChild.Set(pub, pub + publen);\n     return true;\n@@ -251,8 +249,8 @@ void CExtPubKey::Encode(unsigned char code[BIP32_EXTKEY_SIZE]) const {\n     code[5] = (nChild >> 24) & 0xFF; code[6] = (nChild >> 16) & 0xFF;\n     code[7] = (nChild >>  8) & 0xFF; code[8] = (nChild >>  0) & 0xFF;\n     memcpy(code+9, chaincode.begin(), 32);\n-    assert(pubkey.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE);\n-    memcpy(code+41, pubkey.begin(), CPubKey::COMPRESSED_PUBLIC_KEY_SIZE);\n+    assert(pubkey.size() == 33);\n+    memcpy(code+41, pubkey.begin(), 33);\n }\n \n void CExtPubKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE]) {"
      },
      {
        "sha": "dbf0e23f2076e87c69308f3947d7d4de3a6aa456",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 20,
        "deletions": 27,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,65 +1,58 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n // Copyright (c) 2009-2016 The Bitcoin Core developers\n-// Copyright (c) 2017 The Zcash developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #ifndef BITCOIN_PUBKEY_H\n #define BITCOIN_PUBKEY_H\n \n-#include <hash.h>\n-#include <serialize.h>\n-#include <uint256.h>\n+#include \"hash.h\"\n+#include \"serialize.h\"\n+#include \"uint256.h\"\n \n #include <stdexcept>\n #include <vector>\n \n+/**\n+ * secp256k1:\n+ * const unsigned int PRIVATE_KEY_SIZE = 279;\n+ * const unsigned int PUBLIC_KEY_SIZE  = 65;\n+ * const unsigned int SIGNATURE_SIZE   = 72;\n+ *\n+ * see www.keylength.com\n+ * script supports up to 75 for single byte push\n+ */\n+\n const unsigned int BIP32_EXTKEY_SIZE = 74;\n \n /** A reference to a CKey: the Hash160 of its serialized public key */\n class CKeyID : public uint160\n {\n public:\n     CKeyID() : uint160() {}\n-    explicit CKeyID(const uint160& in) : uint160(in) {}\n+    CKeyID(const uint160& in) : uint160(in) {}\n };\n \n typedef uint256 ChainCode;\n \n /** An encapsulated public key. */\n class CPubKey\n {\n-public:\n-    /**\n-     * secp256k1:\n-     */\n-    static const unsigned int PUBLIC_KEY_SIZE             = 65;\n-    static const unsigned int COMPRESSED_PUBLIC_KEY_SIZE  = 33;\n-    static const unsigned int SIGNATURE_SIZE              = 72;\n-    static const unsigned int COMPACT_SIGNATURE_SIZE      = 65;\n-    /**\n-     * see www.keylength.com\n-     * script supports up to 75 for single byte push\n-     */\n-    static_assert(\n-        PUBLIC_KEY_SIZE >= COMPRESSED_PUBLIC_KEY_SIZE,\n-        \"COMPRESSED_PUBLIC_KEY_SIZE is larger than PUBLIC_KEY_SIZE\");\n-\n private:\n \n     /**\n      * Just store the serialized data.\n      * Its length can very cheaply be computed from the first byte.\n      */\n-    unsigned char vch[PUBLIC_KEY_SIZE];\n+    unsigned char vch[65];\n \n     //! Compute the length of a pubkey with a given first byte.\n     unsigned int static GetLen(unsigned char chHeader)\n     {\n         if (chHeader == 2 || chHeader == 3)\n-            return COMPRESSED_PUBLIC_KEY_SIZE;\n+            return 33;\n         if (chHeader == 4 || chHeader == 6 || chHeader == 7)\n-            return PUBLIC_KEY_SIZE;\n+            return 65;\n         return 0;\n     }\n \n@@ -95,7 +88,7 @@ class CPubKey\n     }\n \n     //! Construct a public key from a byte vector.\n-    explicit CPubKey(const std::vector<unsigned char>& _vch)\n+    CPubKey(const std::vector<unsigned char>& _vch)\n     {\n         Set(_vch.begin(), _vch.end());\n     }\n@@ -134,7 +127,7 @@ class CPubKey\n     void Unserialize(Stream& s)\n     {\n         unsigned int len = ::ReadCompactSize(s);\n-        if (len <= PUBLIC_KEY_SIZE) {\n+        if (len <= 65) {\n             s.read((char*)vch, len);\n         } else {\n             // invalid pubkey, skip available data\n@@ -173,7 +166,7 @@ class CPubKey\n     //! Check whether this is a compressed public key.\n     bool IsCompressed() const\n     {\n-        return size() == COMPRESSED_PUBLIC_KEY_SIZE;\n+        return size() == 33;\n     }\n \n     /**"
      },
      {
        "sha": "7e10c0a8e5ea54efec640c1e596897c856e4602e",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,18 +3,18 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <qt/addressbookpage.h>\n-#include <qt/forms/ui_addressbookpage.h>\n+#include \"addressbookpage.h\"\n+#include \"ui_addressbookpage.h\"\n \n-#include <qt/addresstablemodel.h>\n-#include <qt/bitcoingui.h>\n-#include <qt/csvmodelwriter.h>\n-#include <qt/editaddressdialog.h>\n-#include <qt/guiutil.h>\n-#include <qt/platformstyle.h>\n+#include \"addresstablemodel.h\"\n+#include \"bitcoingui.h\"\n+#include \"csvmodelwriter.h\"\n+#include \"editaddressdialog.h\"\n+#include \"guiutil.h\"\n+#include \"platformstyle.h\"\n \n #include <QIcon>\n #include <QMenu>\n@@ -67,11 +67,11 @@ AddressBookPage::AddressBookPage(const PlatformStyle *platformStyle, Mode _mode,\n     switch(tab)\n     {\n     case SendingTab:\n-        ui->labelExplanation->setText(tr(\"These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.\"));\n+        ui->labelExplanation->setText(tr(\"These are your Litecoin addresses for sending payments. Always check the amount and the receiving address before sending coins.\"));\n         ui->deleteAddress->setVisible(true);\n         break;\n     case ReceivingTab:\n-        ui->labelExplanation->setText(tr(\"These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.\"));\n+        ui->labelExplanation->setText(tr(\"These are your Litecoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.\"));\n         ui->deleteAddress->setVisible(false);\n         break;\n     }"
      },
      {
        "sha": "2fa032abdc44a10a08f8444b8c7d81aa1fa438e8",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,13 +2,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/addresstablemodel.h>\n+#include \"addresstablemodel.h\"\n \n-#include <qt/guiutil.h>\n-#include <qt/walletmodel.h>\n+#include \"guiutil.h\"\n+#include \"walletmodel.h\"\n \n-#include <base58.h>\n-#include <wallet/wallet.h>\n+#include \"base58.h\"\n+#include \"wallet/wallet.h\"\n \n \n #include <QFont>\n@@ -82,14 +82,14 @@ class AddressTablePriv\n             LOCK(wallet->cs_wallet);\n             for (const std::pair<CTxDestination, CAddressBookData>& item : wallet->mapAddressBook)\n             {\n-                const CTxDestination& address = item.first;\n-                bool fMine = IsMine(*wallet, address);\n+                const CBitcoinAddress& address = item.first;\n+                bool fMine = IsMine(*wallet, address.Get());\n                 AddressTableEntry::Type addressType = translateTransactionType(\n                         QString::fromStdString(item.second.purpose), fMine);\n                 const std::string& strName = item.second.name;\n                 cachedAddressTable.append(AddressTableEntry(addressType,\n                                   QString::fromStdString(strName),\n-                                  QString::fromStdString(EncodeDestination(address))));\n+                                  QString::fromStdString(address.ToString())));\n             }\n         }\n         // qLowerBound() and qUpperBound() require our cachedAddressTable list to be sorted in asc order\n@@ -246,7 +246,7 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n     if(role == Qt::EditRole)\n     {\n         LOCK(wallet->cs_wallet); /* For SetAddressBook / DelAddressBook */\n-        CTxDestination curAddress = DecodeDestination(rec->address.toStdString());\n+        CTxDestination curAddress = CBitcoinAddress(rec->address.toStdString()).Get();\n         if(index.column() == Label)\n         {\n             // Do nothing, if old label == new label\n@@ -257,7 +257,7 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n             }\n             wallet->SetAddressBook(curAddress, value.toString().toStdString(), strPurpose);\n         } else if(index.column() == Address) {\n-            CTxDestination newAddress = DecodeDestination(value.toString().toStdString());\n+            CTxDestination newAddress = CBitcoinAddress(value.toString().toStdString()).Get();\n             // Refuse to set invalid address, set error status and return false\n             if(boost::get<CNoDestination>(&newAddress))\n             {\n@@ -358,7 +358,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n         // Check for duplicate addresses\n         {\n             LOCK(wallet->cs_wallet);\n-            if(wallet->mapAddressBook.count(DecodeDestination(strAddress)))\n+            if(wallet->mapAddressBook.count(CBitcoinAddress(strAddress).Get()))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return QString();\n@@ -384,7 +384,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n                 return QString();\n             }\n         }\n-        strAddress = EncodeDestination(newKey.GetID());\n+        strAddress = CBitcoinAddress(newKey.GetID()).ToString();\n     }\n     else\n     {\n@@ -394,7 +394,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n     // Add entry\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->SetAddressBook(DecodeDestination(strAddress), strLabel,\n+        wallet->SetAddressBook(CBitcoinAddress(strAddress).Get(), strLabel,\n                                (type == Send ? \"send\" : \"receive\"));\n     }\n     return QString::fromStdString(strAddress);\n@@ -412,7 +412,7 @@ bool AddressTableModel::removeRows(int row, int count, const QModelIndex &parent\n     }\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->DelAddressBook(DecodeDestination(rec->address.toStdString()));\n+        wallet->DelAddressBook(CBitcoinAddress(rec->address.toStdString()).Get());\n     }\n     return true;\n }\n@@ -423,8 +423,8 @@ QString AddressTableModel::labelForAddress(const QString &address) const\n {\n     {\n         LOCK(wallet->cs_wallet);\n-        CTxDestination destination = DecodeDestination(address.toStdString());\n-        std::map<CTxDestination, CAddressBookData>::iterator mi = wallet->mapAddressBook.find(destination);\n+        CBitcoinAddress address_parsed(address.toStdString());\n+        std::map<CTxDestination, CAddressBookData>::iterator mi = wallet->mapAddressBook.find(address_parsed.Get());\n         if (mi != wallet->mapAddressBook.end())\n         {\n             return QString::fromStdString(mi->second.name);"
      },
      {
        "sha": "3f7441bb42773b51775b15613ccb82621b6fc17c",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 18,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,16 +3,16 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <qt/askpassphrasedialog.h>\n-#include <qt/forms/ui_askpassphrasedialog.h>\n+#include \"askpassphrasedialog.h\"\n+#include \"ui_askpassphrasedialog.h\"\n \n-#include <qt/guiconstants.h>\n-#include <qt/walletmodel.h>\n+#include \"guiconstants.h\"\n+#include \"walletmodel.h\"\n \n-#include <support/allocators/secure.h>\n+#include \"support/allocators/secure.h\"\n \n #include <QKeyEvent>\n #include <QMessageBox>\n@@ -70,7 +70,6 @@ AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent) :\n             break;\n     }\n     textChanged();\n-    connect(ui->toggleShowPasswordButton, SIGNAL(toggled(bool)), this, SLOT(toggleShowPassword(bool)));\n     connect(ui->passEdit1, SIGNAL(textChanged(QString)), this, SLOT(textChanged()));\n     connect(ui->passEdit2, SIGNAL(textChanged(QString)), this, SLOT(textChanged()));\n     connect(ui->passEdit3, SIGNAL(textChanged(QString)), this, SLOT(textChanged()));\n@@ -112,7 +111,7 @@ void AskPassphraseDialog::accept()\n             break;\n         }\n         QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm wallet encryption\"),\n-                 tr(\"Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR BITCOINS</b>!\") + \"<br><br>\" + tr(\"Are you sure you wish to encrypt your wallet?\"),\n+                 tr(\"Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR BLOCKCASHS</b>!\") + \"<br><br>\" + tr(\"Are you sure you wish to encrypt your wallet?\"),\n                  QMessageBox::Yes|QMessageBox::Cancel,\n                  QMessageBox::Cancel);\n         if(retval == QMessageBox::Yes)\n@@ -125,7 +124,7 @@ void AskPassphraseDialog::accept()\n                                          \"<qt>\" +\n                                          tr(\"%1 will close now to finish the encryption process. \"\n                                          \"Remember that encrypting your wallet cannot fully protect \"\n-                                         \"your bitcoins from being stolen by malware infecting your computer.\").arg(tr(PACKAGE_NAME)) +\n+                                         \"your blockcashs from being stolen by malware infecting your computer.\").arg(tr(PACKAGE_NAME)) +\n                                          \"<br><br><b>\" +\n                                          tr(\"IMPORTANT: Any previous backups you have made of your wallet file \"\n                                          \"should be replaced with the newly generated, encrypted wallet file. \"\n@@ -235,15 +234,6 @@ bool AskPassphraseDialog::event(QEvent *event)\n     return QWidget::event(event);\n }\n \n-void AskPassphraseDialog::toggleShowPassword(bool show)\n-{\n-    ui->toggleShowPasswordButton->setDown(show);\n-    const auto mode = show ? QLineEdit::Normal : QLineEdit::Password;\n-    ui->passEdit1->setEchoMode(mode);\n-    ui->passEdit2->setEchoMode(mode);\n-    ui->passEdit3->setEchoMode(mode);\n-}\n-\n bool AskPassphraseDialog::eventFilter(QObject *object, QEvent *event)\n {\n     /* Detect Caps Lock."
      },
      {
        "sha": "34bf7ccb31f6fb215506182bee4401fd79a1fc42",
        "filename": "src/qt/askpassphrasedialog.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/askpassphrasedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/askpassphrasedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -43,7 +43,6 @@ class AskPassphraseDialog : public QDialog\n private Q_SLOTS:\n     void textChanged();\n     void secureClearPassFields();\n-    void toggleShowPassword(bool);\n \n protected:\n     bool event(QEvent *event);"
      },
      {
        "sha": "f8a99506c131ea35169a73cf7240d4b818599282",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,14 +2,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/bantablemodel.h>\n+#include \"bantablemodel.h\"\n \n-#include <qt/clientmodel.h>\n-#include <qt/guiconstants.h>\n-#include <qt/guiutil.h>\n+#include \"clientmodel.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n \n-#include <sync.h>\n-#include <utiltime.h>\n+#include \"sync.h\"\n+#include \"utiltime.h\"\n \n #include <QDebug>\n #include <QList>\n@@ -55,11 +55,11 @@ class BanTablePriv\n #if QT_VERSION >= 0x040700\n         cachedBanlist.reserve(banMap.size());\n #endif\n-        for (const auto& entry : banMap)\n+        for (banmap_t::iterator it = banMap.begin(); it != banMap.end(); it++)\n         {\n             CCombinedBan banEntry;\n-            banEntry.subnet = entry.first;\n-            banEntry.banEntry = entry.second;\n+            banEntry.subnet = (*it).first;\n+            banEntry.banEntry = (*it).second;\n             cachedBanlist.append(banEntry);\n         }\n "
      },
      {
        "sha": "062cfdc931553475159a3a0ac0c9f1539ea547a8",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_QT_BANTABLEMODEL_H\n #define BITCOIN_QT_BANTABLEMODEL_H\n \n-#include <net.h>\n+#include \"net.h\"\n \n #include <QAbstractTableModel>\n #include <QStringList>"
      },
      {
        "sha": "bf06f6650987877c72b47d8ab5a52ddd141be5bf",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,38 +3,38 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <qt/bitcoingui.h>\n-\n-#include <chainparams.h>\n-#include <qt/clientmodel.h>\n-#include <fs.h>\n-#include <qt/guiconstants.h>\n-#include <qt/guiutil.h>\n-#include <qt/intro.h>\n-#include <qt/networkstyle.h>\n-#include <qt/optionsmodel.h>\n-#include <qt/platformstyle.h>\n-#include <qt/splashscreen.h>\n-#include <qt/utilitydialog.h>\n-#include <qt/winshutdownmonitor.h>\n+#include \"bitcoingui.h\"\n+\n+#include \"chainparams.h\"\n+#include \"clientmodel.h\"\n+#include \"fs.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n+#include \"intro.h\"\n+#include \"networkstyle.h\"\n+#include \"optionsmodel.h\"\n+#include \"platformstyle.h\"\n+#include \"splashscreen.h\"\n+#include \"utilitydialog.h\"\n+#include \"winshutdownmonitor.h\"\n \n #ifdef ENABLE_WALLET\n-#include <qt/paymentserver.h>\n-#include <qt/walletmodel.h>\n+#include \"paymentserver.h\"\n+#include \"walletmodel.h\"\n #endif\n \n-#include <init.h>\n-#include <rpc/server.h>\n-#include <scheduler.h>\n-#include <ui_interface.h>\n-#include <util.h>\n-#include <warnings.h>\n+#include \"init.h\"\n+#include \"rpc/server.h\"\n+#include \"scheduler.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"warnings.h\"\n \n #ifdef ENABLE_WALLET\n-#include <wallet/wallet.h>\n+#include \"wallet/wallet.h\"\n #endif\n \n #include <stdint.h>\n@@ -227,7 +227,7 @@ class BitcoinApplication: public QApplication\n     void requestShutdown();\n \n     /// Get process return value\n-    int getReturnValue() const { return returnValue; }\n+    int getReturnValue() { return returnValue; }\n \n     /// Get window identifier of QMainWindow (BitcoinGUI)\n     WId getMainWinId() const;\n@@ -261,7 +261,7 @@ public Q_SLOTS:\n     void startThread();\n };\n \n-#include <qt/bitcoin.moc>\n+#include \"bitcoin.moc\"\n \n BitcoinCore::BitcoinCore():\n     QObject()\n@@ -531,7 +531,7 @@ void BitcoinApplication::shutdownResult()\n \n void BitcoinApplication::handleRunawayException(const QString &message)\n {\n-    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. Bitcoin can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + message);\n+    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. Blockcash can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + message);\n     ::exit(EXIT_FAILURE);\n }\n "
      },
      {
        "sha": "9c39c85fb94e50fc566aa4d239fca91a8febbee1",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1,6 +1,7 @@\n <!DOCTYPE RCC><RCC version=\"1.0\">\n     <qresource prefix=\"/icons\">\n         <file alias=\"bitcoin\">res/icons/bitcoin.png</file>\n+        <file alias=\"blockcash_splash\">res/icons/blockcash_splash.png</file>\n         <file alias=\"address-book\">res/icons/address-book.png</file>\n         <file alias=\"quit\">res/icons/quit.png</file>\n         <file alias=\"send\">res/icons/send.png</file>"
      },
      {
        "sha": "cef81781e292133e542f355ab9114f688a3b6bf1",
        "filename": "src/qt/bitcoin_locale.qrc",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoin_locale.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoin_locale.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin_locale.qrc?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,18 +6,24 @@\n         <file alias=\"be_BY\">locale/bitcoin_be_BY.qm</file>\n         <file alias=\"bg_BG\">locale/bitcoin_bg_BG.qm</file>\n         <file alias=\"bg\">locale/bitcoin_bg.qm</file>\n+        <file alias=\"bn\">locale/bitcoin_bn.qm</file>\n+        <file alias=\"bs\">locale/bitcoin_bs.qm</file>\n         <file alias=\"ca_ES\">locale/bitcoin_ca_ES.qm</file>\n         <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n         <file alias=\"ca@valencia\">locale/bitcoin_ca@valencia.qm</file>\n         <file alias=\"cs\">locale/bitcoin_cs.qm</file>\n         <file alias=\"cy\">locale/bitcoin_cy.qm</file>\n         <file alias=\"da\">locale/bitcoin_da.qm</file>\n+        <file alias=\"de_DE\">locale/bitcoin_de_DE.qm</file>\n         <file alias=\"de\">locale/bitcoin_de.qm</file>\n         <file alias=\"el_GR\">locale/bitcoin_el_GR.qm</file>\n         <file alias=\"el\">locale/bitcoin_el.qm</file>\n+        <file alias=\"en_AU\">locale/bitcoin_en_AU.qm</file>\n         <file alias=\"en_GB\">locale/bitcoin_en_GB.qm</file>\n         <file alias=\"en\">locale/bitcoin_en.qm</file>\n+        <file alias=\"en_US\">locale/bitcoin_en_US.qm</file>\n         <file alias=\"eo\">locale/bitcoin_eo.qm</file>\n+        <file alias=\"es_419\">locale/bitcoin_es_419.qm</file>\n         <file alias=\"es_AR\">locale/bitcoin_es_AR.qm</file>\n         <file alias=\"es_CL\">locale/bitcoin_es_CL.qm</file>\n         <file alias=\"es_CO\">locale/bitcoin_es_CO.qm</file>\n@@ -37,13 +43,16 @@\n         <file alias=\"fr_FR\">locale/bitcoin_fr_FR.qm</file>\n         <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n         <file alias=\"gl\">locale/bitcoin_gl.qm</file>\n+        <file alias=\"he_IL\">locale/bitcoin_he_IL.qm</file>\n         <file alias=\"he\">locale/bitcoin_he.qm</file>\n         <file alias=\"hi_IN\">locale/bitcoin_hi_IN.qm</file>\n         <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n         <file alias=\"hu\">locale/bitcoin_hu.qm</file>\n         <file alias=\"id_ID\">locale/bitcoin_id_ID.qm</file>\n+        <file alias=\"id\">locale/bitcoin_id.qm</file>\n         <file alias=\"it_IT\">locale/bitcoin_it_IT.qm</file>\n         <file alias=\"it\">locale/bitcoin_it.qm</file>\n+        <file alias=\"ja_JP\">locale/bitcoin_ja_JP.qm</file>\n         <file alias=\"ja\">locale/bitcoin_ja.qm</file>\n         <file alias=\"ka\">locale/bitcoin_ka.qm</file>\n         <file alias=\"kk_KZ\">locale/bitcoin_kk_KZ.qm</file>\n@@ -56,8 +65,11 @@\n         <file alias=\"mk_MK\">locale/bitcoin_mk_MK.qm</file>\n         <file alias=\"mn\">locale/bitcoin_mn.qm</file>\n         <file alias=\"ms_MY\">locale/bitcoin_ms_MY.qm</file>\n+        <file alias=\"my\">locale/bitcoin_my.qm</file>\n+        <file alias=\"nb_NO\">locale/bitcoin_nb_NO.qm</file>\n         <file alias=\"nb\">locale/bitcoin_nb.qm</file>\n         <file alias=\"ne\">locale/bitcoin_ne.qm</file>\n+        <file alias=\"nl_NL\">locale/bitcoin_nl_NL.qm</file>\n         <file alias=\"nl\">locale/bitcoin_nl.qm</file>\n         <file alias=\"pam\">locale/bitcoin_pam.qm</file>\n         <file alias=\"pl\">locale/bitcoin_pl.qm</file>\n@@ -67,14 +79,17 @@\n         <file alias=\"ro\">locale/bitcoin_ro.qm</file>\n         <file alias=\"ru_RU\">locale/bitcoin_ru_RU.qm</file>\n         <file alias=\"ru\">locale/bitcoin_ru.qm</file>\n+        <file alias=\"si\">locale/bitcoin_si.qm</file>\n         <file alias=\"sk\">locale/bitcoin_sk.qm</file>\n         <file alias=\"sl_SI\">locale/bitcoin_sl_SI.qm</file>\n         <file alias=\"sq\">locale/bitcoin_sq.qm</file>\n         <file alias=\"sr@latin\">locale/bitcoin_sr@latin.qm</file>\n         <file alias=\"sr\">locale/bitcoin_sr.qm</file>\n         <file alias=\"sv\">locale/bitcoin_sv.qm</file>\n         <file alias=\"ta\">locale/bitcoin_ta.qm</file>\n+        <file alias=\"te\">locale/bitcoin_te.qm</file>\n         <file alias=\"th_TH\">locale/bitcoin_th_TH.qm</file>\n+        <file alias=\"th\">locale/bitcoin_th.qm</file>\n         <file alias=\"tr_TR\">locale/bitcoin_tr_TR.qm</file>\n         <file alias=\"tr\">locale/bitcoin_tr.qm</file>\n         <file alias=\"uk\">locale/bitcoin_uk.qm</file>"
      },
      {
        "sha": "d712705c431000800a8c4736f7992de09c2bc0e8",
        "filename": "src/qt/bitcoinaddressvalidator.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinaddressvalidator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinaddressvalidator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinaddressvalidator.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/bitcoinaddressvalidator.h>\n+#include \"bitcoinaddressvalidator.h\"\n \n-#include <base58.h>\n+#include \"base58.h\"\n \n /* Base58 characters are:\n      \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n@@ -67,7 +67,7 @@ QValidator::State BitcoinAddressEntryValidator::validate(QString &input, int &po\n         if (((ch >= '0' && ch<='9') ||\n             (ch >= 'a' && ch<='z') ||\n             (ch >= 'A' && ch<='Z')) &&\n-            ch != 'I' && ch != 'O') // Characters invalid in both Base58 and Bech32\n+            ch != 'l' && ch != 'I' && ch != '0' && ch != 'O')\n         {\n             // Alphanumeric and not a 'forbidden' character\n         }\n@@ -89,9 +89,9 @@ QValidator::State BitcoinAddressCheckValidator::validate(QString &input, int &po\n {\n     Q_UNUSED(pos);\n     // Validate the passed Bitcoin address\n-    if (IsValidDestinationString(input.toStdString())) {\n+    CBitcoinAddress addr(input.toStdString());\n+    if (addr.IsValid())\n         return QValidator::Acceptable;\n-    }\n \n     return QValidator::Invalid;\n }"
      },
      {
        "sha": "73eb35a54e56b78e3c2a9953c6858e9110f78708",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,11 +2,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/bitcoinamountfield.h>\n+#include \"bitcoinamountfield.h\"\n \n-#include <qt/bitcoinunits.h>\n-#include <qt/guiconstants.h>\n-#include <qt/qvaluecombobox.h>\n+#include \"bitcoinunits.h\"\n+#include \"guiconstants.h\"\n+#include \"qvaluecombobox.h\"\n \n #include <QApplication>\n #include <QAbstractSpinBox>\n@@ -188,7 +188,7 @@ class AmountSpinBox: public QAbstractSpinBox\n     void valueChanged();\n };\n \n-#include <qt/bitcoinamountfield.moc>\n+#include \"bitcoinamountfield.moc\"\n \n BitcoinAmountField::BitcoinAmountField(QWidget *parent) :\n     QWidget(parent),"
      },
      {
        "sha": "2f03a3d1713a874cc4e6469c0ca83985004c8213",
        "filename": "src/qt/bitcoinamountfield.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinamountfield.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinamountfield.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_QT_BITCOINAMOUNTFIELD_H\n #define BITCOIN_QT_BITCOINAMOUNTFIELD_H\n \n-#include <amount.h>\n+#include \"amount.h\"\n \n #include <QWidget>\n "
      },
      {
        "sha": "c07580ebfccf1a3df3a361786e88da23917bb10e",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 38,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,35 +2,39 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/bitcoingui.h>\n-\n-#include <qt/bitcoinunits.h>\n-#include <qt/clientmodel.h>\n-#include <qt/guiconstants.h>\n-#include <qt/guiutil.h>\n-#include <qt/modaloverlay.h>\n-#include <qt/networkstyle.h>\n-#include <qt/notificator.h>\n-#include <qt/openuridialog.h>\n-#include <qt/optionsdialog.h>\n-#include <qt/optionsmodel.h>\n-#include <qt/platformstyle.h>\n-#include <qt/rpcconsole.h>\n-#include <qt/utilitydialog.h>\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include \"bitcoingui.h\"\n+\n+#include \"bitcoinunits.h\"\n+#include \"clientmodel.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n+#include \"modaloverlay.h\"\n+#include \"networkstyle.h\"\n+#include \"notificator.h\"\n+#include \"openuridialog.h\"\n+#include \"optionsdialog.h\"\n+#include \"optionsmodel.h\"\n+#include \"platformstyle.h\"\n+#include \"rpcconsole.h\"\n+#include \"utilitydialog.h\"\n \n #ifdef ENABLE_WALLET\n-#include <qt/walletframe.h>\n-#include <qt/walletmodel.h>\n+#include \"walletframe.h\"\n+#include \"walletmodel.h\"\n #endif // ENABLE_WALLET\n \n #ifdef Q_OS_MAC\n-#include <qt/macdockiconhandler.h>\n+#include \"macdockiconhandler.h\"\n #endif\n \n-#include <chainparams.h>\n-#include <init.h>\n-#include <ui_interface.h>\n-#include <util.h>\n+#include \"chainparams.h\"\n+#include \"init.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n \n #include <iostream>\n \n@@ -119,11 +123,7 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *_platformStyle, const NetworkStyle *\n     spinnerFrame(0),\n     platformStyle(_platformStyle)\n {\n-    QSettings settings;\n-    if (!restoreGeometry(settings.value(\"MainWindowGeometry\").toByteArray())) {\n-        // Restore failed (perhaps missing setting), center the window\n-        move(QApplication::desktop()->availableGeometry().center() - frameGeometry().center());\n-    }\n+    GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n     QString windowTitle = tr(PACKAGE_NAME) + \" - \";\n #ifdef ENABLE_WALLET\n@@ -261,8 +261,7 @@ BitcoinGUI::~BitcoinGUI()\n     // Unsubscribe from notifications from core\n     unsubscribeFromCoreSignals();\n \n-    QSettings settings;\n-    settings.setValue(\"MainWindowGeometry\", saveGeometry());\n+    GUIUtil::saveWindowGeometry(\"nWindow\", this);\n     if(trayIcon) // Hide tray icon, as deleting will let it linger until quit (on Ubuntu)\n         trayIcon->hide();\n #ifdef Q_OS_MAC\n@@ -285,7 +284,7 @@ void BitcoinGUI::createActions()\n     tabGroup->addAction(overviewAction);\n \n     sendCoinsAction = new QAction(platformStyle->SingleColorIcon(\":/icons/send\"), tr(\"&Send\"), this);\n-    sendCoinsAction->setStatusTip(tr(\"Send coins to a Bitcoin address\"));\n+    sendCoinsAction->setStatusTip(tr(\"Send coins to a Blockcash address\"));\n     sendCoinsAction->setToolTip(sendCoinsAction->statusTip());\n     sendCoinsAction->setCheckable(true);\n     sendCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_2));\n@@ -296,7 +295,7 @@ void BitcoinGUI::createActions()\n     sendCoinsMenuAction->setToolTip(sendCoinsMenuAction->statusTip());\n \n     receiveCoinsAction = new QAction(platformStyle->SingleColorIcon(\":/icons/receiving_addresses\"), tr(\"&Receive\"), this);\n-    receiveCoinsAction->setStatusTip(tr(\"Request payments (generates QR codes and bitcoin: URIs)\"));\n+    receiveCoinsAction->setStatusTip(tr(\"Request payments (generates QR codes and Blockcash: URIs)\"));\n     receiveCoinsAction->setToolTip(receiveCoinsAction->statusTip());\n     receiveCoinsAction->setCheckable(true);\n     receiveCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_3));\n@@ -356,9 +355,9 @@ void BitcoinGUI::createActions()\n     changePassphraseAction = new QAction(platformStyle->TextColorIcon(\":/icons/key\"), tr(\"&Change Passphrase...\"), this);\n     changePassphraseAction->setStatusTip(tr(\"Change the passphrase used for wallet encryption\"));\n     signMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/edit\"), tr(\"Sign &message...\"), this);\n-    signMessageAction->setStatusTip(tr(\"Sign messages with your Bitcoin addresses to prove you own them\"));\n+    signMessageAction->setStatusTip(tr(\"Sign messages with your Blockcash addresses to prove you own them\"));\n     verifyMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/verify\"), tr(\"&Verify message...\"), this);\n-    verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n+    verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Blockcash addresses\"));\n \n     openRPCConsoleAction = new QAction(platformStyle->TextColorIcon(\":/icons/debugwindow\"), tr(\"&Debug window\"), this);\n     openRPCConsoleAction->setStatusTip(tr(\"Open debugging and diagnostic console\"));\n@@ -371,11 +370,11 @@ void BitcoinGUI::createActions()\n     usedReceivingAddressesAction->setStatusTip(tr(\"Show the list of used receiving addresses and labels\"));\n \n     openAction = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &URI...\"), this);\n-    openAction->setStatusTip(tr(\"Open a bitcoin: URI or payment request\"));\n+    openAction->setStatusTip(tr(\"Open a blockcash: URI or payment request\"));\n \n     showHelpMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n-    showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(tr(PACKAGE_NAME)));\n+    showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Blockcash command-line options\").arg(tr(PACKAGE_NAME)));\n \n     connect(quitAction, SIGNAL(triggered()), qApp, SLOT(quit()));\n     connect(aboutAction, SIGNAL(triggered()), this, SLOT(aboutClicked()));\n@@ -455,7 +454,6 @@ void BitcoinGUI::createToolBars()\n     if(walletFrame)\n     {\n         QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n-        toolbar->setContextMenuPolicy(Qt::PreventContextMenu);\n         toolbar->setMovable(false);\n         toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n         toolbar->addAction(overviewAction);\n@@ -730,7 +728,7 @@ void BitcoinGUI::updateNetworkState()\n     QString tooltip;\n \n     if (clientModel->getNetworkActive()) {\n-        tooltip = tr(\"%n active connection(s) to Bitcoin network\", \"\", count) + QString(\".<br>\") + tr(\"Click to disable network activity.\");\n+        tooltip = tr(\"%n active connection(s) to Blockcash network\", \"\", count) + QString(\".<br>\") + tr(\"Click to disable network activity.\");\n     } else {\n         tooltip = tr(\"Network activity disabled.\") + QString(\"<br>\") + tr(\"Click to enable network activity again.\");\n         icon = \":/icons/network_disabled\";\n@@ -874,7 +872,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n \n void BitcoinGUI::message(const QString &title, const QString &message, unsigned int style, bool *ret)\n {\n-    QString strTitle = tr(\"Bitcoin\"); // default title\n+    QString strTitle = tr(\"Blockcash\"); // default title\n     // Default to information icon\n     int nMBoxIcon = QMessageBox::Information;\n     int nNotifyIcon = Notificator::Information;"
      },
      {
        "sha": "aa45ea1f0a0a7a0bc5c0183520664fc8ac4a6ea1",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -6,10 +6,10 @@\n #define BITCOIN_QT_BITCOINGUI_H\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <amount.h>\n+#include \"amount.h\"\n \n #include <QLabel>\n #include <QMainWindow>"
      },
      {
        "sha": "533572819b8f87a7f852b9e8a75e2084f889ddc1",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -250,8 +250,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"You need to rebuild the database using -reindex to go back to unpruned \"\n \"mode.  This will redownload the entire blockchain\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"You need to rebuild the database using -reindex-chainstate to change -txindex\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%d of last 100 blocks have unexpected version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s corrupt, salvage failed\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s is set very high!\"),\n@@ -416,6 +414,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: unknown new rules activated (versionbit %i)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Whether to operate in a blocks only mode (default: %u)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Zapping all transactions from wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"ZeroMQ notification options:\"),\n };"
      },
      {
        "sha": "af15bc2f7b1d13fb93ff64bc397a27df01d6da28",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,9 +2,9 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/bitcoinunits.h>\n+#include \"bitcoinunits.h\"\n \n-#include <primitives/transaction.h>\n+#include \"primitives/transaction.h\"\n \n #include <QStringList>\n \n@@ -40,9 +40,9 @@ QString BitcoinUnits::name(int unit)\n {\n     switch(unit)\n     {\n-    case BTC: return QString(\"BTC\");\n-    case mBTC: return QString(\"mBTC\");\n-    case uBTC: return QString::fromUtf8(\"\u03bcBTC\");\n+    case BTC: return QString(\"BSC\");\n+    case mBTC: return QString(\"mBSC\");\n+    case uBTC: return QString(\"\u03bcBSC\");\n     default: return QString(\"???\");\n     }\n }\n@@ -51,9 +51,9 @@ QString BitcoinUnits::description(int unit)\n {\n     switch(unit)\n     {\n-    case BTC: return QString(\"Bitcoins\");\n-    case mBTC: return QString(\"Milli-Bitcoins (1 / 1\" THIN_SP_UTF8 \"000)\");\n-    case uBTC: return QString(\"Micro-Bitcoins (1 / 1\" THIN_SP_UTF8 \"000\" THIN_SP_UTF8 \"000)\");\n+    case BTC: return QString(\"Blockcashs\");\n+    case mBTC: return QString(\"Mili Blockcashs (1 / 1\" THIN_SP_UTF8 \"000)\");\n+    case uBTC: return QString(\"Micro Blockcashs (1 / 1\" THIN_SP_UTF8 \"000\" THIN_SP_UTF8 \"000)\");\n     default: return QString(\"???\");\n     }\n }"
      },
      {
        "sha": "6ef37de380b4e79b292ab6bbdf59820c85b08274",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_QT_BITCOINUNITS_H\n #define BITCOIN_QT_BITCOINUNITS_H\n \n-#include <amount.h>\n+#include \"amount.h\"\n \n #include <QAbstractListModel>\n #include <QString>"
      },
      {
        "sha": "a8b593a6525582184b34f2845b575bb99a59e08a",
        "filename": "src/qt/callback.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/callback.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/callback.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/callback.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -16,7 +16,7 @@ class FunctionCallback : public Callback\n     F f;\n \n public:\n-    explicit FunctionCallback(F f_) : f(std::move(f_)) {}\n+    FunctionCallback(F f_) : f(std::move(f_)) {}\n     ~FunctionCallback() override {}\n     void call() override { f(this); }\n };"
      },
      {
        "sha": "52ce11cefd277df49601a617da143b108512d3a4",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,23 +2,23 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/clientmodel.h>\n-\n-#include <qt/bantablemodel.h>\n-#include <qt/guiconstants.h>\n-#include <qt/guiutil.h>\n-#include <qt/peertablemodel.h>\n-\n-#include <chain.h>\n-#include <chainparams.h>\n-#include <checkpoints.h>\n-#include <clientversion.h>\n-#include <validation.h>\n-#include <net.h>\n-#include <txmempool.h>\n-#include <ui_interface.h>\n-#include <util.h>\n-#include <warnings.h>\n+#include \"clientmodel.h\"\n+\n+#include \"bantablemodel.h\"\n+#include \"guiconstants.h\"\n+#include \"guiutil.h\"\n+#include \"peertablemodel.h\"\n+\n+#include \"chain.h\"\n+#include \"chainparams.h\"\n+#include \"checkpoints.h\"\n+#include \"clientversion.h\"\n+#include \"validation.h\"\n+#include \"net.h\"\n+#include \"txmempool.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+#include \"warnings.h\"\n \n #include <stdint.h>\n "
      },
      {
        "sha": "f3ee0fbe393aeace65b734393481a58623d164f7",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 21,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,24 +2,23 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/coincontroldialog.h>\n-#include <qt/forms/ui_coincontroldialog.h>\n-\n-#include <qt/addresstablemodel.h>\n-#include <qt/bitcoinunits.h>\n-#include <qt/guiutil.h>\n-#include <qt/optionsmodel.h>\n-#include <qt/platformstyle.h>\n-#include <txmempool.h>\n-#include <qt/walletmodel.h>\n-\n-#include <wallet/coincontrol.h>\n-#include <init.h>\n-#include <policy/fees.h>\n-#include <policy/policy.h>\n-#include <validation.h> // For mempool\n-#include <wallet/fees.h>\n-#include <wallet/wallet.h>\n+#include \"coincontroldialog.h\"\n+#include \"ui_coincontroldialog.h\"\n+\n+#include \"addresstablemodel.h\"\n+#include \"bitcoinunits.h\"\n+#include \"guiutil.h\"\n+#include \"optionsmodel.h\"\n+#include \"platformstyle.h\"\n+#include \"txmempool.h\"\n+#include \"walletmodel.h\"\n+\n+#include \"wallet/coincontrol.h\"\n+#include \"init.h\"\n+#include \"policy/fees.h\"\n+#include \"policy/policy.h\"\n+#include \"validation.h\" // For mempool\n+#include \"wallet/wallet.h\"\n \n #include <QApplication>\n #include <QCheckBox>\n@@ -28,7 +27,9 @@\n #include <QFlags>\n #include <QIcon>\n #include <QSettings>\n+#include <QString>\n #include <QTreeWidget>\n+#include <QTreeWidgetItem>\n \n QList<CAmount> CoinControlDialog::payAmounts;\n CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n@@ -509,7 +510,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 nBytes -= 34;\n \n         // Fee\n-        nPayFee = GetMinimumFee(nBytes, *coinControl, ::mempool, ::feeEstimator, nullptr /* FeeCalculation */);\n+        nPayFee = CWallet::GetMinimumFee(nBytes, *coinControl, ::mempool, ::feeEstimator, nullptr /* FeeCalculation */);\n \n         if (nPayAmount > 0)\n         {\n@@ -580,7 +581,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     QString toolTipDust = tr(\"This label turns red if any recipient receives an amount smaller than the current dust threshold.\");\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n-    double dFeeVary = (nBytes != 0) ? (double)nPayFee / nBytes : 0;\n+    double dFeeVary = (double)nPayFee / nBytes;\n \n     QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n \n@@ -658,7 +659,7 @@ void CoinControlDialog::updateView()\n             QString sAddress = \"\";\n             if(ExtractDestination(out.tx->tx->vout[out.i].scriptPubKey, outputAddress))\n             {\n-                sAddress = QString::fromStdString(EncodeDestination(outputAddress));\n+                sAddress = QString::fromStdString(CBitcoinAddress(outputAddress).ToString());\n \n                 // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs\n                 if (!treeMode || (!(sAddress == sWalletAddress)))"
      },
      {
        "sha": "99a9f893ffe3ae7092e51861f431683fea4feb08",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_QT_COINCONTROLDIALOG_H\n #define BITCOIN_QT_COINCONTROLDIALOG_H\n \n-#include <amount.h>\n+#include \"amount.h\"\n \n #include <QAbstractButton>\n #include <QAction>\n@@ -30,9 +30,9 @@ namespace Ui {\n class CCoinControlWidgetItem : public QTreeWidgetItem\n {\n public:\n-    explicit CCoinControlWidgetItem(QTreeWidget *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n-    explicit CCoinControlWidgetItem(int type = Type) : QTreeWidgetItem(type) {}\n-    explicit CCoinControlWidgetItem(QTreeWidgetItem *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n+    CCoinControlWidgetItem(QTreeWidget *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n+    CCoinControlWidgetItem(int type = Type) : QTreeWidgetItem(type) {}\n+    CCoinControlWidgetItem(QTreeWidgetItem *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n \n     bool operator<(const QTreeWidgetItem &other) const;\n };"
      },
      {
        "sha": "88510b61681dcc06d75a42787faf3bb1e0d5c204",
        "filename": "src/qt/coincontroltreewidget.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/coincontroltreewidget.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/coincontroltreewidget.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroltreewidget.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/coincontroltreewidget.h>\n-#include <qt/coincontroldialog.h>\n+#include \"coincontroltreewidget.h\"\n+#include \"coincontroldialog.h\"\n \n CoinControlTreeWidget::CoinControlTreeWidget(QWidget *parent) :\n     QTreeWidget(parent)"
      },
      {
        "sha": "df59927782d944383d9e7a06ee374f6698916370",
        "filename": "src/qt/csvmodelwriter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/csvmodelwriter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/csvmodelwriter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/csvmodelwriter.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/csvmodelwriter.h>\n+#include \"csvmodelwriter.h\"\n \n #include <QAbstractItemModel>\n #include <QFile>"
      },
      {
        "sha": "0da1e0ff94c2ca29476c1727532ec4dfbc8e8e41",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,11 +2,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/editaddressdialog.h>\n-#include <qt/forms/ui_editaddressdialog.h>\n+#include \"editaddressdialog.h\"\n+#include \"ui_editaddressdialog.h\"\n \n-#include <qt/addresstablemodel.h>\n-#include <qt/guiutil.h>\n+#include \"addresstablemodel.h\"\n+#include \"guiutil.h\"\n \n #include <QDataWidgetMapper>\n #include <QMessageBox>\n@@ -107,7 +107,7 @@ void EditAddressDialog::accept()\n             break;\n         case AddressTableModel::INVALID_ADDRESS:\n             QMessageBox::warning(this, windowTitle(),\n-                tr(\"The entered address \\\"%1\\\" is not a valid Bitcoin address.\").arg(ui->addressEdit->text()),\n+                tr(\"The entered address \\\"%1\\\" is not a valid Blockcash address.\").arg(ui->addressEdit->text()),\n                 QMessageBox::Ok, QMessageBox::Ok);\n             break;\n         case AddressTableModel::DUPLICATE_ADDRESS:"
      },
      {
        "sha": "a2105ecd0ae1213d4568327839d6a84635f73137",
        "filename": "src/qt/forms/askpassphrasedialog.ui",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/askpassphrasedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/askpassphrasedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/askpassphrasedialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -93,13 +93,6 @@\n       </widget>\n      </item>\n      <item row=\"3\" column=\"1\">\n-      <widget class=\"QCheckBox\" name=\"toggleShowPasswordButton\">\n-       <property name=\"text\">\n-        <string>Show password</string>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\"4\" column=\"1\">\n       <widget class=\"QLabel\" name=\"capsLabel\">\n        <property name=\"font\">\n         <font>"
      },
      {
        "sha": "76cf6b4d19b264fa8c54c23fceac3c1bd5809051",
        "filename": "src/qt/forms/coincontroldialog.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/coincontroldialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/coincontroldialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/coincontroldialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -132,7 +132,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 BTC</string>\n+          <string notr=\"true\">0.00 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -212,7 +212,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 BTC</string>\n+          <string notr=\"true\">0.00 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -257,7 +257,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 BTC</string>\n+          <string notr=\"true\">0.00 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -292,7 +292,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 BTC</string>\n+          <string notr=\"true\">0.00 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -487,7 +487,7 @@\n   <customwidget>\n    <class>CoinControlTreeWidget</class>\n    <extends>QTreeWidget</extends>\n-   <header>qt/coincontroltreewidget.h</header>\n+   <header>coincontroltreewidget.h</header>\n   </customwidget>\n  </customwidgets>\n  <resources/>"
      },
      {
        "sha": "093e644bdcec5f610d426e0d26bd2edc47e55eeb",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -1424,7 +1424,7 @@\n   <customwidget>\n    <class>TrafficGraphWidget</class>\n    <extends>QWidget</extends>\n-   <header>qt/trafficgraphwidget.h</header>\n+   <header>trafficgraphwidget.h</header>\n    <container>1</container>\n    <slots>\n     <slot>clear()</slot>"
      },
      {
        "sha": "c1aea36338929e8043697cfcfb35952ab0109b20",
        "filename": "src/qt/forms/editaddressdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/editaddressdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/editaddressdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/editaddressdialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -71,7 +71,7 @@\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/qvalidatedlineedit.h</header>\n+   <header>qvalidatedlineedit.h</header>\n   </customwidget>\n  </customwidgets>\n  <resources/>"
      },
      {
        "sha": "49d2c1fc53e47474f3bac6421134e58558a1dd35",
        "filename": "src/qt/forms/modaloverlay.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/modaloverlay.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/modaloverlay.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/modaloverlay.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -130,7 +130,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n              <item>\n               <widget class=\"QLabel\" name=\"infoText\">\n                <property name=\"text\">\n-                <string>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</string>\n+                <string>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the blockcash network, as detailed below.</string>\n                </property>\n                <property name=\"textFormat\">\n                 <enum>Qt::RichText</enum>\n@@ -149,7 +149,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n                 </font>\n                </property>\n                <property name=\"text\">\n-                <string>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</string>\n+                <string>Attempting to spend blockcashs that are affected by not-yet-displayed transactions will not be accepted by the network.</string>\n                </property>\n                <property name=\"textFormat\">\n                 <enum>Qt::RichText</enum>\n@@ -367,7 +367,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n   <customwidget>\n    <class>ModalOverlay</class>\n    <extends>QWidget</extends>\n-   <header>qt/modaloverlay.h</header>\n+   <header>modaloverlay.h</header>\n    <container>1</container>\n   </customwidget>\n  </customwidgets>"
      },
      {
        "sha": "7fce858bd29ed8b3145b1f74e529a67bd1f3206e",
        "filename": "src/qt/forms/openuridialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/openuridialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/openuridialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/openuridialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -77,7 +77,7 @@\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/qvalidatedlineedit.h</header>\n+   <header>qvalidatedlineedit.h</header>\n   </customwidget>\n  </customwidgets>\n  <resources/>"
      },
      {
        "sha": "37823627e621e57062336a584d9688d6e73ca23c",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -189,7 +189,7 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"mapPortUpnp\">\n          <property name=\"toolTip\">\n-          <string>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</string>\n+          <string>Automatically open the Blockcash client port on the router. This only works when your router supports UPnP and it is enabled.</string>\n          </property>\n          <property name=\"text\">\n           <string>Map port using &amp;UPnP</string>\n@@ -199,17 +199,17 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"allowIncoming\">\n          <property name=\"toolTip\">\n-          <string>Accept connections from outside.</string>\n+          <string>Accept connections from outside</string>\n          </property>\n          <property name=\"text\">\n-          <string>Allow incomin&amp;g connections</string>\n+          <string>Allow incoming connections</string>\n          </property>\n         </widget>\n        </item>\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocks\">\n          <property name=\"toolTip\">\n-          <string>Connect to the Bitcoin network through a SOCKS5 proxy.</string>\n+          <string>Connect to the Blockcash network through a SOCKS5 proxy.</string>\n          </property>\n          <property name=\"text\">\n           <string>&amp;Connect through SOCKS5 proxy (default proxy):</string>\n@@ -396,10 +396,10 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocksTor\">\n          <property name=\"toolTip\">\n-          <string>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</string>\n+          <string>Connect to the Blockcash network through a separate SOCKS5 proxy for Tor hidden services.</string>\n          </property>\n          <property name=\"text\">\n-          <string>Use separate SOCKS&amp;5 proxy to reach peers via Tor hidden services:</string>\n+          <string>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</string>\n          </property>\n         </widget>\n        </item>\n@@ -507,10 +507,10 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"hideTrayIcon\">\n          <property name=\"toolTip\">\n-          <string>Hide the icon from the system tray.</string>\n+          <string>&amp;Hide the icon from the system tray.</string>\n          </property>\n          <property name=\"text\">\n-          <string>&amp;Hide tray icon</string>\n+          <string>Hide tray icon</string>\n          </property>\n         </widget>\n        </item>\n@@ -610,7 +610,7 @@\n             <string>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</string>\n            </property>\n            <property name=\"text\">\n-            <string>&amp;Third party transaction URLs</string>\n+            <string>Third party transaction URLs</string>\n            </property>\n            <property name=\"buddy\">\n             <cstring>thirdPartyTxUrls</cstring>\n@@ -824,12 +824,12 @@\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/qvalidatedlineedit.h</header>\n+   <header>qvalidatedlineedit.h</header>\n   </customwidget>\n   <customwidget>\n    <class>QValueComboBox</class>\n    <extends>QComboBox</extends>\n-   <header>qt/qvaluecombobox.h</header>\n+   <header>qvaluecombobox.h</header>\n   </customwidget>\n  </customwidgets>\n  <resources/>"
      },
      {
        "sha": "b6729fed95d6af6c100b935ab1cfc71517b6f30e",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -73,7 +73,7 @@\n                </size>\n               </property>\n               <property name=\"toolTip\">\n-               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</string>\n+               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Blockcash network after a connection is established, but this process has not completed yet.</string>\n               </property>\n               <property name=\"text\">\n                <string/>\n@@ -129,7 +129,7 @@\n                <string>Unconfirmed transactions to watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 LTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -154,7 +154,7 @@\n                <string>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 LTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -179,7 +179,7 @@\n                <string>Mined balance in watch-only addresses that has not yet matured</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 LTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -237,7 +237,7 @@\n                <string>Mined balance that has not yet matured</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 LTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -282,7 +282,7 @@\n                <string>Your current total balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 LTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -307,7 +307,7 @@\n                <string>Current total balance in watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 LTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -349,7 +349,7 @@\n                <string>Your current spendable balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 LTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -374,7 +374,7 @@\n                <string>Your current balance in watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 LTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -459,7 +459,7 @@\n                </size>\n               </property>\n               <property name=\"toolTip\">\n-               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</string>\n+               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Blockcash network after a connection is established, but this process has not completed yet.</string>\n               </property>\n               <property name=\"text\">\n                <string/>"
      },
      {
        "sha": "4d65631ad3e87ddd66dbe244fec8e378631740d2",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 23,
        "deletions": 5,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -28,10 +28,27 @@\n      <layout class=\"QVBoxLayout\" name=\"verticalLayout_3\">\n       <item>\n        <layout class=\"QGridLayout\" name=\"gridLayout\">\n+        <item row=\"7\" column=\"2\">\n+         <widget class=\"QCheckBox\" name=\"reuseAddress\">\n+          <property name=\"toolTip\">\n+           <string>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</string>\n+          </property>\n+          <property name=\"text\">\n+           <string>R&amp;euse an existing receiving address (not recommended)</string>\n+          </property>\n+         </widget>\n+        </item>\n+        <item row=\"7\" column=\"0\">\n+         <widget class=\"QLabel\" name=\"label_4\">\n+          <property name=\"text\">\n+           <string/>\n+          </property>\n+         </widget>\n+        </item>\n         <item row=\"6\" column=\"0\">\n          <widget class=\"QLabel\" name=\"label_3\">\n           <property name=\"toolTip\">\n-           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</string>\n+           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Blockcash network.</string>\n           </property>\n           <property name=\"text\">\n            <string>&amp;Message:</string>\n@@ -54,7 +71,7 @@\n         <item row=\"6\" column=\"2\">\n          <widget class=\"QLineEdit\" name=\"reqMessage\">\n           <property name=\"toolTip\">\n-           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</string>\n+           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Blockcash network.</string>\n           </property>\n          </widget>\n         </item>\n@@ -110,7 +127,7 @@\n           </property>\n          </widget>\n         </item>\n-        <item row=\"7\" column=\"2\">\n+        <item row=\"8\" column=\"2\">\n          <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n           <item>\n            <widget class=\"QPushButton\" name=\"receiveButton\">\n@@ -167,7 +184,7 @@\n           </item>\n          </layout>\n         </item>\n-        <item row=\"7\" column=\"0\">\n+        <item row=\"8\" column=\"0\">\n          <widget class=\"QLabel\" name=\"label_7\">\n           <property name=\"text\">\n            <string/>\n@@ -299,14 +316,15 @@\n   <customwidget>\n    <class>BitcoinAmountField</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/bitcoinamountfield.h</header>\n+   <header>bitcoinamountfield.h</header>\n    <container>1</container>\n   </customwidget>\n  </customwidgets>\n  <tabstops>\n   <tabstop>reqLabel</tabstop>\n   <tabstop>reqAmount</tabstop>\n   <tabstop>reqMessage</tabstop>\n+  <tabstop>reuseAddress</tabstop>\n   <tabstop>receiveButton</tabstop>\n   <tabstop>clearButton</tabstop>\n   <tabstop>recentRequestsView</tabstop>"
      },
      {
        "sha": "4163f4189c5e9ef87afdb894731dcf8010966a31",
        "filename": "src/qt/forms/receiverequestdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/receiverequestdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/receiverequestdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receiverequestdialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -127,7 +127,7 @@\n   <customwidget>\n    <class>QRImageWidget</class>\n    <extends>QLabel</extends>\n-   <header>qt/receiverequestdialog.h</header>\n+   <header>receiverequestdialog.h</header>\n   </customwidget>\n  </customwidgets>\n  <resources/>"
      },
      {
        "sha": "4ca15ae18bc059585a9ec6db0a4b2e4c89211a6a",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 20,
        "deletions": 13,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -324,7 +324,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 BTC</string>\n+                  <string notr=\"true\">0.00 BSC</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -404,7 +404,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 BTC</string>\n+                  <string notr=\"true\">0.00 BSC</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -455,7 +455,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 BTC</string>\n+                  <string notr=\"true\">0.00 BSC</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -484,7 +484,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 BTC</string>\n+                  <string notr=\"true\">0.00 BSC</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -504,7 +504,7 @@\n            <number>12</number>\n           </property>\n           <property name=\"sizeConstraint\">\n-           <enum>QLayout::SetDefaultConstraint</enum>\n+           <enum>QLayout::SetDefauBSConstraint</enum>\n           </property>\n           <property name=\"topMargin\">\n            <number>5</number>\n@@ -846,13 +846,19 @@\n                <item>\n                 <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee13\">\n                  <item>\n-                  <widget class=\"QLabel\" name=\"labelCustomPerKilobyte\">\n+                  <widget class=\"QRadioButton\" name=\"radioCustomPerKilobyte\">\n                    <property name=\"toolTip\">\n                     <string>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 satoshis in fee, while &quot;total at least&quot; pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</string>\n                    </property>\n                    <property name=\"text\">\n                     <string>per kilobyte</string>\n                    </property>\n+                   <property name=\"checked\">\n+                    <bool>true</bool>\n+                   </property>\n+                   <attribute name=\"buttonGroup\">\n+                    <string notr=\"true\">groupCustomFee</string>\n+                   </attribute>\n                   </widget>\n                  </item>\n                  <item>\n@@ -878,7 +884,7 @@\n                  <item>\n                   <widget class=\"QCheckBox\" name=\"checkBoxMinimumFee\">\n                    <property name=\"toolTip\">\n-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n+                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</string>\n                    </property>\n                    <property name=\"text\">\n                     <string/>\n@@ -891,7 +897,7 @@\n                     <bool>true</bool>\n                    </property>\n                    <property name=\"toolTip\">\n-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n+                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for litecoin transactions than the network can process.</string>\n                    </property>\n                    <property name=\"text\">\n                     <string>(read the tooltip)</string>\n@@ -1108,10 +1114,10 @@\n            <item>\n             <widget class=\"QCheckBox\" name=\"optInRBF\">\n              <property name=\"text\">\n-              <string>Enable Replace-By-Fee</string>\n+              <string>Request Replace-By-Fee</string>\n              </property>\n              <property name=\"toolTip\">\n-              <string>With Replace-By-Fee (BIP-125) you can increase a transaction's fee after it is sent. Without this, a higher fee may be recommended to compensate for increased transaction delay risk.</string>\n+              <string>Indicates that the sender may wish to replace this transaction with a new one paying higher fees (prior to being confirmed).</string>\n              </property>\n             </widget>\n            </item>\n@@ -1247,7 +1253,7 @@\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">123.456 BTC</string>\n+          <string notr=\"true\">123.456 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -1264,12 +1270,12 @@\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/qvalidatedlineedit.h</header>\n+   <header>qvalidatedlineedit.h</header>\n   </customwidget>\n   <customwidget>\n    <class>BitcoinAmountField</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/bitcoinamountfield.h</header>\n+   <header>bitcoinamountfield.h</header>\n    <container>1</container>\n   </customwidget>\n  </customwidgets>\n@@ -1279,5 +1285,6 @@\n  <connections/>\n  <buttongroups>\n   <buttongroup name=\"groupFee\"/>\n+  <buttongroup name=\"groupCustomFee\"/>\n  </buttongroups>\n </ui>"
      },
      {
        "sha": "0abcf005fa3619b861a5a738b3b41b4ddbb50f24",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 6,
        "deletions": 13,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -57,7 +57,7 @@\n       <item>\n        <widget class=\"QValidatedLineEdit\" name=\"payTo\">\n         <property name=\"toolTip\">\n-         <string>The Bitcoin address to send the payment to</string>\n+         <string>The Blockcash address to send the payment to</string>\n         </property>\n        </widget>\n       </item>\n@@ -163,27 +163,20 @@\n      </widget>\n     </item>\n     <item row=\"2\" column=\"1\">\n-     <layout class=\"QHBoxLayout\" name=\"horizontalLayoutAmount\" stretch=\"0,1,0\">\n+     <layout class=\"QHBoxLayout\" name=\"horizontalLayoutAmount\" stretch=\"0,1\">\n       <item>\n        <widget class=\"BitcoinAmountField\" name=\"payAmount\"/>\n       </item>\n       <item>\n        <widget class=\"QCheckBox\" name=\"checkboxSubtractFeeFromAmount\">\n         <property name=\"toolTip\">\n-         <string>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>\n+         <string>The fee will be deducted from the amount being sent. The recipient will receive less blockcashs than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>\n         </property>\n         <property name=\"text\">\n          <string>S&amp;ubtract fee from amount</string>\n         </property>\n        </widget>\n       </item>\n-      <item>\n-       <widget class=\"QPushButton\" name=\"useAvailableBalanceButton\">\n-        <property name=\"text\">\n-         <string>Use available balance</string>\n-        </property>\n-       </widget>\n-      </item>\n      </layout>\n     </item>\n     <item row=\"3\" column=\"0\">\n@@ -199,7 +192,7 @@\n     <item row=\"3\" column=\"1\">\n      <widget class=\"QLabel\" name=\"messageTextLabel\">\n       <property name=\"toolTip\">\n-       <string>A message that was attached to the bitcoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Bitcoin network.</string>\n+       <string>A message that was attached to the blockcash: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the blockcash network.</string>\n       </property>\n       <property name=\"textFormat\">\n        <enum>Qt::PlainText</enum>\n@@ -1255,12 +1248,12 @@\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/qvalidatedlineedit.h</header>\n+   <header>qvalidatedlineedit.h</header>\n   </customwidget>\n   <customwidget>\n    <class>BitcoinAmountField</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/bitcoinamountfield.h</header>\n+   <header>bitcoinamountfield.h</header>\n   </customwidget>\n  </customwidgets>\n  <tabstops>"
      },
      {
        "sha": "883bd6424f98b6037231fdae1685a214fc4b694a",
        "filename": "src/qt/forms/signverifymessagedialog.ui",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/signverifymessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/forms/signverifymessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/signverifymessagedialog.ui?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -30,7 +30,7 @@\n        <item>\n         <widget class=\"QLabel\" name=\"infoLabel_SM\">\n          <property name=\"text\">\n-          <string>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</string>\n+          <string>You can sign messages/agreements with your addresses to prove you can receive blockcashs sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</string>\n          </property>\n          <property name=\"textFormat\">\n           <enum>Qt::PlainText</enum>\n@@ -48,7 +48,7 @@\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"addressIn_SM\">\n            <property name=\"toolTip\">\n-            <string>The Bitcoin address to sign the message with</string>\n+            <string>The Blockcash address to sign the message with</string>\n            </property>\n           </widget>\n          </item>\n@@ -152,7 +152,7 @@\n          <item>\n           <widget class=\"QPushButton\" name=\"signMessageButton_SM\">\n            <property name=\"toolTip\">\n-            <string>Sign the message to prove you own this Bitcoin address</string>\n+            <string>Sign the message to prove you own this Blockcash address</string>\n            </property>\n            <property name=\"text\">\n             <string>Sign &amp;Message</string>\n@@ -258,7 +258,7 @@\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"addressIn_VM\">\n            <property name=\"toolTip\">\n-            <string>The Bitcoin address the message was signed with</string>\n+            <string>The Blockcash address the message was signed with</string>\n            </property>\n           </widget>\n          </item>\n@@ -295,7 +295,7 @@\n          <item>\n           <widget class=\"QPushButton\" name=\"verifyMessageButton_VM\">\n            <property name=\"toolTip\">\n-            <string>Verify the message to ensure it was signed with the specified Bitcoin address</string>\n+            <string>Verify the message to ensure it was signed with the specified Blockcash address</string>\n            </property>\n            <property name=\"text\">\n             <string>Verify &amp;Message</string>\n@@ -380,7 +380,7 @@\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>\n-   <header>qt/qvalidatedlineedit.h</header>\n+   <header>qvalidatedlineedit.h</header>\n   </customwidget>\n  </customwidgets>\n  <resources>"
      },
      {
        "sha": "9e3f25cb8cbc2651a84ace2855e106ae6153a423",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -48,9 +48,9 @@ static const int MAX_URI_LENGTH = 255;\n /* Number of frames in spinner animation */\n #define SPINNER_FRAMES 36\n \n-#define QAPP_ORG_NAME \"Bitcoin\"\n-#define QAPP_ORG_DOMAIN \"bitcoin.org\"\n-#define QAPP_APP_NAME_DEFAULT \"Bitcoin-Qt\"\n-#define QAPP_APP_NAME_TESTNET \"Bitcoin-Qt-testnet\"\n+#define QAPP_ORG_NAME \"Blockcash\"\n+#define QAPP_ORG_DOMAIN \"Blockcash.org\"\n+#define QAPP_APP_NAME_DEFAULT \"Blockcash-Qt\"\n+#define QAPP_APP_NAME_TESTNET \"Blockcash-Qt-testnet\"\n \n #endif // BITCOIN_QT_GUICONSTANTS_H"
      },
      {
        "sha": "2f29c30f7fde033fd8dc4d81d64aa59cbe4247ae",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 71,
        "deletions": 77,
        "changes": 148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -2,20 +2,21 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <qt/guiutil.h>\n-\n-#include <qt/bitcoinaddressvalidator.h>\n-#include <qt/bitcoinunits.h>\n-#include <qt/qvalidatedlineedit.h>\n-#include <qt/walletmodel.h>\n-\n-#include <primitives/transaction.h>\n-#include <init.h>\n-#include <policy/policy.h>\n-#include <protocol.h>\n-#include <script/script.h>\n-#include <script/standard.h>\n-#include <util.h>\n+#include \"guiutil.h\"\n+\n+#include \"bitcoinaddressvalidator.h\"\n+#include \"bitcoinunits.h\"\n+#include \"qvalidatedlineedit.h\"\n+#include \"walletmodel.h\"\n+\n+#include \"fs.h\"\n+#include \"primitives/transaction.h\"\n+#include \"init.h\"\n+#include \"policy/policy.h\"\n+#include \"protocol.h\"\n+#include \"script/script.h\"\n+#include \"script/standard.h\"\n+#include \"util.h\"\n \n #ifdef WIN32\n #ifdef _WIN32_WINNT\n@@ -30,9 +31,9 @@\n #ifndef NOMINMAX\n #define NOMINMAX\n #endif\n-#include <shellapi.h>\n-#include <shlobj.h>\n-#include <shlwapi.h>\n+#include \"shellapi.h\"\n+#include \"shlobj.h\"\n+#include \"shlwapi.h\"\n #endif\n \n #include <boost/scoped_array.hpp>\n@@ -111,9 +112,8 @@ static std::string DummyAddress(const CChainParams &params)\n     sourcedata.insert(sourcedata.end(), dummydata, dummydata + sizeof(dummydata));\n     for(int i=0; i<256; ++i) { // Try every trailing byte\n         std::string s = EncodeBase58(sourcedata.data(), sourcedata.data() + sourcedata.size());\n-        if (!IsValidDestinationString(s)) {\n+        if (!CBitcoinAddress(s).IsValid())\n             return s;\n-        }\n         sourcedata[sourcedata.size()-1] += 1;\n     }\n     return \"\";\n@@ -127,7 +127,7 @@ void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n #if QT_VERSION >= 0x040700\n     // We don't want translators to use own addresses in translations\n     // and this is the only place, where this address is supplied.\n-    widget->setPlaceholderText(QObject::tr(\"Enter a Bitcoin address (e.g. %1)\").arg(\n+    widget->setPlaceholderText(QObject::tr(\"Enter a Blockcash address (e.g. %1)\").arg(\n         QString::fromStdString(DummyAddress(Params()))));\n #endif\n     widget->setValidator(new BitcoinAddressEntryValidator(parent));\n@@ -146,7 +146,7 @@ void setupAmountWidget(QLineEdit *widget, QWidget *parent)\n bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n {\n     // return if URI is not valid or is no bitcoin: URI\n-    if(!uri.isValid() || uri.scheme() != QString(\"bitcoin\"))\n+    if(!uri.isValid() || uri.scheme() != QString(\"blockcash\"))\n         return false;\n \n     SendCoinsRecipient rv;\n@@ -210,17 +210,17 @@ bool parseBitcoinURI(QString uri, SendCoinsRecipient *out)\n     //\n     //    Cannot handle this later, because bitcoin:// will cause Qt to see the part after // as host,\n     //    which will lower-case it (and thus invalidate the address).\n-    if(uri.startsWith(\"bitcoin://\", Qt::CaseInsensitive))\n+    if(uri.startsWith(\"blockcash://\", Qt::CaseInsensitive))\n     {\n-        uri.replace(0, 10, \"bitcoin:\");\n+        uri.replace(0, 11, \"blockcash:\");\n     }\n     QUrl uriInstance(uri);\n     return parseBitcoinURI(uriInstance, out);\n }\n \n QString formatBitcoinURI(const SendCoinsRecipient &info)\n {\n-    QString ret = QString(\"bitcoin:%1\").arg(info.address);\n+    QString ret = QString(\"blockcash:%1\").arg(info.address);\n     int paramCount = 0;\n \n     if (info.amount)\n@@ -248,7 +248,7 @@ QString formatBitcoinURI(const SendCoinsRecipient &info)\n \n bool isDust(const QString& address, const CAmount& amount)\n {\n-    CTxDestination dest = DecodeDestination(address.toStdString());\n+    CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n     CScript script = GetScriptForDestination(dest);\n     CTxOut txOut(amount, script);\n     return IsDust(txOut, ::dustRelayFee);\n@@ -615,10 +615,10 @@ fs::path static StartupShortcutPath()\n {\n     std::string chain = ChainNameFromCommandLine();\n     if (chain == CBaseChainParams::MAIN)\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Blockcash.lnk\";\n     if (chain == CBaseChainParams::TESTNET) // Remove this special case when CBaseChainParams::TESTNET = \"testnet4\"\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (testnet).lnk\";\n-    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf(\"Bitcoin (%s).lnk\", chain);\n+        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Blockcash (testnet).lnk\";\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf(\"Blockcash (%s).lnk\", chain);\n }\n \n bool GetStartOnSystemStartup()\n@@ -713,8 +713,8 @@ fs::path static GetAutostartFilePath()\n {\n     std::string chain = ChainNameFromCommandLine();\n     if (chain == CBaseChainParams::MAIN)\n-        return GetAutostartDir() / \"bitcoin.desktop\";\n-    return GetAutostartDir() / strprintf(\"bitcoin-%s.lnk\", chain);\n+        return GetAutostartDir() / \"blockcash.desktop\";\n+    return GetAutostartDir() / strprintf(\"blockcash-%s.lnk\", chain);\n }\n \n bool GetStartOnSystemStartup()\n@@ -743,10 +743,9 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n     else\n     {\n         char pszExePath[MAX_PATH+1];\n-        ssize_t r = readlink(\"/proc/self/exe\", pszExePath, sizeof(pszExePath) - 1);\n-        if (r == -1)\n+        memset(pszExePath, 0, sizeof(pszExePath));\n+        if (readlink(\"/proc/self/exe\", pszExePath, sizeof(pszExePath)-1) == -1)\n             return false;\n-        pszExePath[r] = '\\0';\n \n         fs::create_directories(GetAutostartDir());\n \n@@ -758,9 +757,9 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         optionFile << \"[Desktop Entry]\\n\";\n         optionFile << \"Type=Application\\n\";\n         if (chain == CBaseChainParams::MAIN)\n-            optionFile << \"Name=Bitcoin\\n\";\n+            optionFile << \"Name=Blockcash\\n\";\n         else\n-            optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n+            optionFile << strprintf(\"Name=Blockcash (%s)\\n\", chain);\n         optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", gArgs.GetBoolArg(\"-testnet\", false), gArgs.GetBoolArg(\"-regtest\", false));\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";\n@@ -781,64 +780,47 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n LSSharedFileListItemRef findStartupItemInList(LSSharedFileListRef list, CFURLRef findUrl);\n LSSharedFileListItemRef findStartupItemInList(LSSharedFileListRef list, CFURLRef findUrl)\n {\n-    CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(list, nullptr);\n-    if (listSnapshot == nullptr) {\n-        return nullptr;\n-    }\n-    \n     // loop through the list of startup items and try to find the bitcoin app\n+    CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(list, nullptr);\n     for(int i = 0; i < CFArrayGetCount(listSnapshot); i++) {\n         LSSharedFileListItemRef item = (LSSharedFileListItemRef)CFArrayGetValueAtIndex(listSnapshot, i);\n         UInt32 resolutionFlags = kLSSharedFileListNoUserInteraction | kLSSharedFileListDoNotMountVolumes;\n         CFURLRef currentItemURL = nullptr;\n \n #if defined(MAC_OS_X_VERSION_MAX_ALLOWED) && MAC_OS_X_VERSION_MAX_ALLOWED >= 10100\n-        if(&LSSharedFileListItemCopyResolvedURL)\n-            currentItemURL = LSSharedFileListItemCopyResolvedURL(item, resolutionFlags, nullptr);\n+    if(&LSSharedFileListItemCopyResolvedURL)\n+        currentItemURL = LSSharedFileListItemCopyResolvedURL(item, resolutionFlags, nullptr);\n #if defined(MAC_OS_X_VERSION_MIN_REQUIRED) && MAC_OS_X_VERSION_MIN_REQUIRED < 10100\n-        else\n-            LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n+    else\n+        LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n #endif\n #else\n-        LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n+    LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n #endif\n \n+        if(currentItemURL && CFEqual(currentItemURL, findUrl)) {\n+            // found\n+            CFRelease(currentItemURL);\n+            return item;\n+        }\n         if(currentItemURL) {\n-            if (CFEqual(currentItemURL, findUrl)) {\n-                // found\n-                CFRelease(listSnapshot);\n-                CFRelease(currentItemURL);\n-                return item;\n-            }\n             CFRelease(currentItemURL);\n         }\n     }\n-    \n-    CFRelease(listSnapshot);\n     return nullptr;\n }\n \n bool GetStartOnSystemStartup()\n {\n     CFURLRef bitcoinAppUrl = CFBundleCopyBundleURL(CFBundleGetMainBundle());\n-    if (bitcoinAppUrl == nullptr) {\n-        return false;\n-    }\n-    \n     LSSharedFileListRef loginItems = LSSharedFileListCreate(nullptr, kLSSharedFileListSessionLoginItems, nullptr);\n     LSSharedFileListItemRef foundItem = findStartupItemInList(loginItems, bitcoinAppUrl);\n-\n-    CFRelease(bitcoinAppUrl);\n     return !!foundItem; // return boolified object\n }\n \n bool SetStartOnSystemStartup(bool fAutoStart)\n {\n     CFURLRef bitcoinAppUrl = CFBundleCopyBundleURL(CFBundleGetMainBundle());\n-    if (bitcoinAppUrl == nullptr) {\n-        return false;\n-    }\n-    \n     LSSharedFileListRef loginItems = LSSharedFileListCreate(nullptr, kLSSharedFileListSessionLoginItems, nullptr);\n     LSSharedFileListItemRef foundItem = findStartupItemInList(loginItems, bitcoinAppUrl);\n \n@@ -850,8 +832,6 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         // remove item\n         LSSharedFileListItemRemove(loginItems, foundItem);\n     }\n-    \n-    CFRelease(bitcoinAppUrl);\n     return true;\n }\n #pragma GCC diagnostic pop\n@@ -862,6 +842,32 @@ bool SetStartOnSystemStartup(bool fAutoStart) { return false; }\n \n #endif\n \n+void saveWindowGeometry(const QString& strSetting, QWidget *parent)\n+{\n+    QSettings settings;\n+    settings.setValue(strSetting + \"Pos\", parent->pos());\n+    settings.setValue(strSetting + \"Size\", parent->size());\n+}\n+\n+void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize, QWidget *parent)\n+{\n+    QSettings settings;\n+    QPoint pos = settings.value(strSetting + \"Pos\").toPoint();\n+    QSize size = settings.value(strSetting + \"Size\", defaultSize).toSize();\n+\n+    parent->resize(size);\n+    parent->move(pos);\n+\n+    if ((!pos.x() && !pos.y()) || (QApplication::desktop()->screenNumber(parent) == -1))\n+    {\n+        QRect screen = QApplication::desktop()->screenGeometry();\n+        QPoint defaultPos((screen.width() - defaultSize.width()) / 2,\n+                          (screen.height() - defaultSize.height()) / 2);\n+        parent->resize(defaultSize);\n+        parent->move(defaultPos);\n+    }\n+}\n+\n void setClipboard(const QString& str)\n {\n     QApplication::clipboard()->setText(str, QClipboard::Clipboard);\n@@ -983,18 +989,6 @@ QString formatNiceTimeOffset(qint64 secs)\n     return timeBehindText;\n }\n \n-QString formatBytes(uint64_t bytes)\n-{\n-    if(bytes < 1024)\n-        return QString(QObject::tr(\"%1 B\")).arg(bytes);\n-    if(bytes < 1024 * 1024)\n-        return QString(QObject::tr(\"%1 KB\")).arg(bytes / 1024);\n-    if(bytes < 1024 * 1024 * 1024)\n-        return QString(QObject::tr(\"%1 MB\")).arg(bytes / 1024 / 1024);\n-\n-    return QString(QObject::tr(\"%1 GB\")).arg(bytes / 1024 / 1024 / 1024);\n-}\n-\n void ClickableLabel::mouseReleaseEvent(QMouseEvent *event)\n {\n     Q_EMIT clicked(event->pos());"
      },
      {
        "sha": "d6aa8c4ea656c49b0810288035d762b12b432530",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -5,8 +5,8 @@\n #ifndef BITCOIN_QT_GUIUTIL_H\n #define BITCOIN_QT_GUIUTIL_H\n \n-#include <amount.h>\n-#include <fs.h>\n+#include \"amount.h\"\n+#include \"fs.h\"\n \n #include <QEvent>\n #include <QHeaderView>\n@@ -179,6 +179,11 @@ namespace GUIUtil\n     bool GetStartOnSystemStartup();\n     bool SetStartOnSystemStartup(bool fAutoStart);\n \n+    /** Save window size and position */\n+    void saveWindowGeometry(const QString& strSetting, QWidget *parent);\n+    /** Restore window size and position */\n+    void restoreWindowGeometry(const QString& strSetting, const QSize &defaultSizeIn, QWidget *parent);\n+\n     /* Convert QString to OS specific boost path through UTF-8 */\n     fs::path qstringToBoostPath(const QString &path);\n \n@@ -199,8 +204,6 @@ namespace GUIUtil\n \n     QString formatNiceTimeOffset(qint64 secs);\n \n-    QString formatBytes(uint64_t bytes);\n-\n     class ClickableLabel : public QLabel\n     {\n         Q_OBJECT"
      },
      {
        "sha": "edf9a1a1c92e9179d3df37c98d776a853c8c04e1",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -3,16 +3,16 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include <config/bitcoin-config.h>\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include <fs.h>\n-#include <qt/intro.h>\n-#include <qt/forms/ui_intro.h>\n+#include \"fs.h\"\n+#include \"intro.h\"\n+#include \"ui_intro.h\"\n \n-#include <qt/guiutil.h>\n+#include \"guiutil.h\"\n \n-#include <util.h>\n+#include \"util.h\"\n \n #include <QFileDialog>\n #include <QSettings>\n@@ -22,7 +22,7 @@\n \n static const uint64_t GB_BYTES = 1000000000LL;\n /* Minimum free space (in GB) needed for data directory */\n-static const uint64_t BLOCK_CHAIN_SIZE = 150;\n+static const uint64_t BLOCK_CHAIN_SIZE = 9;\n /* Minimum free space (in GB) needed for data directory when pruned; Does not include prune target */\n static const uint64_t CHAIN_STATE_SIZE = 3;\n /* Total required space (in GB) depending on user choice (prune, not prune) */\n@@ -43,7 +43,7 @@ class FreespaceChecker : public QObject\n     Q_OBJECT\n \n public:\n-    explicit FreespaceChecker(Intro *intro);\n+    FreespaceChecker(Intro *intro);\n \n     enum Status {\n         ST_OK,\n@@ -60,7 +60,7 @@ public Q_SLOTS:\n     Intro *intro;\n };\n \n-#include <qt/intro.moc>\n+#include \"intro.moc\"\n \n FreespaceChecker::FreespaceChecker(Intro *_intro)\n {\n@@ -214,10 +214,7 @@ bool Intro::pickDataDirectory()\n             }\n             dataDir = intro.getDataDirectory();\n             try {\n-                if (TryCreateDirectories(GUIUtil::qstringToBoostPath(dataDir))) {\n-                    // If a new data directory has been created, make wallets subdirectory too\n-                    TryCreateDirectories(GUIUtil::qstringToBoostPath(dataDir) / \"wallets\");\n-                }\n+                TryCreateDirectories(GUIUtil::qstringToBoostPath(dataDir));\n                 break;\n             } catch (const fs::filesystem_error&) {\n                 QMessageBox::critical(0, tr(PACKAGE_NAME),"
      },
      {
        "sha": "07eef47cc368d151821c0da13bebf6d843994f87",
        "filename": "src/qt/locale/bitcoin_af.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_af.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_af.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -62,12 +62,12 @@\n         <translation>Ontvanger adresse</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>Hierdie is die adresse vanwaar u Bitcoin betalings stuur. U moet altyd die bedrag en die adres van die ontvanger nagaan voordat u enige munte stuur.</translation>\n+        <source>These are your Blockcash addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Hierdie is die adresse vanwaar u Blockcash betalings stuur. U moet altyd die bedrag en die adres van die ontvanger nagaan voordat u enige munte stuur.</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>Hierdie is die adresse waar u Bitcoins sal ontvang. Ons beveel aan dat u 'n nuwe adres kies vir elke transaksie</translation>\n+        <source>These are your Blockcash addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Hierdie is die adresse waar u Litecoins sal ontvang. Ons beveel aan dat u 'n nuwe adres kies vir elke transaksie</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n@@ -168,8 +168,8 @@\n         <translation>Bevestig dat die beursie gekodifiseer is</translation>\n     </message>\n     <message>\n-        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n-        <translation>Waarskuwing: Indien u die beursie kodifiseer en u vergeet u wagwoord &lt;b&gt;VERLOOR U AL U BITCOINS&lt;/b&gt;!</translation>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BLOCKCASHS&lt;/b&gt;!</source>\n+        <translation>Waarskuwing: Indien u die beursie kodifiseer en u vergeet u wagwoord &lt;b&gt;VERLOOR U AL U BLOCKCASHS&lt;/b&gt;!</translation>\n     </message>\n     <message>\n         <source>Are you sure you wish to encrypt your wallet?</source>\n@@ -330,8 +330,8 @@\n         <translation>Besig met herindeksering van blokke op hardeskyf...</translation>\n     </message>\n     <message>\n-        <source>Send coins to a Bitcoin address</source>\n-        <translation>Stuur munte na 'n Bitcoin adres</translation>\n+        <source>Send coins to a Blockcash address</source>\n+        <translation>Stuur munte na 'n Blockcash adres</translation>\n     </message>\n     <message>\n         <source>Backup wallet to another location</source>\n@@ -350,8 +350,8 @@\n         <translation>Maak ontfouting en diagnostiese konsole oop</translation>\n     </message>\n     <message>\n-        <source>Bitcoin</source>\n-        <translation>Bitcoin</translation>\n+        <source>Blockcash</source>\n+        <translation>Blockcash</translation>\n     </message>\n     <message>\n         <source>Wallet</source>\n@@ -378,12 +378,12 @@\n         <translation>Kodifiseer die private sleutes wat aan jou beursie gekoppel is.</translation>\n     </message>\n     <message>\n-        <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n-        <translation>Onderteken boodskappe met u Bitcoin adresse om u eienaarskap te bewys</translation>\n+        <source>Sign messages with your Blockcash addresses to prove you own them</source>\n+        <translation>Onderteken boodskappe met u Blockcash adresse om u eienaarskap te bewys</translation>\n     </message>\n     <message>\n-        <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n-        <translation>Verifie\u00ebr boodskappe om seker te maak dat dit met die gespesifiseerde Bitcoin adresse</translation>\n+        <source>Verify messages to ensure they were signed with specified Blockcash addresses</source>\n+        <translation>Verifie\u00ebr boodskappe om seker te maak dat dit met die gespesifiseerde Blockcash adresse</translation>\n     </message>\n     <message>\n         <source>&amp;File</source>\n@@ -398,8 +398,8 @@\n         <translation>Orebalk</translation>\n     </message>\n     <message>\n-        <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n-        <translation>Versoek betalings (genereer QR-kodes en bitcoin: URI's)</translation>\n+        <source>Request payments (generates QR codes and litecoin: URIs)</source>\n+        <translation>Versoek betalings (genereer QR-kodes en litecoin: URI's)</translation>\n     </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n@@ -410,8 +410,8 @@\n         <translation>Vertoon die lys van gebruikte ontvangers-adresse en etikette</translation>\n     </message>\n     <message>\n-        <source>Open a bitcoin: URI or payment request</source>\n-        <translation>Skep 'n bitcoin: URI of betalingsversoek</translation>\n+        <source>Open a litecoin: URI or payment request</source>\n+        <translation>Skep 'n litecoin: URI of betalingsversoek</translation>\n     </message>\n     <message>\n         <source>Indexing blocks on disk...</source>\n@@ -1012,8 +1012,8 @@\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <source>Bitcoin Core</source>\n-        <translation>Bitcoin Kern</translation>\n+        <source>Blockcash Core</source>\n+        <translation>Blockcash Kern</translation>\n     </message>\n     <message>\n         <source>Information</source>"
      },
      {
        "sha": "2128f97be37ce981893683e99a266a6166c2f556",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -214,8 +214,8 @@\n         <translation>&amp;Opsies</translation>\n     </message>\n     <message>\n-        <source>Bitcoin</source>\n-        <translation>Bitcoin</translation>\n+        <source>Blockcash</source>\n+        <translation>Blockcash</translation>\n     </message>\n     <message>\n         <source>Wallet</source>"
      },
      {
        "sha": "5f651671eb665ec60f19fb5b1b612468e4a39d8f",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -62,12 +62,12 @@\n         <translation>\u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>\u0647\u0630\u0647 \u0647\u064a \u0639\u0646\u0627\u0648\u064a\u0646 Bitcion \u0627\u0644\u062a\u0627\u0628\u0639\u0629 \u0644\u0643 \u0645\u0646 \u0623\u062c\u0644 \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u062f\u0641\u0639\u0627\u062a. \u062a\u062d\u0642\u0642 \u062f\u0627\u0626\u0645\u0627 \u0645\u0646 \u0627\u0644\u0645\u0628\u0644\u063a \u0648 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u0631\u0633\u0644 \u0627\u0644\u0645\u0633\u062a\u0642\u0628\u0644 \u0642\u0628\u0644 \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u0639\u0645\u0644\u0627\u062a</translation>\n+        <source>These are your Blockcash addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0647\u0630\u0647 \u0647\u064a \u0639\u0646\u0627\u0648\u064a\u0646 Litecion \u0627\u0644\u062a\u0627\u0628\u0639\u0629 \u0644\u0643 \u0645\u0646 \u0623\u062c\u0644 \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u062f\u0641\u0639\u0627\u062a. \u062a\u062d\u0642\u0642 \u062f\u0627\u0626\u0645\u0627 \u0645\u0646 \u0627\u0644\u0645\u0628\u0644\u063a \u0648 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u0631\u0633\u0644 \u0627\u0644\u0645\u0633\u062a\u0642\u0628\u0644 \u0642\u0628\u0644 \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u0639\u0645\u0644\u0627\u062a</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>\u0647\u0630\u0647 \u0647\u064a \u0639\u0646\u0627\u0648\u064a\u0646 Bitcion \u0627\u0644\u062a\u0627\u0628\u0639\u0629 \u0644\u0643 \u0645\u0646 \u0623\u062c\u0644 \u0625\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u062f\u0641\u0639\u0627\u062a. \u064a\u0646\u0635\u062d \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0646\u0648\u0627\u0646 \u062c\u062f\u064a\u062f \u0645\u0646 \u0623\u062c\u0644 \u0643\u0644 \u0635\u0641\u0642\u0629</translation>\n+        <source>These are your Blockcash addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>\u0647\u0630\u0647 \u0647\u064a \u0639\u0646\u0627\u0648\u064a\u0646 Litecion \u0627\u0644\u062a\u0627\u0628\u0639\u0629 \u0644\u0643 \u0645\u0646 \u0623\u062c\u0644 \u0625\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u062f\u0641\u0639\u0627\u062a. \u064a\u0646\u0635\u062d \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0646\u0648\u0627\u0646 \u062c\u062f\u064a\u062f \u0645\u0646 \u0623\u062c\u0644 \u0643\u0644 \u0635\u0641\u0642\u0629</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n@@ -168,8 +168,8 @@\n         <translation>\u062a\u0623\u0643\u064a\u062f \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n-        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n-        <translation>\u062a\u062d\u0630\u064a\u0631: \u0625\u0630\u0627 \u0642\u0645\u062a \u0628\u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u0641\u0638\u062a\u0643 \u0648\u0641\u0642\u062f\u062a \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062e\u0627\u0635 \u0628\u0643, \u0633\u062a\u0641\u0642\u062f \u0643\u0644 \u0639\u0645\u0644\u0627\u062a BITCOINS \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.</translation>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BLOCKCASHS&lt;/b&gt;!</source>\n+        <translation>\u062a\u062d\u0630\u064a\u0631: \u0625\u0630\u0627 \u0642\u0645\u062a \u0628\u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u0641\u0638\u062a\u0643 \u0648\u0641\u0642\u062f\u062a \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062e\u0627\u0635 \u0628\u0643, \u0633\u062a\u0641\u0642\u062f \u0643\u0644 \u0639\u0645\u0644\u0627\u062a BLOCKCASHS \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.</translation>\n     </message>\n     <message>\n         <source>Are you sure you wish to encrypt your wallet?</source>\n@@ -330,8 +330,8 @@\n         <translation>\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0641\u0647\u0631\u0633\u0629 \u0627\u0644\u0643\u062a\u0644 \u0639\u0644\u0649 \u0627\u0644\u0642\u0631\u0635 ...</translation>\n     </message>\n     <message>\n-        <source>Send coins to a Bitcoin address</source>\n-        <translation>\u0627\u0631\u0633\u0644 \u0639\u0645\u0644\u0627\u062a \u0627\u0644\u0649 \u0639\u0646\u0648\u0627\u0646 \u0628\u064a\u062a\u0643\u0648\u064a\u0646</translation>\n+        <source>Send coins to a Blockcash address</source>\n+        <translation>\u0627\u0631\u0633\u0644 \u0639\u0645\u0644\u0627\u062a \u0627\u0644\u0649 \u0639\u0646\u0648\u0627\u0646 Blockcash</translation>\n     </message>\n     <message>\n         <source>Backup wallet to another location</source>\n@@ -354,7 +354,7 @@\n         <translation>&amp;\u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0631\u0633\u0627\u0644\u0629...</translation>\n     </message>\n     <message>\n-        <source>Bitcoin</source>\n+        <source>Blockcash</source>\n         <translation>\u0628\u062a \u0643\u0648\u064a\u0646</translation>\n     </message>\n     <message>\n@@ -382,12 +382,12 @@\n         <translation>\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635 \u0628\u0645\u062d\u0641\u0638\u062a\u0643</translation>\n     </message>\n     <message>\n-        <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n-        <translation>\u0648\u0642\u064e\u0639 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0628\u0648\u0627\u0633\u0637\u0629 \u0627\u0644: Bitcoin \u0627\u0644\u062e\u0627\u0635 \u0628\u0643 \u0644\u0625\u062b\u0628\u0627\u062a \u0627\u0645\u062a\u0644\u0627\u0643\u0643 \u0644\u0647\u0645</translation>\n+        <source>Sign messages with your Blockcash addresses to prove you own them</source>\n+        <translation>\u0648\u0642\u064e\u0639 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0628\u0648\u0627\u0633\u0637\u0629 \u0627\u0644: Blockcash \u0627\u0644\u062e\u0627\u0635 \u0628\u0643 \u0644\u0625\u062b\u0628\u0627\u062a \u0627\u0645\u062a\u0644\u0627\u0643\u0643 \u0644\u0647\u0645</translation>\n     </message>\n     <message>\n-        <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n-        <translation>\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0644\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646\u064e\u0647\u0627 \u0648\u064f\u0642\u0639\u062a \u0628\u0631\u0633\u0627\u0626\u0644 Bitcoin \u0645\u062d\u062f\u064e\u062f\u0629</translation>\n+        <source>Verify messages to ensure they were signed with specified Blockcash addresses</source>\n+        <translation>\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u0644\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0623\u0646\u064e\u0647\u0627 \u0648\u064f\u0642\u0639\u062a \u0628\u0631\u0633\u0627\u0626\u0644 Blockcash \u0645\u062d\u062f\u064e\u062f\u0629</translation>\n     </message>\n     <message>\n         <source>&amp;File</source>\n@@ -406,7 +406,7 @@\n         <translation>\u0634\u0631\u064a\u0637 \u0623\u062f\u0648\u0627\u062a \u0639\u0644\u0627\u0645\u0627\u062a \u0627\u0644\u062a\u0628\u0648\u064a\u0628</translation>\n     </message>\n     <message>\n-        <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n+        <source>Request payments (generates QR codes and litecoin: URIs)</source>\n         <translation>\u0623\u0637\u0644\u0628 \u062f\u0641\u0639\u0627\u062a (\u064a\u0648\u0644\u062f \u0643\u0648\u062f\u0627\u062a \u0627\u0644\u0631\u0645\u0632 \u0627\u0644\u0645\u0631\u0628\u0639 \u0648\u0628\u064a\u062a \u0643\u0648\u064a\u0646: \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0645\u0639\u0637\u0627\u0629)</translation>\n     </message>\n     <message>\n@@ -418,8 +418,8 @@\n         <translation>\u0639\u0631\u0636 \u0642\u0627\u0626\u0645\u0629 \u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0625\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0648\u0627\u0644\u0645\u0644\u0635\u0642\u0627\u062a</translation>\n     </message>\n     <message>\n-        <source>Open a bitcoin: URI or payment request</source>\n-        <translation>\u0641\u062a\u062d URI : Bitcoin \u0623\u0648 \u0637\u0644\u0628 \u062f\u0641\u0639</translation>\n+        <source>Open a litecoin: URI or payment request</source>\n+        <translation>\u0641\u062a\u062d URI : Blockcash \u0623\u0648 \u0637\u0644\u0628 \u062f\u0641\u0639</translation>\n     </message>\n     <message>\n         <source>&amp;Command-line options</source>\n@@ -462,7 +462,7 @@\n         <translation>\u0645\u062d\u062f\u062b</translation>\n     </message>\n     <message>\n-        <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n+        <source>Show the %1 help message to get a list with possible Blockcash command-line options</source>\n         <translation>\u0628\u064a\u0646 \u0627\u0634\u0627\u0631\u0629 \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629 %1 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0642\u0627\u0626\u0645\u0629 \u0645\u0646 \u062e\u064a\u0627\u0631\u0627\u062a \u0627\u0648\u0627\u0645\u0631 \u0627\u0644\u0628\u062a \u0643\u0648\u064a\u0646 \u0627\u0644\u0645\u062d\u062a\u0645\u0644\u0629 </translation>\n     </message>\n     <message>\n@@ -522,8 +522,8 @@\n         <translation>\u0627\u0644\u0645\u062d\u0641\u0638\u0629 &lt;b&gt;\u0645\u0634\u0641\u0631\u0629&lt;/b&gt; \u0648 &lt;b&gt;\u0645\u0642\u0641\u0644\u0629&lt;/b&gt; \u062d\u0627\u0644\u064a\u0627</translation>\n     </message>\n     <message>\n-        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n-        <translation>\u062e\u0637\u0623 \u0641\u0627\u062f\u062d \u062d\u062f\u062b . \u0644\u0627 \u064a\u0645\u0643\u0646 \u0627\u062a\u0645\u0627\u0645 \u0628\u064a\u062a\u0643\u0648\u064a\u0646 \u0628\u0627\u0645\u0627\u0646 \u0633\u064a\u062a\u0645 \u0627\u0644\u062e\u0631\u0648\u062c</translation>\n+        <source>A fatal error occurred. Blockcash can no longer continue safely and will quit.</source>\n+        <translation>\u062e\u0637\u0623 \u0641\u0627\u062f\u062d \u062d\u062f\u062b . \u0644\u0627 \u064a\u0645\u0643\u0646 \u0627\u062a\u0645\u0627\u0645 Blockcash \u0628\u0627\u0645\u0627\u0646 \u0633\u064a\u062a\u0645 \u0627\u0644\u062e\u0631\u0648\u062c</translation>\n     </message>\n </context>\n <context>\n@@ -688,7 +688,7 @@\n         <translation>\u062a\u0639\u062f\u064a\u0644 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0627\u0631\u0633\u0627\u0644</translation>\n     </message>\n     <message>\n-        <source>The entered address \"%1\" is not a valid Bitcoin address.</source>\n+        <source>The entered address \"%1\" is not a valid Blockcash address.</source>\n         <translation>\u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u062f\u062e\u0644 \"%1\" \u0644\u064a\u0633 \u0639\u0646\u0648\u0627\u0646 \u0628\u064a\u062a \u0643\u0648\u064a\u0646 \u0635\u062d\u064a\u062d.</translation>\n     </message>\n     <message>\n@@ -1446,7 +1446,7 @@\n         <translation>\u0647\u0630\u0627 \u062f\u0641\u0639 \u0627\u0639\u062a\u064a\u0627\u062f\u064a</translation>\n     </message>\n     <message>\n-        <source>The Bitcoin address to send the payment to</source>\n+        <source>The Blockcash address to send the payment to</source>\n         <translation>\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0628\u062a \u0643\u0648\u064a\u0646 \u0627\u0644\u0645\u0631\u0633\u0644 \u0627\u0644\u064a\u0647 \u0627\u0644\u062f\u0641\u0639</translation>\n     </message>\n     <message>\n@@ -1523,7 +1523,7 @@\n         <translation>\u0627\u0644\u062a\u0648\u0642\u064a\u0639</translation>\n     </message>\n     <message>\n-        <source>Sign the message to prove you own this Bitcoin address</source>\n+        <source>Sign the message to prove you own this Blockcash address</source>\n         <translation>\u0648\u0642\u0639 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0644\u062a\u062b\u0628\u062a \u0627\u0646\u0643 \u062a\u0645\u062a\u0644\u0643 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0628\u062a \u0643\u0648\u064a\u0646 \u0647\u0630\u0627</translation>\n     </message>\n     <message>\n@@ -1960,7 +1960,7 @@\n         <translation>\u062d\u062f\u062f \u0645\u062c\u0644\u062f \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a</translation>\n     </message>\n     <message>\n-        <source>Bitcoin Core</source>\n+        <source>Blockcash Core</source>\n         <translation>\u062c\u0648\u0647\u0631 \u0627\u0644\u0628\u064a\u062a \u0643\u0648\u064a\u0646</translation>\n     </message>\n     <message>"
      },
      {
        "sha": "fa6b2118777a63fe948bd63bf08adf3d352d50c6",
        "filename": "src/qt/locale/bitcoin_be_BY.ts",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_be_BY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_be_BY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_be_BY.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -62,12 +62,12 @@\n         <translation>\u0430\u0434\u0440\u0430\u0441\u044b \u041f\u0440\u044b\u043c\u0430\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>\u0422\u0443\u0442 \u0437\u043d\u0430\u0445\u043e\u0434\u0437\u044f\u0446\u0446\u0430 \u0411\u0456\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0430\u0441\u044b \u0434\u043b\u044f \u0432\u044b\u0441\u044b\u043b\u0430\u043d\u043d\u044f \u043f\u043b\u0430\u0446\u044f\u0436\u043e\u045e. \u0417\u0430\u045e\u0441\u0451\u0434\u044b \u0441\u043f\u0440\u0430\u045e\u0434\u0436\u0432\u0430\u0439\u0446\u0435 \u043a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c \u0456 \u0430\u0434\u0440\u0430\u0441 \u043f\u0440\u044b\u0437\u043d\u0430\u0447\u044d\u043d\u043d\u044f \u043f\u0435\u0440\u0430\u0434 \u0437\u0434\u0437\u044f\u0439\u0441\u043d\u0435\u043d\u043d\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456.</translation>\n+        <source>These are your Blockcash addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0422\u0443\u0442 \u0437\u043d\u0430\u0445\u043e\u0434\u0437\u044f\u0446\u0446\u0430 Blockcash-\u0430\u0434\u0440\u0430\u0441\u044b \u0434\u043b\u044f \u0432\u044b\u0441\u044b\u043b\u0430\u043d\u043d\u044f \u043f\u043b\u0430\u0446\u044f\u0436\u043e\u045e. \u0417\u0430\u045e\u0441\u0451\u0434\u044b \u0441\u043f\u0440\u0430\u045e\u0434\u0436\u0432\u0430\u0439\u0446\u0435 \u043a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c \u0456 \u0430\u0434\u0440\u0430\u0441 \u043f\u0440\u044b\u0437\u043d\u0430\u0447\u044d\u043d\u043d\u044f \u043f\u0435\u0440\u0430\u0434 \u0437\u0434\u0437\u044f\u0439\u0441\u043d\u0435\u043d\u043d\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456.</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>\u0422\u0443\u0442 \u0437\u043d\u0430\u0445\u043e\u0434\u0437\u044f\u0446\u0446\u0430 \u0411\u0456\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0430\u0441\u044b \u0434\u043b\u044f \u043f\u0440\u044b\u043c\u0430\u043d\u043d\u044f \u043f\u043b\u0430\u0446\u044f\u0436\u043e\u045e. \u041f\u0430\u0436\u0430\u0434\u0430\u043d\u0430 \u0432\u044b\u043a\u0430\u0440\u044b\u0441\u0442\u043e\u045e\u0432\u0430\u0446\u044c \u043d\u043e\u0432\u044b \u0430\u0434\u0440\u0430\u0441 \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u0430\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456.</translation>\n+        <source>These are your Blockcash addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>\u0422\u0443\u0442 \u0437\u043d\u0430\u0445\u043e\u0434\u0437\u044f\u0446\u0446\u0430 Blockcash-\u0430\u0434\u0440\u0430\u0441\u044b \u0434\u043b\u044f \u043f\u0440\u044b\u043c\u0430\u043d\u043d\u044f \u043f\u043b\u0430\u0446\u044f\u0436\u043e\u045e. \u041f\u0430\u0436\u0430\u0434\u0430\u043d\u0430 \u0432\u044b\u043a\u0430\u0440\u044b\u0441\u0442\u043e\u045e\u0432\u0430\u0446\u044c \u043d\u043e\u0432\u044b \u0430\u0434\u0440\u0430\u0441 \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u0430\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456.</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n@@ -168,7 +168,7 @@\n         <translation>\u041f\u0430\u0446\u0432\u0435\u0440\u0434\u0437\u0456\u0446\u0435 \u0448\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u043d\u0435 \u0433\u0430\u043c\u0430\u043d\u0446\u0430</translation>\n     </message>\n     <message>\n-        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BLOCKCASHS&lt;/b&gt;!</source>\n         <translation>\u0423\u0432\u0430\u0433\u0430: \u043a\u0430\u043b\u0456 \u0432\u044b \u0437\u0430\u0448\u044b\u0444\u0440\u0443\u0435\u0446\u0435 \u0441\u0432\u043e\u0439 \u0433\u0430\u043c\u0430\u043d\u0435\u0446 \u0456 \u0441\u0442\u0440\u0430\u0446\u0456\u0446\u0435 \u043f\u0430\u0440\u043e\u043b\u044c\u043d\u0443\u044e \u0444\u0440\u0430\u0437\u0443, \u0442\u043e &lt;b&gt;\u0421\u0422\u0420\u0410\u0426\u0406\u0426\u0415 \u040e\u0421\u0415 \u0421\u0412\u0410\u0415 \u0411\u0406\u0422\u041a\u041e\u0419\u041d\u042b&lt;/b&gt;!</translation>\n     </message>\n     <message>\n@@ -298,8 +298,8 @@\n         <translation>\u041f\u0435\u0440\u0430\u0456\u043d\u0434\u044d\u043a\u0441\u0430\u0446\u044b\u044f \u0431\u043b\u043e\u043a\u0430\u045e \u043d\u0430 \u0434\u044b\u0441\u043a\u0443...</translation>\n     </message>\n     <message>\n-        <source>Send coins to a Bitcoin address</source>\n-        <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u043c\u0430\u043d\u0435\u0442\u044b \u043d\u0430 \u0411\u0456\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0430\u0441</translation>\n+        <source>Send coins to a Blockcash address</source>\n+        <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u043c\u0430\u043d\u0435\u0442\u044b \u043d\u0430 Blockcash-\u0430\u0434\u0440\u0430\u0441</translation>\n     </message>\n     <message>\n         <source>Backup wallet to another location</source>\n@@ -322,8 +322,8 @@\n         <translation>\u041f\u0440\u0430\u0432\u0435\u0440\u044b\u0446\u044c \u043f\u0430\u0432\u0435\u0434\u0430\u043c\u043b\u0435\u043d\u043d\u0435...</translation>\n     </message>\n     <message>\n-        <source>Bitcoin</source>\n-        <translation>\u0411\u0456\u0442\u043a\u043e\u0439\u043d</translation>\n+        <source>Blockcash</source>\n+        <translation>Blockcash</translation>\n     </message>\n     <message>\n         <source>Wallet</source>\n@@ -350,12 +350,12 @@\n         <translation>\u0417\u0430\u0448\u044b\u0444\u0440\u0430\u0432\u0430\u0446\u044c \u043f\u0440\u044b\u0432\u0430\u0442\u043d\u044b\u044f \u043a\u043b\u044e\u0447\u044b, \u044f\u043a\u0438\u044f \u043d\u0430\u043b\u0435\u0436\u0430\u0446\u044c \u0432\u0430\u0448\u0430\u043c\u0443 \u0433\u0430\u043c\u0430\u043d\u0446\u0443</translation>\n     </message>\n     <message>\n-        <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n-        <translation>\u041f\u0430\u0434\u043f\u0456\u0441\u0430\u0446\u044c \u043f\u0430\u0432\u0435\u0434\u0430\u043c\u043b\u0435\u043d\u043d\u0435 \u0437 \u0434\u0430\u043f\u0430\u043c\u043e\u0433\u0430\u0439 \u0411\u0456\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0430\u0441\u0430 \u043a\u0430\u0431 \u0434\u0430\u043a\u0430\u0437\u0430\u0446\u044c, \u0448\u0442\u043e \u044f\u043d\u043e \u043d\u0430\u043b\u0435\u0436\u044b\u0446\u044c \u0432\u0430\u043c</translation>\n+        <source>Sign messages with your Blockcash addresses to prove you own them</source>\n+        <translation>\u041f\u0430\u0434\u043f\u0456\u0441\u0430\u0446\u044c \u043f\u0430\u0432\u0435\u0434\u0430\u043c\u043b\u0435\u043d\u043d\u0435 \u0437 \u0434\u0430\u043f\u0430\u043c\u043e\u0433\u0430\u0439 Blockcash-\u0430\u0434\u0440\u0430\u0441\u0430 \u043a\u0430\u0431 \u0434\u0430\u043a\u0430\u0437\u0430\u0446\u044c, \u0448\u0442\u043e \u044f\u043d\u043e \u043d\u0430\u043b\u0435\u0436\u044b\u0446\u044c \u0432\u0430\u043c</translation>\n     </message>\n     <message>\n-        <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n-        <translation>\u0421\u043f\u0440\u0430\u045e\u0434\u0437\u0456\u0446\u044c \u043f\u0430\u0432\u0435\u0434\u0430\u043c\u043b\u0435\u043d\u043d\u0435 \u0437 \u0434\u0430\u043f\u0430\u043c\u043e\u0433\u0430\u0439 \u0411\u0456\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0430\u0441\u0430 \u043a\u0430\u0431 \u0434\u0430\u043a\u0430\u0437\u0430\u0446\u044c, \u0448\u0442\u043e \u044f\u043d\u043e \u043d\u0430\u043b\u0435\u0436\u044b\u0446\u044c \u0432\u0430\u043c</translation>\n+        <source>Verify messages to ensure they were signed with specified Blockcash addresses</source>\n+        <translation>\u0421\u043f\u0440\u0430\u045e\u0434\u0437\u0456\u0446\u044c \u043f\u0430\u0432\u0435\u0434\u0430\u043c\u043b\u0435\u043d\u043d\u0435 \u0437 \u0434\u0430\u043f\u0430\u043c\u043e\u0433\u0430\u0439 Blockcash-\u0430\u0434\u0440\u0430\u0441\u0430 \u043a\u0430\u0431 \u0434\u0430\u043a\u0430\u0437\u0430\u0446\u044c, \u0448\u0442\u043e \u044f\u043d\u043e \u043d\u0430\u043b\u0435\u0436\u044b\u0446\u044c \u0432\u0430\u043c</translation>\n     </message>\n     <message>\n         <source>&amp;File</source>\n@@ -370,8 +370,8 @@\n         <translation>\u0414\u0430\u043f\u0430\u043c\u043e\u0433\u0430</translation>\n     </message>\n     <message>\n-        <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n-        <translation>\u0417\u0430\u043f\u0430\u0442\u0440\u0430\u0431\u0430\u0432\u0430\u0446\u044c \u043f\u043b\u0430\u0446\u0451\u0436 (\u0433\u0435\u043d\u0435\u0440\u0443\u0435\u0446\u0446\u0430 QR-\u043a\u043e\u0434 \u0434\u043b\u044f \u0431\u0456\u0442\u043a\u043e\u0439\u043d URI)</translation>\n+        <source>Request payments (generates QR codes and litecoin: URIs)</source>\n+        <translation>\u0417\u0430\u043f\u0430\u0442\u0440\u0430\u0431\u0430\u0432\u0430\u0446\u044c \u043f\u043b\u0430\u0446\u0451\u0436 (\u0433\u0435\u043d\u0435\u0440\u0443\u0435\u0446\u0446\u0430 QR-\u043a\u043e\u0434 \u0434\u043b\u044f litecoin URI)</translation>\n     </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n@@ -382,8 +382,8 @@\n         <translation>\u041f\u0430\u043a\u0430\u0437\u0430\u0446\u044c \u0441\u043f\u0456\u0441 \u0430\u0434\u0440\u0430\u0441\u043e\u045e \u0456 \u043c\u0435\u0442\u0430\u043a \u0434\u043b\u044f \u043f\u0440\u044b\u043c\u0430\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n-        <source>Open a bitcoin: URI or payment request</source>\n-        <translation>\u0410\u0434\u043a\u0440\u044b\u0446\u044c \u0431\u0456\u0442\u043a\u043e\u0439\u043d: URI \u0446\u0456 \u0437\u0430\u043f\u044b\u0442 \u043f\u043b\u0430\u0446\u044f\u0436\u0443</translation>\n+        <source>Open a litecoin: URI or payment request</source>\n+        <translation>\u0410\u0434\u043a\u0440\u044b\u0446\u044c litecoin: URI \u0446\u0456 \u0437\u0430\u043f\u044b\u0442 \u043f\u043b\u0430\u0446\u044f\u0436\u0443</translation>\n     </message>\n     <message>\n         <source>&amp;Command-line options</source>\n@@ -1258,8 +1258,8 @@\n         <translation>\u0417\u0430\u043f\u0443\u0441\u0446\u0456\u0446\u044c \u0443 \u0444\u043e\u043d\u0435 \u044f\u043a \u0434\u044d\u043c\u0430\u043d \u0456 \u043f\u0440\u044b\u043c\u0430\u0446\u044c \u043a\u0430\u043c\u0430\u043d\u0434\u044b</translation>\n     </message>\n     <message>\n-        <source>Bitcoin Core</source>\n-        <translation>Bitcoin Core</translation>\n+        <source>Blockcash Core</source>\n+        <translation>Blockcash Core</translation>\n     </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>"
      },
      {
        "sha": "0419302f1f0fa3fca1a4a55d591d882e02f6c747",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 32,
        "deletions": 32,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -62,12 +62,12 @@\n         <translation>\u0410\u0434\u0440\u0435\u0441\u0438 \u0437\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u043d\u0435</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <source>These are your Blockcash addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\u0422\u043e\u0432\u0430 \u0441\u0430 \u0430\u0434\u0440\u0435\u0441\u0438\u0442\u0435 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0438\u0442\u0435 \u043d\u0430 \u043f\u043b\u0430\u0449\u0430\u043d\u0438\u044f. \u0412\u0438\u043d\u0430\u0433\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u043d\u0430 \u0441\u0443\u043c\u0430\u0442\u0430 \u0438 \u0430\u0434\u0440\u0435\u0441\u0430 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f, \u043f\u0440\u0435\u0434\u0438 \u0434\u0430 \u0438\u0437\u043f\u0440\u0430\u0442\u0438\u0442\u0435 \u043c\u043e\u043d\u0435\u0442\u0438.</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>\u0422\u043e\u0432\u0430 \u0441\u0430 \u0412\u0430\u0448\u0438\u0442\u0435 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0430\u0434\u0440\u0435\u0441\u0438,\u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u0438\u0442\u043e \u0449\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u0442\u0435 \u043f\u043b\u0430\u0449\u0430\u043d\u0438\u044f.\u041f\u0440\u0435\u043f\u043e\u0440\u044a\u0447\u0438\u0442\u0435\u043b\u043d\u043e \u0435 \u0434\u0430 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0442\u0435 \u043d\u043e\u0432\u0438 \u0430\u0434\u0440\u0435\u0441\u0438 \u0437\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0432\u0441\u044f\u043a\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f.</translation>\n+        <source>These are your Blockcash addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>\u0422\u043e\u0432\u0430 \u0441\u0430 \u0412\u0430\u0448\u0438\u0442\u0435 Blockcash \u0430\u0434\u0440\u0435\u0441\u0438,\u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u0435\u043d\u0438\u0435 \u043d\u0430 \u043a\u043e\u0438\u0442\u043e \u0449\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u0442\u0435 \u043f\u043b\u0430\u0449\u0430\u043d\u0438\u044f.\u041f\u0440\u0435\u043f\u043e\u0440\u044a\u0447\u0438\u0442\u0435\u043b\u043d\u043e \u0435 \u0434\u0430 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0442\u0435 \u043d\u043e\u0432\u0438 \u0430\u0434\u0440\u0435\u0441\u0438 \u0437\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0432\u0441\u044f\u043a\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f.</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n@@ -168,7 +168,7 @@\n         <translation>\u041f\u043e\u0442\u0432\u044a\u0440\u0434\u0435\u0442\u0435 \u043d\u0430 \u0448\u0438\u0444\u0440\u0438\u0440\u0430\u043d\u0435\u0442\u043e \u043d\u0430 \u043f\u043e\u0440\u0442\u0444\u0435\u0439\u043b\u0430</translation>\n     </message>\n     <message>\n-        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BLOCKCASHS&lt;/b&gt;!</source>\n         <translation>\u0412\u041d\u0418\u041c\u0410\u041d\u0418\u0415: \u0410\u043a\u043e \u0448\u0438\u0444\u0440\u0438\u0440\u0430\u0442\u0435 \u0432\u0430\u0448\u0438\u044f\u0442 \u043f\u043e\u0440\u0442\u0444\u0435\u0439\u043b \u0438 \u0438\u0437\u0433\u0443\u0431\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u0430\u0442\u0430 \u0441\u0438, &lt;b&gt;\u0429\u0415 \u0418\u0417\u0413\u0423\u0411\u0418\u0422\u0415 \u0412\u0421\u0418\u0427\u041a\u0418\u0422\u0415 \u0421\u0418 \u0411\u0418\u0422\u041a\u041e\u0418\u041d\u0418&lt;/b&gt;!</translation>\n     </message>\n     <message>\n@@ -330,7 +330,7 @@\n         <translation>\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0431\u043b\u043e\u043a\u043e\u0432\u0435\u0442\u0435 \u043d\u0430 \u0434\u0438\u0441\u043a\u0430...</translation>\n     </message>\n     <message>\n-        <source>Send coins to a Bitcoin address</source>\n+        <source>Send coins to a Blockcash address</source>\n         <translation>\u0418\u0437\u043f\u0440\u0430\u0449\u0430\u043d\u0435 \u043a\u044a\u043c \u0411\u0438\u0442\u043a\u043e\u0438\u043d \u0430\u0434\u0440\u0435\u0441</translation>\n     </message>\n     <message>\n@@ -354,7 +354,7 @@\n         <translation>&amp;\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435...</translation>\n     </message>\n     <message>\n-        <source>Bitcoin</source>\n+        <source>Blockcash</source>\n         <translation>\u0411\u0438\u0442\u043a\u043e\u0438\u043d</translation>\n     </message>\n     <message>\n@@ -382,12 +382,12 @@\n         <translation>\u0428\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0435 \u043d\u0430 \u043b\u0438\u0447\u043d\u0438\u0442\u0435 \u043a\u043b\u044e\u0447\u043e\u0432\u0435,\u043a\u043e\u0438\u0442\u043e \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442 \u043d\u0430 \u043f\u043e\u0440\u0442\u0444\u0435\u0439\u043b\u0430 \u0412\u0438.</translation>\n     </message>\n     <message>\n-        <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n-        <translation>\u041f\u0438\u0448\u0435\u0442\u0435 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0441\u044a\u0441 \u0441\u0432\u043e\u044f \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0430\u0434\u0440\u0435\u0441 \u0437\u0430 \u0434\u0430 \u0434\u043e\u043a\u0430\u0436\u0435\u0442\u0435,\u0447\u0435 \u0435 \u0432\u0430\u0448.</translation>\n+        <source>Sign messages with your Blockcash addresses to prove you own them</source>\n+        <translation>\u041f\u0438\u0448\u0435\u0442\u0435 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0441\u044a\u0441 \u0441\u0432\u043e\u044f Blockcash \u0430\u0434\u0440\u0435\u0441 \u0437\u0430 \u0434\u0430 \u0434\u043e\u043a\u0430\u0436\u0435\u0442\u0435,\u0447\u0435 \u0435 \u0432\u0430\u0448.</translation>\n     </message>\n     <message>\n-        <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n-        <translation>\u041f\u043e\u0442\u0432\u044a\u0440\u0436\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u044f  \u0437\u0430 \u0434\u0430 \u0441\u0435 \u0437\u043d\u0430\u0435,\u0447\u0435 \u0441\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438 \u0441 \u0434\u0430\u0434\u0435\u043d\u0438\u0442\u0435 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0430\u0434\u0440\u0435\u0441\u0438.</translation>\n+        <source>Verify messages to ensure they were signed with specified Blockcash addresses</source>\n+        <translation>\u041f\u043e\u0442\u0432\u044a\u0440\u0436\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u044f  \u0437\u0430 \u0434\u0430 \u0441\u0435 \u0437\u043d\u0430\u0435,\u0447\u0435 \u0441\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438 \u0441 \u0434\u0430\u0434\u0435\u043d\u0438\u0442\u0435 Blockcash \u0430\u0434\u0440\u0435\u0441\u0438.</translation>\n     </message>\n     <message>\n         <source>&amp;File</source>\n@@ -406,8 +406,8 @@\n         <translation>\u0420\u0430\u0437\u0434\u0435\u043b\u0438</translation>\n     </message>\n     <message>\n-        <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n-        <translation>\u0418\u0437\u0438\u0441\u043a\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u043b\u0430\u0449\u0430\u043d\u0438\u044f(\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0430 QR \u043a\u043e\u0434\u043e\u0432\u0435 \u0438 \u0431\u0438\u0442\u043a\u043e\u0439\u043d: URIs)</translation>\n+        <source>Request payments (generates QR codes and litecoin: URIs)</source>\n+        <translation>\u0418\u0437\u0438\u0441\u043a\u0432\u0430\u043d\u0435 \u043d\u0430 \u043f\u043b\u0430\u0449\u0430\u043d\u0438\u044f(\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0430 QR \u043a\u043e\u0434\u043e\u0432\u0435 \u0438 Blockcash: URIs)</translation>\n     </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n@@ -418,8 +418,8 @@\n         <translation>\u041f\u043e\u043a\u0430\u0436\u0438 \u0441\u043f\u0438\u0441\u044a\u043a \u0441 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441\u0438 \u0438 \u0438\u043c\u0435\u043d\u0430.</translation>\n     </message>\n     <message>\n-        <source>Open a bitcoin: URI or payment request</source>\n-        <translation>\u041e\u0442\u0432\u043e\u0440\u0435\u0442\u0435 \u0431\u0438\u0442\u043a\u043e\u0439\u043d: URI  \u0438\u043b\u0438 \u0437\u0430\u044f\u0432\u043a\u0430 \u0437\u0430 \u043f\u043b\u0430\u0449\u0430\u043d\u0435</translation>\n+        <source>Open a litecoin: URI or payment request</source>\n+        <translation>\u041e\u0442\u0432\u043e\u0440\u0435\u0442\u0435 Blockcash: URI  \u0438\u043b\u0438 \u0437\u0430\u044f\u0432\u043a\u0430 \u0437\u0430 \u043f\u043b\u0430\u0449\u0430\u043d\u0435</translation>\n     </message>\n     <message>\n         <source>&amp;Command-line options</source>\n@@ -462,8 +462,8 @@\n         <translation>\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0430\u043d</translation>\n     </message>\n     <message>\n-        <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0436\u0438 %1 \u043f\u043e\u043c\u043e\u0449\u043d\u043e \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0437\u0430 \u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0448 \u043b\u0438\u0441\u0442 \u0441 \u0432\u044a\u0437\u043c\u043e\u0436\u043d\u0438 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u043a\u043e\u043c\u0430\u043d\u0434\u0438</translation>\n+        <source>Show the %1 help message to get a list with possible Blockcash command-line options</source>\n+        <translation>\u041f\u043e\u043a\u0430\u0436\u0438 %1 \u043f\u043e\u043c\u043e\u0449\u043d\u043e \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0437\u0430 \u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0448 \u043b\u0438\u0441\u0442 \u0441 \u0432\u044a\u0437\u043c\u043e\u0436\u043d\u0438 Blockcash \u043a\u043e\u043c\u0430\u043d\u0434\u0438</translation>\n     </message>\n     <message>\n         <source>%1 client</source>\n@@ -706,7 +706,7 @@\n         <translation>\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0430\u0434\u0440\u0435\u0441 \u0437\u0430 \u0438\u0437\u043f\u0440\u0430\u0449\u0430\u043d\u0435</translation>\n     </message>\n     <message>\n-        <source>The entered address \"%1\" is not a valid Bitcoin address.</source>\n+        <source>The entered address \"%1\" is not a valid Blockcash address.</source>\n         <translation>\"%1\" \u043d\u0435 \u0435 \u0432\u0430\u043b\u0438\u0434\u0435\u043d \u0411\u0438\u0442\u043a\u043e\u0438\u043d \u0430\u0434\u0440\u0435\u0441.</translation>\n     </message>\n     <message>\n@@ -928,16 +928,16 @@\n         <translation>&amp;\u041f\u043e\u0445\u0430\u0440\u0447\u0435\u0442\u0435 \u043d\u0435\u043f\u043e\u0442\u0432\u044a\u0440\u0434\u0435\u043d\u043e\u0442\u043e \u0440\u0435\u0441\u0442\u043e</translation>\n     </message>\n     <message>\n-        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n-        <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u043e\u0442\u0432\u0430\u0440\u044f\u043d\u0435 \u043d\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u044f Bitcoin \u043f\u043e\u0440\u0442. \u0420\u0430\u0431\u043e\u0442\u0438 \u0441\u0430\u043c\u043e \u0441 \u0440\u0443\u0442\u0435\u0440\u0438 \u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430\u0449\u0438 UPnP.</translation>\n+        <source>Automatically open the Blockcash client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u043e\u0442\u0432\u0430\u0440\u044f\u043d\u0435 \u043d\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u044f Blockcash \u043f\u043e\u0440\u0442. \u0420\u0430\u0431\u043e\u0442\u0438 \u0441\u0430\u043c\u043e \u0441 \u0440\u0443\u0442\u0435\u0440\u0438 \u043f\u043e\u0434\u0434\u044a\u0440\u0436\u0430\u0449\u0438 UPnP.</translation>\n     </message>\n     <message>\n         <source>Map port using &amp;UPnP</source>\n         <translation>\u041e\u0442\u0432\u0430\u0440\u044f\u043d\u0435 \u043d\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u044f \u043f\u043e\u0440\u0442 \u0447\u0440\u0435\u0437 &amp;UPnP</translation>\n     </message>\n     <message>\n-        <source>Connect to the Bitcoin network through a SOCKS5 proxy.</source>\n-        <translation>\u0421\u0432\u044a\u0440\u0437\u0432\u0430\u043d\u0435 \u0441 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u043c\u0440\u0435\u0436\u0430\u0442\u0430 \u0447\u0440\u0435\u0437 SOCKS5  \u043f\u0440\u043e\u043a\u0441\u0438.</translation>\n+        <source>Connect to the Blockcash network through a SOCKS5 proxy.</source>\n+        <translation>\u0421\u0432\u044a\u0440\u0437\u0432\u0430\u043d\u0435 \u0441 Blockcash \u043c\u0440\u0435\u0436\u0430\u0442\u0430 \u0447\u0440\u0435\u0437 SOCKS5  \u043f\u0440\u043e\u043a\u0441\u0438.</translation>\n     </message>\n     <message>\n         <source>&amp;Connect through SOCKS5 proxy (default proxy):</source>\n@@ -1031,7 +1031,7 @@\n         <translation>\u0424\u043e\u0440\u043c\u0443\u043b\u044f\u0440</translation>\n     </message>\n     <message>\n-        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n+        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Blockcash network after a connection is established, but this process has not completed yet.</source>\n         <translation>\u0422\u0435\u043a\u0443\u0449\u0430\u0442\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043d\u0430 \u0435\u043a\u0440\u0430\u043d\u0430 \u043c\u043e\u0436\u0435 \u0434\u0430 \u043d\u0435 \u0435 \u0430\u043a\u0442\u0443\u0430\u043b\u043d\u0430. \u0412\u0430\u0448\u0438\u044f\u0442 \u043f\u043e\u0440\u0442\u0444\u0435\u0439\u043b \u0449\u0435 \u0441\u0435 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0430 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0441 \u043c\u0440\u0435\u0436\u0430\u0442\u0430 \u043d\u0430 \u0411\u0438\u0442\u043a\u043e\u0438\u043d, \u0449\u043e\u043c \u043f\u043e\u043d\u0435 \u0435\u0434\u043d\u0430 \u0432\u0440\u044a\u0437\u043a\u0430\u0442\u0430 \u0441 \u043d\u0435\u044f \u0441\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438; \u0442\u043e\u0437\u0438 \u043f\u0440\u043e\u0446\u0435\u0441 \u0432\u0441\u0435 \u043e\u0449\u0435 \u043d\u0435 \u0435 \u043f\u0440\u0438\u043a\u043b\u044e\u0447\u0438\u043b.</translation>\n     </message>\n     <message>\n@@ -1086,8 +1086,8 @@\n         <translation>\u0412\u044a\u0437\u043d\u0438\u043a\u043d\u0430 \u0433\u0440\u0435\u0448\u043a\u0430 \u043f\u043e \u0432\u0440\u0435\u043c\u0435 \u043d\u0430\u0437\u0430\u044f\u0432\u043a\u0430\u0442\u0430 \u0437\u0430 \u043f\u043b\u0430\u0449\u0430\u043d\u0435</translation>\n     </message>\n     <message>\n-        <source>Cannot start bitcoin: click-to-pay handler</source>\n-        <translation>\u0411\u0438\u0442\u043a\u043e\u0439\u043d \u043d\u0435 \u043c\u043e\u0436e \u0434\u0430 \u0441\u0435 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430: click-to-pay handler</translation>\n+        <source>Cannot start litecoin: click-to-pay handler</source>\n+        <translation>Blockcash \u043d\u0435 \u043c\u043e\u0436e \u0434\u0430 \u0441\u0435 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430: click-to-pay handler</translation>\n     </message>\n     <message>\n         <source>URI handling</source>\n@@ -1160,8 +1160,8 @@\n         <translation>\u0421\u0443\u043c\u0430</translation>\n     </message>\n     <message>\n-        <source>Enter a Bitcoin address (e.g. %1)</source>\n-        <translation>\u0412\u044a\u0432\u0435\u0434\u0435\u0442\u0435 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0430\u0434\u0440\u0435\u0441 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: %1)</translation>\n+        <source>Enter a Blockcash address (e.g. %1)</source>\n+        <translation>\u0412\u044a\u0432\u0435\u0434\u0435\u0442\u0435 Blockcash \u0430\u0434\u0440\u0435\u0441 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: %1)</translation>\n     </message>\n     <message>\n         <source>%1 d</source>\n@@ -1713,8 +1713,8 @@\n         <translation>\u0417\u0430\u044f\u0432\u043a\u0430\u0442\u0430 \u0437\u0430 \u043f\u043b\u0430\u0449\u0430\u043d\u0435 \u0435 \u0438\u0437\u0442\u0435\u043a\u043b\u0430.</translation>\n     </message>\n     <message>\n-        <source>Warning: Invalid Bitcoin address</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0430\u0434\u0440\u0435\u0441</translation>\n+        <source>Warning: Invalid Blockcash address</source>\n+        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u041d\u0435\u0432\u0430\u043b\u0438\u0434\u0435\u043d Blockcash \u0430\u0434\u0440\u0435\u0441</translation>\n     </message>\n     <message>\n         <source>Warning: Unknown change address</source>\n@@ -1833,7 +1833,7 @@\n         <translation>\u041a\u043e\u043f\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u044f \u043f\u043e\u0434\u043f\u0438\u0441</translation>\n     </message>\n     <message>\n-        <source>Sign the message to prove you own this Bitcoin address</source>\n+        <source>Sign the message to prove you own this Blockcash address</source>\n         <translation>\u041f\u043e\u0434\u043f\u0438\u0448\u0435\u0442\u0435 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043a\u0430\u0442\u043e \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0441\u0442\u0432\u043e, \u0447\u0435 \u043f\u0440\u0438\u0442\u0435\u0436\u0430\u0432\u0430\u0442\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0430\u0434\u0440\u0435\u0441</translation>\n     </message>\n     <message>\n@@ -1849,7 +1849,7 @@\n         <translation>&amp;\u041f\u0440\u043e\u0432\u0435\u0440\u0438</translation>\n     </message>\n     <message>\n-        <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n+        <source>Verify the message to ensure it was signed with the specified Blockcash address</source>\n         <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u0435\u0442\u0435 \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0437\u0430 \u0434\u0430 \u0441\u0442\u0435 \u0441\u0438\u0433\u0443\u0440\u043d\u0438 \u0447\u0435 \u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0411\u0438\u0442\u043a\u043e\u0438\u043d \u0430\u0434\u0440\u0435\u0441</translation>\n     </message>\n     <message>\n@@ -2370,8 +2370,8 @@\n         <translation>\u0412\u044a\u0432\u0435\u0434\u0435\u0442\u0435 \u0412\u0430\u0448 \u043f\u0443\u0431\u043b\u0438\u0447\u0435\u043d \u0430\u0434\u0440\u0435\u0441</translation>\n     </message>\n     <message>\n-        <source>Bitcoin Core</source>\n-        <translation>\u0411\u0438\u0442\u043a\u043e\u0439\u043d \u044f\u0434\u0440\u043e</translation>\n+        <source>Blockcash Core</source>\n+        <translation>Blockcash \u044f\u0434\u0440\u043e</translation>\n     </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>"
      },
      {
        "sha": "719be671b08ec370353a0780bcb8d39bf3fee1f9",
        "filename": "src/qt/locale/bitcoin_bg_BG.ts",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_bg_BG.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_bg_BG.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg_BG.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -62,12 +62,12 @@\n         <translation>\u0410\u0434\u0440\u0435\u0441 \u0437\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u043d\u0435</translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>\u0422\u0435\u0437\u0438 \u0441\u0430 \u0432\u0430\u0448\u0438\u0442\u0435 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0430\u0434\u0440\u0435\u0441\u0438 \u0437\u0430 \u0438\u0437\u043f\u0440\u0430\u0449\u0430\u043d\u0435 \u043d\u0430 \u043c\u043e\u043d\u0435\u0442\u0438. \u0412\u0438\u043d\u0430\u0433\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0432\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u0442\u043e \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u0449\u0438\u044f \u0430\u0434\u0440\u0435\u0441 \u043f\u0440\u0435\u0434\u0438 \u0438\u0437\u043f\u0440\u0430\u0449\u0430\u043d\u0435. </translation>\n+        <source>These are your Blockcash addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0422\u0435\u0437\u0438 \u0441\u0430 \u0432\u0430\u0448\u0438\u0442\u0435 Blockcash \u0430\u0434\u0440\u0435\u0441\u0438 \u0437\u0430 \u0438\u0437\u043f\u0440\u0430\u0449\u0430\u043d\u0435 \u043d\u0430 \u043c\u043e\u043d\u0435\u0442\u0438. \u0412\u0438\u043d\u0430\u0433\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0432\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u0442\u043e \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u0449\u0438\u044f \u0430\u0434\u0440\u0435\u0441 \u043f\u0440\u0435\u0434\u0438 \u0438\u0437\u043f\u0440\u0430\u0449\u0430\u043d\u0435. </translation>\n     </message>\n     <message>\n-        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n-        <translation>\u0422\u043e\u0432\u0430 \u0441\u0430 \u0432\u0430\u0448\u0438\u0442\u0435 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0430\u0434\u0440\u0435\u0441\u0438 \u0437\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043c\u043e\u043d\u0435\u0442\u0438. \u041f\u0440\u0435\u043f\u043e\u0440\u044a\u0447\u0438\u0442\u0435\u043b\u043d\u043e \u0435 \u0434\u0430 \u043f\u043e\u043b\u0437\u0432\u0430\u0442\u0435 \u043d\u043e\u0432 \u0430\u0434\u0440\u0435\u0441 \u043d\u0430 \u0432\u0441\u044f\u043a\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f.</translation>\n+        <source>These are your Blockcash addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>\u0422\u043e\u0432\u0430 \u0441\u0430 \u0432\u0430\u0448\u0438\u0442\u0435 Blockcash \u0430\u0434\u0440\u0435\u0441\u0438 \u0437\u0430 \u043f\u043e\u043b\u0443\u0447\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u043c\u043e\u043d\u0435\u0442\u0438. \u041f\u0440\u0435\u043f\u043e\u0440\u044a\u0447\u0438\u0442\u0435\u043b\u043d\u043e \u0435 \u0434\u0430 \u043f\u043e\u043b\u0437\u0432\u0430\u0442\u0435 \u043d\u043e\u0432 \u0430\u0434\u0440\u0435\u0441 \u043d\u0430 \u0432\u0441\u044f\u043a\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f.</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n@@ -420,8 +420,8 @@\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <source>Bitcoin Core</source>\n-        <translation>\u0411\u0438\u0442\u043a\u043e\u0439\u043d \u044f\u0434\u0440\u043e</translation>\n+        <source>Blockcash Core</source>\n+        <translation>Blockcash \u044f\u0434\u0440\u043e</translation>\n     </message>\n     </context>\n </TS>\n\\ No newline at end of file"
      },
      {
        "sha": "bd0739757a5eff18bf205708302f4f817f163f8c",
        "filename": "src/qt/locale/bitcoin_bn.ts",
        "status": "added",
        "additions": 187,
        "deletions": 0,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_bn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_bn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bn.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4",
        "patch": "@@ -0,0 +1,187 @@\n+<TS language=\"bn\" version=\"2.1\">\n+<context>\n+    <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u09a0\u09bf\u0995\u09be\u09a8\u09be \u0995\u09bf\u0982\u09ac\u09be \u09b2\u09c7\u09ad\u09c7\u09b2 \u09b8\u09ae\u09cd\u09aa\u09be\u09a6\u09a8\u09be\u09b0 \u099c\u09a8\u09cd\u09af \u09b0\u09be\u0987\u099f-\u0995\u09cd\u09b2\u09bf\u0995 \u0995\u09b0\u09c1\u09a8</translation>\n+    </message>\n+    <message>\n+        <source>Create a new address</source>\n+        <translation>undefined</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>AddressTableModel</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u09a0\u09bf\u0995\u09be\u09a8\u09be </translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>AskPassphraseDialog</name>\n+    </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n+<context>\n+    <name>BitcoinGUI</name>\n+    <message>\n+        <source>Warning</source>\n+        <translation>\u09b8\u09a4\u09b0\u09cd\u0995\u09a4\u09be</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>CoinControlDialog</name>\n+    </context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    </context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    </context>\n+<context>\n+    <name>HelpMessageDialog</name>\n+    </context>\n+<context>\n+    <name>Intro</name>\n+    </context>\n+<context>\n+    <name>ModalOverlay</name>\n+    </context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    </context>\n+<context>\n+    <name>OptionsDialog</name>\n+    </context>\n+<context>\n+    <name>OverviewPage</name>\n+    </context>\n+<context>\n+    <name>PaymentServer</name>\n+    </context>\n+<context>\n+    <name>PeerTableModel</name>\n+    </context>\n+<context>\n+    <name>QObject</name>\n+    </context>\n+<context>\n+    <name>QObject::QObject</name>\n+    </context>\n+<context>\n+    <name>QRImageWidget</name>\n+    </context>\n+<context>\n+    <name>RPCConsole</name>\n+    </context>\n+<context>\n+    <name>ReceiveCoinsDialog</name>\n+    </context>\n+<context>\n+    <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u09a0\u09bf\u0995\u09be\u09a8\u09be </translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    </context>\n+<context>\n+    <name>SendCoinsDialog</name>\n+    </context>\n+<context>\n+    <name>SendCoinsEntry</name>\n+    </context>\n+<context>\n+    <name>SendConfirmationDialog</name>\n+    </context>\n+<context>\n+    <name>ShutdownWindow</name>\n+    </context>\n+<context>\n+    <name>SignVerifyMessageDialog</name>\n+    <message>\n+        <source>The entered address is invalid.</source>\n+        <translation>\u09aa\u09cd\u09b0\u09ac\u09c7\u09b6\u0995\u09c3\u09a4 \u09a0\u09bf\u0995\u09be\u09a8\u09be\u099f\u09bf \u09b6\u09c1\u09a6\u09cd\u09a7 \u09a8\u09df\u0964</translation>\n+    </message>\n+    <message>\n+        <source>Please check the signature and try again.</source>\n+        <translation>\u0985\u09a8\u09c1\u0997\u09cd\u09b0\u09b9 \u0995\u09b0\u09c7 \u09b8\u09cd\u09ac\u09be\u0995\u09cd\u09b7\u09b0\u099f\u09bf \u09aa\u09c1\u09a8\u09b0\u09be\u09df \u09aa\u09b0\u09c0\u0995\u09cd\u09b7\u09be \u0995\u09b0\u09c7 \u0986\u09ac\u09be\u09b0\u0993 \u099a\u09c7\u09b7\u09cd\u099f\u09be \u0995\u09b0\u09c1\u09a8\u0964</translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>SplashScreen</name>\n+    </context>\n+<context>\n+    <name>TrafficGraphWidget</name>\n+    </context>\n+<context>\n+    <name>TransactionDesc</name>\n+    </context>\n+<context>\n+    <name>TransactionDescDialog</name>\n+    </context>\n+<context>\n+    <name>TransactionTableModel</name>\n+    </context>\n+<context>\n+    <name>TransactionView</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u09a0\u09bf\u0995\u09be\u09a8\u09be </translation>\n+    </message>\n+    </context>\n+<context>\n+    <name>UnitDisplayStatusBarControl</name>\n+    </context>\n+<context>\n+    <name>WalletFrame</name>\n+    </context>\n+<context>\n+    <name>WalletModel</name>\n+    </context>\n+<context>\n+    <name>WalletView</name>\n+    </context>\n+<context>\n+    <name>bitcoin-core</name>\n+    <message>\n+        <source>Block creation options:</source>\n+        <translation>\u09ac\u09cd\u09b2\u0995 \u09a4\u09c8\u09b0\u09bf\u09b0 \u0985\u09aa\u09b6\u09a8\u0997\u09c1\u09b2\u09cb:</translation>\n+    </message>\n+    <message>\n+        <source>Debugging/Testing options:</source>\n+        <translation>\u09a1\u09bf\u09ac\u09be\u0997\u09bf\u0982/\u099f\u09c7\u09b8\u09cd\u099f\u09bf\u0982 \u0985\u09aa\u09b6\u09a8:</translation>\n+    </message>\n+    <message>\n+        <source>Do you want to rebuild the block database now?</source>\n+        <translation>\u0986\u09aa\u09a8\u09bf \u0995\u09bf \u09aa\u09c1\u09a8\u09b0\u09be\u09df \u09ac\u09cd\u09b2\u0995 \u09a1\u09be\u099f\u09be\u09ac\u09c7\u0987\u099c \u098f\u0996\u09a8\u0987 \u09a4\u09c8\u09b0\u09bf \u0995\u09b0\u09a4\u09c7 \u099a\u09be\u09a8?</translation>\n+    </message>\n+    <message>\n+        <source>RPC server options:</source>\n+        <translation>\u0986\u09b0\u09aa\u09bf\u09b8\u09bf \u09b8\u09be\u09b0\u09cd\u09ad\u09be\u09b0 \u0985\u09aa\u09b6\u09a8:</translation>\n+    </message>\n+    <message>\n+        <source>This is experimental software.</source>\n+        <translation>\u098f\u099f\u09bf \u09aa\u09b0\u09c0\u0995\u09cd\u09b7\u09be\u09ae\u09c2\u09b2\u0995 \u09b8\u09ab\u099f\u0993\u09df\u09cd\u09af\u09be\u09b0\u0964</translation>\n+    </message>\n+    <message>\n+        <source>Transaction amount too small</source>\n+        <translation>\u09b2\u09c7\u09a8\u09a6\u09c7\u09a8\u09c7\u09b0 \u09aa\u09b0\u09bf\u09ae\u09be\u09a8 \u0985\u09a8\u09c7\u0995 \u099b\u09cb\u099f</translation>\n+    </message>\n+    <message>\n+        <source>Transaction too large</source>\n+        <translation>\u09b2\u09c7\u09a8\u09a6\u09c7\u09a8\u09b0 \u0985\u0982\u0995 \u0985\u09a8\u09c7\u0995 \u09ac\u09dc</translation>\n+    </message>\n+    <message>\n+        <source>Warning</source>\n+        <translation>\u09b8\u09a4\u09b0\u09cd\u0995\u09a4\u09be</translation>\n+    </message>\n+    <message>\n+        <source>Loading addresses...</source>\n+        <translation>\u09a0\u09bf\u0995\u09be\u09a8\u09be\u0997\u09c1\u09b2\u09cb \u09b2\u09cb\u09a1\u09bf\u0982 \u09b9\u099a\u09cd\u099b\u09c7...</translation>\n+    </message>\n+    </context>\n+</TS>\n\\ No newline at end of file"
      },
      {
        "sha": "325e2700557afc5c593192eb332d5b4b420b6ae6",
        "filename": "src/qt/locale/bitcoin_bs.ts",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_bs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_bs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bs.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "33be22ea95e63e75b5a1c1c9250b2912ec5031b0",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 68,
        "deletions": 68,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "36f411ae71573a86fd0530b5425640cede46eb44",
        "filename": "src/qt/locale/bitcoin_ca@valencia.ts",
        "status": "modified",
        "additions": 56,
        "deletions": 56,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_ca@valencia.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_ca@valencia.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca@valencia.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "70a017d92f218321ed6367632604cc2fd38d2136",
        "filename": "src/qt/locale/bitcoin_ca_ES.ts",
        "status": "modified",
        "additions": 68,
        "deletions": 68,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_ca_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_ca_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca_ES.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "b9149b6d44a2f057913f511c7a2bf0d601433e4a",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 70,
        "deletions": 70,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "f2d4d89994c791aac1f8fbe589f808c4b2d76469",
        "filename": "src/qt/locale/bitcoin_cy.ts",
        "status": "modified",
        "additions": 162,
        "deletions": 6,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_cy.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_cy.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cy.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "7a2b6a9edef565a64a234370807649c9bf2d4663",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 79,
        "deletions": 79,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "d6f4ee2f744ce8f3621d757c9399505a709589d9",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "04ef956a398d4a22ed48dd70f8cde8d6e2f03f32",
        "filename": "src/qt/locale/bitcoin_de_DE.ts",
        "status": "added",
        "additions": 628,
        "deletions": 0,
        "changes": 628,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_de_DE.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_de_DE.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de_DE.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "c7e2cf5cd43196ca15d284c285d7d89beb6eb655",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 48,
        "deletions": 32,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "538bd412232cb246cf120d347cc15a50d53896d2",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 66,
        "deletions": 66,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "80b09f255515f9e1534b1344ef22d6c48c3d606f",
        "filename": "src/qt/locale/bitcoin_en_AU.ts",
        "status": "added",
        "additions": 175,
        "deletions": 0,
        "changes": 175,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_en_AU.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_en_AU.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en_AU.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "62b483ae8e8c4f08762d8a138d07bd2e6067f080",
        "filename": "src/qt/locale/bitcoin_en_GB.ts",
        "status": "modified",
        "additions": 50,
        "deletions": 50,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_en_GB.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_en_GB.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en_GB.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "65cc0332e3b4bfb4a15e3c47ddfbb7d33087586d",
        "filename": "src/qt/locale/bitcoin_en_US.ts",
        "status": "added",
        "additions": 175,
        "deletions": 0,
        "changes": 175,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_en_US.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_en_US.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en_US.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "ff8546960485381f8c723102cff784ed63d9a59e",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "d1fa19528aae737a4b19d32dd12c977a070fb0cf",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 73,
        "deletions": 73,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "b5b5066ce99544e10473b78971eddb784e2a52e4",
        "filename": "src/qt/locale/bitcoin_es_419.ts",
        "status": "added",
        "additions": 167,
        "deletions": 0,
        "changes": 167,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_419.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_419.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_419.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "d5dd6607ff0d33aa7f274c4340823e40f8464d6e",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "03d8d483118321d4287425bf62a8ab58a115d94f",
        "filename": "src/qt/locale/bitcoin_es_CO.ts",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_CO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_CO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CO.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "55b238957fa676084d4463de403d650c9bdeac9c",
        "filename": "src/qt/locale/bitcoin_es_DO.ts",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_DO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_DO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_DO.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "8f3fbc1c4ee1bcdda0a89b2d681bdc2284b47ce2",
        "filename": "src/qt/locale/bitcoin_es_ES.ts",
        "status": "modified",
        "additions": 174,
        "deletions": 90,
        "changes": 264,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/locale/bitcoin_es_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_ES.ts?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      }
    ]
  },
  {
    "sha": "3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzJhMDQ2ZjljZDA1NjMxNWM4ZmZjZTlhYTYyMTgxZTE3YmY1YjU5",
    "commit": {
      "author": {
        "name": "blockcash",
        "email": "blockcashcoin@gmail.com",
        "date": "2017-12-25T12:21:03Z"
      },
      "committer": {
        "name": "blockcash",
        "email": "blockcashcoin@gmail.com",
        "date": "2017-12-25T12:21:03Z"
      },
      "message": "update logo",
      "tree": {
        "sha": "ea0b297b6b647c4b0ab1fc095d3d2be2922dc55b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea0b297b6b647c4b0ab1fc095d3d2be2922dc55b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/comments",
    "author": {
      "login": "blockcash",
      "id": 34801682,
      "node_id": "MDQ6VXNlcjM0ODAxNjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34801682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blockcash",
      "html_url": "https://github.com/blockcash",
      "followers_url": "https://api.github.com/users/blockcash/followers",
      "following_url": "https://api.github.com/users/blockcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/blockcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blockcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blockcash/subscriptions",
      "organizations_url": "https://api.github.com/users/blockcash/orgs",
      "repos_url": "https://api.github.com/users/blockcash/repos",
      "events_url": "https://api.github.com/users/blockcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blockcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "blockcash",
      "id": 34801682,
      "node_id": "MDQ6VXNlcjM0ODAxNjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34801682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blockcash",
      "html_url": "https://github.com/blockcash",
      "followers_url": "https://api.github.com/users/blockcash/followers",
      "following_url": "https://api.github.com/users/blockcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/blockcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blockcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blockcash/subscriptions",
      "organizations_url": "https://api.github.com/users/blockcash/orgs",
      "repos_url": "https://api.github.com/users/blockcash/repos",
      "events_url": "https://api.github.com/users/blockcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blockcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "913278c1768d61e8fbe753943e2272955f13dbe4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/913278c1768d61e8fbe753943e2272955f13dbe4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/913278c1768d61e8fbe753943e2272955f13dbe4"
      }
    ],
    "stats": {
      "total": 1996,
      "additions": 846,
      "deletions": 1150
    },
    "files": [
      {
        "sha": "78a2babb19498eff8c455e14d12b60ebea6c7abf",
        "filename": "share/pixmaps/bitcoin.ico",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin.ico?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "41a76e298e9256c9277c9bc6e072a95d64629da9",
        "filename": "share/pixmaps/bitcoin128.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin128.png?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "0c4b00e93d0c97cad69b95468dee3c17ec0a793b",
        "filename": "share/pixmaps/bitcoin128.xpm",
        "status": "modified",
        "additions": 220,
        "deletions": 379,
        "changes": 599,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin128.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin128.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin128.xpm?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,384 +1,225 @@\n /* XPM */\n static char *bitcoin___[] = {\n /* columns rows colors chars-per-pixel */\n-\"128 128 250 2\",\n-\"   c #845415\",\n-\".  c #895616\",\n-\"X  c #84581E\",\n-\"o  c #8D5C18\",\n-\"O  c #925A15\",\n-\"+  c #925E1C\",\n-\"@  c #98621C\",\n-\"#  c #9E711C\",\n-\"$  c #A36E1A\",\n-\"%  c #A96F1B\",\n-\"&  c #A6711C\",\n-\"*  c #AC741C\",\n-\"=  c #B2741E\",\n-\"-  c #B37C1E\",\n-\";  c #BB7C1E\",\n-\":  c #835B21\",\n-\">  c #8F6125\",\n-\",  c #956727\",\n-\"<  c #916B2E\",\n-\"1  c #996B2C\",\n-\"2  c #B47B23\",\n-\"3  c #BD7C20\",\n-\"4  c #A17330\",\n-\"5  c #AB7D3B\",\n-\"6  c #C17F20\",\n-\"7  c #B9831F\",\n-\"8  c #BB842B\",\n-\"9  c #BD8533\",\n-\"0  c #B68F3D\",\n-\"q  c #BE8C3B\",\n-\"w  c #C4801F\",\n-\"e  c #FE8C03\",\n-\"r  c #F38A0F\",\n-\"t  c #FD8E0A\",\n-\"y  c #FF910C\",\n-\"u  c #F78F13\",\n-\"i  c #F98F10\",\n-\"p  c #F79016\",\n-\"a  c #FE9314\",\n-\"s  c #F6931E\",\n-\"d  c #FD961B\",\n-\"f  c #FE991E\",\n-\"g  c #C58421\",\n-\"h  c #CD8621\",\n-\"j  c #C78B21\",\n-\"k  c #CC8B23\",\n-\"l  c #C2852B\",\n-\"z  c #C08B2D\",\n-\"x  c #D28722\",\n-\"c  c #D38B25\",\n-\"v  c #DB8E22\",\n-\"b  c #D28E2C\",\n-\"n  c #D49323\",\n-\"m  c #DC9224\",\n-\"M  c #DC9B25\",\n-\"N  c #D4922D\",\n-\"B  c #DF972A\",\n-\"V  c #DF982E\",\n-\"C  c #C18D33\",\n-\"Z  c #C58E38\",\n-\"A  c #CB9332\",\n-\"S  c #C2933C\",\n-\"D  c #CD9339\",\n-\"F  c #CC9938\",\n-\"G  c #D19733\",\n-\"H  c #DA9230\",\n-\"J  c #D59935\",\n-\"K  c #DC9C33\",\n-\"L  c #DC9E3B\",\n-\"P  c #E49124\",\n-\"I  c #EA9426\",\n-\"U  c #E09D26\",\n-\"Y  c #EC972B\",\n-\"T  c #F79625\",\n-\"R  c #F99524\",\n-\"E  c #F69A26\",\n-\"W  c #F89825\",\n-\"Q  c #F2972B\",\n-\"!  c #F59A2C\",\n-\"~  c #F89B2B\",\n-\"^  c #E79D33\",\n-\"/  c #EF9D31\",\n-\"(  c #E19F3A\",\n-\")  c #EF9D3A\",\n-\"_  c #F49C33\",\n-\"`  c #F99E32\",\n-\"'  c #F49F39\",\n-\"]  c #D6A13E\",\n-\"[  c #DAA33B\",\n-\"{  c #E3A127\",\n-\"}  c #E7A328\",\n-\"|  c #EDA32C\",\n-\" . c #EDA829\",\n-\".. c #FFA325\",\n-\"X. c #FFAB25\",\n-\"o. c #F3A42B\",\n-\"O. c #FFA429\",\n-\"+. c #F4A929\",\n-\"@. c #FFAC2A\",\n-\"#. c #FFB227\",\n-\"$. c #FFB32C\",\n-\"%. c #FFBA2D\",\n-\"&. c #EEA830\",\n-\"*. c #F7A334\",\n-\"=. c #FAA036\",\n-\"-. c #FCAB34\",\n-\";. c #F4A13C\",\n-\":. c #F9A33B\",\n-\">. c #F4A83B\",\n-\",. c #FFA83F\",\n-\"<. c #FDB432\",\n-\"1. c #FFBB33\",\n-\"2. c #FFB73A\",\n-\"3. c #FDB93E\",\n-\"4. c #FFC12F\",\n-\"5. c #FFC432\",\n-\"6. c #FFC338\",\n-\"7. c #D2A043\",\n-\"8. c #D8A140\",\n-\"9. c #EEA144\",\n-\"0. c #E2A840\",\n-\"q. c #EDA34B\",\n-\"w. c #F4A444\",\n-\"e. c #F9A642\",\n-\"r. c #FBA945\",\n-\"t. c #F3A64B\",\n-\"y. c #F4A84E\",\n-\"u. c #FBAB4B\",\n-\"i. c #EEB041\",\n-\"p. c #FABA44\",\n-\"a. c #ECA653\",\n-\"s. c #EEAC5D\",\n-\"d. c #F3AA53\",\n-\"f. c #FAAE53\",\n-\"g. c #F2AD5A\",\n-\"h. c #FBB056\",\n-\"j. c #F6B15E\",\n-\"k. c #FBB25B\",\n-\"l. c #DDAF79\",\n-\"z. c #E3A962\",\n-\"x. c #EBAE63\",\n-\"c. c #E4AC68\",\n-\"v. c #EAAF69\",\n-\"b. c #EEB065\",\n-\"n. c #E7B06C\",\n-\"m. c #EEB36B\",\n-\"M. c #F5B263\",\n-\"N. c #FBB461\",\n-\"B. c #E6B274\",\n-\"V. c #ECB574\",\n-\"C. c #E7B57B\",\n-\"Z. c #EAB77C\",\n-\"A. c #ECB97C\",\n-\"S. c #F2B770\",\n-\"D. c #F0BB7A\",\n-\"F. c #DBB485\",\n-\"G. c #DFB888\",\n-\"H. c #E4B984\",\n-\"J. c #EDBD82\",\n-\"K. c #E5BC8B\",\n-\"L. c #EABE8A\",\n-\"P. c #F0BE82\",\n-\"I. c #E0BF96\",\n-\"U. c #EDC089\",\n-\"Y. c #F0C28B\",\n-\"T. c #E5C194\",\n-\"R. c #E9C191\",\n-\"E. c #E4C39C\",\n-\"W. c #EBC699\",\n-\"Q. c #EBC99F\",\n-\"!. c #DFC3A0\",\n-\"~. c #DDCAAF\",\n-\"^. c #CFC7BD\",\n-\"/. c #D2CBB6\",\n-\"(. c #DBC8B1\",\n-\"). c #DBCDBB\",\n-\"_. c #E2C6A4\",\n-\"`. c #E6C8A5\",\n-\"'. c #EACBA5\",\n-\"]. c #E1C7A8\",\n-\"[. c #E3CBAD\",\n-\"{. c #EACCAA\",\n-\"}. c #EED1AC\",\n-\"|. c #E1CDB3\",\n-\" X c #E3CFB8\",\n-\".X c #E6D1B6\",\n-\"XX c #EBD2B3\",\n-\"oX c #E3D1BB\",\n-\"OX c #EAD6BB\",\n-\"+X c #EBD8BF\",\n-\"@X c #D3CDC2\",\n-\"#X c #D8CDC2\",\n-\"$X c #D0CECA\",\n-\"%X c #DDD3C4\",\n-\"&X c #D3D2CC\",\n-\"*X c #DDD5CB\",\n-\"=X c #CCD3D5\",\n-\"-X c #C9D7DF\",\n-\";X c #D2D4D6\",\n-\":X c #DEDAD4\",\n-\">X c #DDDCDB\",\n-\",X c #E2D4C2\",\n-\"<X c #ECDBC2\",\n-\"1X c #E2D7CA\",\n-\"2X c #E3D8CC\",\n-\"3X c #E2DCD6\",\n-\"4X c #E9DED2\",\n-\"5X c #E1DEDA\",\n-\"6X c #EEE0CE\",\n-\"7X c #EEE3D4\",\n-\"8X c #E7E2DA\",\n-\"9X c #EEE4D8\",\n-\"0X c #F3E6D1\",\n-\"qX c #C5D7ED\",\n-\"wX c #CDDBEB\",\n-\"eX c #DBDEE2\",\n-\"rX c #CBDCF1\",\n-\"tX c #C4DFFF\",\n-\"yX c #DEE1E4\",\n-\"uX c #DDE4EC\",\n-\"iX c #D3E1F2\",\n-\"pX c #DDE6F1\",\n-\"aX c #DEE9F4\",\n-\"sX c #D8E5F8\",\n-\"dX c #D6EEFF\",\n-\"fX c #DEECFB\",\n-\"gX c #D5F4FF\",\n-\"hX c #DDF3FF\",\n-\"jX c #DCF9FF\",\n-\"kX c #E3E4E6\",\n-\"lX c #EFEBE4\",\n-\"zX c #E1E5EB\",\n-\"xX c #E2E8ED\",\n-\"cX c #F1F1ED\",\n-\"vX c #E0E7F0\",\n-\"bX c #E2E9F2\",\n-\"nX c #EAEFF6\",\n-\"mX c #E1EEFD\",\n-\"MX c #E4F1F6\",\n-\"NX c #E3F4FF\",\n-\"BX c #EAF6FF\",\n-\"VX c #E5F9FF\",\n-\"CX c #EBFAFF\",\n-\"ZX c #F5F5F5\",\n-\"AX c #F9F7F5\",\n-\"SX c #FAF8F6\",\n-\"DX c #F3F7FB\",\n-\"FX c #F4FAFE\",\n-\"GX c #FEFEFE\",\n-\"HX c None\",\n+\"128 128 91 1\",\n+\"  c #353634\",\n+\". c #373836\",\n+\"X c #383937\",\n+\"o c #3D3E3C\",\n+\"O c #3F403E\",\n+\"+ c #40413F\",\n+\"@ c #434442\",\n+\"# c #474847\",\n+\"$ c #484947\",\n+\"% c #4B4C4B\",\n+\"& c #4F504E\",\n+\"* c #50514F\",\n+\"= c #4F5150\",\n+\"- c #545553\",\n+\"; c #575857\",\n+\": c #585957\",\n+\"> c #575858\",\n+\", c #5B5C5B\",\n+\"< c #5F605E\",\n+\"1 c #60615F\",\n+\"2 c #5F6160\",\n+\"3 c #646464\",\n+\"4 c #676867\",\n+\"5 c #686967\",\n+\"6 c #6B6C6B\",\n+\"7 c #6F706F\",\n+\"8 c #6F7070\",\n+\"9 c #717372\",\n+\"0 c #777877\",\n+\"q c #7B7C7B\",\n+\"w c #80807F\",\n+\"e c #7F8080\",\n+\"r c #838484\",\n+\"t c #888987\",\n+\"y c #878888\",\n+\"u c #8B8B8B\",\n+\"i c #8F908F\",\n+\"p c #90908F\",\n+\"a c #8D8E90\",\n+\"s c #8F9092\",\n+\"d c #949595\",\n+\"f c #979896\",\n+\"g c #989897\",\n+\"h c #959698\",\n+\"j c #979899\",\n+\"k c #9A9B9C\",\n+\"l c #9FA09F\",\n+\"z c #9E9FA1\",\n+\"x c #9FA0A1\",\n+\"c c #A3A4A4\",\n+\"v c #A7A8A7\",\n+\"b c #A6A7A9\",\n+\"n c #A7A8A8\",\n+\"m c #ACADAD\",\n+\"M c #ADAFB1\",\n+\"N c #AFB0B3\",\n+\"B c #B3B4B6\",\n+\"V c #B7B8B7\",\n+\"C c #B6B7BA\",\n+\"Z c #B7B8BB\",\n+\"A c #BABABD\",\n+\"S c #BFC0BF\",\n+\"D c #BDBEC1\",\n+\"F c #BFC0C2\",\n+\"G c #C2C3C4\",\n+\"H c #C5C6C9\",\n+\"J c #C7C8CA\",\n+\"K c #CACBCC\",\n+\"L c #CECED1\",\n+\"P c #CFD0D1\",\n+\"I c #D3D4D4\",\n+\"U c #D6D6D8\",\n+\"Y c #D7D8D9\",\n+\"T c #DBDBDC\",\n+\"R c #E0DFDF\",\n+\"E c #E0E0DF\",\n+\"W c #DFDFE0\",\n+\"Q c #DFE0E0\",\n+\"! c #E3E4E4\",\n+\"~ c #E7E7E8\",\n+\"^ c #E7E8E8\",\n+\"/ c #EBEBEC\",\n+\"( c #EFEFF0\",\n+\") c #F0EFF0\",\n+\"_ c #EFF0F0\",\n+\"` c #F4F5F5\",\n+\"' c #F6F7F8\",\n+\"] c #F8F7F8\",\n+\"[ c #F7F8F8\",\n+\"{ c #FDFDFD\",\n+\"} c None\",\n /* pixels */\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX1 Z L >.N b b b b N >.( C > HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX4 L _ *.@.<.$.X.X...X.X.X.X.X.X...X.@.$.<.@.*./ G , HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX< L -.@.$.X...R R R T T T T W W W W W W T T T T R R W ..X.$.@.*.J HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXD -.%.X.W R T T W W W W W W W W W W W W W W W W W W W W W W T T R W X.%.+.A HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXS -.$.X.R T T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T T R X.$.-.C HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXF <.@.f R T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T R W #.<.A HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX[ <.X.f T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T R X.$.K HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX0.$...R T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E W W W W W W W T R ..%.G HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXS 1...R T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ E W W W W W W W W W T R X.1.A HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX3.X.d T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ E W W W W W W W W W W T R @.2.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX7.5.f T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W T W %.z HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX3.X.s T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W T R $.<.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX1...R W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E E W W W W W W W W W W W W W R ..1.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX0 5.f T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W T W 5.8 HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX8.$.s W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W T R %.N HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXi.#.R W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W R $.&.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXp.X.R W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W R @.<.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXp.X.R W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W R @.<.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXi.X.R W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ E ~ W R ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` ` ` ` ` ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W R @.| HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX] #.R W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ! s e t d ~ ` ` ` ` ` ` =.=.=.` ` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W R %.N HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXq %.R W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E W E ~ ~ ~ ~ y l.=XI.x.) p a =.` ` =.=.=.=.=.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W R %.2 HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX5 5.d W W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ t (.jXVXNXuX@XF.W ` =.:.` W =.:.=.=.` ` ` ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W T R 5.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX1.f T W W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ R Q eXDXSXSXDXgX#Xa ` =.=.;.q.W a a R ` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W T W %.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX3...T W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ` a a.NXSXGXGXAXNXV.a :.:.f c.tX*XE.n.9.R ~ ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W T @.@.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXD #.R W W W W W W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` t H.VXSXGXGXDXmXy.f :.:.a I.hXBXCXNXiX^.' W ` ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W R %.g HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX5.d W W W W W W W W W W W W W W W W W W W W W W W W W E ~ W ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` i |.CXGXGXGXCX3X~ ` :.:.R %XCXSXGXAXNX>XW ~ ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W R 5.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX2.W T W W W W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ s t e a W ~ ` ` ` ` ` ` W ! eXFXGXGXSXVX[.d :.:.~ w.uXFXGXGXSXVXW.a ` ` ` ` ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W T ..@.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHX9 $.R W W W W W W W W W W W W W W W W W W W W W W E W ~ ~ ~ y F./.B.9.T t t a ~ =.` =.a a.hXDXGXGXSXNXA.d :.e.R v.NXSXGXGXSXNXm.a =.` ` ` ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W R %.= HXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHX6.d W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ W i &XjXNXfX:X].B.q.T t a d e K.VXSXGXGXDXaXd.W e.e.d E.VXSXGXGXDXvXw.W =.` ` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W %.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXK X.T W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ a ) uXDXSXFXFXCXNXfX:X_.B.q.r .XFXGXGXGXCX3X=.=.e.,.~ %XCXGXGXGXCX1XW ` =.` ` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W T $.m HXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHX5.R W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ t x.NXSXGXGXGXSXSXDXFXCXNXmX8XcXSXGXGXGXCXW.e :.e.=.t.uXFXGXGXSXVXE.d :.=.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W W R %.HXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHX^ X.T W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ ` t T.VXSXGXGXGXGXGXGXGXSXSXFXGXGXGXGXGXGXFX}.9.' W e v.VXSXGXGXSXNXm.d :.=.=.=.` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W T @.P HXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHX1.R W W W W W W W W W W W W W W W W E E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ s ;XNXAXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXFXNX>X|.V.XXFXGXGXGXFXbXy.~ :.:.=.=.` ` ` ` ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W W R %.HXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXH X.T W W W W W W W W W W W W W W E E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` R ' $XsXNXVXFXSXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXFXCXCXFXSXGXGXGXCXOXa :.:.:.=.=.=.` ` ` ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W T $.c HXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHX1.R W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` ~ t.V.`.5XVXFXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXFX<X_ d d =.:.=.=.` ` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W R $.HXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHX8 $.T W W W W W W W W W W W E E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` =.=.~ f a a W b.xXFXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXFXmX~.x.T a =.:.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W T $.3 HXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHX-.W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` =.=.=.=.=.:.:.:.` e y.MXFXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXFXCXhX*Xn.p a :.=.` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W ~ O.HXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHX1.R W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` =.` =.=.=.:.:.:.:.:.:.:.a .XFXGXGXGXGXGXGXGXGXGXFXFXSXSXGXGXGXGXGXGXGXGXGXGXGXSXAXCXhX%Xq.t ~ =.` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W R %.HXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXb @.T W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` =.=.=.=.=.:.:.:.:.:.:.:.e.d [.CXGXGXGXGXGXGXGXGXSXZXnXNXNXBXDXSXSXGXGXGXGXGXGXGXGXGXSXAXCXhXH.t W :.` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W T @.x HXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHX<.R W W W W W E E E ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ~ ` ` ` ` ` =.=.=.=.=.:.:.:.:.:.:.:.:.e.=.' >XFXGXGXGXGXGXGXGXSXCX{.e.P.'.2XvXNXBXDXSXGXGXGXGXGXGXGXGXGXSXDXjX~.y W =.` ` ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W W @.HXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHX: 1.R W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` =.=.=.=.=.:.:.:.:.:.:.:.:.e.e.e.~ s.fXDXGXGXGXGXGXGXGXSXNXD.f =.=.,.M.L.oXaXVXDXSXGXGXGXGXGXGXGXGXGXAXVX(.t ~ ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W R %.  HXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXl #.T W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` =.=.=.=.:.:.:.:.:.:.:.:.:.e.e.e.e.r.W H.NXSXGXGXGXGXGXGXGXDXzXg.r.f.f.f.r.=.=.g.`.fXBXAXGXGXGXGXGXGXGXGXGXAXjXH.t =.` ` ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W T $.6 HXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHX~ ..W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` =.=.=.=.=.:.:.:.:.:.:.:.e.e.e.e.e.e.e.r.W |.CXGXGXGXGXGXGXGXGXBX1X,.f.f.f.f.h.h.f.,.~ d.3XVXAXGXGXGXGXGXGXGXGXGXDXsX' f ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W ..~ HXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHX$.R W W W W W E ~ ~ ~ ~ ~ ` ` ` ` ` ` =.=.=.=.=.=.:.:.:.:.:.:.:.e.e.e.e.e.r.r.r.,.w.>XFXGXGXGXGXGXGXGXSXNX`.=.f.h.h.h.h.f.f.f.f.=.~ ,XVXSXGXGXGXGXGXGXGXGXSXVXT.y ` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W R $.HXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXX %.T W W W W W E ~ ~ ~ ~ ~ ` ` ` ` =.=.=.=.=.:.:.:.:.:.:.:.:.e.e.e.e.e.e.r.r.r.u.=.x.fXDXGXGXGXGXGXGXGXSXmXA.,.h.h.h.k.k.h.f.f.f.f.:.~ 5XFXGXGXGXGXGXGXGXGXGXCX:XW ~ ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W T $.. HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHX8 $.T W W W W W W E ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.:.:.:.:.e.e.e.e.e.r.r.r.r.r.u.u.~ K.NXSXGXGXGXGXGXGXGXDXzXj.r.k.k.k.k.k.h.f.f.f.f.f.W V.VXSXGXGXGXGXGXGXGXGXDXuXw.f ` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W T $.3 HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXY ..W W W W W W W E ~ ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.:.e.e.e.e.e.e.r.r.r.r.u.u.u.u.~ |.CXGXGXGXGXGXGXGXGXBX2Xr.f.k.k.k.k.k.k.h.f.f.f.f.,.d.bXFXGXGXGXGXGXGXGXGXDXfXd.d =.` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W O.P HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXO.W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` ` =.=.:.:.:.:.e.e.e.e.r.r.r.r.r.r.u.u.u.u.r.w.>XFXGXGXGXGXGXGXGXSXNX'.,.k.k.k.k.k.k.k.h.h.f.f.f.e.y.kXFXGXGXGXGXGXGXGXGXDXfXg.d =.` ` ` ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W O.HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHX$.R W W W W W W W W E ~ ~ ~ ~ ~ ` ` ` ` =.=.=.:.:.:.:.e.e.r.r.r.r.u.u.u.u.u.u.f.=.b.fXDXGXGXGXGXGXGXGXSXmXJ.r.k.k.k.k.k.k.k.h.h.f.f.f.:.s.mXFXGXGXGXGXGXGXGXGXDXpXy.R =.` ` ` ~ ~ ~ ~ ~ E E W W W W W W W W W W W W W W W W W $.HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHX1.R W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.e.e.e.r.r.u.u.u.u.u.u.u.f.=.K.NXSXGXGXGXGXGXGXGXFXxXM.u.k.k.k.k.k.k.k.k.h.f.f.k.~ K.VXSXGXGXGXGXGXGXGXGXCX5X=.~ =.=.` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W $.HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHX+ $.T W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.e.e.e.r.r.u.u.u.u.f.f.f.=.|.CXGXGXGXGXGXGXGXGXFX<X~ u.k.N.N.N.k.k.k.k.k.k.k.=.;.uXFXGXGXGXGXGXGXGXGXSXBXoXR =.=.=.` ` ` ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W T $.O HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXl @.T W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.e.e.e.r.r.u.u.u.u.f.f.u.t.>XFXGXGXGXGXGXGXGXGXFX9XA.b.u.r.r.u.u.h.h.h.u.r.O.w.:XCXSXGXGXGXGXGXGXGXGXSXhXL.a :.=.=.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W T $.* HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXV X.T W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.e.e.e.r.r.u.u.u.u.f.,.b.fXFXGXGXGXGXGXGXGXGXSXFXVXpX*X[.R.V.M.g.d.d.g.b.T.pXCXSXGXGXGXGXGXGXGXGXGXDXpXe.~ :.:.=.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W T $.; HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHX| O.T W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` ` =.=.:.:.:.:.:.e.e.r.r.u.u.u.u.f.=.K.NXSXGXGXGXGXGXGXGXGXGXGXSXFXFXBXNXmXuX>X3X3XyXmXVXFXSXGXGXGXGXGXGXGXGXGXAXhXE.d :.:.:.=.=.` ` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W T @.h HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXc @.T W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ` ` ` ` =.:.:.:.:.:.e.e.e.r.r.u.u.u.u.=.|.BXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXSXSXFXFXFXFXFXSXSXGXGXGXGXGXGXGXGXGXGXAXNX>X~ =.e.:.:.:.=.` ` ` ` ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W @.h HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXk @.T W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` =.=.:.:.:.:.e.e.e.r.r.r.u.u.r.w.>XFXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXZXNXeXe.~ e.:.:.:.:.=.=.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W @.h HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXc @.T W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.e.e.e.r.r.u.u.=.x.fXFXGXGXGXGXGXGXGXGXGXFXFXSXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXFXCXfXoX:.~ r.e.:.:.:.:.:.=.` ` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W @.h HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXc @.T W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ` ` ` ` =.=.:.:.:.:.:.e.e.r.r.r.u.~ K.NXSXGXGXGXGXGXGXGXSXZX6XkXmXNXBXDXAXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGX0X'.S.~ =.u.e.e.e.:.:.:.:.=.=.` ` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W @.h HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXk @.T W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` ` =.=.:.:.:.:.e.e.e.r.r.u.~ |.CXGXGXGXGXGXGXGXGXFX4X,.k.D.Q.,XkXmXNXDXSXSXGXGXGXGXGXGXGXGXGXGXGX<X_ y r.u.r.r.e.e.e.:.:.:.:.=.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W @.h HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXc @.T W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ` ` ` ` =.=.=.:.:.:.e.e.e.r.r.e.;.>XFXGXGXGXGXGXGXGXSXVX{.,.f.u.r.u.N.J.{.5XNXBXAXSXGXGXGXGXGXGXGXGXGXFXMXH.W r.u.r.e.e.e.:.:.:.:.=.=.` ` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W W T @.h HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXo.O.T W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.e.e.e.r.O.s.fXFXGXGXGXGXGXGXGXSXmXJ.r.N.N.N.N.h.r.r.f.J.1XhXBXAXGXGXGXGXGXGXGXGXSXDXjX!.W e.u.r.e.e.e.:.:.:.:.=.=.` ` ` ` ~ ~ ~ ~ ~ E W W W W W W W W W W T @.g HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXB X.T W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` =.=.:.:.:.:.:.e.e.r.W H.NXSXGXGXGXGXGXGXGXDXuXM.u.k.k.N.N.N.N.N.h.,.e.D.>XNXSXGXGXGXGXGXGXGXGXSXZXjXE.W r.r.e.e.e.:.:.:.:.=.=.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W W T $.- HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXl @.T W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ` ` ` =.=.=.:.:.:.:.e.e.r.W |.CXGXGXGXGXGXGXGXGXBX2Xr.h.k.k.k.k.k.k.k.k.k.h.,.,.|.NXZXGXGXGXGXGXGXGXGXGXZXgXV.~ u.e.e.e.:.:.:.:.:.=.=.` ` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W T $.% HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHX@ $.T W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ` ` ` ` =.=.:.:.:.:.e.:.' >XFXGXGXGXGXGXGXGXSXNX{.,.k.k.k.k.k.k.k.k.k.k.k.k.u.~ `.NXSXGXGXGXGXGXGXGXGXSXCX>X=.e.r.r.e.e.:.:.:.:.:.=.=.` ` ` ~ ~ ~ ~ ~ ~ W W W W W W W W W T $.. HXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHX%.R W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ` ` ` ` =.=.:.:.:.:.e.~ s.fXFXGXGXGXGXGXGXGXSXNXJ.,.k.k.k.k.k.k.k.k.k.k.h.h.k.u.O.2XCXGXGXGXGXGXGXGXGXGXAXhXV.~ u.r.e.e.e.:.:.:.:.=.=.=.` ` ` ~ ~ ~ ~ ~ W W W W W W W W W W $.HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHX$.R W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ` ` ` ` ~ :.:.:.:.e.f Z.VXSXGXGXGXGXGXGXGXDXzXM.r.k.k.k.k.k.k.k.h.h.h.h.f.f.k.=.V.NXSXGXGXGXGXGXGXGXGXSXVX`.W r.e.e.e.e.:.:.:.:.=.=.=.` ` ` ~ ~ ~ ~ ~ ~ E W W W W W W W W $.HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXO.W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` =.~ Q a a W =.=.t  XCXGXGXGXGXGXGXGXGXBX2Xr.f.k.k.k.k.k.k.h.h.h.h.f.f.f.f.r.y.kXFXGXGXGXGXGXGXGXGXGXBX,X~ :.e.e.e.:.:.:.:.:.:.=.=.` ` ` ` ~ ~ ~ ~ ~ E W W W W W W W ~ ..HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXI O.W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` a z.-X_.B.q.! u C.NXSXGXGXGXGXGXGXGXSXNX'.=.h.h.k.k.k.h.h.f.f.f.f.f.f.f.f.r.w.5XFXGXGXGXGXGXGXGXGXGXCX2X=.:.e.:.:.:.:.:.:.:.:.=.=.=.` ` ` ` ~ ~ ~ ~ ~ E W W W W W W O.P HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXk @.T W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ t ).jXVXNXaX2X1XBXDXSXGXGXGXGXGXGXGXSXmXA.:.h.h.h.h.h.f.f.f.f.f.f.f.f.f.f.,.d.vXFXGXGXGXGXGXGXGXGXGXCX1X` =.:.:.:.:.:.:.=.=.=.=.=.=.` ` ` ` ~ ~ ~ ~ ~ ~ W W W W W T $.; HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXo %.T W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ` y q.fXZXSXSXFXFXFXSXSXGXGXGXGXGXGXGXGXFXxXj.r.f.h.h.h.f.f.f.f.f.f.f.f.u.u.f.W B.NXSXGXGXGXGXGXGXGXGXSXBXoXW :.:.:.:.:.:.=.=.=.=.=.` ` ` ` ` ` ~ ~ ~ ~ ~ ~ W W W W W W %.  HXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHX$.R W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ` e !.CXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXFX+Xd ,.f.h.h.h.f.f.f.f.f.f.u.u.u.f.,.T :XFXGXGXGXGXGXGXGXGXGXSXNXE.f :.:.:.:.:.=.=.=.=.` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W R $.HXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHX~ ..W W W W W W W W W W W W W W W W W W W W E ~ ~ a _ aXFXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXFX7XV.s.:.=.:.,.u.f.f.f.f.u.u.u.r.~ s ~.VXSXGXGXGXGXGXGXGXGXGXAXhXV.d :.:.=.=.=.=.=.` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W O.E HXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXg $.T W W W W W W W W W W W W W W W W W W W E ~ ~ e G.hXAXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXFXVXpX*X_.Z.x.t.:.` ~ ~ ~ ~ ~ ' x.*XVXSXGXGXGXGXGXGXGXGXGXGXDXuXw.W :.=.=.=.=.` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W T $.; HXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHX  %.R W W W W W W W W W W W W W W W W W W W W ~ d T qXgXBXFXSXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXFXFXBXNXaX>X,X[._.T.T.E.|.:XNXCXSXGXGXGXGXGXGXGXGXGXGXSXVX Xd =.=.=.=.` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W R %.HXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHX@.W W W W W W W W W W W W W W W W W W W W W ~ R ` s.H.oXkXNXNXCXFXSXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXSXDXFXCXCXBXVXVXBXCXFXSXSXGXGXGXGXGXGXGXGXGXGXGXAXhXm.a :.` =.` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W @.HXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXx @.T W W W W W W W W W W W W W W W W W W W W ~ ~ y t a _ g.L.oXkXhXVXCXFXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXGXSXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXBX:Xf ~ ` ` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W T $.h HXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHX%.R W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ d a t a ' s.R.oXnXDXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXZXhXg.y =.` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ E ~ E W W W W W W W W W W R %.HXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXO.~ W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ` ` ~ W a a d ! <XFXGXGXGXGXGXFXSXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXAXjX`.y ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E E W W W W W W W W W W W W ..O.HXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHX; $.T W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` =.~ p 2XFXGXGXGXSXZXMXNXVXFXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXZXjX%Xa W =.` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W T %.= HXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHX%.R W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ` ` =.d a.mXSXGXGXSXCXY.:.U..XkXDXSXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXGXSXAXBXjX Xa d =.` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W R $.HXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXv $.T W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ` ` ` a C.NXSXGXGXDXNXg.a ~ ~ ~ '.FXGXGXGXGXFXFXFXDXDXSXSXSXSXSXSXSXSXDXBXhXuXZ.y d ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W T $.x HXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHX%.R W W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ` ` =.i ].CXGXGXGXCX5X:.:.r.r.d [.FXGXGXGXFXlXXX3XzXmXNXNXNXNXNXNXNXfXuX,XJ.~ t ~ ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W R %.HXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXP @.T W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ~ E :XFXGXGXGXVX|.R e.r.:.w.yXFXGXGXSXCX'.e ` t.g.m.J.L.R.R.L.A.x.;.d t f ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W T @.m HXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHX%.R W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ` a q.fXDXGXGXSXNXJ.f e.r.~ x.hXSXGXGXSXNXV.d ` W f d d a a a a a a d ~ ` ` ~ ~ ~ ~ ~ ~ ~ ~ E E W W W W W W W W W W W W W W W W W W W W W R %.HXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXP $.T W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ` t C.VXSXGXGXDXfXg.W e.r.f K.VXSXGXGXDXbXt.W :.:.:.=.=.=.` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ E E W W W W W W W W W W W W W W W W W W W W W W T $.v HXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHX%.W W W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ t ].CXSXGXGXFX3X` =.e.e.R ).CXGXGXGXCX2XW ` =.=.=.` ` ` ` ` ` ~ ` ~ ~ ~ ~ ~ ~ ~ ~ ~ E E W W W W W W W W W W W W W W W W W W W W W W W W %.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHX* %.R W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ R Q wXNXAXSXSXVX[.d :.e.=.;.yXFXGXGXSXVX`.a =.=.=.` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W T %.* HXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX@.O.T W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ d ' @XyXNXVXNXdXZ.d :.e.R s.NXSXGXGXSXNXV.a =.` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W W W W W W W W T O.@.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX5.R W W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ! ~ d ' b.W.%XrXd.R :.:.a K.NXSXGXGXFXbXw.f =.` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E E W W W W W W W W W W W W W W W W W W W W W W W W W W W R 5.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXg %.R W W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ d a y R w.:.=.:.=.R =XgXDXSXAXBX1XR ~ ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W W W W W T %.w HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX+.@.T W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ` ` ` ~ R ` :.:.=.` K.%XzXNXNXgXE.y ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T @.o.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX%.~ T W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ` ` ` ` =.=.:.:.:.d d ;.b.R.&Xv.a ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T ~ %.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX4.R T W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ` ` ` ` =.=.=.=.=.` R a y R ~ ` ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T R 5.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX& %.R W W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ` ` ` =.=.` ` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W R 4.$ HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXk %.R W W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ` ` ` ` ` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ E E E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W R %.g HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXM %.R W W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W R %.n HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX{ $.R W W W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ` ` ` ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W R $.U HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX{ $.R W W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ` ` ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W R %.M HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXM %.R W W W W W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W R %.n HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXk %.R T W W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T W %.g HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX* 4.~ T W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T ..4.# HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX%.@.T W W W W W W W W W W W W W W W ~ ~ ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T @.%.HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX .%.R T W W W W W W W W W W W W W E ~ ~ ~ ~ ~ ~ ~ E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T R %.} HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX7 4.O.T W W W W W W W W W W W W W ~ ~ ~ ~ E E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T O.%.- HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX+.%.W T W W W W W W W W W W W E ~ E E W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T W %. .HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX- %.@.R T W W W W W W W W W W ~ W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T R $.%.* HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXk %.@.R T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T R @.%.j HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXn %.@.R T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T W @.%.n HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXk $.$.~ R T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T R ..$.$.j HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX- O.%.@.W T T W W W W W W W W W W W W W W W W W W W W W W W W W W W W W W T T W @.%.O.* HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXk @.%.$.O.R T T W W W W W W W W W W W W W W W W W W W W W W T T R O.$.%.@.h HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX; E $.%.$.O.~ W W T T T T T T T T T T T T T T W W W O.$.$.$.E ; HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX  ; P ..$.$.$.$.$.@.@.@.@.@.@.@.@.$.$.$.$.$.O.P ; . HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXO % ; g h h h h h h h ; % O HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\",\n-\"HXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHXHX\"\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}  .  X .  ..}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} XoooooOoOooooooOoooooX }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}ooooooooOooooooooooooooooooOoooX}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}XoOoooOOoOooooooooooooooooOooooOoooooX}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}.ooooooooooooooOoooOooOooOOooooOooooooOooooX}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} o@oOOooooooooooooooooooooOoOooooooooooooooooooOX }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}XoooooooooooooooooOooooooXXXXXXoooooooooooOoOOoOoooooX}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}XoOoooooooooooooooXXo+@%*--:,,:;-&%#ooo.oooooooOoooOooooO }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} ooooooooooOoooo  o*5rcVKT!~~^^^^~!!TKVcr5*o  ooooooooooooooo }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}oooooooooooooo  #5gST`'[{{[[{[[[[{[[[[{{{`_TAg6#. XoooooooooooOo}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} ooooooooooooXo$9nI`[{['][[][[[[[[]][[[[[[[[[{{[)Un9%Xooooooooooooo }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}oooOooOooooo o,kI`{{['['[[[][[[[[[[[[[[[[[[[[][[[]{{'Ik,X oooooooooOOo}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}XoOooooooooooo6B^'{'''[[[[[[{[[[{[{[{[{[{{[[{[][]][[][[{[^B6oooOoooooooooX}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}oooooooooooo@9D`[[[[[{[''{][{'[{{[['{[{{[{[[{[{[{][{''[[[[[{`A9@oooooooOoooX}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}oOoooooooooo4A`{]'[[[[[{'{]{'{]{{[{{{{{]{{{{{{{[{[{{]{[{[[[[''{_A4ooooooooOooo}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}ooooooooooo-c/['[[[[]][['{[{{{{{{[{{{{{{{{{{{{{{{[{[{{[]['[[[[''[{^c-ooooooooooo}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}OooooooooooqY][''[[[['{{][{{[{{{{{{{{{{{{{{{{{{{{{{{{{[{{{{{'{[[[['{[IqooOoooooOoo}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}ooooooOoo %m`'''['[{][{{{{{{{{{{{{{[`/~QQW!!~~/']{{{{{{{{{{{{][[[['''[[`m% oooooOooo}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}ooooooooo.5I[''[[['{[{[{[{{{{{{{(!YKGDACCDCBBCCZAGJU!`'{{{{{{[{{{[{{][[]]]I5.ooooooooo}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}oooooooooot^{'[[[['{[[{{{{{{{'~YHZBBBBCCCCCCCCCCCCVBBBCG!{{{{{{{{{{[{'[[[['[^toXoooooooo}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}oooOooooook'['[[[[{{[{{{{{{{/YGCBCCCCCCCCCCCCCCCCCCCBBALW`{{{{{{{{{{{{[{[{[{[['kooooOoooOo}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}oOooooooo$m][]{']]{{{{{{{{'~LNBBCCCCCCBCCCCCCCCCCCCVZJT`{{{{{{{{{{{{{{{{[{{]][[[]N$ooooooooO}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}ooooooooo%V[[[[['{['{]{]{{~LDNDCCCCZDDDDDDCDDCDDCDDGT/{{{{{{{{{{{{{{{{{{{{[[{[[[[[]Z%ooooooooo}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}ooooooooo%A{[[[[]{]{{{{{{(LDCCDMCZCCMzhzkkkkhzzzhzcCSGHGHGHGGGG){{{{{{{{{{{{{][][[[[]A%XoooooOoX}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}} ooooOooo$Z[][[[[]{{[{{{'YDNCCCDNCCCDeXooooooooXoOOOO++++OO+++O$Y{{{{{{{{{{{{{{{{{[[[]{Z$ooooooo+ }}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}oooooooooM'''[[{[]{{{{{(HBCCCNDNDDBCC3Xooooooooooooooooooooooo 3){{{{{{{{/){{{{{]{[[[][{mOoooooOoo}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}oooooooook'''{{[[{{{{{'WDNCCDCDNDNBBDM%oOoooooooooooooooooooOOo p{{{{{{`WJAAW{{{{{{[{[[][[loooOooooo}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}oooo@oooot'['[[['{{{{{]UCBDCCBCNDNDBDDhooOyVVVVBBVVCZZZZZZZVVwoooA{{{'!LABBCCCI]{{{{[[[{[[['uXoooooooX}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}ooooooo 5^[[[''{{[{{{'LBBBDCCCCDNDNDNDq.O#P{{{{{{{{{{{{{{{{{{rXo*E[/YGCBCCCCCCCL]{{{{{[[][[[^5 oooOooo}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}oooooooX%I[[[[[{[{{{{`JBCCCZCCCCCCCBCGI5Xo3/{{{{{{{{{{{{{{{{{^>oX6WHCBBCCCCCCZCZBJ`{{{[{][[[[{I%oooooooo}}}}}}}}}}}}\",\n+\"}}}}}}}}}}} ooooooo+m[[[[[{[{{{{`HBCCCCCZCCCCBDL~[E%oXr{{{{{{{{{{{{{{{{{{H@OXqCNCCCCCCCCCCCCZBJ'{{{{{[]{[[[moooooooo }}}}}}}}}}}\",\n+\"}}}}}}}}}}}oOoooooow`][{]{[{{{{`JBCCCCCCCCBZJW`{{{ZoooB{{{{{{{{{{{{{{{{{{cXoOhDBCCCDCCCCCZZCCCBJ'{{{{[{][''`rXooooooo}}}}}}}}}}}\",\n+\"}}}}}}}}}}oooooooo-T[][[[[{{{{]LCZCCCCCCAHY({{{{{{p.o$I{{{{{{{{{{{{{{{{{]0Xo%MDBCCCCCCCCCCCCCZCNK{{{{{[{[''{T-oooooooo}}}}}}}}}}\",\n+\"}}}}}}}}}}OooOoooon{'[]]{[{[{{UBCCCCBCGI/[{{{{{{{`4Xo5`{{{{{{{{{{{{{{{{{~:o.3DBBDCCCCCCDCCZCBCDL~{{{{{[['[[[{noooooooo}}}}}}}}}}\",\n+\"}}}}}}}}}XooooooX6^['[[{{{{{{WBCCCBDL!'{{{{{{{{{{Y$o.u{{{{{{{{{{{{{{{{{{G@oXeDBDBCCCCCCCZBBDJ!`{{{{{{{{{{'[[[^5ooOoooo.}}}}}}}}}\",\n+\"}}}}}}}}}ooooooo@D{'[[{[{{{{/ACBCHW){{{{{{{{{{{{{mXooZ{{{{{{{{{{{{{{{{{{goo+zDCCCCCDCCBBZHY({{{{{{{{{]{{{[[[[{A@ooooOoo}}}}}}}}}\",\n+\"}}}}}}}} ooooooo9`'''{[[[{{'HBGU(]{{{{{{{{{{{{{{[r o*R{{{{{{{{{{{{{{{{{'0Xo-BACCCDBBBBDI^[{{{{{{{{{{{{{{{[{['[`9ooooooo }}}}}}}}\",\n+\"}}}}}}}}ooooooo+F{'[[[{{{{{!K~[{{{{{{{{{{{{{{{{{/:XX7`{{{{{{{{{{{{{{{{{!-oX6AZCCCNBAKW'{{{{{{{{{{{{{{{{{{[[[''{Foooooooo}}}}}}}}\",\n+\"}}}}}}}}oooOoO 7`[[[[[[{{{{[{{{{{{{{{{{{{{{{{{{{K+OXg{{{{{{{{{{{{{{{{{{A+ootACBBCHT`{{{{{{{{{{{{{{{{{{{{{{[{{[[`8 oooooO}}}}}}}}\",\n+\"}}}}}}}ooOooooXV{[[[{[{{{{{{{{{{{{{{{{{{{{{{{{{{c ooG{{{{{{{{{{{{{{{{{{dXo@xZBDI~[{{{{{{{{{{{{{{{{{{{{{{{{{{[['{CooooOOoo}}}}}}}\",\n+\"}}}}}}}Oooooo.3/[[[[[{{{{{{{{{{{{{{{{{{{{{{{{{{`9Xo-!{{{{{{{{{{{{{{{{{`5Xo:CL!'{{{{{{{{{{{{{{{{{{{{{{{{{{{{[[''{^1ooooooo}}}}}}}\",\n+\"}}}}}} OOooooXl{[[{{[{{{{{{{{{{{{{{{{{{{{{{{[^IC%o 9[{{{{{{{{{{{{{{{{{T$oXt){{{{{{{{{{{{{{{{{{{{{{{{{^!{{{{][{[[{lXoooooo }}}}}}\",\n+\"}}}}}}Xoooooo$Y[][[[{{{{{{{{{{{{{{{{{{{{{{(YHAAd+o k{{{{{{{{{{{{{{{{{{VoooV{{{{{{`{{{{{{{{{{{{{{{{(TJAC~{{{{[][[[U$oooOooo}}}}}}\",\n+\"}}}}}}Ooooo+.9'']][{{{{{{{{{{{{{{{{{{{{`WJABCCA0oo@K{{{{{{{{{{{{{{{{{[y o&T{{{/Grc{{{{{{{{{{{{{`!KDBCCBL{{{]{[{[''0 oOoooo}}}}}}\",\n+\"}}}}}}oOoooo m{'{[[[]{{{{{{{{{{{{{{{'~KACCCCCCB2oo:^{{{{{{{{{{{{{{{{{`,oX6']Il3@.V{{{{{{{{{{[^UDCBCCCCCZ/{{{{[]]'{m oooooo}}}}}}\",\n+\"}}}}}.oooooo#T[[[{{[{{{{{{{{{{{{{[/IFCCCZCCCCAb%o r[{{{{{{{{{{{{{{{{{I$oorB9$oXo&T{{{{{{{[(TGDBCCCCZCCCBU{{{{{]{[[T#ooooooX}}}}}\",\n+\"}}}}}oooooo 6`[[[[]{{{{{{{{{{{{)THCBBCCCCCCZCDaoooM{{{{{{{{{{{{{{{{{{mooo@o oooX8`{{{{{)!HCBCCBCCZCCCCCCG]{{[[{[[[`6 ooooOo}}}}}\",\n+\"}}}}}+oOooo g[[[[]{{{{{{{{{{'!KACCCCZCCCCZCCCA0oo#I{{{{{{{{{{{{{{{{{{e oooooooood{{{[~PDBBCCCCCCZCCCCCCCZ^{{{{[[[[[g ooOoo+}}}}}\",\n+\"}}}}}oooooooS{[[{{{[{{{{{[/PFCBCCCCCCCCCCCZCCB>o.3({{{{{{{{{{{{{{{{{^:ooooo$-oo+F{/YGCVCCCCCACCCZCZCCZCCBU{{{{{[['{Sooooooo}}}}}\",\n+\"}}}} oooooo-R[[[{[{{{{{(THBBCCCZCACZCCCCCCCCZc@OXu{{{{{{{{{{{{{{{{{{K@oo@4kI0 o&HLCBCCZCCCCCCACCCZCCCCCCBH]{{{{][[[R-XooOoo }}}}\",\n+\"}}}}oooooo 5`[[[][{[{'LABCCCCZCCCCCCCZCZCCCCAuOoXZ{{{{{{{{{{{{{{{{{{g -tG`{/-oo,CBCCCCCCCCCCCCCCCCCZCCCBAP[{{[[{{[[)5Xoooooo}}}}\",\n+\"}}}}ooooooXt''[{[{{{{!BCCCCZCCCCCCCCCZCCCCCCZ9Xo%T{{{{{{{{{{{{{{{{{{cn!{{{{G@oXqDCCCCCCCCCCCCCCACCCCCAHT`{{{{{[{[[[]rXoooooo}}}}\",\n+\"}}}}oOoooooc['[[]{{{{IBCZCCCCCZCCCZCCCCZCBAJK<oX6]{{{{{{{{{{{{{{{{{{[{{{{{{z.ookDCZCZCCCCACCCCCCCBCGY/[{{{{{{{{[[[[{cooooooo}}}}\",\n+\"}}}}oOoooooZ{[[[{[{{{KBCCCCCCCCCCZCCCCBBDP~{I%o d{{{{{{{{{{{{{{{{{{{{{{{{{'0Xo$NACCCCZCCCCCCCCBCDL~'{{{{{{{{{{{{{[[{V+oo+ooO}}}}\",\n+\"}}}XooooOo$K[[[{[{{{]DBCCCCCZCZCCCCCCAK!`{{{mooOG{{{{{{{{{{{{{{{{{{{{{{{{{!-o.4ACZCCCCCCCCCCCAJW`{{{{{{{{{{{{{[{[][{K@oooooo }}}\",\n+\"}}} Oooooo%T{[[[[{{{`DCCCCZCCCCCBBCHT`{{{{{{rXo;~{{{{{{{{{{{{{{{{{{{{{{{{{G+oXrDCCCCCCZCCBCGY/{{{{{{{{{{{{{{{{{[[[][T%oooo+o.}}}\",\n+\"}}}.oooOoX*![[[[[{{{(ZCCZZCCZCBBDI~{{{{{{{{!:oX0'{{{{{{{{{{{{{{{{{{{{{{{{{dXo@zZCCCCZCCBDL~[{{{{{{{{{{{{{{{{{{{{{[]]!*Xooooo }}}\",\n+\"}}} oooooo-![][{{{{{^CCCCCCBCDL!`{{{{{{{[Tc3oooc{{{{{{{{{{{{{{{{{{{{{{{`Ja%oo-BCCCCBVZJ!`{{{{{{{{{{{{{{{{{{{{[{{{[[{!*oOoooO.}}}\",\n+\"}}}XoooooX-~[][[[{{{~CCCBCZHT({{{{{{{{EB0$XXoo@K{{{{{{{{{{{{{{{{{{{{'Yc6@ ooX6DCBBCHY`[{{{{{{{{{{{{{{{{{{{{{{{{[][[]~-XoOooo }}}\",\n+\"}}} oooOoo;![{[{{{{{!BBCGU/{{{{{{{{{!t-oooooo@9/{{{{{{{{{{{{{{{{{{~B0%oXoooo@aCCGI^[{{{{{{{{{{{{{{{{{{{{{{{{{{{{{[[{~-oooooo.}}}\",\n+\"}}} OooooX;~[[[[[{{{!DP~'{{{{{{{{{{{g ooo o,uG){{{{{{{{{{{{{{{{{{T:o oooo@,exDL!'{{{{{{{{{{{{{{{{{{{{{{{{'~`{{{{[[[[~;XOoooo }}}\",\n+\"}}} oOoooX-~[[[{[{{{''{{{{{{{{{{{{{`7ooo%qV^{{{{{{{{{{{{{{{{{{{{{n.oooo-8dBK!`{{{{{{{{{{{{{{{{{{{{{{{{[/YGC!{{{[{[[{~-XoooooX}}}\",\n+\"}}} oooooo-~[[[[{{{{{{{{{{{{{{{{{{{R-oo9T[{{{{{{{{{{{{{{{{{{{{{{{rooO4aMGY/{{{{{{{{{{{{{{{{{{{{{{{{{`THACCB!{{{{][[[~-ooooOo }}}\",\n+\"}}}.oooOoo-![[[{[{{{{{{{{{{{{{{{{{{ZoooV{{{{{{{{{{{{{{{{{{{{{{{{/,oX,GY^'{{{{{{{{{{{{{{{{{{{{{{{{'!KDBVCCCB~{{{[{['{!-.oooOo }}}\",\n+\"}}} oOoooo-!{[[[[{{{{{{{{{{{{{{{{{{u.o%U{{{{{{{{{{{{{{{{{{{{{{{{K@o u'{{{{{{{{{{{{{{{{{{{{{{{{[~IFCBCCCCCCC/{{{{{[['!*oooooo }}}\",\n+\"}}}.oooooo%E[[[{{{{{{{{{{{{{{{{{{{`3XX5`{{{{{{{{{{{{{{{{{{{{{{{{voooG{{{{{{{{{{{{{{{{{{{{{{{(YGCCCCZCCCCCCD({{{{''[[Q&oooooO.}}}\",\n+\"}}} oOoOoo$I[[[[[{{{{{{{{{{{{{{{{'G#o.d{{{{{{{{{{{{{{{{{{{{{{{{[qoo*!{{{{{{{{{{{{{{{{{{{{'QKABCCCCCCCCCCCCD`{{[[{['{I$ooOooo }}}\",\n+\"}}}}oooooX@G{[[[]{{{{{{{{{{{{{`!KGroooA{{{{{[{{{{{{{{{{{{{{{{{{^,o 9]{{{{{{{{{{{{{{{{{'~IDCBCCCCCCZCZCCCCBH[{{{{[[[{G@oooooo}}}}\",\n+\"}}}}ooOooooB{[[{[{]{{{{{{{{[/UDCCZ5oo-!{{'YkV{{{{{{{{{{{{{{{{{{G#o.c{{{{{{{{{{{{{{{{/TGCBCCCCCCCCCCCCCCCCBP{{{[{[[[{Booooooo}}}}\",\n+\"}}}}oooooOXg[[[[{{{{{{{{{(THDBCCZM-o 9`!B0%oV{{{{{{{{{{{{{{{{{{cXo+K{{{{{{{{{{{{{)WKDBBBCCCCCCCCCCCCCCCCCBT{{{{][[[[g.ooOooo}}}}\",\n+\"}}}}ooooooX0'[[[[]{{{{`!KDCBCCCCDk@oo9y>ooX*T{{{{{{{{{{{{{{{{{'9Xo1){{{{{{{{{{[^PGACCCDZDAAAAAAAAZZCCCCCCB~{{{[{[{[`0ooooooo}}}}\",\n+\"}}}}XoooooX1/][{{[{[{'GVCCZCCCCCAeooOoXoOoX6'{{{{{{{{{{{{{{{{{!-OX7GJJGJJHKKGBcddhhhhhhhdddhhhdhhMACCCCAHT{{{][{[[[/3.oooooX}}}}\",\n+\"}}}} ooOOoX$I][]]{{{{{JBZCCCCCCCC3oooOooo+.d{{{{{{{{{{{{{{{{{{A+O++@@#@@#@@@@+o@o@@o@@O@@+@O@@@o#cZBBGI/[{{{{{{][[]I@ooooOo.}}}}\",\n+\"}}}}}ooooooXB{[[['{{{{WBCCCCCCCAM$oooX@@oooG{{{{{{{{{{{{{{{{{[d oOOooooooooooooooooooooooooooooo>MAK~'{{{{{{{{[{[[{Booooooo}}}}}\",\n+\"}}}}}OOooo+ r[[[{{]{{{(ACCCCCCCAho.o=9h3Xo*!{{{{{{{{{{{{{{{{{`4 XXXXooXoooXoo.Xooo.ooXooo.Xoooo.qW`{{{{{{{{{[{{[{[[r oooooO}}}}}\",\n+\"}}}}}ooooOoX,/['''[{{{{HBCCCZCCD9o3aMKL-o 0[{{{{{{{{{{{{{{{{{'FVVVVVVVVVBBCVVVVBVVVVBVVVVCBCro+XC{{{{{{{{{{{{{[{[]^,.oooooo}}}}}\",\n+\"}}}}}Xoooooo+J{'[[{[{{{WCZCZCCACscGY~]FOo c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tXo$T{{{{{{{{{{{{[[[[{JOoOoooO }}}}}\",\n+\"}}}}}}oooooo d[[[[{[{{{'DBCCCCBAI~`{{{gXo@K{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{^3o 6'{{{{{{{{{{{{[{[[{d oooooo}}}}}}\",\n+\"}}}}}}ooooooX3/['{'{[{{{YBCBAHT){{{{{]7Xo,/{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{I$o d{{{{{{{{{{[{{{[[[/1.ooOooo}}}}}}\",\n+\"}}}}}}Xoooooo@G{[[[{{{[{)DGU/{{{{{{{{T%o r[{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{noooG{{{{{{{{{{{]['[[{G+OoOOoOX}}}}}}\",\n+\"}}}}}}}oOooOo t[[[[[[{{{{)'{{{{{{{{{{Vo+.n{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{[woX-~{{{{{{{{{{{{{[[][r oooooo}}}}}}}\",\n+\"}}}}}}}ooooooo%T{''[{[{{{{{{{{{{{{{{{dXo@I{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{^,oX0[{{{{{{{{{{{[[[[[T%XOooooo}}}}}}}\",\n+\"}}}}}}}oooOooo g{[[[]{[{{{{{{{{{{{{{`5X.<`{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{G@oon{{{{{{{{{{{[{{[[{g OooooOo}}}}}}}\",\n+\"}}}}}}}}oOooooX-~['][{[{{{{{{{{{{{{{U%O y{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{kXo#K{{{{'){{{{{{][[[~-XOooooO}}}}}}}}\",\n+\"}}}}}}}}ooooooooc[[''{[{{{{{{{{{{{{{B+oXV{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{]9.o,/{[^IG~{{{[{[][[[cXOooOooX}}}}}}}}\",\n+\"}}}}}}}}}ooOooOo,![[]{[{{{{{{{{{{{{{uXo$T{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{!-XXr(WJZBI{{{{[{[[[[!:o+ooooo}}}}}}}}}\",\n+\"}}}}}}}}}ooooooook[[[[{[[{{{{{{{{{{!3oX5/''[[][[[[[[[['[[[[[[][][[[[[[]][][[[[]][[[[[[[[[A+ooaGBBVH'{{{{{[[[[{koooooooo}}}}}}}}}\",\n+\"}}}}}}}}}}ooooooo*I[[[[{{{{{{{{{[~Ic#oo-9989899998799989999899978999997789999897899989879,oo@cZCCD/{{{{]{[[[[I-ooooO+o}}}}}}}}}}\",\n+\"}}}}}}}}}}oooooooor'[[[[[[{{{{{YGCZroOooX......X....XX..X..X..XX...X.XXX...X..XX...XX...XXoo>BZCA~{{{{[{][[[`r.ooooooo}}}}}}}}}}\",\n+\"}}}}}}}}}}}ooooooo@Z{[[[{{{{[{{TBBZ5 oooXoooooXooXoooXXXoo.XoXXXo.XoXXXoo.XoXXXoooooXoooXoo 9ACCW{{{{{[[]{[{Z@ooooooo}}}}}}}}}}}\",\n+\"}}}}}}}}}}}OOooOoOo,W[[[][{[{{{{TCB8,2,,<<,<<<<<3,,,379777977779799797977997799953<<<,1,112,jCCT{{{{{][{][[E,oooooOoO}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}Ooooooo r`'[]{]{{{{{{YBBCCCCVCCBCCBBBCJT/`''`''`''''''`'`'`''''`])!IFCCCVCCCVVVBCCT{{{{[{{][][`rXooOooo+}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}.Oooooooon{'][[][{{{{{TCCVCZZVZZCBVFI/{{{{{{{{{{{{{{{{{{{{{{{{{)TGAVCCVZVZCZCZCCZW{{{{{{[[]{[]mooooooooX}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}ooooOoOo#J{'[[{{{{{{{{WABCCCBBBAL~[{{{{{{{{{{{{{{{{{{{{{{{{`!KDBCCCCZZCCZCZZCBD!{{{{{{]{[['{J$oooooooo}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}Oooooooo,R['[[[[{[{{{{~DBBBDHW'{{{{{{{{{{{{{{{{{{{{{{{{'~UDCBCCCZCCCCCCCCCCBF/{{{{{][{'''{W,XOoooOo+}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}Xooooooo.6^[[['{[{{[{{{(KFU({{{{{{{{{{{{{{{{{{{{{{{{{/THBNCCCCCCCZCZCZZCCCCL){{{{][{][[[[~8 oooooooo}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}OooOoooo w/[['[[[{]{{{{{'{{{{{{{{{{{{{{{{{{{{{{{{`!KABCDBCCCCCCCZCCCCCCCDW]{{{{{{{]][[{/q ooOooooo}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}oOoOoooooy({'[[[{[{{{{{{{{{{{{{{{{{{{{{{{{{{{`~PGCCCCDBBCCCCCCCCZZZCCZL/{{{{[{{{[[[[[/tooooooooo}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}Oooooooooy/{'[['{]{{{{{{{{{{{{{{{{{{{{{{{{/YHZCBCCCCCBDCCCCCCCCCBBZJ~{{{{{{{{][[[[{`tooooooooO}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}XooOoooooor/['[{''{'{{{{{{{{{{{{{{{{{{{(WHDBCCCCZCCCCBDCCDBCCCCBCJ!]{{{{{{][{]{[[[^rooooooooo.}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}.oooOooooo0!{[[[]'{[[{{{{{{{{{{{{{{'!LDBBCCCCCCCCCCCCCCCCCCCBZL~]{{{{]{{]{{[[[[{!0oooooooooo}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}XOooooooo 4I{[[[[[{{{]{{{{{{{{{{`PABBCCCCCCZCCZCCCCCCCBBBDGY({{{{{{{][{[{[[[[{Y4 oooOoooOX}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}ooooooooo.-A[{[[[[[[{{[{{{{{{{{(TLFZCBBBBBCBCBCBBBBBZFLW({{{{{{[{{{{{[[[[[[[A- ooOoooooo}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}ooooooooO.@g/['[[[{][[{[{{{{{{{{{'(!YIKGFDDDDDHKIWQ)'{{{{{{{{{{{{]][{[[[[/g@Xooooooooo}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}.oooOoooooX6I[[[[['{]{{[[{[{{{{{{{{{{{{]]`''][{{{{{{{{{{{]]{]{[]{[[[[[[I9.ooooooooo.}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}.ooooooOooX=c^{[['[[{{{[{{{{{{{{{{{{{{{{{{{{{{{{{{{][[{{{[{{[][[[][{^c%XooooooOoo.}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}oOooooooOooo6S`[']''[[]{{[[{{[[{{{{{{{{{{{{{{{]{{{{{{{]{{[[[[[[[[`S6oooooooOoooo}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}} ooooooooooX@wK'{[[[[[[][{{[[{{]{]{][{{{{{{{{{{[{]{[{{[[[{]''{'Kw@XoooOoooooo }}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}oOooOooooooX#wJ`{[[[[[[[[{]{]{{{[{{{]{][{[[{'{'{'{'[[[[[[[`Jr$XoooOooooooo}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}.oooooooooOooO9V/[{'[[[[[[{[[[{]{[{['{[[{[[[[[[[[[[''{[/Z9+Xooooooooooo.}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}} ooooOoOooooo o,jL`{{][[[[[][[[[[[][[[[[[[[[{[[[{[{`Kg,o ooooOooOoOoo }}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}oooooooOoooooX.@4gH~[{[{[[[[[[[]][[[[[[[][{{['^Jk5# ooooooOooooooo}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} Ooooooooooooooo O;qcGT/`[{{{{{{{{{{{{]'/TGc0:o .oooooooooooooo }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}XooooooooooooOOXX .O&30icmmBBBVVBmmcu03&oX XoooOooooooooooo.}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}ooooooooo+ooooOOooX..XX.oooOooooXXXXXooO+ooooooooooooOoo}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}ooooooooooXOXOooooooOoooooooooooooooooooooOooooooooo}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} XooooOoOooOoOooOooOoooooooooooOooooOoooooooooo }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}XooooOooooooooooOoooOooOooooOooooooOoooOoX}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}XoOOoooOOoOoooooooOoooOooooo+oooo+o }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} .oOoooooooOooooooooooooooooX }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} XoOooooOooooOooooX }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}} .  .. .  }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\",\n+\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\"\n };"
      },
      {
        "sha": "17f7678a1c46d723722b9dbc9f7e9325f44ad8cd",
        "filename": "share/pixmaps/bitcoin16.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin16.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin16.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin16.png?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "f5becf54fdd93f92b211368f6172f3c2dcc31578",
        "filename": "share/pixmaps/bitcoin16.xpm",
        "status": "modified",
        "additions": 145,
        "deletions": 176,
        "changes": 321,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin16.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin16.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin16.xpm?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,181 +1,150 @@\n /* XPM */\n static char *bitcoin__[] = {\n /* columns rows colors chars-per-pixel */\n-\"16 16 159 2\",\n-\"   c #CA7C1E\",\n-\".  c #CB7D1E\",\n-\"X  c #D1811E\",\n-\"o  c #D0801F\",\n-\"O  c #D1801F\",\n-\"+  c #D3821F\",\n-\"@  c #D7831F\",\n-\"#  c #EE8D18\",\n-\"$  c #F4931F\",\n-\"%  c #D78625\",\n-\"&  c #D88520\",\n-\"*  c #D98521\",\n-\"=  c #D98620\",\n-\"-  c #D78B2D\",\n-\";  c #DF8D2A\",\n-\":  c #DF8F2F\",\n-\">  c #DF943B\",\n-\",  c #D8913C\",\n-\"<  c #D8923E\",\n-\"1  c #DF953E\",\n-\"2  c #E28B23\",\n-\"3  c #E38B23\",\n-\"4  c #EA9023\",\n-\"5  c #EB9023\",\n-\"6  c #ED9122\",\n-\"7  c #ED9123\",\n-\"8  c #EE9123\",\n-\"9  c #EE9223\",\n-\"0  c #F39421\",\n-\"q  c #F19423\",\n-\"w  c #F39523\",\n-\"e  c #F79521\",\n-\"r  c #F59422\",\n-\"t  c #F49623\",\n-\"y  c #F69622\",\n-\"u  c #F79623\",\n-\"i  c #F09324\",\n-\"p  c #F19424\",\n-\"a  c #F19525\",\n-\"s  c #F49624\",\n-\"d  c #F59625\",\n-\"f  c #F49725\",\n-\"g  c #F79624\",\n-\"h  c #F79724\",\n-\"j  c #F69725\",\n-\"k  c #F79725\",\n-\"l  c #F69726\",\n-\"z  c #F79726\",\n-\"x  c #F89621\",\n-\"c  c #F89722\",\n-\"v  c #F89723\",\n-\"b  c #F89724\",\n-\"n  c #F89824\",\n-\"m  c #F89825\",\n-\"M  c #F99825\",\n-\"N  c #F89925\",\n-\"B  c #F89926\",\n-\"V  c #F89927\",\n-\"C  c #F99927\",\n-\"Z  c #F0972E\",\n-\"A  c #F7992A\",\n-\"S  c #F79A2B\",\n-\"D  c #F79B2C\",\n-\"F  c #F69A2D\",\n-\"G  c #F79D2F\",\n-\"H  c #F89929\",\n-\"J  c #F89A28\",\n-\"K  c #F89A29\",\n-\"L  c #F99A29\",\n-\"P  c #F99B29\",\n-\"I  c #F89A2A\",\n-\"U  c #F89A2B\",\n-\"Y  c #F99B2B\",\n-\"T  c #F89B2C\",\n-\"R  c #F89C2C\",\n-\"E  c #F99C2D\",\n-\"W  c #F99C2E\",\n-\"Q  c #F89D2E\",\n-\"!  c #F99D2F\",\n-\"~  c #E29335\",\n-\"^  c #E49639\",\n-\"/  c #E2983F\",\n-\"(  c #F79F35\",\n-\")  c #F99E31\",\n-\"_  c #F89E32\",\n-\"`  c #F99E32\",\n-\"'  c #F9A033\",\n-\"]  c #F9A035\",\n-\"[  c #F9A135\",\n-\"{  c #F9A036\",\n-\"}  c #F9A136\",\n-\"|  c #F9A137\",\n-\" . c #F3A03F\",\n-\".. c #F7A43F\",\n-\"X. c #F8A139\",\n-\"o. c #F9A23A\",\n-\"O. c #FAA33B\",\n-\"+. c #FAA43E\",\n-\"@. c #FAA43F\",\n-\"#. c #EF9F41\",\n-\"$. c #EEA244\",\n-\"%. c #ECA34B\",\n-\"&. c #F8A440\",\n-\"*. c #F9A541\",\n-\"=. c #F9A644\",\n-\"-. c #F9A947\",\n-\";. c #F0A349\",\n-\":. c #F5A648\",\n-\">. c #F1A74E\",\n-\",. c #F7AA4F\",\n-\"<. c #E4A458\",\n-\"1. c #E4A55B\",\n-\"2. c #E8A95E\",\n-\"3. c #F2A950\",\n-\"4. c #F4AA52\",\n-\"5. c #FBAF55\",\n-\"6. c #E4A860\",\n-\"7. c #EAAC63\",\n-\"8. c #EBAF68\",\n-\"9. c #F2AF61\",\n-\"0. c #EBB16C\",\n-\"q. c #F6B568\",\n-\"w. c #E3AF71\",\n-\"e. c #EBBE89\",\n-\"r. c #E0BC93\",\n-\"t. c #E3C199\",\n-\"y. c #E6C59D\",\n-\"u. c #EAC89E\",\n-\"i. c #E7C8A2\",\n-\"p. c #EACBA6\",\n-\"a. c #EBCFAF\",\n-\"s. c #F1CCA0\",\n-\"d. c #E7CEB1\",\n-\"f. c #ECD1B0\",\n-\"g. c #E5D2BB\",\n-\"h. c #E8D2B8\",\n-\"j. c #DFDFDF\",\n-\"k. c #E7D5C1\",\n-\"l. c #E7D7C4\",\n-\"z. c #E5D7C7\",\n-\"x. c #E7DACB\",\n-\"c. c #EADAC8\",\n-\"v. c #E9DCCC\",\n-\"b. c #EDDFCE\",\n-\"n. c #E5DDD3\",\n-\"m. c #E4DFD9\",\n-\"M. c #ECE0D1\",\n-\"N. c #E4E1DD\",\n-\"B. c #EDE3D8\",\n-\"V. c #EAE4DD\",\n-\"C. c #ECE5DC\",\n-\"Z. c #E2E2E2\",\n-\"A. c #E5E2E0\",\n-\"S. c #E4E4E4\",\n-\"D. c #E7E7E7\",\n-\"F. c #EAEAE9\",\n-\"G. c gray92\",\n-\"H. c #EEEEEE\",\n-\"J. c None\",\n+\"16 16 128 2\",\n+\"   c #3D3E3D\",\n+\".  c #3F3F3E\",\n+\"X  c #3E403E\",\n+\"o  c #434343\",\n+\"O  c #444444\",\n+\"+  c #454545\",\n+\"@  c #535353\",\n+\"#  c #565655\",\n+\"$  c #585858\",\n+\"%  c #646560\",\n+\"&  c #656564\",\n+\"*  c #696A68\",\n+\"=  c #696A69\",\n+\"-  c #808180\",\n+\";  c #828382\",\n+\":  c #8A8B8A\",\n+\">  c #8D8E8E\",\n+\",  c #939392\",\n+\"<  c #929393\",\n+\"1  c #939493\",\n+\"2  c #959695\",\n+\"3  c #969797\",\n+\"4  c #979898\",\n+\"5  c #999A9A\",\n+\"6  c #9A9B9B\",\n+\"7  c #9B9C9C\",\n+\"8  c #9D9E9E\",\n+\"9  c #9D9EA0\",\n+\"0  c #A0A1A0\",\n+\"q  c #A0A0A1\",\n+\"w  c #A2A3A3\",\n+\"e  c #A3A3A3\",\n+\"r  c #A2A3A5\",\n+\"t  c #A5A6A5\",\n+\"y  c #A6A6A6\",\n+\"u  c #A6A7A6\",\n+\"i  c #A6A7A7\",\n+\"p  c #A8A9A8\",\n+\"a  c #A8A9A9\",\n+\"s  c #A9A9A9\",\n+\"d  c #AAAAAA\",\n+\"f  c #AAABAB\",\n+\"g  c #ABACAB\",\n+\"h  c #ADAEAD\",\n+\"j  c #AEAEAE\",\n+\"k  c #AEAFAE\",\n+\"l  c #AEAFAF\",\n+\"z  c #AFAFAF\",\n+\"x  c #AFB0AF\",\n+\"c  c #B0B0B0\",\n+\"v  c #B1B2B1\",\n+\"b  c #B8B8B8\",\n+\"n  c #BCBDBC\",\n+\"m  c #BFBFBF\",\n+\"M  c #BEBFC0\",\n+\"N  c #BEBFC2\",\n+\"B  c #BFBFC2\",\n+\"V  c #C0C1C3\",\n+\"C  c #C2C3C3\",\n+\"Z  c #C3C3C6\",\n+\"A  c #C6C7C9\",\n+\"S  c #C7C8C8\",\n+\"D  c #C8C8CA\",\n+\"F  c #C9C9CB\",\n+\"G  c #C9CACC\",\n+\"H  c #CACBCD\",\n+\"J  c #CBCCCD\",\n+\"K  c #CCCDCE\",\n+\"L  c #CCCDCF\",\n+\"P  c #CECFD1\",\n+\"I  c #D0D0D0\",\n+\"U  c #D3D3D3\",\n+\"Y  c #D4D4D4\",\n+\"T  c #D4D4D5\",\n+\"R  c #D5D6D5\",\n+\"E  c #D4D5D6\",\n+\"W  c #D4D5D7\",\n+\"Q  c #D5D6D7\",\n+\"!  c #DADBDA\",\n+\"~  c #DCDDDE\",\n+\"^  c #DFDFE0\",\n+\"/  c #E2E2E1\",\n+\"(  c #E1E1E2\",\n+\")  c #E1E1E3\",\n+\"_  c #E3E3E4\",\n+\"`  c #E3E4E5\",\n+\"'  c #E4E4E5\",\n+\"]  c #E4E5E5\",\n+\"[  c #E5E5E5\",\n+\"{  c #E5E6E7\",\n+\"}  c #E6E6E7\",\n+\"|  c #E7E7E8\",\n+\" . c #E8E8E9\",\n+\".. c #E8E9E9\",\n+\"X. c #E9E9E9\",\n+\"o. c #E8E8EA\",\n+\"O. c #E8E9EA\",\n+\"+. c #EAEAEB\",\n+\"@. c #EAEBEB\",\n+\"#. c #EAEBEC\",\n+\"$. c #EBEBEC\",\n+\"%. c #EBECEC\",\n+\"&. c #EBECED\",\n+\"*. c #ECECEC\",\n+\"=. c #EEEEED\",\n+\"-. c #EDEDEE\",\n+\";. c #EEEEEF\",\n+\":. c #EFEFF0\",\n+\">. c #F0F0F0\",\n+\",. c #F0F0F1\",\n+\"<. c #F1F1F1\",\n+\"1. c #F1F2F1\",\n+\"2. c #F1F1F2\",\n+\"3. c #F1F2F2\",\n+\"4. c #F2F2F2\",\n+\"5. c #F2F2F3\",\n+\"6. c #F3F3F3\",\n+\"7. c #F3F3F4\",\n+\"8. c #F3F4F4\",\n+\"9. c #F6F6F6\",\n+\"0. c #F6F7F7\",\n+\"q. c #F8F8F8\",\n+\"w. c #F9F9F9\",\n+\"e. c #FAFAFA\",\n+\"r. c #FDFDFD\",\n+\"t. c #FEFEFE\",\n+\"y. c #FFFFFF\",\n+\"u. c None\",\n /* pixels */\n-\"J.J.J.J.J.J.J.1 > J.J.J.J.J.J.J.\",\n-\"J.J.J.J.J./ ..| ' ( ~ J.J.J.J.J.\",\n-\"J.J.J.< *.{ V $ r U W _ - J.J.J.\",\n-\"J.J., o.J 0 # <.w.$.F N H % J.J.\",\n-\"J.J.o.T e 1.r.k.x.t.S z B u J.J.\",\n-\"J.^ [ Y ! #.z.H.M.n.0.d n m 2 J.\",\n-\"J.X.) | =. .h.B.5.f.j.;.v B d J.\",\n-\": Q M ` &.>.A.V.p.c.l.4.E n d = \",\n-\"; I b A Z 2.D.s.u.F.a.-.} C w & \",\n-\"J.l g y 6.m.G.q.3.b.Z.,.] D 8 J.\",\n-\"J.3 k c %.d.C.v.N.S.y.@.L a * J.\",\n-\"J.J.j z x 8.i.g.e.9.+.W t 6 J.J.\",\n-\"J.J.+ s h G :.7.O.R B s 7 . J.J.\",\n-\"J.J.J.O i f P L K d p 5   J.J.J.\",\n-\"J.J.J.J.J.@ 9 q i 4 + J.J.J.J.J.\",\n-\"J.J.J.J.J.J.J.X o J.J.J.J.J.J.J.\"\n+\"u.u.u.u.u.u.u.. . u.u.u.u.u.u.u.\",\n+\"u.u.u.u.+ = 3 k k 3 * + u.u.u.u.\",\n+\"u.u.u.$ k |  .^ ( 2.&.k $ u.u.u.\",\n+\"u.u.$ S  .H 9 3 8 t { *.S $ u.u.\",\n+\"u.+ x *.Q ^ f 2. .3 N T 0.v + u.\",\n+\"u.= *.w.7.T b r.! r | 7. . .= u.\",\n+\"u., 2.E Z r I r.I ; m Z A 2.1 u.\",\n+\". k { P J t &.r.E 6 F { 2.w.k . \",\n+\". k w.2.p E r.*.f [ 2.( K { x X \",\n+\"u.1 >.V - m r.( 0 k e > F 2.1 u.\",\n+\"u.& { *.m U w.w.2.2.>.g *. .& u.\",\n+\"u.+ p 0.g 5 k v c u 7 0 *.f + u.\",\n+\"u.u.# V #.&.2.( K N H  .C # u.u.\",\n+\"u.u.u.@ t  .0.{ ` #.{ t @ u.u.u.\",\n+\"u.u.u.u.o % : t t : % o u.u.u.u.\",\n+\"u.u.u.u.u.u.u.. . u.u.u.u.u.u.u.\"\n };"
      },
      {
        "sha": "236426d2fa8ebbf5362e03fdd1e8aa2811f150ac",
        "filename": "share/pixmaps/bitcoin256.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin256.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin256.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin256.png?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "7fe1452fc51a560c679a67470da15c7073c337d2",
        "filename": "share/pixmaps/bitcoin256.xpm",
        "status": "modified",
        "additions": 385,
        "deletions": 460,
        "changes": 845,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin256.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin256.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin256.xpm?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "008302bd932eb74cbe5e0b1f8163c12150305d38",
        "filename": "share/pixmaps/bitcoin32.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin32.png?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "caae0bdd64fea7dfe30e3d5e21f8349530ff7eaa",
        "filename": "share/pixmaps/bitcoin32.xpm",
        "status": "modified",
        "additions": 96,
        "deletions": 135,
        "changes": 231,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin32.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/share/pixmaps/bitcoin32.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin32.xpm?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59",
        "patch": "@@ -1,140 +1,101 @@\n /* XPM */\n static char *bitcoin__[] = {\n /* columns rows colors chars-per-pixel */\n-\"32 32 102 2\",\n-\"   c #CC7D1D\",\n-\".  c #D5831F\",\n-\"X  c #D48221\",\n-\"o  c #D98621\",\n-\"O  c #DC8820\",\n-\"+  c #DC8D2C\",\n-\"@  c #D98F36\",\n-\"#  c #D68F39\",\n-\"$  c #DD943E\",\n-\"%  c #E28B23\",\n-\"&  c #E98F24\",\n-\"*  c #E18F2D\",\n-\"=  c #ED9124\",\n-\"-  c #EC942A\",\n-\";  c #F59624\",\n-\":  c #F89724\",\n-\">  c #F79827\",\n-\",  c #F89825\",\n-\"<  c #F0962B\",\n-\"1  c #F59A2D\",\n-\"2  c #F99B2B\",\n-\"3  c #EC9732\",\n-\"4  c #EC9A37\",\n-\"5  c #E2963B\",\n-\"6  c #E6983A\",\n-\"7  c #EC9C3B\",\n-\"8  c #F69D33\",\n-\"9  c #F99E32\",\n-\"0  c #F49E3A\",\n-\"q  c #F9A036\",\n-\"w  c #F6A13C\",\n-\"e  c #F9A33B\",\n-\"r  c #D79341\",\n-\"t  c #DC9641\",\n-\"y  c #E39A43\",\n-\"u  c #EA9D42\",\n-\"i  c #EFA041\",\n-\"p  c #EDA34B\",\n-\"a  c #F5A443\",\n-\"s  c #F9A643\",\n-\"d  c #FAA846\",\n-\"f  c #F2A64C\",\n-\"g  c #F9AA4B\",\n-\"h  c #E5A251\",\n-\"j  c #ECA756\",\n-\"k  c #EBA758\",\n-\"l  c #FAAF57\",\n-\"z  c #FBB057\",\n-\"x  c #FBB25B\",\n-\"c  c #DFB179\",\n-\"v  c #E4AA65\",\n-\"b  c #EBAE64\",\n-\"n  c #E9AF69\",\n-\"m  c #FBB665\",\n-\"M  c #F1B46A\",\n-\"N  c #F8B96D\",\n-\"B  c #E5B071\",\n-\"V  c #EBB777\",\n-\"C  c #EEB877\",\n-\"Z  c #E7B478\",\n-\"A  c #EBB97D\",\n-\"S  c #F0B671\",\n-\"D  c #F2B871\",\n-\"F  c #EFBC80\",\n-\"G  c #E6BD8D\",\n-\"H  c #EDBF88\",\n-\"J  c #E6BF90\",\n-\"K  c #F1C187\",\n-\"L  c #F1C288\",\n-\"P  c #E5C093\",\n-\"I  c #EEC493\",\n-\"U  c #E1C19B\",\n-\"Y  c #E9C69C\",\n-\"T  c #ECC89D\",\n-\"R  c #F1C897\",\n-\"E  c #DFC5A4\",\n-\"W  c #DBCBB8\",\n-\"Q  c #E2C7A7\",\n-\"!  c #EBCBA6\",\n-\"~  c #E6CBAB\",\n-\"^  c #E9D2B7\",\n-\"/  c #E5D1B9\",\n-\"(  c #EBD6BD\",\n-\")  c #EFD9BE\",\n-\"_  c #DDD0C2\",\n-\"`  c #DCD7D2\",\n-\"'  c #DEDEDE\",\n-\"]  c #ECDAC5\",\n-\"[  c #EDDECB\",\n-\"{  c #E9E0D5\",\n-\"}  c #E7E0D9\",\n-\"|  c #E9E2DB\",\n-\" . c #EFE8DF\",\n-\".. c #E5E5E5\",\n-\"X. c #EBE7E2\",\n-\"o. c #EFEAE6\",\n-\"O. c #ECECEC\",\n-\"+. c #F2ECE6\",\n-\"@. c #F1F0EE\",\n-\"#. c #F4F4F4\",\n-\"$. c #FBFBFB\",\n-\"%. c None\",\n+\"32 32 63 1\",\n+\"  c #3C3D3B\",\n+\". c #3F403E\",\n+\"X c #40413F\",\n+\"o c #434442\",\n+\"O c #484947\",\n+\"+ c #525351\",\n+\"@ c #575856\",\n+\"# c #585957\",\n+\"$ c #5B5C5A\",\n+\"% c #5F605E\",\n+\"& c #60615F\",\n+\"* c #636462\",\n+\"= c #6B6C6B\",\n+\"- c #737473\",\n+\"; c #777876\",\n+\": c #7A7A7A\",\n+\"> c #7F807F\",\n+\", c #838484\",\n+\"< c #878888\",\n+\"1 c #8B8B8B\",\n+\"2 c #8F908F\",\n+\"3 c #90908F\",\n+\"4 c #8F9091\",\n+\"5 c #929393\",\n+\"6 c #97989A\",\n+\"7 c #9A9B9B\",\n+\"8 c #9FA09F\",\n+\"9 c #A3A4A4\",\n+\"0 c #A7A8A7\",\n+\"q c #A7A8AA\",\n+\"w c #A9A9A9\",\n+\"e c #AEAFB0\",\n+\"r c #AFB0B1\",\n+\"t c #B3B4B4\",\n+\"y c #B6B7BA\",\n+\"u c #B7B8BB\",\n+\"i c #BABBBD\",\n+\"p c #BDBEC1\",\n+\"a c #BFC0C2\",\n+\"s c #C3C4C6\",\n+\"d c #C5C6C9\",\n+\"f c #C7C8CA\",\n+\"g c #CBCCCD\",\n+\"h c #CECFD1\",\n+\"j c #CFD0D2\",\n+\"k c #D1D2D3\",\n+\"l c #D6D7D8\",\n+\"z c #D7D8D8\",\n+\"x c #DADBDC\",\n+\"c c #DFDFE1\",\n+\"v c #DFE0E1\",\n+\"b c #E3E4E4\",\n+\"n c #E7E8E7\",\n+\"m c #E7E7E8\",\n+\"M c #E7E8E9\",\n+\"N c #EBECEC\",\n+\"B c #EFEFF0\",\n+\"V c #EFF0F0\",\n+\"C c #F4F4F4\",\n+\"Z c #F7F7F8\",\n+\"A c #F7F8F8\",\n+\"S c #FCFDFD\",\n+\"D c None\",\n /* pixels */\n-\"%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.%.%.%.%.%.%.t 5 5 $ %.%.%.%.%.%.%.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.%.%.%.r u w q 9 9 9 8 4 # %.%.%.%.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.%.y s e 9 2 , , , : > 2 9 q 5 %.%.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.s q 2 , , , , : , > 2 2 > > 2 9 %.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.t e 1 , , , , : : ; > 2 9 9 2 , , > 2 + %.%.%.%.%.%.\",\n-\"%.%.%.%.%.$ e 2 , , , , , , ; u u 8 1 1 2 > , , > > + %.%.%.%.%.\",\n-\"%.%.%.%.%.e 2 , , : > ; ; > < ` ` 0 c n 1 2 , , , > , %.%.%.%.%.\",\n-\"%.%.%.%.e 1 , , , , ; h v - 3 ..! w ' _ 9 2 > , , , > : %.%.%.%.\",\n-\"%.%.%.6 q , : , > 2 > W ..| [ #.H V ..D 9 9 2 , , , , , % %.%.%.\",\n-\"%.%.%.e 2 , > 2 2 2 9 b ! #.$.$.#.#.#.Y i 1 2 > , , , > ; %.%.%.\",\n-\"%.%.@ q > 2 2 2 9 q e q 0 o.$.+.) { #.#.| b 2 2 , , , , : X %.%.\",\n-\"%.%.4 9 2 2 9 q e e s w b O.#.( m x I @.$...f > > , , , : & %.%.\",\n-\"%.%.8 > 2 2 9 e s d g a P #.#.L x l a [ $.#.A 2 2 , : , , ; %.%.\",\n-\"%.+ 1 , , 2 2 q e d g f / $.#.T n k Z o.$.O.M 9 2 > , , , ; X %.\",\n-\"%.* 2 , , , 2 9 q e s f X.$.#.O.O.O.#.$.+.Y g e 9 2 , , , ; o %.\",\n-\"%.* 2 , , , 2 2 q e w n O.$.[ R ( O.$.$.[ d s e 9 2 2 , , ; o %.\",\n-\"%.+ 2 , , , > 2 8 8 1 G #.#.T m m N ] #.#.~ s e e 9 2 > : ; X %.\",\n-\"%.%.> , , , , 2 < v B [ $.O.m z z s b #.$...g e e q 9 2 ; = %.%.\",\n-\"%.%.= : , , , : 7 ' O.#.$.@.C j p u ~ #.$.} g q 9 9 2 2 ; % %.%.\",\n-\"%.%.o , , , , : 0 G ^  .$.#.O.X.{ X.#.$.#.Y e 9 2 2 > , ;   %.%.\",\n-\"%.%.%., : , , , 2 2 2 M O.) ] #.#.#.#.O./ d 9 2 > , , ; = %.%.%.\",\n-\"%.%.%.& ; , , , , 2 ; Q ..g F O.K A H S s 9 2 > , : , ; o %.%.%.\",\n-\"%.%.%.%.; ; , , , , 2 E _ d ' ..d q q 9 2 > , : , , ; = %.%.%.%.\",\n-\"%.%.%.%.%.; : , , , 2 q d g U J e 2 2 > , , , , , ; = %.%.%.%.%.\",\n-\"%.%.%.%.%.o ; : , , , 2 9 q 9 q 9 > , : , , , , ; = . %.%.%.%.%.\",\n-\"%.%.%.%.%.%.. ; ; , , > 2 2 2 > , , , , , , , ; =   %.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.= ; : > 2 2 , , : , , , , ; ; & %.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.%.. = ; > : , , , , ; ; = = X %.%.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.%.%.%.  % = ; ; ; ; & O   %.%.%.%.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.%.%.%.%.%.%.  X X   %.%.%.%.%.%.%.%.%.%.%.%.%.%.\",\n-\"%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.\"\n+\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\",\n+\"DDDDDDDDDDDD        DDDDDDDDDDDD\",\n+\"DDDDDDDDD   O$=--=$O   DDDDDDDDD\",\n+\"DDDDDDD  o*7gbCCCVng7*X  DDDDDDD\",\n+\"DDDDDD  $wmZSAAAAASAAnw$  DDDDDD\",\n+\"DDDDD X;lASCMlgdfgbASAAz-X DDDDD\",\n+\"DDDD X,bAAbdy75559thSSSAn,X DDDD\",\n+\"DDD  ;nAChuyq*1555=1MzlCSb;  DDD\",\n+\"DDD $zACgislr1SSSA55iuyhZAz$ DDD\",\n+\"DD owZAzkMAS5ySSSC-9uphmSSAwo DD\",\n+\"DD *MSSCSSSC:zSSSz=scCSSSSAn* DD\",\n+\"DD 7ASSSSBxe-CSSSy1gbSSBxlZA7 DD\",\n+\"D OgASCbgpy15SSSS<$$dbgpyiMSgO D\",\n+\"D $bSvauyyi-sSSSAtt*tyyypgNSn$ D\",\n+\"D =CAguidxx-cSSSSSi-yidxBSSSC= D\",\n+\"D -CAklMCw:5CSSSz3=6lNASSSAAC- D\",\n+\"D -CSSSSc-kASSSS,3lCSSSAmkhAC- D\",\n+\"D =VASSNw1nASSSM;nSSANzdiygAB= D\",\n+\"D $bSNfi-%-MSSSg=iat9555esbSb$ D\",\n+\"D ofSMut,::SSSSk333322<$fCSSsO D\",\n+\"DD 6ZZlcV80SSSSSSSSSSSx:VSSA6 DD\",\n+\"DD $bSSSA>kSSSSSSSSSSSu1CSSb$ DD\",\n+\"DD X8ASSk&6wwwwwwwwww9-7zSA8X.DD\",\n+\"DDD +kAAs<><509www85<,<sZAk+ DDD\",\n+\"DDD  =bAZzxCSSSAVzdiuizCSc= .DDD\",\n+\"DDDD X-bZSSSSCbgpyypgMASc;. DDDD\",\n+\"DDDDD  =gZSSSbkggjxNASCg=X DDDDD\",\n+\"DDDDDD  +7xCASSAASSAAx7+  DDDDDD\",\n+\"DDDDDDDD..@1pzNNBMxa1@. DDDDDDDD\",\n+\"DDDDDDDDD   o+****+o   DDDDDDDDD\",\n+\"DDDDDDDDDDDD        DDDDDDDDDDDD\",\n+\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\"\n };"
      },
      {
        "sha": "026224cb439928fdb526dc0f54cdaedfcd9e1614",
        "filename": "src/qt/res/icons/bitcoin.icns",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/src/qt/res/icons/bitcoin.icns",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/src/qt/res/icons/bitcoin.icns",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin.icns?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "78a2babb19498eff8c455e14d12b60ebea6c7abf",
        "filename": "src/qt/res/icons/bitcoin.ico",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/src/qt/res/icons/bitcoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/src/qt/res/icons/bitcoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin.ico?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "909194ecd2e10985bbca35c3cd26fd1adb4730b8",
        "filename": "src/qt/res/icons/bitcoin_testnet.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/res/icons/bitcoin_testnet.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/913278c1768d61e8fbe753943e2272955f13dbe4/src/qt/res/icons/bitcoin_testnet.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin_testnet.ico?ref=913278c1768d61e8fbe753943e2272955f13dbe4"
      },
      {
        "sha": "004d90f8886899d9bcfaf8429e066ba67a3c6c50",
        "filename": "src/qt/res/icons/bitcoin_testnet.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/src/qt/res/icons/bitcoin_testnet.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/src/qt/res/icons/bitcoin_testnet.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin_testnet.png?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      },
      {
        "sha": "f6f4a5e299e009c6ab23e20add35d316b19c014a",
        "filename": "src/qt/res/icons/blockcash_splash.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/src/qt/res/icons/blockcash_splash.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2a046f9cd056315c8ffce9aa62181e17bf5b59/src/qt/res/icons/blockcash_splash.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/blockcash_splash.png?ref=3c2a046f9cd056315c8ffce9aa62181e17bf5b59"
      }
    ]
  },
  {
    "sha": "58e781336182164f1d49a4356f97e4c093997cf2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGU3ODEzMzYxODIxNjRmMWQ0OWE0MzU2Zjk3ZTRjMDkzOTk3Y2Yy",
    "commit": {
      "author": {
        "name": "blockcash",
        "email": "blockcashcoin@gmail.com",
        "date": "2017-12-25T15:11:21Z"
      },
      "committer": {
        "name": "blockcash",
        "email": "blockcashcoin@gmail.com",
        "date": "2017-12-25T15:11:21Z"
      },
      "message": "update",
      "tree": {
        "sha": "03560f4b6bba018524f72cf0ac4151cafea3f198",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03560f4b6bba018524f72cf0ac4151cafea3f198"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58e781336182164f1d49a4356f97e4c093997cf2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e781336182164f1d49a4356f97e4c093997cf2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58e781336182164f1d49a4356f97e4c093997cf2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e781336182164f1d49a4356f97e4c093997cf2/comments",
    "author": {
      "login": "blockcash",
      "id": 34801682,
      "node_id": "MDQ6VXNlcjM0ODAxNjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34801682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blockcash",
      "html_url": "https://github.com/blockcash",
      "followers_url": "https://api.github.com/users/blockcash/followers",
      "following_url": "https://api.github.com/users/blockcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/blockcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blockcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blockcash/subscriptions",
      "organizations_url": "https://api.github.com/users/blockcash/orgs",
      "repos_url": "https://api.github.com/users/blockcash/repos",
      "events_url": "https://api.github.com/users/blockcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blockcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "blockcash",
      "id": 34801682,
      "node_id": "MDQ6VXNlcjM0ODAxNjgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/34801682?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blockcash",
      "html_url": "https://github.com/blockcash",
      "followers_url": "https://api.github.com/users/blockcash/followers",
      "following_url": "https://api.github.com/users/blockcash/following{/other_user}",
      "gists_url": "https://api.github.com/users/blockcash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blockcash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blockcash/subscriptions",
      "organizations_url": "https://api.github.com/users/blockcash/orgs",
      "repos_url": "https://api.github.com/users/blockcash/repos",
      "events_url": "https://api.github.com/users/blockcash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blockcash/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a60ac1cc7d5da4c4d2a09b61b2d02e1a16f1de2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a60ac1cc7d5da4c4d2a09b61b2d02e1a16f1de2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a60ac1cc7d5da4c4d2a09b61b2d02e1a16f1de2e"
      }
    ],
    "stats": {
      "total": 3658,
      "additions": 909,
      "deletions": 2749
    },
    "files": [
      {
        "sha": "72ad7b32f3d6e2577bd051f70493e8ededd439cc",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -18,8 +18,8 @@\n from binascii import b2a_hex\n \n # key types\n-PUBKEY_ADDRESS = 19\n-SCRIPT_ADDRESS = 5\n+PUBKEY_ADDRESS = 28\n+SCRIPT_ADDRESS = 85\n PUBKEY_ADDRESS_TEST = 111\n SCRIPT_ADDRESS_TEST = 196\n PRIVKEY = 176"
      },
      {
        "sha": "220a9542056723010be58f5b9790a1f4b57f8647",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 79,
        "deletions": 125,
        "changes": 204,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -2,21 +2,18 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <base58.h>\n+#include \"base58.h\"\n \n-#include <bech32.h>\n-#include <hash.h>\n-#include <script/script.h>\n-#include <uint256.h>\n-#include <utilstrencodings.h>\n+#include \"hash.h\"\n+#include \"uint256.h\"\n \n-#include <boost/variant/apply_visitor.hpp>\n-#include <boost/variant/static_visitor.hpp>\n-\n-#include <algorithm>\n #include <assert.h>\n+#include <stdint.h>\n #include <string.h>\n-\n+#include <vector>\n+#include <string>\n+#include <boost/variant/apply_visitor.hpp>\n+#include <boost/variant/static_visitor.hpp>\n \n /** All alphanumeric characters except for \"0\", \"I\", \"O\", and \"l\" */\n static const char* pszBase58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n@@ -139,7 +136,7 @@ bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet)\n     }\n     // re-calculate the checksum, ensure it matches the included 4-byte checksum\n     uint256 hash = Hash(vchRet.begin(), vchRet.end() - 4);\n-    if (memcmp(&hash, &vchRet[vchRet.size() - 4], 4) != 0) {\n+    if (memcmp(&hash, &vchRet.end()[-4], 4) != 0) {\n         vchRet.clear();\n         return false;\n     }\n@@ -215,113 +212,90 @@ int CBase58Data::CompareTo(const CBase58Data& b58) const\n \n namespace\n {\n-class DestinationEncoder : public boost::static_visitor<std::string>\n+class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n {\n private:\n-    const CChainParams& m_params;\n+    CBitcoinAddress* addr;\n+    CChainParams::Base58Type script_type_;\n \n public:\n-    DestinationEncoder(const CChainParams& params) : m_params(params) {}\n-\n-    std::string operator()(const CKeyID& id) const\n+    CBitcoinAddressVisitor(CBitcoinAddress* addrIn, CChainParams::Base58Type script_type) \n+      : addr(addrIn), script_type_(script_type) \n     {\n-        std::vector<unsigned char> data = m_params.Base58Prefix(CChainParams::PUBKEY_ADDRESS);\n-        data.insert(data.end(), id.begin(), id.end());\n-        return EncodeBase58Check(data);\n+        assert(script_type == CChainParams::SCRIPT_ADDRESS || \n+               script_type == CChainParams::SCRIPT_ADDRESS2);\n     }\n \n-    std::string operator()(const CScriptID& id) const\n-    {\n-        std::vector<unsigned char> data = m_params.Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n-        data.insert(data.end(), id.begin(), id.end());\n-        return EncodeBase58Check(data);\n-    }\n+    bool operator()(const CKeyID& id) const { return addr->Set(id); }\n+    bool operator()(const CScriptID& id) const { return addr->Set(id, script_type_); }\n+    bool operator()(const CNoDestination& no) const { return false; }\n+};\n \n-    std::string operator()(const WitnessV0KeyHash& id) const\n-    {\n-        std::vector<unsigned char> data = {0};\n-        ConvertBits<8, 5, true>(data, id.begin(), id.end());\n-        return bech32::Encode(m_params.Bech32HRP(), data);\n-    }\n+} // namespace\n \n-    std::string operator()(const WitnessV0ScriptHash& id) const\n-    {\n-        std::vector<unsigned char> data = {0};\n-        ConvertBits<8, 5, true>(data, id.begin(), id.end());\n-        return bech32::Encode(m_params.Bech32HRP(), data);\n-    }\n+bool CBitcoinAddress::Set(const CKeyID& id)\n+{\n+    SetData(Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS), &id, 20);\n+    return true;\n+}\n \n-    std::string operator()(const WitnessUnknown& id) const\n-    {\n-        if (id.version < 1 || id.version > 16 || id.length < 2 || id.length > 40) {\n-            return {};\n-        }\n-        std::vector<unsigned char> data = {(unsigned char)id.version};\n-        ConvertBits<8, 5, true>(data, id.program, id.program + id.length);\n-        return bech32::Encode(m_params.Bech32HRP(), data);\n-    }\n+bool CBitcoinAddress::Set(const CScriptID& id, CChainParams::Base58Type type)\n+{\n+    assert(type == CChainParams::SCRIPT_ADDRESS || type == CChainParams::SCRIPT_ADDRESS2);\n+    SetData(Params().Base58Prefix(type), &id, 20);\n+    return true;\n+}\n \n-    std::string operator()(const CNoDestination& no) const { return {}; }\n-};\n+bool CBitcoinAddress::Set(const CTxDestination& dest, CChainParams::Base58Type type)\n+{\n+    assert(type == CChainParams::SCRIPT_ADDRESS || type == CChainParams::SCRIPT_ADDRESS2);\n+    return boost::apply_visitor(CBitcoinAddressVisitor(this, type), dest);\n+}\n \n-CTxDestination DecodeDestination(const std::string& str, const CChainParams& params)\n+bool CBitcoinAddress::IsValid() const\n {\n-    std::vector<unsigned char> data;\n-    uint160 hash;\n-    if (DecodeBase58Check(str, data)) {\n-        // base58-encoded Bitcoin addresses.\n-        // Public-key-hash-addresses have version 0 (or 111 testnet).\n-        // The data vector contains RIPEMD160(SHA256(pubkey)), where pubkey is the serialized public key.\n-        const std::vector<unsigned char>& pubkey_prefix = params.Base58Prefix(CChainParams::PUBKEY_ADDRESS);\n-        if (data.size() == hash.size() + pubkey_prefix.size() && std::equal(pubkey_prefix.begin(), pubkey_prefix.end(), data.begin())) {\n-            std::copy(data.begin() + pubkey_prefix.size(), data.end(), hash.begin());\n-            return CKeyID(hash);\n-        }\n-        // Script-hash-addresses have version 5 (or 196 testnet).\n-        // The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n-        const std::vector<unsigned char>& script_prefix = params.Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n-        if (data.size() == hash.size() + script_prefix.size() && std::equal(script_prefix.begin(), script_prefix.end(), data.begin())) {\n-            std::copy(data.begin() + script_prefix.size(), data.end(), hash.begin());\n-            return CScriptID(hash);\n-        }\n-    }\n-    data.clear();\n-    auto bech = bech32::Decode(str);\n-    if (bech.second.size() > 0 && bech.first == params.Bech32HRP()) {\n-        // Bech32 decoding\n-        int version = bech.second[0]; // The first 5 bit symbol is the witness version (0-16)\n-        // The rest of the symbols are converted witness program bytes.\n-        if (ConvertBits<5, 8, false>(data, bech.second.begin() + 1, bech.second.end())) {\n-            if (version == 0) {\n-                {\n-                    WitnessV0KeyHash keyid;\n-                    if (data.size() == keyid.size()) {\n-                        std::copy(data.begin(), data.end(), keyid.begin());\n-                        return keyid;\n-                    }\n-                }\n-                {\n-                    WitnessV0ScriptHash scriptid;\n-                    if (data.size() == scriptid.size()) {\n-                        std::copy(data.begin(), data.end(), scriptid.begin());\n-                        return scriptid;\n-                    }\n-                }\n-                return CNoDestination();\n-            }\n-            if (version > 16 || data.size() < 2 || data.size() > 40) {\n-                return CNoDestination();\n-            }\n-            WitnessUnknown unk;\n-            unk.version = version;\n-            std::copy(data.begin(), data.end(), unk.program);\n-            unk.length = data.size();\n-            return unk;\n-        }\n-    }\n-    return CNoDestination();\n+    return IsValid(Params());\n+}\n+\n+bool CBitcoinAddress::IsValid(const CChainParams& params) const\n+{\n+    bool fCorrectSize = vchData.size() == 20;\n+    bool fKnownVersion = vchVersion == params.Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n+                         vchVersion == params.Base58Prefix(CChainParams::SCRIPT_ADDRESS) ||\n+                         vchVersion == params.Base58Prefix(CChainParams::SCRIPT_ADDRESS2);\n+    return fCorrectSize && fKnownVersion;\n+}\n+\n+CTxDestination CBitcoinAddress::Get() const\n+{\n+    if (!IsValid())\n+        return CNoDestination();\n+    uint160 id;\n+    memcpy(&id, vchData.data(), 20);\n+    if (vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n+        return CKeyID(id);\n+    else if (vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS) ||\n+             vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS2))\n+        return CScriptID(id);\n+    else\n+        return CNoDestination();\n+}\n+\n+bool CBitcoinAddress::GetKeyID(CKeyID& keyID) const\n+{\n+    if (!IsValid() || vchVersion != Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n+        return false;\n+    uint160 id;\n+    memcpy(&id, vchData.data(), 20);\n+    keyID = CKeyID(id);\n+    return true;\n+}\n+\n+bool CBitcoinAddress::IsScript() const\n+{\n+    return IsValid() && (vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS) ||\n+                         vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS2));\n }\n-} // namespace\n \n void CBitcoinSecret::SetKey(const CKey& vchSecret)\n {\n@@ -355,23 +329,3 @@ bool CBitcoinSecret::SetString(const std::string& strSecret)\n {\n     return SetString(strSecret.c_str());\n }\n-\n-std::string EncodeDestination(const CTxDestination& dest)\n-{\n-    return boost::apply_visitor(DestinationEncoder(Params()), dest);\n-}\n-\n-CTxDestination DecodeDestination(const std::string& str)\n-{\n-    return DecodeDestination(str, Params());\n-}\n-\n-bool IsValidDestinationString(const std::string& str, const CChainParams& params)\n-{\n-    return IsValidDestination(DecodeDestination(str, params));\n-}\n-\n-bool IsValidDestinationString(const std::string& str)\n-{\n-    return IsValidDestinationString(str, Params());\n-}"
      },
      {
        "sha": "12572277e0874b446b009e42d93b5cc80142b9f9",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 30,
        "deletions": 10,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -14,11 +14,12 @@\n #ifndef BITCOIN_BASE58_H\n #define BITCOIN_BASE58_H\n \n-#include <chainparams.h>\n-#include <key.h>\n-#include <pubkey.h>\n-#include <script/standard.h>\n-#include <support/allocators/zeroafterfree.h>\n+#include \"chainparams.h\"\n+#include \"key.h\"\n+#include \"pubkey.h\"\n+#include \"script/script.h\"\n+#include \"script/standard.h\"\n+#include \"support/allocators/zeroafterfree.h\"\n \n #include <string>\n #include <vector>\n@@ -94,6 +95,30 @@ class CBase58Data\n     bool operator> (const CBase58Data& b58) const { return CompareTo(b58) >  0; }\n };\n \n+/** base58-encoded Bitcoin addresses.\n+ * Public-key-hash-addresses have version 0 (or 111 testnet).\n+ * The data vector contains RIPEMD160(SHA256(pubkey)), where pubkey is the serialized public key.\n+ * Script-hash-addresses have version 5 (or 196 testnet).\n+ * The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n+ */\n+class CBitcoinAddress : public CBase58Data {\n+public:\n+    bool Set(const CKeyID &id);\n+    bool Set(const CScriptID &id, CChainParams::Base58Type type=CChainParams::SCRIPT_ADDRESS2);\n+    bool Set(const CTxDestination &dest, CChainParams::Base58Type type=CChainParams::SCRIPT_ADDRESS2);\n+    bool IsValid() const;\n+    bool IsValid(const CChainParams &params) const;\n+\n+    CBitcoinAddress() {}\n+    CBitcoinAddress(const CTxDestination &dest) { Set(dest); }\n+    CBitcoinAddress(const std::string& strAddress) { SetString(strAddress); }\n+    CBitcoinAddress(const char* pszAddress) { SetString(pszAddress); }\n+\n+    CTxDestination Get() const;\n+    bool GetKeyID(CKeyID &keyID) const;\n+    bool IsScript() const;\n+};\n+\n /**\n  * A base58-encoded secret key\n  */\n@@ -142,9 +167,4 @@ template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtK\n typedef CBitcoinExtKeyBase<CExtKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_SECRET_KEY> CBitcoinExtKey;\n typedef CBitcoinExtKeyBase<CExtPubKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_PUBLIC_KEY> CBitcoinExtPubKey;\n \n-std::string EncodeDestination(const CTxDestination& dest);\n-CTxDestination DecodeDestination(const std::string& str);\n-bool IsValidDestinationString(const std::string& str);\n-bool IsValidDestinationString(const std::string& str, const CChainParams& params);\n-\n #endif // BITCOIN_BASE58_H"
      },
      {
        "sha": "f227c26bcbb679173fa64135decbc225c2c1e443",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -2,21 +2,24 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <bench/bench.h>\n+#include \"bench.h\"\n \n-#include <chainparams.h>\n-#include <validation.h>\n-#include <streams.h>\n-#include <consensus/validation.h>\n+#include \"chainparams.h\"\n+#include \"validation.h\"\n+#include \"streams.h\"\n+#include \"consensus/validation.h\"\n \n namespace block_bench {\n-#include <bench/data/block413567.raw.h>\n+#include \"bench/data/block413567.raw.h\"\n } // namespace block_bench\n \n // These are the two major time-sinks which happen after we have fully received\n // a block off the wire, but before we can relay the block on to peers using\n // compact block relay.\n \n+// Litecoin uses block height 878439, hash 0babe680f55a55d54339511226755f0837261da89a4e78eba4d6436a63026df8\n+// which contains 3808 transactions.\n+\n static void DeserializeBlockTest(benchmark::State& state)\n {\n     CDataStream stream((const char*)block_bench::block413567,\n@@ -52,5 +55,5 @@ static void DeserializeAndCheckBlockTest(benchmark::State& state)\n     }\n }\n \n-BENCHMARK(DeserializeBlockTest, 130);\n-BENCHMARK(DeserializeAndCheckBlockTest, 160);\n+BENCHMARK(DeserializeBlockTest);\n+BENCHMARK(DeserializeAndCheckBlockTest);"
      },
      {
        "sha": "2914a36c7b92ade59e0fa9c2208647155c762cb5",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 25,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -4,16 +4,16 @@\n \n #include <iostream>\n \n-#include <bench/bench.h>\n-#include <bloom.h>\n-#include <hash.h>\n-#include <random.h>\n-#include <uint256.h>\n-#include <utiltime.h>\n-#include <crypto/ripemd160.h>\n-#include <crypto/sha1.h>\n-#include <crypto/sha256.h>\n-#include <crypto/sha512.h>\n+#include \"bench.h\"\n+#include \"bloom.h\"\n+#include \"hash.h\"\n+#include \"random.h\"\n+#include \"uint256.h\"\n+#include \"utiltime.h\"\n+#include \"crypto/ripemd160.h\"\n+#include \"crypto/sha1.h\"\n+#include \"crypto/sha256.h\"\n+#include \"crypto/sha512.h\"\n \n /* Number of bytes to hash per iteration */\n static const uint64_t BUFFER_SIZE = 1000*1000;\n@@ -46,9 +46,9 @@ static void SHA256_32b(benchmark::State& state)\n {\n     std::vector<uint8_t> in(32,0);\n     while (state.KeepRunning()) {\n-        CSHA256()\n-            .Write(in.data(), in.size())\n-            .Finalize(in.data());\n+        for (int i = 0; i < 1000000; i++) {\n+            CSHA256().Write(in.data(), in.size()).Finalize(&in[0]);\n+        }\n     }\n }\n \n@@ -63,9 +63,10 @@ static void SHA512(benchmark::State& state)\n static void SipHash_32b(benchmark::State& state)\n {\n     uint256 x;\n-    uint64_t k1 = 0;\n     while (state.KeepRunning()) {\n-        *((uint64_t*)x.begin()) = SipHashUint256(0, ++k1, x);\n+        for (int i = 0; i < 1000000; i++) {\n+            *((uint64_t*)x.begin()) = SipHashUint256(0, i, x);\n+        }\n     }\n }\n \n@@ -74,7 +75,9 @@ static void FastRandom_32bit(benchmark::State& state)\n     FastRandomContext rng(true);\n     uint32_t x = 0;\n     while (state.KeepRunning()) {\n-        x += rng.rand32();\n+        for (int i = 0; i < 1000000; i++) {\n+            x += rng.rand32();\n+        }\n     }\n }\n \n@@ -83,16 +86,18 @@ static void FastRandom_1bit(benchmark::State& state)\n     FastRandomContext rng(true);\n     uint32_t x = 0;\n     while (state.KeepRunning()) {\n-        x += rng.randbool();\n+        for (int i = 0; i < 1000000; i++) {\n+            x += rng.randbool();\n+        }\n     }\n }\n \n-BENCHMARK(RIPEMD160, 440);\n-BENCHMARK(SHA1, 570);\n-BENCHMARK(SHA256, 340);\n-BENCHMARK(SHA512, 330);\n+BENCHMARK(RIPEMD160);\n+BENCHMARK(SHA1);\n+BENCHMARK(SHA256);\n+BENCHMARK(SHA512);\n \n-BENCHMARK(SHA256_32b, 4700 * 1000);\n-BENCHMARK(SipHash_32b, 40 * 1000 * 1000);\n-BENCHMARK(FastRandom_32bit, 110 * 1000 * 1000);\n-BENCHMARK(FastRandom_1bit, 440 * 1000 * 1000);\n+BENCHMARK(SHA256_32b);\n+BENCHMARK(SipHash_32b);\n+BENCHMARK(FastRandom_32bit);\n+BENCHMARK(FastRandom_1bit);"
      },
      {
        "sha": "e38146eb526d6774d370270d1da1d962029232d0",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 98,
        "deletions": 120,
        "changes": 218,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -1,18 +1,18 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <chainparams.h>\n-#include <consensus/merkle.h>\n+#include \"chainparams.h\"\n+#include \"consensus/merkle.h\"\n \n-#include <tinyformat.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include \"tinyformat.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n \n #include <assert.h>\n \n-#include <chainparamsseeds.h>\n+#include \"chainparamsseeds.h\"\n \n static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n@@ -48,8 +48,8 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n  */\n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n-    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n-    const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n+    const char* pszTimestamp = \"The Times December 13 2017 Dominic Grieve threatens mutiny \";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04a18357665ed7a802dcf252ef528d3dc786da38653b51d1ab8e9f4820b55aca807892a056781967315908ac205940ec9d6f2fd0a85941966971eac7e475a27826\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n@@ -74,102 +74,86 @@ class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n         strNetworkID = \"main\";\n-        consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Height = 173805; // 00000000000000ce80a7e057163a4db1d5ad7b20fb6f598c9597b9665c8fb0d4 - April 1, 2012\n-        consensus.BIP34Height = 227931;\n-        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n-        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n-        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n-        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n-        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n-        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.nSubsidyHalvingInterval = 280000;\n+        consensus.BIP34Height = 710000;\n+        consensus.BIP34Hash = uint256S(\"fa09d204a83a768ed5a7c8d441fa62f2043abf420cff1226c7b4329aeb9d51cf\");\n+        consensus.BIP65Height = 918684; // bab3041e8977e0dc3eeff63fe707b92bde1dd449d8efafb248c27c8264cc311a\n+        consensus.BIP66Height = 811879; // 7aceee012833fa8952f8835d8b1b3ae233cd6ab08fdb27a771d2bd7bdc491894\n+        consensus.powLimit = uint256S(\"00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"); \n+        consensus.nPowTargetTimespan = 3.5 * 24 * 60 * 60; // 3.5 days\n+        consensus.nPowTargetSpacing = 2.5 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n-        consensus.nRuleChangeActivationThreshold = 1916; // 95% of 2016\n-        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.nRuleChangeActivationThreshold = 2001; // 75% of 2668\n+        consensus.nMinerConfirmationWindow = 2668; // nPowTargetTimespan / nPowTargetSpacing * 4\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n         // Deployment of BIP68, BIP112, and BIP113.\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1462060800; // May 1st, 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1493596800; // May 1st, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1485561600; // January 28, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1517356801; // January 31st, 2018\n \n         // Deployment of SegWit (BIP141, BIP143, and BIP147)\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 1479168000; // November 15th, 2016.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1510704000; // November 15th, 2017.\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 1485561600; // January 28, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1517356801; // January 31st, 2018\n \n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000723d3581fe1bd55373540a\");\n+        consensus.nMinimumChainWork = uint256S(\"0xb369fcd70f24597ee74907ee8609d9d42773742bf813f0dfaa50843dedb77f6d\");\n \n         // By default assume that the signatures in ancestors of this block are valid.\n         consensus.defaultAssumeValid = uint256S(\"0x0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a\"); //477890\n-\n         /**\n          * The message start string is designed to be unlikely to occur in normal data.\n          * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n          * a large 32-bit integer with any alignment.\n          */\n-        pchMessageStart[0] = 0xf9;\n-        pchMessageStart[1] = 0xbe;\n-        pchMessageStart[2] = 0xb4;\n-        pchMessageStart[3] = 0xd9;\n-        nDefaultPort = 8333;\n+        pchMessageStart[0] = 0x24;\n+        pchMessageStart[1] = 0x42;\n+        pchMessageStart[2] = 0x64;\n+        pchMessageStart[3] = 0x9d;\n+        nDefaultPort = 29252;\n         nPruneAfterHeight = 100000;\n \n-        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1513200330, 1258531, 0x1e0fffff, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000a66e51e70b93c03d9606ce5873673bc781a1b4f76e18b0a3544848d99df\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x00000a66e51e70b93c03d9606ce5873673bc781a1b4f76e18b0a3544848d99df\"));\n \n         // Note that of those with the service bits flag, most only support a subset of possible options\n-        vSeeds.emplace_back(\"seed.bitcoin.sipa.be\", true); // Pieter Wuille, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"dnsseed.bluematt.me\", true); // Matt Corallo, only supports x9\n-        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org\", false); // Luke Dashjr\n-        vSeeds.emplace_back(\"seed.bitcoinstats.com\", true); // Christian Decker, supports x1 - xf\n-        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch\", true); // Jonas Schnelli, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"seed.btc.petertodd.org\", true); // Peter Todd, only supports x1, x5, x9, and xd\n-\n-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n-        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n+        vSeeds.emplace_back(\"31.220.60.129\", true);\n+        vSeeds.emplace_back(\"dnsseed.thrasher.io\", false);\n+        vSeeds.emplace_back(\"dnsseed.litecointools.com\", false);\n+        vSeeds.emplace_back(\"dnsseed.litecoinpool.org\", false);\n+        vSeeds.emplace_back(\"dnsseed.koin-project.com\", false);\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,28);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,85);\n+        base58Prefixes[SCRIPT_ADDRESS2] = std::vector<unsigned char>(1,50);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,176);\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n \n-        bech32_hrp = \"bc\";\n-\n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n         fMineBlocksOnDemand = false;\n \n-        checkpointData = {\n+        checkpointData = (CCheckpointData) {\n             {\n-                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n-                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n-                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n-                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n-                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n-                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n-                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n-                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n-                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n-                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n-                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n-                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n-                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n-            }\n+                {  500, uint256S(\"0x841a2965955dd288cfa707a755d05a54e45f8bd476835ec9af4402a2b59a2967\")},\n+                \n         };\n \n         chainTxData = ChainTxData{\n-            // Data as of block 000000000000000000d97e53664d17967bd4ee50b23abb92e54a34eb222d15ae (height 478913).\n-            1501801925, // * UNIX timestamp of last known number of transactions\n-            243756039,  // * total number of transactions between genesis and that timestamp\n-                        //   (the tx=... number in the SetBestChain debug.log lines)\n-            3.1         // * estimated number of transactions per second after that timestamp\n+            // Data as of block db42d00d824950a125f9b08b6b6c282c484781562fa8b3bd29d6ce4a2627c348 (height 1259851).\n+            1513325938, // * UNIX timestamp of last known number of transactions\n+            501,  // * total number of transactions between genesis and that timestamp\n+                    //   (the tx=... number in the SetBestChain debug.log lines)\n+            0.01  // * estimated number of transactions per second after that timestamp\n         };\n     }\n };\n@@ -181,85 +165,81 @@ class CTestNetParams : public CChainParams {\n public:\n     CTestNetParams() {\n         strNetworkID = \"test\";\n-        consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Height = 514; // 00000000040b4e986385315e14bee30ad876d8b47f748025b26683116d21aa65\n-        consensus.BIP34Height = 21111;\n-        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n-        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n-        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n-        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n-        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n-        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.nSubsidyHalvingInterval = 280000;\n+        consensus.BIP34Height = 76;\n+        consensus.BIP34Hash = uint256S(\"8075c771ed8b495ffd943980a95f702ab34fce3c8c54e379548bda33cc8c0573\");\n+        consensus.BIP65Height = 76; // 8075c771ed8b495ffd943980a95f702ab34fce3c8c54e379548bda33cc8c0573\n+        consensus.BIP66Height = 76; // 8075c771ed8b495ffd943980a95f702ab34fce3c8c54e379548bda33cc8c0573\n+        consensus.powLimit = uint256S(\"00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+        consensus.nPowTargetTimespan = 3.5 * 24 * 60 * 60; // 3.5 days\n+        consensus.nPowTargetSpacing = 2.5 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = true;\n         consensus.fPowNoRetargeting = false;\n-        consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n-        consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n+        consensus.nRuleChangeActivationThreshold = 2001; // 75% for testchains\n+        consensus.nMinerConfirmationWindow = 2668; // nPowTargetTimespan / nPowTargetSpacing\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n         // Deployment of BIP68, BIP112, and BIP113.\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1456790400; // March 1st, 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1493596800; // May 1st, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1483228800; // January 1, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1517356801; // January 31st, 2018\n \n         // Deployment of SegWit (BIP141, BIP143, and BIP147)\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 1462060800; // May 1st 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1493596800; // May 1st 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 1483228800; // January 1, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1517356801; // January 31st, 2018\n \n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000002830dab7f76dbb7d63\");\n+        consensus.nMinimumChainWork = uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\");\n \n         // By default assume that the signatures in ancestors of this block are valid.\n-        consensus.defaultAssumeValid = uint256S(\"0x0000000002e9e7b00e1f6dc5123a04aad68dd0f0968d8c7aa45f6640795c37b1\"); //1135275\n+        consensus.defaultAssumeValid = uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\"); //134444\n \n-        pchMessageStart[0] = 0x0b;\n-        pchMessageStart[1] = 0x11;\n-        pchMessageStart[2] = 0x09;\n-        pchMessageStart[3] = 0x07;\n-        nDefaultPort = 18333;\n+        pchMessageStart[0] = 0xac;\n+        pchMessageStart[1] = 0xa6;\n+        pchMessageStart[2] = 0x2f;\n+        pchMessageStart[3] = 0xab;\n+        nDefaultPort = 39251;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1513200330, 216178, 0x1f00ffff, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x0000724595fb3b9609d441cbfb9577615c292abf07d996d3edabc48de843642d\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x912630d16a97f24b287c8c2594dda5fb98c9e6c70fc61d44191931ea2aa08dc90\"));\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n         // nodes with support for servicebits filtering should be at the top\n-        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch\", true);\n-        vSeeds.emplace_back(\"seed.tbtc.petertodd.org\", true);\n-        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl\", true);\n-        vSeeds.emplace_back(\"testnet-seed.bluematt.me\", false);\n+        vSeeds.emplace_back(\"31.220.60.129\", true);\n+        vSeeds.emplace_back(\"seed-b.litecoin.loshan.co.uk\", false);\n+        vSeeds.emplace_back(\"dnsseed-testnet.thrasher.io\", false);\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SCRIPT_ADDRESS2] = std::vector<unsigned char>(1,58);\n         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n-        bech32_hrp = \"tb\";\n-\n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_test, pnSeed6_test + ARRAYLEN(pnSeed6_test));\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         fMineBlocksOnDemand = false;\n \n-\n-        checkpointData = {\n+        checkpointData = (CCheckpointData) {\n             {\n-                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n+                {11111, uint256S(\"0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n             }\n         };\n \n         chainTxData = ChainTxData{\n-            // Data as of block 00000000000001c200b9790dc637d3bb141fe77d155b966ed775b17e109f7c6c (height 1156179)\n-            1501802953,\n-            14706531,\n-            0.15\n+            // Data as of block 3351b6229da00b47ad7a8d7e1323b0e2874744b5296e3d6448293463ab758624 (height 153489)\n+            1513325938,\n+            501,\n+            0.01\n         };\n \n     }\n@@ -273,27 +253,26 @@ class CRegTestParams : public CChainParams {\n     CRegTestParams() {\n         strNetworkID = \"regtest\";\n         consensus.nSubsidyHalvingInterval = 150;\n-        consensus.BIP16Height = 0; // always enforce P2SH BIP16 on regtest\n         consensus.BIP34Height = 100000000; // BIP34 has not activated on regtest (far in the future so block v1 are not rejected in tests)\n         consensus.BIP34Hash = uint256();\n         consensus.BIP65Height = 1351; // BIP65 activated on regtest (Used in rpc activation tests)\n         consensus.BIP66Height = 1251; // BIP66 activated on regtest (Used in rpc activation tests)\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n-        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n-        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.nPowTargetTimespan = 3.5 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 2.5 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = true;\n         consensus.fPowNoRetargeting = true;\n         consensus.nRuleChangeActivationThreshold = 108; // 75% for testchains\n         consensus.nMinerConfirmationWindow = 144; // Faster than normal for regtest (144 instead of 2016)\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 999999999999ULL;\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 999999999999ULL;\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = Consensus::BIP9Deployment::ALWAYS_ACTIVE;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 0;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 999999999999ULL;\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x00\");\n@@ -305,24 +284,24 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n-        nDefaultPort = 18444;\n+        nDefaultPort = 19444;\n         nPruneAfterHeight = 1000;\n \n-        genesis = CreateGenesisBlock(1296688602, 2, 0x207fffff, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1296688602, 0, 0x207fffff, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x530827f38f93b43ed12af0b3ad25a288dc02ed74d6d7857862df51fc56c416f9\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x97ddfbbae6be97fd6cdf3e7ca13232a3afff2353e29badfab7f73011edd4ced9\"));\n \n         vFixedSeeds.clear(); //!< Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();      //!< Regtest mode doesn't have any DNS seeds.\n \n         fDefaultConsistencyChecks = true;\n         fRequireStandard = false;\n-        fMineBlocksOnDemand = true;\n+        fMineBlocksOnDemand = true; \n \n-        checkpointData = {\n+        checkpointData = (CCheckpointData) {\n             {\n-                {0, uint256S(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\")},\n+                {0, uint256S(\"530827f38f93b43ed12af0b3ad25a288dc02ed74d6d7857862df51fc56c416f9\")},\n             }\n         };\n \n@@ -334,11 +313,10 @@ class CRegTestParams : public CChainParams {\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SCRIPT_ADDRESS2] = std::vector<unsigned char>(1,58);\n         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n-\n-        bech32_hrp = \"bcrt\";\n     }\n };\n "
      },
      {
        "sha": "440c1061929c5be6af8b39ccce92a3529f488588",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1458,
        "changes": 1463,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=58e781336182164f1d49a4356f97e4c093997cf2"
      },
      {
        "sha": "3045e380bc5e3d3d51ff0e77814656825e7fa811",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -31,7 +31,7 @@ NetworkStyle::NetworkStyle(const QString &_appName, const int iconColorHueShift,\n     if (std::char_traits<char>::length(_titleAddText) == 0) {\n         pixmap.load(\":/icons/bitcoin\");\n     } else {\n-        pixmap.load(\":/icons/litecoin_splash\");\n+        pixmap.load(\":/icons/blockcash_splash\");\n     }\n \n     if(iconColorHueShift != 0 && iconColorSaturationReduction != 0)"
      },
      {
        "sha": "6607f14a49d22bd6e28135c0d9ca623b46a6f3fe",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 116,
        "deletions": 181,
        "changes": 297,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -3,28 +3,27 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <rpc/blockchain.h>\n-\n-#include <amount.h>\n-#include <chain.h>\n-#include <chainparams.h>\n-#include <checkpoints.h>\n-#include <coins.h>\n-#include <consensus/validation.h>\n-#include <validation.h>\n-#include <core_io.h>\n-#include <policy/feerate.h>\n-#include <policy/policy.h>\n-#include <primitives/transaction.h>\n-#include <rpc/server.h>\n-#include <streams.h>\n-#include <sync.h>\n-#include <txdb.h>\n-#include <txmempool.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n-#include <hash.h>\n-#include <warnings.h>\n+#include \"rpc/blockchain.h\"\n+\n+#include \"amount.h\"\n+#include \"chain.h\"\n+#include \"chainparams.h\"\n+#include \"checkpoints.h\"\n+#include \"coins.h\"\n+#include \"consensus/validation.h\"\n+#include \"validation.h\"\n+#include \"core_io.h\"\n+#include \"policy/feerate.h\"\n+#include \"policy/policy.h\"\n+#include \"primitives/transaction.h\"\n+#include \"rpc/server.h\"\n+#include \"streams.h\"\n+#include \"sync.h\"\n+#include \"txdb.h\"\n+#include \"txmempool.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n+#include \"hash.h\"\n \n #include <stdint.h>\n \n@@ -47,20 +46,18 @@ static CUpdatedBlock latestblock;\n \n extern void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n \n-/* Calculate the difficulty for a given block index,\n- * or the block index of the given chain.\n- */\n-double GetDifficulty(const CChain& chain, const CBlockIndex* blockindex)\n+double GetDifficulty(const CBlockIndex* blockindex)\n {\n     if (blockindex == nullptr)\n     {\n-        if (chain.Tip() == nullptr)\n+        if (chainActive.Tip() == nullptr)\n             return 1.0;\n         else\n-            blockindex = chain.Tip();\n+            blockindex = chainActive.Tip();\n     }\n \n     int nShift = (blockindex->nBits >> 24) & 0xff;\n+\n     double dDiff =\n         (double)0x0000ffff / (double)(blockindex->nBits & 0x00ffffff);\n \n@@ -78,14 +75,8 @@ double GetDifficulty(const CChain& chain, const CBlockIndex* blockindex)\n     return dDiff;\n }\n \n-double GetDifficulty(const CBlockIndex* blockindex)\n-{\n-    return GetDifficulty(chainActive, blockindex);\n-}\n-\n UniValue blockheaderToJSON(const CBlockIndex* blockindex)\n {\n-    AssertLockHeld(cs_main);\n     UniValue result(UniValue::VOBJ);\n     result.push_back(Pair(\"hash\", blockindex->GetBlockHash().GetHex()));\n     int confirmations = -1;\n@@ -114,7 +105,6 @@ UniValue blockheaderToJSON(const CBlockIndex* blockindex)\n \n UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails)\n {\n-    AssertLockHeld(cs_main);\n     UniValue result(UniValue::VOBJ);\n     result.push_back(Pair(\"hash\", blockindex->GetBlockHash().GetHex()));\n     int confirmations = -1;\n@@ -353,7 +343,6 @@ std::string EntryDescriptionString()\n            \"    \\\"ancestorcount\\\" : n,    (numeric) number of in-mempool ancestor transactions (including this one)\\n\"\n            \"    \\\"ancestorsize\\\" : n,     (numeric) virtual transaction size of in-mempool ancestors (including this one)\\n\"\n            \"    \\\"ancestorfees\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one)\\n\"\n-           \"    \\\"wtxid\\\" : hash,         (string) hash of serialized transaction, including witness data\\n\"\n            \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n            \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n            \"       ... ]\\n\";\n@@ -374,7 +363,6 @@ void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n     info.push_back(Pair(\"ancestorcount\", e.GetCountWithAncestors()));\n     info.push_back(Pair(\"ancestorsize\", e.GetSizeWithAncestors()));\n     info.push_back(Pair(\"ancestorfees\", e.GetModFeesWithAncestors()));\n-    info.push_back(Pair(\"wtxid\", mempool.vTxHashes[e.vTxHashesIdx].first.ToString()));\n     const CTransaction& tx = e.GetTx();\n     std::set<std::string> setDepends;\n     for (const CTxIn& txin : tx.vin)\n@@ -668,8 +656,8 @@ UniValue getblockheader(const JSONRPCRequest& request)\n             \"\\nResult (for verbose=false):\\n\"\n             \"\\\"data\\\"             (string) A string that is serialized, hex-encoded data for block 'hash'.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getblockheader\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n-            + HelpExampleRpc(\"getblockheader\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n+            + HelpExampleCli(\"getblockheader\", \"\\\"00000aa93c737aae83bba5772b504286f1a3a6752fdcd77e9c388fb12b72d374\\\"\")\n+            + HelpExampleRpc(\"getblockheader\", \"\\\"00000aa93c737aae83bba5772b504286f1a3a6752fdcd77e9c388fb12b72d374\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -743,8 +731,8 @@ UniValue getblock(const JSONRPCRequest& request)\n             \"  ,...                     Same output as verbosity = 1.\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n-            + HelpExampleRpc(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n+            + HelpExampleCli(\"getblock\", \"\\\"00000aa93c737aae83bba5772b504286f1a3a6752fdcd77e9c388fb12b72d374\\\"\")\n+            + HelpExampleRpc(\"getblock\", \"\\\"00000aa93c737aae83bba5772b504286f1a3a6752fdcd77e9c388fb12b72d374\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -824,7 +812,6 @@ static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash,\n static bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n {\n     std::unique_ptr<CCoinsViewCursor> pcursor(view->Cursor());\n-    assert(pcursor);\n \n     CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n     stats.hashBlock = pcursor->GetBestBlock();\n@@ -935,7 +922,7 @@ UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n \n     CCoinsStats stats;\n     FlushStateToDisk();\n-    if (GetUTXOStats(pcoinsdbview.get(), stats)) {\n+    if (GetUTXOStats(pcoinsdbview, stats)) {\n         ret.push_back(Pair(\"height\", (int64_t)stats.nHeight));\n         ret.push_back(Pair(\"bestblock\", stats.hashBlock.GetHex()));\n         ret.push_back(Pair(\"transactions\", (int64_t)stats.nTransactions));\n@@ -957,10 +944,9 @@ UniValue gettxout(const JSONRPCRequest& request)\n             \"gettxout \\\"txid\\\" n ( include_mempool )\\n\"\n             \"\\nReturns details about an unspent transaction output.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"txid\\\"             (string, required) The transaction id\\n\"\n-            \"2. \\\"n\\\"                (numeric, required) vout number\\n\"\n-            \"3. \\\"include_mempool\\\"  (boolean, optional) Whether to include the mempool. Default: true.\"\n-            \"     Note that an unspent output that is spent in the mempool won't appear.\\n\"\n+            \"1. \\\"txid\\\"       (string, required) The transaction id\\n\"\n+            \"2. n              (numeric, required) vout number\\n\"\n+            \"3. include_mempool  (boolean, optional) Whether to include the mempool\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"bestblock\\\" : \\\"hash\\\",    (string) the block hash\\n\"\n@@ -971,8 +957,8 @@ UniValue gettxout(const JSONRPCRequest& request)\n             \"     \\\"hex\\\" : \\\"hex\\\",        (string) \\n\"\n             \"     \\\"reqSigs\\\" : n,          (numeric) Number of required signatures\\n\"\n             \"     \\\"type\\\" : \\\"pubkeyhash\\\", (string) The type, eg pubkeyhash\\n\"\n-            \"     \\\"addresses\\\" : [          (array of string) array of bitcoin addresses\\n\"\n-            \"        \\\"address\\\"     (string) bitcoin address\\n\"\n+            \"     \\\"addresses\\\" : [          (array of string) array of blockcash addresses\\n\"\n+            \"        \\\"address\\\"     (string) blockcash address\\n\"\n             \"        ,...\\n\"\n             \"     ]\\n\"\n             \"  },\\n\"\n@@ -1003,7 +989,7 @@ UniValue gettxout(const JSONRPCRequest& request)\n     Coin coin;\n     if (fMempool) {\n         LOCK(mempool.cs);\n-        CCoinsViewMemPool view(pcoinsTip.get(), mempool);\n+        CCoinsViewMemPool view(pcoinsTip, mempool);\n         if (!view.GetCoin(out, coin) || mempool.isSpent(out)) {\n             return NullUniValue;\n         }\n@@ -1055,7 +1041,7 @@ UniValue verifychain(const JSONRPCRequest& request)\n     if (!request.params[1].isNull())\n         nCheckDepth = request.params[1].get_int();\n \n-    return CVerifyDB().VerifyDB(Params(), pcoinsTip.get(), nCheckLevel, nCheckDepth);\n+    return CVerifyDB().VerifyDB(Params(), pcoinsTip, nCheckLevel, nCheckDepth);\n }\n \n /** Implementation of IsSuperMajority with better feedback */\n@@ -1120,13 +1106,13 @@ static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Conse\n     return rv;\n }\n \n-void BIP9SoftForkDescPushBack(UniValue& bip9_softforks, const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n+void BIP9SoftForkDescPushBack(UniValue& bip9_softforks, const std::string &name, const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n {\n     // Deployments with timeout value of 0 are hidden.\n     // A timeout value of 0 guarantees a softfork will never be activated.\n     // This is used when softfork codes are merged without specifying the deployment schedule.\n     if (consensusParams.vDeployments[id].nTimeout > 0)\n-        bip9_softforks.push_back(Pair(VersionBitsDeploymentInfo[id].name, BIP9SoftForkDesc(consensusParams, id)));\n+        bip9_softforks.push_back(Pair(name, BIP9SoftForkDesc(consensusParams, id)));\n }\n \n UniValue getblockchaininfo(const JSONRPCRequest& request)\n@@ -1137,46 +1123,41 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             \"Returns an object containing various state info regarding blockchain processing.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"chain\\\": \\\"xxxx\\\",              (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n-            \"  \\\"blocks\\\": xxxxxx,             (numeric) the current number of blocks processed in the server\\n\"\n-            \"  \\\"headers\\\": xxxxxx,            (numeric) the current number of headers we have validated\\n\"\n-            \"  \\\"bestblockhash\\\": \\\"...\\\",       (string) the hash of the currently best block\\n\"\n-            \"  \\\"difficulty\\\": xxxxxx,         (numeric) the current difficulty\\n\"\n-            \"  \\\"mediantime\\\": xxxxxx,         (numeric) median time for the current best block\\n\"\n+            \"  \\\"chain\\\": \\\"xxxx\\\",        (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n+            \"  \\\"blocks\\\": xxxxxx,         (numeric) the current number of blocks processed in the server\\n\"\n+            \"  \\\"headers\\\": xxxxxx,        (numeric) the current number of headers we have validated\\n\"\n+            \"  \\\"bestblockhash\\\": \\\"...\\\", (string) the hash of the currently best block\\n\"\n+            \"  \\\"difficulty\\\": xxxxxx,     (numeric) the current difficulty\\n\"\n+            \"  \\\"mediantime\\\": xxxxxx,     (numeric) median time for the current best block\\n\"\n             \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n-            \"  \\\"initialblockdownload\\\": xxxx, (bool) (debug information) estimate of whether this node is in Initial Block Download mode.\\n\"\n-            \"  \\\"chainwork\\\": \\\"xxxx\\\"           (string) total amount of work in active chain, in hexadecimal\\n\"\n-            \"  \\\"size_on_disk\\\": xxxxxx,       (numeric) the estimated size of the block and undo files on disk\\n\"\n-            \"  \\\"pruned\\\": xx,                 (boolean) if the blocks are subject to pruning\\n\"\n-            \"  \\\"pruneheight\\\": xxxxxx,        (numeric) lowest-height complete block stored (only present if pruning is enabled)\\n\"\n-            \"  \\\"automatic_pruning\\\": xx,      (boolean) whether automatic pruning is enabled (only present if pruning is enabled)\\n\"\n-            \"  \\\"prune_target_size\\\": xxxxxx,  (numeric) the target size used by pruning (only present if automatic pruning is enabled)\\n\"\n-            \"  \\\"softforks\\\": [                (array) status of softforks in progress\\n\"\n+            \"  \\\"chainwork\\\": \\\"xxxx\\\"     (string) total amount of work in active chain, in hexadecimal\\n\"\n+            \"  \\\"pruned\\\": xx,             (boolean) if the blocks are subject to pruning\\n\"\n+            \"  \\\"pruneheight\\\": xxxxxx,    (numeric) lowest-height complete block stored\\n\"\n+            \"  \\\"softforks\\\": [            (array) status of softforks in progress\\n\"\n             \"     {\\n\"\n-            \"        \\\"id\\\": \\\"xxxx\\\",           (string) name of softfork\\n\"\n-            \"        \\\"version\\\": xx,          (numeric) block version\\n\"\n-            \"        \\\"reject\\\": {             (object) progress toward rejecting pre-softfork blocks\\n\"\n-            \"           \\\"status\\\": xx,        (boolean) true if threshold reached\\n\"\n+            \"        \\\"id\\\": \\\"xxxx\\\",        (string) name of softfork\\n\"\n+            \"        \\\"version\\\": xx,         (numeric) block version\\n\"\n+            \"        \\\"reject\\\": {            (object) progress toward rejecting pre-softfork blocks\\n\"\n+            \"           \\\"status\\\": xx,       (boolean) true if threshold reached\\n\"\n             \"        },\\n\"\n             \"     }, ...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"bip9_softforks\\\": {           (object) status of BIP9 softforks in progress\\n\"\n-            \"     \\\"xxxx\\\" : {                 (string) name of the softfork\\n\"\n-            \"        \\\"status\\\": \\\"xxxx\\\",       (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n-            \"        \\\"bit\\\": xx,              (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n-            \"        \\\"startTime\\\": xx,        (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n-            \"        \\\"timeout\\\": xx,          (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n-            \"        \\\"since\\\": xx,            (numeric) height of the first block to which the status applies\\n\"\n-            \"        \\\"statistics\\\": {         (object) numeric statistics about BIP9 signalling for a softfork (only for \\\"started\\\" status)\\n\"\n-            \"           \\\"period\\\": xx,        (numeric) the length in blocks of the BIP9 signalling period \\n\"\n-            \"           \\\"threshold\\\": xx,     (numeric) the number of blocks with the version bit set required to activate the feature \\n\"\n-            \"           \\\"elapsed\\\": xx,       (numeric) the number of blocks elapsed since the beginning of the current period \\n\"\n-            \"           \\\"count\\\": xx,         (numeric) the number of blocks with the version bit set in the current period \\n\"\n-            \"           \\\"possible\\\": xx       (boolean) returns false if there are not enough blocks left in this period to pass activation threshold \\n\"\n+            \"  \\\"bip9_softforks\\\": {          (object) status of BIP9 softforks in progress\\n\"\n+            \"     \\\"xxxx\\\" : {                (string) name of the softfork\\n\"\n+            \"        \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n+            \"        \\\"bit\\\": xx,             (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n+            \"        \\\"startTime\\\": xx,       (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n+            \"        \\\"timeout\\\": xx,         (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n+            \"        \\\"since\\\": xx,           (numeric) height of the first block to which the status applies\\n\"\n+            \"        \\\"statistics\\\": {        (object) numeric statistics about BIP9 signalling for a softfork (only for \\\"started\\\" status)\\n\"\n+            \"           \\\"period\\\": xx,       (numeric) the length in blocks of the BIP9 signalling period \\n\"\n+            \"           \\\"threshold\\\": xx,    (numeric) the number of blocks with the version bit set required to activate the feature \\n\"\n+            \"           \\\"elapsed\\\": xx,      (numeric) the number of blocks elapsed since the beginning of the current period \\n\"\n+            \"           \\\"count\\\": xx,        (numeric) the number of blocks with the version bit set in the current period \\n\"\n+            \"           \\\"possible\\\": xx      (boolean) returns false if there are not enough blocks left in this period to pass activation threshold \\n\"\n             \"        }\\n\"\n             \"     }\\n\"\n             \"  }\\n\"\n-            \"  \\\"warnings\\\" : \\\"...\\\",           (string) any network and blockchain warnings.\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getblockchaininfo\", \"\")\n@@ -1193,26 +1174,8 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     obj.push_back(Pair(\"difficulty\",            (double)GetDifficulty()));\n     obj.push_back(Pair(\"mediantime\",            (int64_t)chainActive.Tip()->GetMedianTimePast()));\n     obj.push_back(Pair(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), chainActive.Tip())));\n-    obj.push_back(Pair(\"initialblockdownload\",  IsInitialBlockDownload()));\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n-    obj.push_back(Pair(\"size_on_disk\",          CalculateCurrentUsage()));\n     obj.push_back(Pair(\"pruned\",                fPruneMode));\n-    if (fPruneMode) {\n-        CBlockIndex* block = chainActive.Tip();\n-        assert(block);\n-        while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {\n-            block = block->pprev;\n-        }\n-\n-        obj.push_back(Pair(\"pruneheight\",        block->nHeight));\n-\n-        // if 0, execution bypasses the whole if block.\n-        bool automatic_pruning = (gArgs.GetArg(\"-prune\", 0) != 1);\n-        obj.push_back(Pair(\"automatic_pruning\",  automatic_pruning));\n-        if (automatic_pruning) {\n-            obj.push_back(Pair(\"prune_target_size\",  nPruneTarget));\n-        }\n-    }\n \n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     CBlockIndex* tip = chainActive.Tip();\n@@ -1221,13 +1184,19 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     softforks.push_back(SoftForkDesc(\"bip34\", 2, tip, consensusParams));\n     softforks.push_back(SoftForkDesc(\"bip66\", 3, tip, consensusParams));\n     softforks.push_back(SoftForkDesc(\"bip65\", 4, tip, consensusParams));\n-    for (int pos = Consensus::DEPLOYMENT_CSV; pos != Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++pos) {\n-        BIP9SoftForkDescPushBack(bip9_softforks, consensusParams, static_cast<Consensus::DeploymentPos>(pos));\n-    }\n+    BIP9SoftForkDescPushBack(bip9_softforks, \"csv\", consensusParams, Consensus::DEPLOYMENT_CSV);\n+    BIP9SoftForkDescPushBack(bip9_softforks, \"segwit\", consensusParams, Consensus::DEPLOYMENT_SEGWIT);\n     obj.push_back(Pair(\"softforks\",             softforks));\n     obj.push_back(Pair(\"bip9_softforks\", bip9_softforks));\n \n-    obj.push_back(Pair(\"warnings\", GetWarnings(\"statusbar\")));\n+    if (fPruneMode)\n+    {\n+        CBlockIndex *block = chainActive.Tip();\n+        while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))\n+            block = block->pprev;\n+\n+        obj.push_back(Pair(\"pruneheight\",        block->nHeight));\n+    }\n     return obj;\n }\n \n@@ -1357,7 +1326,7 @@ UniValue mempoolInfoToJSON()\n     ret.push_back(Pair(\"usage\", (int64_t) mempool.DynamicMemoryUsage()));\n     size_t maxmempool = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     ret.push_back(Pair(\"maxmempool\", (int64_t) maxmempool));\n-    ret.push_back(Pair(\"mempoolminfee\", ValueFromAmount(std::max(mempool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK())));\n+    ret.push_back(Pair(\"mempoolminfee\", ValueFromAmount(mempool.GetMinFee(maxmempool).GetFeePerK())));\n \n     return ret;\n }\n@@ -1374,7 +1343,7 @@ UniValue getmempoolinfo(const JSONRPCRequest& request)\n             \"  \\\"bytes\\\": xxxxx,              (numeric) Sum of all virtual transaction sizes as defined in BIP 141. Differs from actual serialized size because witness data is discounted\\n\"\n             \"  \\\"usage\\\": xxxxx,              (numeric) Total memory usage for the mempool\\n\"\n             \"  \\\"maxmempool\\\": xxxxx,         (numeric) Maximum memory usage for the mempool\\n\"\n-            \"  \\\"mempoolminfee\\\": xxxxx       (numeric) Minimum fee rate in \" + CURRENCY_UNIT + \"/kB for tx to be accepted\\n\"\n+            \"  \\\"mempoolminfee\\\": xxxxx       (numeric) Minimum feerate (\" + CURRENCY_UNIT + \" per KB) for tx to be accepted\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getmempoolinfo\", \"\")\n@@ -1508,12 +1477,9 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n             \"2. \\\"blockhash\\\"  (string, optional) The hash of the block that ends the window.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"time\\\": xxxxx,                (numeric) The timestamp for the final block in the window in UNIX format.\\n\"\n-            \"  \\\"txcount\\\": xxxxx,             (numeric) The total number of transactions in the chain up to that point.\\n\"\n-            \"  \\\"window_block_count\\\": xxxxx,  (numeric) Size of the window in number of blocks.\\n\"\n-            \"  \\\"window_tx_count\\\": xxxxx,     (numeric) The number of transactions in the window. Only returned if \\\"window_block_count\\\" is > 0.\\n\"\n-            \"  \\\"window_interval\\\": xxxxx,     (numeric) The elapsed time in the window in seconds. Only returned if \\\"window_block_count\\\" is > 0.\\n\"\n-            \"  \\\"txrate\\\": x.xx,               (numeric) The average rate of transactions per second in the window. Only returned if \\\"window_interval\\\" is > 0.\\n\"\n+            \"  \\\"time\\\": xxxxx,        (numeric) The timestamp for the statistics in UNIX format.\\n\"\n+            \"  \\\"txcount\\\": xxxxx,     (numeric) The total number of transactions in the chain up to that point.\\n\"\n+            \"  \\\"txrate\\\": x.xx,       (numeric) The average rate of transactions per second in the window.\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getchaintxstats\", \"\")\n@@ -1523,7 +1489,11 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     const CBlockIndex* pindex;\n     int blockcount = 30 * 24 * 60 * 60 / Params().GetConsensus().nPowTargetSpacing; // By default: 1 month\n \n-    bool havehash = !request.params[1].isNull();\n+    if (request.params.size() > 0 && !request.params[0].isNull()) {\n+        blockcount = request.params[0].get_int();\n+    }\n+\n+    bool havehash = request.params.size() > 1 && !request.params[1].isNull();\n     uint256 hash;\n     if (havehash) {\n         hash = uint256S(request.params[1].get_str());\n@@ -1544,17 +1514,9 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n             pindex = chainActive.Tip();\n         }\n     }\n-    \n-    assert(pindex != nullptr);\n-\n-    if (request.params[0].isNull()) {\n-        blockcount = std::max(0, std::min(blockcount, pindex->nHeight - 1));\n-    } else {\n-        blockcount = request.params[0].get_int();\n \n-        if (blockcount < 0 || (blockcount > 0 && blockcount >= pindex->nHeight)) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid block count: should be between 0 and the block's height - 1\");\n-        }\n+    if (blockcount < 1 || blockcount >= pindex->nHeight) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid block count: should be between 1 and the block's height\");\n     }\n \n     const CBlockIndex* pindexPast = pindex->GetAncestor(pindex->nHeight - blockcount);\n@@ -1564,68 +1526,41 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     UniValue ret(UniValue::VOBJ);\n     ret.push_back(Pair(\"time\", (int64_t)pindex->nTime));\n     ret.push_back(Pair(\"txcount\", (int64_t)pindex->nChainTx));\n-    ret.push_back(Pair(\"window_block_count\", blockcount));\n-    if (blockcount > 0) {\n-        ret.push_back(Pair(\"window_tx_count\", nTxDiff));\n-        ret.push_back(Pair(\"window_interval\", nTimeDiff));\n-        if (nTimeDiff > 0) {\n-            ret.push_back(Pair(\"txrate\", ((double)nTxDiff) / nTimeDiff));\n-        }\n-    }\n+    ret.push_back(Pair(\"txrate\", ((double)nTxDiff) / nTimeDiff));\n \n     return ret;\n }\n \n-UniValue savemempool(const JSONRPCRequest& request)\n-{\n-    if (request.fHelp || request.params.size() != 0) {\n-        throw std::runtime_error(\n-            \"savemempool\\n\"\n-            \"\\nDumps the mempool to disk.\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"savemempool\", \"\")\n-            + HelpExampleRpc(\"savemempool\", \"\")\n-        );\n-    }\n-\n-    if (!DumpMempool()) {\n-        throw JSONRPCError(RPC_MISC_ERROR, \"Unable to dump mempool to disk\");\n-    }\n-\n-    return NullUniValue;\n-}\n-\n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         argNames\n-  //  --------------------- ------------------------  -----------------------  ----------\n-    { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      {} },\n-    { \"blockchain\",         \"getchaintxstats\",        &getchaintxstats,        {\"nblocks\", \"blockhash\"} },\n-    { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       {} },\n-    { \"blockchain\",         \"getblockcount\",          &getblockcount,          {} },\n-    { \"blockchain\",         \"getblock\",               &getblock,               {\"blockhash\",\"verbosity|verbose\"} },\n-    { \"blockchain\",         \"getblockhash\",           &getblockhash,           {\"height\"} },\n-    { \"blockchain\",         \"getblockheader\",         &getblockheader,         {\"blockhash\",\"verbose\"} },\n-    { \"blockchain\",         \"getchaintips\",           &getchaintips,           {} },\n-    { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          {} },\n-    { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    {\"txid\",\"verbose\"} },\n-    { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  {\"txid\",\"verbose\"} },\n-    { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        {\"txid\"} },\n-    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         {} },\n-    { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          {\"verbose\"} },\n-    { \"blockchain\",         \"gettxout\",               &gettxout,               {\"txid\",\"n\",\"include_mempool\"} },\n-    { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        {} },\n-    { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        {\"height\"} },\n-    { \"blockchain\",         \"savemempool\",            &savemempool,            {} },\n-    { \"blockchain\",         \"verifychain\",            &verifychain,            {\"checklevel\",\"nblocks\"} },\n-\n-    { \"blockchain\",         \"preciousblock\",          &preciousblock,          {\"blockhash\"} },\n+{ //  category              name                      actor (function)         okSafe argNames\n+  //  --------------------- ------------------------  -----------------------  ------ ----------\n+    { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      true,  {} },\n+    { \"blockchain\",         \"getchaintxstats\",        &getchaintxstats,        true,  {\"nblocks\", \"blockhash\"} },\n+    { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       true,  {} },\n+    { \"blockchain\",         \"getblockcount\",          &getblockcount,          true,  {} },\n+    { \"blockchain\",         \"getblock\",               &getblock,               true,  {\"blockhash\",\"verbosity|verbose\"} },\n+    { \"blockchain\",         \"getblockhash\",           &getblockhash,           true,  {\"height\"} },\n+    { \"blockchain\",         \"getblockheader\",         &getblockheader,         true,  {\"blockhash\",\"verbose\"} },\n+    { \"blockchain\",         \"getchaintips\",           &getchaintips,           true,  {} },\n+    { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          true,  {} },\n+    { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    true,  {\"txid\",\"verbose\"} },\n+    { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  true,  {\"txid\",\"verbose\"} },\n+    { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        true,  {\"txid\"} },\n+    { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         true,  {} },\n+    { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true,  {\"verbose\"} },\n+    { \"blockchain\",         \"gettxout\",               &gettxout,               true,  {\"txid\",\"n\",\"include_mempool\"} },\n+    { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,  {} },\n+    { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        true,  {\"height\"} },\n+    { \"blockchain\",         \"verifychain\",            &verifychain,            true,  {\"checklevel\",\"nblocks\"} },\n+\n+    { \"blockchain\",         \"preciousblock\",          &preciousblock,          true,  {\"blockhash\"} },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        {\"blockhash\"} },\n-    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        {\"blockhash\"} },\n-    { \"hidden\",             \"waitfornewblock\",        &waitfornewblock,        {\"timeout\"} },\n-    { \"hidden\",             \"waitforblock\",           &waitforblock,           {\"blockhash\",\"timeout\"} },\n-    { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     {\"height\",\"timeout\"} },\n+    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        true,  {\"blockhash\"} },\n+    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        true,  {\"blockhash\"} },\n+    { \"hidden\",             \"waitfornewblock\",        &waitfornewblock,        true,  {\"timeout\"} },\n+    { \"hidden\",             \"waitforblock\",           &waitforblock,           true,  {\"blockhash\",\"timeout\"} },\n+    { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     true,  {\"height\",\"timeout\"} },\n };\n \n void RegisterBlockchainRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "57fa101e7c57d023d53eda548b752e9665bfa6a8",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 177,
        "deletions": 158,
        "changes": 335,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=58e781336182164f1d49a4356f97e4c093997cf2",
        "patch": "@@ -3,27 +3,26 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <base58.h>\n-#include <chain.h>\n-#include <clientversion.h>\n-#include <core_io.h>\n-#include <crypto/ripemd160.h>\n-#include <init.h>\n-#include <validation.h>\n-#include <httpserver.h>\n-#include <net.h>\n-#include <netbase.h>\n-#include <rpc/blockchain.h>\n-#include <rpc/server.h>\n-#include <timedata.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include \"base58.h\"\n+#include \"chain.h\"\n+#include \"clientversion.h\"\n+#include \"core_io.h\"\n+#include \"init.h\"\n+#include \"validation.h\"\n+#include \"httpserver.h\"\n+#include \"net.h\"\n+#include \"netbase.h\"\n+#include \"rpc/blockchain.h\"\n+#include \"rpc/server.h\"\n+#include \"timedata.h\"\n+#include \"util.h\"\n+#include \"utilstrencodings.h\"\n #ifdef ENABLE_WALLET\n-#include <wallet/rpcwallet.h>\n-#include <wallet/wallet.h>\n-#include <wallet/walletdb.h>\n+#include \"wallet/rpcwallet.h\"\n+#include \"wallet/wallet.h\"\n+#include \"wallet/walletdb.h\"\n #endif\n-#include <warnings.h>\n+#include \"warnings.h\"\n \n #include <stdint.h>\n #ifdef HAVE_MALLOC_INFO\n@@ -32,21 +31,108 @@\n \n #include <univalue.h>\n \n+/**\n+ * @note Do not add or change anything in the information returned by this\n+ * method. `getinfo` exists for backwards-compatibility only. It combines\n+ * information from wildly different sources in the program, which is a mess,\n+ * and is thus planned to be deprecated eventually.\n+ *\n+ * Based on the source of the information, new information should be added to:\n+ * - `getblockchaininfo`,\n+ * - `getnetworkinfo` or\n+ * - `getwalletinfo`\n+ *\n+ * Or alternatively, create a specific query method for the information.\n+ **/\n+UniValue getinfo(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 0)\n+        throw std::runtime_error(\n+            \"getinfo\\n\"\n+            \"\\nDEPRECATED. Returns an object containing various state info.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"deprecation-warning\\\": \\\"...\\\" (string) warning that the getinfo command is deprecated and will be removed in 0.16\\n\"\n+            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n+            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n+            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total blockcash balance of the wallet\\n\"\n+            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n+            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n+            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",       (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n+            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n+            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since Unix epoch) of the oldest pre-generated key in the key pool\\n\"\n+            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n+            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n+            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in \" + CURRENCY_UNIT + \"/kB\\n\"\n+            \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"             (string) any error messages\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getinfo\", \"\")\n+            + HelpExampleRpc(\"getinfo\", \"\")\n+        );\n+\n+#ifdef ENABLE_WALLET\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    LOCK2(cs_main, pwallet ? &pwallet->cs_wallet : nullptr);\n+#else\n+    LOCK(cs_main);\n+#endif\n+\n+    proxyType proxy;\n+    GetProxy(NET_IPV4, proxy);\n+\n+    UniValue obj(UniValue::VOBJ);\n+    obj.push_back(Pair(\"deprecation-warning\", \"WARNING: getinfo is deprecated and will be fully removed in 0.16.\"\n+        \" Projects should transition to using getblockchaininfo, getnetworkinfo, and getwalletinfo before upgrading to 0.16\"));\n+    obj.push_back(Pair(\"version\", CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\", PROTOCOL_VERSION));\n+#ifdef ENABLE_WALLET\n+    if (pwallet) {\n+        obj.push_back(Pair(\"walletversion\", pwallet->GetVersion()));\n+        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwallet->GetBalance())));\n+    }\n+#endif\n+    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n+    obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n+    if(g_connman)\n+        obj.push_back(Pair(\"connections\",   (int)g_connman->GetNodeCount(CConnman::CONNECTIONS_ALL)));\n+    obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.proxy.ToStringIPPort() : std::string())));\n+    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n+    obj.push_back(Pair(\"testnet\",       Params().NetworkIDString() == CBaseChainParams::TESTNET));\n+#ifdef ENABLE_WALLET\n+    if (pwallet) {\n+        obj.push_back(Pair(\"keypoololdest\", pwallet->GetOldestKeyPoolTime()));\n+        obj.push_back(Pair(\"keypoolsize\",   (int)pwallet->GetKeyPoolSize()));\n+    }\n+    if (pwallet && pwallet->IsCrypted()) {\n+        obj.push_back(Pair(\"unlocked_until\", pwallet->nRelockTime));\n+    }\n+    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(payTxFee.GetFeePerK())));\n+#endif\n+    obj.push_back(Pair(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n+    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n+    return obj;\n+}\n+\n #ifdef ENABLE_WALLET\n class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n {\n public:\n     CWallet * const pwallet;\n \n-    explicit DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n \n     UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n \n     UniValue operator()(const CKeyID &keyID) const {\n         UniValue obj(UniValue::VOBJ);\n         CPubKey vchPubKey;\n         obj.push_back(Pair(\"isscript\", false));\n-        obj.push_back(Pair(\"iswitness\", false));\n         if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n             obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n             obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n@@ -58,7 +144,6 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n         UniValue obj(UniValue::VOBJ);\n         CScript subscript;\n         obj.push_back(Pair(\"isscript\", true));\n-        obj.push_back(Pair(\"iswitness\", false));\n         if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n             std::vector<CTxDestination> addresses;\n             txnouttype whichType;\n@@ -67,56 +152,14 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n             obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n             obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n             UniValue a(UniValue::VARR);\n-            for (const CTxDestination& addr : addresses) {\n-                a.push_back(EncodeDestination(addr));\n-            }\n+            for (const CTxDestination& addr : addresses)\n+                a.push_back(CBitcoinAddress(addr).ToString());\n             obj.push_back(Pair(\"addresses\", a));\n             if (whichType == TX_MULTISIG)\n                 obj.push_back(Pair(\"sigsrequired\", nRequired));\n         }\n         return obj;\n     }\n-\n-    UniValue operator()(const WitnessV0KeyHash& id) const\n-    {\n-        UniValue obj(UniValue::VOBJ);\n-        CPubKey pubkey;\n-        obj.push_back(Pair(\"isscript\", false));\n-        obj.push_back(Pair(\"iswitness\", true));\n-        obj.push_back(Pair(\"witness_version\", 0));\n-        obj.push_back(Pair(\"witness_program\", HexStr(id.begin(), id.end())));\n-        if (pwallet && pwallet->GetPubKey(CKeyID(id), pubkey)) {\n-            obj.push_back(Pair(\"pubkey\", HexStr(pubkey)));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const WitnessV0ScriptHash& id) const\n-    {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"isscript\", true));\n-        obj.push_back(Pair(\"iswitness\", true));\n-        obj.push_back(Pair(\"witness_version\", 0));\n-        obj.push_back(Pair(\"witness_program\", HexStr(id.begin(), id.end())));\n-        CRIPEMD160 hasher;\n-        uint160 hash;\n-        hasher.Write(id.begin(), 32).Finalize(hash.begin());\n-        if (pwallet && pwallet->GetCScript(CScriptID(hash), subscript)) {\n-            obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-        }\n-        return obj;\n-    }\n-\n-    UniValue operator()(const WitnessUnknown& id) const\n-    {\n-        UniValue obj(UniValue::VOBJ);\n-        CScript subscript;\n-        obj.push_back(Pair(\"iswitness\", true));\n-        obj.push_back(Pair(\"witness_version\", (int)id.version));\n-        obj.push_back(Pair(\"witness_program\", HexStr(id.program, id.program + id.length)));\n-        return obj;\n-    }\n };\n #endif\n \n@@ -125,13 +168,13 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n-            \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"\\nReturn information about the given blockcash address.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"1. \\\"address\\\"     (string, required) The Blockcash address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\", (string) The blockcash address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n@@ -152,8 +195,8 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n-            + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleCli(\"validateaddress\", \"\\\"CfCV8wvBhiSzY84qxc1gf9NRdSJbenmfyK\\\"\")\n+            + HelpExampleRpc(\"validateaddress\", \"\\\"CfCV8wvBhiSzY84qxc1gf9NRdSJbenmfyK\\\"\")\n         );\n \n #ifdef ENABLE_WALLET\n@@ -164,14 +207,15 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     LOCK(cs_main);\n #endif\n \n-    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n-    bool isValid = IsValidDestination(dest);\n+    CBitcoinAddress address(request.params[0].get_str());\n+    bool isValid = address.IsValid();\n \n     UniValue ret(UniValue::VOBJ);\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        std::string currentAddress = EncodeDestination(dest);\n+        CTxDestination dest = address.Get();\n+        std::string currentAddress = address.ToString();\n         ret.push_back(Pair(\"address\", currentAddress));\n \n         CScript scriptPubKey = GetScriptForDestination(dest);\n@@ -186,25 +230,18 @@ UniValue validateaddress(const JSONRPCRequest& request)\n         if (pwallet && pwallet->mapAddressBook.count(dest)) {\n             ret.push_back(Pair(\"account\", pwallet->mapAddressBook[dest].name));\n         }\n+        CKeyID keyID;\n         if (pwallet) {\n-            const CKeyMetadata* meta = nullptr;\n-            if (const CKeyID* key_id = boost::get<CKeyID>(&dest)) {\n-                auto it = pwallet->mapKeyMetadata.find(*key_id);\n-                if (it != pwallet->mapKeyMetadata.end()) {\n-                    meta = &it->second;\n-                }\n-            }\n-            if (!meta) {\n-                auto it = pwallet->m_script_metadata.find(CScriptID(scriptPubKey));\n-                if (it != pwallet->m_script_metadata.end()) {\n-                    meta = &it->second;\n-                }\n+            const auto& meta = pwallet->mapKeyMetadata;\n+            auto it = address.GetKeyID(keyID) ? meta.find(keyID) : meta.end();\n+            if (it == meta.end()) {\n+                it = meta.find(CScriptID(scriptPubKey));\n             }\n-            if (meta) {\n-                ret.push_back(Pair(\"timestamp\", meta->nCreateTime));\n-                if (!meta->hdKeypath.empty()) {\n-                    ret.push_back(Pair(\"hdkeypath\", meta->hdKeypath));\n-                    ret.push_back(Pair(\"hdmasterkeyid\", meta->hdMasterKeyID.GetHex()));\n+            if (it != meta.end()) {\n+                ret.push_back(Pair(\"timestamp\", it->second.nCreateTime));\n+                if (!it->second.hdKeypath.empty()) {\n+                    ret.push_back(Pair(\"hdkeypath\", it->second.hdKeypath));\n+                    ret.push_back(Pair(\"hdmasterkeyid\", it->second.hdMasterKeyID.GetHex()));\n                 }\n             }\n         }\n@@ -240,15 +277,16 @@ CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& pa\n         const std::string& ks = keys[i].get_str();\n #ifdef ENABLE_WALLET\n         // Case 1: Bitcoin address and we have full public key:\n-        CTxDestination dest = DecodeDestination(ks);\n-        if (pwallet && IsValidDestination(dest)) {\n-            const CKeyID *keyID = boost::get<CKeyID>(&dest);\n-            if (!keyID) {\n-                throw std::runtime_error(strprintf(\"%s does not refer to a key\", ks));\n-            }\n+        CBitcoinAddress address(ks);\n+        if (pwallet && address.IsValid()) {\n+            CKeyID keyID;\n+            if (!address.GetKeyID(keyID))\n+                throw std::runtime_error(\n+                    strprintf(\"%s does not refer to a key\",ks));\n             CPubKey vchPubKey;\n-            if (!pwallet->GetPubKey(*keyID, vchPubKey)) {\n-                throw std::runtime_error(strprintf(\"no full public key for address %s\", ks));\n+            if (!pwallet->GetPubKey(keyID, vchPubKey)) {\n+                throw std::runtime_error(\n+                    strprintf(\"no full public key for address %s\",ks));\n             }\n             if (!vchPubKey.IsFullyValid())\n                 throw std::runtime_error(\" Invalid public key: \"+ks);\n@@ -295,9 +333,9 @@ UniValue createmultisig(const JSONRPCRequest& request)\n \n             \"\\nArguments:\\n\"\n             \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n-            \"2. \\\"keys\\\"       (string, required) A json array of keys which are bitcoin addresses or hex-encoded public keys\\n\"\n+            \"2. \\\"keys\\\"       (string, required) A json array of keys which are blockcash addresses or hex-encoded public keys\\n\"\n             \"     [\\n\"\n-            \"       \\\"key\\\"    (string) bitcoin address or hex-encoded public key\\n\"\n+            \"       \\\"key\\\"    (string) blockcash address or hex-encoded public key\\n\"\n             \"       ,...\\n\"\n             \"     ]\\n\"\n \n@@ -309,19 +347,20 @@ UniValue createmultisig(const JSONRPCRequest& request)\n \n             \"\\nExamples:\\n\"\n             \"\\nCreate a multisig address from 2 addresses\\n\"\n-            + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\") +\n+            + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"CfCV8wvBhiSzY84qxc1gf9NRdSJbenmfyK\\\\\\\",\\\\\\\"Cdu5i32mBLti4gLGR2VmQM6geZZKA4iogE\\\\\\\"]\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"createmultisig\", \"2, \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"createmultisig\", \"2, \\\"[\\\\\\\"CfCV8wvBhiSzY84qxc1gf9NRdSJbenmfyK\\\\\\\",\\\\\\\"Cdu5i32mBLti4gLGR2VmQM6geZZKA4iogE\\\\\\\"]\\\"\")\n         ;\n         throw std::runtime_error(msg);\n     }\n \n     // Construct using pay-to-script-hash:\n     CScript inner = _createmultisig_redeemScript(pwallet, request.params);\n     CScriptID innerID(inner);\n+    CBitcoinAddress address(innerID);\n \n     UniValue result(UniValue::VOBJ);\n-    result.push_back(Pair(\"address\", EncodeDestination(innerID)));\n+    result.push_back(Pair(\"address\", address.ToString()));\n     result.push_back(Pair(\"redeemScript\", HexStr(inner.begin(), inner.end())));\n \n     return result;\n@@ -334,7 +373,7 @@ UniValue verifymessage(const JSONRPCRequest& request)\n             \"verifymessage \\\"address\\\" \\\"signature\\\" \\\"message\\\"\\n\"\n             \"\\nVerify a signed message\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"         (string, required) The bitcoin address to use for the signature.\\n\"\n+            \"1. \\\"address\\\"         (string, required) The blockcash address to use for the signature.\\n\"\n             \"2. \\\"signature\\\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\\n\"\n             \"3. \\\"message\\\"         (string, required) The message that was signed.\\n\"\n             \"\\nResult:\\n\"\n@@ -343,11 +382,11 @@ UniValue verifymessage(const JSONRPCRequest& request)\n             \"\\nUnlock the wallet for 30 seconds\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n             \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"signmessage\", \"\\\"CfCV8wvBhiSzY84qxc1gf9NRdSJbenmfyK\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"CfCV8wvBhiSzY84qxc1gf9NRdSJbenmfyK\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"signature\\\", \\\"my message\\\"\")\n+            + HelpExampleRpc(\"verifymessage\", \"\\\"CfCV8wvBhiSzY84qxc1gf9NRdSJbenmfyK\\\", \\\"signature\\\", \\\"my message\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -356,15 +395,13 @@ UniValue verifymessage(const JSONRPCRequest& request)\n     std::string strSign     = request.params[1].get_str();\n     std::string strMessage  = request.params[2].get_str();\n \n-    CTxDestination destination = DecodeDestination(strAddress);\n-    if (!IsValidDestination(destination)) {\n+    CBitcoinAddress addr(strAddress);\n+    if (!addr.IsValid())\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid address\");\n-    }\n \n-    const CKeyID *keyID = boost::get<CKeyID>(&destination);\n-    if (!keyID) {\n+    CKeyID keyID;\n+    if (!addr.GetKeyID(keyID))\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n-    }\n \n     bool fInvalid = false;\n     std::vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n@@ -380,7 +417,7 @@ UniValue verifymessage(const JSONRPCRequest& request)\n     if (!pubkey.RecoverCompact(ss.GetHash(), vchSig))\n         return false;\n \n-    return (pubkey.GetID() == *keyID);\n+    return (pubkey.GetID() == keyID);\n }\n \n UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n@@ -398,7 +435,7 @@ UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n             \"\\nCreate the signature\\n\"\n             + HelpExampleCli(\"signmessagewithprivkey\", \"\\\"privkey\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"CfCV8wvBhiSzY84qxc1gf9NRdSJbenmfyK\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n             + HelpExampleRpc(\"signmessagewithprivkey\", \"\\\"privkey\\\", \\\"my message\\\"\")\n         );\n@@ -422,7 +459,7 @@ UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n     if (!key.SignCompact(ss.GetHash(), vchSig))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Sign failed\");\n \n-    return EncodeBase64(vchSig.data(), vchSig.size());\n+    return EncodeBase64(&vchSig[0], vchSig.size());\n }\n \n UniValue setmocktime(const JSONRPCRequest& request)\n@@ -515,7 +552,7 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"getmemoryinfo\", \"\")\n         );\n \n-    std::string mode = request.params[0].isNull() ? \"stats\" : request.params[0].get_str();\n+    std::string mode = (request.params.size() < 1 || request.params[0].isNull()) ? \"stats\" : request.params[0].get_str();\n     if (mode == \"stats\") {\n         UniValue obj(UniValue::VOBJ);\n         obj.push_back(Pair(\"locked\", RPCLockedMemoryInfo()));\n@@ -540,9 +577,6 @@ uint32_t getCategoryMask(UniValue cats) {\n         if (!GetLogCategory(&flag, &cat)) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n         }\n-        if (flag == BCLog::NONE) {\n-            return 0;\n-        }\n         mask |= flag;\n     }\n     return mask;\n@@ -552,44 +586,28 @@ UniValue logging(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 2) {\n         throw std::runtime_error(\n-            \"logging ( <include> <exclude> )\\n\"\n+            \"logging [include,...] <exclude>\\n\"\n             \"Gets and sets the logging configuration.\\n\"\n-            \"When called without an argument, returns the list of categories with status that are currently being debug logged or not.\\n\"\n-            \"When called with arguments, adds or removes categories from debug logging and return the lists above.\\n\"\n-            \"The arguments are evaluated in order \\\"include\\\", \\\"exclude\\\".\\n\"\n-            \"If an item is both included and excluded, it will thus end up being excluded.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n             \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n-            \"In addition, the following are available as category names with special meanings:\\n\"\n-            \"  - \\\"all\\\",  \\\"1\\\" : represent all logging categories.\\n\"\n-            \"  - \\\"none\\\", \\\"0\\\" : even if other logging categories are specified, ignore all of them.\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"include\\\"        (array of strings, optional) A json array of categories to add debug logging\\n\"\n-            \"     [\\n\"\n-            \"       \\\"category\\\"   (string) the valid logging category\\n\"\n-            \"       ,...\\n\"\n-            \"     ]\\n\"\n-            \"2. \\\"exclude\\\"        (array of strings, optional) A json array of categories to remove debug logging\\n\"\n-            \"     [\\n\"\n-            \"       \\\"category\\\"   (string) the valid logging category\\n\"\n-            \"       ,...\\n\"\n-            \"     ]\\n\"\n-            \"\\nResult:\\n\"\n-            \"{                   (json object where keys are the logging categories, and values indicates its status\\n\"\n-            \"  \\\"category\\\": 0|1,  (numeric) if being debug logged or not. 0:inactive, 1:active\\n\"\n-            \"  ...\\n\"\n-            \"}\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n             + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n         );\n     }\n \n     uint32_t originalLogCategories = logCategories;\n-    if (request.params[0].isArray()) {\n+    if (request.params.size() > 0 && request.params[0].isArray()) {\n         logCategories |= getCategoryMask(request.params[0]);\n     }\n \n-    if (request.params[1].isArray()) {\n+    if (request.params.size() > 1 && request.params[1].isArray()) {\n         logCategories &= ~getCategoryMask(request.params[1]);\n     }\n \n@@ -624,26 +642,27 @@ UniValue echo(const JSONRPCRequest& request)\n             \"echo|echojson \\\"message\\\" ...\\n\"\n             \"\\nSimply echo back the input arguments. This command is for testing.\\n\"\n             \"\\nThe difference between echo and echojson is that echojson has argument conversion enabled in the client-side table in\"\n-            \"bitcoin-cli and the GUI. There is no server-side difference.\"\n+            \"blockcash-cli and the GUI. There is no server-side difference.\"\n         );\n \n     return request.params;\n }\n \n static const CRPCCommand commands[] =\n-{ //  category              name                      actor (function)         argNames\n+{ //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          {\"mode\"} },\n-    { \"control\",            \"logging\",                &logging,                {\"include\", \"exclude\"}},\n-    { \"util\",               \"validateaddress\",        &validateaddress,        {\"address\"} }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\"} },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          {\"address\",\"signature\",\"message\"} },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, {\"privkey\",\"message\"} },\n+    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {\"mode\"} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"address\"} }, /* uses wallet if enabled */\n+    { \"util\",               \"createmultisig\",         &createmultisig,         true,  {\"nrequired\",\"keys\"} },\n+    { \"util\",               \"verifymessage\",          &verifymessage,          true,  {\"address\",\"signature\",\"message\"} },\n+    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true,  {\"privkey\",\"message\"} },\n \n     /* Not shown in help */\n-    { \"hidden\",             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n-    { \"hidden\",             \"echo\",                   &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n-    { \"hidden\",             \"echojson\",               &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"setmocktime\",            &setmocktime,            true,  {\"timestamp\"}},\n+    { \"hidden\",             \"echo\",                   &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"echojson\",               &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"logging\",                &logging,                true,  {\"include\", \"exclude\"}},\n };\n \n void RegisterMiscRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "0bd970f652a3d16e7c44eae3312d24e63d69de7d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 360,
        "deletions": 661,
        "changes": 1021,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e781336182164f1d49a4356f97e4c093997cf2/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e781336182164f1d49a4356f97e4c093997cf2/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=58e781336182164f1d49a4356f97e4c093997cf2"
      }
    ]
  }
]