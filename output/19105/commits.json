[
  {
    "sha": "ab30cece0e84a8b917cb9a219c2466574362f300",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjMwY2VjZTBlODRhOGI5MTdjYjlhMjE5YzI0NjY1NzQzNjJmMzAw",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-06-11T12:59:08Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-07-16T16:10:43Z"
      },
      "message": "test: Move modinv to util and add unit test",
      "tree": {
        "sha": "262766be502124fd6d5dbfece2788ee4187229d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/262766be502124fd6d5dbfece2788ee4187229d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab30cece0e84a8b917cb9a219c2466574362f300",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl8QfAYVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNE2oP/315pR0+PmDY6UkyTx75Xra0OHw2\nYu5O5Hmd0SmsfkfMIbhl3+fxOI3ZjWYaPGIC+08tuX7V9wqBkEr+3B8w+BURnak5\nnQDh2Xr086iITQK8RX0NAFLfwNy0HmgTOO29KttdMpYFn/cbDJNuErg6Y1Th+Hmw\naEmGvsLw/X4TxJAg9gheRbQfOiON58MmRcjn22KGsZhEYv1URq/nkkpXv0isaBQu\nXeXmsByzmI+R3ZmkMQrTHGhEjCOvj999Zp7oB+nNJi3M4qbhO1Zh5mqCmqL/jJ5+\n/VJJthjESC1qv8svEcY/X8LjxDG3Xh1LeVqKD62az7jo9a2UrXEn7RF9BYaDEORO\nJSwmbeQVJyWM4SreKIo8eu52n3G2BNBkout+0gGCs3JjEt+Tdwpg80Ih/rO/VK4i\noR+BGlBKpXUSBeRIMuC46IaAhRfLnzY79WjXBFs9qZ2CWAup3wEE+l9XGE6E/OTH\nC6azeQpwBbyrTp/9qBw0MNdyEe0pH7g+NT9Jp+Z5NvxzymmQrWuN1NnERq+IXMLh\nkquZxWpDQgbTto6XqEzxvtNjvvMk3T3Ffk/phwUCj5j9bmPzfSAuY+DkC+sHczB2\nLdXi7X/GsMk9f40zJgx486Et5j+BzjJ9sKWk1MjbQKwCyEwnHPQjg6cMSQLm9g4b\n8Hm3opp/q+eSbbuq\n=ifOK\n-----END PGP SIGNATURE-----",
        "payload": "tree 262766be502124fd6d5dbfece2788ee4187229d8\nparent b33136b6ba9887f7db651c4c5264ca7f2f601df7\nauthor Fabian Jahr <fjahr@protonmail.com> 1591880348 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1594915843 +0200\n\ntest: Move modinv to util and add unit test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab30cece0e84a8b917cb9a219c2466574362f300",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab30cece0e84a8b917cb9a219c2466574362f300",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab30cece0e84a8b917cb9a219c2466574362f300/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b33136b6ba9887f7db651c4c5264ca7f2f601df7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b33136b6ba9887f7db651c4c5264ca7f2f601df7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b33136b6ba9887f7db651c4c5264ca7f2f601df7"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 33,
      "deletions": 16
    },
    "files": [
      {
        "sha": "adbffb7dc7ae7525b5a76bf1d9850ef451551780",
        "filename": "test/functional/test_framework/key.py",
        "status": "modified",
        "additions": 1,
        "deletions": 16,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab30cece0e84a8b917cb9a219c2466574362f300/test/functional/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab30cece0e84a8b917cb9a219c2466574362f300/test/functional/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/key.py?ref=ab30cece0e84a8b917cb9a219c2466574362f300",
        "patch": "@@ -8,22 +8,7 @@\n anything but tests.\"\"\"\n import random\n \n-def modinv(a, n):\n-    \"\"\"Compute the modular inverse of a modulo n\n-\n-    See https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm#Modular_integers.\n-    \"\"\"\n-    t1, t2 = 0, 1\n-    r1, r2 = n, a\n-    while r2 != 0:\n-        q = r1 // r2\n-        t1, t2 = t2, t1 - q * t2\n-        r1, r2 = r2, r1 - q * r2\n-    if r1 > 1:\n-        return None\n-    if t1 < 0:\n-        t1 += n\n-    return t1\n+from .util import modinv\n \n def jacobi_symbol(n, k):\n     \"\"\"Compute the Jacobi symbol of n modulo k"
      },
      {
        "sha": "641e18fae7a883d4f6d535849af6e3c2ef60a165",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab30cece0e84a8b917cb9a219c2466574362f300/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab30cece0e84a8b917cb9a219c2466574362f300/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=ab30cece0e84a8b917cb9a219c2466574362f300",
        "patch": "@@ -15,6 +15,7 @@\n import random\n import re\n import time\n+import unittest\n \n from . import coverage\n from .authproxy import AuthServiceProxy, JSONRPCException\n@@ -629,3 +630,33 @@ def find_vout_for_address(node, txid, addr):\n         if any([addr == a for a in tx[\"vout\"][i][\"scriptPubKey\"][\"addresses\"]]):\n             return i\n     raise RuntimeError(\"Vout not found for address: txid=%s, addr=%s\" % (txid, addr))\n+\n+def modinv(a, n):\n+    \"\"\"Compute the modular inverse of a modulo n using the extended Euclidean\n+    Algorithm. See https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm#Modular_integers.\n+    \"\"\"\n+    # TODO: Change to pow(a, -1, n) available in Python 3.8\n+    t1, t2 = 0, 1\n+    r1, r2 = n, a\n+    while r2 != 0:\n+        q = r1 // r2\n+        t1, t2 = t2, t1 - q * t2\n+        r1, r2 = r2, r1 - q * r2\n+    if r1 > 1:\n+        return None\n+    if t1 < 0:\n+        t1 += n\n+    return t1\n+\n+class TestFrameworkUtil(unittest.TestCase):\n+    def test_modinv(self):\n+        test_vectors = [\n+            [7, 11],\n+            [11, 29],\n+            [90, 13],\n+            [1891, 3797],\n+            [6003722857, 77695236973],\n+        ]\n+\n+        for a, n in test_vectors:\n+            self.assertEqual(modinv(a, n), pow(a, n-2, n))"
      },
      {
        "sha": "c948833c421dfba2d76acf4de9b92d264d571508",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab30cece0e84a8b917cb9a219c2466574362f300/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab30cece0e84a8b917cb9a219c2466574362f300/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=ab30cece0e84a8b917cb9a219c2466574362f300",
        "patch": "@@ -70,6 +70,7 @@\n     \"address\",\n     \"blocktools\",\n     \"script\",\n+    \"util\",\n ]\n \n EXTENDED_SCRIPTS = ["
      }
    ]
  },
  {
    "sha": "b85543cb7361d6ba27c0eeca756eec9fd5395b36",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODU1NDNjYjczNjFkNmJhMjdjMGVlY2E3NTZlZWM5ZmQ1Mzk1YjM2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-05-26T21:03:00Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-07-16T16:10:48Z"
      },
      "message": "test: Add Python MuHash3072 implementation to test framework",
      "tree": {
        "sha": "07bbcaaa607b52906d369d09cdbc031b710b502f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07bbcaaa607b52906d369d09cdbc031b710b502f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b85543cb7361d6ba27c0eeca756eec9fd5395b36",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl8QfAgVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNgjoP/ikmybNMTVSIHl6ZGdzCGdhOLoAE\nBtlYjq4glh0ZuxX3uASkCUuFh8dR8RRJszM2c/3uIvZpgqbrCD7E4pi/4mvdc42c\nQLwfleyKS1Mk+005OKkcswid0ZAz5DKv94AShxgiKpNasDRQGHawbRTuasO5P4+D\nlseoTZEyRwmLQB2C1Ty8yQwuQ8+ZRKVDk6emr/CCk46U9qKdysaTZ2wgqU3FfF5k\nyL96w6c+ulTh0v/LM4ktgNkXrwX9BZg7Ps+n99Bw4QYkf3g2XVgq3IxB3FXM/e5d\nQfL+WXtuhaDX35EQ1HrhNG2kQxzOUEzDQ9u0n5UZZJ3QgXmy/XlfbmWzWRVRsVUi\n83MQA/3qQZENLsbM80B+oIO7vl+gYiDio8fcOhgCrAuAfW8wlPcJBGtDkN1mKKVt\n6qHrO00vfxIXlDyYY1yoMg5aGKiE/Ur1d5QCiacIP0IfNywaBNxnvNOaLscYKERZ\ncTy4gnIJ23SdAAkHkf/xtSq50SMeXZNZOy4DzClyVJJvJSJBu2hvuNes0+C1+d70\ncBhS4qR8D5efV7JT3/+OXISZlVbovL9tnnZtd15DEspThEI9rXEonW8/zNfqiQiT\nbIvfXBKVQpaTLAt2R7NFmIm9sPpwix1SvZ4nIAtTR5Z3Ys1GoL9XKXoF4SdKknhn\n6Y+pJY1Dl1muvUdT\n=l4HX\n-----END PGP SIGNATURE-----",
        "payload": "tree 07bbcaaa607b52906d369d09cdbc031b710b502f\nparent ab30cece0e84a8b917cb9a219c2466574362f300\nauthor Pieter Wuille <pieter@wuille.net> 1590526980 -0700\ncommitter Fabian Jahr <fjahr@protonmail.com> 1594915848 +0200\n\ntest: Add Python MuHash3072 implementation to test framework\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b85543cb7361d6ba27c0eeca756eec9fd5395b36",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b85543cb7361d6ba27c0eeca756eec9fd5395b36",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b85543cb7361d6ba27c0eeca756eec9fd5395b36/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab30cece0e84a8b917cb9a219c2466574362f300",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab30cece0e84a8b917cb9a219c2466574362f300",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab30cece0e84a8b917cb9a219c2466574362f300"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 90,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7dfce1b7565665c1ed4fb5c9f8f6626f09c58a57",
        "filename": "test/functional/test_framework/muhash.py",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b85543cb7361d6ba27c0eeca756eec9fd5395b36/test/functional/test_framework/muhash.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b85543cb7361d6ba27c0eeca756eec9fd5395b36/test/functional/test_framework/muhash.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/muhash.py?ref=b85543cb7361d6ba27c0eeca756eec9fd5395b36",
        "patch": "@@ -0,0 +1,90 @@\n+# Copyright (c) 2020 Pieter Wuille\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Native Python MuHash3072 implementation.\"\"\"\n+\n+import hashlib\n+\n+from .util import modinv\n+\n+def rot32(v, bits):\n+    \"\"\"Rotate the 32-bit value v left by bits bits.\"\"\"\n+    bits %= 32  # Make sure the term below does not throw an exception\n+    return ((v << bits) & 0xffffffff) | (v >> (32 - bits))\n+\n+def chacha20_doubleround(s):\n+    \"\"\"Apply a ChaCha20 double round to 16-element state array s.\n+\n+    See https://cr.yp.to/chacha/chacha-20080128.pdf and https://tools.ietf.org/html/rfc8439\n+    \"\"\"\n+    QUARTER_ROUNDS = [(0, 4, 8, 12),\n+                      (1, 5, 9, 13),\n+                      (2, 6, 10, 14),\n+                      (3, 7, 11, 15),\n+                      (0, 5, 10, 15),\n+                      (1, 6, 11, 12),\n+                      (2, 7, 8, 13),\n+                      (3, 4, 9, 14)]\n+\n+    for a, b, c, d in QUARTER_ROUNDS:\n+        s[a] = (s[a] + s[b]) & 0xffffffff\n+        s[d] = rot32(s[d] ^ s[a], 16)\n+        s[c] = (s[c] + s[d]) & 0xffffffff\n+        s[b] = rot32(s[b] ^ s[c], 12)\n+        s[a] = (s[a] + s[b]) & 0xffffffff\n+        s[d] = rot32(s[d] ^ s[a], 8)\n+        s[c] = (s[c] + s[d]) & 0xffffffff\n+        s[b] = rot32(s[b] ^ s[c], 7)\n+\n+def chacha20_32_to_384(key32):\n+    \"\"\"Specialized ChaCha20 implementation with 32-byte key, 0 IV, 384-byte output.\"\"\"\n+    # See RFC 8439 section 2.3 for chacha20 parameters\n+    CONSTANTS = [0x61707865, 0x3320646e, 0x79622d32, 0x6b206574]\n+\n+    key_bytes = [0]*8\n+    for i in range(8):\n+        key_bytes[i] = int.from_bytes(key32[(4 * i):(4 * (i+1))], 'little')\n+\n+    INITIALIZATION_VECTOR = [0] * 4\n+    init = CONSTANTS + key_bytes + INITIALIZATION_VECTOR\n+    out = bytearray()\n+    for counter in range(6):\n+        init[12] = counter\n+        s = init.copy()\n+        for _ in range(10):\n+            chacha20_doubleround(s)\n+        for i in range(16):\n+            out.extend(((s[i] + init[i]) & 0xffffffff).to_bytes(4, 'little'))\n+    return bytes(out)\n+\n+def data_to_num3072(data):\n+    \"\"\"Hash a 32-byte array data to a 3072-bit number using 6 Chacha20 operations.\"\"\"\n+    bytes384 = chacha20_32_to_384(data)\n+    return int.from_bytes(bytes384, 'little')\n+\n+class MuHash3072:\n+    \"\"\"Class representing the MuHash3072 computation of a set.\n+\n+    See https://cseweb.ucsd.edu/~mihir/papers/inchash.pdf and https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014337.html\n+    \"\"\"\n+\n+    MODULUS = 2**3072 - 1103717\n+\n+    def __init__(self):\n+        \"\"\"Initialize for an empty set.\"\"\"\n+        self.numerator = 1\n+        self.denominator = 1\n+\n+    def insert(self, data):\n+        \"\"\"Insert a byte array data in the set.\"\"\"\n+        self.numerator = (self.numerator * data_to_num3072(data)) % self.MODULUS\n+\n+    def remove(self, data):\n+        \"\"\"Remove a byte array from the set.\"\"\"\n+        self.denominator = (self.denominator * data_to_num3072(data)) % self.MODULUS\n+\n+    def digest(self):\n+        \"\"\"Extract the final hash. Does not modify this object.\"\"\"\n+        val = (self.numerator * modinv(self.denominator, self.MODULUS)) % self.MODULUS\n+        bytes384 = val.to_bytes(384, 'little')\n+        return hashlib.sha256(bytes384).digest()"
      }
    ]
  },
  {
    "sha": "0e2b400fea890e769b75da5b55fa1902fd9f9851",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTJiNDAwZmVhODkwZTc2OWI3NWRhNWI1NWZhMTkwMmZkOWY5ODUx",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-05-31T18:31:17Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-07-16T16:10:48Z"
      },
      "message": "test: Add basic Python/C++ Muhash implementation parity unit test",
      "tree": {
        "sha": "ee06bec6183254a1bb0452d4abe15105b219bae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee06bec6183254a1bb0452d4abe15105b219bae0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e2b400fea890e769b75da5b55fa1902fd9f9851",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl8QfAgVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNsOAQAJtqDJXxHL0mvjGZLfDpJ62EzMij\nwwZ3F28RgysdYI2pD9Rux2DabFvwNDvSJfHw3hLC7/LcXxpu8T/hJ2ExXZyt349C\np6Viys/fRSbApLXRZFTcHPXplRzeS7in6OjC18YKneUkR9U6kUTHgxrbEixdDosp\nvKRhyDud7Qxup7fgfd7ZslRoAwmBXIak0UpgPIeyDkaT3cjRIFPeJabHXDFxzDEc\npkqI/rcvWvUtr6AjzsBHWB9GopQY8fXWoD+w69bEvP6F0XTLclrmtujHpk014XEH\n1TMenDlY+i91yM654G6/YNHGiiAyWlLm5xugZ2XJ81Z9te1UiSlK6uisJ9rOx6h4\nhlpECn4X2vrNf9AZzkYR727XTvDnOvJW8DRI4bPGu73jo7GFKAZuVbRPGPDTuT7H\niLN2mrZv482h5Ch8XB8/C0OES+kbRT7ey+paFUocp6jtrr8YWT4Ri8q5hYh/3EnR\nbzdNKpb074YI+YJSR/m6lcX1Un9Hp+ZuuM6PJUu6CDaIdazld0xcS+lpRjXy/cL2\nKUkoRnRl4/uCm3XZMQ7Rodi2Egzpev7uRDfSq5fz8rnqj//NXSt9ie+hQ6bpj+Wy\nxAs53rJDacTOd7SIcLNNLVLUURO36oQevXINbQ4SGyBlic+4MymD36uZEHpyMD2a\nAVFKFkwWMr28gAnt\n=V52M\n-----END PGP SIGNATURE-----",
        "payload": "tree ee06bec6183254a1bb0452d4abe15105b219bae0\nparent b85543cb7361d6ba27c0eeca756eec9fd5395b36\nauthor Fabian Jahr <fjahr@protonmail.com> 1590949877 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1594915848 +0200\n\ntest: Add basic Python/C++ Muhash implementation parity unit test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e2b400fea890e769b75da5b55fa1902fd9f9851",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e2b400fea890e769b75da5b55fa1902fd9f9851",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e2b400fea890e769b75da5b55fa1902fd9f9851/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b85543cb7361d6ba27c0eeca756eec9fd5395b36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b85543cb7361d6ba27c0eeca756eec9fd5395b36",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b85543cb7361d6ba27c0eeca756eec9fd5395b36"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "70a3cc53a05574d872ca7be34c7fdc694e1a867b",
        "filename": "test/functional/test_framework/muhash.py",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e2b400fea890e769b75da5b55fa1902fd9f9851/test/functional/test_framework/muhash.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e2b400fea890e769b75da5b55fa1902fd9f9851/test/functional/test_framework/muhash.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/muhash.py?ref=0e2b400fea890e769b75da5b55fa1902fd9f9851",
        "patch": "@@ -4,6 +4,7 @@\n \"\"\"Native Python MuHash3072 implementation.\"\"\"\n \n import hashlib\n+import unittest\n \n from .util import modinv\n \n@@ -88,3 +89,13 @@ def digest(self):\n         val = (self.numerator * modinv(self.denominator, self.MODULUS)) % self.MODULUS\n         bytes384 = val.to_bytes(384, 'little')\n         return hashlib.sha256(bytes384).digest()\n+\n+class TestFrameworkMuhash(unittest.TestCase):\n+    def test_muhash(self):\n+        muhash = MuHash3072()\n+        muhash.insert([0]*32)\n+        muhash.insert([1] + [0]*31)\n+        muhash.remove([2] + [0]*31)\n+        finalized = muhash.digest()\n+        # This mirrors the result in the C++ MuHash3072 unit test\n+        self.assertEqual(finalized[::-1].hex(), \"a44e16d5e34d259b349af21c06e65d653915d2e208e4e03f389af750dc0bfdc3\")"
      },
      {
        "sha": "d7ec9b8b8e38c9f8aeabaebc3ea6eebd5ab7ae26",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e2b400fea890e769b75da5b55fa1902fd9f9851/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e2b400fea890e769b75da5b55fa1902fd9f9851/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=0e2b400fea890e769b75da5b55fa1902fd9f9851",
        "patch": "@@ -69,6 +69,7 @@\n TEST_FRAMEWORK_MODULES = [\n     \"address\",\n     \"blocktools\",\n+    \"muhash\",\n     \"script\",\n     \"util\",\n ]"
      }
    ]
  },
  {
    "sha": "36ec9801a4edb9663ef9ce9ad298233766b903e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNmVjOTgwMWE0ZWRiOTY2M2VmOWNlOWFkMjk4MjMzNzY2YjkwM2U4",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-07-09T11:43:35Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-07-16T16:10:48Z"
      },
      "message": "test: Add chacha20 test vectors in muhash",
      "tree": {
        "sha": "74595e0d0f9420bb966c667412b0c9d655fbc2bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74595e0d0f9420bb966c667412b0c9d655fbc2bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36ec9801a4edb9663ef9ce9ad298233766b903e8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl8QfAgVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNelMP/3dsSSCVIT2hlLYRZsnLHEBz5nMj\n8nwcdYMSfNNnfvKgUbM+ACfHsGRCvzAzIQY4bRVKJ9wfjYhTNFkSX4SRd4/mFDLI\n9tkdIs1xpjMyGP2rZ8HKJhO01EHofcbqF8QYt/IUV/a+Jd7Rwa9TbyJjHMTekXBS\nG6mWhEyKn6nxCz3SQZssYdiGtlgAIKHtgVg9GleKddxW1usTf1pNTD04tuXq12SE\ns6eWRMJi12fkaXE8hYEtgds4aGkZ0r74diaJkzclUmbmLTBQaKGiDtWXmLMrfN3D\nwaEm0Steya886w2ly05N/EFw3MS1B0oX7VDvLE3S8AJO6pbnxFbcGp74iOtMGpQ0\n9msUrYt5Pp/wpswvqIXCZ0NzbjDcpLK5Rt1gBClhmOO6lmfr9pcyMpHQgdPdMJyo\ntKUiyoUT++wJTg76ReDQ3pQJ8Sk8oAyRLgr7mYbSGPrvII0Xi5DKz/TWh7IVAcUv\nYubSFtrYBNrpoX3UFjVIif772nlIH5KWPMV0/MjIV9NlJ5wi6dmLX6hX4zZd7H4+\nqzLoB9gLTrG7LofpHfVB4v/hH8m8dkQ4kTLdOnogKt6ntkHVHy+W4/9xUu1wjZ1W\newE9lWxJm2USG7y2O4Jby2CN65N9ejtsPCupk064HIpr505k5yb9yUz9qaKufq+p\noyE3+bgMAgjvUk4B\n=Jw/L\n-----END PGP SIGNATURE-----",
        "payload": "tree 74595e0d0f9420bb966c667412b0c9d655fbc2bc\nparent 0e2b400fea890e769b75da5b55fa1902fd9f9851\nauthor Fabian Jahr <fjahr@protonmail.com> 1594295015 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1594915848 +0200\n\ntest: Add chacha20 test vectors in muhash\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36ec9801a4edb9663ef9ce9ad298233766b903e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36ec9801a4edb9663ef9ce9ad298233766b903e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36ec9801a4edb9663ef9ce9ad298233766b903e8/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e2b400fea890e769b75da5b55fa1902fd9f9851",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e2b400fea890e769b75da5b55fa1902fd9f9851",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e2b400fea890e769b75da5b55fa1902fd9f9851"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "97d02359cb864abc25a55a00236a2ffd20871d59",
        "filename": "test/functional/test_framework/muhash.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36ec9801a4edb9663ef9ce9ad298233766b903e8/test/functional/test_framework/muhash.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36ec9801a4edb9663ef9ce9ad298233766b903e8/test/functional/test_framework/muhash.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/muhash.py?ref=36ec9801a4edb9663ef9ce9ad298233766b903e8",
        "patch": "@@ -99,3 +99,12 @@ def test_muhash(self):\n         finalized = muhash.digest()\n         # This mirrors the result in the C++ MuHash3072 unit test\n         self.assertEqual(finalized[::-1].hex(), \"a44e16d5e34d259b349af21c06e65d653915d2e208e4e03f389af750dc0bfdc3\")\n+\n+    def test_chacha20(self):\n+        def chacha_check(key, result):\n+            self.assertEqual(chacha20_32_to_384(key)[:64].hex(), result)\n+\n+        # Test vectors from https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04#section-7\n+        # Since the nonce is hardcoded to 0 in our function we only use those vectors.\n+        chacha_check([0]*32, \"76b8e0ada0f13d90405d6ae55386bd28bdd219b8a08ded1aa836efcc8b770dc7da41597c5157488d7724e03fb8d84a376a43b8f41518a11cc387b669b2ee6586\")\n+        chacha_check([0]*31 + [1], \"4540f05a9f1fb296d7736e7b208e3c96eb4fe1834688d2604f450952ed432d41bbe2a0b6ea7566d2a5d1e7e20d42af2c53d792b1c43fea817e9ad275ae546963\")"
      }
    ]
  }
]