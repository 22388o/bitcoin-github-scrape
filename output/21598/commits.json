[
  {
    "sha": "fa5eabe72117f6e3704858e8d5b2c57a120258ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTVlYWJlNzIxMTdmNmUzNzA0ODU4ZThkNWIyYzU3YTEyMDI1OGVk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-04T17:55:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-05T06:42:15Z"
      },
      "message": "refactor: Remove negative lock annotations from globals",
      "tree": {
        "sha": "d211dad9c0328c1da3f04f090eb4e44d02560d78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d211dad9c0328c1da3f04f090eb4e44d02560d78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5eabe72117f6e3704858e8d5b2c57a120258ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjv4gv9HUwnjGH2MCMDwA73im1O3/Q6lRe9+/0CLhBSPNTTMrfzHgyEr19S3S12\nyV0EojjK+6fU97kXCJjVr+567mxrxjinGvhFoO/FCRcvapjS4noidTEwSO7JWzwY\nZWKU7VGZF7TByfowAdUJUaN9PXqmZ4LUv/ZAyh9VMWeW3TjFC7mI2SEHQiYKUDVI\nXoLwStLvSDQwoQOm5SfHZMzVEDgFRde/BOKozObaWeaos7I0w/hQ3vCOIXkgjoe6\nVpy7Zer55jjzHKkBg5LL2i9/XDpA5IT8h7pB2EHrJgMtkELKsbxsK/MUAsCMx7zw\n1ZxUH4bco50dicHnaJOxtp9gHYsA3QSQ4Yg8zEfhkUq68u9fhHL39lB2SKhaqjS6\n8OROHvZM8ixQ8kswLc4L7GcsVCy/XtbY1nhDAuhjYWY/bsWjhRe5+bFmJcqZ3TJ4\njStraT9GvGGi6HBOaRgM7Qq+2oYWQ9XpxU/MbadzblXh7toyRlUkNVHNwkH7p1fB\nB1wCOKDJ\n=AXrX\n-----END PGP SIGNATURE-----",
        "payload": "tree d211dad9c0328c1da3f04f090eb4e44d02560d78\nparent ad4bf8a94594e7fe424e409ba9474d91584bb78c\nauthor MarcoFalke <falke.marco@gmail.com> 1617558944 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1617604935 +0200\n\nrefactor: Remove negative lock annotations from globals\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5eabe72117f6e3704858e8d5b2c57a120258ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5eabe72117f6e3704858e8d5b2c57a120258ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5eabe72117f6e3704858e8d5b2c57a120258ed/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad4bf8a94594e7fe424e409ba9474d91584bb78c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad4bf8a94594e7fe424e409ba9474d91584bb78c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad4bf8a94594e7fe424e409ba9474d91584bb78c"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "2130332eec8803dc42844154a7bd8e56e1025189",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5eabe72117f6e3704858e8d5b2c57a120258ed/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5eabe72117f6e3704858e8d5b2c57a120258ed/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=fa5eabe72117f6e3704858e8d5b2c57a120258ed",
        "patch": "@@ -812,7 +812,7 @@ class ChainstateManager\n {\n public:\n     ...\n-    bool ProcessNewBlock(...) EXCLUSIVE_LOCKS_REQUIRED(!::cs_main);\n+    bool ProcessNewBlock(...) LOCKS_EXCLUDED(::cs_main);\n     ...\n }\n "
      },
      {
        "sha": "ac3c429a5a373dcfcaeecdf2c0457f9ba270607f",
        "filename": "src/index/base.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/index/base.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/index/base.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.h?ref=fa5eabe72117f6e3704858e8d5b2c57a120258ed",
        "patch": "@@ -109,7 +109,7 @@ class BaseIndex : public CValidationInterface\n     /// sync once and only needs to process blocks in the ValidationInterface\n     /// queue. If the index is catching up from far behind, this method does\n     /// not block and immediately returns false.\n-    bool BlockUntilSyncedToCurrentChain() const;\n+    bool BlockUntilSyncedToCurrentChain() const LOCKS_EXCLUDED(::cs_main);\n \n     void Interrupt();\n "
      },
      {
        "sha": "d98d47fd2a4cd1a9df3280be5cb9d97d8bd3ed2b",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fa5eabe72117f6e3704858e8d5b2c57a120258ed",
        "patch": "@@ -448,7 +448,7 @@ class PeerManagerImpl final : public PeerManager\n     /** Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed). */\n     CTransactionRef FindTxForGetData(const CNode& peer, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main);\n \n-    void ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(!cs_main, peer.m_getdata_requests_mutex);\n+    void ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(peer.m_getdata_requests_mutex) LOCKS_EXCLUDED(::cs_main);\n \n     /** Relay map (txid or wtxid -> CTransactionRef) */\n     typedef std::map<uint256, CTransactionRef> MapRelay;"
      },
      {
        "sha": "146c2285925ea0c4732feaae3072f4b5086cff9a",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=fa5eabe72117f6e3704858e8d5b2c57a120258ed",
        "patch": "@@ -56,7 +56,7 @@ std::string LocksHeld();\n template <typename MutexType>\n void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n template <typename MutexType>\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) LOCKS_EXCLUDED(cs);\n void DeleteLock(void* cs);\n bool LockStackEmpty();\n \n@@ -74,7 +74,7 @@ inline void CheckLastCritical(void* cs, std::string& lockname, const char* guard\n template <typename MutexType>\n inline void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs) {}\n template <typename MutexType>\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs) {}\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) LOCKS_EXCLUDED(cs) {}\n inline void DeleteLock(void* cs) {}\n inline bool LockStackEmpty() { return true; }\n #endif"
      },
      {
        "sha": "dc9fa87dbbd8790e456a97128746b3381f7489c8",
        "filename": "src/txorphanage.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/txorphanage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/txorphanage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txorphanage.h?ref=fa5eabe72117f6e3704858e8d5b2c57a120258ed",
        "patch": "@@ -24,7 +24,7 @@ class TxOrphanage {\n     bool AddTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n     /** Check if we already have an orphan transaction (by txid or wtxid) */\n-    bool HaveTx(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    bool HaveTx(const GenTxid& gtxid) const LOCKS_EXCLUDED(::g_cs_orphans);\n \n     /** Get an orphan transaction and its orginating peer\n      * (Transaction ref will be nullptr if not found)\n@@ -38,7 +38,7 @@ class TxOrphanage {\n     void EraseForPeer(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n \n     /** Erase all orphans included in or invalidated by a new block */\n-    void EraseForBlock(const CBlock& block) EXCLUSIVE_LOCKS_REQUIRED(!g_cs_orphans);\n+    void EraseForBlock(const CBlock& block) LOCKS_EXCLUDED(::g_cs_orphans);\n \n     /** Limit the orphanage to the given maximum */\n     unsigned int LimitOrphans(unsigned int max_orphans) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);"
      },
      {
        "sha": "192fd60dc2fa507d37d44349213c9f363e12f23a",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5eabe72117f6e3704858e8d5b2c57a120258ed/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=fa5eabe72117f6e3704858e8d5b2c57a120258ed",
        "patch": "@@ -1181,7 +1181,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Obviously holding cs_main/cs_wallet when going into this call may cause\n      * deadlock\n      */\n-    void BlockUntilSyncedToCurrentChain() const EXCLUSIVE_LOCKS_REQUIRED(!::cs_main, !cs_wallet);\n+    void BlockUntilSyncedToCurrentChain() const LOCKS_EXCLUDED(::cs_main) EXCLUSIVE_LOCKS_REQUIRED(!cs_wallet);\n \n     /** set a single wallet flag */\n     void SetWalletFlag(uint64_t flags);"
      }
    ]
  }
]