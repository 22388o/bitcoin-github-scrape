sipa,2017-05-18T00:25:24Z,utACK d36fe73294b57821a793cd270bb0b4365fcdba00,https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-302267014,302267014,
TheBlueMatt,2017-05-22T20:15:09Z,Maybe add CBlockHeaderAndShortTxIDs while you're at it?,https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-303207944,303207944,
practicalswift,2017-05-23T09:40:57Z,"@TheBlueMatt Good point! Adding also `CBlockHeaderAndShortTxIDs` was my original intention, but when doing so I encountered a long chain of linking errors which I was unable to fully resolve.\n\nMore specifically I didn't manage to create a `test_test_bitcoin_fuzzy_LDADD` variable (in `src/Makefile.test.include`) which would allow `test_bitcoin_fuzzy` to be built cleanly with this patch applied:",https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-303346387,303346387,
practicalswift,2017-05-24T16:02:16Z,@TheBlueMatt I solved the linking issue. Fuzzing of `CBlockHeaderAndShortTxIDs` has been added as part of this PR! :-),https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-303770548,303770548,
practicalswift,2017-05-25T10:17:20Z,"Reverted the `CBlockHeaderAndShortTxIDs` deserialization commit. Couldn't create a proper `test_test_bitcoin_fuzzy_LDADD` in `src/Makefile.test.include` that would allow `test_test_bitcoin_fuzzy` to compile cleanly under all configuration options.\n\n",https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-303975919,303975919,
practicalswift,2017-05-25T15:52:33Z,"Finally managed to make the version including fuzzing of `CBlockHeaderAndShortTxIDs` to compile cleanly under all configuration options.\n\nThis PR should be ready for review now :-)",https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-304046313,304046313,
practicalswift,2017-08-16T09:38:09Z,Anyone willing to review? :-),https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-322718733,322718733,
practicalswift,2017-10-05T13:59:15Z,Friendly ping @TheBlueMatt or @sipa - is this one getting ready for merge? :-),https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-334473414,334473414,
practicalswift,2017-10-05T19:41:06Z,"@laanwj Thanks for merging the `libFuzzer` support (#10440) today!\n\nThis is a friendly ping about my only currently outstanding fuzzing PR.\n\nIt adds fuzzing of the remaining deserialization code that is reachable with tainted data via `ProcessMessage(…, ""…"", vRecv [tainted], …)` but not currently covered by `test_bitcoin_fuzzy`. More specifically it adds fuzzing of the deserialization code",https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-334570913,334570913,
TheBlueMatt,2017-10-05T22:14:24Z,"Looks good, though does the significant extra linking cause issues? See comment at https://github.com/bitcoin/bitcoin/issues/11045#issuecomment-334516409 indicating that at least some fuzzers may get much slower just cause of the extra binary size.",https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-334607049,334607049,
practicalswift,2017-10-24T10:05:19Z,"Seems like I'm unable to create a correct `Makefile.test.include` for this. Anyone willing to help me resolve that issue? :-)\n\nIf not I'll probably remove the `CBlockHeaderAndShortTxIDs` part of this PR to avoid the linking dependency order nightmare :-)",https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-338940688,338940688,
practicalswift,2017-10-25T20:10:09Z,"Changed PR to only cover `BlockTransactions` and `BlockTransactionsRequest`. Hence no extra linking.\n\nThis one should be ready for merge :-)",https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-339455699,339455699,
TheBlueMatt,2017-10-27T20:28:47Z,utACK fd3a2f3130ebd1d1001c5dff80c1ff026654b00d,https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-340077306,340077306,
laanwj,2017-10-28T14:19:59Z,utACK fd3a2f3,https://github.com/bitcoin/bitcoin/pull/10409#issuecomment-340194721,340194721,
