[
  {
    "sha": "31f4ba97b78e781b34b0e09130de923dc754c8f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWY0YmE5N2I3OGU3ODFiMzRiMGUwOTEzMGRlOTIzZGM3NTRjOGY4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T09:37:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T09:37:00Z"
      },
      "message": "Merge commit '313e7f5c89d6e72e06efe9255089765b4c5815fe' into HEAD",
      "tree": {
        "sha": "e82eda6c98889f233641d984706d4061b5779fc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e82eda6c98889f233641d984706d4061b5779fc2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31f4ba97b78e781b34b0e09130de923dc754c8f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f4ba97b78e781b34b0e09130de923dc754c8f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31f4ba97b78e781b34b0e09130de923dc754c8f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f4ba97b78e781b34b0e09130de923dc754c8f8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf73b0cd4cf510aafc37719c68e6634c1719502"
      },
      {
        "sha": "313e7f5c89d6e72e06efe9255089765b4c5815fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/313e7f5c89d6e72e06efe9255089765b4c5815fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/313e7f5c89d6e72e06efe9255089765b4c5815fe"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 15,
      "deletions": 19
    },
    "files": [
      {
        "sha": "a7a2ca91975b11155b9877c745b06aa759197fbe",
        "filename": "src/univalue/.gitignore",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.gitignore?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -19,4 +19,13 @@ test-driver\n libtool\n ltmain.sh\n \n+*.a\n+*.la\n+*.lo\n+*.logs\n *.o\n+*.pc\n+*.trs\n+\n+.dirstamp\n+.libs"
      },
      {
        "sha": "df9e66229c4069c164cc47642a1752b31f16ed7b",
        "filename": "src/univalue/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/Makefile.am?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -5,20 +5,20 @@ ACLOCAL_AMFLAGS = -I build-aux/m4\n include_HEADERS = include/univalue.h\n noinst_HEADERS = lib/univalue_escapes.h\n \n-lib_LTLIBRARIES = lib/libunivalue.la\n+lib_LTLIBRARIES = libunivalue.la\n \n pkgconfigdir = $(libdir)/pkgconfig\n pkgconfig_DATA = pc/libunivalue.pc\n \n-lib_libunivalue_la_SOURCES = \\\n+libunivalue_la_SOURCES = \\\n \tlib/univalue.cpp \\\n \tlib/univalue_read.cpp \\\n \tlib/univalue_write.cpp\n \n-lib_libunivalue_la_LDFLAGS = \\\n+libunivalue_la_LDFLAGS = \\\n \t-version-info $(LIBUNIVALUE_CURRENT):$(LIBUNIVALUE_REVISION):$(LIBUNIVALUE_AGE) \\\n \t-no-undefined\n-lib_libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n+libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n \n TESTS = test/unitester\n \n@@ -38,7 +38,7 @@ noinst_PROGRAMS = $(TESTS)\n TEST_DATA_DIR=test\n \n test_unitester_SOURCES = test/unitester.cpp\n-test_unitester_LDADD = lib/libunivalue.la\n+test_unitester_LDADD = libunivalue.la\n test_unitester_CXXFLAGS = -I$(top_srcdir)/include -DJSON_TEST_SRC=\\\"$(srcdir)/$(TEST_DATA_DIR)\\\"\n test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)\n "
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "src/univalue/build-aux/m4/.empty",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cf73b0cd4cf510aafc37719c68e6634c1719502/src/univalue/build-aux/m4/.empty",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cf73b0cd4cf510aafc37719c68e6634c1719502/src/univalue/build-aux/m4/.empty",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.empty?ref=6cf73b0cd4cf510aafc37719c68e6634c1719502"
      },
      {
        "sha": "f063686524ea4b501f819e52865dff64f3ec5324",
        "filename": "src/univalue/build-aux/m4/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/build-aux/m4/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/build-aux/m4/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.gitignore?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -0,0 +1 @@\n+/*.m4"
      },
      {
        "sha": "ee7fc2851cd511579ee60c7a9fa916f3897c11e2",
        "filename": "src/univalue/lib/.gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/lib/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/lib/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/.gitignore?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -1,10 +1,2 @@\n-\n-libunivalue-uninstalled.pc\n-libunivalue.pc\n-libunivalue.a\n gen\n-\n .libs\n-*.lo\n-*.la\n-"
      },
      {
        "sha": "4afa094b106d601c690c13d1f88f03a96921fbfd",
        "filename": "src/univalue/test/.gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/test/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f4ba97b78e781b34b0e09130de923dc754c8f8/src/univalue/test/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/.gitignore?ref=31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "patch": "@@ -1,7 +1 @@\n-\n unitester\n-\n-*.log\n-*.trs\n-\n-.libs"
      }
    ]
  },
  {
    "sha": "3b1279fdb269727f4fd964df0c238401467930ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjEyNzlmZGIyNjk3MjdmNGZkOTY0ZGYwYzIzODQwMTQ2NzkzMGVh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-10-08T04:09:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T09:38:05Z"
      },
      "message": "build: match upstream build change",
      "tree": {
        "sha": "890f87ab0f623887996d3e2140b4d015a81ba846",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/890f87ab0f623887996d3e2140b4d015a81ba846"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b1279fdb269727f4fd964df0c238401467930ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b1279fdb269727f4fd964df0c238401467930ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b1279fdb269727f4fd964df0c238401467930ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b1279fdb269727f4fd964df0c238401467930ea/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f4ba97b78e781b34b0e09130de923dc754c8f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31f4ba97b78e781b34b0e09130de923dc754c8f8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "605031eb43fc8cfada3f7a31d53d174d04c87d62",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b1279fdb269727f4fd964df0c238401467930ea/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b1279fdb269727f4fd964df0c238401467930ea/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=3b1279fdb269727f4fd964df0c238401467930ea",
        "patch": "@@ -31,7 +31,7 @@ LIBBITCOIN_UTIL=libbitcoin_util.a\n LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n LIBBITCOINQT=qt/libbitcoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n-LIBUNIVALUE=univalue/lib/libunivalue.la\n+LIBUNIVALUE=univalue/libunivalue.la\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)"
      }
    ]
  },
  {
    "sha": "0cca0248f030ea32bd8de778b5a2782e0d191978",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowY2NhMDI0OGYwMzBlYTMyYmQ4ZGU3NzhiNWEyNzgyZTBkMTkxOTc4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T11:16:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T11:16:44Z"
      },
      "message": "Update miniupnpc to 1.9.20151008\n\nThis version of miniupnpc fixes a buffer overflow in the XML (ugh)\nparser during initial network discovery.\n\nhttp://talosintel.com/reports/TALOS-2015-0035/\n\nThe commit fixing the vulnerability is:\nhttps://github.com/miniupnp/miniupnp/commit/79cca974a4c2ab1199786732a67ff6d898051b78\n\nReported by timothy on IRC.",
      "tree": {
        "sha": "b9b612128ac4702f5017643ad52b07ebe456331b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9b612128ac4702f5017643ad52b07ebe456331b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0cca0248f030ea32bd8de778b5a2782e0d191978",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cca0248f030ea32bd8de778b5a2782e0d191978",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0cca0248f030ea32bd8de778b5a2782e0d191978",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cca0248f030ea32bd8de778b5a2782e0d191978/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf73b0cd4cf510aafc37719c68e6634c1719502"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "77bae10c793db1edf165850db891e6c4584008b1",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cca0248f030ea32bd8de778b5a2782e0d191978/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cca0248f030ea32bd8de778b5a2782e0d191978/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=0cca0248f030ea32bd8de778b5a2782e0d191978",
        "patch": "@@ -1,8 +1,8 @@\n package=miniupnpc\n-$(package)_version=1.9.20150730\n+$(package)_version=1.9.20151008\n $(package)_download_path=http://miniupnp.free.fr/files\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=1d64fab1fd3b4c8545139341ba197f19329a863f4f21b578fc2a228ab586a604\n+$(package)_sha256_hash=e444ac3b587ce82709c4d0cfca1fe71f44f9fc433e9f946b12b9e1bfe667a633\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\""
      }
    ]
  },
  {
    "sha": "8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzdlNjEzOGRiY2JkNGEyYjVmZTY3ZTczNGUyYjBmZTBmMDk2MWJj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T12:51:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T12:51:09Z"
      },
      "message": "Merge pull request #6789\n\n0cca024 Update miniupnpc to 1.9.20151008 (Wladimir J. van der Laan)",
      "tree": {
        "sha": "b9b612128ac4702f5017643ad52b07ebe456331b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9b612128ac4702f5017643ad52b07ebe456331b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWF7g9AAoJEHSBCwEjRsmmwBYH/2yxokDaAMM5BRvlxRiKQj1B\nzulbKqcSoFmdgzpQT2QX6fuuvg8sPvfqEDbBlCVpUtqlaoD3mxYdq2rYm88/Ub4h\nQUns4uxhUJIUI4hfn+AjwFEkeKLMHJfflDLkFYoGFzYGS3mz0PPtELWaxAX59mDm\nphtv4PlWu67tAlVBnlOLxusU2Rp07S2OV3r85WR1JnkE+h1fH7sRF+0TmgHuPHwL\nSTib+0JuThQpV9NBEYdU2SCjhcnJAj3qvgJY0yQblxLx1HbaaNteVvf3xcz8QNA+\nujQgLPloSobX3DLwSMnU1lMsqTLXfCbLQAt5mc2Dul+G9/eq08AjiMEJ0V6sbcM=\n=/SEB\n-----END PGP SIGNATURE-----",
        "payload": "tree b9b612128ac4702f5017643ad52b07ebe456331b\nparent 6cf73b0cd4cf510aafc37719c68e6634c1719502\nparent 0cca0248f030ea32bd8de778b5a2782e0d191978\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444395065 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444395069 +0200\n\nMerge pull request #6789\n\n0cca024 Update miniupnpc to 1.9.20151008 (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf73b0cd4cf510aafc37719c68e6634c1719502"
      },
      {
        "sha": "0cca0248f030ea32bd8de778b5a2782e0d191978",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cca0248f030ea32bd8de778b5a2782e0d191978",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0cca0248f030ea32bd8de778b5a2782e0d191978"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "77bae10c793db1edf165850db891e6c4584008b1",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "patch": "@@ -1,8 +1,8 @@\n package=miniupnpc\n-$(package)_version=1.9.20150730\n+$(package)_version=1.9.20151008\n $(package)_download_path=http://miniupnp.free.fr/files\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=1d64fab1fd3b4c8545139341ba197f19329a863f4f21b578fc2a228ab586a604\n+$(package)_sha256_hash=e444ac3b587ce82709c4d0cfca1fe71f44f9fc433e9f946b12b9e1bfe667a633\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\""
      }
    ]
  },
  {
    "sha": "8a320c7956f1cb051305a7664d7c6bb8d555e5e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTMyMGM3OTU2ZjFjYjA1MTMwNWE3NjY0ZDdjNmJiOGQ1NTVlNWU3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-26T15:57:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T14:57:28Z"
      },
      "message": "[trivial] Remove obsolete share/qt/make_windows_icon.sh",
      "tree": {
        "sha": "c3c4189e9de0c91a7674793fdcd278c014f7adf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3c4189e9de0c91a7674793fdcd278c014f7adf4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a320c7956f1cb051305a7664d7c6bb8d555e5e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a320c7956f1cb051305a7664d7c6bb8d555e5e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a320c7956f1cb051305a7664d7c6bb8d555e5e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a320c7956f1cb051305a7664d7c6bb8d555e5e7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 0,
      "deletions": 9
    },
    "files": [
      {
        "sha": "bf607b1c62384eba8ddbe4acf9f930d1b0f03ae3",
        "filename": "share/qt/make_windows_icon.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc/share/qt/make_windows_icon.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc/share/qt/make_windows_icon.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/make_windows_icon.sh?ref=8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "patch": "@@ -1,9 +0,0 @@\n-#!/bin/bash\n-# create multiresolution windows icon\n-ICON_SRC=../../src/qt/res/icons/bitcoin.png\n-ICON_DST=../../src/qt/res/icons/bitcoin.ico\n-convert ${ICON_SRC} -resize 16x16 bitcoin-16.png\n-convert ${ICON_SRC} -resize 32x32 bitcoin-32.png\n-convert ${ICON_SRC} -resize 48x48 bitcoin-48.png\n-convert bitcoin-16.png bitcoin-32.png bitcoin-48.png ${ICON_DST}\n-"
      }
    ]
  },
  {
    "sha": "3507992bcfd5a6b24355d9f652e5e249db725e44",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTA3OTkyYmNmZDVhNmIyNDM1NWQ5ZjY1MmU1ZTI0OWRiNzI1ZTQ0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-26T16:01:28Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T15:09:05Z"
      },
      "message": "[trivial] Make optimize-pngs.py also cover share/pixmaps\n\nAlso fix:\n\"Exception: tostring() has been removed. Please call tobytes() instead.\"",
      "tree": {
        "sha": "1e3f2fedcc48c4304b9fb492164bcb00b358e70e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e3f2fedcc48c4304b9fb492164bcb00b358e70e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3507992bcfd5a6b24355d9f652e5e249db725e44",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3507992bcfd5a6b24355d9f652e5e249db725e44",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3507992bcfd5a6b24355d9f652e5e249db725e44",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3507992bcfd5a6b24355d9f652e5e249db725e44/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a320c7956f1cb051305a7664d7c6bb8d555e5e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a320c7956f1cb051305a7664d7c6bb8d555e5e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a320c7956f1cb051305a7664d7c6bb8d555e5e7"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "799e0cc7d0fb15b6e9338c711d5ca4d813a06a32",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3507992bcfd5a6b24355d9f652e5e249db725e44/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3507992bcfd5a6b24355d9f652e5e249db725e44/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=3507992bcfd5a6b24355d9f652e5e249db725e44",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python\n '''\n-Run this scrip every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n+Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n #pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n '''\n import os\n@@ -18,12 +18,12 @@ def content_hash(filename):\n     '''Return hash of RGBA contents of image'''\n     i = Image.open(filename)\n     i = i.convert('RGBA')\n-    data = i.tostring()\n+    data = i.tobytes()\n     return hashlib.sha256(data).hexdigest()\n \n pngcrush = 'pngcrush'\n git = 'git'\n-folders = [\"src/qt/res/movies\", \"src/qt/res/icons\"]\n+folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n totalSaveBytes = 0\n noHashChange = True"
      }
    ]
  },
  {
    "sha": "60a8b70585d426d55ded88309c87d14c210e7032",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGE4YjcwNTg1ZDQyNmQ1NWRlZDg4MzA5Yzg3ZDE0YzIxMGU3MDMy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-26T16:25:54Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T15:09:29Z"
      },
      "message": "[doc] trivial: developer-notes.md covers more than just coding standards",
      "tree": {
        "sha": "005103f8cd4cea7b00ef3fbc14a8d4cf007ad188",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/005103f8cd4cea7b00ef3fbc14a8d4cf007ad188"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60a8b70585d426d55ded88309c87d14c210e7032",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60a8b70585d426d55ded88309c87d14c210e7032",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60a8b70585d426d55ded88309c87d14c210e7032",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60a8b70585d426d55ded88309c87d14c210e7032/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3507992bcfd5a6b24355d9f652e5e249db725e44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3507992bcfd5a6b24355d9f652e5e249db725e44",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3507992bcfd5a6b24355d9f652e5e249db725e44"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a649b3af4d37b5de82c9be6cf85e5e89eac28cd8",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60a8b70585d426d55ded88309c87d14c210e7032/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60a8b70585d426d55ded88309c87d14c210e7032/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=60a8b70585d426d55ded88309c87d14c210e7032",
        "patch": "@@ -1,5 +1,5 @@\n-Coding Standards\n-================\n+Developer Notes\n+===============\n \n Various coding styles have been used during the history of the codebase,\n and the result is not very consistent. However, we're now trying to converge to"
      }
    ]
  },
  {
    "sha": "d0321a4cfdd660b8335b5d7f14556fb2ec60af22",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDMyMWE0Y2ZkZDY2MGI4MzM1YjVkN2YxNDU1NmZiMmVjNjBhZjIy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-08T12:54:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T15:09:29Z"
      },
      "message": "[doc] trivial: fix markdown syntax in qa/rpc-tests/README.md",
      "tree": {
        "sha": "9fb200629fc1698ef900cb773b75123aa107113d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fb200629fc1698ef900cb773b75123aa107113d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0321a4cfdd660b8335b5d7f14556fb2ec60af22",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0321a4cfdd660b8335b5d7f14556fb2ec60af22",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0321a4cfdd660b8335b5d7f14556fb2ec60af22",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0321a4cfdd660b8335b5d7f14556fb2ec60af22/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60a8b70585d426d55ded88309c87d14c210e7032",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60a8b70585d426d55ded88309c87d14c210e7032",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60a8b70585d426d55ded88309c87d14c210e7032"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d2db00362fa189032d5a8da2c0d9ced5a53148a9",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0321a4cfdd660b8335b5d7f14556fb2ec60af22/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0321a4cfdd660b8335b5d7f14556fb2ec60af22/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=d0321a4cfdd660b8335b5d7f14556fb2ec60af22",
        "patch": "@@ -37,11 +37,11 @@ Helper functions for creating blocks and transactions.\n Notes\n =====\n \n-You can run any single test by calling qa/pull-tester/rpc-tests.py <testname>\n+You can run any single test by calling `qa/pull-tester/rpc-tests.py <testname>`.\n \n Or you can run any combination of tests by calling `qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...`\n \n-Run the regression test suite with `qa/pull-tester/rpc-tests.py'\n+Run the regression test suite with `qa/pull-tester/rpc-tests.py`\n \n Run all possible tests with `qa/pull-tester/rpc-tests.py -extended`\n "
      }
    ]
  },
  {
    "sha": "28e3249e53b8ef7516636df0f1406466a513095d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOGUzMjQ5ZTUzYjhlZjc1MTY2MzZkZjBmMTQwNjQ2NmE1MTMwOTVk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T17:36:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T17:36:32Z"
      },
      "message": "Bump minrelaytxfee default\n\nTo bridge the time until a dynamic method for determining this fee is\nmerged.\n\nThis is especially aimed at the stable releases (0.10, 0.11) because\nfull mempool limiting, as will be in 0.12, is too invasive and risky to\nbackport.",
      "tree": {
        "sha": "ba38d3530f653d308dab60cf398757c56e8d8778",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba38d3530f653d308dab60cf398757c56e8d8778"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28e3249e53b8ef7516636df0f1406466a513095d",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28e3249e53b8ef7516636df0f1406466a513095d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28e3249e53b8ef7516636df0f1406466a513095d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28e3249e53b8ef7516636df0f1406466a513095d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "baad7fc050be60b7c7b9aedcbf498fe15072b4ba",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28e3249e53b8ef7516636df0f1406466a513095d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28e3249e53b8ef7516636df0f1406466a513095d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=28e3249e53b8ef7516636df0f1406466a513095d",
        "patch": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(1000);\n+CFeeRate minRelayTxFee = CFeeRate(5000);\n \n CTxMemPool mempool(::minRelayTxFee);\n "
      }
    ]
  },
  {
    "sha": "14885068726a8e0dc73ffa127225ab80be3e3612",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDg4NTA2ODcyNmE4ZTBkYzczZmZhMTI3MjI1YWI4MGJlM2UzNjEy",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2015-10-08T08:22:50Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2015-10-09T17:56:39Z"
      },
      "message": "Add tests for gettxoutsetinfo, CLevelDBBatch, CLevelDBIterator\n\nThanks @dexX7.",
      "tree": {
        "sha": "53d5098ed266593cc08c3d72bc6000062c519a15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53d5098ed266593cc08c3d72bc6000062c519a15"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14885068726a8e0dc73ffa127225ab80be3e3612",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14885068726a8e0dc73ffa127225ab80be3e3612",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/14885068726a8e0dc73ffa127225ab80be3e3612",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14885068726a8e0dc73ffa127225ab80be3e3612/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0fdf8c80ee322ab747321d61faf9c72af4a51445",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fdf8c80ee322ab747321d61faf9c72af4a51445",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0fdf8c80ee322ab747321d61faf9c72af4a51445"
      }
    ],
    "stats": {
      "total": 148,
      "additions": 140,
      "deletions": 8
    },
    "files": [
      {
        "sha": "db97767272b406374792299467f5136c3edf0e4a",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14885068726a8e0dc73ffa127225ab80be3e3612/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14885068726a8e0dc73ffa127225ab80be3e3612/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=14885068726a8e0dc73ffa127225ab80be3e3612",
        "patch": "@@ -38,7 +38,7 @@\n buildDir = BUILDDIR\n os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n- \n+\n #Disable Windows tests by default\n if EXEEXT == \".exe\" and \"-win\" not in opts:\n     print \"Win tests currently disabled.  Use -win option to enable\"\n@@ -67,6 +67,7 @@\n     'reindex.py',\n     'decodescript.py',\n     'p2p-fullblocktest.py',\n+    'blockchain.py',\n ]\n testScriptsExt = [\n     'bipdersig-p2p.py',\n@@ -98,20 +99,20 @@\n     rpcTestDir = buildDir + '/qa/rpc-tests/'\n     #Run Tests\n     for i in range(len(testScripts)):\n-       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts \n+       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts\n            or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n-            print  \"Running testscript \" + testScripts[i] + \"...\" \n-            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+            print  \"Running testscript \" + testScripts[i] + \"...\"\n+            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n \t    #exit if help is called so we print just one set of instructions\n             p = re.compile(\" -h| --help\")\n             if p.match(passOn):\n                 sys.exit(0)\n \n     #Run Extended Tests\n     for i in range(len(testScriptsExt)):\n-        if ('-extended' in opts or testScriptsExt[i] in opts \n+        if ('-extended' in opts or testScriptsExt[i] in opts\n            or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n-            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\" \n-            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\"\n+            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n else:\n     print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      },
      {
        "sha": "a5c98b777e0d42f900253dd68c614037f592b8c4",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14885068726a8e0dc73ffa127225ab80be3e3612/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14885068726a8e0dc73ffa127225ab80be3e3612/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=14885068726a8e0dc73ffa127225ab80be3e3612",
        "patch": "@@ -0,0 +1,52 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test RPC calls related to blockchain state.\n+#\n+\n+import decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    initialize_chain,\n+    assert_equal,\n+    start_nodes,\n+    connect_nodes_bi,\n+)\n+\n+class BlockchainTest(BitcoinTestFramework):\n+    \"\"\"\n+    Test blockchain-related RPC calls:\n+\n+        - gettxoutsetinfo\n+\n+    \"\"\"\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \" + self.options.tmpdir)\n+        initialize_chain(self.options.tmpdir)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(2, self.options.tmpdir)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        res = node.gettxoutsetinfo()\n+\n+        assert_equal(res[u'total_amount'], decimal.Decimal('8725.00000000'))\n+        assert_equal(res[u'transactions'], 200)\n+        assert_equal(res[u'height'], 200)\n+        assert_equal(res[u'txouts'], 200)\n+        assert_equal(res[u'bytes_serialized'], 13000),\n+        assert_equal(len(res[u'bestblock']), 64)\n+        assert_equal(len(res[u'hash_serialized']), 64)\n+\n+\n+if __name__ == '__main__':\n+    BlockchainTest().main()"
      },
      {
        "sha": "36975548c2119bc662203660c2180ec083968ebb",
        "filename": "src/test/leveldbwrapper_tests.cpp",
        "status": "modified",
        "additions": 80,
        "deletions": 1,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14885068726a8e0dc73ffa127225ab80be3e3612/src/test/leveldbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14885068726a8e0dc73ffa127225ab80be3e3612/src/test/leveldbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/leveldbwrapper_tests.cpp?ref=14885068726a8e0dc73ffa127225ab80be3e3612",
        "patch": "@@ -46,7 +46,86 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper)\n         BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n     }\n }\n-                       \n+\n+// Test batch operations\n+BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n+{\n+    // Perform tests both obfuscated and non-obfuscated.\n+    for (int i = 0; i < 2; i++) {\n+        bool obfuscate = (bool)i;\n+        path ph = temp_directory_path() / unique_path();\n+        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+\n+        char key = 'i';\n+        uint256 in = GetRandHash();\n+        char key2 = 'j';\n+        uint256 in2 = GetRandHash();\n+        char key3 = 'k';\n+        uint256 in3 = GetRandHash();\n+\n+        uint256 res;\n+        CLevelDBBatch batch(dbw.GetObfuscateKey());\n+\n+        batch.Write(key, in);\n+        batch.Write(key2, in2);\n+        batch.Write(key3, in3);\n+\n+        // Remove key3 before it's even been written\n+        batch.Erase(key3);\n+\n+        dbw.WriteBatch(batch);\n+\n+        BOOST_CHECK(dbw.Read(key, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n+        BOOST_CHECK(dbw.Read(key2, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in2.ToString());\n+\n+        // key3 never should've been written\n+        BOOST_CHECK(dbw.Read(key3, res) == false);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(leveldbwrapper_iterator)\n+{\n+    // Perform tests both obfuscated and non-obfuscated.\n+    for (int i = 0; i < 2; i++) {\n+        bool obfuscate = (bool)i;\n+        path ph = temp_directory_path() / unique_path();\n+        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+\n+        // The two keys are intentionally chosen for ordering\n+        char key = 'j';\n+        uint256 in = GetRandHash();\n+        BOOST_CHECK(dbw.Write(key, in));\n+        char key2 = 'k';\n+        uint256 in2 = GetRandHash();\n+        BOOST_CHECK(dbw.Write(key2, in2));\n+\n+        boost::scoped_ptr<CLevelDBIterator> it(const_cast<CLevelDBWrapper*>(&dbw)->NewIterator());\n+\n+        // Be sure to seek past the obfuscation key (if it exists)\n+        it->Seek(key);\n+\n+        char key_res;\n+        uint256 val_res;\n+\n+        it->GetKey(key_res);\n+        it->GetValue(val_res);\n+        BOOST_CHECK_EQUAL(key_res, key);\n+        BOOST_CHECK_EQUAL(val_res.ToString(), in.ToString());\n+\n+        it->Next();\n+\n+        it->GetKey(key_res);\n+        it->GetValue(val_res);\n+        BOOST_CHECK_EQUAL(key_res, key2);\n+        BOOST_CHECK_EQUAL(val_res.ToString(), in2.ToString());\n+\n+        it->Next();\n+        BOOST_CHECK_EQUAL(it->Valid(), false);\n+    }\n+}\n+\n // Test that we do not obfuscation if there is existing data.\n BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n {"
      }
    ]
  },
  {
    "sha": "dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2Q4ZTI3YzY1ZGUwZDJjYjk3MjU4OGE2ZTgxMWNhN2NjZDFiM2Jk",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2015-10-09T17:55:27Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2015-10-09T17:56:48Z"
      },
      "message": "Refer to obfuscate_key via pointer in peripheral CLevelDB classes\n\ncc @sipa",
      "tree": {
        "sha": "d53c4b73ad23c520732eb2f79e1a8d9652d5d272",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d53c4b73ad23c520732eb2f79e1a8d9652d5d272"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14885068726a8e0dc73ffa127225ab80be3e3612",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14885068726a8e0dc73ffa127225ab80be3e3612",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14885068726a8e0dc73ffa127225ab80be3e3612"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 14,
      "deletions": 14
    },
    "files": [
      {
        "sha": "60101e18cc03e67aba6a4058fea0c8533c713902",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
        "patch": "@@ -32,13 +32,13 @@ class CLevelDBBatch\n \n private:\n     leveldb::WriteBatch batch;\n-    const std::vector<unsigned char> obfuscate_key;\n+    const std::vector<unsigned char> *obfuscate_key;\n \n public:\n     /**\n      * @param[in] obfuscate_key    If passed, XOR data with this key.\n      */\n-    CLevelDBBatch(const std::vector<unsigned char>& obfuscate_key) : obfuscate_key(obfuscate_key) { };\n+    CLevelDBBatch(const std::vector<unsigned char> *obfuscate_key) : obfuscate_key(obfuscate_key) { };\n \n     template <typename K, typename V>\n     void Write(const K& key, const V& value)\n@@ -51,7 +51,7 @@ class CLevelDBBatch\n         CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n         ssValue.reserve(ssValue.GetSerializeSize(value));\n         ssValue << value;\n-        ssValue.Xor(obfuscate_key);\n+        ssValue.Xor(*obfuscate_key);\n         leveldb::Slice slValue(&ssValue[0], ssValue.size());\n \n         batch.Put(slKey, slValue);\n@@ -73,15 +73,15 @@ class CLevelDBIterator\n {\n private:\n     leveldb::Iterator *piter;\n-    const std::vector<unsigned char> obfuscate_key;\n+    const std::vector<unsigned char> *obfuscate_key;\n \n public:\n \n     /**\n      * @param[in] piterIn          The original leveldb iterator.\n      * @param[in] obfuscate_key    If passed, XOR data with this key.\n      */\n-    CLevelDBIterator(leveldb::Iterator *piterIn, const std::vector<unsigned char>& obfuscate_key) : \n+    CLevelDBIterator(leveldb::Iterator *piterIn, const std::vector<unsigned char>* obfuscate_key) :\n         piter(piterIn), obfuscate_key(obfuscate_key) { };\n     ~CLevelDBIterator();\n \n@@ -120,7 +120,7 @@ class CLevelDBIterator\n         leveldb::Slice slValue = piter->value();\n         try {\n             CDataStream ssValue(slValue.data(), slValue.data() + slValue.size(), SER_DISK, CLIENT_VERSION);\n-            ssValue.Xor(obfuscate_key);\n+            ssValue.Xor(*obfuscate_key);\n             ssValue >> value;\n         } catch(std::exception &e) {\n             return false;\n@@ -210,7 +210,7 @@ class CLevelDBWrapper\n     template <typename K, typename V>\n     bool Write(const K& key, const V& value, bool fSync = false) throw(leveldb_error)\n     {\n-        CLevelDBBatch batch(obfuscate_key);\n+        CLevelDBBatch batch(&obfuscate_key);\n         batch.Write(key, value);\n         return WriteBatch(batch, fSync);\n     }\n@@ -237,7 +237,7 @@ class CLevelDBWrapper\n     template <typename K>\n     bool Erase(const K& key, bool fSync = false) throw(leveldb_error)\n     {\n-        CLevelDBBatch batch(obfuscate_key);\n+        CLevelDBBatch batch(&obfuscate_key);\n         batch.Erase(key);\n         return WriteBatch(batch, fSync);\n     }\n@@ -252,13 +252,13 @@ class CLevelDBWrapper\n \n     bool Sync() throw(leveldb_error)\n     {\n-        CLevelDBBatch batch(obfuscate_key);\n+        CLevelDBBatch batch(&obfuscate_key);\n         return WriteBatch(batch, true);\n     }\n \n     CLevelDBIterator *NewIterator() \n     {\n-        return new CLevelDBIterator(pdb->NewIterator(iteroptions), obfuscate_key);\n+        return new CLevelDBIterator(pdb->NewIterator(iteroptions), &obfuscate_key);\n     }\n \n     /**"
      },
      {
        "sha": "606313b00453ff7e3b7c6e5f2f01d4fe366dcff6",
        "filename": "src/test/leveldbwrapper_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd/src/test/leveldbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd/src/test/leveldbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/leveldbwrapper_tests.cpp?ref=dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
        "patch": "@@ -64,7 +64,7 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n         uint256 in3 = GetRandHash();\n \n         uint256 res;\n-        CLevelDBBatch batch(dbw.GetObfuscateKey());\n+        CLevelDBBatch batch(&dbw.GetObfuscateKey());\n \n         batch.Write(key, in);\n         batch.Write(key2, in2);"
      },
      {
        "sha": "5723c92440196a43447975e8537605428c4be7ca",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
        "patch": "@@ -49,7 +49,7 @@ uint256 CCoinsViewDB::GetBestBlock() const {\n }\n \n bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n-    CLevelDBBatch batch(db.GetObfuscateKey());\n+    CLevelDBBatch batch(&db.GetObfuscateKey());\n     size_t count = 0;\n     size_t changed = 0;\n     for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end();) {\n@@ -141,7 +141,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n }\n \n bool CBlockTreeDB::WriteBatchSync(const std::vector<std::pair<int, const CBlockFileInfo*> >& fileInfo, int nLastFile, const std::vector<const CBlockIndex*>& blockinfo) {\n-    CLevelDBBatch batch(GetObfuscateKey());\n+    CLevelDBBatch batch(&GetObfuscateKey());\n     for (std::vector<std::pair<int, const CBlockFileInfo*> >::const_iterator it=fileInfo.begin(); it != fileInfo.end(); it++) {\n         batch.Write(make_pair(DB_BLOCK_FILES, it->first), *it->second);\n     }\n@@ -157,7 +157,7 @@ bool CBlockTreeDB::ReadTxIndex(const uint256 &txid, CDiskTxPos &pos) {\n }\n \n bool CBlockTreeDB::WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos> >&vect) {\n-    CLevelDBBatch batch(GetObfuscateKey());\n+    CLevelDBBatch batch(&GetObfuscateKey());\n     for (std::vector<std::pair<uint256,CDiskTxPos> >::const_iterator it=vect.begin(); it!=vect.end(); it++)\n         batch.Write(make_pair(DB_TXINDEX, it->first), it->second);\n     return WriteBatch(batch);"
      }
    ]
  },
  {
    "sha": "21d27ebad5721bc61c62bc72dc3ab3197f9da268",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMWQyN2ViYWQ1NzIxYmM2MWM2MmJjNzJkYzNhYjMxOTdmOWRhMjY4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T17:56:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-09T19:09:44Z"
      },
      "message": "net: Disable upnp by default\n\nCommon sentiment is that the miniupnpc codebase likely contains further\nvulnerabilities.\n\nI'd prefer to get rid of the dependency completely, but a compromise for\nnow is to at least disable it by default.",
      "tree": {
        "sha": "28b2cb57166558c7bc4b74d01a0f1a7c5809bcc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28b2cb57166558c7bc4b74d01a0f1a7c5809bcc1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21d27ebad5721bc61c62bc72dc3ab3197f9da268",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21d27ebad5721bc61c62bc72dc3ab3197f9da268",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/21d27ebad5721bc61c62bc72dc3ab3197f9da268",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21d27ebad5721bc61c62bc72dc3ab3197f9da268/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a98a71e2f9add21f54801358033eb699da6fa92f",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21d27ebad5721bc61c62bc72dc3ab3197f9da268/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21d27ebad5721bc61c62bc72dc3ab3197f9da268/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=21d27ebad5721bc61c62bc72dc3ab3197f9da268",
        "patch": "@@ -24,7 +24,7 @@ files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"i686-pc-linux-gnu x86_64-unknown-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-upnp-default --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"date ar ranlib nm strip\"\n "
      },
      {
        "sha": "eeeb408ded0f9799a10c2f3ffc2f844d9d99c28d",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21d27ebad5721bc61c62bc72dc3ab3197f9da268/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21d27ebad5721bc61c62bc72dc3ab3197f9da268/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=21d27ebad5721bc61c62bc72dc3ab3197f9da268",
        "patch": "@@ -27,7 +27,7 @@ files:\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-apple-darwin11\"\n-  CONFIGFLAGS=\"--enable-upnp-default --enable-reduce-exports GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  CONFIGFLAGS=\"--enable-reduce-exports GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n "
      },
      {
        "sha": "5fa0db6784ea2c8f7fecde6b1df14b9e59623ebe",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21d27ebad5721bc61c62bc72dc3ab3197f9da268/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21d27ebad5721bc61c62bc72dc3ab3197f9da268/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=21d27ebad5721bc61c62bc72dc3ab3197f9da268",
        "patch": "@@ -26,7 +26,7 @@ files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-upnp-default --enable-reduce-exports\"\n+  CONFIGFLAGS=\"--enable-reduce-exports\"\n   FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip\"\n   FAKETIME_PROGS=\"date makensis zip\"\n "
      }
    ]
  },
  {
    "sha": "e253e83c5cc38f1bef7a784671541399bcd0a205",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjUzZTgzYzVjYzM4ZjFiZWY3YTc4NDY3MTU0MTM5OWJjZDBhMjA1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-09T20:40:36Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-09T20:43:16Z"
      },
      "message": "Update debian/changelog and slight tweak to debian/control",
      "tree": {
        "sha": "7574095a8971725a1cd2437fb1af948b262d3368",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7574095a8971725a1cd2437fb1af948b262d3368"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e253e83c5cc38f1bef7a784671541399bcd0a205",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e253e83c5cc38f1bef7a784671541399bcd0a205",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e253e83c5cc38f1bef7a784671541399bcd0a205",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e253e83c5cc38f1bef7a784671541399bcd0a205/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 32,
      "deletions": 1
    },
    "files": [
      {
        "sha": "110bfe03effcdad2f353ff9746ab9589e4a7c08e",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e253e83c5cc38f1bef7a784671541399bcd0a205/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e253e83c5cc38f1bef7a784671541399bcd0a205/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=e253e83c5cc38f1bef7a784671541399bcd0a205",
        "patch": "@@ -1,3 +1,33 @@\n+bitcoin (0.11.0-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n+\n+bitcoin (0.10.2-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n+\n+bitcoin (0.10.1-precise3) precise; urgency=medium\n+\n+  * Fix build dep (include python).\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n+\n+bitcoin (0.10.1-precise2) precise; urgency=medium\n+\n+  * Fix miniupnpc dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n+\n+bitcoin (0.10.1-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n+\n bitcoin (0.10.0-precise1) precise; urgency=medium\n \n   * New upstream releases."
      },
      {
        "sha": "abbea8b80bbf0d215a79de996881f6b1455be6d4",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e253e83c5cc38f1bef7a784671541399bcd0a205/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e253e83c5cc38f1bef7a784671541399bcd0a205/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=e253e83c5cc38f1bef7a784671541399bcd0a205",
        "patch": "@@ -20,7 +20,8 @@ Build-Depends: debhelper,\n  qt4-qmake,\n  libqt4-dev,\n  libqrencode-dev,\n- libprotobuf-dev, protobuf-compiler\n+ libprotobuf-dev, protobuf-compiler,\n+ python\n Standards-Version: 3.9.2\n Homepage: http://www.bitcoin.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git"
      }
    ]
  },
  {
    "sha": "c7b36ccf4a9a71864d850d1c6f597351ba20430f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2IzNmNjZjRhOWE3MTg2NGQ4NTBkMWM2ZjU5NzM1MWJhMjA0MzBm",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-09T22:32:05Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-09T22:32:05Z"
      },
      "message": "Change URLs to https in debian/control",
      "tree": {
        "sha": "80d0ee6c97581dd2fdc29b2939a2fde80b3ff621",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80d0ee6c97581dd2fdc29b2939a2fde80b3ff621"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7b36ccf4a9a71864d850d1c6f597351ba20430f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7b36ccf4a9a71864d850d1c6f597351ba20430f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7b36ccf4a9a71864d850d1c6f597351ba20430f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7b36ccf4a9a71864d850d1c6f597351ba20430f/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e253e83c5cc38f1bef7a784671541399bcd0a205",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e253e83c5cc38f1bef7a784671541399bcd0a205",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e253e83c5cc38f1bef7a784671541399bcd0a205"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2fd68583cecee6907b1e09bbe381aa11cf5e040b",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7b36ccf4a9a71864d850d1c6f597351ba20430f/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7b36ccf4a9a71864d850d1c6f597351ba20430f/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=c7b36ccf4a9a71864d850d1c6f597351ba20430f",
        "patch": "@@ -23,9 +23,9 @@ Build-Depends: debhelper,\n  libprotobuf-dev, protobuf-compiler,\n  python\n Standards-Version: 3.9.2\n-Homepage: http://www.bitcoin.org/\n+Homepage: https://www.bitcoin.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: http://github.com/bitcoin/bitcoin\n+Vcs-Browser: https://github.com/bitcoin/bitcoin\n \n Package: bitcoind\n Architecture: any"
      }
    ]
  },
  {
    "sha": "b94ae81576c199c9a44453b8c9b17e8303f67b72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTRhZTgxNTc2YzE5OWM5YTQ0NDUzYjhjOWIxN2U4MzAzZjY3Yjcy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-10T09:37:57Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-10T09:38:11Z"
      },
      "message": "Merge pull request #6795\n\n21d27eb net: Disable upnp by default (Wladimir J. van der Laan)",
      "tree": {
        "sha": "28b2cb57166558c7bc4b74d01a0f1a7c5809bcc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28b2cb57166558c7bc4b74d01a0f1a7c5809bcc1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b94ae81576c199c9a44453b8c9b17e8303f67b72",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWGNyDAAoJEHSBCwEjRsmmshcIAKEseXOKy/9jEAKzoFGzHMAG\nvBmnt+ivawe13KaUmnpVpW1jB1y0A7GBApXAOYQw7rFX+gotYN+PJI0Z+pw1fhZx\nJ46BUv4dY+n48fSu+18JS+6B3yTWXdzIa+EVqMgSRcoRvaoNiFNWBHw167bdjOrF\ntHvblCOMsTRUYcrW36ItqE5HQKDfo7s5M8+XNnMjaC5Sude2YtvS/wOT0HTIVj1m\n4gQYVSiCWe/VTEimaA0YWqXp53bo/5e4SRihLxaHMmklhYaBlgcLoQIsrihRrZwj\n6x/PEBYKJZOTaHJvPKtu+YDZgR2NH1gK693V7imD1xaqnB3pDr76ZznAJv3zUPE=\n=HL1s\n-----END PGP SIGNATURE-----",
        "payload": "tree 28b2cb57166558c7bc4b74d01a0f1a7c5809bcc1\nparent 8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc\nparent 21d27ebad5721bc61c62bc72dc3ab3197f9da268\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444469877 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444469891 +0200\n\nMerge pull request #6795\n\n21d27eb net: Disable upnp by default (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b94ae81576c199c9a44453b8c9b17e8303f67b72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b94ae81576c199c9a44453b8c9b17e8303f67b72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b94ae81576c199c9a44453b8c9b17e8303f67b72/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c7e6138dbcbd4a2b5fe67e734e2b0fe0f0961bc"
      },
      {
        "sha": "21d27ebad5721bc61c62bc72dc3ab3197f9da268",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21d27ebad5721bc61c62bc72dc3ab3197f9da268",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/21d27ebad5721bc61c62bc72dc3ab3197f9da268"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a98a71e2f9add21f54801358033eb699da6fa92f",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b94ae81576c199c9a44453b8c9b17e8303f67b72/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b94ae81576c199c9a44453b8c9b17e8303f67b72/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "patch": "@@ -24,7 +24,7 @@ files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"i686-pc-linux-gnu x86_64-unknown-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-upnp-default --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"date ar ranlib nm strip\"\n "
      },
      {
        "sha": "eeeb408ded0f9799a10c2f3ffc2f844d9d99c28d",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b94ae81576c199c9a44453b8c9b17e8303f67b72/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b94ae81576c199c9a44453b8c9b17e8303f67b72/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "patch": "@@ -27,7 +27,7 @@ files:\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-apple-darwin11\"\n-  CONFIGFLAGS=\"--enable-upnp-default --enable-reduce-exports GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  CONFIGFLAGS=\"--enable-reduce-exports GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n "
      },
      {
        "sha": "5fa0db6784ea2c8f7fecde6b1df14b9e59623ebe",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b94ae81576c199c9a44453b8c9b17e8303f67b72/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b94ae81576c199c9a44453b8c9b17e8303f67b72/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "patch": "@@ -26,7 +26,7 @@ files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-upnp-default --enable-reduce-exports\"\n+  CONFIGFLAGS=\"--enable-reduce-exports\"\n   FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip\"\n   FAKETIME_PROGS=\"date makensis zip\"\n "
      }
    ]
  },
  {
    "sha": "700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDBmNTJlMGY2YmM0ZWI1ZDA2NWRjOGYxZTQ0ZmZjYmQ1ZGFiMGUw",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2015-10-10T10:46:35Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2015-10-10T10:46:35Z"
      },
      "message": "Clarification of unit test build instructions.",
      "tree": {
        "sha": "5df2461ca6deed97ed10574440fa642a024bc532",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5df2461ca6deed97ed10574440fa642a024bc532"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b94ae81576c199c9a44453b8c9b17e8303f67b72"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b2d6be14f14fd019309beeb40deb1adfd80aa80c",
        "filename": "src/test/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0/src/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0/src/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/README.md?ref=700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0",
        "patch": "@@ -16,6 +16,8 @@ their tests in a test suite called \"<source_filename>_tests\".  For an\n examples of this pattern, examine uint160_tests.cpp and\n uint256_tests.cpp.\n \n+Add the source files to /src/Makefile.test.include to add them to the build.\n+\n For further reading, I found the following website to be helpful in\n explaining how the boost unit test framework works:\n [http://www.alittlemadness.com/2009/03/31/c-unit-testing-with-boosttest/](http://www.alittlemadness.com/2009/03/31/c-unit-testing-with-boosttest/)."
      }
    ]
  },
  {
    "sha": "4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTJlZmIzYzVmZGU0YjFlMzMyY2MwMzJlM2RjNDA4MmVjNGUzY2Fj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-10T12:49:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-10T12:49:38Z"
      },
      "message": "tests: update transaction_tests for new dust threshold",
      "tree": {
        "sha": "2e90f545dd854c93e34bb4fa4734de90c4d9d01b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e90f545dd854c93e34bb4fa4734de90c4d9d01b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28e3249e53b8ef7516636df0f1406466a513095d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28e3249e53b8ef7516636df0f1406466a513095d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28e3249e53b8ef7516636df0f1406466a513095d"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f9423bc0de731fd67b603627e016ee22ccbdfd8f",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac",
        "patch": "@@ -345,7 +345,7 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].nValue = 501; // dust\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n-    t.vout[0].nValue = 601; // not dust\n+    t.vout[0].nValue = 2730; // not dust\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n     t.vout[0].scriptPubKey = CScript() << OP_1;"
      }
    ]
  },
  {
    "sha": "e76d9e4c15bed7e1fa876b4c69c35c8d1712b503",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzZkOWU0YzE1YmVkN2UxZmE4NzZiNGM2OWMzNWM4ZDE3MTJiNTAz",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-10-10T14:25:51Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-10-11T02:17:06Z"
      },
      "message": "[depends] Latest config.guess and config.sub",
      "tree": {
        "sha": "6a45c73dc2867fdbc081171faa287fece42a4d27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a45c73dc2867fdbc081171faa287fece42a4d27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b94ae81576c199c9a44453b8c9b17e8303f67b72"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 17,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3c022c5bb8b3ae3737c3b28f7e77bcab98d790d9",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=e76d9e4c15bed7e1fa876b4c69c35c8d1712b503",
        "patch": "@@ -2,7 +2,7 @@\n # Attempt to guess a canonical system name.\n #   Copyright 1992-2015 Free Software Foundation, Inc.\n \n-timestamp='2015-03-04'\n+timestamp='2015-09-14'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -221,7 +221,7 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t\trelease='-gnu'\n \t\t;;\n \t    *)\n-\t\trelease=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\t\trelease=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`\n \t\t;;\n \tesac\n \t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n@@ -249,6 +249,9 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n     *:MirBSD:*:*)\n \techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n \texit ;;\n+    *:Sortix:*:*)\n+\techo ${UNAME_MACHINE}-unknown-sortix\n+\texit ;;\n     alpha:OSF1:*:*)\n \tcase $UNAME_RELEASE in\n \t*4.0)\n@@ -962,6 +965,9 @@ EOF\n     ia64:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n+    k1om:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n     m32r*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n@@ -1038,7 +1044,7 @@ EOF\n \techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n \texit ;;\n     x86_64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n \texit ;;\n     xtensa*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n@@ -1117,7 +1123,7 @@ EOF\n \t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n \t# the processor, so we play safe by assuming i586.\n \t# Note: whatever this is, it MUST be the same as what config.sub\n-\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n+\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n \t# this is a cross-build.\n \techo i586-pc-msdosdjgpp\n \texit ;;"
      },
      {
        "sha": "1acc966a33bf509f7c50f87d7678fbb813089ca6",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=e76d9e4c15bed7e1fa876b4c69c35c8d1712b503",
        "patch": "@@ -2,7 +2,7 @@\n # Configuration validation subroutine script.\n #   Copyright 1992-2015 Free Software Foundation, Inc.\n \n-timestamp='2015-03-08'\n+timestamp='2015-08-20'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -255,6 +255,7 @@ case $basic_machine in\n \t| arc | arceb \\\n \t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n \t| avr | avr32 \\\n+\t| ba \\\n \t| be32 | be64 \\\n \t| bfin \\\n \t| c4x | c8051 | clipper \\\n@@ -305,7 +306,7 @@ case $basic_machine in\n \t| riscv32 | riscv64 \\\n \t| rl78 | rx \\\n \t| score \\\n-\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n \t| sh64 | sh64le \\\n \t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n \t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n@@ -376,6 +377,7 @@ case $basic_machine in\n \t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n \t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n \t| avr-* | avr32-* \\\n+\t| ba-* \\\n \t| be32-* | be64-* \\\n \t| bfin-* | bs2000-* \\\n \t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n@@ -428,12 +430,13 @@ case $basic_machine in\n \t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n \t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n \t| pyramid-* \\\n+\t| riscv32-* | riscv64-* \\\n \t| rl78-* | romp-* | rs6000-* | rx-* \\\n \t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n \t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n \t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n \t| sparclite-* \\\n-\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx?-* \\\n+\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n \t| tahoe-* \\\n \t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n \t| tile*-* \\\n@@ -1376,7 +1379,7 @@ case $os in\n \t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n \t      | -sym* | -kopensolaris* | -plan9* \\\n \t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n-\t      | -aos* | -aros* | -cloudabi* \\\n+\t      | -aos* | -aros* | -cloudabi* | -sortix* \\\n \t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n \t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n \t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\"
      }
    ]
  },
  {
    "sha": "4ca6ddec4d7918b47f0e4747c5647daf54675306",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Y2E2ZGRlYzRkNzkxOGI0N2YwZTQ3NDdjNTY0N2RhZjU0Njc1MzA2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-11T08:32:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-11T08:33:12Z"
      },
      "message": "Merge pull request #6793\n\n4e2efb3 tests: update transaction_tests for new dust threshold (Wladimir J. van der Laan)\n28e3249 Bump minrelaytxfee default (Wladimir J. van der Laan)",
      "tree": {
        "sha": "c8b16cf160fdf2c38adf186f58429ace68d6c15e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8b16cf160fdf2c38adf186f58429ace68d6c15e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWGh7IAAoJEHSBCwEjRsmmPQYH/0ZSvjhU2cKVthOIIi8i8p/L\nJ8xRE2eYxxnQ5h3FXXGu0TJmysQbqenQ7q8OyVc+bxSQriPwMIuKMX91mNpZdsZ5\nOhVMaTYhl5g5h7bRGIObf3RYfAugQm44jrod3Tf8MCDYhCUMkhPrCOjmnt0Iu/Ob\n7oAYE2Wu17Qj3+HgZa/e5Rc93mlJrTLoqJ+v6zfBeMH+Oqo0AHVplaPNOkHzJ0tM\n0xrR+4bWiS+Z+HgTOPNjpVxNrHNUghVvZc3FqMCnrwLPO46ps57OYt3oIl0kEBdC\nN9i14GOAgOAhhGlepYWN4J5mAPYztKmVAroi0HRNb9maaDzkMOUfkYcZC3zJxtU=\n=yTTz\n-----END PGP SIGNATURE-----",
        "payload": "tree c8b16cf160fdf2c38adf186f58429ace68d6c15e\nparent b94ae81576c199c9a44453b8c9b17e8303f67b72\nparent 4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444552350 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444552392 +0200\n\nMerge pull request #6793\n\n4e2efb3 tests: update transaction_tests for new dust threshold (Wladimir J. van der Laan)\n28e3249 Bump minrelaytxfee default (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ca6ddec4d7918b47f0e4747c5647daf54675306",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b94ae81576c199c9a44453b8c9b17e8303f67b72",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b94ae81576c199c9a44453b8c9b17e8303f67b72"
      },
      {
        "sha": "4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2efb3c5fde4b1e332cc032e3dc4082ec4e3cac"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "baad7fc050be60b7c7b9aedcbf498fe15072b4ba",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ca6ddec4d7918b47f0e4747c5647daf54675306/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ca6ddec4d7918b47f0e4747c5647daf54675306/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "patch": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(1000);\n+CFeeRate minRelayTxFee = CFeeRate(5000);\n \n CTxMemPool mempool(::minRelayTxFee);\n "
      },
      {
        "sha": "f9423bc0de731fd67b603627e016ee22ccbdfd8f",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ca6ddec4d7918b47f0e4747c5647daf54675306/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ca6ddec4d7918b47f0e4747c5647daf54675306/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "patch": "@@ -345,7 +345,7 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].nValue = 501; // dust\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n-    t.vout[0].nValue = 601; // not dust\n+    t.vout[0].nValue = 2730; // not dust\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n     t.vout[0].scriptPubKey = CScript() << OP_1;"
      }
    ]
  },
  {
    "sha": "2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzRmZmJjNzZlYThjYzVlZTg2OTFhMjg4NGYwYTVhOWJlMDdiNzQ5",
    "commit": {
      "author": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2015-10-11T11:59:03Z"
      },
      "committer": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2015-10-11T12:17:41Z"
      },
      "message": "Create btcdrak-key.pgp",
      "tree": {
        "sha": "8e08148b5c5d0927afc520d1df52d9915afea5c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e08148b5c5d0927afc520d1df52d9915afea5c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWGlNnAAoJEPxkNPw6MelWoOMH+wcUbKy8gHCOXaANK85vMQ/N\n/RueOJYt4ZkcPzrkgARENPLSfCNhu0Og24lo8L0VHOXzyRR7gumWNi39BikbSLbM\na714bghMWsuiJCJ/kkRnFmlqIPv2wp5Ft1S2SJd80ovwvA0vIGMTIA9r3e9X2Ryo\nCm5wzZDHXuKKXabnv5TJ70xaX30M88llLYLb6/CWGHmG9pbwDNKkWw7zl1flwLxv\n3bXJEP4VTRvR2MTq6vdeaMyyfk1zNlrMXu7i487u63MfyMA4jmnD5/xvx+Z6nuNd\nD+KSVvhwbtd8XmWg7I21x9Djc0b08kN3vsKW8fF/OTL/63qKe854eo8g4y0uYS0=\n=Z4TB\n-----END PGP SIGNATURE-----",
        "payload": "tree 8e08148b5c5d0927afc520d1df52d9915afea5c2\nparent 4ca6ddec4d7918b47f0e4747c5647daf54675306\nauthor BtcDrak <btcdrak@gmail.com> 1444564743 +0100\ncommitter BtcDrak <btcdrak@gmail.com> 1444565861 +0100\n\nCreate btcdrak-key.pgp\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749/comments",
    "author": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ca6ddec4d7918b47f0e4747c5647daf54675306"
      }
    ],
    "stats": {
      "total": 142,
      "additions": 142,
      "deletions": 0
    },
    "files": [
      {
        "sha": "60d76c0ec7ab86635637ee9f49948e004fadfee4",
        "filename": "contrib/gitian-downloader/btcdrak-key.pgp",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749/contrib/gitian-downloader/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749/contrib/gitian-downloader/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/btcdrak-key.pgp?ref=2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749",
        "patch": "@@ -0,0 +1,142 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v2\n+\n+mQINBFWpKewBEACzsuhtkin1MdQCKCEcFypjEstg0jA0nNVOpsGDTtdwfMpWiLJH\n+bV7b3V1p5hgaPdSyZsUezvHbkVEQxmU47C9lwph3svu6v8HInBwnOa5zj4L0Ih18\n+7yfeEJOvWzULzNxtiIqvWQBFxrVBbgHMhUMg0j6KCYOWeTmTuUKgvbQB8dExCoV9\n+7l+mb0k6eOZhwGWl6KD8mVkdhfXhoCZY5g79BTJf7lAQqnVbjxdyEKD2HSSs5Jnx\n+mTeZg40ottXa1puT+x9ES7L/IOY5kcrp6lU8iyKAoUS4vOJt4nPqY59Pr9j2nUak\n+2BUY0yojH41a752OYW59R+0uTNcUAwpNFucOb4TrNqjGJaPtxvFBZPTLImfSE+Jj\n+VTT6eZixOXPlOWm/7PgR66JF70p3gDwCL19bwUeOKX3UbkjhmYG48d9y1FNFZlVM\n+Yf36xj0c2IOz34VVY6GcCfnIN6xus5qWgHWiQ6RRdlRc9TbcCsUGttXuFP/n4nX2\n+OHo6I/HBNidLScfD2sXZtYHLcqvi2CcvEmmDdwBZrZncz+cHpjz8xmONb3bEMNT0\n+euPcEC5PXUItCSk9KHSgJhAWqfB2WcZ0RUYLp5lbtIZGHqY34LJRWXVKeOQIq4Gn\n+8uCyM5oQUY9zK4x7fdRz5tOjInYg+eSqtnLVDACqmazQHZ6kuGspAvwW8QARAQAB\n+tBtCdGNEcmFrIDxidGNkcmFrQGdtYWlsLmNvbT6JAj0EEwECACgFAlWpKewCGwEF\n+CQWjmoAGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEOXROPXnOhryKiAP+L3B\n+4c4eZcp8OSRwtYMiNmlxqhzEe+Va8T748rP8oULBFi7b7Nw9FILtp0Vtt2Xw9Pd9\n+EMsv5ZfgPpFL58ZeaO5f4uyrxipfUE5XdhkMOtqqlTfuCGh5fvNv1sWgf5tOFS2+\n+4TCtcSSywl/OlbRmWW/rsJ+RPrE32iSn171WRUXmGGBGSTF2mxCELLIW/rnY1qUw\n+u81BN4SYQOSyd1ha4XAlVYnPcEdpD5mBhwh2mdw7nCtJ9G/lPJ+1VT5axsONbEKK\n+utoU8CRt7OBlAUe0GbAcp7FcniKaFF2nUuhNbMjFcqZ9pddb6aWHVcaXIHwjoR8T\n+Br8ygIoODNEauc0e1xbtsXByD76pcz3yzZOFCKxtjtjsln23Drko4JA2LyLxx8WY\n+BCZcf8/8QSZJOocFOoUIHEfdljo/41kF1MF1Ra2Pr5ZHx/qNcI3U+4+uBoc1AuWS\n+5gJl6xXicLByqweSGKzAfq+SGXM+8ZdJ5KuHISMq7tfkzkmIJ7fRy+cdprXYVnhK\n+CW5EWA6+xQqpt0QGaOyRPJvQqJJvO42Eg9slHkfON1499pwaIwblWuNRs/jq5xCY\n+b21m50JmPas6o5lCcF0SFiFLEJa8spWxMrsLZGUf8KfwriDrssw0XzI74E//BFb0\n+8TLeC7daL3bsCe3FD/Nlcplz0oPKOm6Zb7fNf8mJAYEEEwEIAGsFAlWtJa0FgwWf\n+nr9eFIAAAAAAFQBAYmxvY2toYXNoQGJpdGNvaW4ub3JnMDAwMDAwMDAwMDAwMDAw\n+MDEzNjM5NmE3M2YxOTBmZDRiMjRkMmNjOWM5N2UxNDgxMjcyZWI1YjE3YzU1YzVm\n+MgAKCRB/qxFCZ+T6BHGbB/9wvhZ2rgT4vOT7HENDXF+Bv9TItBF7JQ4mehCenWme\n+23qxBLttfQp3AbwA2K2FyrshGM0fmtmpO5pcXjjHMVzlIDa1fKvbQGbhok5Y+94w\n+hswGS8O0XTU6sB3JxC4vpqdS1pryA/7g3YI+EuzYCkubNxvYnAy80Rf098xZzj2r\n+Yov2c73qg8+kb+5MS2fTjOMQhJo8N70YOew9FVOeZoeepv7SWLDI5Ya/YQ+1fFKN\n+2ovfBq/fzAD4PJbPJCz0miq1T5GL2nTXLcJmj46uV3wNvppNm/w8492de5VO0JqG\n+qlRurp6Jp2k37jqRSIIXG2wxCkND0cYftjS13pHnerPyuQENBFWpKiUBCADiSsd/\n+CmoZV2/UCqAnxm5/kxF8rW5hVYsYmfGO6lY868j5GMOVhWkrjl2CNWrFwQRqyiol\n+FNvyOro2IpOGXlM87AU3MP2/Zz+zkO3zY4ZH40t/UqcO2MPpKdkmGofCt+C6IFGS\n+Y23FqdfOLxV3aczN2aLzL2C6hHdXTcs99NGSf51iHLXn9b+hT4k2AxLPnOnnjgJL\n+eC6+s2sh4loSuvCh5FjVQfhQDLyTn93r9xvEhUMUUxBLz1Iy+e+w1elSwqNT5wEI\n+V5Iontm63lN37GrkRyX90PBtKf6VYXE1yKhNLmPBOIc1vx02og6Psu5eilzKfoK/\n+tQeYr4M/6HOcNvEnABEBAAGJAiUEGAECAA8FAlWpKiUCGwwFCQHhM4AACgkQ5dE4\n+9ec6GvJmFQ/+IoBituRcR394sVPiK7apDIPzPziVT4Qu8aBuHHREhK1Vl5C5tLZ7\n+Q6wA5Xc6O2/G+37HqKX3rqD7XBdFwcPXQa6g54uVs8l2+1UIwnFqZm8bJwubkHU7\n+U6addHacbX2itqb4EiQ82mAQqPSwx36QGLtPF2htl5z1XWj6queqjVrteAl2cbz5\n+KKGklTjReaX1jmun/3nL1yJuYRpZ0L7lF3IU17FVckCL/y3CXhdWOK1fGRfsnZWe\n+XQT+00dKhW5uRfpa8hR1/HJnaczAZnjjpRJZq8hBLamTjPypwjLf+gFAPiAJRuug\n+Bh4saYoE3ciNDzB3B7RR8oqNwxaF316vurrcKqEvnpQechFudDKYz6Pd09lFM1U2\n+MlyJ/jMwwlEvwoTlKFvgYmXOHPZoyf4Vdq+RPfRy+pDI1et9fN4wsy/Foj5hb7Yw\n+/hPOAjWElc4huCwaHIbGN+gHd+AbO6dOkWC7GgsOTGopyU0NXWfud7HB1V/NQ7o1\n+EMrEEPg3eMBMpksuNJ4TaesJ3keW+9OwIMDvsIGcRvqcAVL0R0ZkMGiYG3ITna7l\n+KRcCZwWaHmE6WJTuffBu9oyRFfSH6YbI4pFuFulxghNe3gD1AFZyWPlS/M6jw87I\n+4nBWSNoyPs1UxEGtntBkWiBJq79WAUSAeiDPVzvekQfaZxSpCrZh1cy5AQ0EVapR\n+MwEIAIpPUS3x6zTo9YoFxf2CCNho62MZfoN4ZpVQyY+NLhZ0p1XQBullafZdQjF2\n+mGPXysg7SEZflkcwBGjS6B/CJUoe+zGRL0DXrpoGrqEZzDshiOQ7lM08iloZ9X7V\n+UqhZdi7CFQCO9lAPgrFnvlTVvc7z+1L01/I+9H+w7rmnVsa4NyR/3W1zpOjAO7Wh\n+telWGTcLGYM5fWE3XnUTsWHUQnvdJ9qkDQB6emAOSzBreGmxzru1VSKIPrGsYmlW\n+Q/5Z82ihJ9uCYswUmh+hXRnAXTZTw9jQ+/hw75YuKUGjxXnMGJPMWIlBgB65h1fz\n+a6cTU1ZuS/wEEWEsiDWIob+B4qUAEQEAAYkCPgQoAQoAKAUCVd+TsSEdA0xvc3Qg\n+aW4gbWFsZnVuY3Rpb25pbmcgaGFyZHdhcmUACgkQ5dE49ec6GvIMfQ//SVwsyixG\n+w77pubV8R3LHjVqjo8CNWR2CedzT2/2xfRqjiz9juxpVSunPLTCUWhJTp8bAJzVY\n+UteZ3G1ctKuA/cnUbiAduU4CNlKrZ6AjmUysPVrsyw3kUDm8LSKKiARb0hCAFbvO\n+AO3Lm0YbpBtVYOUpWLoxpkFPx4PKRSyS+mkmFCgBV3baf6YOfPimGyEkVOhF5vZ9\n+WDjnlxPHWhjrpWOpWYPOlDMfSxsvYe4JTd/QXEqx0Ki1inNM4AnLiDf/rnyliQiQ\n+RFlHNnfo/FyqO9wvY8Hu0YLUJqee3WWTVDoYnQYSdHVM8w5JYXiUG8Cc8H2kQ79f\n+sYwIQEXPdJUCeFYnWwkltAjd95AvNDv/5/4kSBBGWUY80TH8qoxuPLekPmuvS8QE\n+TP2AeEcL8Hi5GnKbl9xb3bu/cuauLp1D23qC3HMoigFEgUPQ3egB7Z66PVWo+ko9\n++niqujCFBZBmkS23fvp4EgejYkvvhH9NcWDXWhnIaghLq6ngrj+zHDTTb5dCp9aM\n+JKOyKZIjEtT+AOi8g7yQ7bDyI0eJxOhKamBcVYHcvUU3DMsRSao8cEE6ee/G9564\n+sQ15Ma7W+wqee8SbaND84A2tAQcFtd7kvRn8C3Ac/bHuL5UIihNruTzOsfIHlXmE\n+jqjNA37tatNGoAK6//UHCzX6rLZSBUJtsDWJA0QEGAECAA8FAlWqUTMCGwIFCQHh\n+M4ABKQkQ5dE49ec6GvLAXSAEGQECAAYFAlWqUTMACgkQ3qOE7dYp+kBF2AgAiI8O\n+mFVfhCSJl7ofMMO2g92JfeWevQsn+GITexaYs/FEBb4NmWAyItJ1mL0jCVOhRXwj\n+AcKbKiWhuco17EdXi3xvu5FrfsN/lOmmyhkKyHSR+LS2XPb+xG5JJrafS7m2nxMx\n+4m0yH6tUcsBnqBPFFZ+w+Fxtg8ngUbo9B/gaXr7mvHwir0P2LYpcqlwpD0Zxmu1W\n+HpKT/DQa09Zjr5l9WDGtF6U6ZuSH8sdh/tD///x7AJ6eoiYadcy3YWRLFKKpfMSI\n+tSDhOlWBFFNRwrsZRXCrETYoJNWb/kvcHOaWNzPWcePjQ5RdOkQwnidUd1iy/Uqr\n+2+cT9WWfkHAND4uHlP1wD/sF+nQWOoWcQLFqTx9qt9h7tbgNAzXfEec7fwQ+NMwS\n+bKocjb5OOdzInEMDufusOWgKBfJtPQSMUe+W2orxBWtJb7WY9Xeshjs4q42GooPz\n+e9AN5B2M1V+wmSYEMyhHSTldjj/ZUWBmzZGH7skPHFUwFB633NOA97Mrt/F1RhiO\n+kw1TTn61x1op+wF919DnKdXaFiFX02XzqjJgnuUoGN/72cnfRzIkSaq9b9uX/dQK\n+z2Uk19ENQ3ipmAqBnzOzz+kjSqh8PdHgTGSyy8Ump8+dfhXjC98wVwP6YEn7tOv0\n+iaRzOiKd2kkCvSYexiqWYtKLU8icUFmvd6SROkcAHhPr1+oPS7LJpYDuES17iN3X\n+YaYHGGyvNsh1RseJvE7saosVGQwM539W61JUS9A3TP5jaL8ka8Q5AiXyIee+CD5h\n+2wFQnvdnmnc4QVkdVdrpNRBZyGySgyrO9E+iogfMSfcdDApgiETUOuMTvuCZSPhQ\n+YZ3+rddfgyDXYN3y5oW7Piro19r6R0D7DcGSstk1+1mEjJbb7s5Gc7oGq+EgLm0K\n+VYKa4Ky12osPCHFAoYLHe2upSHFhtgPgfzHKE8Uo5hnAVmx9jAi2XxBi4y5ezPPD\n+C0cCKsRTVrbvNavTSMYdfcxWuB4vlrMZIsvV0RcyP9jPXZm3XPrMik8xRbLR9AzR\n+C7kBDQRVqlGOAQgArkX9q/xZbvceeW0vzxI1UfbZnVoO3E+lL8W40RtBoF7R/7bD\n+68/dNYa1/geUc1jVyrycdp5RkTfnHnIHDt1WZfi6Ywdw9val+BpT/X9ZkxEXgYxO\n+tzMq0zO+ipeLgiqBRck7kgsOEgv+zaqMFXXrH+Zbsg1QbDEug61iCoKzpR8b2+5Z\n+QHxklnGd1RbiMWpioTmacOQE9yTfWvastJXIvZoZ8gdaLR8hA5o/ePP+GcSgntAd\n+NlMYTqqNujAymBJvMAu+ybyFRKN/L/X+IX2elhJWM1x4d1OjM/4sk31g6pucWRcd\n+vimPWouDIWVh+sh1g/IRsO295QKzXUCDELc/QQARAQABiQI4BCgBCgAiBQJV35N0\n+Gx0Da2V5IGxvc3QgaW4gZmF1bHR5IGRvbmdsZQAKCRDl0Tj15zoa8lAJD/93voL9\n+dqZ9IViyULsWsEkQDD20HQ+mxbuJcAE526If/x9JIMR1JcuE/C7pAtNjg5VBCOeB\n+sk0JC+Z7M80ivU1xov+rmjRvVNAX22/rBLpCTmUe0gzIBnWG5+O2/sccutigvvQE\n+O1rqLTEp0dzLoYbVAwJedELZnmK04Y8uXXQ1XSHXJOJmvEBpbDF0U3FXl7Sw4C+u\n+hI8IR6l2D/BYKIZgNIkh4ppFa6RJY0DtEWR94POZYBjjjToeCTRBG9IxudDy1jm4\n+k6bF/ByOecN4B3HRcBXUM1yJEmOZlPSZu2v7XvFp2VnFJfN2UjmtpYsKamV/xUsw\n+DE0voGp15TOfb+6QzfnLSI7vXcm1CfkBS++lYKcYcJ9Kj90ZPjtKy25vKcBvG68o\n+nYgS0Jnzm6j2yE2KBc90CWS1Txgu1Rd5ZrP8pM1ZK20/dq9CjtPLE94WFIc77k0R\n+3z8DJPG8I8M2RJ1XoqENrBvG5U0B+eeGA7mY8QSRH0COhslJ7j0WjOyO8xBSGTCq\n+QKGppFmDLs440cCVUOpnPz1kYG3YFgdCsFxOQ1GBJuHFLUdA1BEbb/nG4C4+y3Ek\n+Bihhu+3ZRoaBgE7ZmVOMEV7xdslPNssiTh+CxIUtugY2mhGnANvEcWrqTgG9+EHf\n+ax2avHR4CQMn7onZAPt2sOMoPkE8R3H3Knlta4kCJQQYAQIADwUCVapRjgIbIAUJ\n+AeEzgAAKCRDl0Tj15zoa8rK4EACFfSUffkm80uzBxFDbo3+fWf2k5hnjXheZxE5w\n+gpT4Z6QGH70GjR+rbH5a6fMM4hkmqNRYWLf6n8RTYNvCLxopVg2l1QbHYFbA+pAB\n+0tM7HOng8iyvc+uUJ4hTicpePm66A4uc1/z+mr5mcLTQS6Nfix2j3hduzzCVIbuF\n+/3UUxS9hFAXOu1F1Oz6auFkeQ8R/w/49yXrq/MYYSUsWtOR66Yu4664TJKBkZGlw\n+CiGPYmpeE7To7LqdhAop+ZnZnc5agSnB9QZw1HVbMY0nwbPuiJx+6mmbh7Gf/OHu\n+2pHSAStvFUGA6ngbYVH2LlRC2XgAA/yFAy1FNFegxTXO+3DI9ykj/3WBmjbNZMIA\n+mhcvPPwwJCNdxbZJbCcot82FBGPpwmsiZJWynD4m4+aGErp/pZmKjfMwP5NAgOQd\n+77XaRlJTvW4GqAdmT0ib7tCqGwFAx5o80SszhgRCUqu8oLGAUlTfMoRgmFNRznP9\n+7xptwjNSl19YrlXdgbhOvVvNO0/J6uXnRc3v9yfaa8J7xU6GvuR5smejYNLUxccl\n+N1UmouS3Vol5z6hOmqnembN/zC3THOHqmJ1G6SdiCcn5dG5Tc+jmBKLRAnoIimWT\n+dO/UoWhm2EB40Hlj6HRFXure47oD9x28d48E0+HI9Jzlh4Wuu6kkr+ugOpdC0TbN\n+H/+RObkBDQRV35PpAQgAo1+V52e+8VFsDKyceNNEVE8NdUiPRKBZuVfCSP8nqNCj\n+hYf4lY/iygHCNZDtKaBs6BUCj0Ev1CLm+Uxvdl1trEr1FGz8E1kdUsh0LocKJgjh\n+wbuDrxM/6LNBxYTR9fEIGx+ka8o9OMLqWav+QjZtDC/nTWaJkXxvcgZPhadCmkkz\n+P0g/vnJVYbvDBBmxI9ofkxZIrwNR2Y8VO2oLVP0MpCA06cuUQWym/gQ2uqBToGqr\n+M/gc+vq0XQyFrNmH/iP8MuASrOoQfGhvZDg/x8rcFRs37itZWpUfP3pZ5zWztX3G\n+TBtc1EktSjs8fU828lPxtG80r4RB2sWVDJfoqhi7XQARAQABiQNEBBgBCgAPBQJV\n+35PpAhsCBQkB4TOAASkJEOXROPXnOhrywF0gBBkBCgAGBQJV35PpAAoJEPxkNPw6\n+MelWLCsH/R69Q2jgT2+sHVWbDsmNjTOkJIteKbz0uW8/vBJqZ2VEwKozGruCTkNI\n+orYKj52ZRcxKiAijN2XGw1TEccP0s5Trap1Z+xgjDDLByLswoVBUzAjbq77hedT+\n+ZUuQFKnm0Cc+PzB/Nz96I8AV4AxYc7RW4keGtvEv7qgdIlb6fbPpFB7Z5W573OZ7\n+G72B/T6QL43HRaN+ZbjwRJaY66tYKSl0Vd0WrO2p5xVdbTarVFn6q/A0IYEafVKY\n+QaRTh+VQbN7vNZCn1Gi6fvnjtWRsj0vMkafdAzVYqF42P+cf6iHrglE6DwR5AsaS\n+O9G+8kLpkXFRjDQJBaijWdBtaeOulCxTog/7BZwo1kpTC3ZCTxr/SHJDc1Nsxt8K\n+xnMCPxFSrHRJb/fUQDjhLv6lXXAm5SCBdFzAc9oDKUbcuGSEz2nZQjL1OADn9rVo\n+j/Y6wJ+okOCOs9AI1H+VW/rz5Z7wxvw3YOVa+dnYdV0w7FklCn+xFdZLj8Z5WjcZ\n+zoyqGlVAFGOZ4MbO+fz/+8f0Y7K/bW7E6smhnomTy2ZOk64eiO12d8quHTHMi7Xh\n+mmVYDiNn1gW9IxZwt/Ga9AvZbIAYhL2m/xBbdfMKAG7Ttjzd3Ac+8wrGm3lOesBD\n+AJUtBmURu8b1Eyj72IQcV0AJM8gvc1B0H345oX6VBgkBB0bf3nuUVftv6r529jTr\n+Jix6yrs4uf25tefzcFuqqE1s1r+pSZFIDpaNsP+jjMgYj/zn4dLOZaq4V3SHvnsU\n+v8KOUC2/qNH9U0KC6bh4mw0fVsHzhkaOjOM7SF1Doc8Lz4vZuk4BpumHpkHEG90x\n+CLg2k/R9iIDQfcGtKY++1/GitjXakPuKrJctZ1SJuW1KWyzFeF4qvuowmLGMFRVi\n++CG5JJSLCUr+cPXa8NbjZv9BwSHqWbn3grr7ZE/j6SFNhuLmByeePPNKRt0cae6a\n+3TQkQFh/yvSIkB5BrB1n2x+xNoWMME+GR0zYQCOncCe8W+a5BZ1mTiVGacHgVqSN\n+eEaG0RH54+pi4gw=\n+=fFMC\n+-----END PGP PUBLIC KEY BLOCK-----"
      }
    ]
  },
  {
    "sha": "3b363dfe88a1cd08d7b3369e1195742733638adf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjM2M2RmZTg4YTFjZDA4ZDdiMzM2OWUxMTk1NzQyNzMzNjM4YWRm",
    "commit": {
      "author": {
        "name": "Paul Rabahy",
        "email": "PRabahy@gmail.com",
        "date": "2015-10-11T23:36:51Z"
      },
      "committer": {
        "name": "Paul Rabahy",
        "email": "PRabahy@gmail.com",
        "date": "2015-10-11T23:45:01Z"
      },
      "message": "Updated Prab's PGP Key\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nThis message is to inform you that I, Paul Rabahy have rolled over GPG\nkeys.\n\nMy old key = EA695E0CE2D0DCB0D65167A8D1CBA2A21BCD88F6\nMy new key = D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A\n\nMy new key now has an offline primary key with an online subkey that I\nwill be\nusing for normal communications.\n\nI have signed this message with both the old and new key so it should show\nup\nas validly signed. Please add my new key to your keyring so that future\ncommunication will be properly verified.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCAAGBQJWB3/LAAoJENHLoqIbzYj2LBwQAMgH5u2KDuxK2gmpRjEpVXe8\nXPOon+SRL5zXfu1dFInXCg8APJEVaXhSeY+/s0GmUq0INRpK4r0tvZVN84X2UoHz\ny88P6BeHzQI7dsCStINhW4Hb7DVpFvkHAxsRhy05/geD56/IOXnsG+5SvsH3essJ\nO6DuRQOipDWkZ9NQuQPrqzlkcBErMbL4Cs0ED5DOOYccntnt5HM909KDHfKcG8iJ\n/qNTVzVFYMGbLn6MVq89reatmIOxuVBkbixsqad5M4P9rQ3iGPnUzIEp4wn7/Ssd\nXDiCZypzlHkcs1GKBLtWnYWahlWHItcd/Yz3AiHLfUehcZb52p0mvIaTf4lyAR5p\nkQFTXZwrrzJDaomSE2Y2IeMIATZE7/7RInkHD6okUTFSoCFgxOeAxLBI6sxLH5x5\nxLIdv45iiv3P5fz1gungfzn2OYy+dHgT74bJ32N18hs+xwZM2G6AYYvVvkTSDqC0\nc3AopnjEV4i+4Aq0QfDD9fXpBc0QuDN7c5GkcFCiFlhN+gffjT8hkFliiW3e2X5K\nVsycv1sYXFSS/YYZ7RCixWgTkpi18ABaLu/N1ses7hLNMxx9ovjrMIJ5gC6Nyga9\n2BiumvNMh0iE9yhPiN0a4YsZZnW/tc5K1+OJxnKZvxWrXqOgIhnKZA1U1Y83COgA\n6pI5uKrggGQWgQFJxTmciQEcBAEBCAAGBQJWB3/LAAoJEDJeXsBcJ6amLBwH/ib+\nwiD3wDy+VeTDFvh4AgQqDRCk+CvGEKJlcoBLm3ZDwzi+/26XB/BCFoopW9h67ZmC\nyMFhgvCJ3RwPcVGgZBOZ//88E2symcYRBSZJVwMN/n3McmEKBmmEH6/tTqhLeBal\n2pynse7qgfZV7P/rSMcqFdhzMYq6Jt25obTl3IqTo939G1oOxRK8ORNT3Hs4/uiF\n7xsx+nUBe/L6dvw2Rxr8bWm7WKi/LF7fKN/HZuBfK2qH0S4ctG49fiBw3DTV+erO\nlYHdOMA9sjk90Le5sNBw75Hyr4WMLUkGFkh9SvDK1Xe3bUCfCpBTpcPnRUqnHL32\n9GbqORFiaUGPRCnaWKQ=\n=JR4m\n-----END PGP SIGNATURE-----",
      "tree": {
        "sha": "b5a4d47c8e19483f7e39076f7de0307f29d4e4b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5a4d47c8e19483f7e39076f7de0307f29d4e4b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b363dfe88a1cd08d7b3369e1195742733638adf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJWGvSlAAoJEDJeXsBcJ6ama7UH/06JM4POYCMt5dc6D1NDxQ6K\nSYg2JCsbfY09/l2aXt4TkGOdNoLtoRcr8rbl5h+Gyl4zAhxcDw8rC00v6pnlWGAe\nPuBOdY9hNX7DbHGB7XC9O3uF3HMo5dB3aIGtbZMZoa3cQoe/BtV3/Rs87qyqSkJw\nTC7cUucFChJpYYVA+2DoCwb4thzikOFIdfoucnusnKoZSUWM6EAMi/zYZDy37Nfk\nl/Ik9avdj8ukl57o9jjEzL5BQgRzsHoH8QTnYga/lKlejvjmvtEOIPhbwbGQll03\nraevTTK4DAJKv5EhlUBkrrAcudjZC8W6r9BrzYNtOLFPh6PPDm/qPuQ8NmXDBRs=\n=b06o\n-----END PGP SIGNATURE-----",
        "payload": "tree b5a4d47c8e19483f7e39076f7de0307f29d4e4b3\nparent 4ca6ddec4d7918b47f0e4747c5647daf54675306\nauthor Paul Rabahy <PRabahy@gmail.com> 1444606611 -0400\ncommitter Paul Rabahy <PRabahy@gmail.com> 1444607101 -0400\n\nUpdated Prab's PGP Key\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nThis message is to inform you that I, Paul Rabahy have rolled over GPG\nkeys.\n\nMy old key = EA695E0CE2D0DCB0D65167A8D1CBA2A21BCD88F6\nMy new key = D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A\n\nMy new key now has an offline primary key with an online subkey that I\nwill be\nusing for normal communications.\n\nI have signed this message with both the old and new key so it should show\nup\nas validly signed. Please add my new key to your keyring so that future\ncommunication will be properly verified.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCAAGBQJWB3/LAAoJENHLoqIbzYj2LBwQAMgH5u2KDuxK2gmpRjEpVXe8\nXPOon+SRL5zXfu1dFInXCg8APJEVaXhSeY+/s0GmUq0INRpK4r0tvZVN84X2UoHz\ny88P6BeHzQI7dsCStINhW4Hb7DVpFvkHAxsRhy05/geD56/IOXnsG+5SvsH3essJ\nO6DuRQOipDWkZ9NQuQPrqzlkcBErMbL4Cs0ED5DOOYccntnt5HM909KDHfKcG8iJ\n/qNTVzVFYMGbLn6MVq89reatmIOxuVBkbixsqad5M4P9rQ3iGPnUzIEp4wn7/Ssd\nXDiCZypzlHkcs1GKBLtWnYWahlWHItcd/Yz3AiHLfUehcZb52p0mvIaTf4lyAR5p\nkQFTXZwrrzJDaomSE2Y2IeMIATZE7/7RInkHD6okUTFSoCFgxOeAxLBI6sxLH5x5\nxLIdv45iiv3P5fz1gungfzn2OYy+dHgT74bJ32N18hs+xwZM2G6AYYvVvkTSDqC0\nc3AopnjEV4i+4Aq0QfDD9fXpBc0QuDN7c5GkcFCiFlhN+gffjT8hkFliiW3e2X5K\nVsycv1sYXFSS/YYZ7RCixWgTkpi18ABaLu/N1ses7hLNMxx9ovjrMIJ5gC6Nyga9\n2BiumvNMh0iE9yhPiN0a4YsZZnW/tc5K1+OJxnKZvxWrXqOgIhnKZA1U1Y83COgA\n6pI5uKrggGQWgQFJxTmciQEcBAEBCAAGBQJWB3/LAAoJEDJeXsBcJ6amLBwH/ib+\nwiD3wDy+VeTDFvh4AgQqDRCk+CvGEKJlcoBLm3ZDwzi+/26XB/BCFoopW9h67ZmC\nyMFhgvCJ3RwPcVGgZBOZ//88E2symcYRBSZJVwMN/n3McmEKBmmEH6/tTqhLeBal\n2pynse7qgfZV7P/rSMcqFdhzMYq6Jt25obTl3IqTo939G1oOxRK8ORNT3Hs4/uiF\n7xsx+nUBe/L6dvw2Rxr8bWm7WKi/LF7fKN/HZuBfK2qH0S4ctG49fiBw3DTV+erO\nlYHdOMA9sjk90Le5sNBw75Hyr4WMLUkGFkh9SvDK1Xe3bUCfCpBTpcPnRUqnHL32\n9GbqORFiaUGPRCnaWKQ=\n=JR4m\n-----END PGP SIGNATURE-----\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b363dfe88a1cd08d7b3369e1195742733638adf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b363dfe88a1cd08d7b3369e1195742733638adf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b363dfe88a1cd08d7b3369e1195742733638adf/comments",
    "author": {
      "login": "PRabahy",
      "id": 429961,
      "node_id": "MDQ6VXNlcjQyOTk2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PRabahy",
      "html_url": "https://github.com/PRabahy",
      "followers_url": "https://api.github.com/users/PRabahy/followers",
      "following_url": "https://api.github.com/users/PRabahy/following{/other_user}",
      "gists_url": "https://api.github.com/users/PRabahy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PRabahy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PRabahy/subscriptions",
      "organizations_url": "https://api.github.com/users/PRabahy/orgs",
      "repos_url": "https://api.github.com/users/PRabahy/repos",
      "events_url": "https://api.github.com/users/PRabahy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PRabahy/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "PRabahy",
      "id": 429961,
      "node_id": "MDQ6VXNlcjQyOTk2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/429961?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PRabahy",
      "html_url": "https://github.com/PRabahy",
      "followers_url": "https://api.github.com/users/PRabahy/followers",
      "following_url": "https://api.github.com/users/PRabahy/following{/other_user}",
      "gists_url": "https://api.github.com/users/PRabahy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PRabahy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PRabahy/subscriptions",
      "organizations_url": "https://api.github.com/users/PRabahy/orgs",
      "repos_url": "https://api.github.com/users/PRabahy/repos",
      "events_url": "https://api.github.com/users/PRabahy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PRabahy/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ca6ddec4d7918b47f0e4747c5647daf54675306"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 77,
      "deletions": 25
    },
    "files": [
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-downloader/prab-key.pgp",
        "status": "modified",
        "additions": 77,
        "deletions": 25,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b363dfe88a1cd08d7b3369e1195742733638adf/contrib/gitian-downloader/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b363dfe88a1cd08d7b3369e1195742733638adf/contrib/gitian-downloader/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/prab-key.pgp?ref=3b363dfe88a1cd08d7b3369e1195742733638adf",
        "patch": "@@ -1,29 +1,81 @@\n -----BEGIN PGP PUBLIC KEY BLOCK-----\n Version: GnuPG v2\n \n-mQINBFI3uQUBEADRjbUQb65n7sfjT5OPnjPO8oUh5onKjNALRGHGJxWwNkwkgmT6\n-mZFWjikM8B3ONEp8MfTyoOzv+MbWuBDS1GZxi0Tcb4HU323/7hhwfXV4bcHif7vq\n-Sc1ahN/5LIHj0htC6Uj78IWXW+kPWjX9biRJnZ9eerfA/AatC+4KuvYTjAa9uAfa\n-BnAs38EG/7ryXzxdz6M8iNB/YjHE72swSH84uTtA3LqI3huVY41eFMK6qXFBMFiq\n-H6bMx4pjwKzJj78bibXEQxq88yc6TLxbURs2GF4s11dr7Iq2Y+6FHqX3PfUByZBz\n-PQfbEy1Df4RbB3htCBv5puETlqZ0PVe9/B+WrcnaobxrbKEAqt0DspfoveRTIL+z\n-+YDs7FuW9TFBmd+5d2nmblHrNm8eEig3DpOoVetuuXsmDy03Fwao7hGkva4P3xbP\n-H4/U8GaxsfNzuLvEyy+dtd2t2C1HIxS+56r41/vdb/9rvGgEQuSr0DVpZIW9en0f\n-3bek+H7/qRCbXuaiBACBvOKNror5jtTeXTvnHWMkrOItyGH9pwR2Lhhv68JQS1jk\n-e3pwVRzfHBz4wQMHeLIh+blsVKCIjytBR8Rq36rsmN1q44/3HwuPW/XP61kPP90k\n-dKyPF4Qa+EoPw5ON5nr3lWy8ysklM79o1NmpyqNT4UjtDDBSfJtX82ct8QARAQAB\n-tB9QYXVsIFJhYmFoeSA8UFJhYmFoeUBnbWFpbC5jb20+iQI/BBMBAgApBQJSN7kF\n-AhsPBQkDwdj7BwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQ0cuiohvNiPaB\n-KA//Y6h6r8vUkA4/Gl2ejMgH+/DAolg9dFD+KMjQNKw16g7WzFNNS05T4RhcfZDT\n-mapAW2LOUiiPVJTacmblyFp2hXCv3S+DESQjVdz15pxMHkt9fFteXGyJyrcTY5pR\n-rZmjMD/9Twy2mLl5IH5ms87p0TN9HhM5Ux+B51la+Uq1wMdc1PdPWvGDeBVxCnRI\n-w0224M5u1uHaMwMDGdz6sXuCuonB7CDGL9Z2+m1Al7t0peL2QdKHjv8S+SKM2rZS\n-bRJyNmmTSKFQOTb9e2Ve48NNeaC0usEf8ttsygclps0mDpoa68YSY1LiuwVoIxvd\n-S626eDqgmq1yyz0l3gQbYKIUv7KvRDnYhqIEkPZLCOwKirm+I5vzXvVIlfoNRoyJ\n-VH3K6MJDSpBEerYNWHmUQpp7cLXIqVtako7IgmglOXQ5XVRnPvlOt5VOqQnNRTdM\n-nd/FK3n1TbUyNRverODSpOS6ZxdSSwLkTycTtj1SvpLo7laW0HQ1ofJfwzVmOq8s\n-8aWWTwBBC/X1UNLL/rsZMoHeUpaKHF2HSK5XzLcwqOBPRTMY0OG7vtBvj4G8clht\n-A3uQmmCMr6RxsPPYPHPO3MnMpY2AK6RRnNZg5Y1Fu+/71FAuUDVTxmI402yE5XbP\n-ILbJ8RgsrTVgeHdNhp9or0BdsB/wwMT5intkCaNqwb6eJag=\n-=y2Va\n+mQINBFYHMLQBEADLpvMbTQZ28jaV/tEcHpt/a2YiIqBdNreh6rE2MkTTjdkZJ5Mp\n+RAFOTrRYRWyBL9jmCjvjt4TToiV4quv9ubRWdTKn0cKaqcl8kwZ5rtoX6EEhcLJO\n+CAL13kDzkBrG3OqRxM7VWn/0IGf++Eq0yT2eqBi7Ae3FvC4m64TKLI2NK7GB/MQD\n+JqcXuh/0yMsPiCNZrTDBX+3SzTuSLjWt2Le1Ap2nWXf68cWqP6nhT+f76epZyA4D\n+NI48/KeylUzPSJtqBmBM+YLg/XGcxDpbIotnr7D27ThJQIXDzut9O9f7RjdlKaeh\n+G73W/hDqTqLpkR5LMa7K3unUuvlyQqYGXfHINjJibNUTLCi7YcJtuDv/DJwQxu45\n+/UUYS2xH6HpgOTdWs6VjHRCDzeAoKzkdDB+8Mvi2lZXxY0iFQeQtRNkmN9D3M4oT\n+voG0cZWjPGeKSalGVSRS3TGhdf+IqOPhOl9yrwEArlZ8HtsTUFdx/jAsWHsycCVb\n+LjkD8Mdgit39UZCln3e0bY862wF7Gm7P3ITMnTofO9w6Pqffh9WWQBtLrxIXrgII\n+vstC8H9ajIl1FDuYs1Mf8u7iq1zHh6GNzoxkm+FEvYc3mkSfx6KJD3STWqSrJcQK\n+q/1SsjBb+RiuqeFdY8krWfm2xkuUoGLEQnr14UQz1hQTTLEgSoHBSHxuHwARAQAB\n+tB9QYXVsIFJhYmFoeSA8UFJhYmFoeUBnbWFpbC5jb20+iQI5BBMBCAAjBQJWBzC0\n+AhsDBwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQvNBNjpzMrCp8dA//Yaob\n+cnFuzLjIeWyz996DPJvU62WmAE4GkZot/wk+dtIAnOCxO9YbhWVU/b1WG2PjGdqt\n+LiB6COG28/HzJoUh2zjG0lDcjvu060Bdw9rQ/kJWW22ylNAoKiY9jd3Abde5nBGK\n+0wwJ8+aMMDrO6euwgcJymJ+yZ6ZiWyG4TXXCbSdCDSsBtaaAugMlzZWeyEBEgUK4\n+nX3ZCoNiF3s2bYojr6VcgG2clM9gsSBW03XLW3lRLOvDFmdEAFp8KSJNSkGBlcOS\n+iba6zAKTY80W/+D3soBP6Lr2uP0AOFr+ZnfxvaH9YvXIFDq/jT3CH2RxiZLd1m59\n+ehUbU878ebOMlJCJYiUBY6H+vChytqy51o1np+KTQtpxKzigWiPbtyJ9zYoVVczI\n+Ds8APCqL729BPMhhTDm8I9jeEhjXNmmiJjGVJGVB5X/3w+7jQrEz6f1Ebi+cCrgN\n+tfN22bMs9hh5KkQ4JhRVfDM0DOXCvokXjdo9yXUf+Doc96ruCJKH0qR9L7qIASiD\n+hSEK3CNGY1G05Bb4wCS+FrexL11whAxlX7HCwbgjgHu07QJBYITdn3J4fUFYGsyS\n+G/2D5aLASiKGfq2TL1G9e/qI49/TksDQ6Xy4ue4cQYbf6JigfYjDcSDOZmkHPuXG\n+kSd60WPWJT6OqLrhq2c7exYCUGZaKrWBoie5yoGJAhwEEAEIAAYFAlYHcWAACgkQ\n+0cuiohvNiPY3BQ//TVOxm3UncyGyXOs+ss3fBSPE5q3lR71H4uo4CxE5pi9Y10tK\n+Qf0ULe0gRpnF2FMUkCCE5hu2oG+kPpqKON8/jwcnRCO9h2AndIZ3NRPAOXO2pn9f\n+bkDHMlInhPUxDk5zCHMTOdCONDvhocZ69gYHJdgt4w3Joji1YxTkHr2n8dFyNY7Q\n+LgqT1tpuXgopjKsUcYRhDCRN/iFsMa4D+XZR+rflvX5hkee19DzUIWmaHitfHZlo\n+VsJ7uVZKqUevS3rbBr3i+tpvvlrqDXAGksGWOdK7QFD6GtRgOD91IB82K0NvyX6t\n+M0TMh/aAAslxfH3YeTIGnETuBkp9QBCa1c966ipoHyzItmK9sF/ONPEfYR/ad3gB\n+Nc4G5w0UEROX0v4AWMfYc2CD+un3beH6rkWnopsIRJcQ71XvufqweWsPFALuBBzR\n+PTiugTi0SSSr/ayA543s90Ko2Fxrg20UYJZj1u/DEukpNJwjRSS/yyjk0hMWtzW8\n+rY1Br4Djbq3uQQj8EQojHgg3vlpHcbO77kXIJAlWYIzfHY69RGXCQG6Y7tavIiXm\n+vveP54CPFCs8Kl9t8Pq0IrWKnBGklE/KwfMzkzvrKFmi+nk9yRgwyN9G/geQt4Vo\n+W2mHmO1lvY8Zu2zpzLkvkYGXpL1VkIefmBYV/SWgyYGhLOJIFodJcMrrnje5AQ0E\n+Vgc1VQEIALsxaGYOnwWdgE2e7zX4uFz7jY5fZh0+RqGOe+Sk2g/QVKEDSLDgVF/V\n+tneG8AFgYukHPFCm0IZdKrewrkzdQOwxjyxiyFxOV/LYPesElVe8OWIs0lrMrWlL\n+ZLDguF63wnxWhjolfBzQAG29UTXYaJt6onEB59R2l426LBl3W9wvq19jolOECISw\n+r9z2IRUJ3poqBckT9j11p8yuPjGyht90dvg4htGPBV7nHDIijUnqLfk9mnAj8NwW\n+2Gf7TwW2uNA2rHV6riFzYVe2t1sB5Gdlx5ostJzo67yIc5Dffca901VhmpJTUPox\n+W2KmTpl3ObvaS0U0mkAyVObVHSuT6UsAEQEAAYkDRAQYAQgADwUCVgc1VQIbAgUJ\n+A8JnAAEpCRC80E2OnMysKsBdIAQZAQgABgUCVgc1VQAKCRAyXl7AXCempkrrB/9H\n+tOAstawkJ1IflUztgknEDE7MWuNR5XGqN7ROJAZvL8YfB5J7a4HJxTzCWft2QQUu\n+x3uwSfBpm+hRftBjm4aACrhDS6OOH4eFOUIdDASb2lgnhLmygKhAO9LW2z8jSrRs\n+tKNj9nyCo56mtd2awFESgpskavv/ilc9wU830C82FFdyBqgy5OBdWBurnb3SV5F7\n+23uD1t1n8b9gseIxNdF6Q//szAeHa4VRzzqykExXqHCEFCtH2gs9EjiZ3YeCyygK\n+cPbe6/+FP6UD810PBqnWaCShOIeT56JsOu2gMZ5+epWB+piUTn38N2Znu3EA3Q64\n+Gc7P8AtrNUCv56bof5NoTuwP/0rP4n1bsTy7siBuPqc9YvYkVCxNsGmg1Qs5h2Jr\n+ZmQlAnz8JXfi/TRxarUNQTZEsXVQzq+4C9eEMey440kXvDE2sd3p4MKnbtkDmahJ\n+XcMG5lsMMAQTpmyBf1EBEIFOwjZBqUqEkHl4FGRpEx/Q2p9/pVlogGW7SE5Ck6W/\n+A63ClJUJLsHaWiv9zJ23tzT+ooNy/iO1Y+GfV6MY1tBfLd4ZHHd2n1urFB362sgY\n+2x1TfvfXN0Myw7m1X0l9bYFycuuWfSo6qK+LCU/4P3jm21+i9lWBYX5l+NLz5mlC\n+V5aN57zmtGK7QMSp+6VY8mwG1TuhUt91S2fEScLax6qEASiEChB8m3YJOjKycP27\n+Sq9WactijiVTPslHjCNfyM4BbE9crAbDWGkIbzbka8ix3t4uBWt0YO0Ug9S3eZBt\n+w1OVxUI+LWjF5XlkfXn8W+pZ/C+M9Cs6QsAXEbfHXVZKwlAGZfvYE25UTr11RRnY\n+pl8JZglq0Z2Gip3YzJewC1pjjQTnnPoPT79elBuPmiGwNm5L8HsKUZ1IMf1k5mQB\n+FX0CilHMF/JAO+r8Obs1l7FHXvO0a95tStcjpFodZjHARi5B3VGghcypy2J9hWfH\n+YF23EcE4GzpqqSEO/SJoxuLNNtj5ZVJOxmeRz2CKCe1sI8xO7wY7ckjRaGmrvK+c\n+dAxeuQENBFYHOocBCACxVJwkGbqcgKTrg6APMxWO77ielcac8FOVpd0ns1h4TGZM\n+iCwwTR5WPRiIA6zuS3VTuPAntnK3VF9fQsLBORHIb4CzMeU3F/64SPt8NFajEQ+P\n+vPsZlyv29RSVmvhIRDTDry3Z/KQxnZ3rzazrBqGVuLBgsG45n97MQ8Xq0gkY42jU\n+VDldULYGMco5zHj/MFSQ6L3z0j1lL+aiX2xIdRyDNzOhRqaA1ByZvsRSsqW2JWox\n+78c6AbclWw0QLdQd4Pxk8k5hpeN/EtneVnFDX3hOq/C9fZs6f5aAKn81WXqPPPk6\n+G0b7KzlUoCWGlO7M5LzEzWmWvGPs7W8y2Uil99CVABEBAAGJAiUEGAEIAA8FAlYH\n+OocCGwwFCQPCZwAACgkQvNBNjpzMrCr50BAApY22DRYqmtALFieREu78BvjQT/DY\n+f9Smkga1YVr9/Ph9NJ5iSVeM8mrVkwZnGRK1UCjk16rsmB70IqlnJnyJGXqPMj7M\n+3ioOWY8fCL8fmLI2g0TbXXKl3e0nGByGXW4pwyLYa/hR7XJMco/PxqIGhEKcCIRP\n+dxq/6U9T9SYe2IkfXBYZAxfUTE2FkRpw1zSfZN3z32LM7ICZ26NRHRWo4Kv5sij4\n+0mYYecFmWdf6ib5pPCI0HmPGpblbmZgR1LoJNmuNxfpgEnPe8BbxtO4mueNW5A39\n+y7gLCmDZ8MaOGxvjGByBoXxXP62BiU910iZZZurjSD+3FD+NUX0m4yxVIZCkuInY\n+QzLxFACr26IYpcsPHIYGnEjDBFw9hHdP6tzKbjzgVSZESheQf2zwit0YYSjwHQN/\n+XGnBy8+p66As61jg8mcAN2Zd8vwFKZOvfEnSsaoK5ssAh8jixhPj+Ujgs0/PB8t/\n+ON20yr+YRAwU+RVnC/vfvrM83mjoz4mbmSLapFz/xWNhoS0ZczYEI5CyxE8peGPX\n+gd/7tim2OqUuZ3SlH5TZP3pdJcqxTNN7iNaWy1wAY/sb8As3Pge/Vv5hSYmHNjQy\n+h/62SSbTf6OZCuUGjy8fvVj51SclVKqGNprmAqVrIy0J+VeTKj4r7PGesPWJavRc\n+RFdDYRHByRDDL1I=\n+=dOwX\n -----END PGP PUBLIC KEY BLOCK-----"
      }
    ]
  },
  {
    "sha": "7d325b9de7d6bb2a38ece738436e615588696010",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDMyNWI5ZGU3ZDZiYjJhMzhlY2U3Mzg0MzZlNjE1NTg4Njk2MDEw",
    "commit": {
      "author": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-10-12T20:39:47Z"
      },
      "committer": {
        "name": "Johnathan Corgan",
        "email": "johnathan@corganlabs.com",
        "date": "2015-10-12T20:40:13Z"
      },
      "message": "zmq: point API link to 4.0 as that is what we are conforming to [Trivial]\n\nSigned-off-by: Johnathan Corgan <johnathan@corganlabs.com>",
      "tree": {
        "sha": "20d47ae189eb4e1e4f56d16f0fcbb2f06e1a4238",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20d47ae189eb4e1e4f56d16f0fcbb2f06e1a4238"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d325b9de7d6bb2a38ece738436e615588696010",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niF4EABEIAAYFAlYcGrAACgkQRzB3vGcdovdWOQD/ai0+hjShMBoT2j2PfcQQdoG6\nHSyGfTmDOxtFrTI1VUYA/21Fk6yopU5h2Lb1md6xEG4AjxQsCaA6pgdINhoJn06W\n=zqBK\n-----END PGP SIGNATURE-----",
        "payload": "tree 20d47ae189eb4e1e4f56d16f0fcbb2f06e1a4238\nparent 4ca6ddec4d7918b47f0e4747c5647daf54675306\nauthor Johnathan Corgan <johnathan@corganlabs.com> 1444682387 -0700\ncommitter Johnathan Corgan <johnathan@corganlabs.com> 1444682413 -0700\n\nzmq: point API link to 4.0 as that is what we are conforming to [Trivial]\n\nSigned-off-by: Johnathan Corgan <johnathan@corganlabs.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d325b9de7d6bb2a38ece738436e615588696010",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d325b9de7d6bb2a38ece738436e615588696010",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d325b9de7d6bb2a38ece738436e615588696010/comments",
    "author": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jmcorgan",
      "id": 1492956,
      "node_id": "MDQ6VXNlcjE0OTI5NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1492956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmcorgan",
      "html_url": "https://github.com/jmcorgan",
      "followers_url": "https://api.github.com/users/jmcorgan/followers",
      "following_url": "https://api.github.com/users/jmcorgan/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmcorgan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmcorgan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmcorgan/subscriptions",
      "organizations_url": "https://api.github.com/users/jmcorgan/orgs",
      "repos_url": "https://api.github.com/users/jmcorgan/repos",
      "events_url": "https://api.github.com/users/jmcorgan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmcorgan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ca6ddec4d7918b47f0e4747c5647daf54675306"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "53e557e3db191795535d779861afd8e25746179c",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d325b9de7d6bb2a38ece738436e615588696010/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d325b9de7d6bb2a38ece738436e615588696010/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=7d325b9de7d6bb2a38ece738436e615588696010",
        "patch": "@@ -78,7 +78,7 @@ bytes).\n These options can also be provided in bitcoin.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n-[ZeroMQ API](http://api.zeromq.org).\n+[ZeroMQ API](http://api.zeromq.org/4-0:_start).\n \n Client side, then, the ZeroMQ subscriber socket must have the\n ZMQ_SUBSCRIBE option set to one or either of these prefixes (for"
      }
    ]
  },
  {
    "sha": "3a4a458fe59b36ed697ca8a0a304ba68941a4373",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTRhNDU4ZmU1OWIzNmVkNjk3Y2E4YTBhMzA0YmE2ODk0MWE0Mzcz",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-12T21:25:51Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-12T21:25:51Z"
      },
      "message": "Update bluematt-key, the old one is long-since revoked",
      "tree": {
        "sha": "d1c0cbe8f97799b29a6c2ab3009dc45d8239c617",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1c0cbe8f97799b29a6c2ab3009dc45d8239c617"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a4a458fe59b36ed697ca8a0a304ba68941a4373",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a4a458fe59b36ed697ca8a0a304ba68941a4373",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a4a458fe59b36ed697ca8a0a304ba68941a4373",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a4a458fe59b36ed697ca8a0a304ba68941a4373/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ca6ddec4d7918b47f0e4747c5647daf54675306"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-downloader/bluematt-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a4a458fe59b36ed697ca8a0a304ba68941a4373/contrib/gitian-downloader/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a4a458fe59b36ed697ca8a0a304ba68941a4373/contrib/gitian-downloader/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/bluematt-key.pgp?ref=3a4a458fe59b36ed697ca8a0a304ba68941a4373"
      }
    ]
  },
  {
    "sha": "78b82f4a16d8aad15ef397b1a1cd075b2efc8c16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGI4MmY0YTE2ZDhhYWQxNWVmMzk3YjFhMWNkMDc1YjJlZmM4YzE2",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-09-24T17:21:31Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T07:44:03Z"
      },
      "message": "Reverse the sort on the mempool's feerate index",
      "tree": {
        "sha": "c6aef9e8f52ce6f18fc3fb710ed03d5ea1cd1a28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6aef9e8f52ce6f18fc3fb710ed03d5ea1cd1a28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ca6ddec4d7918b47f0e4747c5647daf54675306"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 25,
      "deletions": 25
    },
    "files": [
      {
        "sha": "79d806bd224204f155b856ad68b8d4d2bb313bbd",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=78b82f4a16d8aad15ef397b1a1cd075b2efc8c16",
        "patch": "@@ -153,11 +153,11 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n \n     std::vector<std::string> sortedOrder;\n     sortedOrder.resize(5);\n-    sortedOrder[0] = tx2.GetHash().ToString(); // 20000\n-    sortedOrder[1] = tx4.GetHash().ToString(); // 15000\n+    sortedOrder[0] = tx3.GetHash().ToString(); // 0\n+    sortedOrder[1] = tx5.GetHash().ToString(); // 10000\n     sortedOrder[2] = tx1.GetHash().ToString(); // 10000\n-    sortedOrder[3] = tx5.GetHash().ToString(); // 10000\n-    sortedOrder[4] = tx3.GetHash().ToString(); // 0\n+    sortedOrder[3] = tx4.GetHash().ToString(); // 15000\n+    sortedOrder[4] = tx2.GetHash().ToString(); // 20000\n     CheckSort(pool, sortedOrder);\n \n     /* low fee but with high fee child */\n@@ -169,7 +169,7 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     pool.addUnchecked(tx6.GetHash(), CTxMemPoolEntry(tx6, 0LL, 1, 10.0, 1, true));\n     BOOST_CHECK_EQUAL(pool.size(), 6);\n     // Check that at this point, tx6 is sorted low\n-    sortedOrder.push_back(tx6.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin(), tx6.GetHash().ToString());\n     CheckSort(pool, sortedOrder);\n \n     CTxMemPool::setEntries setAncestors;\n@@ -194,9 +194,9 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     BOOST_CHECK_EQUAL(pool.size(), 7);\n \n     // Now tx6 should be sorted higher (high fee child): tx7, tx6, tx2, ...\n-    sortedOrder.erase(sortedOrder.end()-1);\n-    sortedOrder.insert(sortedOrder.begin(), tx6.GetHash().ToString());\n-    sortedOrder.insert(sortedOrder.begin(), tx7.GetHash().ToString());\n+    sortedOrder.erase(sortedOrder.begin());\n+    sortedOrder.push_back(tx6.GetHash().ToString());\n+    sortedOrder.push_back(tx7.GetHash().ToString());\n     CheckSort(pool, sortedOrder);\n \n     /* low fee child of tx7 */\n@@ -211,7 +211,7 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     pool.addUnchecked(tx8.GetHash(), CTxMemPoolEntry(tx8, 0LL, 2, 10.0, 1, true), setAncestors);\n \n     // Now tx8 should be sorted low, but tx6/tx both high\n-    sortedOrder.push_back(tx8.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin(), tx8.GetHash().ToString());\n     CheckSort(pool, sortedOrder);\n \n     /* low fee child of tx7 */\n@@ -226,7 +226,7 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n \n     // tx9 should be sorted low\n     BOOST_CHECK_EQUAL(pool.size(), 9);\n-    sortedOrder.push_back(tx9.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin(), tx9.GetHash().ToString());\n     CheckSort(pool, sortedOrder);\n \n     std::vector<std::string> snapshotOrder = sortedOrder;\n@@ -255,21 +255,21 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n      *  tx8 and tx9 should both now be sorted higher\n      *  Final order after tx10 is added:\n      *\n-     *  tx7 = 2.2M (4 txs)\n-     *  tx6 = 2.2M (5 txs)\n-     *  tx10 = 200k (1 tx)\n-     *  tx8 = 200k (2 txs)\n-     *  tx9 = 200k (2 txs)\n-     *  tx2 = 20000 (1)\n-     *  tx4 = 15000 (1)\n-     *  tx1 = 10000 (1)\n-     *  tx5 = 10000 (1)\n      *  tx3 = 0 (1)\n+     *  tx5 = 10000 (1)\n+     *  tx1 = 10000 (1)\n+     *  tx4 = 15000 (1)\n+     *  tx2 = 20000 (1)\n+     *  tx9 = 200k (2 txs)\n+     *  tx8 = 200k (2 txs)\n+     *  tx10 = 200k (1 tx)\n+     *  tx6 = 2.2M (5 txs)\n+     *  tx7 = 2.2M (4 txs)\n      */\n-    sortedOrder.erase(sortedOrder.end()-2, sortedOrder.end()); // take out tx8, tx9 from the end\n-    sortedOrder.insert(sortedOrder.begin()+2, tx10.GetHash().ToString()); // tx10 is after tx6\n-    sortedOrder.insert(sortedOrder.begin()+3, tx9.GetHash().ToString());\n-    sortedOrder.insert(sortedOrder.begin()+3, tx8.GetHash().ToString());\n+    sortedOrder.erase(sortedOrder.begin(), sortedOrder.begin()+2); // take out tx9, tx8 from the beginning\n+    sortedOrder.insert(sortedOrder.begin()+5, tx9.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin()+6, tx8.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin()+7, tx10.GetHash().ToString()); // tx10 is just before tx6\n     CheckSort(pool, sortedOrder);\n \n     // there should be 10 transactions in the mempool"
      },
      {
        "sha": "2085b718e26c20494bc1c92be86998dd663f340f",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=78b82f4a16d8aad15ef397b1a1cd075b2efc8c16",
        "patch": "@@ -160,9 +160,9 @@ class CompareTxMemPoolEntryByFee\n         double f2 = aSize * bFees;\n \n         if (f1 == f2) {\n-            return a.GetTime() < b.GetTime();\n+            return a.GetTime() >= b.GetTime();\n         }\n-        return f1 > f2;\n+        return f1 < f2;\n     }\n \n     // Calculate which feerate to use for an entry (avoiding division)."
      }
    ]
  },
  {
    "sha": "49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWI2ZmQ1NjYzZGZlMDgxZDEyN2NkMWViMTE0MDdjNGQzZWFmOTNk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-02T21:43:30Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T07:44:03Z"
      },
      "message": "Add Mempool Expire function to remove old transactions\n\n(note the 9x multiplier on (void*)'s for CTxMemPool::DynamicMemoryUsage\n was accidentally introduced in 5add7a7 but should have waited for this\n commit which adds the extra index)",
      "tree": {
        "sha": "30caec98dd3dc4fae4aef494ff04b0df81778ca4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30caec98dd3dc4fae4aef494ff04b0df81778ca4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78b82f4a16d8aad15ef397b1a1cd075b2efc8c16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78b82f4a16d8aad15ef397b1a1cd075b2efc8c16"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 29,
      "deletions": 1
    },
    "files": [
      {
        "sha": "22f0525b320db7e5c0e6d0733e6d35d1b1140903",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
        "patch": "@@ -320,6 +320,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-dbcache=<n>\", strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache));\n     strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\"));\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n+    strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n #ifndef WIN32"
      },
      {
        "sha": "ec7cc2fdc6547f79e8ce9427bd6a46e11688045e",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
        "patch": "@@ -51,6 +51,8 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n+static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n /** The pre-allocation chunk size for blk?????.dat files (since 0.8) */"
      },
      {
        "sha": "57bb284602135a3b3e7521520fb75b9743e935b5",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
        "patch": "@@ -792,6 +792,22 @@ void CTxMemPool::RemoveStaged(setEntries &stage) {\n     }\n }\n \n+int CTxMemPool::Expire(int64_t time) {\n+    LOCK(cs);\n+    indexed_transaction_set::nth_index<2>::type::iterator it = mapTx.get<2>().begin();\n+    setEntries toremove;\n+    while (it != mapTx.get<2>().end() && it->GetTime() < time) {\n+        toremove.insert(mapTx.project<0>(it));\n+        it++;\n+    }\n+    setEntries stage;\n+    BOOST_FOREACH(txiter removeit, toremove) {\n+        CalculateDescendants(removeit, stage);\n+    }\n+    RemoveStaged(stage);\n+    return stage.size();\n+}\n+\n bool CTxMemPool::addUnchecked(const uint256&hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate)\n {\n     LOCK(cs);"
      },
      {
        "sha": "635b66fb85081778e4284662c0a5e5f19b576ab8",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
        "patch": "@@ -211,9 +211,10 @@ class CInPoint\n  *\n  * CTxMemPool::mapTx, and CTxMemPoolEntry bookkeeping:\n  *\n- * mapTx is a boost::multi_index that sorts the mempool on 2 criteria:\n+ * mapTx is a boost::multi_index that sorts the mempool on 3 criteria:\n  * - transaction hash\n  * - feerate [we use max(feerate of tx, feerate of tx with all descendants)]\n+ * - time in mempool\n  *\n  * Note: the term \"descendant\" refers to in-mempool transactions that depend on\n  * this one, while \"ancestor\" refers to in-mempool transactions that a given\n@@ -294,6 +295,11 @@ class CTxMemPool\n             boost::multi_index::ordered_non_unique<\n                 boost::multi_index::identity<CTxMemPoolEntry>,\n                 CompareTxMemPoolEntryByFee\n+            >,\n+            // sorted by entry time\n+            boost::multi_index::ordered_non_unique<\n+                boost::multi_index::identity<CTxMemPoolEntry>,\n+                CompareTxMemPoolEntryByEntryTime\n             >\n         >\n     > indexed_transaction_set;\n@@ -397,6 +403,9 @@ class CTxMemPool\n      */\n     bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents = true);\n \n+    /** Expire all transaction (and their dependencies) in the mempool older than time. Return the number of removed transactions. */\n+    int Expire(int64_t time);\n+\n     unsigned long size()\n     {\n         LOCK(cs);"
      }
    ]
  },
  {
    "sha": "9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzliNjZmNzcxYWQ5MDRjZDY2NWY3ZjVmNjhlMzI3OWViYjJmYTdl",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-02T21:17:27Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T07:44:03Z"
      },
      "message": "Fix calling mempool directly, instead of pool, in ATMP",
      "tree": {
        "sha": "ee023e54b896bcbe5d5eee7bb87da639e5bd852a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee023e54b896bcbe5d5eee7bb87da639e5bd852a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49b6fd5663dfe081d127cd1eb11407c4d3eaf93d"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 13,
      "deletions": 16
    },
    "files": [
      {
        "sha": "613eeff2272ae49f7fa25460bbcb306699fb3f1c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 12,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
        "patch": "@@ -740,17 +740,14 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n-CAmount GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree)\n+CAmount GetMinRelayFee(const CTransaction& tx, const CTxMemPool& pool, unsigned int nBytes, bool fAllowFree)\n {\n-    {\n-        LOCK(mempool.cs);\n-        uint256 hash = tx.GetHash();\n-        double dPriorityDelta = 0;\n-        CAmount nFeeDelta = 0;\n-        mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n-        if (dPriorityDelta > 0 || nFeeDelta > 0)\n-            return 0;\n-    }\n+    uint256 hash = tx.GetHash();\n+    double dPriorityDelta = 0;\n+    CAmount nFeeDelta = 0;\n+    pool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+    if (dPriorityDelta > 0 || nFeeDelta > 0)\n+        return 0;\n \n     CAmount nMinFee = ::minRelayTxFee.GetFee(nBytes);\n \n@@ -879,11 +876,11 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));"
      },
      {
        "sha": "aa5aec0556bb6534246940802804194d0b3bc88a",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
        "patch": "@@ -735,10 +735,10 @@ void CTxMemPool::PrioritiseTransaction(const uint256 hash, const string strHash,\n     LogPrintf(\"PrioritiseTransaction: %s priority += %f, fee += %d\\n\", strHash, dPriorityDelta, FormatMoney(nFeeDelta));\n }\n \n-void CTxMemPool::ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta)\n+void CTxMemPool::ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta) const\n {\n     LOCK(cs);\n-    std::map<uint256, std::pair<double, CAmount> >::iterator pos = mapDeltas.find(hash);\n+    std::map<uint256, std::pair<double, CAmount> >::const_iterator pos = mapDeltas.find(hash);\n     if (pos == mapDeltas.end())\n         return;\n     const std::pair<double, CAmount> &deltas = pos->second;"
      },
      {
        "sha": "cee1a146dab2f6a31a943078d36e6b9d2aadc629",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
        "patch": "@@ -83,7 +83,7 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n-    CAmount GetFee() const { return nFee; }\n+    const CAmount& GetFee() const { return nFee; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n@@ -371,7 +371,7 @@ class CTxMemPool\n \n     /** Affect CreateNewBlock prioritisation of transactions */\n     void PrioritiseTransaction(const uint256 hash, const std::string strHash, double dPriorityDelta, const CAmount& nFeeDelta);\n-    void ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta);\n+    void ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta) const;\n     void ClearPrioritisation(const uint256 hash);\n \n public:"
      }
    ]
  },
  {
    "sha": "e8bcdce8a245af235f8be9853c8f81c9bda56412",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGJjZGNlOGEyNDVhZjIzNWY4YmU5ODUzYzhmODFjOWJkYTU2NDEy",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T07:57:41Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T08:00:19Z"
      },
      "message": "Track (and define) ::minRelayTxFee in CTxMemPool",
      "tree": {
        "sha": "2404fef3f821029474459fbf6e5941757581a865",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2404fef3f821029474459fbf6e5941757581a865"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8bcdce8a245af235f8be9853c8f81c9bda56412",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bcdce8a245af235f8be9853c8f81c9bda56412",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8bcdce8a245af235f8be9853c8f81c9bda56412",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bcdce8a245af235f8be9853c8f81c9bda56412/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c9b66f771ad904cd665f7f5f68e3279ebb2fa7e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 11,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e8d76dd2f1d558a0197242395748c30aeaa1ce11",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8bcdce8a245af235f8be9853c8f81c9bda56412/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8bcdce8a245af235f8be9853c8f81c9bda56412/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=e8bcdce8a245af235f8be9853c8f81c9bda56412",
        "patch": "@@ -305,15 +305,16 @@ void CTxMemPoolEntry::UpdateState(int64_t modifySize, CAmount modifyFee, int64_t\n     }\n }\n \n-CTxMemPool::CTxMemPool(const CFeeRate& _minRelayFee) :\n+CTxMemPool::CTxMemPool(const CFeeRate& _minReasonableRelayFee) :\n     nTransactionsUpdated(0)\n {\n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n     // of transactions in the pool\n     fSanityCheck = false;\n \n-    minerPolicyEstimator = new CBlockPolicyEstimator(_minRelayFee);\n+    minerPolicyEstimator = new CBlockPolicyEstimator(_minReasonableRelayFee);\n+    minReasonableRelayFee = _minReasonableRelayFee;\n }\n \n CTxMemPool::~CTxMemPool()"
      },
      {
        "sha": "e45867f71357854056aaae4e8caf6b90917ab896",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8bcdce8a245af235f8be9853c8f81c9bda56412/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8bcdce8a245af235f8be9853c8f81c9bda56412/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=e8bcdce8a245af235f8be9853c8f81c9bda56412",
        "patch": "@@ -285,6 +285,8 @@ class CTxMemPool\n     uint64_t totalTxSize; //! sum of all mempool tx' byte sizes\n     uint64_t cachedInnerUsage; //! sum of dynamic memory usage of all the map elements (NOT the maps themselves)\n \n+    CFeeRate minReasonableRelayFee;\n+\n public:\n     typedef boost::multi_index_container<\n         CTxMemPoolEntry,\n@@ -334,7 +336,12 @@ class CTxMemPool\n     std::map<COutPoint, CInPoint> mapNextTx;\n     std::map<uint256, std::pair<double, CAmount> > mapDeltas;\n \n-    CTxMemPool(const CFeeRate& _minRelayFee);\n+    /** Create a new CTxMemPool.\n+     *  minReasonableRelayFee should be a feerate which is, roughly, somewhere\n+     *  around what it \"costs\" to relay a transaction around the network and\n+     *  below which we would reasonably say a transaction has 0-effective-fee.\n+     */\n+    CTxMemPool(const CFeeRate& _minReasonableRelayFee);\n     ~CTxMemPool();\n \n     /**"
      }
    ]
  },
  {
    "sha": "1fc5ca05caccb9026c8a6245a32257cc57de6e33",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmM1Y2EwNWNhY2NiOTAyNmM4YTYyNDVhMzIyNTdjYzU3ZGU2ZTMz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T08:03:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T08:04:04Z"
      },
      "message": "Merge pull request #6805\n\n2c4ffbc Create btcdrak-key.pgp (BtcDrak)",
      "tree": {
        "sha": "8e08148b5c5d0927afc520d1df52d9915afea5c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e08148b5c5d0927afc520d1df52d9915afea5c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fc5ca05caccb9026c8a6245a32257cc57de6e33",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWHLr1AAoJEHSBCwEjRsmm8pIIAIleBlzM+6aVwLau0/wdbQEf\nQ4hjB++jXnbfFwukwQ1MXgS/P2uEE2EfSS/HIshHzSuzeHJXARb4FpwR95d+REj6\ni60gAgJlpmBXmH11lpelnDeCdmYHT0ra/xD+11py1MAKofJzhGstIFtVckJLYQGa\n94Rw6NlHOeAG2jHl461AURbvNm5a+RoEYp2apvVci4QUP0HewDylkGbeNzbcULZq\nqWtnBUm3d18V1kNsq+3E5E+fu1386Q3vRHYiW1Vx9HWonYQdSvl8CUARI7x8yxNp\nQ6J52WBQAwhRpEcHGQwEUMPUZaLn6BinvDu0F7oXBzVIHL30auGy1fOiomeAM7w=\n=GRDG\n-----END PGP SIGNATURE-----",
        "payload": "tree 8e08148b5c5d0927afc520d1df52d9915afea5c2\nparent 4ca6ddec4d7918b47f0e4747c5647daf54675306\nparent 2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444723420 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444723444 +0200\n\nMerge pull request #6805\n\n2c4ffbc Create btcdrak-key.pgp (BtcDrak)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fc5ca05caccb9026c8a6245a32257cc57de6e33",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1fc5ca05caccb9026c8a6245a32257cc57de6e33",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fc5ca05caccb9026c8a6245a32257cc57de6e33/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ca6ddec4d7918b47f0e4747c5647daf54675306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ca6ddec4d7918b47f0e4747c5647daf54675306"
      },
      {
        "sha": "2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c4ffbc76ea8cc5ee8691a2884f0a5a9be07b749"
      }
    ],
    "stats": {
      "total": 142,
      "additions": 142,
      "deletions": 0
    },
    "files": [
      {
        "sha": "60d76c0ec7ab86635637ee9f49948e004fadfee4",
        "filename": "contrib/gitian-downloader/btcdrak-key.pgp",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fc5ca05caccb9026c8a6245a32257cc57de6e33/contrib/gitian-downloader/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fc5ca05caccb9026c8a6245a32257cc57de6e33/contrib/gitian-downloader/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/btcdrak-key.pgp?ref=1fc5ca05caccb9026c8a6245a32257cc57de6e33",
        "patch": "@@ -0,0 +1,142 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v2\n+\n+mQINBFWpKewBEACzsuhtkin1MdQCKCEcFypjEstg0jA0nNVOpsGDTtdwfMpWiLJH\n+bV7b3V1p5hgaPdSyZsUezvHbkVEQxmU47C9lwph3svu6v8HInBwnOa5zj4L0Ih18\n+7yfeEJOvWzULzNxtiIqvWQBFxrVBbgHMhUMg0j6KCYOWeTmTuUKgvbQB8dExCoV9\n+7l+mb0k6eOZhwGWl6KD8mVkdhfXhoCZY5g79BTJf7lAQqnVbjxdyEKD2HSSs5Jnx\n+mTeZg40ottXa1puT+x9ES7L/IOY5kcrp6lU8iyKAoUS4vOJt4nPqY59Pr9j2nUak\n+2BUY0yojH41a752OYW59R+0uTNcUAwpNFucOb4TrNqjGJaPtxvFBZPTLImfSE+Jj\n+VTT6eZixOXPlOWm/7PgR66JF70p3gDwCL19bwUeOKX3UbkjhmYG48d9y1FNFZlVM\n+Yf36xj0c2IOz34VVY6GcCfnIN6xus5qWgHWiQ6RRdlRc9TbcCsUGttXuFP/n4nX2\n+OHo6I/HBNidLScfD2sXZtYHLcqvi2CcvEmmDdwBZrZncz+cHpjz8xmONb3bEMNT0\n+euPcEC5PXUItCSk9KHSgJhAWqfB2WcZ0RUYLp5lbtIZGHqY34LJRWXVKeOQIq4Gn\n+8uCyM5oQUY9zK4x7fdRz5tOjInYg+eSqtnLVDACqmazQHZ6kuGspAvwW8QARAQAB\n+tBtCdGNEcmFrIDxidGNkcmFrQGdtYWlsLmNvbT6JAj0EEwECACgFAlWpKewCGwEF\n+CQWjmoAGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEOXROPXnOhryKiAP+L3B\n+4c4eZcp8OSRwtYMiNmlxqhzEe+Va8T748rP8oULBFi7b7Nw9FILtp0Vtt2Xw9Pd9\n+EMsv5ZfgPpFL58ZeaO5f4uyrxipfUE5XdhkMOtqqlTfuCGh5fvNv1sWgf5tOFS2+\n+4TCtcSSywl/OlbRmWW/rsJ+RPrE32iSn171WRUXmGGBGSTF2mxCELLIW/rnY1qUw\n+u81BN4SYQOSyd1ha4XAlVYnPcEdpD5mBhwh2mdw7nCtJ9G/lPJ+1VT5axsONbEKK\n+utoU8CRt7OBlAUe0GbAcp7FcniKaFF2nUuhNbMjFcqZ9pddb6aWHVcaXIHwjoR8T\n+Br8ygIoODNEauc0e1xbtsXByD76pcz3yzZOFCKxtjtjsln23Drko4JA2LyLxx8WY\n+BCZcf8/8QSZJOocFOoUIHEfdljo/41kF1MF1Ra2Pr5ZHx/qNcI3U+4+uBoc1AuWS\n+5gJl6xXicLByqweSGKzAfq+SGXM+8ZdJ5KuHISMq7tfkzkmIJ7fRy+cdprXYVnhK\n+CW5EWA6+xQqpt0QGaOyRPJvQqJJvO42Eg9slHkfON1499pwaIwblWuNRs/jq5xCY\n+b21m50JmPas6o5lCcF0SFiFLEJa8spWxMrsLZGUf8KfwriDrssw0XzI74E//BFb0\n+8TLeC7daL3bsCe3FD/Nlcplz0oPKOm6Zb7fNf8mJAYEEEwEIAGsFAlWtJa0FgwWf\n+nr9eFIAAAAAAFQBAYmxvY2toYXNoQGJpdGNvaW4ub3JnMDAwMDAwMDAwMDAwMDAw\n+MDEzNjM5NmE3M2YxOTBmZDRiMjRkMmNjOWM5N2UxNDgxMjcyZWI1YjE3YzU1YzVm\n+MgAKCRB/qxFCZ+T6BHGbB/9wvhZ2rgT4vOT7HENDXF+Bv9TItBF7JQ4mehCenWme\n+23qxBLttfQp3AbwA2K2FyrshGM0fmtmpO5pcXjjHMVzlIDa1fKvbQGbhok5Y+94w\n+hswGS8O0XTU6sB3JxC4vpqdS1pryA/7g3YI+EuzYCkubNxvYnAy80Rf098xZzj2r\n+Yov2c73qg8+kb+5MS2fTjOMQhJo8N70YOew9FVOeZoeepv7SWLDI5Ya/YQ+1fFKN\n+2ovfBq/fzAD4PJbPJCz0miq1T5GL2nTXLcJmj46uV3wNvppNm/w8492de5VO0JqG\n+qlRurp6Jp2k37jqRSIIXG2wxCkND0cYftjS13pHnerPyuQENBFWpKiUBCADiSsd/\n+CmoZV2/UCqAnxm5/kxF8rW5hVYsYmfGO6lY868j5GMOVhWkrjl2CNWrFwQRqyiol\n+FNvyOro2IpOGXlM87AU3MP2/Zz+zkO3zY4ZH40t/UqcO2MPpKdkmGofCt+C6IFGS\n+Y23FqdfOLxV3aczN2aLzL2C6hHdXTcs99NGSf51iHLXn9b+hT4k2AxLPnOnnjgJL\n+eC6+s2sh4loSuvCh5FjVQfhQDLyTn93r9xvEhUMUUxBLz1Iy+e+w1elSwqNT5wEI\n+V5Iontm63lN37GrkRyX90PBtKf6VYXE1yKhNLmPBOIc1vx02og6Psu5eilzKfoK/\n+tQeYr4M/6HOcNvEnABEBAAGJAiUEGAECAA8FAlWpKiUCGwwFCQHhM4AACgkQ5dE4\n+9ec6GvJmFQ/+IoBituRcR394sVPiK7apDIPzPziVT4Qu8aBuHHREhK1Vl5C5tLZ7\n+Q6wA5Xc6O2/G+37HqKX3rqD7XBdFwcPXQa6g54uVs8l2+1UIwnFqZm8bJwubkHU7\n+U6addHacbX2itqb4EiQ82mAQqPSwx36QGLtPF2htl5z1XWj6queqjVrteAl2cbz5\n+KKGklTjReaX1jmun/3nL1yJuYRpZ0L7lF3IU17FVckCL/y3CXhdWOK1fGRfsnZWe\n+XQT+00dKhW5uRfpa8hR1/HJnaczAZnjjpRJZq8hBLamTjPypwjLf+gFAPiAJRuug\n+Bh4saYoE3ciNDzB3B7RR8oqNwxaF316vurrcKqEvnpQechFudDKYz6Pd09lFM1U2\n+MlyJ/jMwwlEvwoTlKFvgYmXOHPZoyf4Vdq+RPfRy+pDI1et9fN4wsy/Foj5hb7Yw\n+/hPOAjWElc4huCwaHIbGN+gHd+AbO6dOkWC7GgsOTGopyU0NXWfud7HB1V/NQ7o1\n+EMrEEPg3eMBMpksuNJ4TaesJ3keW+9OwIMDvsIGcRvqcAVL0R0ZkMGiYG3ITna7l\n+KRcCZwWaHmE6WJTuffBu9oyRFfSH6YbI4pFuFulxghNe3gD1AFZyWPlS/M6jw87I\n+4nBWSNoyPs1UxEGtntBkWiBJq79WAUSAeiDPVzvekQfaZxSpCrZh1cy5AQ0EVapR\n+MwEIAIpPUS3x6zTo9YoFxf2CCNho62MZfoN4ZpVQyY+NLhZ0p1XQBullafZdQjF2\n+mGPXysg7SEZflkcwBGjS6B/CJUoe+zGRL0DXrpoGrqEZzDshiOQ7lM08iloZ9X7V\n+UqhZdi7CFQCO9lAPgrFnvlTVvc7z+1L01/I+9H+w7rmnVsa4NyR/3W1zpOjAO7Wh\n+telWGTcLGYM5fWE3XnUTsWHUQnvdJ9qkDQB6emAOSzBreGmxzru1VSKIPrGsYmlW\n+Q/5Z82ihJ9uCYswUmh+hXRnAXTZTw9jQ+/hw75YuKUGjxXnMGJPMWIlBgB65h1fz\n+a6cTU1ZuS/wEEWEsiDWIob+B4qUAEQEAAYkCPgQoAQoAKAUCVd+TsSEdA0xvc3Qg\n+aW4gbWFsZnVuY3Rpb25pbmcgaGFyZHdhcmUACgkQ5dE49ec6GvIMfQ//SVwsyixG\n+w77pubV8R3LHjVqjo8CNWR2CedzT2/2xfRqjiz9juxpVSunPLTCUWhJTp8bAJzVY\n+UteZ3G1ctKuA/cnUbiAduU4CNlKrZ6AjmUysPVrsyw3kUDm8LSKKiARb0hCAFbvO\n+AO3Lm0YbpBtVYOUpWLoxpkFPx4PKRSyS+mkmFCgBV3baf6YOfPimGyEkVOhF5vZ9\n+WDjnlxPHWhjrpWOpWYPOlDMfSxsvYe4JTd/QXEqx0Ki1inNM4AnLiDf/rnyliQiQ\n+RFlHNnfo/FyqO9wvY8Hu0YLUJqee3WWTVDoYnQYSdHVM8w5JYXiUG8Cc8H2kQ79f\n+sYwIQEXPdJUCeFYnWwkltAjd95AvNDv/5/4kSBBGWUY80TH8qoxuPLekPmuvS8QE\n+TP2AeEcL8Hi5GnKbl9xb3bu/cuauLp1D23qC3HMoigFEgUPQ3egB7Z66PVWo+ko9\n++niqujCFBZBmkS23fvp4EgejYkvvhH9NcWDXWhnIaghLq6ngrj+zHDTTb5dCp9aM\n+JKOyKZIjEtT+AOi8g7yQ7bDyI0eJxOhKamBcVYHcvUU3DMsRSao8cEE6ee/G9564\n+sQ15Ma7W+wqee8SbaND84A2tAQcFtd7kvRn8C3Ac/bHuL5UIihNruTzOsfIHlXmE\n+jqjNA37tatNGoAK6//UHCzX6rLZSBUJtsDWJA0QEGAECAA8FAlWqUTMCGwIFCQHh\n+M4ABKQkQ5dE49ec6GvLAXSAEGQECAAYFAlWqUTMACgkQ3qOE7dYp+kBF2AgAiI8O\n+mFVfhCSJl7ofMMO2g92JfeWevQsn+GITexaYs/FEBb4NmWAyItJ1mL0jCVOhRXwj\n+AcKbKiWhuco17EdXi3xvu5FrfsN/lOmmyhkKyHSR+LS2XPb+xG5JJrafS7m2nxMx\n+4m0yH6tUcsBnqBPFFZ+w+Fxtg8ngUbo9B/gaXr7mvHwir0P2LYpcqlwpD0Zxmu1W\n+HpKT/DQa09Zjr5l9WDGtF6U6ZuSH8sdh/tD///x7AJ6eoiYadcy3YWRLFKKpfMSI\n+tSDhOlWBFFNRwrsZRXCrETYoJNWb/kvcHOaWNzPWcePjQ5RdOkQwnidUd1iy/Uqr\n+2+cT9WWfkHAND4uHlP1wD/sF+nQWOoWcQLFqTx9qt9h7tbgNAzXfEec7fwQ+NMwS\n+bKocjb5OOdzInEMDufusOWgKBfJtPQSMUe+W2orxBWtJb7WY9Xeshjs4q42GooPz\n+e9AN5B2M1V+wmSYEMyhHSTldjj/ZUWBmzZGH7skPHFUwFB633NOA97Mrt/F1RhiO\n+kw1TTn61x1op+wF919DnKdXaFiFX02XzqjJgnuUoGN/72cnfRzIkSaq9b9uX/dQK\n+z2Uk19ENQ3ipmAqBnzOzz+kjSqh8PdHgTGSyy8Ump8+dfhXjC98wVwP6YEn7tOv0\n+iaRzOiKd2kkCvSYexiqWYtKLU8icUFmvd6SROkcAHhPr1+oPS7LJpYDuES17iN3X\n+YaYHGGyvNsh1RseJvE7saosVGQwM539W61JUS9A3TP5jaL8ka8Q5AiXyIee+CD5h\n+2wFQnvdnmnc4QVkdVdrpNRBZyGySgyrO9E+iogfMSfcdDApgiETUOuMTvuCZSPhQ\n+YZ3+rddfgyDXYN3y5oW7Piro19r6R0D7DcGSstk1+1mEjJbb7s5Gc7oGq+EgLm0K\n+VYKa4Ky12osPCHFAoYLHe2upSHFhtgPgfzHKE8Uo5hnAVmx9jAi2XxBi4y5ezPPD\n+C0cCKsRTVrbvNavTSMYdfcxWuB4vlrMZIsvV0RcyP9jPXZm3XPrMik8xRbLR9AzR\n+C7kBDQRVqlGOAQgArkX9q/xZbvceeW0vzxI1UfbZnVoO3E+lL8W40RtBoF7R/7bD\n+68/dNYa1/geUc1jVyrycdp5RkTfnHnIHDt1WZfi6Ywdw9val+BpT/X9ZkxEXgYxO\n+tzMq0zO+ipeLgiqBRck7kgsOEgv+zaqMFXXrH+Zbsg1QbDEug61iCoKzpR8b2+5Z\n+QHxklnGd1RbiMWpioTmacOQE9yTfWvastJXIvZoZ8gdaLR8hA5o/ePP+GcSgntAd\n+NlMYTqqNujAymBJvMAu+ybyFRKN/L/X+IX2elhJWM1x4d1OjM/4sk31g6pucWRcd\n+vimPWouDIWVh+sh1g/IRsO295QKzXUCDELc/QQARAQABiQI4BCgBCgAiBQJV35N0\n+Gx0Da2V5IGxvc3QgaW4gZmF1bHR5IGRvbmdsZQAKCRDl0Tj15zoa8lAJD/93voL9\n+dqZ9IViyULsWsEkQDD20HQ+mxbuJcAE526If/x9JIMR1JcuE/C7pAtNjg5VBCOeB\n+sk0JC+Z7M80ivU1xov+rmjRvVNAX22/rBLpCTmUe0gzIBnWG5+O2/sccutigvvQE\n+O1rqLTEp0dzLoYbVAwJedELZnmK04Y8uXXQ1XSHXJOJmvEBpbDF0U3FXl7Sw4C+u\n+hI8IR6l2D/BYKIZgNIkh4ppFa6RJY0DtEWR94POZYBjjjToeCTRBG9IxudDy1jm4\n+k6bF/ByOecN4B3HRcBXUM1yJEmOZlPSZu2v7XvFp2VnFJfN2UjmtpYsKamV/xUsw\n+DE0voGp15TOfb+6QzfnLSI7vXcm1CfkBS++lYKcYcJ9Kj90ZPjtKy25vKcBvG68o\n+nYgS0Jnzm6j2yE2KBc90CWS1Txgu1Rd5ZrP8pM1ZK20/dq9CjtPLE94WFIc77k0R\n+3z8DJPG8I8M2RJ1XoqENrBvG5U0B+eeGA7mY8QSRH0COhslJ7j0WjOyO8xBSGTCq\n+QKGppFmDLs440cCVUOpnPz1kYG3YFgdCsFxOQ1GBJuHFLUdA1BEbb/nG4C4+y3Ek\n+Bihhu+3ZRoaBgE7ZmVOMEV7xdslPNssiTh+CxIUtugY2mhGnANvEcWrqTgG9+EHf\n+ax2avHR4CQMn7onZAPt2sOMoPkE8R3H3Knlta4kCJQQYAQIADwUCVapRjgIbIAUJ\n+AeEzgAAKCRDl0Tj15zoa8rK4EACFfSUffkm80uzBxFDbo3+fWf2k5hnjXheZxE5w\n+gpT4Z6QGH70GjR+rbH5a6fMM4hkmqNRYWLf6n8RTYNvCLxopVg2l1QbHYFbA+pAB\n+0tM7HOng8iyvc+uUJ4hTicpePm66A4uc1/z+mr5mcLTQS6Nfix2j3hduzzCVIbuF\n+/3UUxS9hFAXOu1F1Oz6auFkeQ8R/w/49yXrq/MYYSUsWtOR66Yu4664TJKBkZGlw\n+CiGPYmpeE7To7LqdhAop+ZnZnc5agSnB9QZw1HVbMY0nwbPuiJx+6mmbh7Gf/OHu\n+2pHSAStvFUGA6ngbYVH2LlRC2XgAA/yFAy1FNFegxTXO+3DI9ykj/3WBmjbNZMIA\n+mhcvPPwwJCNdxbZJbCcot82FBGPpwmsiZJWynD4m4+aGErp/pZmKjfMwP5NAgOQd\n+77XaRlJTvW4GqAdmT0ib7tCqGwFAx5o80SszhgRCUqu8oLGAUlTfMoRgmFNRznP9\n+7xptwjNSl19YrlXdgbhOvVvNO0/J6uXnRc3v9yfaa8J7xU6GvuR5smejYNLUxccl\n+N1UmouS3Vol5z6hOmqnembN/zC3THOHqmJ1G6SdiCcn5dG5Tc+jmBKLRAnoIimWT\n+dO/UoWhm2EB40Hlj6HRFXure47oD9x28d48E0+HI9Jzlh4Wuu6kkr+ugOpdC0TbN\n+H/+RObkBDQRV35PpAQgAo1+V52e+8VFsDKyceNNEVE8NdUiPRKBZuVfCSP8nqNCj\n+hYf4lY/iygHCNZDtKaBs6BUCj0Ev1CLm+Uxvdl1trEr1FGz8E1kdUsh0LocKJgjh\n+wbuDrxM/6LNBxYTR9fEIGx+ka8o9OMLqWav+QjZtDC/nTWaJkXxvcgZPhadCmkkz\n+P0g/vnJVYbvDBBmxI9ofkxZIrwNR2Y8VO2oLVP0MpCA06cuUQWym/gQ2uqBToGqr\n+M/gc+vq0XQyFrNmH/iP8MuASrOoQfGhvZDg/x8rcFRs37itZWpUfP3pZ5zWztX3G\n+TBtc1EktSjs8fU828lPxtG80r4RB2sWVDJfoqhi7XQARAQABiQNEBBgBCgAPBQJV\n+35PpAhsCBQkB4TOAASkJEOXROPXnOhrywF0gBBkBCgAGBQJV35PpAAoJEPxkNPw6\n+MelWLCsH/R69Q2jgT2+sHVWbDsmNjTOkJIteKbz0uW8/vBJqZ2VEwKozGruCTkNI\n+orYKj52ZRcxKiAijN2XGw1TEccP0s5Trap1Z+xgjDDLByLswoVBUzAjbq77hedT+\n+ZUuQFKnm0Cc+PzB/Nz96I8AV4AxYc7RW4keGtvEv7qgdIlb6fbPpFB7Z5W573OZ7\n+G72B/T6QL43HRaN+ZbjwRJaY66tYKSl0Vd0WrO2p5xVdbTarVFn6q/A0IYEafVKY\n+QaRTh+VQbN7vNZCn1Gi6fvnjtWRsj0vMkafdAzVYqF42P+cf6iHrglE6DwR5AsaS\n+O9G+8kLpkXFRjDQJBaijWdBtaeOulCxTog/7BZwo1kpTC3ZCTxr/SHJDc1Nsxt8K\n+xnMCPxFSrHRJb/fUQDjhLv6lXXAm5SCBdFzAc9oDKUbcuGSEz2nZQjL1OADn9rVo\n+j/Y6wJ+okOCOs9AI1H+VW/rz5Z7wxvw3YOVa+dnYdV0w7FklCn+xFdZLj8Z5WjcZ\n+zoyqGlVAFGOZ4MbO+fz/+8f0Y7K/bW7E6smhnomTy2ZOk64eiO12d8quHTHMi7Xh\n+mmVYDiNn1gW9IxZwt/Ga9AvZbIAYhL2m/xBbdfMKAG7Ttjzd3Ac+8wrGm3lOesBD\n+AJUtBmURu8b1Eyj72IQcV0AJM8gvc1B0H345oX6VBgkBB0bf3nuUVftv6r529jTr\n+Jix6yrs4uf25tefzcFuqqE1s1r+pSZFIDpaNsP+jjMgYj/zn4dLOZaq4V3SHvnsU\n+v8KOUC2/qNH9U0KC6bh4mw0fVsHzhkaOjOM7SF1Doc8Lz4vZuk4BpumHpkHEG90x\n+CLg2k/R9iIDQfcGtKY++1/GitjXakPuKrJctZ1SJuW1KWyzFeF4qvuowmLGMFRVi\n++CG5JJSLCUr+cPXa8NbjZv9BwSHqWbn3grr7ZE/j6SFNhuLmByeePPNKRt0cae6a\n+3TQkQFh/yvSIkB5BrB1n2x+xNoWMME+GR0zYQCOncCe8W+a5BZ1mTiVGacHgVqSN\n+eEaG0RH54+pi4gw=\n+=fFMC\n+-----END PGP PUBLIC KEY BLOCK-----"
      }
    ]
  },
  {
    "sha": "241d6078ba26db4d3a36227d3275be2ee34625a6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDFkNjA3OGJhMjZkYjRkM2EzNjIyN2QzMjc1YmUyZWUzNDYyNWE2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T07:53:19Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T08:04:39Z"
      },
      "message": "Add CFeeRate += operator",
      "tree": {
        "sha": "717da978c3a0e4cd6e55b91fdf0452e5f838896c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/717da978c3a0e4cd6e55b91fdf0452e5f838896c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/241d6078ba26db4d3a36227d3275be2ee34625a6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/241d6078ba26db4d3a36227d3275be2ee34625a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/241d6078ba26db4d3a36227d3275be2ee34625a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/241d6078ba26db4d3a36227d3275be2ee34625a6/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8bcdce8a245af235f8be9853c8f81c9bda56412",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bcdce8a245af235f8be9853c8f81c9bda56412",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8bcdce8a245af235f8be9853c8f81c9bda56412"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a4c7764cda2bfd3a7afcc4ffa9a286eb0a42a4c3",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/241d6078ba26db4d3a36227d3275be2ee34625a6/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/241d6078ba26db4d3a36227d3275be2ee34625a6/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=241d6078ba26db4d3a36227d3275be2ee34625a6",
        "patch": "@@ -51,6 +51,7 @@ class CFeeRate\n     friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n     friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n     friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n+    CFeeRate& operator+=(const CFeeRate& a) { nSatoshisPerK += a.nSatoshisPerK; return *this; }\n     std::string ToString() const;\n \n     ADD_SERIALIZE_METHODS;"
      }
    ]
  },
  {
    "sha": "cd57f344a591edb1c8b35736b2734b39eb202dc3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDU3ZjM0NGE1OTFlZGIxYzhiMzU3MzZiMjczNGIzOWViMjAyZGMz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T08:04:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T08:04:51Z"
      },
      "message": "Merge pull request #6807\n\n3b363df Updated Prab's PGP Key -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA256 (Paul Rabahy)",
      "tree": {
        "sha": "b685772d3c23aa2f16ea582596ed7236d0fcb220",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b685772d3c23aa2f16ea582596ed7236d0fcb220"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd57f344a591edb1c8b35736b2734b39eb202dc3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWHLsjAAoJEHSBCwEjRsmmR90H/20YASxNPYtZS4XOWydjHV8r\nLpfoMIuoL08w06fvl1mMOpp8FO1wymUIlZknUK+9OCenE0qm8oKGomI1X9xb+Rr5\nIqDk3BYUFn95me6RS0MVgwuPKsnc28Oma9hlx8BuNYxACEdu+cQx/cMtuK87EA5s\neTc/Ewx/3DuzVR+vrCMKdJ9JZMdlsIqqtaoBfUklKa6MVmIWxy3SODHni6GhNsaE\n32zAkHmatRer+eVn64RIx6RQvnpgBh/1Fp4WhW7WeH+1hbXZKzo1JoP56ZPpzMvB\nTwVtYRITTViHgrO6bXX/JELkk07s1/72ZXH9+ayzTgXsTkS1CBMrTK5b2oV5+Cg=\n=7k/w\n-----END PGP SIGNATURE-----",
        "payload": "tree b685772d3c23aa2f16ea582596ed7236d0fcb220\nparent 1fc5ca05caccb9026c8a6245a32257cc57de6e33\nparent 3b363dfe88a1cd08d7b3369e1195742733638adf\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444723486 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444723491 +0200\n\nMerge pull request #6807\n\n3b363df Updated Prab's PGP Key -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA256 (Paul Rabahy)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd57f344a591edb1c8b35736b2734b39eb202dc3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd57f344a591edb1c8b35736b2734b39eb202dc3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd57f344a591edb1c8b35736b2734b39eb202dc3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fc5ca05caccb9026c8a6245a32257cc57de6e33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fc5ca05caccb9026c8a6245a32257cc57de6e33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fc5ca05caccb9026c8a6245a32257cc57de6e33"
      },
      {
        "sha": "3b363dfe88a1cd08d7b3369e1195742733638adf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b363dfe88a1cd08d7b3369e1195742733638adf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b363dfe88a1cd08d7b3369e1195742733638adf"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 77,
      "deletions": 25
    },
    "files": [
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-downloader/prab-key.pgp",
        "status": "modified",
        "additions": 77,
        "deletions": 25,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd57f344a591edb1c8b35736b2734b39eb202dc3/contrib/gitian-downloader/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd57f344a591edb1c8b35736b2734b39eb202dc3/contrib/gitian-downloader/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/prab-key.pgp?ref=cd57f344a591edb1c8b35736b2734b39eb202dc3",
        "patch": "@@ -1,29 +1,81 @@\n -----BEGIN PGP PUBLIC KEY BLOCK-----\n Version: GnuPG v2\n \n-mQINBFI3uQUBEADRjbUQb65n7sfjT5OPnjPO8oUh5onKjNALRGHGJxWwNkwkgmT6\n-mZFWjikM8B3ONEp8MfTyoOzv+MbWuBDS1GZxi0Tcb4HU323/7hhwfXV4bcHif7vq\n-Sc1ahN/5LIHj0htC6Uj78IWXW+kPWjX9biRJnZ9eerfA/AatC+4KuvYTjAa9uAfa\n-BnAs38EG/7ryXzxdz6M8iNB/YjHE72swSH84uTtA3LqI3huVY41eFMK6qXFBMFiq\n-H6bMx4pjwKzJj78bibXEQxq88yc6TLxbURs2GF4s11dr7Iq2Y+6FHqX3PfUByZBz\n-PQfbEy1Df4RbB3htCBv5puETlqZ0PVe9/B+WrcnaobxrbKEAqt0DspfoveRTIL+z\n-+YDs7FuW9TFBmd+5d2nmblHrNm8eEig3DpOoVetuuXsmDy03Fwao7hGkva4P3xbP\n-H4/U8GaxsfNzuLvEyy+dtd2t2C1HIxS+56r41/vdb/9rvGgEQuSr0DVpZIW9en0f\n-3bek+H7/qRCbXuaiBACBvOKNror5jtTeXTvnHWMkrOItyGH9pwR2Lhhv68JQS1jk\n-e3pwVRzfHBz4wQMHeLIh+blsVKCIjytBR8Rq36rsmN1q44/3HwuPW/XP61kPP90k\n-dKyPF4Qa+EoPw5ON5nr3lWy8ysklM79o1NmpyqNT4UjtDDBSfJtX82ct8QARAQAB\n-tB9QYXVsIFJhYmFoeSA8UFJhYmFoeUBnbWFpbC5jb20+iQI/BBMBAgApBQJSN7kF\n-AhsPBQkDwdj7BwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQ0cuiohvNiPaB\n-KA//Y6h6r8vUkA4/Gl2ejMgH+/DAolg9dFD+KMjQNKw16g7WzFNNS05T4RhcfZDT\n-mapAW2LOUiiPVJTacmblyFp2hXCv3S+DESQjVdz15pxMHkt9fFteXGyJyrcTY5pR\n-rZmjMD/9Twy2mLl5IH5ms87p0TN9HhM5Ux+B51la+Uq1wMdc1PdPWvGDeBVxCnRI\n-w0224M5u1uHaMwMDGdz6sXuCuonB7CDGL9Z2+m1Al7t0peL2QdKHjv8S+SKM2rZS\n-bRJyNmmTSKFQOTb9e2Ve48NNeaC0usEf8ttsygclps0mDpoa68YSY1LiuwVoIxvd\n-S626eDqgmq1yyz0l3gQbYKIUv7KvRDnYhqIEkPZLCOwKirm+I5vzXvVIlfoNRoyJ\n-VH3K6MJDSpBEerYNWHmUQpp7cLXIqVtako7IgmglOXQ5XVRnPvlOt5VOqQnNRTdM\n-nd/FK3n1TbUyNRverODSpOS6ZxdSSwLkTycTtj1SvpLo7laW0HQ1ofJfwzVmOq8s\n-8aWWTwBBC/X1UNLL/rsZMoHeUpaKHF2HSK5XzLcwqOBPRTMY0OG7vtBvj4G8clht\n-A3uQmmCMr6RxsPPYPHPO3MnMpY2AK6RRnNZg5Y1Fu+/71FAuUDVTxmI402yE5XbP\n-ILbJ8RgsrTVgeHdNhp9or0BdsB/wwMT5intkCaNqwb6eJag=\n-=y2Va\n+mQINBFYHMLQBEADLpvMbTQZ28jaV/tEcHpt/a2YiIqBdNreh6rE2MkTTjdkZJ5Mp\n+RAFOTrRYRWyBL9jmCjvjt4TToiV4quv9ubRWdTKn0cKaqcl8kwZ5rtoX6EEhcLJO\n+CAL13kDzkBrG3OqRxM7VWn/0IGf++Eq0yT2eqBi7Ae3FvC4m64TKLI2NK7GB/MQD\n+JqcXuh/0yMsPiCNZrTDBX+3SzTuSLjWt2Le1Ap2nWXf68cWqP6nhT+f76epZyA4D\n+NI48/KeylUzPSJtqBmBM+YLg/XGcxDpbIotnr7D27ThJQIXDzut9O9f7RjdlKaeh\n+G73W/hDqTqLpkR5LMa7K3unUuvlyQqYGXfHINjJibNUTLCi7YcJtuDv/DJwQxu45\n+/UUYS2xH6HpgOTdWs6VjHRCDzeAoKzkdDB+8Mvi2lZXxY0iFQeQtRNkmN9D3M4oT\n+voG0cZWjPGeKSalGVSRS3TGhdf+IqOPhOl9yrwEArlZ8HtsTUFdx/jAsWHsycCVb\n+LjkD8Mdgit39UZCln3e0bY862wF7Gm7P3ITMnTofO9w6Pqffh9WWQBtLrxIXrgII\n+vstC8H9ajIl1FDuYs1Mf8u7iq1zHh6GNzoxkm+FEvYc3mkSfx6KJD3STWqSrJcQK\n+q/1SsjBb+RiuqeFdY8krWfm2xkuUoGLEQnr14UQz1hQTTLEgSoHBSHxuHwARAQAB\n+tB9QYXVsIFJhYmFoeSA8UFJhYmFoeUBnbWFpbC5jb20+iQI5BBMBCAAjBQJWBzC0\n+AhsDBwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQvNBNjpzMrCp8dA//Yaob\n+cnFuzLjIeWyz996DPJvU62WmAE4GkZot/wk+dtIAnOCxO9YbhWVU/b1WG2PjGdqt\n+LiB6COG28/HzJoUh2zjG0lDcjvu060Bdw9rQ/kJWW22ylNAoKiY9jd3Abde5nBGK\n+0wwJ8+aMMDrO6euwgcJymJ+yZ6ZiWyG4TXXCbSdCDSsBtaaAugMlzZWeyEBEgUK4\n+nX3ZCoNiF3s2bYojr6VcgG2clM9gsSBW03XLW3lRLOvDFmdEAFp8KSJNSkGBlcOS\n+iba6zAKTY80W/+D3soBP6Lr2uP0AOFr+ZnfxvaH9YvXIFDq/jT3CH2RxiZLd1m59\n+ehUbU878ebOMlJCJYiUBY6H+vChytqy51o1np+KTQtpxKzigWiPbtyJ9zYoVVczI\n+Ds8APCqL729BPMhhTDm8I9jeEhjXNmmiJjGVJGVB5X/3w+7jQrEz6f1Ebi+cCrgN\n+tfN22bMs9hh5KkQ4JhRVfDM0DOXCvokXjdo9yXUf+Doc96ruCJKH0qR9L7qIASiD\n+hSEK3CNGY1G05Bb4wCS+FrexL11whAxlX7HCwbgjgHu07QJBYITdn3J4fUFYGsyS\n+G/2D5aLASiKGfq2TL1G9e/qI49/TksDQ6Xy4ue4cQYbf6JigfYjDcSDOZmkHPuXG\n+kSd60WPWJT6OqLrhq2c7exYCUGZaKrWBoie5yoGJAhwEEAEIAAYFAlYHcWAACgkQ\n+0cuiohvNiPY3BQ//TVOxm3UncyGyXOs+ss3fBSPE5q3lR71H4uo4CxE5pi9Y10tK\n+Qf0ULe0gRpnF2FMUkCCE5hu2oG+kPpqKON8/jwcnRCO9h2AndIZ3NRPAOXO2pn9f\n+bkDHMlInhPUxDk5zCHMTOdCONDvhocZ69gYHJdgt4w3Joji1YxTkHr2n8dFyNY7Q\n+LgqT1tpuXgopjKsUcYRhDCRN/iFsMa4D+XZR+rflvX5hkee19DzUIWmaHitfHZlo\n+VsJ7uVZKqUevS3rbBr3i+tpvvlrqDXAGksGWOdK7QFD6GtRgOD91IB82K0NvyX6t\n+M0TMh/aAAslxfH3YeTIGnETuBkp9QBCa1c966ipoHyzItmK9sF/ONPEfYR/ad3gB\n+Nc4G5w0UEROX0v4AWMfYc2CD+un3beH6rkWnopsIRJcQ71XvufqweWsPFALuBBzR\n+PTiugTi0SSSr/ayA543s90Ko2Fxrg20UYJZj1u/DEukpNJwjRSS/yyjk0hMWtzW8\n+rY1Br4Djbq3uQQj8EQojHgg3vlpHcbO77kXIJAlWYIzfHY69RGXCQG6Y7tavIiXm\n+vveP54CPFCs8Kl9t8Pq0IrWKnBGklE/KwfMzkzvrKFmi+nk9yRgwyN9G/geQt4Vo\n+W2mHmO1lvY8Zu2zpzLkvkYGXpL1VkIefmBYV/SWgyYGhLOJIFodJcMrrnje5AQ0E\n+Vgc1VQEIALsxaGYOnwWdgE2e7zX4uFz7jY5fZh0+RqGOe+Sk2g/QVKEDSLDgVF/V\n+tneG8AFgYukHPFCm0IZdKrewrkzdQOwxjyxiyFxOV/LYPesElVe8OWIs0lrMrWlL\n+ZLDguF63wnxWhjolfBzQAG29UTXYaJt6onEB59R2l426LBl3W9wvq19jolOECISw\n+r9z2IRUJ3poqBckT9j11p8yuPjGyht90dvg4htGPBV7nHDIijUnqLfk9mnAj8NwW\n+2Gf7TwW2uNA2rHV6riFzYVe2t1sB5Gdlx5ostJzo67yIc5Dffca901VhmpJTUPox\n+W2KmTpl3ObvaS0U0mkAyVObVHSuT6UsAEQEAAYkDRAQYAQgADwUCVgc1VQIbAgUJ\n+A8JnAAEpCRC80E2OnMysKsBdIAQZAQgABgUCVgc1VQAKCRAyXl7AXCempkrrB/9H\n+tOAstawkJ1IflUztgknEDE7MWuNR5XGqN7ROJAZvL8YfB5J7a4HJxTzCWft2QQUu\n+x3uwSfBpm+hRftBjm4aACrhDS6OOH4eFOUIdDASb2lgnhLmygKhAO9LW2z8jSrRs\n+tKNj9nyCo56mtd2awFESgpskavv/ilc9wU830C82FFdyBqgy5OBdWBurnb3SV5F7\n+23uD1t1n8b9gseIxNdF6Q//szAeHa4VRzzqykExXqHCEFCtH2gs9EjiZ3YeCyygK\n+cPbe6/+FP6UD810PBqnWaCShOIeT56JsOu2gMZ5+epWB+piUTn38N2Znu3EA3Q64\n+Gc7P8AtrNUCv56bof5NoTuwP/0rP4n1bsTy7siBuPqc9YvYkVCxNsGmg1Qs5h2Jr\n+ZmQlAnz8JXfi/TRxarUNQTZEsXVQzq+4C9eEMey440kXvDE2sd3p4MKnbtkDmahJ\n+XcMG5lsMMAQTpmyBf1EBEIFOwjZBqUqEkHl4FGRpEx/Q2p9/pVlogGW7SE5Ck6W/\n+A63ClJUJLsHaWiv9zJ23tzT+ooNy/iO1Y+GfV6MY1tBfLd4ZHHd2n1urFB362sgY\n+2x1TfvfXN0Myw7m1X0l9bYFycuuWfSo6qK+LCU/4P3jm21+i9lWBYX5l+NLz5mlC\n+V5aN57zmtGK7QMSp+6VY8mwG1TuhUt91S2fEScLax6qEASiEChB8m3YJOjKycP27\n+Sq9WactijiVTPslHjCNfyM4BbE9crAbDWGkIbzbka8ix3t4uBWt0YO0Ug9S3eZBt\n+w1OVxUI+LWjF5XlkfXn8W+pZ/C+M9Cs6QsAXEbfHXVZKwlAGZfvYE25UTr11RRnY\n+pl8JZglq0Z2Gip3YzJewC1pjjQTnnPoPT79elBuPmiGwNm5L8HsKUZ1IMf1k5mQB\n+FX0CilHMF/JAO+r8Obs1l7FHXvO0a95tStcjpFodZjHARi5B3VGghcypy2J9hWfH\n+YF23EcE4GzpqqSEO/SJoxuLNNtj5ZVJOxmeRz2CKCe1sI8xO7wY7ckjRaGmrvK+c\n+dAxeuQENBFYHOocBCACxVJwkGbqcgKTrg6APMxWO77ielcac8FOVpd0ns1h4TGZM\n+iCwwTR5WPRiIA6zuS3VTuPAntnK3VF9fQsLBORHIb4CzMeU3F/64SPt8NFajEQ+P\n+vPsZlyv29RSVmvhIRDTDry3Z/KQxnZ3rzazrBqGVuLBgsG45n97MQ8Xq0gkY42jU\n+VDldULYGMco5zHj/MFSQ6L3z0j1lL+aiX2xIdRyDNzOhRqaA1ByZvsRSsqW2JWox\n+78c6AbclWw0QLdQd4Pxk8k5hpeN/EtneVnFDX3hOq/C9fZs6f5aAKn81WXqPPPk6\n+G0b7KzlUoCWGlO7M5LzEzWmWvGPs7W8y2Uil99CVABEBAAGJAiUEGAEIAA8FAlYH\n+OocCGwwFCQPCZwAACgkQvNBNjpzMrCr50BAApY22DRYqmtALFieREu78BvjQT/DY\n+f9Smkga1YVr9/Ph9NJ5iSVeM8mrVkwZnGRK1UCjk16rsmB70IqlnJnyJGXqPMj7M\n+3ioOWY8fCL8fmLI2g0TbXXKl3e0nGByGXW4pwyLYa/hR7XJMco/PxqIGhEKcCIRP\n+dxq/6U9T9SYe2IkfXBYZAxfUTE2FkRpw1zSfZN3z32LM7ICZ26NRHRWo4Kv5sij4\n+0mYYecFmWdf6ib5pPCI0HmPGpblbmZgR1LoJNmuNxfpgEnPe8BbxtO4mueNW5A39\n+y7gLCmDZ8MaOGxvjGByBoXxXP62BiU910iZZZurjSD+3FD+NUX0m4yxVIZCkuInY\n+QzLxFACr26IYpcsPHIYGnEjDBFw9hHdP6tzKbjzgVSZESheQf2zwit0YYSjwHQN/\n+XGnBy8+p66As61jg8mcAN2Zd8vwFKZOvfEnSsaoK5ssAh8jixhPj+Ujgs0/PB8t/\n+ON20yr+YRAwU+RVnC/vfvrM83mjoz4mbmSLapFz/xWNhoS0ZczYEI5CyxE8peGPX\n+gd/7tim2OqUuZ3SlH5TZP3pdJcqxTNN7iNaWy1wAY/sb8As3Pge/Vv5hSYmHNjQy\n+h/62SSbTf6OZCuUGjy8fvVj51SclVKqGNprmAqVrIy0J+VeTKj4r7PGesPWJavRc\n+RFdDYRHByRDDL1I=\n+=dOwX\n -----END PGP PUBLIC KEY BLOCK-----"
      }
    ]
  },
  {
    "sha": "e6c7b362ab8915e2aac167fa519bd29836d482af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmM3YjM2MmFiODkxNWUyYWFjMTY3ZmE1MTliZDI5ODM2ZDQ4MmFm",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-08T07:46:57Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T08:05:43Z"
      },
      "message": "Print mempool size in KB when adding txn",
      "tree": {
        "sha": "d34bdd92b0f60688a50c4461fb6335189cb895dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d34bdd92b0f60688a50c4461fb6335189cb895dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6c7b362ab8915e2aac167fa519bd29836d482af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6c7b362ab8915e2aac167fa519bd29836d482af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6c7b362ab8915e2aac167fa519bd29836d482af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6c7b362ab8915e2aac167fa519bd29836d482af/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "241d6078ba26db4d3a36227d3275be2ee34625a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/241d6078ba26db4d3a36227d3275be2ee34625a6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/241d6078ba26db4d3a36227d3275be2ee34625a6"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f01bb8ec9e2f7e259c71624bcddc29111b2074b1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6c7b362ab8915e2aac167fa519bd29836d482af/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6c7b362ab8915e2aac167fa519bd29836d482af/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e6c7b362ab8915e2aac167fa519bd29836d482af",
        "patch": "@@ -4287,10 +4287,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             RelayTransaction(tx);\n             vWorkQueue.push_back(inv.hash);\n \n-            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u)\\n\",\n+            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u txn, %u kB)\\n\",\n                 pfrom->id,\n                 tx.GetHash().ToString(),\n-                mempool.size());\n+                mempool.size(), mempool.DynamicMemoryUsage() / 1000);\n \n             // Recursively process any orphan transactions that depended on this one\n             set<NodeId> setMisbehaving;"
      }
    ]
  },
  {
    "sha": "794a8cec5db84fde1cce82ada51740070ec188ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTRhOGNlYzVkYjg0ZmRlMWNjZTgyYWRhNTE3NDAwNzBlYzE4OGFj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-02T21:19:55Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T08:39:27Z"
      },
      "message": "Implement on-the-fly mempool size limitation.\n\nAfter each transaction which is added to mempool, we first call\nExpire() to remove old transactions, then throwing away the\nlowest-feerate transactions.\n\nAfter throwing away transactions by feerate, we set the minimum\nrelay fee to the maximum fee transaction-and-dependant-set we\nremoved, plus the default minimum relay fee.\n\nAfter the next block is received, the minimum relay fee is allowed\nto decrease exponentially. Its halflife defaults to 12 hours, but\nis decreased to 6 hours if the mempool is smaller than half its\nmaximum size, and 3 hours if the mempool is smaller than a quarter\nits maximum size.\n\nThe minimum -maxmempool size is 40*-limitdescendantsize, as it is\neasy for an attacker to play games with the cheapest\n-limitdescendantsize transactions. -maxmempool defaults to 300MB.\n\nThis disables high-priority transaction relay when the min relay\nfee adjustment is >0 (ie when the mempool is full). When the relay\nfee adjustment drops below the default minimum relay fee / 2 it is\nset to 0 (re-enabling priority-based free relay).",
      "tree": {
        "sha": "35b6750a3dc813c635fb304f9d7658b2695edb70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35b6750a3dc813c635fb304f9d7658b2695edb70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/794a8cec5db84fde1cce82ada51740070ec188ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/794a8cec5db84fde1cce82ada51740070ec188ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/794a8cec5db84fde1cce82ada51740070ec188ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/794a8cec5db84fde1cce82ada51740070ec188ac/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6c7b362ab8915e2aac167fa519bd29836d482af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6c7b362ab8915e2aac167fa519bd29836d482af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6c7b362ab8915e2aac167fa519bd29836d482af"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 106,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e3ad63a56e9d99f7cd23fbec2f45de9c8da7c53f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/794a8cec5db84fde1cce82ada51740070ec188ac/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/794a8cec5db84fde1cce82ada51740070ec188ac/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=794a8cec5db84fde1cce82ada51740070ec188ac",
        "patch": "@@ -320,6 +320,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-dbcache=<n>\", strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache));\n     strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\"));\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n+    strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n@@ -842,6 +843,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", true);\n \n+    // -mempoollimit limits\n+    int64_t nMempoolSizeLimit = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolDescendantSizeLimit = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+    if (nMempoolSizeLimit < 0 || nMempoolSizeLimit < nMempoolDescendantSizeLimit * 40)\n+        return InitError(strprintf(_(\"Error: -maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 25));\n+\n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n     nScriptCheckThreads = GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n     if (nScriptCheckThreads <= 0)"
      },
      {
        "sha": "c1df9998a9e73cd28453b0a73b9fa4d1aad801fc",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/794a8cec5db84fde1cce82ada51740070ec188ac/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/794a8cec5db84fde1cce82ada51740070ec188ac/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=794a8cec5db84fde1cce82ada51740070ec188ac",
        "patch": "@@ -885,8 +885,11 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CAmount mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n+        if (mempoolRejectFee > 0 && nFees < mempoolRejectFee) {\n+            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", false, strprintf(\"%d < %d\", nFees, mempoolRejectFee));\n+        } else if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+            // Require that free transactions have sufficient priority to be mined in the next block.\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient priority\");\n         }\n \n@@ -951,6 +954,15 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n+\n+        // trim mempool and check if tx was trimmed\n+        int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n+        if (expired != 0)\n+            LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n+\n+        pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+        if (!pool.exists(tx.GetHash()))\n+            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");\n     }\n \n     SyncWithWallets(tx, NULL);"
      },
      {
        "sha": "be0d2bf47d26c74fca8dc3783f921645069b8de6",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/794a8cec5db84fde1cce82ada51740070ec188ac/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/794a8cec5db84fde1cce82ada51740070ec188ac/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=794a8cec5db84fde1cce82ada51740070ec188ac",
        "patch": "@@ -51,6 +51,8 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n /** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;\n /** The maximum size of a blk?????.dat file (since 0.8) */"
      },
      {
        "sha": "7563c0788040152a07f4abfaee8e489b47b32f46",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/794a8cec5db84fde1cce82ada51740070ec188ac/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/794a8cec5db84fde1cce82ada51740070ec188ac/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=794a8cec5db84fde1cce82ada51740070ec188ac",
        "patch": "@@ -13,6 +13,7 @@\n #include \"streams.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n+#include \"utiltime.h\"\n #include \"version.h\"\n \n using namespace std;\n@@ -308,6 +309,8 @@ void CTxMemPoolEntry::UpdateState(int64_t modifySize, CAmount modifyFee, int64_t\n CTxMemPool::CTxMemPool(const CFeeRate& _minReasonableRelayFee) :\n     nTransactionsUpdated(0)\n {\n+    clear();\n+\n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n     // of transactions in the pool\n@@ -539,6 +542,8 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n     }\n     // After the txs in the new block have been removed from the mempool, update policy estimates\n     minerPolicyEstimator->processBlock(nBlockHeight, entries, fCurrentEstimate);\n+    lastRollingFeeUpdate = GetTime();\n+    blockSinceLastRollingFeeBump = true;\n }\n \n void CTxMemPool::clear()\n@@ -549,6 +554,9 @@ void CTxMemPool::clear()\n     mapNextTx.clear();\n     totalTxSize = 0;\n     cachedInnerUsage = 0;\n+    lastRollingFeeUpdate = GetTime();\n+    blockSinceLastRollingFeeBump = false;\n+    rollingMinimumFeeRate = 0;\n     ++nTransactionsUpdated;\n }\n \n@@ -854,3 +862,60 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+\n+        if (rollingMinimumFeeRate < minReasonableRelayFee.GetFeePerK() / 2)\n+            rollingMinimumFeeRate = 0;\n+    }\n+    return std::max(CFeeRate(rollingMinimumFeeRate), minReasonableRelayFee);\n+}\n+\n+void CTxMemPool::trackPackageRemoved(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+void CTxMemPool::TrimToSize(size_t sizelimit) {\n+    LOCK(cs);\n+\n+    unsigned nTxnRemoved = 0;\n+    CFeeRate maxFeeRateRemoved(0);\n+    while (DynamicMemoryUsage() > sizelimit) {\n+        indexed_transaction_set::nth_index<1>::type::iterator it = mapTx.get<1>().begin();\n+\n+        // We set the new mempool min fee to either the feerate of the removed set,\n+        // or the \"minimum reasonable fee rate\" (ie some value under which we consider\n+        // txn to have 0 fee). This way, if the mempool reaches its full size on free\n+        // txn, we will simply disable free txn until there is a block, and some time.\n+        CFeeRate removed(it->GetFeesWithDescendants(), it->GetSizeWithDescendants());\n+        removed += minReasonableRelayFee;\n+        trackPackageRemoved(removed);\n+        maxFeeRateRemoved = std::max(maxFeeRateRemoved, removed);\n+\n+        setEntries stage;\n+        CalculateDescendants(mapTx.project<0>(it), stage);\n+        RemoveStaged(stage);\n+        nTxnRemoved += stage.size();\n+    }\n+\n+    if (maxFeeRateRemoved > CFeeRate(0))\n+        LogPrint(\"mempool\", \"Removed %u txn, rolling minimum fee bumped to %s\\n\", nTxnRemoved, maxFeeRateRemoved.ToString());\n+}"
      },
      {
        "sha": "e8572e7bdad57aa639476c0eb10d2bae6ff6b47c",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/794a8cec5db84fde1cce82ada51740070ec188ac/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/794a8cec5db84fde1cce82ada51740070ec188ac/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=794a8cec5db84fde1cce82ada51740070ec188ac",
        "patch": "@@ -287,6 +287,13 @@ class CTxMemPool\n \n     CFeeRate minReasonableRelayFee;\n \n+    mutable int64_t lastRollingFeeUpdate;\n+    mutable bool blockSinceLastRollingFeeBump;\n+    mutable double rollingMinimumFeeRate; //! minimum fee to get into the pool, decreases exponentially\n+    static const int ROLLING_FEE_HALFLIFE = 60 * 60 * 12;\n+\n+    void trackPackageRemoved(const CFeeRate& rate);\n+\n public:\n     typedef boost::multi_index_container<\n         CTxMemPoolEntry,\n@@ -410,6 +417,17 @@ class CTxMemPool\n      */\n     bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents = true);\n \n+    /** The minimum fee to get into the mempool, which may itself not be enough\n+\t *  for larger-sized transactions.\n+\t *  The minReasonableRelayFee constructor arg is used to bound the time it\n+     *  takes the fee rate to go back down all the way to 0. When the feerate\n+     *  would otherwise be half of this, it is set to 0 instead.\n+\t */\n+    CFeeRate GetMinFee(size_t sizelimit) const;\n+\n+    /** Remove transactions from the mempool until its dynamic size is <= sizelimit. */\n+    void TrimToSize(size_t sizelimit);\n+\n     /** Expire all transaction (and their dependencies) in the mempool older than time. Return the number of removed transactions. */\n     int Expire(int64_t time);\n "
      }
    ]
  },
  {
    "sha": "d355cf4420043a866e418c97778d999cd1958f61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzU1Y2Y0NDIwMDQzYTg2NmU0MThjOTc3NzhkOTk5Y2QxOTU4ZjYx",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-02T21:20:38Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T08:39:38Z"
      },
      "message": "Only call TrimToSize once per reorg/blocks disconnect",
      "tree": {
        "sha": "ffd7f4048f86201a3737bb04a795d1c5c60970b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ffd7f4048f86201a3737bb04a795d1c5c60970b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d355cf4420043a866e418c97778d999cd1958f61",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d355cf4420043a866e418c97778d999cd1958f61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d355cf4420043a866e418c97778d999cd1958f61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d355cf4420043a866e418c97778d999cd1958f61/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "794a8cec5db84fde1cce82ada51740070ec188ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/794a8cec5db84fde1cce82ada51740070ec188ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/794a8cec5db84fde1cce82ada51740070ec188ac"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 22,
      "deletions": 13
    },
    "files": [
      {
        "sha": "f379ea46e27a2dc9f0bc74943b9b85a2a3286162",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 9,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d355cf4420043a866e418c97778d999cd1958f61/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d355cf4420043a866e418c97778d999cd1958f61/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d355cf4420043a866e418c97778d999cd1958f61",
        "patch": "@@ -776,7 +776,7 @@ static std::string FormatStateMessage(const CValidationState &state)\n }\n \n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fRejectAbsurdFee)\n+                        bool* pfMissingInputs, bool fOverrideMempoolLimit, bool fRejectAbsurdFee)\n {\n     AssertLockHeld(cs_main);\n     if (pfMissingInputs)\n@@ -956,13 +956,15 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n \n         // trim mempool and check if tx was trimmed\n-        int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n-        if (expired != 0)\n-            LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n+        if (!fOverrideMempoolLimit) {\n+            int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n+            if (expired != 0)\n+                LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n \n-        pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n-        if (!pool.exists(tx.GetHash()))\n-            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");\n+            pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+            if (!pool.exists(tx.GetHash()))\n+                return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");\n+        }\n     }\n \n     SyncWithWallets(tx, NULL);\n@@ -2029,7 +2031,7 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     }\n }\n \n-/** Disconnect chainActive's tip. */\n+/** Disconnect chainActive's tip. You want to manually re-limit mempool size after this */\n bool static DisconnectTip(CValidationState &state) {\n     CBlockIndex *pindexDelete = chainActive.Tip();\n     assert(pindexDelete);\n@@ -2056,7 +2058,7 @@ bool static DisconnectTip(CValidationState &state) {\n         // ignore validation errors in resurrected transactions\n         list<CTransaction> removed;\n         CValidationState stateDummy;\n-        if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL)) {\n+        if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL, true)) {\n             mempool.remove(tx, removed, true);\n         } else if (mempool.exists(tx.GetHash())) {\n             vHashUpdate.push_back(tx.GetHash());\n@@ -2229,9 +2231,11 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n     const CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n     // Disconnect active blocks which are no longer in the best chain.\n+    bool fBlocksDisconnected = false;\n     while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n         if (!DisconnectTip(state))\n             return false;\n+        fBlocksDisconnected = true;\n     }\n \n     // Build list of new blocks to connect.\n@@ -2277,6 +2281,9 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n     }\n     }\n \n+    if (fBlocksDisconnected)\n+        mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+\n     // Callbacks/notifications for a new best chain.\n     if (fInvalidFound)\n         CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n@@ -2363,6 +2370,8 @@ bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n         }\n     }\n \n+    mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+\n     // The resulting new best tip may not be in setBlockIndexCandidates anymore, so\n     // add it again.\n     BlockMap::iterator it = mapBlockIndex.begin();"
      },
      {
        "sha": "202d2c772ba896b3f9f71cba6d1e6121ddd53594",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d355cf4420043a866e418c97778d999cd1958f61/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d355cf4420043a866e418c97778d999cd1958f61/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=d355cf4420043a866e418c97778d999cd1958f61",
        "patch": "@@ -229,7 +229,7 @@ void PruneAndFlush();\n \n /** (try to) add transaction to memory pool **/\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fRejectAbsurdFee=false);\n+                        bool* pfMissingInputs, bool fOverrideMempoolLimit=false, bool fRejectAbsurdFee=false);\n \n \n struct CNodeStateStats {"
      },
      {
        "sha": "4b964735042dabbffcc4bcc266942a28b99b5833",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d355cf4420043a866e418c97778d999cd1958f61/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d355cf4420043a866e418c97778d999cd1958f61/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=d355cf4420043a866e418c97778d999cd1958f61",
        "patch": "@@ -809,7 +809,7 @@ UniValue sendrawtransaction(const UniValue& params, bool fHelp)\n         // push to local node and sync with wallets\n         CValidationState state;\n         bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, tx, false, &fMissingInputs, !fOverrideFees)) {\n+        if (!AcceptToMemoryPool(mempool, state, tx, false, &fMissingInputs, false, !fOverrideFees)) {\n             if (state.IsInvalid()) {\n                 throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason()));\n             } else {"
      },
      {
        "sha": "9b8e1c088b2d386986d23580d8efdaefaa40c0c9",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d355cf4420043a866e418c97778d999cd1958f61/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d355cf4420043a866e418c97778d999cd1958f61/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=d355cf4420043a866e418c97778d999cd1958f61",
        "patch": "@@ -23,7 +23,7 @@ ToMemPool(CMutableTransaction& tx)\n     LOCK(cs_main);\n \n     CValidationState state;\n-    return AcceptToMemoryPool(mempool, state, tx, false, NULL, false);\n+    return AcceptToMemoryPool(mempool, state, tx, false, NULL, true, false);\n }\n \n BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)"
      },
      {
        "sha": "3f2d5a05f698d7da7e8d70f61ec2f1cda71a449d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d355cf4420043a866e418c97778d999cd1958f61/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d355cf4420043a866e418c97778d999cd1958f61/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d355cf4420043a866e418c97778d999cd1958f61",
        "patch": "@@ -2863,6 +2863,6 @@ int CMerkleTx::GetBlocksToMaturity() const\n bool CMerkleTx::AcceptToMemoryPool(bool fLimitFree, bool fRejectAbsurdFee)\n {\n     CValidationState state;\n-    return ::AcceptToMemoryPool(mempool, state, *this, fLimitFree, NULL, fRejectAbsurdFee);\n+    return ::AcceptToMemoryPool(mempool, state, *this, fLimitFree, NULL, false, fRejectAbsurdFee);\n }\n "
      }
    ]
  },
  {
    "sha": "074cb155c2f01ba6ddc555c01943fc20c46c0b46",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzRjYjE1NWMyZjAxYmE2ZGRjNTU1YzAxOTQzZmMyMGM0NmMwYjQ2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T07:43:15Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T08:39:38Z"
      },
      "message": "Add reasonable test case for mempool trimming",
      "tree": {
        "sha": "46461c075f6e47dbb42f1e599b03026d872e2df4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46461c075f6e47dbb42f1e599b03026d872e2df4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/074cb155c2f01ba6ddc555c01943fc20c46c0b46",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/074cb155c2f01ba6ddc555c01943fc20c46c0b46",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/074cb155c2f01ba6ddc555c01943fc20c46c0b46",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/074cb155c2f01ba6ddc555c01943fc20c46c0b46/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d355cf4420043a866e418c97778d999cd1958f61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d355cf4420043a866e418c97778d999cd1958f61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d355cf4420043a866e418c97778d999cd1958f61"
      }
    ],
    "stats": {
      "total": 158,
      "additions": 157,
      "deletions": 1
    },
    "files": [
      {
        "sha": "dce278d99908039f892e7c1cc2c8abdde44ed04c",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 154,
        "deletions": 0,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/074cb155c2f01ba6ddc555c01943fc20c46c0b46/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/074cb155c2f01ba6ddc555c01943fc20c46c0b46/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=074cb155c2f01ba6ddc555c01943fc20c46c0b46",
        "patch": "@@ -281,4 +281,158 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     CheckSort(pool, snapshotOrder);\n }\n \n+BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n+{\n+    CTxMemPool pool(CFeeRate(1000));\n+\n+    CMutableTransaction tx1 = CMutableTransaction();\n+    tx1.vin.resize(1);\n+    tx1.vin[0].scriptSig = CScript() << OP_1;\n+    tx1.vout.resize(1);\n+    tx1.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+    tx1.vout[0].nValue = 10 * COIN;\n+    pool.addUnchecked(tx1.GetHash(), CTxMemPoolEntry(tx1, 10000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx1)));\n+\n+    CMutableTransaction tx2 = CMutableTransaction();\n+    tx2.vin.resize(1);\n+    tx2.vin[0].scriptSig = CScript() << OP_2;\n+    tx2.vout.resize(1);\n+    tx2.vout[0].scriptPubKey = CScript() << OP_2 << OP_EQUAL;\n+    tx2.vout[0].nValue = 10 * COIN;\n+    pool.addUnchecked(tx2.GetHash(), CTxMemPoolEntry(tx2, 5000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx2)));\n+\n+    pool.TrimToSize(pool.DynamicMemoryUsage()); // should do nothing\n+    BOOST_CHECK(pool.exists(tx1.GetHash()));\n+    BOOST_CHECK(pool.exists(tx2.GetHash()));\n+\n+    pool.TrimToSize(pool.DynamicMemoryUsage() * 3 / 4); // should remove the lower-feerate transaction\n+    BOOST_CHECK(pool.exists(tx1.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx2.GetHash()));\n+\n+    pool.addUnchecked(tx2.GetHash(), CTxMemPoolEntry(tx2, 5000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx2)));\n+    CMutableTransaction tx3 = CMutableTransaction();\n+    tx3.vin.resize(1);\n+    tx3.vin[0].prevout = COutPoint(tx2.GetHash(), 0);\n+    tx3.vin[0].scriptSig = CScript() << OP_2;\n+    tx3.vout.resize(1);\n+    tx3.vout[0].scriptPubKey = CScript() << OP_3 << OP_EQUAL;\n+    tx3.vout[0].nValue = 10 * COIN;\n+    pool.addUnchecked(tx3.GetHash(), CTxMemPoolEntry(tx3, 20000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx3)));\n+\n+    pool.TrimToSize(pool.DynamicMemoryUsage() * 3 / 4); // tx3 should pay for tx2 (CPFP)\n+    BOOST_CHECK(!pool.exists(tx1.GetHash()));\n+    BOOST_CHECK(pool.exists(tx2.GetHash()));\n+    BOOST_CHECK(pool.exists(tx3.GetHash()));\n+\n+    pool.TrimToSize(::GetSerializeSize(CTransaction(tx1), SER_NETWORK, PROTOCOL_VERSION)); // mempool is limited to tx1's size in memory usage, so nothing fits\n+    BOOST_CHECK(!pool.exists(tx1.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx2.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx3.GetHash()));\n+\n+    CFeeRate maxFeeRateRemoved(25000, ::GetSerializeSize(CTransaction(tx3), SER_NETWORK, PROTOCOL_VERSION) + ::GetSerializeSize(CTransaction(tx2), SER_NETWORK, PROTOCOL_VERSION));\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), maxFeeRateRemoved.GetFeePerK() + 1000);\n+\n+    CMutableTransaction tx4 = CMutableTransaction();\n+    tx4.vin.resize(2);\n+    tx4.vin[0].prevout.SetNull();\n+    tx4.vin[0].scriptSig = CScript() << OP_4;\n+    tx4.vin[1].prevout.SetNull();\n+    tx4.vin[1].scriptSig = CScript() << OP_4;\n+    tx4.vout.resize(2);\n+    tx4.vout[0].scriptPubKey = CScript() << OP_4 << OP_EQUAL;\n+    tx4.vout[0].nValue = 10 * COIN;\n+    tx4.vout[1].scriptPubKey = CScript() << OP_4 << OP_EQUAL;\n+    tx4.vout[1].nValue = 10 * COIN;\n+\n+    CMutableTransaction tx5 = CMutableTransaction();\n+    tx5.vin.resize(2);\n+    tx5.vin[0].prevout = COutPoint(tx4.GetHash(), 0);\n+    tx5.vin[0].scriptSig = CScript() << OP_4;\n+    tx5.vin[1].prevout.SetNull();\n+    tx5.vin[1].scriptSig = CScript() << OP_5;\n+    tx5.vout.resize(2);\n+    tx5.vout[0].scriptPubKey = CScript() << OP_5 << OP_EQUAL;\n+    tx5.vout[0].nValue = 10 * COIN;\n+    tx5.vout[1].scriptPubKey = CScript() << OP_5 << OP_EQUAL;\n+    tx5.vout[1].nValue = 10 * COIN;\n+\n+    CMutableTransaction tx6 = CMutableTransaction();\n+    tx6.vin.resize(2);\n+    tx6.vin[0].prevout = COutPoint(tx4.GetHash(), 1);\n+    tx6.vin[0].scriptSig = CScript() << OP_4;\n+    tx6.vin[1].prevout.SetNull();\n+    tx6.vin[1].scriptSig = CScript() << OP_6;\n+    tx6.vout.resize(2);\n+    tx6.vout[0].scriptPubKey = CScript() << OP_6 << OP_EQUAL;\n+    tx6.vout[0].nValue = 10 * COIN;\n+    tx6.vout[1].scriptPubKey = CScript() << OP_6 << OP_EQUAL;\n+    tx6.vout[1].nValue = 10 * COIN;\n+\n+    CMutableTransaction tx7 = CMutableTransaction();\n+    tx7.vin.resize(2);\n+    tx7.vin[0].prevout = COutPoint(tx5.GetHash(), 0);\n+    tx7.vin[0].scriptSig = CScript() << OP_5;\n+    tx7.vin[1].prevout = COutPoint(tx6.GetHash(), 0);\n+    tx7.vin[1].scriptSig = CScript() << OP_6;\n+    tx7.vout.resize(2);\n+    tx7.vout[0].scriptPubKey = CScript() << OP_7 << OP_EQUAL;\n+    tx7.vout[0].nValue = 10 * COIN;\n+    tx7.vout[0].scriptPubKey = CScript() << OP_7 << OP_EQUAL;\n+    tx7.vout[0].nValue = 10 * COIN;\n+\n+    pool.addUnchecked(tx4.GetHash(), CTxMemPoolEntry(tx4, 7000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx4)));\n+    pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 1000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx5)));\n+    pool.addUnchecked(tx6.GetHash(), CTxMemPoolEntry(tx6, 1100LL, 0, 10.0, 1, pool.HasNoInputsOf(tx6)));\n+    pool.addUnchecked(tx7.GetHash(), CTxMemPoolEntry(tx7, 9000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx7)));\n+\n+    // we only require this remove, at max, 2 txn, because its not clear what we're really optimizing for aside from that\n+    pool.TrimToSize(pool.DynamicMemoryUsage() - 1);\n+    BOOST_CHECK(pool.exists(tx4.GetHash()));\n+    BOOST_CHECK(pool.exists(tx6.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx7.GetHash()));\n+\n+    if (!pool.exists(tx5.GetHash()))\n+        pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 1000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx5)));\n+    pool.addUnchecked(tx7.GetHash(), CTxMemPoolEntry(tx7, 9000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx7)));\n+\n+    pool.TrimToSize(pool.DynamicMemoryUsage() / 2); // should maximize mempool size by only removing 5/7\n+    BOOST_CHECK(pool.exists(tx4.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx5.GetHash()));\n+    BOOST_CHECK(pool.exists(tx6.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx7.GetHash()));\n+\n+    pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 1000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx5)));\n+    pool.addUnchecked(tx7.GetHash(), CTxMemPoolEntry(tx7, 9000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx7)));\n+\n+    std::vector<CTransaction> vtx;\n+    std::list<CTransaction> conflicts;\n+    SetMockTime(42);\n+    SetMockTime(42 + CTxMemPool::ROLLING_FEE_HALFLIFE);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), maxFeeRateRemoved.GetFeePerK() + 1000);\n+    // ... we should keep the same min fee until we get a block\n+    pool.removeForBlock(vtx, 1, conflicts);\n+    SetMockTime(42 + 2*CTxMemPool::ROLLING_FEE_HALFLIFE);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), (maxFeeRateRemoved.GetFeePerK() + 1000)/2);\n+    // ... then feerate should drop 1/2 each halflife\n+\n+    SetMockTime(42 + 2*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(pool.DynamicMemoryUsage() * 5 / 2).GetFeePerK(), (maxFeeRateRemoved.GetFeePerK() + 1000)/4);\n+    // ... with a 1/2 halflife when mempool is < 1/2 its target size\n+\n+    SetMockTime(42 + 2*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(pool.DynamicMemoryUsage() * 9 / 2).GetFeePerK(), (maxFeeRateRemoved.GetFeePerK() + 1000)/8);\n+    // ... with a 1/4 halflife when mempool is < 1/4 its target size\n+\n+    SetMockTime(42 + 7*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 1000);\n+    // ... but feerate should never drop below 1000\n+\n+    SetMockTime(42 + 8*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    pool.GetMinFee(1);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 0);\n+    // ... unless it has gone all the way to 0 (after getting past 1000/2)\n+\n+    SetMockTime(0);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "319b972c3a00f0b8c263a4ce4f6bc9abb0bdfef3",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/074cb155c2f01ba6ddc555c01943fc20c46c0b46/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/074cb155c2f01ba6ddc555c01943fc20c46c0b46/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=074cb155c2f01ba6ddc555c01943fc20c46c0b46",
        "patch": "@@ -290,11 +290,13 @@ class CTxMemPool\n     mutable int64_t lastRollingFeeUpdate;\n     mutable bool blockSinceLastRollingFeeBump;\n     mutable double rollingMinimumFeeRate; //! minimum fee to get into the pool, decreases exponentially\n-    static const int ROLLING_FEE_HALFLIFE = 60 * 60 * 12;\n \n     void trackPackageRemoved(const CFeeRate& rate);\n \n public:\n+\n+    static const int ROLLING_FEE_HALFLIFE = 60 * 60 * 12; // public only for testing\n+\n     typedef boost::multi_index_container<\n         CTxMemPoolEntry,\n         boost::multi_index::indexed_by<"
      }
    ]
  },
  {
    "sha": "9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTkzNjQwYmU2YzQ5ZmExNTA1YmE1YzVkZjhjODkyMTBkYTVhNmU0",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T08:06:59Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-13T08:39:38Z"
      },
      "message": "Drop minRelayTxFee to 1000\n\nThere is no exact science to setting this parameter, but 5000\n(just over 1 US cent at the time of writing) is higher than the\ncost to relay a transaction around the network (the new benchmark\ndue to mempool limiting).",
      "tree": {
        "sha": "e6864d5d559b5dc298fb227c97dcc2ebef807ada",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6864d5d559b5dc298fb227c97dcc2ebef807ada"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e93640be6c49fa1505ba5c5df8c89210da5a6e4/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "074cb155c2f01ba6ddc555c01943fc20c46c0b46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/074cb155c2f01ba6ddc555c01943fc20c46c0b46",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/074cb155c2f01ba6ddc555c01943fc20c46c0b46"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "31b3c2114351a8f4e1744fabacdafcc074f12875",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e93640be6c49fa1505ba5c5df8c89210da5a6e4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e93640be6c49fa1505ba5c5df8c89210da5a6e4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
        "patch": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(5000);\n+CFeeRate minRelayTxFee = CFeeRate(1000);\n \n CTxMemPool mempool(::minRelayTxFee);\n "
      }
    ]
  },
  {
    "sha": "97bee37d4c35c3ee53b54b04f5e665250773b20c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2JlZTM3ZDRjMzVjM2VlNTNiNTRiMDRmNWU2NjUyNTA3NzNiMjBj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T08:48:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T08:54:31Z"
      },
      "message": "Merge pull request #6788\n\n3b1279f build: match upstream build change (Cory Fields)\n313e7f5 Squashed 'src/univalue/' changes from 87d9045..5839ac3 (MarcoFalke)",
      "tree": {
        "sha": "c18a133b0f83dc6c7e2b49741b82ef91fd774fae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c18a133b0f83dc6c7e2b49741b82ef91fd774fae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97bee37d4c35c3ee53b54b04f5e665250773b20c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWHMbHAAoJEHSBCwEjRsmmiUoH/RdNBdLZRGkHcn+Fn6hN87pN\nJyTMjYZxHdFLtmI+8KOyyFgDwUKSO/0a6Drc63Mt062HJwkpPJ6L19SryZYocTEC\nHd2mP9BkgEEpdqYK8nQlmu5XxriAPttHM2934fHuMGrNKE9g3whAufDfHbd7lhmM\ndVb+yjY3IgUmLpNAs+Pzs4yyV7JKXc3zWK++iiVaLOd94aI+ZnCuLvCxpkSOJ1ms\nYiQhg/v5axeHF4pJzbRV4O7WbO3PG875mF3ul7aaj3BPKjBXugA8b6vdmoNQcya9\ntmr2FphebSf0aqkIcyJMCYtOpPDrn/D/rPcmycVP70yW8MSQ1F24aLIYyA0Q8dQ=\n=B2/c\n-----END PGP SIGNATURE-----",
        "payload": "tree c18a133b0f83dc6c7e2b49741b82ef91fd774fae\nparent cd57f344a591edb1c8b35736b2734b39eb202dc3\nparent 3b1279fdb269727f4fd964df0c238401467930ea\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444726086 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444726471 +0200\n\nMerge pull request #6788\n\n3b1279f build: match upstream build change (Cory Fields)\n313e7f5 Squashed 'src/univalue/' changes from 87d9045..5839ac3 (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97bee37d4c35c3ee53b54b04f5e665250773b20c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97bee37d4c35c3ee53b54b04f5e665250773b20c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97bee37d4c35c3ee53b54b04f5e665250773b20c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd57f344a591edb1c8b35736b2734b39eb202dc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd57f344a591edb1c8b35736b2734b39eb202dc3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd57f344a591edb1c8b35736b2734b39eb202dc3"
      },
      {
        "sha": "3b1279fdb269727f4fd964df0c238401467930ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b1279fdb269727f4fd964df0c238401467930ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b1279fdb269727f4fd964df0c238401467930ea"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 16,
      "deletions": 20
    },
    "files": [
      {
        "sha": "605031eb43fc8cfada3f7a31d53d174d04c87d62",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=97bee37d4c35c3ee53b54b04f5e665250773b20c",
        "patch": "@@ -31,7 +31,7 @@ LIBBITCOIN_UTIL=libbitcoin_util.a\n LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n LIBBITCOINQT=qt/libbitcoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n-LIBUNIVALUE=univalue/lib/libunivalue.la\n+LIBUNIVALUE=univalue/libunivalue.la\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)"
      },
      {
        "sha": "a7a2ca91975b11155b9877c745b06aa759197fbe",
        "filename": "src/univalue/.gitignore",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.gitignore?ref=97bee37d4c35c3ee53b54b04f5e665250773b20c",
        "patch": "@@ -19,4 +19,13 @@ test-driver\n libtool\n ltmain.sh\n \n+*.a\n+*.la\n+*.lo\n+*.logs\n *.o\n+*.pc\n+*.trs\n+\n+.dirstamp\n+.libs"
      },
      {
        "sha": "df9e66229c4069c164cc47642a1752b31f16ed7b",
        "filename": "src/univalue/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/Makefile.am?ref=97bee37d4c35c3ee53b54b04f5e665250773b20c",
        "patch": "@@ -5,20 +5,20 @@ ACLOCAL_AMFLAGS = -I build-aux/m4\n include_HEADERS = include/univalue.h\n noinst_HEADERS = lib/univalue_escapes.h\n \n-lib_LTLIBRARIES = lib/libunivalue.la\n+lib_LTLIBRARIES = libunivalue.la\n \n pkgconfigdir = $(libdir)/pkgconfig\n pkgconfig_DATA = pc/libunivalue.pc\n \n-lib_libunivalue_la_SOURCES = \\\n+libunivalue_la_SOURCES = \\\n \tlib/univalue.cpp \\\n \tlib/univalue_read.cpp \\\n \tlib/univalue_write.cpp\n \n-lib_libunivalue_la_LDFLAGS = \\\n+libunivalue_la_LDFLAGS = \\\n \t-version-info $(LIBUNIVALUE_CURRENT):$(LIBUNIVALUE_REVISION):$(LIBUNIVALUE_AGE) \\\n \t-no-undefined\n-lib_libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n+libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n \n TESTS = test/unitester\n \n@@ -38,7 +38,7 @@ noinst_PROGRAMS = $(TESTS)\n TEST_DATA_DIR=test\n \n test_unitester_SOURCES = test/unitester.cpp\n-test_unitester_LDADD = lib/libunivalue.la\n+test_unitester_LDADD = libunivalue.la\n test_unitester_CXXFLAGS = -I$(top_srcdir)/include -DJSON_TEST_SRC=\\\"$(srcdir)/$(TEST_DATA_DIR)\\\"\n test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)\n "
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "src/univalue/build-aux/m4/.empty",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd57f344a591edb1c8b35736b2734b39eb202dc3/src/univalue/build-aux/m4/.empty",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd57f344a591edb1c8b35736b2734b39eb202dc3/src/univalue/build-aux/m4/.empty",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.empty?ref=cd57f344a591edb1c8b35736b2734b39eb202dc3"
      },
      {
        "sha": "f063686524ea4b501f819e52865dff64f3ec5324",
        "filename": "src/univalue/build-aux/m4/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/build-aux/m4/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/build-aux/m4/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.gitignore?ref=97bee37d4c35c3ee53b54b04f5e665250773b20c",
        "patch": "@@ -0,0 +1 @@\n+/*.m4"
      },
      {
        "sha": "ee7fc2851cd511579ee60c7a9fa916f3897c11e2",
        "filename": "src/univalue/lib/.gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/lib/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/lib/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/.gitignore?ref=97bee37d4c35c3ee53b54b04f5e665250773b20c",
        "patch": "@@ -1,10 +1,2 @@\n-\n-libunivalue-uninstalled.pc\n-libunivalue.pc\n-libunivalue.a\n gen\n-\n .libs\n-*.lo\n-*.la\n-"
      },
      {
        "sha": "4afa094b106d601c690c13d1f88f03a96921fbfd",
        "filename": "src/univalue/test/.gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/test/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97bee37d4c35c3ee53b54b04f5e665250773b20c/src/univalue/test/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/.gitignore?ref=97bee37d4c35c3ee53b54b04f5e665250773b20c",
        "patch": "@@ -1,7 +1 @@\n-\n unitester\n-\n-*.log\n-*.trs\n-\n-.libs"
      }
    ]
  },
  {
    "sha": "feea3057df472ad924a0bedff5bbf5af9f5f57bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWVhMzA1N2RmNDcyYWQ5MjRhMGJlZGZmNWJiZjVhZjlmNWY1N2Jm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T08:56:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T08:57:03Z"
      },
      "message": "Merge pull request #6812\n\n3a4a458 Update bluematt-key, the old one is long-since revoked (Matt Corallo)",
      "tree": {
        "sha": "476cb2fd8625993f7e7bf7c6311a2e286300ec00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/476cb2fd8625993f7e7bf7c6311a2e286300ec00"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/feea3057df472ad924a0bedff5bbf5af9f5f57bf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWHMdfAAoJEHSBCwEjRsmmEmYIAMaYo51rt+5YsdGbh8tSOfin\nukUpQ4zjRnnLb8BsyrRRkaafAcWpyu760hzrDcsEVSDUkiY+VeC6uV0Of59WCamh\n+U+aS5Cq317TOqwIWoohqQCcXZebatSNYqsjaXLuP/TEB2MsUoxp+6DuH+3tU9/g\nmV6nQqGOn+25L1h5ZJd+SswrEYH9NFsV0AaLO90x0Ka1c1C8+I+NrEaacYk5PHDA\n7rk9SgFG5d6EIMCI14GkrU/xvVIqDDHAzSPT+Ybb3uC4gZbOQmSqoF77xrusvxBK\nSGu3Jt2LFgcB3FkMNtkT+LR/X3HtLQR9xvoOtYiCAxqoPLt8OWY6G0r9erYq/OU=\n=LS+t\n-----END PGP SIGNATURE-----",
        "payload": "tree 476cb2fd8625993f7e7bf7c6311a2e286300ec00\nparent 97bee37d4c35c3ee53b54b04f5e665250773b20c\nparent 3a4a458fe59b36ed697ca8a0a304ba68941a4373\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444726616 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444726623 +0200\n\nMerge pull request #6812\n\n3a4a458 Update bluematt-key, the old one is long-since revoked (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/feea3057df472ad924a0bedff5bbf5af9f5f57bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/feea3057df472ad924a0bedff5bbf5af9f5f57bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/feea3057df472ad924a0bedff5bbf5af9f5f57bf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97bee37d4c35c3ee53b54b04f5e665250773b20c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97bee37d4c35c3ee53b54b04f5e665250773b20c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97bee37d4c35c3ee53b54b04f5e665250773b20c"
      },
      {
        "sha": "3a4a458fe59b36ed697ca8a0a304ba68941a4373",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a4a458fe59b36ed697ca8a0a304ba68941a4373",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a4a458fe59b36ed697ca8a0a304ba68941a4373"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-downloader/bluematt-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/feea3057df472ad924a0bedff5bbf5af9f5f57bf/contrib/gitian-downloader/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/feea3057df472ad924a0bedff5bbf5af9f5f57bf/contrib/gitian-downloader/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/bluematt-key.pgp?ref=feea3057df472ad924a0bedff5bbf5af9f5f57bf"
      }
    ]
  },
  {
    "sha": "01f74999e3dff1b0c76c334ce3935e3680d2927d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWY3NDk5OWUzZGZmMWIwYzc2YzMzNGNlMzkzNWUzNjgwZDI5Mjdk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T09:35:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T09:35:24Z"
      },
      "message": "Merge pull request #6798\n\n700f52e Clarification of unit test build instructions. (Eric Lombrozo)",
      "tree": {
        "sha": "e399975434ae0b566fd57e34ce1c4596b19a21ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e399975434ae0b566fd57e34ce1c4596b19a21ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01f74999e3dff1b0c76c334ce3935e3680d2927d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWHNBcAAoJEHSBCwEjRsmmwXoH/0HE76hap0+s5IxnptfCvOCo\nDjoFThR+mgnvzAt8jeJDlpjO1Jvp0F+etPHLMx0pRf9OGmwXjhow0UYt+FdIvktA\n8yMKg0S4+XWAUJdJSaZgNW/ciPRWY75d6yL12MDLClDh322Uhc8jDQVYDFOrFkMB\nBSvEzaoiyCDky65IGTeckiD5SVnuSL5iJtiMhw6B+ICFnbt2OPUL1Xx9y4IAEZpU\n1HiElMYyYtKUmhgk2h1pwXk2OqFhqeBQVejUX1qpmpgFWzX/RZdDpmOrfCSPLxhE\nFrKQj1QfvV7+pJaK4yJgoQzaMBIXsqyJ8dZGq7kNnfy9Oz2nNqq9q5kpUa0Gb4M=\n=wCZY\n-----END PGP SIGNATURE-----",
        "payload": "tree e399975434ae0b566fd57e34ce1c4596b19a21ca\nparent feea3057df472ad924a0bedff5bbf5af9f5f57bf\nparent 700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444728911 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444728924 +0200\n\nMerge pull request #6798\n\n700f52e Clarification of unit test build instructions. (Eric Lombrozo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01f74999e3dff1b0c76c334ce3935e3680d2927d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01f74999e3dff1b0c76c334ce3935e3680d2927d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01f74999e3dff1b0c76c334ce3935e3680d2927d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "feea3057df472ad924a0bedff5bbf5af9f5f57bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/feea3057df472ad924a0bedff5bbf5af9f5f57bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/feea3057df472ad924a0bedff5bbf5af9f5f57bf"
      },
      {
        "sha": "700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/700f52e0f6bc4eb5d065dc8f1e44ffcbd5dab0e0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b2d6be14f14fd019309beeb40deb1adfd80aa80c",
        "filename": "src/test/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01f74999e3dff1b0c76c334ce3935e3680d2927d/src/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01f74999e3dff1b0c76c334ce3935e3680d2927d/src/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/README.md?ref=01f74999e3dff1b0c76c334ce3935e3680d2927d",
        "patch": "@@ -16,6 +16,8 @@ their tests in a test suite called \"<source_filename>_tests\".  For an\n examples of this pattern, examine uint160_tests.cpp and\n uint256_tests.cpp.\n \n+Add the source files to /src/Makefile.test.include to add them to the build.\n+\n For further reading, I found the following website to be helpful in\n explaining how the boost unit test framework works:\n [http://www.alittlemadness.com/2009/03/31/c-unit-testing-with-boosttest/](http://www.alittlemadness.com/2009/03/31/c-unit-testing-with-boosttest/)."
      }
    ]
  },
  {
    "sha": "16faccb736ab23aec0a325133b4e0caf91dd8d52",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmZhY2NiNzM2YWIyM2FlYzBhMzI1MTMzYjRlMGNhZjkxZGQ4ZDUy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T09:50:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T09:50:26Z"
      },
      "message": "Merge pull request #6791\n\nd0321a4 [doc] trivial: fix markdown syntax in qa/rpc-tests/README.md (MarcoFalke)\n60a8b70 [doc] trivial: developer-notes.md covers more than just coding standards (MarcoFalke)\n3507992 [trivial] Make optimize-pngs.py also cover share/pixmaps (MarcoFalke)\n8a320c7 [trivial] Remove obsolete share/qt/make_windows_icon.sh (MarcoFalke)",
      "tree": {
        "sha": "c5de0f087cf918e3dc69c74d196bf6d6af132190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5de0f087cf918e3dc69c74d196bf6d6af132190"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16faccb736ab23aec0a325133b4e0caf91dd8d52",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWHNPjAAoJEHSBCwEjRsmmuCAH/jlgzMUYkXV7ZDBCUKygvGnK\nlXf9zkApPIX0lWP1w5NQx406IfEN3x71M2sR+e6zHpDeyx4r4+ZPwndshhBZ4Ubg\nKBpQZ7IWYqQVGmTUKIca/8AHeleyI4HAfR3B8itnkHxCRZcc2wbOArqLTeBnTO2N\nxyiiePp4vexkUvi1LxYfa+i3NUTszRlOjdCYbcrsMdjsAdyNoB9b/mlk9SHStyH1\nryyG8ehrxRESZsEATM8tLTFX6KyJSpn/4PW8GKItKZIL0qv7I7zpbPGv6lf7EPCK\n+ksx9ZVpvLtjlx7v+W9exeIqpd9EF+4DSMIewIuQQXiJjSEneaHVK5MrqWLnv5A=\n=ZrFR\n-----END PGP SIGNATURE-----",
        "payload": "tree c5de0f087cf918e3dc69c74d196bf6d6af132190\nparent 01f74999e3dff1b0c76c334ce3935e3680d2927d\nparent d0321a4cfdd660b8335b5d7f14556fb2ec60af22\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444729825 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444729826 +0200\n\nMerge pull request #6791\n\nd0321a4 [doc] trivial: fix markdown syntax in qa/rpc-tests/README.md (MarcoFalke)\n60a8b70 [doc] trivial: developer-notes.md covers more than just coding standards (MarcoFalke)\n3507992 [trivial] Make optimize-pngs.py also cover share/pixmaps (MarcoFalke)\n8a320c7 [trivial] Remove obsolete share/qt/make_windows_icon.sh (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16faccb736ab23aec0a325133b4e0caf91dd8d52",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16faccb736ab23aec0a325133b4e0caf91dd8d52",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16faccb736ab23aec0a325133b4e0caf91dd8d52/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "01f74999e3dff1b0c76c334ce3935e3680d2927d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01f74999e3dff1b0c76c334ce3935e3680d2927d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01f74999e3dff1b0c76c334ce3935e3680d2927d"
      },
      {
        "sha": "d0321a4cfdd660b8335b5d7f14556fb2ec60af22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0321a4cfdd660b8335b5d7f14556fb2ec60af22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d0321a4cfdd660b8335b5d7f14556fb2ec60af22"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 7,
      "deletions": 16
    },
    "files": [
      {
        "sha": "799e0cc7d0fb15b6e9338c711d5ca4d813a06a32",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16faccb736ab23aec0a325133b4e0caf91dd8d52/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16faccb736ab23aec0a325133b4e0caf91dd8d52/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=16faccb736ab23aec0a325133b4e0caf91dd8d52",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python\n '''\n-Run this scrip every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n+Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n #pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n '''\n import os\n@@ -18,12 +18,12 @@ def content_hash(filename):\n     '''Return hash of RGBA contents of image'''\n     i = Image.open(filename)\n     i = i.convert('RGBA')\n-    data = i.tostring()\n+    data = i.tobytes()\n     return hashlib.sha256(data).hexdigest()\n \n pngcrush = 'pngcrush'\n git = 'git'\n-folders = [\"src/qt/res/movies\", \"src/qt/res/icons\"]\n+folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n totalSaveBytes = 0\n noHashChange = True"
      },
      {
        "sha": "a649b3af4d37b5de82c9be6cf85e5e89eac28cd8",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16faccb736ab23aec0a325133b4e0caf91dd8d52/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16faccb736ab23aec0a325133b4e0caf91dd8d52/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=16faccb736ab23aec0a325133b4e0caf91dd8d52",
        "patch": "@@ -1,5 +1,5 @@\n-Coding Standards\n-================\n+Developer Notes\n+===============\n \n Various coding styles have been used during the history of the codebase,\n and the result is not very consistent. However, we're now trying to converge to"
      },
      {
        "sha": "d2db00362fa189032d5a8da2c0d9ced5a53148a9",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16faccb736ab23aec0a325133b4e0caf91dd8d52/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16faccb736ab23aec0a325133b4e0caf91dd8d52/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=16faccb736ab23aec0a325133b4e0caf91dd8d52",
        "patch": "@@ -37,11 +37,11 @@ Helper functions for creating blocks and transactions.\n Notes\n =====\n \n-You can run any single test by calling qa/pull-tester/rpc-tests.py <testname>\n+You can run any single test by calling `qa/pull-tester/rpc-tests.py <testname>`.\n \n Or you can run any combination of tests by calling `qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...`\n \n-Run the regression test suite with `qa/pull-tester/rpc-tests.py'\n+Run the regression test suite with `qa/pull-tester/rpc-tests.py`\n \n Run all possible tests with `qa/pull-tester/rpc-tests.py -extended`\n "
      },
      {
        "sha": "bf607b1c62384eba8ddbe4acf9f930d1b0f03ae3",
        "filename": "share/qt/make_windows_icon.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01f74999e3dff1b0c76c334ce3935e3680d2927d/share/qt/make_windows_icon.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01f74999e3dff1b0c76c334ce3935e3680d2927d/share/qt/make_windows_icon.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/make_windows_icon.sh?ref=01f74999e3dff1b0c76c334ce3935e3680d2927d",
        "patch": "@@ -1,9 +0,0 @@\n-#!/bin/bash\n-# create multiresolution windows icon\n-ICON_SRC=../../src/qt/res/icons/bitcoin.png\n-ICON_DST=../../src/qt/res/icons/bitcoin.ico\n-convert ${ICON_SRC} -resize 16x16 bitcoin-16.png\n-convert ${ICON_SRC} -resize 32x32 bitcoin-32.png\n-convert ${ICON_SRC} -resize 48x48 bitcoin-48.png\n-convert bitcoin-16.png bitcoin-32.png bitcoin-48.png ${ICON_DST}\n-"
      }
    ]
  },
  {
    "sha": "9caaf6ed22d052bae2b9552a7d2df529166664e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2FhZjZlZDIyZDA1MmJhZTJiOTU1MmE3ZDJkZjUyOTE2NjY2NGU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T10:22:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T10:23:45Z"
      },
      "message": "Merge pull request #6777\n\ndcd8e27 Refer to obfuscate_key via pointer in peripheral CLevelDB classes (James O'Beirne)\n1488506 Add tests for gettxoutsetinfo, CLevelDBBatch, CLevelDBIterator (James O'Beirne)\n0fdf8c8 Handle obfuscation in CLevelDBIterator (James O'Beirne)\n3499ce1 Encapsulate CLevelDB iterators cleanly (Pieter Wuille)",
      "tree": {
        "sha": "1bdc5d1979cc745f573ef4e6ad375ee7bd8473ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bdc5d1979cc745f573ef4e6ad375ee7bd8473ac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9caaf6ed22d052bae2b9552a7d2df529166664e8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWHNuxAAoJEHSBCwEjRsmmiZcH/RK+Y0m5u9aA/3H8vpZTDexz\nqgFXiTKm2k/7gbi38cLT/Fun+2rjgOJ/xMvPVTJbQhPtx5jJBbYLf+k1kpzCmHJw\neXq/cSZlyKREcd5y5i8fwvAVoNHBPT/wHSi9QcrHTP69BB517x00AsTaOiX+0kPd\nQ/RflTGbTmo+Ley4RBvQEEIrXXXEVVkzOERhEuUM3pVLyw9BFRCWnS2PsVE+Rw2Y\n1A86Um5LCYR4zsJTv0W/cBBHYG9gTa8RqP4dm+yBQKxvu7kjCPwD9ETZnDv9+Tdx\nI8SDTCBzwrPS9ekSVVA2U/WEEViuPuEIQa76Qy2oWAT3UFbuWiWfzGxGlY63qQ0=\n=Jztm\n-----END PGP SIGNATURE-----",
        "payload": "tree 1bdc5d1979cc745f573ef4e6ad375ee7bd8473ac\nparent 16faccb736ab23aec0a325133b4e0caf91dd8d52\nparent dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444731760 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444731825 +0200\n\nMerge pull request #6777\n\ndcd8e27 Refer to obfuscate_key via pointer in peripheral CLevelDB classes (James O'Beirne)\n1488506 Add tests for gettxoutsetinfo, CLevelDBBatch, CLevelDBIterator (James O'Beirne)\n0fdf8c8 Handle obfuscation in CLevelDBIterator (James O'Beirne)\n3499ce1 Encapsulate CLevelDB iterators cleanly (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9caaf6ed22d052bae2b9552a7d2df529166664e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9caaf6ed22d052bae2b9552a7d2df529166664e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9caaf6ed22d052bae2b9552a7d2df529166664e8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16faccb736ab23aec0a325133b4e0caf91dd8d52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16faccb736ab23aec0a325133b4e0caf91dd8d52",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16faccb736ab23aec0a325133b4e0caf91dd8d52"
      },
      {
        "sha": "dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dcd8e27c65de0d2cb972588a6e811ca7ccd1b3bd"
      }
    ],
    "stats": {
      "total": 306,
      "additions": 245,
      "deletions": 61
    },
    "files": [
      {
        "sha": "db97767272b406374792299467f5136c3edf0e4a",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9caaf6ed22d052bae2b9552a7d2df529166664e8/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9caaf6ed22d052bae2b9552a7d2df529166664e8/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=9caaf6ed22d052bae2b9552a7d2df529166664e8",
        "patch": "@@ -38,7 +38,7 @@\n buildDir = BUILDDIR\n os.environ[\"BITCOIND\"] = buildDir + '/src/bitcoind' + EXEEXT\n os.environ[\"BITCOINCLI\"] = buildDir + '/src/bitcoin-cli' + EXEEXT\n- \n+\n #Disable Windows tests by default\n if EXEEXT == \".exe\" and \"-win\" not in opts:\n     print \"Win tests currently disabled.  Use -win option to enable\"\n@@ -67,6 +67,7 @@\n     'reindex.py',\n     'decodescript.py',\n     'p2p-fullblocktest.py',\n+    'blockchain.py',\n ]\n testScriptsExt = [\n     'bipdersig-p2p.py',\n@@ -98,20 +99,20 @@\n     rpcTestDir = buildDir + '/qa/rpc-tests/'\n     #Run Tests\n     for i in range(len(testScripts)):\n-       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts \n+       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts\n            or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n-            print  \"Running testscript \" + testScripts[i] + \"...\" \n-            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+            print  \"Running testscript \" + testScripts[i] + \"...\"\n+            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n \t    #exit if help is called so we print just one set of instructions\n             p = re.compile(\" -h| --help\")\n             if p.match(passOn):\n                 sys.exit(0)\n \n     #Run Extended Tests\n     for i in range(len(testScriptsExt)):\n-        if ('-extended' in opts or testScriptsExt[i] in opts \n+        if ('-extended' in opts or testScriptsExt[i] in opts\n            or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n-            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\" \n-            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True) \n+            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\"\n+            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n else:\n     print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      },
      {
        "sha": "a5c98b777e0d42f900253dd68c614037f592b8c4",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9caaf6ed22d052bae2b9552a7d2df529166664e8/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9caaf6ed22d052bae2b9552a7d2df529166664e8/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=9caaf6ed22d052bae2b9552a7d2df529166664e8",
        "patch": "@@ -0,0 +1,52 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test RPC calls related to blockchain state.\n+#\n+\n+import decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    initialize_chain,\n+    assert_equal,\n+    start_nodes,\n+    connect_nodes_bi,\n+)\n+\n+class BlockchainTest(BitcoinTestFramework):\n+    \"\"\"\n+    Test blockchain-related RPC calls:\n+\n+        - gettxoutsetinfo\n+\n+    \"\"\"\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \" + self.options.tmpdir)\n+        initialize_chain(self.options.tmpdir)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(2, self.options.tmpdir)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        res = node.gettxoutsetinfo()\n+\n+        assert_equal(res[u'total_amount'], decimal.Decimal('8725.00000000'))\n+        assert_equal(res[u'transactions'], 200)\n+        assert_equal(res[u'height'], 200)\n+        assert_equal(res[u'txouts'], 200)\n+        assert_equal(res[u'bytes_serialized'], 13000),\n+        assert_equal(len(res[u'bestblock']), 64)\n+        assert_equal(len(res[u'hash_serialized']), 64)\n+\n+\n+if __name__ == '__main__':\n+    BlockchainTest().main()"
      },
      {
        "sha": "32c9345be5c5e10c92c5183a91ef403a60877d19",
        "filename": "src/leveldbwrapper.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9caaf6ed22d052bae2b9552a7d2df529166664e8/src/leveldbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9caaf6ed22d052bae2b9552a7d2df529166664e8/src/leveldbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.cpp?ref=9caaf6ed22d052bae2b9552a7d2df529166664e8",
        "patch": "@@ -131,7 +131,7 @@ std::vector<unsigned char> CLevelDBWrapper::CreateObfuscateKey() const\n \n bool CLevelDBWrapper::IsEmpty()\n {\n-    boost::scoped_ptr<leveldb::Iterator> it(NewIterator());\n+    boost::scoped_ptr<CLevelDBIterator> it(NewIterator());\n     it->SeekToFirst();\n     return !(it->Valid());\n }\n@@ -145,3 +145,10 @@ std::string CLevelDBWrapper::GetObfuscateKeyHex() const\n { \n     return HexStr(obfuscate_key); \n }\n+\n+CLevelDBIterator::~CLevelDBIterator() { delete piter; }\n+bool CLevelDBIterator::Valid() { return piter->Valid(); }\n+void CLevelDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n+void CLevelDBIterator::SeekToLast() { piter->SeekToLast(); }\n+void CLevelDBIterator::Next() { piter->Next(); }\n+void CLevelDBIterator::Prev() { piter->Prev(); }"
      },
      {
        "sha": "60101e18cc03e67aba6a4058fea0c8533c713902",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 73,
        "deletions": 9,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9caaf6ed22d052bae2b9552a7d2df529166664e8/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9caaf6ed22d052bae2b9552a7d2df529166664e8/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=9caaf6ed22d052bae2b9552a7d2df529166664e8",
        "patch": "@@ -32,13 +32,13 @@ class CLevelDBBatch\n \n private:\n     leveldb::WriteBatch batch;\n-    const std::vector<unsigned char> obfuscate_key;\n+    const std::vector<unsigned char> *obfuscate_key;\n \n public:\n     /**\n      * @param[in] obfuscate_key    If passed, XOR data with this key.\n      */\n-    CLevelDBBatch(const std::vector<unsigned char>& obfuscate_key) : obfuscate_key(obfuscate_key) { };\n+    CLevelDBBatch(const std::vector<unsigned char> *obfuscate_key) : obfuscate_key(obfuscate_key) { };\n \n     template <typename K, typename V>\n     void Write(const K& key, const V& value)\n@@ -51,7 +51,7 @@ class CLevelDBBatch\n         CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n         ssValue.reserve(ssValue.GetSerializeSize(value));\n         ssValue << value;\n-        ssValue.Xor(obfuscate_key);\n+        ssValue.Xor(*obfuscate_key);\n         leveldb::Slice slValue(&ssValue[0], ssValue.size());\n \n         batch.Put(slKey, slValue);\n@@ -68,7 +68,72 @@ class CLevelDBBatch\n         batch.Delete(slKey);\n     }\n };\n+ \n+class CLevelDBIterator\n+{\n+private:\n+    leveldb::Iterator *piter;\n+    const std::vector<unsigned char> *obfuscate_key;\n+\n+public:\n+\n+    /**\n+     * @param[in] piterIn          The original leveldb iterator.\n+     * @param[in] obfuscate_key    If passed, XOR data with this key.\n+     */\n+    CLevelDBIterator(leveldb::Iterator *piterIn, const std::vector<unsigned char>* obfuscate_key) :\n+        piter(piterIn), obfuscate_key(obfuscate_key) { };\n+    ~CLevelDBIterator();\n+\n+    bool Valid();\n \n+    void SeekToFirst();\n+    void SeekToLast();\n+\n+    template<typename K> void Seek(const K& key) {\n+        CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n+        ssKey.reserve(ssKey.GetSerializeSize(key));\n+        ssKey << key;\n+        leveldb::Slice slKey(&ssKey[0], ssKey.size());\n+        piter->Seek(slKey);\n+    }\n+\n+    void Next();\n+    void Prev();\n+\n+    template<typename K> bool GetKey(K& key) {\n+        leveldb::Slice slKey = piter->key();\n+        try {\n+            CDataStream ssKey(slKey.data(), slKey.data() + slKey.size(), SER_DISK, CLIENT_VERSION);\n+            ssKey >> key;\n+        } catch(std::exception &e) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    unsigned int GetKeySize() {\n+        return piter->key().size();\n+    }\n+\n+    template<typename V> bool GetValue(V& value) {\n+        leveldb::Slice slValue = piter->value();\n+        try {\n+            CDataStream ssValue(slValue.data(), slValue.data() + slValue.size(), SER_DISK, CLIENT_VERSION);\n+            ssValue.Xor(*obfuscate_key);\n+            ssValue >> value;\n+        } catch(std::exception &e) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    unsigned int GetValueSize() {\n+        return piter->value().size();\n+    }\n+\n+};\n+ \n class CLevelDBWrapper\n {\n private:\n@@ -145,7 +210,7 @@ class CLevelDBWrapper\n     template <typename K, typename V>\n     bool Write(const K& key, const V& value, bool fSync = false) throw(leveldb_error)\n     {\n-        CLevelDBBatch batch(obfuscate_key);\n+        CLevelDBBatch batch(&obfuscate_key);\n         batch.Write(key, value);\n         return WriteBatch(batch, fSync);\n     }\n@@ -172,7 +237,7 @@ class CLevelDBWrapper\n     template <typename K>\n     bool Erase(const K& key, bool fSync = false) throw(leveldb_error)\n     {\n-        CLevelDBBatch batch(obfuscate_key);\n+        CLevelDBBatch batch(&obfuscate_key);\n         batch.Erase(key);\n         return WriteBatch(batch, fSync);\n     }\n@@ -187,14 +252,13 @@ class CLevelDBWrapper\n \n     bool Sync() throw(leveldb_error)\n     {\n-        CLevelDBBatch batch(obfuscate_key);\n+        CLevelDBBatch batch(&obfuscate_key);\n         return WriteBatch(batch, true);\n     }\n \n-    // not exactly clean encapsulation, but it's easiest for now\n-    leveldb::Iterator* NewIterator()\n+    CLevelDBIterator *NewIterator() \n     {\n-        return pdb->NewIterator(iteroptions);\n+        return new CLevelDBIterator(pdb->NewIterator(iteroptions), &obfuscate_key);\n     }\n \n     /**"
      },
      {
        "sha": "606313b00453ff7e3b7c6e5f2f01d4fe366dcff6",
        "filename": "src/test/leveldbwrapper_tests.cpp",
        "status": "modified",
        "additions": 80,
        "deletions": 1,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9caaf6ed22d052bae2b9552a7d2df529166664e8/src/test/leveldbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9caaf6ed22d052bae2b9552a7d2df529166664e8/src/test/leveldbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/leveldbwrapper_tests.cpp?ref=9caaf6ed22d052bae2b9552a7d2df529166664e8",
        "patch": "@@ -46,7 +46,86 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper)\n         BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n     }\n }\n-                       \n+\n+// Test batch operations\n+BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n+{\n+    // Perform tests both obfuscated and non-obfuscated.\n+    for (int i = 0; i < 2; i++) {\n+        bool obfuscate = (bool)i;\n+        path ph = temp_directory_path() / unique_path();\n+        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+\n+        char key = 'i';\n+        uint256 in = GetRandHash();\n+        char key2 = 'j';\n+        uint256 in2 = GetRandHash();\n+        char key3 = 'k';\n+        uint256 in3 = GetRandHash();\n+\n+        uint256 res;\n+        CLevelDBBatch batch(&dbw.GetObfuscateKey());\n+\n+        batch.Write(key, in);\n+        batch.Write(key2, in2);\n+        batch.Write(key3, in3);\n+\n+        // Remove key3 before it's even been written\n+        batch.Erase(key3);\n+\n+        dbw.WriteBatch(batch);\n+\n+        BOOST_CHECK(dbw.Read(key, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in.ToString());\n+        BOOST_CHECK(dbw.Read(key2, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in2.ToString());\n+\n+        // key3 never should've been written\n+        BOOST_CHECK(dbw.Read(key3, res) == false);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(leveldbwrapper_iterator)\n+{\n+    // Perform tests both obfuscated and non-obfuscated.\n+    for (int i = 0; i < 2; i++) {\n+        bool obfuscate = (bool)i;\n+        path ph = temp_directory_path() / unique_path();\n+        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+\n+        // The two keys are intentionally chosen for ordering\n+        char key = 'j';\n+        uint256 in = GetRandHash();\n+        BOOST_CHECK(dbw.Write(key, in));\n+        char key2 = 'k';\n+        uint256 in2 = GetRandHash();\n+        BOOST_CHECK(dbw.Write(key2, in2));\n+\n+        boost::scoped_ptr<CLevelDBIterator> it(const_cast<CLevelDBWrapper*>(&dbw)->NewIterator());\n+\n+        // Be sure to seek past the obfuscation key (if it exists)\n+        it->Seek(key);\n+\n+        char key_res;\n+        uint256 val_res;\n+\n+        it->GetKey(key_res);\n+        it->GetValue(val_res);\n+        BOOST_CHECK_EQUAL(key_res, key);\n+        BOOST_CHECK_EQUAL(val_res.ToString(), in.ToString());\n+\n+        it->Next();\n+\n+        it->GetKey(key_res);\n+        it->GetValue(val_res);\n+        BOOST_CHECK_EQUAL(key_res, key2);\n+        BOOST_CHECK_EQUAL(val_res.ToString(), in2.ToString());\n+\n+        it->Next();\n+        BOOST_CHECK_EQUAL(it->Valid(), false);\n+    }\n+}\n+\n // Test that we do not obfuscation if there is existing data.\n BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n {"
      },
      {
        "sha": "5723c92440196a43447975e8537605428c4be7ca",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 43,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9caaf6ed22d052bae2b9552a7d2df529166664e8/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9caaf6ed22d052bae2b9552a7d2df529166664e8/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=9caaf6ed22d052bae2b9552a7d2df529166664e8",
        "patch": "@@ -49,7 +49,7 @@ uint256 CCoinsViewDB::GetBestBlock() const {\n }\n \n bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n-    CLevelDBBatch batch(db.GetObfuscateKey());\n+    CLevelDBBatch batch(&db.GetObfuscateKey());\n     size_t count = 0;\n     size_t changed = 0;\n     for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end();) {\n@@ -98,31 +98,19 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n     /* It seems that there are no \"const iterators\" for LevelDB.  Since we\n        only need read operations on it, use a const-cast to get around\n        that restriction.  */\n-    boost::scoped_ptr<leveldb::Iterator> pcursor(const_cast<CLevelDBWrapper*>(&db)->NewIterator());\n-    pcursor->SeekToFirst();\n+    boost::scoped_ptr<CLevelDBIterator> pcursor(const_cast<CLevelDBWrapper*>(&db)->NewIterator());\n+    pcursor->Seek('c');\n \n     CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n     stats.hashBlock = GetBestBlock();\n     ss << stats.hashBlock;\n     CAmount nTotalAmount = 0;\n     while (pcursor->Valid()) {\n         boost::this_thread::interruption_point();\n-        try {\n-            leveldb::Slice slKey = pcursor->key();\n-            CDataStream ssKey(slKey.data(), slKey.data()+slKey.size(), SER_DISK, CLIENT_VERSION);\n-            char chType;\n-            ssKey >> chType;\n-            if (chType == DB_COINS) {\n-                leveldb::Slice slValue = pcursor->value();\n-                CDataStream ssValue(slValue.data(), slValue.data()+slValue.size(), SER_DISK, CLIENT_VERSION);\n-                CCoins coins;\n-                ssValue >> coins;\n-                uint256 txhash;\n-                ssKey >> txhash;\n-                ss << txhash;\n-                ss << VARINT(coins.nVersion);\n-                ss << (coins.fCoinBase ? 'c' : 'n');\n-                ss << VARINT(coins.nHeight);\n+        std::pair<char, uint256> key;\n+        CCoins coins;\n+        if (pcursor->GetKey(key) && key.first == 'c') {\n+            if (pcursor->GetValue(coins)) {\n                 stats.nTransactions++;\n                 for (unsigned int i=0; i<coins.vout.size(); i++) {\n                     const CTxOut &out = coins.vout[i];\n@@ -133,13 +121,15 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n                         nTotalAmount += out.nValue;\n                     }\n                 }\n-                stats.nSerializedSize += 32 + slValue.size();\n+                stats.nSerializedSize += 32 + pcursor->GetKeySize();\n                 ss << VARINT(0);\n+            } else {\n+                return error(\"CCoinsViewDB::GetStats() : unable to read value\");\n             }\n-            pcursor->Next();\n-        } catch (const std::exception& e) {\n-            return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+        } else {\n+            break;\n         }\n+        pcursor->Next();\n     }\n     {\n         LOCK(cs_main);\n@@ -151,7 +141,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n }\n \n bool CBlockTreeDB::WriteBatchSync(const std::vector<std::pair<int, const CBlockFileInfo*> >& fileInfo, int nLastFile, const std::vector<const CBlockIndex*>& blockinfo) {\n-    CLevelDBBatch batch(GetObfuscateKey());\n+    CLevelDBBatch batch(&GetObfuscateKey());\n     for (std::vector<std::pair<int, const CBlockFileInfo*> >::const_iterator it=fileInfo.begin(); it != fileInfo.end(); it++) {\n         batch.Write(make_pair(DB_BLOCK_FILES, it->first), *it->second);\n     }\n@@ -167,7 +157,7 @@ bool CBlockTreeDB::ReadTxIndex(const uint256 &txid, CDiskTxPos &pos) {\n }\n \n bool CBlockTreeDB::WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos> >&vect) {\n-    CLevelDBBatch batch(GetObfuscateKey());\n+    CLevelDBBatch batch(&GetObfuscateKey());\n     for (std::vector<std::pair<uint256,CDiskTxPos> >::const_iterator it=vect.begin(); it!=vect.end(); it++)\n         batch.Write(make_pair(DB_TXINDEX, it->first), it->second);\n     return WriteBatch(batch);\n@@ -187,26 +177,17 @@ bool CBlockTreeDB::ReadFlag(const std::string &name, bool &fValue) {\n \n bool CBlockTreeDB::LoadBlockIndexGuts()\n {\n-    boost::scoped_ptr<leveldb::Iterator> pcursor(NewIterator());\n+    boost::scoped_ptr<CLevelDBIterator> pcursor(NewIterator());\n \n-    CDataStream ssKeySet(SER_DISK, CLIENT_VERSION);\n-    ssKeySet << make_pair(DB_BLOCK_INDEX, uint256());\n-    pcursor->Seek(ssKeySet.str());\n+    pcursor->Seek(make_pair('b', uint256()));\n \n     // Load mapBlockIndex\n     while (pcursor->Valid()) {\n         boost::this_thread::interruption_point();\n-        try {\n-            leveldb::Slice slKey = pcursor->key();\n-            CDataStream ssKey(slKey.data(), slKey.data()+slKey.size(), SER_DISK, CLIENT_VERSION);\n-            char chType;\n-            ssKey >> chType;\n-            if (chType == DB_BLOCK_INDEX) {\n-                leveldb::Slice slValue = pcursor->value();\n-                CDataStream ssValue(slValue.data(), slValue.data()+slValue.size(), SER_DISK, CLIENT_VERSION);\n-                CDiskBlockIndex diskindex;\n-                ssValue >> diskindex;\n-\n+        std::pair<char, uint256> key;\n+        if (pcursor->GetKey(key) && key.first == 'b') {\n+            CDiskBlockIndex diskindex;\n+            if (pcursor->GetValue(diskindex)) {\n                 // Construct block index object\n                 CBlockIndex* pindexNew = InsertBlockIndex(diskindex.GetBlockHash());\n                 pindexNew->pprev          = InsertBlockIndex(diskindex.hashPrev);\n@@ -227,10 +208,10 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n \n                 pcursor->Next();\n             } else {\n-                break; // if shutdown requested or finished loading block index\n+                return error(\"LoadBlockIndex() : failed to read value\");\n             }\n-        } catch (const std::exception& e) {\n-            return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+        } else {\n+            break;\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWQ2MjNkYTNlYTRjNzM2MDVkMjc3MDNiYzk2NmVkODEwOWQyMzFl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T10:31:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-13T10:31:50Z"
      },
      "message": "Merge pull request #6810\n\n7d325b9 zmq: point API link to 4.0 as that is what we are conforming to [Trivial] (Johnathan Corgan)",
      "tree": {
        "sha": "116be99543ebe8e9b1db44ebea2c021e05aa022e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/116be99543ebe8e9b1db44ebea2c021e05aa022e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWHN2WAAoJEHSBCwEjRsmm4nUH/0QcaUvSmGpzFSnQzHyzVWXv\nWvC9sn6H0BRhJ6bARHXhAKX1XhQBr2NLjajdeASY9RdYYabqjaxqCa/4gG6e1ryM\n+t2J9RQZpRmVaHy5DsWrLTuvFJLzkOnM6zyI1y0j7ukLfViuAi3hTi9tYYRJoTMe\nuImy0DY73+bKXQ67XmChYPHmnlRzB6A2wBVuw1llQZkD7XT9YL8/oRBN0ZFlI6Cg\nWsF/Xm7Pj/7ZMDvjcQ004KRv+P/x2mM+K/MMXAZy+V66N4Ve7ypgOYc068LBC5Ei\nMKzGOAulNgIdLNwejfI/ULZaM7qDxkw5oyIPmgTTIp3UL7WLuHeJ7VGdE7YAlP8=\n=Ys45\n-----END PGP SIGNATURE-----",
        "payload": "tree 116be99543ebe8e9b1db44ebea2c021e05aa022e\nparent 9caaf6ed22d052bae2b9552a7d2df529166664e8\nparent 7d325b9de7d6bb2a38ece738436e615588696010\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444732305 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444732310 +0200\n\nMerge pull request #6810\n\n7d325b9 zmq: point API link to 4.0 as that is what we are conforming to [Trivial] (Johnathan Corgan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9caaf6ed22d052bae2b9552a7d2df529166664e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9caaf6ed22d052bae2b9552a7d2df529166664e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9caaf6ed22d052bae2b9552a7d2df529166664e8"
      },
      {
        "sha": "7d325b9de7d6bb2a38ece738436e615588696010",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d325b9de7d6bb2a38ece738436e615588696010",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d325b9de7d6bb2a38ece738436e615588696010"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "53e557e3db191795535d779861afd8e25746179c",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1d623da3ea4c73605d27703bc966ed8109d231e/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1d623da3ea4c73605d27703bc966ed8109d231e/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=a1d623da3ea4c73605d27703bc966ed8109d231e",
        "patch": "@@ -78,7 +78,7 @@ bytes).\n These options can also be provided in bitcoin.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n-[ZeroMQ API](http://api.zeromq.org).\n+[ZeroMQ API](http://api.zeromq.org/4-0:_start).\n \n Client side, then, the ZeroMQ subscriber socket must have the\n ZMQ_SUBSCRIBE option set to one or either of these prefixes (for"
      }
    ]
  },
  {
    "sha": "60af755e56dc08f54c993ce0c044f3ff203b3f59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGFmNzU1ZTU2ZGMwOGY1NGM5OTNjZTBjMDQ0ZjNmZjIwM2IzZjU5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-10-13T17:40:47Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-10-13T17:40:49Z"
      },
      "message": "build: univalue subdir build fixups\n\n- Force a rebuild if the headers change\n- Only build the lib target\n- Clean univalue on 'make clean'",
      "tree": {
        "sha": "d128b53877ffdd8c3543526268c3df294ace8d43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d128b53877ffdd8c3543526268c3df294ace8d43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60af755e56dc08f54c993ce0c044f3ff203b3f59",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60af755e56dc08f54c993ce0c044f3ff203b3f59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60af755e56dc08f54c993ce0c044f3ff203b3f59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60af755e56dc08f54c993ce0c044f3ff203b3f59/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0a16a863eb5e647b7f11a8f419bbd675fd27640e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60af755e56dc08f54c993ce0c044f3ff203b3f59/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60af755e56dc08f54c993ce0c044f3ff203b3f59/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=60af755e56dc08f54c993ce0c044f3ff203b3f59",
        "patch": "@@ -36,8 +36,8 @@ LIBUNIVALUE=univalue/libunivalue.la\n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n   \n-$(LIBUNIVALUE): $(wildcard univalue/lib/*)\n-\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue/\n+$(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)\n+\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n \n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n@@ -421,6 +421,7 @@ EXTRA_DIST = leveldb\n clean-local:\n \t-$(MAKE) -C leveldb clean\n \t-$(MAKE) -C secp256k1 clean\n+\t-$(MAKE) -C univalue clean\n \trm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno\n \t-rm -f config.h\n "
      }
    ]
  },
  {
    "sha": "f8f2aceadd5f406f8bc6f6029b032d00828e6256",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGYyYWNlYWRkNWY0MDZmOGJjNmY2MDI5YjAzMmQwMDgyOGU2MjU2",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-10-13T18:25:57Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-10-13T18:25:57Z"
      },
      "message": "trivial: use constants for db keys\n\nReplace literal occurances of the key \"prefixes\" 'c' and 'b' in txdb.cpp\nby the respective constants.",
      "tree": {
        "sha": "2268d2440e34c57c9cdf75edf1e42e651f1bab6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2268d2440e34c57c9cdf75edf1e42e651f1bab6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8f2aceadd5f406f8bc6f6029b032d00828e6256",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8f2aceadd5f406f8bc6f6029b032d00828e6256",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8f2aceadd5f406f8bc6f6029b032d00828e6256",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8f2aceadd5f406f8bc6f6029b032d00828e6256/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a441aea688325b896f80039bf2839d9478a634fd",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8f2aceadd5f406f8bc6f6029b032d00828e6256/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8f2aceadd5f406f8bc6f6029b032d00828e6256/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=f8f2aceadd5f406f8bc6f6029b032d00828e6256",
        "patch": "@@ -99,7 +99,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n        only need read operations on it, use a const-cast to get around\n        that restriction.  */\n     boost::scoped_ptr<CLevelDBIterator> pcursor(const_cast<CLevelDBWrapper*>(&db)->NewIterator());\n-    pcursor->Seek('c');\n+    pcursor->Seek(DB_COINS);\n \n     CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n     stats.hashBlock = GetBestBlock();\n@@ -109,7 +109,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n         boost::this_thread::interruption_point();\n         std::pair<char, uint256> key;\n         CCoins coins;\n-        if (pcursor->GetKey(key) && key.first == 'c') {\n+        if (pcursor->GetKey(key) && key.first == DB_COINS) {\n             if (pcursor->GetValue(coins)) {\n                 stats.nTransactions++;\n                 for (unsigned int i=0; i<coins.vout.size(); i++) {\n@@ -179,13 +179,13 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n {\n     boost::scoped_ptr<CLevelDBIterator> pcursor(NewIterator());\n \n-    pcursor->Seek(make_pair('b', uint256()));\n+    pcursor->Seek(make_pair(DB_BLOCK_INDEX, uint256()));\n \n     // Load mapBlockIndex\n     while (pcursor->Valid()) {\n         boost::this_thread::interruption_point();\n         std::pair<char, uint256> key;\n-        if (pcursor->GetKey(key) && key.first == 'b') {\n+        if (pcursor->GetKey(key) && key.first == DB_BLOCK_INDEX) {\n             CDiskBlockIndex diskindex;\n             if (pcursor->GetValue(diskindex)) {\n                 // Construct block index object"
      }
    ]
  },
  {
    "sha": "a0d5e0d2f488a6249e01d00cbf864ca0e81894e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGQ1ZTBkMmY0ODhhNjI0OWUwMWQwMGNiZjg2NGNhMGU4MTg5NGUz",
    "commit": {
      "author": {
        "name": "Michael",
        "email": "fanquake@users.noreply.github.com",
        "date": "2015-10-13T11:11:17Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-10-13T23:54:29Z"
      },
      "message": "[doc] Cleanup release-process documentation",
      "tree": {
        "sha": "5b79e1a64f0117e047637a990d21cb43d5a47945",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b79e1a64f0117e047637a990d21cb43d5a47945"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0d5e0d2f488a6249e01d00cbf864ca0e81894e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0d5e0d2f488a6249e01d00cbf864ca0e81894e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0d5e0d2f488a6249e01d00cbf864ca0e81894e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0d5e0d2f488a6249e01d00cbf864ca0e81894e3/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 23,
      "deletions": 24
    },
    "files": [
      {
        "sha": "a562c98dbe7c88e10c939b710342d2176df9be7b",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 23,
        "deletions": 24,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0d5e0d2f488a6249e01d00cbf864ca0e81894e3/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0d5e0d2f488a6249e01d00cbf864ca0e81894e3/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=a0d5e0d2f488a6249e01d00cbf864ca0e81894e3",
        "patch": "@@ -1,65 +1,67 @@\n Release Process\n ====================\n \n-* update translations (ping wumpus, Diapolo or tcatm on IRC)\n-* see https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#syncing-with-transifex\n+* Update translations (ping wumpus, Diapolo or tcatm on IRC) see [translation_process.md](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#syncing-with-transifex)\n+* Update [bips.md](bips.md) to account for changes since the last release.\n \n * * *\n \n-###first time only or for new builders, check out the source in the following directory hierarchy\n+###First time / New builders \n+Check out the source code in the following directory hierarchy.\n \n \tcd /path/to/your/toplevel/build\n \tgit clone https://github.com/bitcoin/gitian.sigs.git\n+\tgit clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n \tgit clone https://github.com/devrandom/gitian-builder.git\n \tgit clone https://github.com/bitcoin/bitcoin.git\n \n-###for bitcoin maintainers/release engineers, update (commit) version in sources\n+###Bitcoin maintainers/release engineers, update (commit) version in sources\n \n \tpushd ./bitcoin\n \tcontrib/verifysfbinaries/verify.sh\n \tdoc/README*\n \tshare/setup.nsi\n \tsrc/clientversion.h (change CLIENT_VERSION_IS_RELEASE to true)\n \n-###for bitcoin maintainers/release engineers, tag version in git\n+\t# tag version in git\n \n \tgit tag -s v(new version, e.g. 0.8.0)\n \n-###for bitcoin maintainers/release engineers, write release notes. git shortlog helps a lot, for example:\n+\t# write release notes. git shortlog helps a lot, for example:\n \n \tgit shortlog --no-merges v(current version, e.g. 0.7.2)..v(new version, e.g. 0.8.0)\n \tpopd\n \n * * *\n \n-###update gitian, gitian.sigs, checkout bitcoin version, and perform gitian builds\n+###Setup and perform gitian builds\n \n- To ensure your gitian descriptors are accurate for direct reference for gbuild, below, run the following from a directory containing the bitcoin source:\n+ Setup gitian descriptors:\n   \n \tpushd ./bitcoin\n \texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n \tgit checkout v${VERSION}\n \tpopd\n \n-  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures:\n+  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures.\n \n \tpushd ./gitian.sigs\n \tgit pull\n \tpopd\n \n-  Ensure your gitian-builder sources are up-to-date to take advantage of the new caching features of gitian (`e9741525c` or later is recommended)\n+  Ensure gitian-builder is up-to-date to take advantage of new caching features (`e9741525c` or later is recommended).\n \n \tpushd ./gitian-builder\n \tgit pull\n \n-###fetch and create inputs: (first time, or when dependency versions change)\n+###Fetch and create inputs: (first time, or when dependency versions change)\n  \n \tmkdir -p inputs\n \twget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n \twget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n \n- Register and download the Apple SDK: (see OSX Readme for details)\n+ Register and download the Apple SDK: see [OSX readme](README_osx.txt) for details.\n  \n  https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_6.1.1/xcode_6.1.1.dmg\n  \n@@ -75,15 +77,11 @@ By default, gitian will fetch source files as needed. To cache them ahead of tim\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n-Clone the detached-sigs repository:\n-\n-\tpopd\n-\tgit clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n-\tpushd ./bitcoin-builder\n-\n-NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs.\n-For example: ./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n-The following gbuild invocations DO NOT DO THIS by default.\n+NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs. For example: \n+```\n+./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+```\n+The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n ###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n   \n@@ -126,8 +124,9 @@ Commit your signature to gitian.sigs:\n \tpopd\n \n   Wait for Windows/OSX detached signatures:\n+\n \tOnce the Windows/OSX builds each have 3 matching signatures, they will be signed with their respective release keys.\n-\tDetached signatures will then be committed to the bitcoin-detached-sigs repository, which can be combined with the unsigned apps to create signed binaries.\n+\tDetached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n   Create (and optionally verify) the signed OSX binary:\n \n@@ -176,14 +175,14 @@ Note: check that SHA256SUMS itself doesn't end up in SHA256SUMS, which is a spur\n - Update bitcoin.org version\n \n   - First, check to see if the Bitcoin.org maintainers have prepared a\n-    release: https://github.com/bitcoin/bitcoin.org/labels/Releases\n+    release: https://github.com/bitcoin-dot-org/bitcoin.org/labels/Releases\n \n       - If they have, it will have previously failed their Travis CI\n         checks because the final release files weren't uploaded.\n         Trigger a Travis CI rebuild---if it passes, merge.\n \n   - If they have not prepared a release, follow the Bitcoin.org release\n-    instructions: https://github.com/bitcoin/bitcoin.org#release-notes\n+    instructions: https://github.com/bitcoin-dot-org/bitcoin.org#release-notes\n \n   - After the pull request is merged, the website will automatically show the newest version within 15 minutes, as well\n     as update the OS download links. Ping @saivann/@harding (saivann/harding on Freenode) in case anything goes wrong"
      }
    ]
  },
  {
    "sha": "53b86d0de5440ffb94f6742e26dd1fd9e11952f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2I4NmQwZGU1NDQwZmZiOTRmNjc0MmUyNmRkMWZkOWUxMTk1MmYy",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-10-14T18:42:49Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-10-14T18:42:49Z"
      },
      "message": "doc: add comment explaining initial header request\n\nAdd a comment that explains why the initial \"getheader\" requests are\nmade starting from the block preceding the currently best one.\n\nThanks to sdaftuar for the explanation!",
      "tree": {
        "sha": "93a5132512a345078c6b017b2aee17b71eb4d379",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93a5132512a345078c6b017b2aee17b71eb4d379"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53b86d0de5440ffb94f6742e26dd1fd9e11952f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53b86d0de5440ffb94f6742e26dd1fd9e11952f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53b86d0de5440ffb94f6742e26dd1fd9e11952f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53b86d0de5440ffb94f6742e26dd1fd9e11952f2/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 10,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e931d40c9462c74a180325f33e4f34ad8b0c4c1c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53b86d0de5440ffb94f6742e26dd1fd9e11952f2/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53b86d0de5440ffb94f6742e26dd1fd9e11952f2/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=53b86d0de5440ffb94f6742e26dd1fd9e11952f2",
        "patch": "@@ -4955,7 +4955,16 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             if ((nSyncStarted == 0 && fFetch) || pindexBestHeader->GetBlockTime() > GetAdjustedTime() - 24 * 60 * 60) {\n                 state.fSyncStarted = true;\n                 nSyncStarted++;\n-                CBlockIndex *pindexStart = pindexBestHeader->pprev ? pindexBestHeader->pprev : pindexBestHeader;\n+                const CBlockIndex *pindexStart = pindexBestHeader;\n+                /* If possible, start at the block preceding the currently\n+                   best known header.  This ensures that we always get a\n+                   non-empty list of headers back as long as the peer\n+                   is up-to-date.  With a non-empty response, we can initialise\n+                   the peer's known best block.  This wouldn't be possible\n+                   if we requested starting at pindexBestHeader and\n+                   got back an empty response.  */\n+                if (pindexStart->pprev)\n+                    pindexStart = pindexStart->pprev;\n                 LogPrint(\"net\", \"initial getheaders (%d) to peer=%d (startheight:%d)\\n\", pindexStart->nHeight, pto->id, pto->nStartingHeight);\n                 pto->PushMessage(\"getheaders\", chainActive.GetLocator(pindexStart), uint256());\n             }"
      }
    ]
  },
  {
    "sha": "8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YWJlMGY1NjU4NGZmNDlhZDI1MDExNWViMWYwYTlhYzhmOWNmMGNh",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-14T19:44:18Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-14T19:44:18Z"
      },
      "message": "Undo GetMinFee-requires-extra-call-to-hit-0",
      "tree": {
        "sha": "d73b44f802177659fb65ddb71b1316543adbcde0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d73b44f802177659fb65ddb71b1316543adbcde0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e93640be6c49fa1505ba5c5df8c89210da5a6e4"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0cf906a259e7b1fbdeefb655f5ced1fcc37b55ac",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca",
        "patch": "@@ -428,7 +428,6 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n     // ... but feerate should never drop below 1000\n \n     SetMockTime(42 + 8*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n-    pool.GetMinFee(1);\n     BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 0);\n     // ... unless it has gone all the way to 0 (after getting past 1000/2)\n "
      },
      {
        "sha": "9a651049d5dc69aa4eddd055de7046585ee1b502",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca",
        "patch": "@@ -879,8 +879,10 @@ CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n         rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n         lastRollingFeeUpdate = time;\n \n-        if (rollingMinimumFeeRate < minReasonableRelayFee.GetFeePerK() / 2)\n+        if (rollingMinimumFeeRate < minReasonableRelayFee.GetFeePerK() / 2) {\n             rollingMinimumFeeRate = 0;\n+            return CFeeRate(0);\n+        }\n     }\n     return std::max(CFeeRate(rollingMinimumFeeRate), minReasonableRelayFee);\n }"
      }
    ]
  },
  {
    "sha": "2bc50187ee6b6a3e4dfaa23bf292d63ad2915945",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYmM1MDE4N2VlNmI2YTNlNGRmYWEyM2JmMjkyZDYzYWQyOTE1OTQ1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-14T19:46:20Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-14T19:46:20Z"
      },
      "message": "Fix comment formatting tabs",
      "tree": {
        "sha": "2d2ecb3c1613d156190db4e859d7835b39864753",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d2ecb3c1613d156190db4e859d7835b39864753"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bc50187ee6b6a3e4dfaa23bf292d63ad2915945",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bc50187ee6b6a3e4dfaa23bf292d63ad2915945",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bc50187ee6b6a3e4dfaa23bf292d63ad2915945",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bc50187ee6b6a3e4dfaa23bf292d63ad2915945/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8abe0f56584ff49ad250115eb1f0a9ac8f9cf0ca"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "d44995eefe737b67e7557a125fc47d5aed34590d",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc50187ee6b6a3e4dfaa23bf292d63ad2915945/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc50187ee6b6a3e4dfaa23bf292d63ad2915945/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=2bc50187ee6b6a3e4dfaa23bf292d63ad2915945",
        "patch": "@@ -420,11 +420,11 @@ class CTxMemPool\n     bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents = true);\n \n     /** The minimum fee to get into the mempool, which may itself not be enough\n-\t *  for larger-sized transactions.\n-\t *  The minReasonableRelayFee constructor arg is used to bound the time it\n-     *  takes the fee rate to go back down all the way to 0. When the feerate\n-     *  would otherwise be half of this, it is set to 0 instead.\n-\t */\n+      *  for larger-sized transactions.\n+      *  The minReasonableRelayFee constructor arg is used to bound the time it\n+      *  takes the fee rate to go back down all the way to 0. When the feerate\n+      *  would otherwise be half of this, it is set to 0 instead.\n+      */\n     CFeeRate GetMinFee(size_t sizelimit) const;\n \n     /** Remove transactions from the mempool until its dynamic size is <= sizelimit. */"
      }
    ]
  },
  {
    "sha": "d57586f91c6cfe7480ae87b81a041009776a33af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNTc1ODZmOTFjNmNmZTc0ODBhZTg3YjgxYTA0MTAwOTc3NmEzM2Fm",
    "commit": {
      "author": {
        "name": "Micha",
        "email": "michagogo@server.fake",
        "date": "2015-10-14T20:05:26Z"
      },
      "committer": {
        "name": "Micha",
        "email": "michagogo@server.fake",
        "date": "2015-10-14T20:14:13Z"
      },
      "message": "Add historical release notes for October 2015 bugfix releases\n\n[skip ci]",
      "tree": {
        "sha": "b89b1f6c6f2e23f1038064564d6eec13482b45d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b89b1f6c6f2e23f1038064564d6eec13482b45d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d57586f91c6cfe7480ae87b81a041009776a33af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unverified_email",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJWHrerAAoJEILFwAlijs8MtoEH/0qPfk2MlLg7mY04QhhHf2rt\nyYJcqR3MEBKhe/6m1bUIZXhRdtPCERd3JA7H6PfBRIgMEeDXJP+Q4Yloch7/Y71C\n/C/z2uV336aPceXdxTSl3JtBVP95Dj1RPB/26ggyuD0lUU46bLmJhTa0zlI0tj2O\nJ3ZigiA0ccqz5T6aF82bFAqUaMJEmqQRZHl25k0ibV690+xrKyN4d+o0FxF9ChJW\nFvJyM/I+0R13i4IwKk/KTM+bm8bNMgzjWAjApgqhoKTMudD0hxWug3Uu6x0nl31y\n2WC6hulontVXBkgUuPd8m939tQoz3H+eKF9H9JTzV9i25w55kzLdO3UffWh2drc=\n=9hqm\n-----END PGP SIGNATURE-----",
        "payload": "tree b89b1f6c6f2e23f1038064564d6eec13482b45d1\nparent a1d623da3ea4c73605d27703bc966ed8109d231e\nauthor Micha <michagogo@server.fake> 1444853126 +0300\ncommitter Micha <michagogo@server.fake> 1444853653 +0300\n\nAdd historical release notes for October 2015 bugfix releases\n\n[skip ci]\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d57586f91c6cfe7480ae87b81a041009776a33af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d57586f91c6cfe7480ae87b81a041009776a33af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d57586f91c6cfe7480ae87b81a041009776a33af/comments",
    "author": {
      "login": "Michagogo",
      "id": 2559390,
      "node_id": "MDQ6VXNlcjI1NTkzOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2559390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michagogo",
      "html_url": "https://github.com/Michagogo",
      "followers_url": "https://api.github.com/users/Michagogo/followers",
      "following_url": "https://api.github.com/users/Michagogo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michagogo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michagogo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michagogo/subscriptions",
      "organizations_url": "https://api.github.com/users/Michagogo/orgs",
      "repos_url": "https://api.github.com/users/Michagogo/repos",
      "events_url": "https://api.github.com/users/Michagogo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michagogo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Michagogo",
      "id": 2559390,
      "node_id": "MDQ6VXNlcjI1NTkzOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2559390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michagogo",
      "html_url": "https://github.com/Michagogo",
      "followers_url": "https://api.github.com/users/Michagogo/followers",
      "following_url": "https://api.github.com/users/Michagogo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michagogo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michagogo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michagogo/subscriptions",
      "organizations_url": "https://api.github.com/users/Michagogo/orgs",
      "repos_url": "https://api.github.com/users/Michagogo/repos",
      "events_url": "https://api.github.com/users/Michagogo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michagogo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      }
    ],
    "stats": {
      "total": 337,
      "additions": 337,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d57586f91c6cfe7480ae87b81a041009776a33af/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d57586f91c6cfe7480ae87b81a041009776a33af/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=d57586f91c6cfe7480ae87b81a041009776a33af",
        "patch": "@@ -0,0 +1,165 @@\n+Bitcoin Core version 0.10.3 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.10.3/>\n+\n+This is a new minor version release, bringing security fixes and translation \n+updates. It is recommended to upgrade to this version as soon as possible.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility.\n+\n+Notable changes\n+===============\n+\n+Fix buffer overflow in bundled upnp\n+------------------------------------\n+\n+Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n+the XML parser during initial network discovery.\n+\n+Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n+\n+This applies to the distributed executables only, not when building from source or\n+using distribution provided packages.\n+\n+Additionally, upnp has been disabled by default. This may result in a lower\n+number of reachable nodes on IPv4, however this prevents future libupnpc\n+vulnerabilities from being a structural risk to the network\n+(see https://github.com/bitcoin/bitcoin/pull/6795).\n+\n+Test for LowS signatures before relaying\n+-----------------------------------------\n+\n+Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n+relaying or mining.  This removes a nuisance malleability vector.\n+\n+Consensus behavior is unchanged.\n+\n+If widely deployed this change would eliminate the last remaining known vector\n+for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n+it will block most transactions made by sufficiently out of date software.\n+\n+Unlike the other avenues to change txids on transactions this\n+one was randomly violated by all deployed bitcoin software prior to\n+its discovery. So, while other malleability vectors where made\n+non-standard as soon as they were discovered, this one has remained\n+permitted. Even BIP62 did not propose applying this rule to\n+old version transactions, but conforming implementations have become\n+much more common since BIP62 was initially written.\n+\n+Bitcoin Core has produced compatible signatures since a28fb70e in\n+September 2013, but this didn't make it into a release until 0.9\n+in March 2014; Bitcoinj has done so for a similar span of time.\n+Bitcoinjs and electrum have been more recently updated.\n+\n+This does not replace the need for BIP62 or similar, as miners can\n+still cooperate to break transactions.  Nor does it replace the\n+need for wallet software to handle malleability sanely[1]. This\n+only eliminates the cheap and irritating DOS attack.\n+\n+[1] On the Malleability of Bitcoin Transactions\n+Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n+http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+\n+Minimum relay fee default increase\n+-----------------------------------\n+\n+The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n+to `0.00005`.\n+\n+This is necessitated by the current transaction flooding, causing\n+outrageous memory usage on nodes due to the mempool ballooning. This is a\n+temporary measure, bridging the time until a dynamic method for determining\n+this fee is merged (which will be in 0.12).\n+\n+(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11.0\n+release notes, in which this value was suggested)\n+\n+0.10.3 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect external\n+behavior, not code moves, refactors or string updates.\n+\n+- #6186 `e4a7d51` Fix two problems in CSubnet parsing\n+- #6153 `ebd7d8d` Parameter interaction: disable upnp if -proxy set\n+- #6203 `ecc96f5` Remove P2SH coinbase flag, no longer interesting\n+- #6226 `181771b` json: fail read_string if string contains trailing garbage\n+- #6244 `09334e0` configure: Detect (and reject) LibreSSL\n+- #6276 `0fd8464` Fix getbalance * 0\n+- #6274 `be64204` Add option `-alerts` to opt out of alert system\n+- #6319 `3f55638` doc: update mailing list address\n+- #6438 `7e66e9c` openssl: avoid config file load/race\n+- #6439 `255eced` Updated URL location of netinstall for Debian\n+- #6412 `0739e6e` Test whether created sockets are select()able\n+- #6694 `f696ea1` [QT] fix thin space word wrap line brake issue\n+- #6704 `743cc9e` Backport bugfixes to 0.10\n+- #6769 `1cea6b0` Test LowS in standardness, removes nuisance malleability vector.\n+- #6789 `093d7b5` Update miniupnpc to 1.9.20151008\n+- #6795 `f2778e0` net: Disable upnp by default\n+- #6797 `91ef4d9` Do not store more than 200 timedata samples\n+- #6793 `842c48d` Bump minrelaytxfee default\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Adam Weiss\n+- Alex Morcos\n+- Casey Rodarmor\n+- Cory Fields\n+- fanquake\n+- Gregory Maxwell\n+- Jonas Schnelli\n+- J Ross Nicoll\n+- Luke Dashjr\n+- Pavel Vasin\n+- Pieter Wuille\n+- randy-waterhouse\n+- \u0e3ftcDrak\n+- Tom Harding\n+- Veres Lajos\n+- Wladimir J. van der Laan\n+\n+And all those who contributed additional code review and/or security research:\n+\n+- timothy on IRC for reporting the issue\n+- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d57586f91c6cfe7480ae87b81a041009776a33af/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d57586f91c6cfe7480ae87b81a041009776a33af/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=d57586f91c6cfe7480ae87b81a041009776a33af",
        "patch": "@@ -0,0 +1,172 @@\n+Bitcoin Core version 0.11.1 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.11.1/>\n+\n+This is a new minor version release, bringing security fixes. It is recommended\n+to upgrade to this version as soon as possible.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility. There are no\n+known problems when downgrading from 0.11.x to 0.10.x.\n+\n+Notable changes\n+===============\n+\n+Fix buffer overflow in bundled upnp\n+------------------------------------\n+\n+Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n+the XML parser during initial network discovery.\n+\n+Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n+\n+This applies to the distributed executables only, not when building from source or\n+using distribution provided packages.\n+\n+Additionally, upnp has been disabled by default. This may result in a lower\n+number of reachable nodes on IPv4, however this prevents future libupnpc\n+vulnerabilities from being a structural risk to the network\n+(see https://github.com/bitcoin/bitcoin/pull/6795).\n+\n+Test for LowS signatures before relaying\n+-----------------------------------------\n+\n+Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n+relaying or mining.  This removes a nuisance malleability vector.\n+\n+Consensus behavior is unchanged.\n+\n+If widely deployed this change would eliminate the last remaining known vector\n+for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n+it will block most transactions made by sufficiently out of date software.\n+\n+Unlike the other avenues to change txids on transactions this\n+one was randomly violated by all deployed bitcoin software prior to\n+its discovery. So, while other malleability vectors where made\n+non-standard as soon as they were discovered, this one has remained\n+permitted. Even BIP62 did not propose applying this rule to\n+old version transactions, but conforming implementations have become\n+much more common since BIP62 was initially written.\n+\n+Bitcoin Core has produced compatible signatures since a28fb70e in\n+September 2013, but this didn't make it into a release until 0.9\n+in March 2014; Bitcoinj has done so for a similar span of time.\n+Bitcoinjs and electrum have been more recently updated.\n+\n+This does not replace the need for BIP62 or similar, as miners can\n+still cooperate to break transactions.  Nor does it replace the\n+need for wallet software to handle malleability sanely[1]. This\n+only eliminates the cheap and irritating DOS attack.\n+\n+[1] On the Malleability of Bitcoin Transactions\n+Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n+http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+\n+Minimum relay fee default increase\n+-----------------------------------\n+\n+The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n+to `0.00005`.\n+\n+This is necessitated by the current transaction flooding, causing\n+outrageous memory usage on nodes due to the mempool ballooning. This is a\n+temporary measure, bridging the time until a dynamic method for determining\n+this fee is merged (which will be in 0.12).\n+\n+(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11\n+release notes, in which this value was suggested)\n+\n+0.11.1 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+- #6438 `2531438` openssl: avoid config file load/race\n+- #6439 `980f820` Updated URL location of netinstall for Debian\n+- #6384 `8e5a969` qt: Force TLS1.0+ for SSL connections\n+- #6471 `92401c2` Depends: bump to qt 5.5\n+- #6224 `93b606a` Be even stricter in processing unrequested blocks\n+- #6571 `100ac4e` libbitcoinconsensus: avoid a crash in multi-threaded environments\n+- #6545 `649f5d9` Do not store more than 200 timedata samples.\n+- #6694 `834e299` [QT] fix thin space word wrap line break issue\n+- #6703 `1cd7952` Backport bugfixes to 0.11\n+- #6750 `5ed8d0b` Recent rejects backport to v0.11\n+- #6769 `71cc9d9` Test LowS in standardness, removes nuisance malleability vector.\n+- #6789 `b4ad73f` Update miniupnpc to 1.9.20151008\n+- #6785 `b4dc33e` Backport to v0.11: In (strCommand == \"tx\"), return if AlreadyHave()\n+- #6412 `0095b9a` Test whether created sockets are select()able\n+- #6795 `4dbcec0` net: Disable upnp by default\n+- #6793 `e7bcc4a` Bump minrelaytxfee default\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Adam Weiss\n+- Alex Morcos\n+- Casey Rodarmor\n+- Cory Fields\n+- fanquake\n+- Gregory Maxwell\n+- Jonas Schnelli\n+- J Ross Nicoll\n+- Luke Dashjr\n+- Pavel Jan\u00edk\n+- Pavel Vasin\n+- Peter Todd\n+- Pieter Wuille\n+- randy-waterhouse\n+- Ross Nicoll\n+- Suhas Daftuar\n+- tailsjoin\n+- \u0e3ftcDrak\n+- Tom Harding\n+- Veres Lajos\n+- Wladimir J. van der Laan\n+\n+And those who contributed additional code review and/or security research:\n+\n+- timothy on IRC for reporting the issue\n+- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      }
    ]
  },
  {
    "sha": "34f200d1404dcb93d45f43e249048f4b6eed0197",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGYyMDBkMTQwNGRjYjkzZDQ1ZjQzZTI0OTA0OGY0YjZlZWQwMTk3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-15T10:45:57Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-15T10:46:01Z"
      },
      "message": "Merge pull request #6830\n\nd57586f Add historical release notes for October 2015 bugfix releases (Micha)",
      "tree": {
        "sha": "b89b1f6c6f2e23f1038064564d6eec13482b45d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b89b1f6c6f2e23f1038064564d6eec13482b45d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34f200d1404dcb93d45f43e249048f4b6eed0197",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWH4PpAAoJEHSBCwEjRsmmSewIALkqamY7akk/ItsQO6g9/9bh\nIsUjcbyNG3DRH22wDv+3nHNhV0vd2tUYyyW7c4dTx6OfzGpAABmWPKXAr6qTCupd\noTDoISBy2tzO4D8SeX8wDGK7qoYF9PB3YcQ+0XcPVKziKo8FujrajZ35G5+IEYXq\nguqVH1lbGxr07UIYFzvKlboRgCmNFYKfPR5X2fUMLWbfj8nPdQl0MOf1FuT3aBn4\n4ic3tykXkaiv6jSK1YcpxCwLcdLkRmaKGiV8VonNE4a5eEnt/3Y7CKVqtcTYsCeY\n35oOmcxYwDeOXJTT1H9qj3SDJnM0eGfraoBj99mmWfrJ1QRvSvr/LqrJk6vp9uo=\n=mOqz\n-----END PGP SIGNATURE-----",
        "payload": "tree b89b1f6c6f2e23f1038064564d6eec13482b45d1\nparent a1d623da3ea4c73605d27703bc966ed8109d231e\nparent d57586f91c6cfe7480ae87b81a041009776a33af\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444905957 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444905961 +0200\n\nMerge pull request #6830\n\nd57586f Add historical release notes for October 2015 bugfix releases (Micha)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34f200d1404dcb93d45f43e249048f4b6eed0197",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34f200d1404dcb93d45f43e249048f4b6eed0197",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34f200d1404dcb93d45f43e249048f4b6eed0197/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      },
      {
        "sha": "d57586f91c6cfe7480ae87b81a041009776a33af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d57586f91c6cfe7480ae87b81a041009776a33af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d57586f91c6cfe7480ae87b81a041009776a33af"
      }
    ],
    "stats": {
      "total": 337,
      "additions": 337,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34f200d1404dcb93d45f43e249048f4b6eed0197/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34f200d1404dcb93d45f43e249048f4b6eed0197/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=34f200d1404dcb93d45f43e249048f4b6eed0197",
        "patch": "@@ -0,0 +1,165 @@\n+Bitcoin Core version 0.10.3 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.10.3/>\n+\n+This is a new minor version release, bringing security fixes and translation \n+updates. It is recommended to upgrade to this version as soon as possible.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility.\n+\n+Notable changes\n+===============\n+\n+Fix buffer overflow in bundled upnp\n+------------------------------------\n+\n+Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n+the XML parser during initial network discovery.\n+\n+Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n+\n+This applies to the distributed executables only, not when building from source or\n+using distribution provided packages.\n+\n+Additionally, upnp has been disabled by default. This may result in a lower\n+number of reachable nodes on IPv4, however this prevents future libupnpc\n+vulnerabilities from being a structural risk to the network\n+(see https://github.com/bitcoin/bitcoin/pull/6795).\n+\n+Test for LowS signatures before relaying\n+-----------------------------------------\n+\n+Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n+relaying or mining.  This removes a nuisance malleability vector.\n+\n+Consensus behavior is unchanged.\n+\n+If widely deployed this change would eliminate the last remaining known vector\n+for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n+it will block most transactions made by sufficiently out of date software.\n+\n+Unlike the other avenues to change txids on transactions this\n+one was randomly violated by all deployed bitcoin software prior to\n+its discovery. So, while other malleability vectors where made\n+non-standard as soon as they were discovered, this one has remained\n+permitted. Even BIP62 did not propose applying this rule to\n+old version transactions, but conforming implementations have become\n+much more common since BIP62 was initially written.\n+\n+Bitcoin Core has produced compatible signatures since a28fb70e in\n+September 2013, but this didn't make it into a release until 0.9\n+in March 2014; Bitcoinj has done so for a similar span of time.\n+Bitcoinjs and electrum have been more recently updated.\n+\n+This does not replace the need for BIP62 or similar, as miners can\n+still cooperate to break transactions.  Nor does it replace the\n+need for wallet software to handle malleability sanely[1]. This\n+only eliminates the cheap and irritating DOS attack.\n+\n+[1] On the Malleability of Bitcoin Transactions\n+Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n+http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+\n+Minimum relay fee default increase\n+-----------------------------------\n+\n+The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n+to `0.00005`.\n+\n+This is necessitated by the current transaction flooding, causing\n+outrageous memory usage on nodes due to the mempool ballooning. This is a\n+temporary measure, bridging the time until a dynamic method for determining\n+this fee is merged (which will be in 0.12).\n+\n+(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11.0\n+release notes, in which this value was suggested)\n+\n+0.10.3 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect external\n+behavior, not code moves, refactors or string updates.\n+\n+- #6186 `e4a7d51` Fix two problems in CSubnet parsing\n+- #6153 `ebd7d8d` Parameter interaction: disable upnp if -proxy set\n+- #6203 `ecc96f5` Remove P2SH coinbase flag, no longer interesting\n+- #6226 `181771b` json: fail read_string if string contains trailing garbage\n+- #6244 `09334e0` configure: Detect (and reject) LibreSSL\n+- #6276 `0fd8464` Fix getbalance * 0\n+- #6274 `be64204` Add option `-alerts` to opt out of alert system\n+- #6319 `3f55638` doc: update mailing list address\n+- #6438 `7e66e9c` openssl: avoid config file load/race\n+- #6439 `255eced` Updated URL location of netinstall for Debian\n+- #6412 `0739e6e` Test whether created sockets are select()able\n+- #6694 `f696ea1` [QT] fix thin space word wrap line brake issue\n+- #6704 `743cc9e` Backport bugfixes to 0.10\n+- #6769 `1cea6b0` Test LowS in standardness, removes nuisance malleability vector.\n+- #6789 `093d7b5` Update miniupnpc to 1.9.20151008\n+- #6795 `f2778e0` net: Disable upnp by default\n+- #6797 `91ef4d9` Do not store more than 200 timedata samples\n+- #6793 `842c48d` Bump minrelaytxfee default\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Adam Weiss\n+- Alex Morcos\n+- Casey Rodarmor\n+- Cory Fields\n+- fanquake\n+- Gregory Maxwell\n+- Jonas Schnelli\n+- J Ross Nicoll\n+- Luke Dashjr\n+- Pavel Vasin\n+- Pieter Wuille\n+- randy-waterhouse\n+- \u0e3ftcDrak\n+- Tom Harding\n+- Veres Lajos\n+- Wladimir J. van der Laan\n+\n+And all those who contributed additional code review and/or security research:\n+\n+- timothy on IRC for reporting the issue\n+- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34f200d1404dcb93d45f43e249048f4b6eed0197/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34f200d1404dcb93d45f43e249048f4b6eed0197/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=34f200d1404dcb93d45f43e249048f4b6eed0197",
        "patch": "@@ -0,0 +1,172 @@\n+Bitcoin Core version 0.11.1 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.11.1/>\n+\n+This is a new minor version release, bringing security fixes. It is recommended\n+to upgrade to this version as soon as possible.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility. There are no\n+known problems when downgrading from 0.11.x to 0.10.x.\n+\n+Notable changes\n+===============\n+\n+Fix buffer overflow in bundled upnp\n+------------------------------------\n+\n+Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n+the XML parser during initial network discovery.\n+\n+Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n+\n+This applies to the distributed executables only, not when building from source or\n+using distribution provided packages.\n+\n+Additionally, upnp has been disabled by default. This may result in a lower\n+number of reachable nodes on IPv4, however this prevents future libupnpc\n+vulnerabilities from being a structural risk to the network\n+(see https://github.com/bitcoin/bitcoin/pull/6795).\n+\n+Test for LowS signatures before relaying\n+-----------------------------------------\n+\n+Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n+relaying or mining.  This removes a nuisance malleability vector.\n+\n+Consensus behavior is unchanged.\n+\n+If widely deployed this change would eliminate the last remaining known vector\n+for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n+it will block most transactions made by sufficiently out of date software.\n+\n+Unlike the other avenues to change txids on transactions this\n+one was randomly violated by all deployed bitcoin software prior to\n+its discovery. So, while other malleability vectors where made\n+non-standard as soon as they were discovered, this one has remained\n+permitted. Even BIP62 did not propose applying this rule to\n+old version transactions, but conforming implementations have become\n+much more common since BIP62 was initially written.\n+\n+Bitcoin Core has produced compatible signatures since a28fb70e in\n+September 2013, but this didn't make it into a release until 0.9\n+in March 2014; Bitcoinj has done so for a similar span of time.\n+Bitcoinjs and electrum have been more recently updated.\n+\n+This does not replace the need for BIP62 or similar, as miners can\n+still cooperate to break transactions.  Nor does it replace the\n+need for wallet software to handle malleability sanely[1]. This\n+only eliminates the cheap and irritating DOS attack.\n+\n+[1] On the Malleability of Bitcoin Transactions\n+Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n+http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+\n+Minimum relay fee default increase\n+-----------------------------------\n+\n+The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n+to `0.00005`.\n+\n+This is necessitated by the current transaction flooding, causing\n+outrageous memory usage on nodes due to the mempool ballooning. This is a\n+temporary measure, bridging the time until a dynamic method for determining\n+this fee is merged (which will be in 0.12).\n+\n+(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11\n+release notes, in which this value was suggested)\n+\n+0.11.1 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+- #6438 `2531438` openssl: avoid config file load/race\n+- #6439 `980f820` Updated URL location of netinstall for Debian\n+- #6384 `8e5a969` qt: Force TLS1.0+ for SSL connections\n+- #6471 `92401c2` Depends: bump to qt 5.5\n+- #6224 `93b606a` Be even stricter in processing unrequested blocks\n+- #6571 `100ac4e` libbitcoinconsensus: avoid a crash in multi-threaded environments\n+- #6545 `649f5d9` Do not store more than 200 timedata samples.\n+- #6694 `834e299` [QT] fix thin space word wrap line break issue\n+- #6703 `1cd7952` Backport bugfixes to 0.11\n+- #6750 `5ed8d0b` Recent rejects backport to v0.11\n+- #6769 `71cc9d9` Test LowS in standardness, removes nuisance malleability vector.\n+- #6789 `b4ad73f` Update miniupnpc to 1.9.20151008\n+- #6785 `b4dc33e` Backport to v0.11: In (strCommand == \"tx\"), return if AlreadyHave()\n+- #6412 `0095b9a` Test whether created sockets are select()able\n+- #6795 `4dbcec0` net: Disable upnp by default\n+- #6793 `e7bcc4a` Bump minrelaytxfee default\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Adam Weiss\n+- Alex Morcos\n+- Casey Rodarmor\n+- Cory Fields\n+- fanquake\n+- Gregory Maxwell\n+- Jonas Schnelli\n+- J Ross Nicoll\n+- Luke Dashjr\n+- Pavel Jan\u00edk\n+- Pavel Vasin\n+- Peter Todd\n+- Pieter Wuille\n+- randy-waterhouse\n+- Ross Nicoll\n+- Suhas Daftuar\n+- tailsjoin\n+- \u0e3ftcDrak\n+- Tom Harding\n+- Veres Lajos\n+- Wladimir J. van der Laan\n+\n+And those who contributed additional code review and/or security research:\n+\n+- timothy on IRC for reporting the issue\n+- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      }
    ]
  },
  {
    "sha": "fa6b405f059444840eaa5022241cd29421bff994",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTZiNDA1ZjA1OTQ0NDg0MGVhYTUwMjIyNDFjZDI5NDIxYmZmOTk0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-15T10:52:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-15T10:52:34Z"
      },
      "message": "Merge pull request #6823\n\nf8f2ace trivial: use constants for db keys (Daniel Kraft)",
      "tree": {
        "sha": "3e201ae650784faa493504ca9411dddb7798acd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e201ae650784faa493504ca9411dddb7798acd1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6b405f059444840eaa5022241cd29421bff994",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWH4VyAAoJEHSBCwEjRsmmK34H/3hIcBT9DscoogpJJZ5Zr+5B\nVL2aqITP/SZrq23OdzRQ5N/xEl3R0imo9jjEshjtYyxr5n9Il2iR7GEeAs3vdN8P\nCtGR4ylvCQnz0mLJnZSI16Uonkka3yzkbO5YifodorsnI3LyI5VnVLUdll+k/M5r\nO4NrlqqsfL5imPsO2lFP7oSxOo/GsvPOqu2L4M5iZG5hGM9xr+NGUq9dL9HnU/uH\nC6nUAFN0KS7ceZTjKVz2KcIhkvZBoBidGozN/YIT51/abg1sMae70ZNbCo5BDUF9\n8FdZogsMnUJGN0wfKqTktFWgrRKmDtUM+VAk7aQgsVTTR47jvnsFQOaP45hM7VI=\n=bYIX\n-----END PGP SIGNATURE-----",
        "payload": "tree 3e201ae650784faa493504ca9411dddb7798acd1\nparent 34f200d1404dcb93d45f43e249048f4b6eed0197\nparent f8f2aceadd5f406f8bc6f6029b032d00828e6256\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444906347 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444906354 +0200\n\nMerge pull request #6823\n\nf8f2ace trivial: use constants for db keys (Daniel Kraft)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6b405f059444840eaa5022241cd29421bff994",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6b405f059444840eaa5022241cd29421bff994",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6b405f059444840eaa5022241cd29421bff994/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34f200d1404dcb93d45f43e249048f4b6eed0197",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34f200d1404dcb93d45f43e249048f4b6eed0197",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34f200d1404dcb93d45f43e249048f4b6eed0197"
      },
      {
        "sha": "f8f2aceadd5f406f8bc6f6029b032d00828e6256",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8f2aceadd5f406f8bc6f6029b032d00828e6256",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8f2aceadd5f406f8bc6f6029b032d00828e6256"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a441aea688325b896f80039bf2839d9478a634fd",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6b405f059444840eaa5022241cd29421bff994/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6b405f059444840eaa5022241cd29421bff994/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=fa6b405f059444840eaa5022241cd29421bff994",
        "patch": "@@ -99,7 +99,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n        only need read operations on it, use a const-cast to get around\n        that restriction.  */\n     boost::scoped_ptr<CLevelDBIterator> pcursor(const_cast<CLevelDBWrapper*>(&db)->NewIterator());\n-    pcursor->Seek('c');\n+    pcursor->Seek(DB_COINS);\n \n     CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n     stats.hashBlock = GetBestBlock();\n@@ -109,7 +109,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n         boost::this_thread::interruption_point();\n         std::pair<char, uint256> key;\n         CCoins coins;\n-        if (pcursor->GetKey(key) && key.first == 'c') {\n+        if (pcursor->GetKey(key) && key.first == DB_COINS) {\n             if (pcursor->GetValue(coins)) {\n                 stats.nTransactions++;\n                 for (unsigned int i=0; i<coins.vout.size(); i++) {\n@@ -179,13 +179,13 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n {\n     boost::scoped_ptr<CLevelDBIterator> pcursor(NewIterator());\n \n-    pcursor->Seek(make_pair('b', uint256()));\n+    pcursor->Seek(make_pair(DB_BLOCK_INDEX, uint256()));\n \n     // Load mapBlockIndex\n     while (pcursor->Valid()) {\n         boost::this_thread::interruption_point();\n         std::pair<char, uint256> key;\n-        if (pcursor->GetKey(key) && key.first == 'b') {\n+        if (pcursor->GetKey(key) && key.first == DB_BLOCK_INDEX) {\n             CDiskBlockIndex diskindex;\n             if (pcursor->GetValue(diskindex)) {\n                 // Construct block index object"
      }
    ]
  },
  {
    "sha": "8ce992063510b38fe7de89bec7af1d33aeeb5c93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Y2U5OTIwNjM1MTBiMzhmZTdkZTg5YmVjN2FmMWQzM2FlZWI1Yzkz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-15T10:54:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-15T10:54:13Z"
      },
      "message": "Merge pull request #6817\n\na0d5e0d [doc] Cleanup release-process documentation (Michael)",
      "tree": {
        "sha": "77bf87aa3176253952993bc1d804d890e816bc10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77bf87aa3176253952993bc1d804d890e816bc10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ce992063510b38fe7de89bec7af1d33aeeb5c93",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWH4XVAAoJEHSBCwEjRsmmyQoH/jd1MyWwTPy+BTLNT4xaRR0X\n1IZNl7D++9VmW9imgEP3mkmpOwEmgaWZ0E1uSMW95IgUNLClcSVbgx9nTAAyZPSU\nIikKsdbgtN8HVUl/HSKfyVFP860BcXvziClIu4aniocq1hINKO/1KQnw42Aranks\n5ewVWvaWJuGlOiS7nxsB+22zaCmfBYl+OpfdrVLLSda+MST5/UI4j97BPDitpz5i\npgIK9ZWsTWsYQt3o9r45gO4QXs5OBuWHhOMZPSW1yCc3ZQ0ah7ZwiIglhVavMvV6\nnAS3kPF3uutoTGwOMBlMAsLGjZbs+kYJhogX1UQC1LUSXzU6soW6O5T4//OqltI=\n=lHEn\n-----END PGP SIGNATURE-----",
        "payload": "tree 77bf87aa3176253952993bc1d804d890e816bc10\nparent fa6b405f059444840eaa5022241cd29421bff994\nparent a0d5e0d2f488a6249e01d00cbf864ca0e81894e3\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444906446 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444906453 +0200\n\nMerge pull request #6817\n\na0d5e0d [doc] Cleanup release-process documentation (Michael)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ce992063510b38fe7de89bec7af1d33aeeb5c93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ce992063510b38fe7de89bec7af1d33aeeb5c93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ce992063510b38fe7de89bec7af1d33aeeb5c93/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa6b405f059444840eaa5022241cd29421bff994",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6b405f059444840eaa5022241cd29421bff994",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6b405f059444840eaa5022241cd29421bff994"
      },
      {
        "sha": "a0d5e0d2f488a6249e01d00cbf864ca0e81894e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0d5e0d2f488a6249e01d00cbf864ca0e81894e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0d5e0d2f488a6249e01d00cbf864ca0e81894e3"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 23,
      "deletions": 24
    },
    "files": [
      {
        "sha": "a562c98dbe7c88e10c939b710342d2176df9be7b",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 23,
        "deletions": 24,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ce992063510b38fe7de89bec7af1d33aeeb5c93/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ce992063510b38fe7de89bec7af1d33aeeb5c93/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=8ce992063510b38fe7de89bec7af1d33aeeb5c93",
        "patch": "@@ -1,65 +1,67 @@\n Release Process\n ====================\n \n-* update translations (ping wumpus, Diapolo or tcatm on IRC)\n-* see https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#syncing-with-transifex\n+* Update translations (ping wumpus, Diapolo or tcatm on IRC) see [translation_process.md](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#syncing-with-transifex)\n+* Update [bips.md](bips.md) to account for changes since the last release.\n \n * * *\n \n-###first time only or for new builders, check out the source in the following directory hierarchy\n+###First time / New builders \n+Check out the source code in the following directory hierarchy.\n \n \tcd /path/to/your/toplevel/build\n \tgit clone https://github.com/bitcoin/gitian.sigs.git\n+\tgit clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n \tgit clone https://github.com/devrandom/gitian-builder.git\n \tgit clone https://github.com/bitcoin/bitcoin.git\n \n-###for bitcoin maintainers/release engineers, update (commit) version in sources\n+###Bitcoin maintainers/release engineers, update (commit) version in sources\n \n \tpushd ./bitcoin\n \tcontrib/verifysfbinaries/verify.sh\n \tdoc/README*\n \tshare/setup.nsi\n \tsrc/clientversion.h (change CLIENT_VERSION_IS_RELEASE to true)\n \n-###for bitcoin maintainers/release engineers, tag version in git\n+\t# tag version in git\n \n \tgit tag -s v(new version, e.g. 0.8.0)\n \n-###for bitcoin maintainers/release engineers, write release notes. git shortlog helps a lot, for example:\n+\t# write release notes. git shortlog helps a lot, for example:\n \n \tgit shortlog --no-merges v(current version, e.g. 0.7.2)..v(new version, e.g. 0.8.0)\n \tpopd\n \n * * *\n \n-###update gitian, gitian.sigs, checkout bitcoin version, and perform gitian builds\n+###Setup and perform gitian builds\n \n- To ensure your gitian descriptors are accurate for direct reference for gbuild, below, run the following from a directory containing the bitcoin source:\n+ Setup gitian descriptors:\n   \n \tpushd ./bitcoin\n \texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n \tgit checkout v${VERSION}\n \tpopd\n \n-  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures:\n+  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures.\n \n \tpushd ./gitian.sigs\n \tgit pull\n \tpopd\n \n-  Ensure your gitian-builder sources are up-to-date to take advantage of the new caching features of gitian (`e9741525c` or later is recommended)\n+  Ensure gitian-builder is up-to-date to take advantage of new caching features (`e9741525c` or later is recommended).\n \n \tpushd ./gitian-builder\n \tgit pull\n \n-###fetch and create inputs: (first time, or when dependency versions change)\n+###Fetch and create inputs: (first time, or when dependency versions change)\n  \n \tmkdir -p inputs\n \twget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n \twget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n \n- Register and download the Apple SDK: (see OSX Readme for details)\n+ Register and download the Apple SDK: see [OSX readme](README_osx.txt) for details.\n  \n  https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_6.1.1/xcode_6.1.1.dmg\n  \n@@ -75,15 +77,11 @@ By default, gitian will fetch source files as needed. To cache them ahead of tim\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n-Clone the detached-sigs repository:\n-\n-\tpopd\n-\tgit clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n-\tpushd ./bitcoin-builder\n-\n-NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs.\n-For example: ./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n-The following gbuild invocations DO NOT DO THIS by default.\n+NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs. For example: \n+```\n+./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+```\n+The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n ###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n   \n@@ -126,8 +124,9 @@ Commit your signature to gitian.sigs:\n \tpopd\n \n   Wait for Windows/OSX detached signatures:\n+\n \tOnce the Windows/OSX builds each have 3 matching signatures, they will be signed with their respective release keys.\n-\tDetached signatures will then be committed to the bitcoin-detached-sigs repository, which can be combined with the unsigned apps to create signed binaries.\n+\tDetached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n   Create (and optionally verify) the signed OSX binary:\n \n@@ -176,14 +175,14 @@ Note: check that SHA256SUMS itself doesn't end up in SHA256SUMS, which is a spur\n - Update bitcoin.org version\n \n   - First, check to see if the Bitcoin.org maintainers have prepared a\n-    release: https://github.com/bitcoin/bitcoin.org/labels/Releases\n+    release: https://github.com/bitcoin-dot-org/bitcoin.org/labels/Releases\n \n       - If they have, it will have previously failed their Travis CI\n         checks because the final release files weren't uploaded.\n         Trigger a Travis CI rebuild---if it passes, merge.\n \n   - If they have not prepared a release, follow the Bitcoin.org release\n-    instructions: https://github.com/bitcoin/bitcoin.org#release-notes\n+    instructions: https://github.com/bitcoin-dot-org/bitcoin.org#release-notes\n \n   - After the pull request is merged, the website will automatically show the newest version within 15 minutes, as well\n     as update the OS download links. Ping @saivann/@harding (saivann/harding on Freenode) in case anything goes wrong"
      }
    ]
  },
  {
    "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzhhODgwOTAwYzE1YzdhMjhhZTgxZTY2MzIwOTBmMjVmZWE3ZmNl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-15T10:55:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-15T10:55:25Z"
      },
      "message": "Merge pull request #6820\n\n60af755 build: univalue subdir build fixups (Cory Fields)",
      "tree": {
        "sha": "f40bd5e37cbec02730e9d7689bfee1dabd914347",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f40bd5e37cbec02730e9d7689bfee1dabd914347"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWH4YdAAoJEHSBCwEjRsmmfdgIAIDawVMU9I8GdFhl+jYabv+w\nWgVU0kfdQOhI9iu/F6XDzjZZQboVNlFbmPCOUeMbdEIG67x5jD5/ZwxPuYg3gTaY\nI4HrIClha7EguqhutzRPHB+/Sh8mzOSI9WJZSPqVZ/TFwEnKcS+kTkB89a/Wv5FR\n1auurP0DLnA/Sg82T4bfG0ClYQiE2RqWSvd1WayPa20galq8kb2SEGzSxkTge+6H\n0O/z4/YC5ott8mSyTmBAild7BbVmMrZYY11LgkFHJIBj14IUmbrJU0k+/8dpK2zS\n/VeEQStke+UAYwiC6ELU0dpV6TbZfMuVM6NsyTR9N47AZkzJhCZlT2XbSBBnynI=\n=5YLF\n-----END PGP SIGNATURE-----",
        "payload": "tree f40bd5e37cbec02730e9d7689bfee1dabd914347\nparent 8ce992063510b38fe7de89bec7af1d33aeeb5c93\nparent 60af755e56dc08f54c993ce0c044f3ff203b3f59\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1444906521 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1444906525 +0200\n\nMerge pull request #6820\n\n60af755 build: univalue subdir build fixups (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ce992063510b38fe7de89bec7af1d33aeeb5c93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ce992063510b38fe7de89bec7af1d33aeeb5c93",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ce992063510b38fe7de89bec7af1d33aeeb5c93"
      },
      {
        "sha": "60af755e56dc08f54c993ce0c044f3ff203b3f59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60af755e56dc08f54c993ce0c044f3ff203b3f59",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60af755e56dc08f54c993ce0c044f3ff203b3f59"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0a16a863eb5e647b7f11a8f419bbd675fd27640e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78a880900c15c7a28ae81e6632090f25fea7fce/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78a880900c15c7a28ae81e6632090f25fea7fce/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d78a880900c15c7a28ae81e6632090f25fea7fce",
        "patch": "@@ -36,8 +36,8 @@ LIBUNIVALUE=univalue/libunivalue.la\n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n   \n-$(LIBUNIVALUE): $(wildcard univalue/lib/*)\n-\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue/\n+$(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)\n+\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n \n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n@@ -421,6 +421,7 @@ EXTRA_DIST = leveldb\n clean-local:\n \t-$(MAKE) -C leveldb clean\n \t-$(MAKE) -C secp256k1 clean\n+\t-$(MAKE) -C univalue clean\n \trm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno\n \t-rm -f config.h\n "
      }
    ]
  },
  {
    "sha": "b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDhkYTVjMTg5NGE3MGY4ZmEyYTUwZGViMmUwNTZjMzhlZDI3ZWNi",
    "commit": {
      "author": {
        "name": "David Hill",
        "email": "dhill@mindcry.org",
        "date": "2015-10-13T13:56:45Z"
      },
      "committer": {
        "name": "David Hill",
        "email": "dhill@mindcry.org",
        "date": "2015-10-15T13:48:15Z"
      },
      "message": "script:  Remove magic numbers\n\nThis adds two new constants, MAX_OPS_PER_SCRIPT and\nMAX_PUBKEYS_PER_MULTISIG.",
      "tree": {
        "sha": "39578acf78c9cfd4029d8b98bf1d05863058abcd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39578acf78c9cfd4029d8b98bf1d05863058abcd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb/comments",
    "author": {
      "login": "dajohi",
      "id": 3308193,
      "node_id": "MDQ6VXNlcjMzMDgxOTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3308193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dajohi",
      "html_url": "https://github.com/dajohi",
      "followers_url": "https://api.github.com/users/dajohi/followers",
      "following_url": "https://api.github.com/users/dajohi/following{/other_user}",
      "gists_url": "https://api.github.com/users/dajohi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dajohi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dajohi/subscriptions",
      "organizations_url": "https://api.github.com/users/dajohi/orgs",
      "repos_url": "https://api.github.com/users/dajohi/repos",
      "events_url": "https://api.github.com/users/dajohi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dajohi/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dajohi",
      "id": 3308193,
      "node_id": "MDQ6VXNlcjMzMDgxOTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3308193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dajohi",
      "html_url": "https://github.com/dajohi",
      "followers_url": "https://api.github.com/users/dajohi/followers",
      "following_url": "https://api.github.com/users/dajohi/following{/other_user}",
      "gists_url": "https://api.github.com/users/dajohi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dajohi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dajohi/subscriptions",
      "organizations_url": "https://api.github.com/users/dajohi/orgs",
      "repos_url": "https://api.github.com/users/dajohi/repos",
      "events_url": "https://api.github.com/users/dajohi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dajohi/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6a20d497c0492c5b1ff74eaae9fdcb4d506bbb50",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
        "patch": "@@ -273,7 +273,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                 return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n \n             // Note how OP_RESERVED does not count towards the opcode limit.\n-            if (opcode > OP_16 && ++nOpCount > 201)\n+            if (opcode > OP_16 && ++nOpCount > MAX_OPS_PER_SCRIPT)\n                 return set_error(serror, SCRIPT_ERR_OP_COUNT);\n \n             if (opcode == OP_CAT ||\n@@ -869,10 +869,10 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n \n                     int nKeysCount = CScriptNum(stacktop(-i), fRequireMinimal).getint();\n-                    if (nKeysCount < 0 || nKeysCount > 20)\n+                    if (nKeysCount < 0 || nKeysCount > MAX_PUBKEYS_PER_MULTISIG)\n                         return set_error(serror, SCRIPT_ERR_PUBKEY_COUNT);\n                     nOpCount += nKeysCount;\n-                    if (nOpCount > 201)\n+                    if (nOpCount > MAX_OPS_PER_SCRIPT)\n                         return set_error(serror, SCRIPT_ERR_OP_COUNT);\n                     int ikey = ++i;\n                     i += nKeysCount;"
      },
      {
        "sha": "263c89defe58309da0c8c5e9d063f1985d80247a",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
        "patch": "@@ -170,7 +170,7 @@ unsigned int CScript::GetSigOpCount(bool fAccurate) const\n             if (fAccurate && lastOpcode >= OP_1 && lastOpcode <= OP_16)\n                 n += DecodeOP_N(lastOpcode);\n             else\n-                n += 20;\n+                n += MAX_PUBKEYS_PER_MULTISIG;\n         }\n         lastOpcode = opcode;\n     }"
      },
      {
        "sha": "a38d33a1894ad57052b7e0bb56d560300f49d87c",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
        "patch": "@@ -17,7 +17,14 @@\n #include <string>\n #include <vector>\n \n-static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n+// Maximum number of bytes pushable to the stack\n+static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520;\n+\n+// Maximum number of non-push operations per script\n+static const int MAX_OPS_PER_SCRIPT = 201;\n+\n+// Maximum number of public keys per multisig\n+static const int MAX_PUBKEYS_PER_MULTISIG = 20;\n \n // Threshold for nLockTime: below this value it is interpreted as block number,\n // otherwise as UNIX timestamp."
      }
    ]
  },
  {
    "sha": "338f62f701169a241221f4195d78d51d98b59ba8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzhmNjJmNzAxMTY5YTI0MTIyMWY0MTk1ZDc4ZDUxZDk4YjU5YmE4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-09T13:49:29Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-15T17:43:16Z"
      },
      "message": "[devtools] add clang-format.py",
      "tree": {
        "sha": "85f27c56fe45742571689e4c10a8d637e1f5fccc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85f27c56fe45742571689e4c10a8d637e1f5fccc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/338f62f701169a241221f4195d78d51d98b59ba8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/338f62f701169a241221f4195d78d51d98b59ba8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/338f62f701169a241221f4195d78d51d98b59ba8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/338f62f701169a241221f4195d78d51d98b59ba8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf73b0cd4cf510aafc37719c68e6634c1719502",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf73b0cd4cf510aafc37719c68e6634c1719502"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 62,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cee99047ac67e69fe767a910ac56811e574cfc8d",
        "filename": "contrib/devtools/clang-format.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/338f62f701169a241221f4195d78d51d98b59ba8/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/338f62f701169a241221f4195d78d51d98b59ba8/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=338f62f701169a241221f4195d78d51d98b59ba8",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python\n+'''\n+Wrapper script for clang-format\n+\n+Copyright (c) 2015 MarcoFalke\n+Copyright (c) 2015 The Bitcoin Core developers\n+Distributed under the MIT software license, see the accompanying\n+file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+import os\n+import sys\n+import subprocess\n+\n+tested_versions = ['3.6.0', '3.6.1', '3.6.2'] # A set of versions known to produce the same output\n+accepted_file_extensions = ('.h', '.cpp') # Files to format\n+\n+def check_clang_format_version(clang_format_exe):\n+    try:\n+        output = subprocess.check_output([clang_format_exe, '-version'])\n+        for ver in tested_versions:\n+            if ver in output:\n+                print \"Detected clang-format version \" + ver\n+                return\n+        raise RuntimeError(\"Untested version: \" + output)\n+    except Exception as e:\n+        print 'Could not verify version of ' + clang_format_exe + '.'\n+        raise e\n+\n+def check_command_line_args(argv):\n+    required_args = ['{clang-format-exe}', '{files}']\n+    example_args = ['clang-format-3.x', 'src/main.cpp', 'src/wallet/*']\n+\n+    if(len(argv) < len(required_args) + 1):\n+        for word in (['Usage:', argv[0]] + required_args):\n+            print word,\n+        print ''\n+        for word in (['E.g:', argv[0]] + example_args):\n+            print word,\n+        print ''\n+        sys.exit(1)\n+\n+def run_clang_format(clang_format_exe, files):\n+    for target in files:\n+        if os.path.isdir(target):\n+            for path, dirs, files in os.walk(target):\n+                run_clang_format(clang_format_exe, (os.path.join(path, f) for f in files))\n+        elif target.endswith(accepted_file_extensions):\n+            print \"Format \" + target\n+            subprocess.check_call([clang_format_exe, '-i', '-style=file', target], stdout=open(os.devnull, 'wb'), stderr=subprocess.STDOUT)\n+        else:\n+            print \"Skip \" + target\n+\n+def main(argv):\n+    check_command_line_args(argv)\n+    clang_format_exe = argv[1]\n+    files = argv[2:]\n+    check_clang_format_version(clang_format_exe)\n+    run_clang_format(clang_format_exe, files)\n+\n+if __name__ == \"__main__\":\n+    main(sys.argv)"
      }
    ]
  },
  {
    "sha": "8c15f33d15fddd984946b56a257049e15ddf4038",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzE1ZjMzZDE1ZmRkZDk4NDk0NmI1NmEyNTcwNDllMTVkZGY0MDM4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-15T17:42:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-15T18:28:29Z"
      },
      "message": "[trivial] Update contrib/devtools/README.md",
      "tree": {
        "sha": "f118dd5d49a4fc92d6a046969bdf88d73eae812c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f118dd5d49a4fc92d6a046969bdf88d73eae812c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c15f33d15fddd984946b56a257049e15ddf4038",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c15f33d15fddd984946b56a257049e15ddf4038",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c15f33d15fddd984946b56a257049e15ddf4038",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c15f33d15fddd984946b56a257049e15ddf4038/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "338f62f701169a241221f4195d78d51d98b59ba8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/338f62f701169a241221f4195d78d51d98b59ba8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/338f62f701169a241221f4195d78d51d98b59ba8"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 20,
      "deletions": 6
    },
    "files": [
      {
        "sha": "278794f14cadcfd035ddda6f42d1358cdb487504",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 20,
        "deletions": 6,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c15f33d15fddd984946b56a257049e15ddf4038/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c15f33d15fddd984946b56a257049e15ddf4038/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=8c15f33d15fddd984946b56a257049e15ddf4038",
        "patch": "@@ -1,9 +1,14 @@\n Contents\n-===========\n+========\n This directory contains tools for developers working on this repository.\n \n+clang-format.py\n+===============\n+\n+A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n+\n github-merge.sh\n-==================\n+===============\n \n A small script to automate merging pull-requests securely and sign them with GPG.\n \n@@ -37,23 +42,31 @@ Configuring the github-merge tool for the bitcoin repository is done in the foll\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n fix-copyright-headers.py\n-===========================\n+========================\n \n Every year newly updated files need to have its copyright headers updated to reflect the current year.\n If you run this script from src/ it will automatically update the year on the copyright header for all\n .cpp and .h files if these have a git commit from the current year.\n \n For example a file changed in 2014 (with 2014 being the current year):\n+\n ```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n \n would be changed to:\n+\n ```// Copyright (c) 2009-2014 The Bitcoin Core developers```\n \n+optimize-pngs.py\n+================\n+\n+A script to optimize png files in the bitcoin\n+repository (requires pngcrush).\n+\n symbol-check.py\n-==================\n+===============\n \n A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n+allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n still compatible with the minimum supported Linux distribution versions.\n \n Example usage after a gitian build:\n@@ -70,7 +83,7 @@ If there are 'unsupported' symbols, the return value will be 1 a list like this\n     .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n update-translations.py\n-=======================\n+======================\n \n Run this script from the root of the repository to update all translations from transifex.\n It will do the following automatically:\n@@ -93,4 +106,5 @@ maintained:\n * for sec/leveldb: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n \n Usage: git-subtree-check.sh DIR COMMIT\n+\n COMMIT may be omitted, in which case HEAD is used."
      }
    ]
  },
  {
    "sha": "0658d0ba8262a51c30278389cf0c1204934db9f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjU4ZDBiYTgyNjJhNTFjMzAyNzgzODljZjBjMTIwNDkzNGRiOWYz",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-10-15T18:37:59Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-10-16T14:27:03Z"
      },
      "message": "temporarily comment out rpcbind.py\n\nuntil libevent is fixed.  also remove duplicate commented-out forknotify.py.",
      "tree": {
        "sha": "6eea254cead596af2826e7954622929b77cdbfc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6eea254cead596af2826e7954622929b77cdbfc2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0658d0ba8262a51c30278389cf0c1204934db9f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0658d0ba8262a51c30278389cf0c1204934db9f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0658d0ba8262a51c30278389cf0c1204934db9f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0658d0ba8262a51c30278389cf0c1204934db9f3/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "65a021bbc21b4266c85b93541889a5c083843309",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0658d0ba8262a51c30278389cf0c1204934db9f3/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0658d0ba8262a51c30278389cf0c1204934db9f3/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=0658d0ba8262a51c30278389cf0c1204934db9f3",
        "patch": "@@ -81,12 +81,11 @@\n     'invalidateblock.py',\n     'keypool.py',\n     'receivedby.py',\n-    'rpcbind_test.py',\n-#   'script_test.py',\n+#    'rpcbind_test.py', #temporary, bug in libevent, see #6655\n+#   'script_test.py', #used for manual comparison of 2 binaries\n     'smartfees.py',\n     'maxblocksinflight.py',\n     'invalidblockrequest.py',\n-#    'forknotify.py',\n     'p2p-acceptblock.py',\n     'mempool_packages.py',\n ]"
      }
    ]
  },
  {
    "sha": "b6d5e32e0e5b038c6ff7e2ab5221b10727722341",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmQ1ZTMyZTBlNWIwMzhjNmZmN2UyYWI1MjIxYjEwNzI3NzIyMzQx",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-10-16T20:54:03Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-10-17T19:52:40Z"
      },
      "message": "Make fee aware of min relay in pruning.py RPC test",
      "tree": {
        "sha": "ff99390949cb6bc92ad71fc1eb2ac00dd444faf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff99390949cb6bc92ad71fc1eb2ac00dd444faf3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6d5e32e0e5b038c6ff7e2ab5221b10727722341",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6d5e32e0e5b038c6ff7e2ab5221b10727722341",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b6d5e32e0e5b038c6ff7e2ab5221b10727722341",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6d5e32e0e5b038c6ff7e2ab5221b10727722341/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "21f8d69382d02055141f1a57829b8e6aaf217d9f",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6d5e32e0e5b038c6ff7e2ab5221b10727722341/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6d5e32e0e5b038c6ff7e2ab5221b10727722341/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=b6d5e32e0e5b038c6ff7e2ab5221b10727722341",
        "patch": "@@ -61,6 +61,9 @@ def setup_network(self):\n         self.address[0] = self.nodes[0].getnewaddress()\n         self.address[1] = self.nodes[1].getnewaddress()\n \n+        # Determine default relay fee\n+        self.relayfee = self.nodes[0].getnetworkinfo()[\"relayfee\"]\n+\n         connect_nodes(self.nodes[0], 1)\n         connect_nodes(self.nodes[1], 2)\n         connect_nodes(self.nodes[2], 0)\n@@ -239,7 +242,7 @@ def mine_full_block(self, node, address):\n             outputs = {}\n             t = self.utxo.pop()\n             inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]})\n-            remchange = t[\"amount\"] - Decimal(\"0.001000\")\n+            remchange = t[\"amount\"] - 100*self.relayfee # Fee must be above min relay rate for 66kb tx\n             outputs[address]=remchange\n             # Create a basic transaction that will send change back to ourself after account for a fee\n             # And then insert the 128 generated transaction outs in the middle rawtx[92] is where the #"
      }
    ]
  },
  {
    "sha": "99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTk2M2I5MzhmZmI0YWQzN2Y0YTlkMjc1OTk4YmYxYTlkYzExZTY0",
    "commit": {
      "author": {
        "name": "Mitchell Cash",
        "email": "mitchell.cash@gmail.com",
        "date": "2015-10-17T10:10:45Z"
      },
      "committer": {
        "name": "Mitchell Cash",
        "email": "mitchell.cash@gmail.com",
        "date": "2015-10-17T20:25:43Z"
      },
      "message": "Correct spelling mistakes in doc folder\n\n- OSX \u2014> OS X\n- XCode \u2014> Xcode\n- github \u2014> GitHub\n- homebrew \u2014> Homebrew\n- gitian \u2014> Gitian\n- Other miscellaneous obvious spelling fixes and whitespace removal",
      "tree": {
        "sha": "8d14d5301951a96d682b404e0ea0b247fd0eded1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d14d5301951a96d682b404e0ea0b247fd0eded1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/comments",
    "author": {
      "login": "MitchellCash",
      "id": 8009243,
      "node_id": "MDQ6VXNlcjgwMDkyNDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8009243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MitchellCash",
      "html_url": "https://github.com/MitchellCash",
      "followers_url": "https://api.github.com/users/MitchellCash/followers",
      "following_url": "https://api.github.com/users/MitchellCash/following{/other_user}",
      "gists_url": "https://api.github.com/users/MitchellCash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MitchellCash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MitchellCash/subscriptions",
      "organizations_url": "https://api.github.com/users/MitchellCash/orgs",
      "repos_url": "https://api.github.com/users/MitchellCash/repos",
      "events_url": "https://api.github.com/users/MitchellCash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MitchellCash/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MitchellCash",
      "id": 8009243,
      "node_id": "MDQ6VXNlcjgwMDkyNDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8009243?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MitchellCash",
      "html_url": "https://github.com/MitchellCash",
      "followers_url": "https://api.github.com/users/MitchellCash/followers",
      "following_url": "https://api.github.com/users/MitchellCash/following{/other_user}",
      "gists_url": "https://api.github.com/users/MitchellCash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MitchellCash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MitchellCash/subscriptions",
      "organizations_url": "https://api.github.com/users/MitchellCash/orgs",
      "repos_url": "https://api.github.com/users/MitchellCash/repos",
      "events_url": "https://api.github.com/users/MitchellCash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MitchellCash/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 202,
      "additions": 99,
      "deletions": 103
    },
    "files": [
      {
        "sha": "08fd724355b6099dd7747b33beadd26ea0ddf667",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -7,7 +7,7 @@ Setup\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform. \n+The following are some helpful notes on how to run Bitcoin on your native platform.\n \n ### Unix\n \n@@ -26,7 +26,7 @@ Unpack the files into a directory and run:\n \n Unpack the files into a directory, and then run bitcoin-qt.exe.\n \n-### OSX\n+### OS X\n \n Drag Bitcoin-Qt to your applications folder, and then run Bitcoin-Qt.\n \n@@ -41,7 +41,7 @@ Building\n ---------------------\n The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n-- [OSX Build Notes](build-osx.md)\n+- [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n - [Gitian Building Guide](gitian-building.md)\n "
      },
      {
        "sha": "f589bfc676f5c313e68403cd1948915fd852f23b",
        "filename": "doc/README_osx.txt",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/README_osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/README_osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.txt?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -1,12 +1,12 @@\n-Deterministic OSX Dmg Notes.\n+Deterministic OS X Dmg Notes.\n \n-Working OSX DMGs are created in Linux by combining a recent clang,\n+Working OS X DMGs are created in Linux by combining a recent clang,\n the Apple's binutils (ld, ar, etc), and DMG authoring tools.\n \n Apple uses clang extensively for development and has upstreamed the necessary\n functionality so that a vanilla clang can take advantage. It supports the use\n of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n-when building for OSX. A pre-compiled version of 3.2 is used because it was not\n+when building for OS X. A pre-compiled version of 3.2 is used because it was not\n available in the Precise repositories at the time this work was started. In the\n future, it can be switched to use system packages instead.\n \n@@ -29,18 +29,18 @@ originally done in toolchain4.\n \n To complicate things further, all builds must target an Apple SDK. These SDKs\n are free to download, but not redistributable.\n-To obtain it, register for a developer account, then download the XCode 6.1.1 dmg:\n+To obtain it, register for a developer account, then download the Xcode 6.1.1 dmg:\n https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_6.1.1/xcode_6.1.1.dmg\n \n This file is several gigabytes in size, but only a single directory inside is\n needed: Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk\n \n Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n-To create a tarball suitable for gitian input, mount the dmg in OSX, then create it with:\n+To create a tarball suitable for Gitian input, mount the dmg in OS X, then create it with:\n   $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk\n \n \n-The gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n+The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n which are created using these tools. The build process has been designed to\n avoid including the SDK's files in Gitian's outputs. All interim tarballs are\n fully deterministic and may be freely redistributed.\n@@ -64,20 +64,20 @@ Ideally, the creation could be fixed and genisoimage would no longer be necessar\n \n Background images and other features can be added to DMG files by inserting a\n .DS_Store before creation. The easiest way to create this file is to build a\n-DMG without one, move it to a device running OSX, customize the layout, then\n+DMG without one, move it to a device running OS X, customize the layout, then\n grab the .DS_Store file for later use. That is the approach taken here.\n \n-As of OSX Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n+As of OS X Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n requirement in order to satisfy the new Gatekeeper requirements. Because this\n private key cannot be shared, we'll have to be a bit creative in order for the\n build process to remain somewhat deterministic. Here's how it works:\n \n-- Builders use gitian to create an unsigned release. This outputs an unsigned\n+- Builders use Gitian to create an unsigned release. This outputs an unsigned\n   dmg which users may choose to bless and run. It also outputs an unsigned app\n   structure in the form of a tarball, which also contains all of the tools\n   that have been previously (deterministically) built in order to create a\n   final dmg.\n - The Apple keyholder uses this unsigned app to create a detached signature,\n   using the script that is also included there.\n-- Builders feed the unsigned app + detached signature back into gitian. It\n+- Builders feed the unsigned app + detached signature back into Gitian. It\n   uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "d923301467a7f0ae394accd19cd7362feff3120a",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -38,7 +38,7 @@ Do not use `pkg_add boost`! The boost version installed thus is compiled using t\n \n     test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n     ...\n-    Segmentation fault (core dumped) \n+    Segmentation fault (core dumped)\n \n This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n \n@@ -57,7 +57,7 @@ tar -xjf boost_1_59_0.tar.bz2\n # Boost 1.59 needs two small patches for OpenBSD\n cd boost_1_59_0\n # Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n-patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp \n+patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n # https://github.com/boostorg/filesystem/commit/90517e459681790a091566dce27ca3acabf9a70c\n sed 's/__OPEN_BSD__/__OpenBSD__/g' < libs/filesystem/src/path.cpp > libs/filesystem/src/path.cpp.tmp\n mv libs/filesystem/src/path.cpp.tmp libs/filesystem/src/path.cpp\n@@ -92,7 +92,7 @@ tar -xzf db-4.8.30.NC.tar.gz\n # Build the library and install to specified prefix\n cd db-4.8.30.NC/build_unix/\n #  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n-../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp \n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp\n make install\n ```\n \n@@ -160,4 +160,3 @@ version installed by OpenBSD 5.7:\n - https://llvm.org/bugs/show_bug.cgi?id=9758\n \n There is no known workaround for this.\n-"
      },
      {
        "sha": "69c401b751ee9ef8538c9191993b8a9a3ea7e35d",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -1,6 +1,6 @@\n Mac OS X Build Instructions and Notes\n ====================================\n-This guide will show you how to build bitcoind (headless client) for OSX.\n+This guide will show you how to build bitcoind (headless client) for OS X.\n \n Notes\n -----\n@@ -13,8 +13,8 @@ built-in one is located in `/Applications/Utilities`.\n Preparation\n -----------\n \n-You need to install XCode with all the options checked so that the compiler\n-and everything is available in /usr not just /Developer. XCode should be\n+You need to install Xcode with all the options checked so that the compiler\n+and everything is available in /usr not just /Developer. Xcode should be\n available on your OS X installation media, but if not, you can get the\n current version from https://developer.apple.com/xcode/. If you install\n Xcode 4.3 or later, you'll need to install its command line tools. This can\n@@ -38,7 +38,7 @@ NOTE: Building with Qt4 is still supported, however, could result in a broken UI\n \n ### Building `bitcoind`\n \n-1. Clone the github tree to get the source code and go into the directory.\n+1. Clone the GitHub tree to get the source code and go into the directory.\n \n         git clone https://github.com/bitcoin/bitcoin.git\n         cd bitcoin\n@@ -62,7 +62,7 @@ Use Qt Creator as IDE\n You can use Qt Creator as IDE, for debugging and for manipulating forms, etc.\n Download Qt Creator from http://www.qt.io/download/. Download the \"community edition\" and only install Qt Creator (uncheck the rest during the installation process).\n \n-1. Make sure you installed everything through homebrew mentioned above \n+1. Make sure you installed everything through Homebrew mentioned above\n 2. Do a proper ./configure --with-gui=qt5 --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n 4. Enter \"bitcoin-qt\" as project name, enter src/qt as location"
      },
      {
        "sha": "4189d221878bee2d58ff9c6cf2327d31a0d53dff",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -57,7 +57,7 @@ As Doxygen recognizes the comments by the delimiters (`/**` and `*/` in this cas\n \n To describe a class use the same construct above the class definition:\n ```c++\n-/** \n+/**\n  * Alerts are for notifying old versions if they become too obsolete and\n  * need to upgrade. The message is displayed in the status bar.\n  * @see GetWarnings()"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -7,7 +7,7 @@ As such, DNS seeds must be run by entities which have some minimum\n level of trust within the Bitcoin community.\n \n Other implementations of Bitcoin software may also use the same\n-seeds and may be more exposed. In light of this exposure, this \n+seeds and may be more exposed. In light of this exposure, this\n document establishes some basic expectations for operating dnsseeds.\n \n 0. A DNS seed operating organization or person is expected to follow good"
      },
      {
        "sha": "00fdce82e81a1886f2ac3f8846c8e4c2900d0c92",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 38,
        "deletions": 38,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -1,7 +1,7 @@\n Gitian building\n ================\n \n-*Setup instructions for a gitian build of Bitcoin using a Debian VM or physical system.*\n+*Setup instructions for a Gitian build of Bitcoin using a Debian VM or physical system.*\n \n Gitian is the deterministic build process that is used to build the Bitcoin\n Core executables. It provides a way to be reasonably sure that the\n@@ -13,7 +13,7 @@ Multiple developers build the source code by following a specific descriptor\n These results are compared and only if they match, the build is accepted and uploaded\n to bitcoin.org.\n \n-More independent gitian builders are needed, which is why this guide exists. \n+More independent Gitian builders are needed, which is why this guide exists.\n It is preferred you follow these steps yourself instead of using someone else's\n VM image to avoid 'contaminating' the build.\n \n@@ -22,9 +22,9 @@ Table of Contents\n \n - [Create a new VirtualBox VM](#create-a-new-virtualbox-vm)\n - [Connecting to the VM](#connecting-to-the-vm)\n-- [Setting up Debian for gitian building](#setting-up-debian-for-gitian-building)\n-- [Installing gitian](#installing-gitian)\n-- [Setting up the gitian image](#setting-up-the-gitian-image)\n+- [Setting up Debian for Gitian building](#setting-up-debian-for-gitian-building)\n+- [Installing Gitian](#installing-gitian)\n+- [Setting up the Gitian image](#setting-up-the-gitian-image)\n - [Getting and building the inputs](#getting-and-building-the-inputs)\n - [Building Bitcoin](#building-bitcoin)\n - [Building an alternative repository](#building-an-alternative-repository)\n@@ -43,7 +43,7 @@ Any kind of virtualization can be used, for example:\n - [KVM](http://www.linux-kvm.org/page/Main_Page)\n - [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n \n-You can also install gitian on actual hardware instead of using virtualization.\n+You can also install Gitian on actual hardware instead of using virtualization.\n \n Create a new VirtualBox VM\n ---------------------------\n@@ -60,18 +60,18 @@ In the VirtualBox GUI click \"Create\" and choose the following parameters in the\n ![](gitian-building/create_vm_hard_disk.png)\n \n - Hard Disk: Create a virtual hard disk now\n-    \n+\n ![](gitian-building/create_vm_hard_disk_file_type.png)\n \n-- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image) \n+- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image)\n \n ![](gitian-building/create_vm_storage_physical_hard_disk.png)\n-    \n-- Storage on physical hard disk: Dynamically Allocated \n-    \n+\n+- Storage on physical hard disk: Dynamically Allocated\n+\n ![](gitian-building/create_vm_file_location_size.png)\n \n-- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n+- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side\n - Click `Create`\n \n Get the [Debian 8.x net installer](http://cdimage.debian.org/debian-cd/8.2.0/amd64/iso-cd/debian-8.2.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n@@ -81,7 +81,7 @@ Unixy OSes by entering the following in a terminal:\n     echo \"d393d17ac6b3113c81186e545c416a00f28ed6e05774284bb5e8f0df39fcbcb9  debian-8.2.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n-After creating the VM, we need to configure it. \n+After creating the VM, we need to configure it.\n \n - Click the `Settings` button, then go to the `Network` tab. Adapter 1 should be attached to `NAT`.\n \n@@ -115,8 +115,8 @@ This section will explain how to install Debian on the newly created VM.\n \n ![](gitian-building/debian_install_1_boot_menu.png)\n \n-**Note**: Navigating in the Debian installer: \n-To keep a setting at the default and proceed, just press `Enter`. \n+**Note**: Navigating in the Debian installer:\n+To keep a setting at the default and proceed, just press `Enter`.\n To select a different button, press `Tab`.\n \n - Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n@@ -126,23 +126,23 @@ To select a different button, press `Tab`.\n ![](gitian-building/debian_install_4_configure_keyboard.png)\n \n - The VM will detect network settings using DHCP, this should all proceed automatically\n-- Configure the network: \n+- Configure the network:\n   - Hostname `debian`.\n   - Leave domain name empty.\n \n ![](gitian-building/debian_install_5_configure_the_network.png)\n \n-- Choose a root password and enter it twice (remember it for later) \n+- Choose a root password and enter it twice (remember it for later)\n \n ![](gitian-building/debian_install_6a_set_up_root_password.png)\n \n-- Name the new user `debian` (the full name doesn't matter, you can leave it empty) \n+- Name the new user `debian` (the full name doesn't matter, you can leave it empty)\n - Set the account username as `debian`\n \n ![](gitian-building/debian_install_7_set_up_user_fullname.png)\n ![](gitian-building/debian_install_8_set_up_username.png)\n \n-- Choose a user password and enter it twice (remember it for later) \n+- Choose a user password and enter it twice (remember it for later)\n \n ![](gitian-building/debian_install_9_user_password.png)\n \n@@ -152,11 +152,11 @@ To select a different button, press `Tab`.\n ![](gitian-building/debian_install_10_configure_clock.png)\n \n - Disk setup\n-  - Partitioning method: Guided - Use the entire disk \n-  \n+  - Partitioning method: Guided - Use the entire disk\n+\n ![](gitian-building/debian_install_11_partition_disks.png)\n \n-  - Select disk to partition: SCSI1 (0,0,0) \n+  - Select disk to partition: SCSI1 (0,0,0)\n \n ![](gitian-building/debian_install_12_choose_disk.png)\n \n@@ -166,7 +166,7 @@ To select a different button, press `Tab`.\n ![](gitian-building/debian_install_15_write_changes.png)\n \n - The base system will be installed, this will take a minute or so\n-- Choose a mirror (any will do) \n+- Choose a mirror (any will do)\n \n ![](gitian-building/debian_install_16_choose_a_mirror.png)\n \n@@ -201,7 +201,7 @@ After Installation\n The next step in the guide involves logging in as root via SSH.\n SSH login for root users is disabled by default, so we'll enable that now.\n \n-Login to the VM using username `root` and the root password you choose earlier.\n+Login to the VM using username `root` and the root password you chose earlier.\n You'll be presented with a screen similar to this.\n \n ![](gitian-building/debian_root_login.png)\n@@ -243,7 +243,7 @@ For example, to connect as `root` from a Linux command prompt use\n \n Replace `root` with `debian` to log in as user.\n \n-Setting up Debian for gitian building\n+Setting up Debian for Gitian building\n --------------------------------------\n \n In this section we will be setting up the Debian installation for Gitian building.\n@@ -260,7 +260,7 @@ Then set up LXC and the rest with the following, which is a complex jumble of se\n \n ```bash\n # the version of lxc-start in Debian 7.4 needs to run as root, so make sure\n-# that the build script can exectute it without providing a password\n+# that the build script can execute it without providing a password\n echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n # add cgroup for LXC\n echo \"cgroup  /sys/fs/cgroup  cgroup  defaults  0   0\" >> /etc/fstab\n@@ -280,7 +280,7 @@ reboot\n At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n section only need to be performed once.\n \n-Installing gitian\n+Installing Gitian\n ------------------\n \n Re-login as the user `debian` that was created during installation.\n@@ -300,14 +300,14 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and gitian.\n+Clone the git repositories for bitcoin and Gitian.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n git clone https://github.com/bitcoin/bitcoin\n ```\n \n-Setting up the gitian image\n+Setting up the Gitian image\n -------------------------\n \n Gitian needs a virtual image of the operating system to build in.\n@@ -333,14 +333,14 @@ Getting and building the inputs\n Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)\n in the bitcoin repository under 'Fetch and build inputs' to install sources which require\n manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n-and offline git repositories' which will fetch the remaining files required for building \n+and offline git repositories' which will fetch the remaining files required for building\n offline.\n \n Building Bitcoin\n ----------------\n \n-To build Bitcoin (for Linux, OSX and Windows) just follow the steps under 'perform\n-gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n+To build Bitcoin (for Linux, OS X and Windows) just follow the steps under 'perform\n+Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n \n This may take some time as it will build all the dependencies needed for each descriptor.\n These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n@@ -380,7 +380,7 @@ Building an alternative repository\n -----------------------------------\n \n If you want to do a test build of a pull on GitHub it can be useful to point\n-the gitian builder at an alternative repository, using the same descriptors\n+the Gitian builder at an alternative repository, using the same descriptors\n and inputs.\n \n For example:\n@@ -395,9 +395,9 @@ COMMIT=2014_03_windows_unicode_path\n Building fully offline\n -----------------------\n \n-For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository \n+For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n-told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or \n+told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n manually disabling gitian-builder's use of apt-get to update the VM build environment.\n \n To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n@@ -417,7 +417,7 @@ LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root \\\n   -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n   $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get -q -y purge grub\n-LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade \n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n ```\n \n And then set offline mode for apt-cacher-ng:\n@@ -431,7 +431,7 @@ Offlinemode: 1\n service apt-cacher-ng restart\n ```\n \n-Then when building, override the remote URLs that gbuild would otherwise pull from the gitian descriptors::\n+Then when building, override the remote URLs that gbuild would otherwise pull from the Gitian descriptors::\n ```bash\n \n cd /some/root/path/\n@@ -461,7 +461,7 @@ in `gitian.sigs` to your signing machine and do\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n-gitian build.\n+Gitian build.\n \n Uploading signatures\n ---------------------"
      },
      {
        "sha": "d24c2d1dbf49cbf7108df1e99d3261215ae253be",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -29,20 +29,20 @@ file, however it is recommended that a strong and secure password be used\n as this password is security critical to securing the wallet should the\n wallet be enabled.\n \n-If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set, \n-it will use a special cookie file for authentication. The cookie is generated with random \n+If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n+it will use a special cookie file for authentication. The cookie is generated with random\n content when the daemon starts, and deleted when it exits. Read access to this file\n-controls who can access it through RPC. \n+controls who can access it through RPC.\n \n-By default the cookie is stored in the data directory, but it's location can be overridden \n+By default the cookie is stored in the data directory, but it's location can be overridden\n with the option '-rpccookiefile'.\n \n This allows for running bitcoind without having to do any manual configuration.\n \n-`conf`, `pid`, and `wallet` accept relative paths which are interpreted as \n+`conf`, `pid`, and `wallet` accept relative paths which are interpreted as\n relative to the data directory. `wallet` *only* supports relative paths.\n \n-For an example configuration file that describes the configuration settings, \n+For an example configuration file that describes the configuration settings,\n see `contrib/debian/examples/bitcoin.conf`.\n \n 3. Paths\n@@ -93,13 +93,12 @@ use old versions of Upstart and do not supply the start-stop-daemon utility.\n \n Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n \n-Using this script, you can adjust the path and flags to the bitcoind program by \n-setting the BITCOIND and FLAGS environment variables in the file \n+Using this script, you can adjust the path and flags to the bitcoind program by\n+setting the BITCOIND and FLAGS environment variables in the file\n /etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n \n 5. Auto-respawn\n -----------------------------------\n \n Auto respawning is currently only configured for Upstart and systemd.\n Reasonable defaults have been chosen but YMMV.\n-"
      },
      {
        "sha": "e9b2d75a760ce734d789dd7d3452310dabeca2cb",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -181,7 +181,7 @@ configured specifically to process scriptPubKey and not scriptSig scripts.\n \n - Removed bitrpc.py from contrib\n \n-Addition of ZMQ-based Notifcations\n+Addition of ZMQ-based Notifications\n ==================================\n \n Bitcoind can now (optionally) asynchronously notify clients through a"
      },
      {
        "sha": "9a2362cb8506884c43a3791c92fe94e8bd2d4f01",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -6,7 +6,7 @@ Release Process\n \n * * *\n \n-###First time / New builders \n+###First time / New builders\n Check out the source code in the following directory hierarchy.\n \n \tcd /path/to/your/toplevel/build\n@@ -34,17 +34,17 @@ Check out the source code in the following directory hierarchy.\n \n * * *\n \n-###Setup and perform gitian builds\n+###Setup and perform Gitian builds\n+\n+ Setup Gitian descriptors:\n \n- Setup gitian descriptors:\n-  \n \tpushd ./bitcoin\n-\texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n+\texport SIGNER=(your Gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n \tgit checkout v${VERSION}\n \tpopd\n \n-  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures.\n+  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other Gitian signatures.\n \n \tpushd ./gitian.sigs\n \tgit pull\n@@ -56,35 +56,35 @@ Check out the source code in the following directory hierarchy.\n \tgit pull\n \n ###Fetch and create inputs: (first time, or when dependency versions change)\n- \n+\n \tmkdir -p inputs\n \twget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n \twget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n \n- Register and download the Apple SDK: see [OSX readme](README_osx.txt) for details.\n- \n+ Register and download the Apple SDK: see [OS X readme](README_osx.txt) for details.\n+\n  https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_6.1.1/xcode_6.1.1.dmg\n- \n+\n  Using a Mac, create a tarball for the 10.9 SDK and copy it to the inputs directory:\n- \n+\n \ttar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk\n \n ###Optional: Seed the Gitian sources cache and offline git repositories\n \n-By default, gitian will fetch source files as needed. To cache them ahead of time:\n+By default, Gitian will fetch source files as needed. To cache them ahead of time:\n \n \tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n-NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs. For example: \n+NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from local URLs. For example:\n ```\n-./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+./bin/gbuild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n ```\n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n ###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n-  \n+\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n@@ -108,8 +108,8 @@ The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n   1. source tarball (bitcoin-${VERSION}.tar.gz)\n   2. linux 32-bit and 64-bit dist tarballs (bitcoin-${VERSION}-linux[32|64].tar.gz)\n   3. windows 32-bit and 64-bit unsigned installers and dist zips (bitcoin-${VERSION}-win[32|64]-setup-unsigned.exe, bitcoin-${VERSION}-win[32|64].zip)\n-  4. OSX unsigned installer and dist tarball (bitcoin-${VERSION}-osx-unsigned.dmg, bitcoin-${VERSION}-osx64.tar.gz)\n-  5. Gitian signatures (in gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your gitian key)/\n+  4. OS X unsigned installer and dist tarball (bitcoin-${VERSION}-osx-unsigned.dmg, bitcoin-${VERSION}-osx64.tar.gz)\n+  5. Gitian signatures (in gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/\n \n ###Next steps:\n \n@@ -123,12 +123,12 @@ Commit your signature to gitian.sigs:\n \tgit push  # Assuming you can push to the gitian.sigs tree\n \tpopd\n \n-  Wait for Windows/OSX detached signatures:\n+  Wait for Windows/OS X detached signatures:\n \n-\tOnce the Windows/OSX builds each have 3 matching signatures, they will be signed with their respective release keys.\n+\tOnce the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n \tDetached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n-  Create (and optionally verify) the signed OSX binary:\n+  Create (and optionally verify) the signed OS X binary:\n \n \tpushd ./gitian-builder\n \t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n@@ -147,7 +147,7 @@ Commit your signature to gitian.sigs:\n \tmv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n \tpopd\n \n-Commit your signature for the signed OSX/Windows binaries:\n+Commit your signature for the signed OS X/Windows binaries:\n \n \tpushd gitian.sigs\n \tgit add ${VERSION}-osx-signed/${SIGNER}"
      },
      {
        "sha": "594897f89670716ad845596dccd5cc7ff6253586",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -15,15 +15,15 @@ outgoing connections be anonymized, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n \t                server will be used to try to reach .onion addresses as well.\n-\t\n+\n \t-onion=ip:port  Set the proxy server to use for tor hidden services. You do not\n \t                need to set this if it's the same as -proxy. You can use -noonion\n \t                to explicitly disable access to hidden service.\n-\t\n+\n \t-listen         When using -proxy, listening is disabled by default. If you want\n \t                to run a hidden service (see next section), you'll need to enable\n \t                it explicitly.\n-\t\n+\n \t-connect=X      When behind a Tor proxy, you can specify .onion addresses instead\n \t-addnode=X      of IP addresses or hostnames in these parameters. It requires\n \t-seednode=X     SOCKS5. In Tor mode, such addresses can also be exchanged with\n@@ -55,10 +55,10 @@ your bitcoind's P2P listen port (8333 by default).\n \t                preference for your node to advertize itself with, for connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n \t                Tor proxy typically runs).\n-\t\n+\n \t-listen         You'll need to enable listening for incoming connections, as this\n \t                is off by default behind a proxy.\n-\t\n+\n \t-discover       When -externalip is specified, no attempt is made to discover local\n \t                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n \t                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n@@ -87,4 +87,3 @@ If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n \t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n-"
      },
      {
        "sha": "6389c5acedf7929598892c879efc1855e8ae096e",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -1,7 +1,7 @@\n Translations\n ============\n \n-The Bitcoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Bitcoin-Core makes use of the Transifex online translation management tool. \n+The Bitcoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Bitcoin-Core makes use of the Transifex online translation management tool.\n \n ### Helping to translate (using Transifex)\n Transifex is setup to monitor the Github repo for updates, and when code containing new translations is found, Transifex will process any changes. It may take several hours after a pull-request has been merged, to appear in the Transifex web interface."
      },
      {
        "sha": "936a6112c65f83956a0dc8260d96f65b56b847ec",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -1,7 +1,7 @@\n Translation Strings Policy\n ===========================\n \n-This document provides guidelines for internationalization of the Bitcoin Core software. \n+This document provides guidelines for internationalization of the Bitcoin Core software.\n \n How to translate?\n ------------------\n@@ -107,4 +107,3 @@ The second example reduces the number of pluralized words that translators have\n During a string freeze (often before a major release), no translation strings are to be added, modified or removed.\n \n This can be checked by executing `make translate` in the `src` directory, then verifying that `bitcoin_en.ts` remains unchanged.\n-"
      },
      {
        "sha": "902d1124c766de4e51ffc14f37a84e88f0624b1c",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99963b938ffb4ad37f4a9d275998bf1a9dc11e64/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "patch": "@@ -2,7 +2,7 @@\n \n [ZeroMQ](http://zeromq.org/) is a lightweight wrapper around TCP\n connections, inter-process communication, and shared-memory,\n-providing various message-oriented semantics such as publish/subcribe,\n+providing various message-oriented semantics such as publish/subscribe,\n request/reply, and push/pull.\n \n The Bitcoin Core daemon can be configured to act as a trusted \"border"
      }
    ]
  },
  {
    "sha": "c6824f8a90e33277de4db826bf1c65692a67be47",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjgyNGY4YTkwZTMzMjc3ZGU0ZGI4MjZiZjFjNjU2OTJhNjdiZTQ3",
    "commit": {
      "author": {
        "name": "J Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2015-10-18T16:27:41Z"
      },
      "committer": {
        "name": "J Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2015-10-18T16:27:41Z"
      },
      "message": "Add DERSIG transaction test cases\n\nAdd test cases for DERSIG flag enforcement against transactions.",
      "tree": {
        "sha": "04c84bdd38a721326dd3e13e576c01f41740b6b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04c84bdd38a721326dd3e13e576c01f41740b6b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6824f8a90e33277de4db826bf1c65692a67be47",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6824f8a90e33277de4db826bf1c65692a67be47",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c6824f8a90e33277de4db826bf1c65692a67be47",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6824f8a90e33277de4db826bf1c65692a67be47/comments",
    "author": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d3c859434255bc626c744986e4fb066b64813faa",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6824f8a90e33277de4db826bf1c65692a67be47/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6824f8a90e33277de4db826bf1c65692a67be47/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=c6824f8a90e33277de4db826bf1c65692a67be47",
        "patch": "@@ -193,5 +193,9 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"HASH160 0x14 0xc5b93064159b3b2d6ab506a41b1f50463771b988 EQUAL\"]],\n \"0100000001000100000000000000000000000000000000000000000000000000000000000000000000030251b1000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n \n+[\"A transaction with a non-standard DER signature.\"],\n+[[[\"b1dbc81696c8a9c0fccd0693ab66d7c368dbc38c0def4e800685560ddd1b2132\", 0, \"DUP HASH160 0x14 0x4b3bd7eba3bc0284fd3007be7f3be275e94f5826 EQUALVERIFY CHECKSIG\"]],\n+\"010000000132211bdd0d568506804eef0d8cc3db68c3d766ab9306cdfcc0a9c89616c8dbb1000000006c493045022100c7bb0faea0522e74ff220c20c022d2cb6033f8d167fb89e75a50e237a35fd6d202203064713491b1f8ad5f79e623d0219ad32510bfaa1009ab30cbee77b59317d6e30001210237af13eb2d84e4545af287b919c2282019c9691cc509e78e196a9d8274ed1be0ffffffff0100000000000000001976a914f1b3ed2eda9a2ebe5a9374f692877cdf87c0f95b88ac00000000\", \"P2SH,DERSIG\"],\n+\n [\"Make diffs cleaner by leaving a comment here without comma at the end\"]\n ]"
      },
      {
        "sha": "0dfef73ae5e2bf3c2adf38fbe88184ebb4171424",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6824f8a90e33277de4db826bf1c65692a67be47/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6824f8a90e33277de4db826bf1c65692a67be47/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=c6824f8a90e33277de4db826bf1c65692a67be47",
        "patch": "@@ -229,5 +229,9 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"HASH160 0x14 0xc5b93064159b3b2d6ab506a41b1f50463771b988 EQUAL\"]],\n \"0100000001000100000000000000000000000000000000000000000000000000000000000000000000030251b1000000000100000000000000000001000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n \n+[\"A transaction with a non-standard DER signature.\"],\n+[[[\"b1dbc81696c8a9c0fccd0693ab66d7c368dbc38c0def4e800685560ddd1b2132\", 0, \"DUP HASH160 0x14 0x4b3bd7eba3bc0284fd3007be7f3be275e94f5826 EQUALVERIFY CHECKSIG\"]],\n+\"010000000132211bdd0d568506804eef0d8cc3db68c3d766ab9306cdfcc0a9c89616c8dbb1000000006c493045022100c7bb0faea0522e74ff220c20c022d2cb6033f8d167fb89e75a50e237a35fd6d202203064713491b1f8ad5f79e623d0219ad32510bfaa1009ab30cbee77b59317d6e30001210237af13eb2d84e4545af287b919c2282019c9691cc509e78e196a9d8274ed1be0ffffffff0100000000000000001976a914f1b3ed2eda9a2ebe5a9374f692877cdf87c0f95b88ac00000000\", \"P2SH\"],\n+\n [\"Make diffs cleaner by leaving a comment here without comma at the end\"]\n ]"
      }
    ]
  },
  {
    "sha": "d2e3fbc620550d133f7569c32927b889c3a4953b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmUzZmJjNjIwNTUwZDEzM2Y3NTY5YzMyOTI3Yjg4OWMzYTQ5NTNi",
    "commit": {
      "author": {
        "name": "Thomas Kerin",
        "email": "afk11@users.noreply.github.com",
        "date": "2015-10-18T18:04:14Z"
      },
      "committer": {
        "name": "Thomas Kerin",
        "email": "afk11@users.noreply.github.com",
        "date": "2015-10-18T18:04:14Z"
      },
      "message": "Mention PHP bindings to libbitcoinconsensus",
      "tree": {
        "sha": "86c3e3513a59b5aeb67e6125f26e283b934edcda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86c3e3513a59b5aeb67e6125f26e283b934edcda"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2e3fbc620550d133f7569c32927b889c3a4953b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABCgAGBQJWI98eAAoJEAiDZR291eTltpwP/002Us48Fld71KzdEi2F3sZs\nOZXh1jBCadxSn2eK0ThDg0YCCn9lAn06ic83IyCkGuBjUizxuvenYY6soXQHXOu7\nzBZFi2/Ne5QDItW3QBOEwgtHYwInPji1BBla1TmNWEIzilrgnSJnd53PwBwufmkC\nDTgX9KqgIkshoal80o+QV20hHNFukI6rZQcnHZUkuq6RR3k+MT+/vlHLJUARbfql\nX36HG9+p+Yjrc0QHmZPKPx1eBp8anIbPyw9DmUilKvO+OLK83ciqhiVh27gcfodK\ny4T9htr1IgmuLE4lcGzQWp0jYSNrUraD/Cm+R3k5e++S9ndFEP4NxDhCHf11plln\nm4MxxTm6vuQq6fhEoOURmU+sWlJ3Cwh1JoDhaHVvx/jijYDq6Ca+mxALMyBmWumC\nmxZq4PhYaxx54WbmBLBzKussHUPqAleLrDo3JPDkIjOYoMgQ0NMQffN8Jdxk4jQ6\nmNw6a5UrQXn75KLnnz0Ux5hVuv2i6hsKa4wi/MF2qz2Gogqf43f6+lXUxv19o5Pn\nxAlQNefLMLpLFevacZurNHuQ1eCkx2L/tC4lofCtRQx9FayXE6gxIBk0+CQo/56f\nPdQh6wYgjh2xcw1WxpnZWN94c7S4RqHFluNjWndveQPOfrd2X/ut7I235fSjFAC7\nKDh4lH/sbMYw7oLpjtQ9\n=on9x\n-----END PGP SIGNATURE-----",
        "payload": "tree 86c3e3513a59b5aeb67e6125f26e283b934edcda\nparent d78a880900c15c7a28ae81e6632090f25fea7fce\nauthor Thomas Kerin <afk11@users.noreply.github.com> 1445191454 +0100\ncommitter Thomas Kerin <afk11@users.noreply.github.com> 1445191454 +0100\n\nMention PHP bindings to libbitcoinconsensus\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e3fbc620550d133f7569c32927b889c3a4953b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2e3fbc620550d133f7569c32927b889c3a4953b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e3fbc620550d133f7569c32927b889c3a4953b/comments",
    "author": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f4ff53d6e925948fc08eb55aff2fb7e713556dcd",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2e3fbc620550d133f7569c32927b889c3a4953b/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2e3fbc620550d133f7569c32927b889c3a4953b/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=d2e3fbc620550d133f7569c32927b889c3a4953b",
        "patch": "@@ -41,3 +41,4 @@ The interface is defined in the C header `bitcoinconsensus.h` located in  `src/s\n - [NBitcoin](https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814) (.NET Bindings)\n - [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n - [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)\n+- [bitcoinconsensus-php](https://github.com/Bit-Wasp/bitcoinconsensus-php) (PHP Bindings)"
      }
    ]
  },
  {
    "sha": "5888046323dd867fb1eec7e616bb26eef964733e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODg4MDQ2MzIzZGQ4NjdmYjFlZWM3ZTYxNmJiMjZlZWY5NjQ3MzNl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T09:28:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T09:29:25Z"
      },
      "message": "Merge pull request #6849\n\nd2e3fbc Mention PHP bindings to libbitcoinconsensus (Thomas Kerin)",
      "tree": {
        "sha": "86c3e3513a59b5aeb67e6125f26e283b934edcda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86c3e3513a59b5aeb67e6125f26e283b934edcda"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5888046323dd867fb1eec7e616bb26eef964733e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJLf1AAoJEHSBCwEjRsmm3tMIALPTm1isaGVTTFyQXSIfZu/c\no2yDKcqD3kUrnXy2weXBJVY+MVeqRpcWXgs8A9eUVlrUecKduXvuiXV4FBxCPl5O\nI+jmzT6DqupdbY4O4WwgyuSfg5gWbWLuKPg8thuO2gS3fwVytrJhX5zJ/y2Vji3K\nUM6vG6uNXkQZgqGUxtjWky0XEQxL83XeX/klWf0vFqkLSEBATO5rRg9IqzuhVy8w\nbMsDi9GKrQDa0s8iWbft69ekH5OxbM60JJf43N8MMFPQ1+cd80eppmf5qwlcRoMe\nWC21Y5d9SSVY5Dc3XBW5mwzZOIEV/IqRUwwti1uA/mnXcf3p+Iy4YUZXZJcHLC4=\n=7mCz\n-----END PGP SIGNATURE-----",
        "payload": "tree 86c3e3513a59b5aeb67e6125f26e283b934edcda\nparent d78a880900c15c7a28ae81e6632090f25fea7fce\nparent d2e3fbc620550d133f7569c32927b889c3a4953b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445246904 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445246965 +0200\n\nMerge pull request #6849\n\nd2e3fbc Mention PHP bindings to libbitcoinconsensus (Thomas Kerin)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5888046323dd867fb1eec7e616bb26eef964733e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5888046323dd867fb1eec7e616bb26eef964733e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5888046323dd867fb1eec7e616bb26eef964733e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      },
      {
        "sha": "d2e3fbc620550d133f7569c32927b889c3a4953b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2e3fbc620550d133f7569c32927b889c3a4953b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2e3fbc620550d133f7569c32927b889c3a4953b"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f4ff53d6e925948fc08eb55aff2fb7e713556dcd",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5888046323dd867fb1eec7e616bb26eef964733e/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5888046323dd867fb1eec7e616bb26eef964733e/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=5888046323dd867fb1eec7e616bb26eef964733e",
        "patch": "@@ -41,3 +41,4 @@ The interface is defined in the C header `bitcoinconsensus.h` located in  `src/s\n - [NBitcoin](https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814) (.NET Bindings)\n - [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n - [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)\n+- [bitcoinconsensus-php](https://github.com/Bit-Wasp/bitcoinconsensus-php) (PHP Bindings)"
      }
    ]
  },
  {
    "sha": "58254aa3bc2e92840679183cc884eb76670af525",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODI1NGFhM2JjMmU5Mjg0MDY3OTE4M2NjODg0ZWI3NjY3MGFmNTI1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-19T09:40:25Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-19T09:41:52Z"
      },
      "message": "Fix stale comment in CTxMemPool::TrimToSize.",
      "tree": {
        "sha": "db223b51f357eaf8c9aba7b14e1e675f8fcd9124",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db223b51f357eaf8c9aba7b14e1e675f8fcd9124"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58254aa3bc2e92840679183cc884eb76670af525",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58254aa3bc2e92840679183cc884eb76670af525",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58254aa3bc2e92840679183cc884eb76670af525",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58254aa3bc2e92840679183cc884eb76670af525/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2bc50187ee6b6a3e4dfaa23bf292d63ad2915945",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bc50187ee6b6a3e4dfaa23bf292d63ad2915945",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2bc50187ee6b6a3e4dfaa23bf292d63ad2915945"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "bb148005cd274de57d0888a7b8d20497ef5aa79d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58254aa3bc2e92840679183cc884eb76670af525/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58254aa3bc2e92840679183cc884eb76670af525/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=58254aa3bc2e92840679183cc884eb76670af525",
        "patch": "@@ -903,10 +903,10 @@ void CTxMemPool::TrimToSize(size_t sizelimit) {\n     while (DynamicMemoryUsage() > sizelimit) {\n         indexed_transaction_set::nth_index<1>::type::iterator it = mapTx.get<1>().begin();\n \n-        // We set the new mempool min fee to either the feerate of the removed set,\n-        // or the \"minimum reasonable fee rate\" (ie some value under which we consider\n-        // txn to have 0 fee). This way, if the mempool reaches its full size on free\n-        // txn, we will simply disable free txn until there is a block, and some time.\n+        // We set the new mempool min fee to the feerate of the removed set, plus the\n+        // \"minimum reasonable fee rate\" (ie some value under which we consider txn\n+        // to have 0 fee). This way, we don't allow txn to enter mempool with feerate\n+        // equal to txn which were removed with no block in between.\n         CFeeRate removed(it->GetFeesWithDescendants(), it->GetSizeWithDescendants());\n         removed += minReasonableRelayFee;\n         trackPackageRemoved(removed);"
      }
    ]
  },
  {
    "sha": "fc41278e96890473c14916e2f7e0aa61e99c9849",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzQxMjc4ZTk2ODkwNDczYzE0OTE2ZTJmN2UwYWE2MWU5OWM5ODQ5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T10:00:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T10:01:07Z"
      },
      "message": "Merge pull request #6843\n\n99963b9 Correct spelling mistakes in doc folder (Mitchell Cash)",
      "tree": {
        "sha": "31596dc3908032a5eaa4eb9de5faf681f6ccccd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31596dc3908032a5eaa4eb9de5faf681f6ccccd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc41278e96890473c14916e2f7e0aa61e99c9849",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJL9jAAoJEHSBCwEjRsmmkcgH/ArFJf0ecCfThU4ytR02cldH\nvNNRsQIS84OIpOPDAc63yqZk5ppTohKshth4updhTzgOU1KDqiHgRsm25TExun7K\nx/uy2dHIosLX+Jdp080O8zvYmUghc1fDAPmpSzzEfTP1ARWVFNIvEzRHsH3DtOYJ\nTYNCVqVqxauj/Z2O+Sa9p5Xm5vXvLg4YTrQLJYQrrRBHcZv1VDtlwom7il9lCGLa\nPQ91j19ZRrklvMUeTfejR07uES4bi8zCegcTD2yROc9E6RWFh+utD6jJIkG/SBVj\noen/qENTKAsFSvENpi9hRhalEFXJXLsj0JEHv3SGQUg/9zWAAtHOEesBQ+6V5X4=\n=Vh/N\n-----END PGP SIGNATURE-----",
        "payload": "tree 31596dc3908032a5eaa4eb9de5faf681f6ccccd7\nparent 5888046323dd867fb1eec7e616bb26eef964733e\nparent 99963b938ffb4ad37f4a9d275998bf1a9dc11e64\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445248858 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445248867 +0200\n\nMerge pull request #6843\n\n99963b9 Correct spelling mistakes in doc folder (Mitchell Cash)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc41278e96890473c14916e2f7e0aa61e99c9849",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc41278e96890473c14916e2f7e0aa61e99c9849",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc41278e96890473c14916e2f7e0aa61e99c9849/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5888046323dd867fb1eec7e616bb26eef964733e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5888046323dd867fb1eec7e616bb26eef964733e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5888046323dd867fb1eec7e616bb26eef964733e"
      },
      {
        "sha": "99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99963b938ffb4ad37f4a9d275998bf1a9dc11e64",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99963b938ffb4ad37f4a9d275998bf1a9dc11e64"
      }
    ],
    "stats": {
      "total": 202,
      "additions": 99,
      "deletions": 103
    },
    "files": [
      {
        "sha": "08fd724355b6099dd7747b33beadd26ea0ddf667",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -7,7 +7,7 @@ Setup\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform. \n+The following are some helpful notes on how to run Bitcoin on your native platform.\n \n ### Unix\n \n@@ -26,7 +26,7 @@ Unpack the files into a directory and run:\n \n Unpack the files into a directory, and then run bitcoin-qt.exe.\n \n-### OSX\n+### OS X\n \n Drag Bitcoin-Qt to your applications folder, and then run Bitcoin-Qt.\n \n@@ -41,7 +41,7 @@ Building\n ---------------------\n The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n-- [OSX Build Notes](build-osx.md)\n+- [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n - [Gitian Building Guide](gitian-building.md)\n "
      },
      {
        "sha": "f589bfc676f5c313e68403cd1948915fd852f23b",
        "filename": "doc/README_osx.txt",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/README_osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/README_osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.txt?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -1,12 +1,12 @@\n-Deterministic OSX Dmg Notes.\n+Deterministic OS X Dmg Notes.\n \n-Working OSX DMGs are created in Linux by combining a recent clang,\n+Working OS X DMGs are created in Linux by combining a recent clang,\n the Apple's binutils (ld, ar, etc), and DMG authoring tools.\n \n Apple uses clang extensively for development and has upstreamed the necessary\n functionality so that a vanilla clang can take advantage. It supports the use\n of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n-when building for OSX. A pre-compiled version of 3.2 is used because it was not\n+when building for OS X. A pre-compiled version of 3.2 is used because it was not\n available in the Precise repositories at the time this work was started. In the\n future, it can be switched to use system packages instead.\n \n@@ -29,18 +29,18 @@ originally done in toolchain4.\n \n To complicate things further, all builds must target an Apple SDK. These SDKs\n are free to download, but not redistributable.\n-To obtain it, register for a developer account, then download the XCode 6.1.1 dmg:\n+To obtain it, register for a developer account, then download the Xcode 6.1.1 dmg:\n https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_6.1.1/xcode_6.1.1.dmg\n \n This file is several gigabytes in size, but only a single directory inside is\n needed: Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk\n \n Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n-To create a tarball suitable for gitian input, mount the dmg in OSX, then create it with:\n+To create a tarball suitable for Gitian input, mount the dmg in OS X, then create it with:\n   $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk\n \n \n-The gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n+The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n which are created using these tools. The build process has been designed to\n avoid including the SDK's files in Gitian's outputs. All interim tarballs are\n fully deterministic and may be freely redistributed.\n@@ -64,20 +64,20 @@ Ideally, the creation could be fixed and genisoimage would no longer be necessar\n \n Background images and other features can be added to DMG files by inserting a\n .DS_Store before creation. The easiest way to create this file is to build a\n-DMG without one, move it to a device running OSX, customize the layout, then\n+DMG without one, move it to a device running OS X, customize the layout, then\n grab the .DS_Store file for later use. That is the approach taken here.\n \n-As of OSX Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n+As of OS X Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n requirement in order to satisfy the new Gatekeeper requirements. Because this\n private key cannot be shared, we'll have to be a bit creative in order for the\n build process to remain somewhat deterministic. Here's how it works:\n \n-- Builders use gitian to create an unsigned release. This outputs an unsigned\n+- Builders use Gitian to create an unsigned release. This outputs an unsigned\n   dmg which users may choose to bless and run. It also outputs an unsigned app\n   structure in the form of a tarball, which also contains all of the tools\n   that have been previously (deterministically) built in order to create a\n   final dmg.\n - The Apple keyholder uses this unsigned app to create a detached signature,\n   using the script that is also included there.\n-- Builders feed the unsigned app + detached signature back into gitian. It\n+- Builders feed the unsigned app + detached signature back into Gitian. It\n   uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "d923301467a7f0ae394accd19cd7362feff3120a",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -38,7 +38,7 @@ Do not use `pkg_add boost`! The boost version installed thus is compiled using t\n \n     test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n     ...\n-    Segmentation fault (core dumped) \n+    Segmentation fault (core dumped)\n \n This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n \n@@ -57,7 +57,7 @@ tar -xjf boost_1_59_0.tar.bz2\n # Boost 1.59 needs two small patches for OpenBSD\n cd boost_1_59_0\n # Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n-patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp \n+patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n # https://github.com/boostorg/filesystem/commit/90517e459681790a091566dce27ca3acabf9a70c\n sed 's/__OPEN_BSD__/__OpenBSD__/g' < libs/filesystem/src/path.cpp > libs/filesystem/src/path.cpp.tmp\n mv libs/filesystem/src/path.cpp.tmp libs/filesystem/src/path.cpp\n@@ -92,7 +92,7 @@ tar -xzf db-4.8.30.NC.tar.gz\n # Build the library and install to specified prefix\n cd db-4.8.30.NC/build_unix/\n #  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n-../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp \n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp\n make install\n ```\n \n@@ -160,4 +160,3 @@ version installed by OpenBSD 5.7:\n - https://llvm.org/bugs/show_bug.cgi?id=9758\n \n There is no known workaround for this.\n-"
      },
      {
        "sha": "69c401b751ee9ef8538c9191993b8a9a3ea7e35d",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -1,6 +1,6 @@\n Mac OS X Build Instructions and Notes\n ====================================\n-This guide will show you how to build bitcoind (headless client) for OSX.\n+This guide will show you how to build bitcoind (headless client) for OS X.\n \n Notes\n -----\n@@ -13,8 +13,8 @@ built-in one is located in `/Applications/Utilities`.\n Preparation\n -----------\n \n-You need to install XCode with all the options checked so that the compiler\n-and everything is available in /usr not just /Developer. XCode should be\n+You need to install Xcode with all the options checked so that the compiler\n+and everything is available in /usr not just /Developer. Xcode should be\n available on your OS X installation media, but if not, you can get the\n current version from https://developer.apple.com/xcode/. If you install\n Xcode 4.3 or later, you'll need to install its command line tools. This can\n@@ -38,7 +38,7 @@ NOTE: Building with Qt4 is still supported, however, could result in a broken UI\n \n ### Building `bitcoind`\n \n-1. Clone the github tree to get the source code and go into the directory.\n+1. Clone the GitHub tree to get the source code and go into the directory.\n \n         git clone https://github.com/bitcoin/bitcoin.git\n         cd bitcoin\n@@ -62,7 +62,7 @@ Use Qt Creator as IDE\n You can use Qt Creator as IDE, for debugging and for manipulating forms, etc.\n Download Qt Creator from http://www.qt.io/download/. Download the \"community edition\" and only install Qt Creator (uncheck the rest during the installation process).\n \n-1. Make sure you installed everything through homebrew mentioned above \n+1. Make sure you installed everything through Homebrew mentioned above\n 2. Do a proper ./configure --with-gui=qt5 --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n 4. Enter \"bitcoin-qt\" as project name, enter src/qt as location"
      },
      {
        "sha": "4189d221878bee2d58ff9c6cf2327d31a0d53dff",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -57,7 +57,7 @@ As Doxygen recognizes the comments by the delimiters (`/**` and `*/` in this cas\n \n To describe a class use the same construct above the class definition:\n ```c++\n-/** \n+/**\n  * Alerts are for notifying old versions if they become too obsolete and\n  * need to upgrade. The message is displayed in the status bar.\n  * @see GetWarnings()"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -7,7 +7,7 @@ As such, DNS seeds must be run by entities which have some minimum\n level of trust within the Bitcoin community.\n \n Other implementations of Bitcoin software may also use the same\n-seeds and may be more exposed. In light of this exposure, this \n+seeds and may be more exposed. In light of this exposure, this\n document establishes some basic expectations for operating dnsseeds.\n \n 0. A DNS seed operating organization or person is expected to follow good"
      },
      {
        "sha": "00fdce82e81a1886f2ac3f8846c8e4c2900d0c92",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 38,
        "deletions": 38,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -1,7 +1,7 @@\n Gitian building\n ================\n \n-*Setup instructions for a gitian build of Bitcoin using a Debian VM or physical system.*\n+*Setup instructions for a Gitian build of Bitcoin using a Debian VM or physical system.*\n \n Gitian is the deterministic build process that is used to build the Bitcoin\n Core executables. It provides a way to be reasonably sure that the\n@@ -13,7 +13,7 @@ Multiple developers build the source code by following a specific descriptor\n These results are compared and only if they match, the build is accepted and uploaded\n to bitcoin.org.\n \n-More independent gitian builders are needed, which is why this guide exists. \n+More independent Gitian builders are needed, which is why this guide exists.\n It is preferred you follow these steps yourself instead of using someone else's\n VM image to avoid 'contaminating' the build.\n \n@@ -22,9 +22,9 @@ Table of Contents\n \n - [Create a new VirtualBox VM](#create-a-new-virtualbox-vm)\n - [Connecting to the VM](#connecting-to-the-vm)\n-- [Setting up Debian for gitian building](#setting-up-debian-for-gitian-building)\n-- [Installing gitian](#installing-gitian)\n-- [Setting up the gitian image](#setting-up-the-gitian-image)\n+- [Setting up Debian for Gitian building](#setting-up-debian-for-gitian-building)\n+- [Installing Gitian](#installing-gitian)\n+- [Setting up the Gitian image](#setting-up-the-gitian-image)\n - [Getting and building the inputs](#getting-and-building-the-inputs)\n - [Building Bitcoin](#building-bitcoin)\n - [Building an alternative repository](#building-an-alternative-repository)\n@@ -43,7 +43,7 @@ Any kind of virtualization can be used, for example:\n - [KVM](http://www.linux-kvm.org/page/Main_Page)\n - [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n \n-You can also install gitian on actual hardware instead of using virtualization.\n+You can also install Gitian on actual hardware instead of using virtualization.\n \n Create a new VirtualBox VM\n ---------------------------\n@@ -60,18 +60,18 @@ In the VirtualBox GUI click \"Create\" and choose the following parameters in the\n ![](gitian-building/create_vm_hard_disk.png)\n \n - Hard Disk: Create a virtual hard disk now\n-    \n+\n ![](gitian-building/create_vm_hard_disk_file_type.png)\n \n-- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image) \n+- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image)\n \n ![](gitian-building/create_vm_storage_physical_hard_disk.png)\n-    \n-- Storage on physical hard disk: Dynamically Allocated \n-    \n+\n+- Storage on physical hard disk: Dynamically Allocated\n+\n ![](gitian-building/create_vm_file_location_size.png)\n \n-- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n+- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side\n - Click `Create`\n \n Get the [Debian 8.x net installer](http://cdimage.debian.org/debian-cd/8.2.0/amd64/iso-cd/debian-8.2.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n@@ -81,7 +81,7 @@ Unixy OSes by entering the following in a terminal:\n     echo \"d393d17ac6b3113c81186e545c416a00f28ed6e05774284bb5e8f0df39fcbcb9  debian-8.2.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n-After creating the VM, we need to configure it. \n+After creating the VM, we need to configure it.\n \n - Click the `Settings` button, then go to the `Network` tab. Adapter 1 should be attached to `NAT`.\n \n@@ -115,8 +115,8 @@ This section will explain how to install Debian on the newly created VM.\n \n ![](gitian-building/debian_install_1_boot_menu.png)\n \n-**Note**: Navigating in the Debian installer: \n-To keep a setting at the default and proceed, just press `Enter`. \n+**Note**: Navigating in the Debian installer:\n+To keep a setting at the default and proceed, just press `Enter`.\n To select a different button, press `Tab`.\n \n - Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n@@ -126,23 +126,23 @@ To select a different button, press `Tab`.\n ![](gitian-building/debian_install_4_configure_keyboard.png)\n \n - The VM will detect network settings using DHCP, this should all proceed automatically\n-- Configure the network: \n+- Configure the network:\n   - Hostname `debian`.\n   - Leave domain name empty.\n \n ![](gitian-building/debian_install_5_configure_the_network.png)\n \n-- Choose a root password and enter it twice (remember it for later) \n+- Choose a root password and enter it twice (remember it for later)\n \n ![](gitian-building/debian_install_6a_set_up_root_password.png)\n \n-- Name the new user `debian` (the full name doesn't matter, you can leave it empty) \n+- Name the new user `debian` (the full name doesn't matter, you can leave it empty)\n - Set the account username as `debian`\n \n ![](gitian-building/debian_install_7_set_up_user_fullname.png)\n ![](gitian-building/debian_install_8_set_up_username.png)\n \n-- Choose a user password and enter it twice (remember it for later) \n+- Choose a user password and enter it twice (remember it for later)\n \n ![](gitian-building/debian_install_9_user_password.png)\n \n@@ -152,11 +152,11 @@ To select a different button, press `Tab`.\n ![](gitian-building/debian_install_10_configure_clock.png)\n \n - Disk setup\n-  - Partitioning method: Guided - Use the entire disk \n-  \n+  - Partitioning method: Guided - Use the entire disk\n+\n ![](gitian-building/debian_install_11_partition_disks.png)\n \n-  - Select disk to partition: SCSI1 (0,0,0) \n+  - Select disk to partition: SCSI1 (0,0,0)\n \n ![](gitian-building/debian_install_12_choose_disk.png)\n \n@@ -166,7 +166,7 @@ To select a different button, press `Tab`.\n ![](gitian-building/debian_install_15_write_changes.png)\n \n - The base system will be installed, this will take a minute or so\n-- Choose a mirror (any will do) \n+- Choose a mirror (any will do)\n \n ![](gitian-building/debian_install_16_choose_a_mirror.png)\n \n@@ -201,7 +201,7 @@ After Installation\n The next step in the guide involves logging in as root via SSH.\n SSH login for root users is disabled by default, so we'll enable that now.\n \n-Login to the VM using username `root` and the root password you choose earlier.\n+Login to the VM using username `root` and the root password you chose earlier.\n You'll be presented with a screen similar to this.\n \n ![](gitian-building/debian_root_login.png)\n@@ -243,7 +243,7 @@ For example, to connect as `root` from a Linux command prompt use\n \n Replace `root` with `debian` to log in as user.\n \n-Setting up Debian for gitian building\n+Setting up Debian for Gitian building\n --------------------------------------\n \n In this section we will be setting up the Debian installation for Gitian building.\n@@ -260,7 +260,7 @@ Then set up LXC and the rest with the following, which is a complex jumble of se\n \n ```bash\n # the version of lxc-start in Debian 7.4 needs to run as root, so make sure\n-# that the build script can exectute it without providing a password\n+# that the build script can execute it without providing a password\n echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n # add cgroup for LXC\n echo \"cgroup  /sys/fs/cgroup  cgroup  defaults  0   0\" >> /etc/fstab\n@@ -280,7 +280,7 @@ reboot\n At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n section only need to be performed once.\n \n-Installing gitian\n+Installing Gitian\n ------------------\n \n Re-login as the user `debian` that was created during installation.\n@@ -300,14 +300,14 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and gitian.\n+Clone the git repositories for bitcoin and Gitian.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n git clone https://github.com/bitcoin/bitcoin\n ```\n \n-Setting up the gitian image\n+Setting up the Gitian image\n -------------------------\n \n Gitian needs a virtual image of the operating system to build in.\n@@ -333,14 +333,14 @@ Getting and building the inputs\n Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)\n in the bitcoin repository under 'Fetch and build inputs' to install sources which require\n manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n-and offline git repositories' which will fetch the remaining files required for building \n+and offline git repositories' which will fetch the remaining files required for building\n offline.\n \n Building Bitcoin\n ----------------\n \n-To build Bitcoin (for Linux, OSX and Windows) just follow the steps under 'perform\n-gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n+To build Bitcoin (for Linux, OS X and Windows) just follow the steps under 'perform\n+Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n \n This may take some time as it will build all the dependencies needed for each descriptor.\n These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n@@ -380,7 +380,7 @@ Building an alternative repository\n -----------------------------------\n \n If you want to do a test build of a pull on GitHub it can be useful to point\n-the gitian builder at an alternative repository, using the same descriptors\n+the Gitian builder at an alternative repository, using the same descriptors\n and inputs.\n \n For example:\n@@ -395,9 +395,9 @@ COMMIT=2014_03_windows_unicode_path\n Building fully offline\n -----------------------\n \n-For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository \n+For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n-told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or \n+told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n manually disabling gitian-builder's use of apt-get to update the VM build environment.\n \n To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n@@ -417,7 +417,7 @@ LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root \\\n   -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n   $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get -q -y purge grub\n-LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade \n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n ```\n \n And then set offline mode for apt-cacher-ng:\n@@ -431,7 +431,7 @@ Offlinemode: 1\n service apt-cacher-ng restart\n ```\n \n-Then when building, override the remote URLs that gbuild would otherwise pull from the gitian descriptors::\n+Then when building, override the remote URLs that gbuild would otherwise pull from the Gitian descriptors::\n ```bash\n \n cd /some/root/path/\n@@ -461,7 +461,7 @@ in `gitian.sigs` to your signing machine and do\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n-gitian build.\n+Gitian build.\n \n Uploading signatures\n ---------------------"
      },
      {
        "sha": "d24c2d1dbf49cbf7108df1e99d3261215ae253be",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -29,20 +29,20 @@ file, however it is recommended that a strong and secure password be used\n as this password is security critical to securing the wallet should the\n wallet be enabled.\n \n-If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set, \n-it will use a special cookie file for authentication. The cookie is generated with random \n+If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n+it will use a special cookie file for authentication. The cookie is generated with random\n content when the daemon starts, and deleted when it exits. Read access to this file\n-controls who can access it through RPC. \n+controls who can access it through RPC.\n \n-By default the cookie is stored in the data directory, but it's location can be overridden \n+By default the cookie is stored in the data directory, but it's location can be overridden\n with the option '-rpccookiefile'.\n \n This allows for running bitcoind without having to do any manual configuration.\n \n-`conf`, `pid`, and `wallet` accept relative paths which are interpreted as \n+`conf`, `pid`, and `wallet` accept relative paths which are interpreted as\n relative to the data directory. `wallet` *only* supports relative paths.\n \n-For an example configuration file that describes the configuration settings, \n+For an example configuration file that describes the configuration settings,\n see `contrib/debian/examples/bitcoin.conf`.\n \n 3. Paths\n@@ -93,13 +93,12 @@ use old versions of Upstart and do not supply the start-stop-daemon utility.\n \n Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n \n-Using this script, you can adjust the path and flags to the bitcoind program by \n-setting the BITCOIND and FLAGS environment variables in the file \n+Using this script, you can adjust the path and flags to the bitcoind program by\n+setting the BITCOIND and FLAGS environment variables in the file\n /etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n \n 5. Auto-respawn\n -----------------------------------\n \n Auto respawning is currently only configured for Upstart and systemd.\n Reasonable defaults have been chosen but YMMV.\n-"
      },
      {
        "sha": "e9b2d75a760ce734d789dd7d3452310dabeca2cb",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -181,7 +181,7 @@ configured specifically to process scriptPubKey and not scriptSig scripts.\n \n - Removed bitrpc.py from contrib\n \n-Addition of ZMQ-based Notifcations\n+Addition of ZMQ-based Notifications\n ==================================\n \n Bitcoind can now (optionally) asynchronously notify clients through a"
      },
      {
        "sha": "9a2362cb8506884c43a3791c92fe94e8bd2d4f01",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -6,7 +6,7 @@ Release Process\n \n * * *\n \n-###First time / New builders \n+###First time / New builders\n Check out the source code in the following directory hierarchy.\n \n \tcd /path/to/your/toplevel/build\n@@ -34,17 +34,17 @@ Check out the source code in the following directory hierarchy.\n \n * * *\n \n-###Setup and perform gitian builds\n+###Setup and perform Gitian builds\n+\n+ Setup Gitian descriptors:\n \n- Setup gitian descriptors:\n-  \n \tpushd ./bitcoin\n-\texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n+\texport SIGNER=(your Gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n \tgit checkout v${VERSION}\n \tpopd\n \n-  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures.\n+  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other Gitian signatures.\n \n \tpushd ./gitian.sigs\n \tgit pull\n@@ -56,35 +56,35 @@ Check out the source code in the following directory hierarchy.\n \tgit pull\n \n ###Fetch and create inputs: (first time, or when dependency versions change)\n- \n+\n \tmkdir -p inputs\n \twget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n \twget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n \n- Register and download the Apple SDK: see [OSX readme](README_osx.txt) for details.\n- \n+ Register and download the Apple SDK: see [OS X readme](README_osx.txt) for details.\n+\n  https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_6.1.1/xcode_6.1.1.dmg\n- \n+\n  Using a Mac, create a tarball for the 10.9 SDK and copy it to the inputs directory:\n- \n+\n \ttar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk\n \n ###Optional: Seed the Gitian sources cache and offline git repositories\n \n-By default, gitian will fetch source files as needed. To cache them ahead of time:\n+By default, Gitian will fetch source files as needed. To cache them ahead of time:\n \n \tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n-NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs. For example: \n+NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from local URLs. For example:\n ```\n-./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+./bin/gbuild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n ```\n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n ###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n-  \n+\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n@@ -108,8 +108,8 @@ The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n   1. source tarball (bitcoin-${VERSION}.tar.gz)\n   2. linux 32-bit and 64-bit dist tarballs (bitcoin-${VERSION}-linux[32|64].tar.gz)\n   3. windows 32-bit and 64-bit unsigned installers and dist zips (bitcoin-${VERSION}-win[32|64]-setup-unsigned.exe, bitcoin-${VERSION}-win[32|64].zip)\n-  4. OSX unsigned installer and dist tarball (bitcoin-${VERSION}-osx-unsigned.dmg, bitcoin-${VERSION}-osx64.tar.gz)\n-  5. Gitian signatures (in gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your gitian key)/\n+  4. OS X unsigned installer and dist tarball (bitcoin-${VERSION}-osx-unsigned.dmg, bitcoin-${VERSION}-osx64.tar.gz)\n+  5. Gitian signatures (in gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/\n \n ###Next steps:\n \n@@ -123,12 +123,12 @@ Commit your signature to gitian.sigs:\n \tgit push  # Assuming you can push to the gitian.sigs tree\n \tpopd\n \n-  Wait for Windows/OSX detached signatures:\n+  Wait for Windows/OS X detached signatures:\n \n-\tOnce the Windows/OSX builds each have 3 matching signatures, they will be signed with their respective release keys.\n+\tOnce the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n \tDetached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n-  Create (and optionally verify) the signed OSX binary:\n+  Create (and optionally verify) the signed OS X binary:\n \n \tpushd ./gitian-builder\n \t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n@@ -147,7 +147,7 @@ Commit your signature to gitian.sigs:\n \tmv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n \tpopd\n \n-Commit your signature for the signed OSX/Windows binaries:\n+Commit your signature for the signed OS X/Windows binaries:\n \n \tpushd gitian.sigs\n \tgit add ${VERSION}-osx-signed/${SIGNER}"
      },
      {
        "sha": "594897f89670716ad845596dccd5cc7ff6253586",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -15,15 +15,15 @@ outgoing connections be anonymized, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n \t                server will be used to try to reach .onion addresses as well.\n-\t\n+\n \t-onion=ip:port  Set the proxy server to use for tor hidden services. You do not\n \t                need to set this if it's the same as -proxy. You can use -noonion\n \t                to explicitly disable access to hidden service.\n-\t\n+\n \t-listen         When using -proxy, listening is disabled by default. If you want\n \t                to run a hidden service (see next section), you'll need to enable\n \t                it explicitly.\n-\t\n+\n \t-connect=X      When behind a Tor proxy, you can specify .onion addresses instead\n \t-addnode=X      of IP addresses or hostnames in these parameters. It requires\n \t-seednode=X     SOCKS5. In Tor mode, such addresses can also be exchanged with\n@@ -55,10 +55,10 @@ your bitcoind's P2P listen port (8333 by default).\n \t                preference for your node to advertize itself with, for connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n \t                Tor proxy typically runs).\n-\t\n+\n \t-listen         You'll need to enable listening for incoming connections, as this\n \t                is off by default behind a proxy.\n-\t\n+\n \t-discover       When -externalip is specified, no attempt is made to discover local\n \t                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n \t                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n@@ -87,4 +87,3 @@ If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n \t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n-"
      },
      {
        "sha": "6389c5acedf7929598892c879efc1855e8ae096e",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -1,7 +1,7 @@\n Translations\n ============\n \n-The Bitcoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Bitcoin-Core makes use of the Transifex online translation management tool. \n+The Bitcoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Bitcoin-Core makes use of the Transifex online translation management tool.\n \n ### Helping to translate (using Transifex)\n Transifex is setup to monitor the Github repo for updates, and when code containing new translations is found, Transifex will process any changes. It may take several hours after a pull-request has been merged, to appear in the Transifex web interface."
      },
      {
        "sha": "936a6112c65f83956a0dc8260d96f65b56b847ec",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -1,7 +1,7 @@\n Translation Strings Policy\n ===========================\n \n-This document provides guidelines for internationalization of the Bitcoin Core software. \n+This document provides guidelines for internationalization of the Bitcoin Core software.\n \n How to translate?\n ------------------\n@@ -107,4 +107,3 @@ The second example reduces the number of pluralized words that translators have\n During a string freeze (often before a major release), no translation strings are to be added, modified or removed.\n \n This can be checked by executing `make translate` in the `src` directory, then verifying that `bitcoin_en.ts` remains unchanged.\n-"
      },
      {
        "sha": "902d1124c766de4e51ffc14f37a84e88f0624b1c",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc41278e96890473c14916e2f7e0aa61e99c9849/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=fc41278e96890473c14916e2f7e0aa61e99c9849",
        "patch": "@@ -2,7 +2,7 @@\n \n [ZeroMQ](http://zeromq.org/) is a lightweight wrapper around TCP\n connections, inter-process communication, and shared-memory,\n-providing various message-oriented semantics such as publish/subcribe,\n+providing various message-oriented semantics such as publish/subscribe,\n request/reply, and push/pull.\n \n The Bitcoin Core daemon can be configured to act as a trusted \"border"
      }
    ]
  },
  {
    "sha": "bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZmNkYzIxYTVkYTI1ZWMxYWE0YWVjYzRjZDg5NjBkZmExYzExNzgx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T10:03:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T10:03:29Z"
      },
      "message": "build: make sure OpenSSL heeds noexecstack\n\nThis passes `-Wa,--noexecstack` to the assembler when building\nplatform-specific assembly files, to signal that a non-executable stack\ncan be used. This is the same approach as used by Debian\n(see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=430583)",
      "tree": {
        "sha": "b7db1a03f655cc326bd98403e1a754970db56520",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7db1a03f655cc326bd98403e1a754970db56520"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "687aae6682c01374639026f97bba2966d63b7669",
        "filename": "depends/packages/openssl.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781",
        "patch": "@@ -10,7 +10,7 @@ $(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/o\n $(package)_config_opts+=no-krb5 no-camellia no-capieng no-cast no-cms no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2\n $(package)_config_opts+=no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-sha0 no-static_engine no-whirlpool no-rc2 no-rc4 no-ssl2 no-ssl3\n $(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n-$(package)_config_opts_linux=-fPIC\n+$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n $(package)_config_opts_x86_64_linux=linux-x86_64\n $(package)_config_opts_i686_linux=linux-generic32\n $(package)_config_opts_arm_linux=linux-generic32"
      }
    ]
  },
  {
    "sha": "5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjVlZTBmM2NlNmJmZThjMGIxZDE1YjVhNDk4MDc3ZjdhNTllZTAz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T10:15:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T10:15:26Z"
      },
      "message": "Merge pull request #6837\n\n0658d0b temporarily comment out rpcbind.py (Alex Morcos)",
      "tree": {
        "sha": "067a53d2497afe7b4a08f1de141a0bc222e2a720",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/067a53d2497afe7b4a08f1de141a0bc222e2a720"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJMK+AAoJEHSBCwEjRsmm9OIH/022QddQEkvlteQsO9jwTsTF\n2yTunua10RwC8MDcqZUHLYej/992qruSKvPpN4FZIj8MVf7rySHTnHz0grdfeoNT\ni6OO33xBmmWAyEgvws9A9//OGsoh1hI0A6SeU7KeSBPftrtI6c6iDqTXdKD9yjgF\njknhdi2ahVEmrl4QCZqet/Hentqpl+42l9OR/ulI/w1HR8sqiAuhzKK5dNtj+zAl\nzZGaTHbF1U3SSKXo2Ndg+dhw/EAkMvv68vRxvrQHNmz1/fEZyXAYNAguEPXnA4mF\nmVrUq70hoGRUrvsimxaf7UOOSnInWSMgw6Fz+rOPBMRacCfr1iNlkFeceb1F9do=\n=zeEq\n-----END PGP SIGNATURE-----",
        "payload": "tree 067a53d2497afe7b4a08f1de141a0bc222e2a720\nparent fc41278e96890473c14916e2f7e0aa61e99c9849\nparent 0658d0ba8262a51c30278389cf0c1204934db9f3\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445249714 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445249726 +0200\n\nMerge pull request #6837\n\n0658d0b temporarily comment out rpcbind.py (Alex Morcos)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc41278e96890473c14916e2f7e0aa61e99c9849",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc41278e96890473c14916e2f7e0aa61e99c9849",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc41278e96890473c14916e2f7e0aa61e99c9849"
      },
      {
        "sha": "0658d0ba8262a51c30278389cf0c1204934db9f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0658d0ba8262a51c30278389cf0c1204934db9f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0658d0ba8262a51c30278389cf0c1204934db9f3"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "65a021bbc21b4266c85b93541889a5c083843309",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
        "patch": "@@ -81,12 +81,11 @@\n     'invalidateblock.py',\n     'keypool.py',\n     'receivedby.py',\n-    'rpcbind_test.py',\n-#   'script_test.py',\n+#    'rpcbind_test.py', #temporary, bug in libevent, see #6655\n+#   'script_test.py', #used for manual comparison of 2 binaries\n     'smartfees.py',\n     'maxblocksinflight.py',\n     'invalidblockrequest.py',\n-#    'forknotify.py',\n     'p2p-acceptblock.py',\n     'mempool_packages.py',\n ]"
      }
    ]
  },
  {
    "sha": "da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTdkNTdmYjk1MDFhZDg5MzlhMjkyM2YyYTYwZmE1NDBlYWU4Y2Zh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T13:02:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T13:02:57Z"
      },
      "message": "Merge pull request #6852\n\nbfcdc21 build: make sure OpenSSL heeds noexecstack (Wladimir J. van der Laan)",
      "tree": {
        "sha": "76237081f9b40daf57100b526081b48baa89d925",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76237081f9b40daf57100b526081b48baa89d925"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJOoBAAoJEHSBCwEjRsmmergIAKI06vdQ1etXLjNyF0blMxTT\nqVsMKrWOY0fgw0OLGN7tr9EYZLks5LY3PBc9URoiDsbRpWZLxx1KH69zSsv09VLi\nJ6cmNiPefvXJbeOalF9qmJg9w/7+ncOYzlyxlQoiMIYMxapwrSAJJkuAn/mkxS5n\nhOMakMx10unfDPnihcQb21evq1F8mLLG0YDVlArNQkX5OYMfRY3awx9uv96u6AlI\nu4NITk53ne7THronK0D12WmJqvtee2+TNIkSVSY0UI2xhvic/02TB52g103T7MO0\nhUe1HKjA1przEqJYIOC7F+s94/qoSouMcwUiMp6iBBKedsr9riLUSsApKHzHKlI=\n=fofN\n-----END PGP SIGNATURE-----",
        "payload": "tree 76237081f9b40daf57100b526081b48baa89d925\nparent 5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03\nparent bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445259768 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445259777 +0200\n\nMerge pull request #6852\n\nbfcdc21 build: make sure OpenSSL heeds noexecstack (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da7d57fb9501ad8939a2923f2a60fa540eae8cfa/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03"
      },
      {
        "sha": "bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bfcdc21a5da25ec1aa4aecc4cd8960dfa1c11781"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "687aae6682c01374639026f97bba2966d63b7669",
        "filename": "depends/packages/openssl.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da7d57fb9501ad8939a2923f2a60fa540eae8cfa/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da7d57fb9501ad8939a2923f2a60fa540eae8cfa/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "patch": "@@ -10,7 +10,7 @@ $(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/o\n $(package)_config_opts+=no-krb5 no-camellia no-capieng no-cast no-cms no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2\n $(package)_config_opts+=no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-sha0 no-static_engine no-whirlpool no-rc2 no-rc4 no-ssl2 no-ssl3\n $(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n-$(package)_config_opts_linux=-fPIC\n+$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n $(package)_config_opts_x86_64_linux=linux-x86_64\n $(package)_config_opts_i686_linux=linux-generic32\n $(package)_config_opts_arm_linux=linux-generic32"
      }
    ]
  },
  {
    "sha": "7801f4387d96c19de6dedc518e45d3037d9c53fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODAxZjQzODdkOTZjMTlkZTZkZWRjNTE4ZTQ1ZDMwMzdkOWM1M2Zh",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2015-10-19T12:25:29Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2015-10-19T18:25:21Z"
      },
      "message": "Added fPowNoRetargeting field to Consensus::Params that disables nBits recalculation.",
      "tree": {
        "sha": "ada41d5bdb2ddfc03233b58fe9fa0bca51f72edf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ada41d5bdb2ddfc03233b58fe9fa0bca51f72edf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7801f4387d96c19de6dedc518e45d3037d9c53fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7801f4387d96c19de6dedc518e45d3037d9c53fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7801f4387d96c19de6dedc518e45d3037d9c53fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7801f4387d96c19de6dedc518e45d3037d9c53fa/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f5ee0f3ce6bfe8c0b1d15b5a498077f7a59ee03"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "52d818059e98c942c4a2be153d4503a97ab9e967",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7801f4387d96c19de6dedc518e45d3037d9c53fa/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7801f4387d96c19de6dedc518e45d3037d9c53fa/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=7801f4387d96c19de6dedc518e45d3037d9c53fa",
        "patch": "@@ -76,6 +76,7 @@ class CMainParams : public CChainParams {\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n         /** \n          * The message start string is designed to be unlikely to occur in normal data.\n          * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n@@ -155,6 +156,7 @@ class CTestNetParams : public CChainParams {\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n         pchMessageStart[0] = 0x0b;\n         pchMessageStart[1] = 0x11;\n         pchMessageStart[2] = 0x09;\n@@ -217,6 +219,7 @@ class CRegTestParams : public CChainParams {\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = true;\n \n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;"
      },
      {
        "sha": "efbbbed352581bac43836cac43f179fda348a1dc",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7801f4387d96c19de6dedc518e45d3037d9c53fa/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7801f4387d96c19de6dedc518e45d3037d9c53fa/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=7801f4387d96c19de6dedc518e45d3037d9c53fa",
        "patch": "@@ -22,6 +22,7 @@ struct Params {\n     /** Proof of work parameters */\n     uint256 powLimit;\n     bool fPowAllowMinDifficultyBlocks;\n+    bool fPowNoRetargeting;\n     int64_t nPowTargetSpacing;\n     int64_t nPowTargetTimespan;\n     int64_t DifficultyAdjustmentInterval() const { return nPowTargetTimespan / nPowTargetSpacing; }"
      },
      {
        "sha": "5ace3fbc9b5bcd5126312a347eb90a2da4494203",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7801f4387d96c19de6dedc518e45d3037d9c53fa/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7801f4387d96c19de6dedc518e45d3037d9c53fa/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=7801f4387d96c19de6dedc518e45d3037d9c53fa",
        "patch": "@@ -52,6 +52,9 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n \n unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& params)\n {\n+    if (params.fPowNoRetargeting)\n+        return pindexLast->nBits;\n+\n     // Limit adjustment step\n     int64_t nActualTimespan = pindexLast->GetBlockTime() - nFirstBlockTime;\n     LogPrintf(\"  nActualTimespan = %d  before bounds\\n\", nActualTimespan);"
      }
    ]
  },
  {
    "sha": "d3b09f6bac738958b6bf5711bcb5291049b7466d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2IwOWY2YmFjNzM4OTU4YjZiZjU3MTFiY2I1MjkxMDQ5Yjc0NjZk",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-10-19T18:43:04Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-10-19T18:43:04Z"
      },
      "message": "Do not allow blockfile pruning during reindex.\n\nAlso clarify startup message.",
      "tree": {
        "sha": "73b6fdec569a2480f366ee7dc036bbe7165ba8ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73b6fdec569a2480f366ee7dc036bbe7165ba8ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3b09f6bac738958b6bf5711bcb5291049b7466d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3b09f6bac738958b6bf5711bcb5291049b7466d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3b09f6bac738958b6bf5711bcb5291049b7466d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3b09f6bac738958b6bf5711bcb5291049b7466d/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da7d57fb9501ad8939a2923f2a60fa540eae8cfa"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4460ecb1fa03b71b61cf7c325ae4a1e8c1bffb0c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3b09f6bac738958b6bf5711bcb5291049b7466d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3b09f6bac738958b6bf5711bcb5291049b7466d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d3b09f6bac738958b6bf5711bcb5291049b7466d",
        "patch": "@@ -1498,10 +1498,10 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // if pruning, unset the service bit and perform the initial blockstore prune\n     // after any wallet rescanning has taken place.\n     if (fPruneMode) {\n-        uiInterface.InitMessage(_(\"Pruning blockstore...\"));\n         LogPrintf(\"Unsetting NODE_NETWORK on prune mode\\n\");\n         nLocalServices &= ~NODE_NETWORK;\n         if (!fReindex) {\n+            uiInterface.InitMessage(_(\"Pruning blockstore...\"));\n             PruneAndFlush();\n         }\n     }"
      },
      {
        "sha": "95c71b9cc05957a2cb48f735a69d530d45b0dc76",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3b09f6bac738958b6bf5711bcb5291049b7466d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3b09f6bac738958b6bf5711bcb5291049b7466d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d3b09f6bac738958b6bf5711bcb5291049b7466d",
        "patch": "@@ -1881,7 +1881,7 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode) {\n     std::set<int> setFilesToPrune;\n     bool fFlushForPrune = false;\n     try {\n-    if (fPruneMode && fCheckForPruning) {\n+    if (fPruneMode && fCheckForPruning && !fReindex) {\n         FindFilesToPrune(setFilesToPrune);\n         fCheckForPruning = false;\n         if (!setFilesToPrune.empty()) {"
      }
    ]
  },
  {
    "sha": "0d8b1759d21ac8db02627553d4b9c63d859bb0a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDhiMTc1OWQyMWFjOGRiMDI2Mjc1NTNkNGI5YzYzZDg1OWJiMGE1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-14T12:27:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-20T08:25:45Z"
      },
      "message": "[rpc-tests] fundrawtransaction: Update fee after minRelayTxFee increase",
      "tree": {
        "sha": "735b4e3c306ceff8bfe0d71a0f69a64b033a24fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/735b4e3c306ceff8bfe0d71a0f69a64b033a24fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d8b1759d21ac8db02627553d4b9c63d859bb0a5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d8b1759d21ac8db02627553d4b9c63d859bb0a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d8b1759d21ac8db02627553d4b9c63d859bb0a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d8b1759d21ac8db02627553d4b9c63d859bb0a5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "93d13faa06d3c26e836ffed1fc7498836fecedb5",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d8b1759d21ac8db02627553d4b9c63d859bb0a5/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d8b1759d21ac8db02627553d4b9c63d859bb0a5/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=0d8b1759d21ac8db02627553d4b9c63d859bb0a5",
        "patch": "@@ -28,7 +28,15 @@ def setup_network(self, split=False):\n \n     def run_test(self):\n         print \"Mining blocks...\"\n-        feeTolerance = Decimal(0.00000002) #if the fee's positive delta is higher than this value tests will fail, neg. delta always fail the tests\n+\n+        min_relay_tx_fee = self.nodes[0].getnetworkinfo()['relayfee']\n+        # if the fee's positive delta is higher than this value tests will fail,\n+        # neg. delta always fail the tests.\n+        # The size of the signature of every input may be at most 2 bytes larger\n+        # than a minimum sized signature.\n+\n+        #            = 2 bytes * minRelayTxFeePerByte\n+        feeTolerance = 2 * min_relay_tx_fee/1000\n \n         self.nodes[2].generate(1)\n         self.sync_all()"
      }
    ]
  },
  {
    "sha": "bd4c22ed5629962334f66669a90b44bca3ff4845",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDRjMjJlZDU2Mjk5NjIzMzRmNjY2NjlhOTBiNDRiY2EzZmY0ODQ1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-14T11:15:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-20T08:28:42Z"
      },
      "message": "[rpc-tests] Check return code",
      "tree": {
        "sha": "ecd236ed370c22193af40b7cd52a3bc90c9effef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ecd236ed370c22193af40b7cd52a3bc90c9effef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd4c22ed5629962334f66669a90b44bca3ff4845",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd4c22ed5629962334f66669a90b44bca3ff4845",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd4c22ed5629962334f66669a90b44bca3ff4845",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd4c22ed5629962334f66669a90b44bca3ff4845/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d8b1759d21ac8db02627553d4b9c63d859bb0a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d8b1759d21ac8db02627553d4b9c63d859bb0a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d8b1759d21ac8db02627553d4b9c63d859bb0a5"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9ba04ade01b5e755500b913ec134000f8aa86f5d",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd4c22ed5629962334f66669a90b44bca3ff4845/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd4c22ed5629962334f66669a90b44bca3ff4845/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=bd4c22ed5629962334f66669a90b44bca3ff4845",
        "patch": "@@ -102,7 +102,7 @@\n        if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts\n            or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n             print  \"Running testscript \" + testScripts[i] + \"...\"\n-            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n+            subprocess.check_call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n \t    #exit if help is called so we print just one set of instructions\n             p = re.compile(\" -h| --help\")\n             if p.match(passOn):\n@@ -113,6 +113,6 @@\n         if ('-extended' in opts or testScriptsExt[i] in opts\n            or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n             print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\"\n-            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n+            subprocess.check_call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n else:\n     print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      }
    ]
  },
  {
    "sha": "488f8517a15403d48c91dda01f740c82aa64ca63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODhmODUxN2ExNTQwM2Q0OGM5MWRkYTAxZjc0MGM4MmFhNjRjYTYz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:06:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:06:44Z"
      },
      "message": "Merge pull request #6829\n\n53b86d0 doc: add comment explaining initial header request (Daniel Kraft)",
      "tree": {
        "sha": "d6c84c6750a369b899980e0759ea8b0c0b09b579",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6c84c6750a369b899980e0759ea8b0c0b09b579"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/488f8517a15403d48c91dda01f740c82aa64ca63",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJhI0AAoJEHSBCwEjRsmmx+AIAK4za//blzZ1wACMObYKkREE\n0c+HLRFMfHk2x/SddWsDZK+a+YZYQuQQaw1tKWwbfFkHXeew1VsKQVMWLFxQx4iw\npi1+SeuNwfquPkYlJToFZZ4AjyPlLlHOxjMek3yzOVUbCDezvKOJ1l6b3Zb/oS0V\nwzHMJzOzCxbIeoPGzDIhDQbPTmA+4xf8MlY4Ui8BqyrrWwebvdS3DgJqasr/2SaV\nuHKka3/SYOjYWREdrE+QIIts6h2hVkfMeh8c8zhTFLskVFYSJexdJWC9dDEss1vh\n6AvORzfpt37Z8kZMPqL2wGB6q9rBiH4z8X1l1PMZNUUSHy1UwOG6yKobnHmY5cc=\n=Og9/\n-----END PGP SIGNATURE-----",
        "payload": "tree d6c84c6750a369b899980e0759ea8b0c0b09b579\nparent da7d57fb9501ad8939a2923f2a60fa540eae8cfa\nparent 53b86d0de5440ffb94f6742e26dd1fd9e11952f2\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445335602 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445335604 +0200\n\nMerge pull request #6829\n\n53b86d0 doc: add comment explaining initial header request (Daniel Kraft)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/488f8517a15403d48c91dda01f740c82aa64ca63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/488f8517a15403d48c91dda01f740c82aa64ca63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/488f8517a15403d48c91dda01f740c82aa64ca63/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da7d57fb9501ad8939a2923f2a60fa540eae8cfa"
      },
      {
        "sha": "53b86d0de5440ffb94f6742e26dd1fd9e11952f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53b86d0de5440ffb94f6742e26dd1fd9e11952f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53b86d0de5440ffb94f6742e26dd1fd9e11952f2"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 10,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e931d40c9462c74a180325f33e4f34ad8b0c4c1c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/488f8517a15403d48c91dda01f740c82aa64ca63/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/488f8517a15403d48c91dda01f740c82aa64ca63/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=488f8517a15403d48c91dda01f740c82aa64ca63",
        "patch": "@@ -4955,7 +4955,16 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             if ((nSyncStarted == 0 && fFetch) || pindexBestHeader->GetBlockTime() > GetAdjustedTime() - 24 * 60 * 60) {\n                 state.fSyncStarted = true;\n                 nSyncStarted++;\n-                CBlockIndex *pindexStart = pindexBestHeader->pprev ? pindexBestHeader->pprev : pindexBestHeader;\n+                const CBlockIndex *pindexStart = pindexBestHeader;\n+                /* If possible, start at the block preceding the currently\n+                   best known header.  This ensures that we always get a\n+                   non-empty list of headers back as long as the peer\n+                   is up-to-date.  With a non-empty response, we can initialise\n+                   the peer's known best block.  This wouldn't be possible\n+                   if we requested starting at pindexBestHeader and\n+                   got back an empty response.  */\n+                if (pindexStart->pprev)\n+                    pindexStart = pindexStart->pprev;\n                 LogPrint(\"net\", \"initial getheaders (%d) to peer=%d (startheight:%d)\\n\", pindexStart->nHeight, pto->id, pto->nStartingHeight);\n                 pto->PushMessage(\"getheaders\", chainActive.GetLocator(pindexStart), uint256());\n             }"
      }
    ]
  },
  {
    "sha": "c834f568693bfae2ce32a2532ac846a868bbee50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODM0ZjU2ODY5M2JmYWUyY2UzMmEyNTMyYWM4NDZhODY4YmJlZTUw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:07:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:07:44Z"
      },
      "message": "Merge pull request #6853\n\n7801f43 Added fPowNoRetargeting field to Consensus::Params that disables nBits recalculation. (Eric Lombrozo)",
      "tree": {
        "sha": "a32ec35716248b674890437fe7abb806e15f0bae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a32ec35716248b674890437fe7abb806e15f0bae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c834f568693bfae2ce32a2532ac846a868bbee50",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJhJwAAoJEHSBCwEjRsmmIHEH/0/MPAtgv8VmYiWn3RPNo8L5\nh9j99uf1Y4bzBq4NQiiGcREm+Vj14HnQJn8yATyX4AbMhcLR6ti2SVFl4yIHfG+A\nbtye1SBM1qWj5VJb1WoShelSFiWztONPf3tvErGlTdgFwiEsExBjur4ojnsL+uSa\nmVV28kMyGoJSUlGNOds01CukoQvPju8gk712zywAZOISh2mZzSfRYLtbVxgOlVI5\nIgznDlV8/jCV/N1VijLCqWXkftnXVLNrTXRMEs4UwyKQy/nfcNnIXBpzv1LG43GN\nU3CvwQYmvFXVPKDWpQNiDYErH/UfN1waXLhnlXNl7ECHP/KRjD4eWjsaoosTrQQ=\n=9D8H\n-----END PGP SIGNATURE-----",
        "payload": "tree a32ec35716248b674890437fe7abb806e15f0bae\nparent 488f8517a15403d48c91dda01f740c82aa64ca63\nparent 7801f4387d96c19de6dedc518e45d3037d9c53fa\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445335626 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445335664 +0200\n\nMerge pull request #6853\n\n7801f43 Added fPowNoRetargeting field to Consensus::Params that disables nBits recalculation. (Eric Lombrozo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c834f568693bfae2ce32a2532ac846a868bbee50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c834f568693bfae2ce32a2532ac846a868bbee50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c834f568693bfae2ce32a2532ac846a868bbee50/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "488f8517a15403d48c91dda01f740c82aa64ca63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/488f8517a15403d48c91dda01f740c82aa64ca63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/488f8517a15403d48c91dda01f740c82aa64ca63"
      },
      {
        "sha": "7801f4387d96c19de6dedc518e45d3037d9c53fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7801f4387d96c19de6dedc518e45d3037d9c53fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7801f4387d96c19de6dedc518e45d3037d9c53fa"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "52d818059e98c942c4a2be153d4503a97ab9e967",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c834f568693bfae2ce32a2532ac846a868bbee50/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c834f568693bfae2ce32a2532ac846a868bbee50/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=c834f568693bfae2ce32a2532ac846a868bbee50",
        "patch": "@@ -76,6 +76,7 @@ class CMainParams : public CChainParams {\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n         /** \n          * The message start string is designed to be unlikely to occur in normal data.\n          * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n@@ -155,6 +156,7 @@ class CTestNetParams : public CChainParams {\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = false;\n         pchMessageStart[0] = 0x0b;\n         pchMessageStart[1] = 0x11;\n         pchMessageStart[2] = 0x09;\n@@ -217,6 +219,7 @@ class CRegTestParams : public CChainParams {\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = true;\n+        consensus.fPowNoRetargeting = true;\n \n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;"
      },
      {
        "sha": "efbbbed352581bac43836cac43f179fda348a1dc",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c834f568693bfae2ce32a2532ac846a868bbee50/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c834f568693bfae2ce32a2532ac846a868bbee50/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=c834f568693bfae2ce32a2532ac846a868bbee50",
        "patch": "@@ -22,6 +22,7 @@ struct Params {\n     /** Proof of work parameters */\n     uint256 powLimit;\n     bool fPowAllowMinDifficultyBlocks;\n+    bool fPowNoRetargeting;\n     int64_t nPowTargetSpacing;\n     int64_t nPowTargetTimespan;\n     int64_t DifficultyAdjustmentInterval() const { return nPowTargetTimespan / nPowTargetSpacing; }"
      },
      {
        "sha": "5ace3fbc9b5bcd5126312a347eb90a2da4494203",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c834f568693bfae2ce32a2532ac846a868bbee50/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c834f568693bfae2ce32a2532ac846a868bbee50/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=c834f568693bfae2ce32a2532ac846a868bbee50",
        "patch": "@@ -52,6 +52,9 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n \n unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& params)\n {\n+    if (params.fPowNoRetargeting)\n+        return pindexLast->nBits;\n+\n     // Limit adjustment step\n     int64_t nActualTimespan = pindexLast->GetBlockTime() - nFirstBlockTime;\n     LogPrintf(\"  nActualTimespan = %d  before bounds\\n\", nActualTimespan);"
      }
    ]
  },
  {
    "sha": "87e5539e9c500028afd6f9ba101d9f04dbd325e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4N2U1NTM5ZTljNTAwMDI4YWZkNmY5YmExMDFkOWYwNGRiZDMyNWU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:21:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:21:25Z"
      },
      "message": "Merge pull request #6827\n\nbd4c22e [rpc-tests] Check return code (MarcoFalke)\n0d8b175 [rpc-tests] fundrawtransaction: Update fee after minRelayTxFee increase (MarcoFalke)",
      "tree": {
        "sha": "5658595f5ca4ee5a73da935f0d40433e9e05040a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5658595f5ca4ee5a73da935f0d40433e9e05040a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87e5539e9c500028afd6f9ba101d9f04dbd325e8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJhWlAAoJEHSBCwEjRsmm0NoH/A9hNqd/0NIvQYv6tghr/NFe\nwLtkqNG5zjQ3Nsxc91/R02XUe3zU1gtrIbH2GJGXvyu1v/oNbtFwVjAV94XxfHIr\n4rW4FfHZ0JNoBU/LnzGw+Wmx2MJ2DrNFhpcw3zMxiPlGrnPCoUbF05kQjEK6Sq9p\nzxOrJqkr0SoaQw+fw90mKlPt91876/ktxrjkpJlumEUpZATmPEiDOT9DbZ/AevFc\nCCi+gp1y2QaDyTk2A/dR2d0wIkh3BxIPCN6qdOWfl0qe9N9PdSe99s1QOQFwRSLm\neXij3GEs/CBZPxBVCGJmoFse3f3rQYaUFOFs/GaMu0swP4AhnvVMl5O4k2IV8gc=\n=yhmt\n-----END PGP SIGNATURE-----",
        "payload": "tree 5658595f5ca4ee5a73da935f0d40433e9e05040a\nparent c834f568693bfae2ce32a2532ac846a868bbee50\nparent bd4c22ed5629962334f66669a90b44bca3ff4845\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445336464 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445336485 +0200\n\nMerge pull request #6827\n\nbd4c22e [rpc-tests] Check return code (MarcoFalke)\n0d8b175 [rpc-tests] fundrawtransaction: Update fee after minRelayTxFee increase (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87e5539e9c500028afd6f9ba101d9f04dbd325e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87e5539e9c500028afd6f9ba101d9f04dbd325e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87e5539e9c500028afd6f9ba101d9f04dbd325e8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c834f568693bfae2ce32a2532ac846a868bbee50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c834f568693bfae2ce32a2532ac846a868bbee50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c834f568693bfae2ce32a2532ac846a868bbee50"
      },
      {
        "sha": "bd4c22ed5629962334f66669a90b44bca3ff4845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd4c22ed5629962334f66669a90b44bca3ff4845",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd4c22ed5629962334f66669a90b44bca3ff4845"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 11,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8a431d718db53a9ddb110da2d37004edfa4c8069",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87e5539e9c500028afd6f9ba101d9f04dbd325e8/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87e5539e9c500028afd6f9ba101d9f04dbd325e8/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=87e5539e9c500028afd6f9ba101d9f04dbd325e8",
        "patch": "@@ -101,7 +101,7 @@\n        if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts\n            or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n             print  \"Running testscript \" + testScripts[i] + \"...\"\n-            subprocess.call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n+            subprocess.check_call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n \t    #exit if help is called so we print just one set of instructions\n             p = re.compile(\" -h| --help\")\n             if p.match(passOn):\n@@ -112,6 +112,6 @@\n         if ('-extended' in opts or testScriptsExt[i] in opts\n            or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n             print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\"\n-            subprocess.call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n+            subprocess.check_call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n else:\n     print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      },
      {
        "sha": "93d13faa06d3c26e836ffed1fc7498836fecedb5",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87e5539e9c500028afd6f9ba101d9f04dbd325e8/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87e5539e9c500028afd6f9ba101d9f04dbd325e8/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=87e5539e9c500028afd6f9ba101d9f04dbd325e8",
        "patch": "@@ -28,7 +28,15 @@ def setup_network(self, split=False):\n \n     def run_test(self):\n         print \"Mining blocks...\"\n-        feeTolerance = Decimal(0.00000002) #if the fee's positive delta is higher than this value tests will fail, neg. delta always fail the tests\n+\n+        min_relay_tx_fee = self.nodes[0].getnetworkinfo()['relayfee']\n+        # if the fee's positive delta is higher than this value tests will fail,\n+        # neg. delta always fail the tests.\n+        # The size of the signature of every input may be at most 2 bytes larger\n+        # than a minimum sized signature.\n+\n+        #            = 2 bytes * minRelayTxFeePerByte\n+        feeTolerance = 2 * min_relay_tx_fee/1000\n \n         self.nodes[2].generate(1)\n         self.sync_all()"
      }
    ]
  },
  {
    "sha": "ae69a75c554f98c82bd71775526dd0da0b84b4b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTY5YTc1YzU1NGY5OGM4MmJkNzE3NzU1MjZkZDBkYTBiODRiNGI1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:35:49Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:35:54Z"
      },
      "message": "Merge pull request #6801\n\ne76d9e4 [depends] Latest config.guess and config.sub (fanquake)",
      "tree": {
        "sha": "67ad3091b408007725269a4f89ab8105dff254c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67ad3091b408007725269a4f89ab8105dff254c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae69a75c554f98c82bd71775526dd0da0b84b4b5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJhkKAAoJEHSBCwEjRsmmzkEH/1v82HhrwQgdStsIoSIn40HT\nDmgyEvn6Rty1wPCrdjxg6og/t31r+SQrZ4jeX1n2Z2fnlJTU1kk2W5LF2HFoKvYZ\nEr6Pzx+wp6ZJCi/3b6nw774dpDi7PQNFUjPjwHokBnhc/uPNUUvRmSd2otmKo7wv\nLCY2F/gWsG2VRO+WA88XRmd36gvixVK347bt6jgP+sVNdUIWAxNM+VmPLV53KExE\nPH7XNQxHUS7raCSduS54LRuQHP6tMkvDjFykXrUCU3S2NPa+ToiuJUP1mEVx7+w5\nscVpkMfFcZD0tVEPIPXYEb52pPg8w5wxt11bnhhy/xAUgXqkI/I0HY8m9nYJaNk=\n=RTy+\n-----END PGP SIGNATURE-----",
        "payload": "tree 67ad3091b408007725269a4f89ab8105dff254c8\nparent 87e5539e9c500028afd6f9ba101d9f04dbd325e8\nparent e76d9e4c15bed7e1fa876b4c69c35c8d1712b503\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445337349 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445337354 +0200\n\nMerge pull request #6801\n\ne76d9e4 [depends] Latest config.guess and config.sub (fanquake)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae69a75c554f98c82bd71775526dd0da0b84b4b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae69a75c554f98c82bd71775526dd0da0b84b4b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae69a75c554f98c82bd71775526dd0da0b84b4b5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87e5539e9c500028afd6f9ba101d9f04dbd325e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87e5539e9c500028afd6f9ba101d9f04dbd325e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87e5539e9c500028afd6f9ba101d9f04dbd325e8"
      },
      {
        "sha": "e76d9e4c15bed7e1fa876b4c69c35c8d1712b503",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e76d9e4c15bed7e1fa876b4c69c35c8d1712b503"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 17,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3c022c5bb8b3ae3737c3b28f7e77bcab98d790d9",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae69a75c554f98c82bd71775526dd0da0b84b4b5/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae69a75c554f98c82bd71775526dd0da0b84b4b5/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=ae69a75c554f98c82bd71775526dd0da0b84b4b5",
        "patch": "@@ -2,7 +2,7 @@\n # Attempt to guess a canonical system name.\n #   Copyright 1992-2015 Free Software Foundation, Inc.\n \n-timestamp='2015-03-04'\n+timestamp='2015-09-14'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -221,7 +221,7 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t\trelease='-gnu'\n \t\t;;\n \t    *)\n-\t\trelease=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\t\trelease=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`\n \t\t;;\n \tesac\n \t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n@@ -249,6 +249,9 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n     *:MirBSD:*:*)\n \techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n \texit ;;\n+    *:Sortix:*:*)\n+\techo ${UNAME_MACHINE}-unknown-sortix\n+\texit ;;\n     alpha:OSF1:*:*)\n \tcase $UNAME_RELEASE in\n \t*4.0)\n@@ -962,6 +965,9 @@ EOF\n     ia64:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n+    k1om:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n     m32r*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n@@ -1038,7 +1044,7 @@ EOF\n \techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n \texit ;;\n     x86_64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n \texit ;;\n     xtensa*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n@@ -1117,7 +1123,7 @@ EOF\n \t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n \t# the processor, so we play safe by assuming i586.\n \t# Note: whatever this is, it MUST be the same as what config.sub\n-\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n+\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n \t# this is a cross-build.\n \techo i586-pc-msdosdjgpp\n \texit ;;"
      },
      {
        "sha": "1acc966a33bf509f7c50f87d7678fbb813089ca6",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae69a75c554f98c82bd71775526dd0da0b84b4b5/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae69a75c554f98c82bd71775526dd0da0b84b4b5/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=ae69a75c554f98c82bd71775526dd0da0b84b4b5",
        "patch": "@@ -2,7 +2,7 @@\n # Configuration validation subroutine script.\n #   Copyright 1992-2015 Free Software Foundation, Inc.\n \n-timestamp='2015-03-08'\n+timestamp='2015-08-20'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -255,6 +255,7 @@ case $basic_machine in\n \t| arc | arceb \\\n \t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n \t| avr | avr32 \\\n+\t| ba \\\n \t| be32 | be64 \\\n \t| bfin \\\n \t| c4x | c8051 | clipper \\\n@@ -305,7 +306,7 @@ case $basic_machine in\n \t| riscv32 | riscv64 \\\n \t| rl78 | rx \\\n \t| score \\\n-\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n \t| sh64 | sh64le \\\n \t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n \t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n@@ -376,6 +377,7 @@ case $basic_machine in\n \t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n \t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n \t| avr-* | avr32-* \\\n+\t| ba-* \\\n \t| be32-* | be64-* \\\n \t| bfin-* | bs2000-* \\\n \t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n@@ -428,12 +430,13 @@ case $basic_machine in\n \t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n \t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n \t| pyramid-* \\\n+\t| riscv32-* | riscv64-* \\\n \t| rl78-* | romp-* | rs6000-* | rx-* \\\n \t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n \t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n \t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n \t| sparclite-* \\\n-\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx?-* \\\n+\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n \t| tahoe-* \\\n \t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n \t| tile*-* \\\n@@ -1376,7 +1379,7 @@ case $os in\n \t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n \t      | -sym* | -kopensolaris* | -plan9* \\\n \t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n-\t      | -aos* | -aros* | -cloudabi* \\\n+\t      | -aos* | -aros* | -cloudabi* | -sortix* \\\n \t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n \t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n \t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\"
      }
    ]
  },
  {
    "sha": "020c4073a03a69709ed6b33d10e163ab86d65f4f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjBjNDA3M2EwM2E2OTcwOWVkNmIzM2QxMGUxNjNhYjg2ZDY1ZjRm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:41:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T10:53:45Z"
      },
      "message": "Merge pull request #6841\n\nb6d5e32 Make fee aware of min relay in pruning.py RPC test (Alex Morcos)",
      "tree": {
        "sha": "71e75f2864b636cbbd66347b1a7a8f7cec0076a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71e75f2864b636cbbd66347b1a7a8f7cec0076a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/020c4073a03a69709ed6b33d10e163ab86d65f4f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJh05AAoJEHSBCwEjRsmmPiwIALe7IuW+B2pKcTjaYkZYU79l\ngF2OQvJIgFYfEDctdElE19mV9IinV1O1wJSyUOj9ri3JeFsL1VlDPKQ7wlNSBwbs\nA/Xoq97SToyNIpeC0J4NxsUYvdDVl5N9dTO0QgRKAlKXDRcUrbmt9rxEKSD196bm\nZ7kpn2ZXS2ssf3+jRFqY0ZDPtsc4UJppOZSCLqfsVbxp+xaOabwnRvJvbu41YmbM\ng3mcejJPe9VyRF3rZvt3aPufqXzs2uKHPOySJS/swA9zUv0Ng/4YqRP/7jxS/46w\nFrDgvvPwB4qq/janXDIVSIL7YM/9xolGlEy1cJW0xTNF4JVvZf2mDZx2oOEY7cM=\n=9ZEB\n-----END PGP SIGNATURE-----",
        "payload": "tree 71e75f2864b636cbbd66347b1a7a8f7cec0076a1\nparent ae69a75c554f98c82bd71775526dd0da0b84b4b5\nparent b6d5e32e0e5b038c6ff7e2ab5221b10727722341\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445337662 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445338425 +0200\n\nMerge pull request #6841\n\nb6d5e32 Make fee aware of min relay in pruning.py RPC test (Alex Morcos)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/020c4073a03a69709ed6b33d10e163ab86d65f4f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/020c4073a03a69709ed6b33d10e163ab86d65f4f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/020c4073a03a69709ed6b33d10e163ab86d65f4f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae69a75c554f98c82bd71775526dd0da0b84b4b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae69a75c554f98c82bd71775526dd0da0b84b4b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae69a75c554f98c82bd71775526dd0da0b84b4b5"
      },
      {
        "sha": "b6d5e32e0e5b038c6ff7e2ab5221b10727722341",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6d5e32e0e5b038c6ff7e2ab5221b10727722341",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6d5e32e0e5b038c6ff7e2ab5221b10727722341"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "21f8d69382d02055141f1a57829b8e6aaf217d9f",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/020c4073a03a69709ed6b33d10e163ab86d65f4f/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/020c4073a03a69709ed6b33d10e163ab86d65f4f/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=020c4073a03a69709ed6b33d10e163ab86d65f4f",
        "patch": "@@ -61,6 +61,9 @@ def setup_network(self):\n         self.address[0] = self.nodes[0].getnewaddress()\n         self.address[1] = self.nodes[1].getnewaddress()\n \n+        # Determine default relay fee\n+        self.relayfee = self.nodes[0].getnetworkinfo()[\"relayfee\"]\n+\n         connect_nodes(self.nodes[0], 1)\n         connect_nodes(self.nodes[1], 2)\n         connect_nodes(self.nodes[2], 0)\n@@ -239,7 +242,7 @@ def mine_full_block(self, node, address):\n             outputs = {}\n             t = self.utxo.pop()\n             inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]})\n-            remchange = t[\"amount\"] - Decimal(\"0.001000\")\n+            remchange = t[\"amount\"] - 100*self.relayfee # Fee must be above min relay rate for 66kb tx\n             outputs[address]=remchange\n             # Create a basic transaction that will send change back to ourself after account for a fee\n             # And then insert the 128 generated transaction outs in the middle rawtx[92] is where the #"
      }
    ]
  },
  {
    "sha": "f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzUyNWUyNGUzYTE1NmVhYTAwNGNhMjhhNTlmZTJkNDQ5ZGMxZjll",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-30T19:39:49Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-20T12:22:44Z"
      },
      "message": "Chainparams: Replace CBaseChainParams::Network enum with string constants (suggested by Wladimir)",
      "tree": {
        "sha": "6fceee33ff5c9efff9e97ea0045f4726239714b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6fceee33ff5c9efff9e97ea0045f4726239714b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49793fbb097e9f00149a054adeddad07f0444c12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49793fbb097e9f00149a054adeddad07f0444c12",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49793fbb097e9f00149a054adeddad07f0444c12"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 48,
      "deletions": 45
    },
    "files": [
      {
        "sha": "02c417c38dc618c8683a94dc78cf87b3b2cd4448",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"chainparams.h\"\n \n+#include \"tinyformat.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n@@ -260,28 +261,27 @@ const CChainParams &Params() {\n     return *pCurrentParams;\n }\n \n-CChainParams &Params(CBaseChainParams::Network network) {\n-    switch (network) {\n-        case CBaseChainParams::MAIN:\n+CChainParams& Params(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN)\n             return mainParams;\n-        case CBaseChainParams::TESTNET:\n+    else if (chain == CBaseChainParams::TESTNET)\n             return testNetParams;\n-        case CBaseChainParams::REGTEST:\n+    else if (chain == CBaseChainParams::REGTEST)\n             return regTestParams;\n-        default:\n-            assert(false && \"Unimplemented network\");\n-            return mainParams;\n-    }\n+    else\n+        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n-void SelectParams(CBaseChainParams::Network network) {\n+void SelectParams(const std::string& network)\n+{\n     SelectBaseParams(network);\n     pCurrentParams = &Params(network);\n }\n \n bool SelectParamsFromCommandLine()\n {\n-    CBaseChainParams::Network network = NetworkIdFromCommandLine();\n+    std::string network = ChainNameFromCommandLine();\n     if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n         return false;\n "
      },
      {
        "sha": "71e2ad861e81174f286792535008d019df7e2bd8",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
        "patch": "@@ -103,11 +103,16 @@ class CChainParams\n  */\n const CChainParams &Params();\n \n-/** Return parameters for the given network. */\n-CChainParams &Params(CBaseChainParams::Network network);\n+/**\n+ * @returns CChainParams for the given BIP70 chain name.\n+ */\n+CChainParams& Params(const std::string& chain);\n \n-/** Sets the params returned by Params() to those for the given network. */\n-void SelectParams(CBaseChainParams::Network network);\n+/**\n+ * Sets the params returned by Params() to those for the given BIP70 chain name.\n+ * @throws std::runtime_error when the chain is not supported.\n+ */\n+void SelectParams(const std::string& chain);\n \n /**\n  * Looks for -regtest or -testnet and then calls SelectParams as appropriate."
      },
      {
        "sha": "e46212279fe66e07f36498c6dc5b7baa8453a4cc",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
        "patch": "@@ -5,10 +5,16 @@\n \n #include \"chainparamsbase.h\"\n \n+#include \"tinyformat.h\"\n #include \"util.h\"\n \n #include <assert.h>\n \n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+const std::string CBaseChainParams::MAX_NETWORK_TYPES = \"unknown_chain\";\n+\n /**\n  * Main network\n  */\n@@ -71,25 +77,19 @@ const CBaseChainParams& BaseParams()\n     return *pCurrentBaseParams;\n }\n \n-void SelectBaseParams(CBaseChainParams::Network network)\n+void SelectBaseParams(const std::string& chain)\n {\n-    switch (network) {\n-    case CBaseChainParams::MAIN:\n+    if (chain == CBaseChainParams::MAIN)\n         pCurrentBaseParams = &mainParams;\n-        break;\n-    case CBaseChainParams::TESTNET:\n+    else if (chain == CBaseChainParams::TESTNET)\n         pCurrentBaseParams = &testNetParams;\n-        break;\n-    case CBaseChainParams::REGTEST:\n+    else if (chain == CBaseChainParams::REGTEST)\n         pCurrentBaseParams = &regTestParams;\n-        break;\n-    default:\n-        assert(false && \"Unimplemented network\");\n-        return;\n-    }\n+    else\n+        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n-CBaseChainParams::Network NetworkIdFromCommandLine()\n+std::string ChainNameFromCommandLine()\n {\n     bool fRegTest = GetBoolArg(\"-regtest\", false);\n     bool fTestNet = GetBoolArg(\"-testnet\", false);\n@@ -105,7 +105,7 @@ CBaseChainParams::Network NetworkIdFromCommandLine()\n \n bool SelectBaseParamsFromCommandLine()\n {\n-    CBaseChainParams::Network network = NetworkIdFromCommandLine();\n+    std::string network = ChainNameFromCommandLine();\n     if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n         return false;\n "
      },
      {
        "sha": "25a5b3450bdc83a6054bc96b869c1859b3bf2059",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
        "patch": "@@ -15,13 +15,11 @@\n class CBaseChainParams\n {\n public:\n-    enum Network {\n-        MAIN,\n-        TESTNET,\n-        REGTEST,\n-\n-        MAX_NETWORK_TYPES\n-    };\n+    /** BIP70 chain name strings (main, test or regtest) */\n+    static const std::string MAIN;\n+    static const std::string TESTNET;\n+    static const std::string REGTEST;\n+    static const std::string MAX_NETWORK_TYPES;\n \n     const std::string& DataDir() const { return strDataDir; }\n     int RPCPort() const { return nRPCPort; }\n@@ -40,13 +38,13 @@ class CBaseChainParams\n const CBaseChainParams& BaseParams();\n \n /** Sets the params returned by Params() to those for the given network. */\n-void SelectBaseParams(CBaseChainParams::Network network);\n+void SelectBaseParams(const std::string& chain);\n \n /**\n- * Looks for -regtest or -testnet and returns the appropriate Network ID.\n- * Returns MAX_NETWORK_TYPES if an invalid combination is given.\n+ * Looks for -regtest, -testnet and returns the appropriate BIP70 chain name.\n+ * @return CBaseChainParams::MAX_NETWORK_TYPES if an invalid combination is given. CBaseChainParams::MAIN by default.\n  */\n-CBaseChainParams::Network NetworkIdFromCommandLine();\n+std::string ChainNameFromCommandLine();\n \n /**\n  * Calls NetworkIdFromCommandLine() and then calls SelectParams as appropriate."
      },
      {
        "sha": "a74fbfc0d713a8fa1581f765cfbdd753f162a919",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
        "patch": "@@ -32,13 +32,13 @@ CWallet* pwalletMain;\n extern bool fPrintToConsole;\n extern void noui_connect();\n \n-BasicTestingSetup::BasicTestingSetup(CBaseChainParams::Network network)\n+BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n {\n         ECC_Start();\n         SetupEnvironment();\n         fPrintToDebugLog = false; // don't want to write to debug.log file\n         fCheckBlockIndex = true;\n-        SelectParams(network);\n+        SelectParams(chainName);\n         noui_connect();\n }\n \n@@ -47,7 +47,7 @@ BasicTestingSetup::~BasicTestingSetup()\n         ECC_Stop();\n }\n \n-TestingSetup::TestingSetup(CBaseChainParams::Network network) : BasicTestingSetup(network)\n+TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(chainName)\n {\n #ifdef ENABLE_WALLET\n         bitdb.MakeMock();"
      },
      {
        "sha": "0bab4b68319e108b645f4aad9b53386f3f4f7f2a",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
        "patch": "@@ -12,7 +12,7 @@\n  * This just configures logging and chain parameters.\n  */\n struct BasicTestingSetup {\n-    BasicTestingSetup(CBaseChainParams::Network network = CBaseChainParams::MAIN);\n+    BasicTestingSetup(const std::string& chainName = CBaseChainParams::MAIN);\n     ~BasicTestingSetup();\n };\n \n@@ -25,7 +25,7 @@ struct TestingSetup: public BasicTestingSetup {\n     boost::filesystem::path pathTemp;\n     boost::thread_group threadGroup;\n \n-    TestingSetup(CBaseChainParams::Network network = CBaseChainParams::MAIN);\n+    TestingSetup(const std::string& chainName = CBaseChainParams::MAIN);\n     ~TestingSetup();\n };\n "
      }
    ]
  },
  {
    "sha": "55a89751faaada5598771d10401030e9e86eecbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NWE4OTc1MWZhYWFkYTU1OTg3NzFkMTA0MDEwMzBlOWU4NmVlY2Jk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T07:00:17Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-20T12:28:43Z"
      },
      "message": "Chainparams: Translations: DRY: options and error strings\n\nAlso remove SelectBaseParamsFromCommandLine and SelectParamsFromCommandLine",
      "tree": {
        "sha": "87607d31265c50db8955f805d280faeb8e82ab03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87607d31265c50db8955f805d280faeb8e82ab03"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55a89751faaada5598771d10401030e9e86eecbd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55a89751faaada5598771d10401030e9e86eecbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55a89751faaada5598771d10401030e9e86eecbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55a89751faaada5598771d10401030e9e86eecbd/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f3525e24e3a156eaa004ca28a59fe2d449dc1f9e"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 37,
      "deletions": 51
    },
    "files": [
      {
        "sha": "44b1586c18a979d70a0335124c890a7de321b7c2",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -23,9 +23,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n-    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n-    strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                             \"solved instantly. This is intended for regression testing tools and app development.\"));\n+    AppendParamsHelpMessages(strUsage);\n     strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), \"127.0.0.1\"));\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\"), 8332, 18332));\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));\n@@ -88,8 +86,10 @@ static bool AppInitRPC(int argc, char* argv[])\n         return false;\n     }\n     // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n-    if (!SelectBaseParamsFromCommandLine()) {\n-        fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+    try {\n+        SelectBaseParams(ChainNameFromCommandLine());\n+    } catch(std::exception &e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }\n     return true;"
      },
      {
        "sha": "5cd5b6657dfb4bf88bf46263828343b208924eb0",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -35,8 +35,10 @@ static bool AppInitRawTx(int argc, char* argv[])\n     ParseParameters(argc, argv);\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+    try {\n+        SelectParams(ChainNameFromCommandLine());\n+    } catch(std::exception &e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }\n \n@@ -58,8 +60,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n         strUsage += HelpMessageOpt(\"-create\", _(\"Create new, empty TX.\"));\n         strUsage += HelpMessageOpt(\"-json\", _(\"Select JSON output\"));\n         strUsage += HelpMessageOpt(\"-txid\", _(\"Output only the hex-encoded transaction id of the resultant transaction.\"));\n-        strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\"));\n-        strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n+        AppendParamsHelpMessages(strUsage);\n \n         fprintf(stdout, \"%s\", strUsage.c_str());\n "
      },
      {
        "sha": "d8fa473473c6e8c43f8f460d166845c33315ea6c",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -102,8 +102,10 @@ bool AppInit(int argc, char* argv[])\n             return false;\n         }\n         // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-        if (!SelectParamsFromCommandLine()) {\n-            fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+        try {\n+            SelectParams(ChainNameFromCommandLine());\n+        } catch(std::exception &e) {\n+            fprintf(stderr, \"Error: %s\\n\", e.what());\n             return false;\n         }\n "
      },
      {
        "sha": "09881ee8e7c9ae50c3f7c2c2e61d1a7a0aae1947",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -278,13 +278,3 @@ void SelectParams(const std::string& network)\n     SelectBaseParams(network);\n     pCurrentParams = &Params(network);\n }\n-\n-bool SelectParamsFromCommandLine()\n-{\n-    std::string network = ChainNameFromCommandLine();\n-    if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n-        return false;\n-\n-    SelectParams(network);\n-    return true;\n-}"
      },
      {
        "sha": "fd7a840d21b2aa534df51c7a7d7f647f1354686e",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -114,10 +114,4 @@ CChainParams& Params(const std::string& chain);\n  */\n void SelectParams(const std::string& chain);\n \n-/**\n- * Looks for -regtest or -testnet and then calls SelectParams as appropriate.\n- * Returns false if an invalid combination is given.\n- */\n-bool SelectParamsFromCommandLine();\n-\n #endif // BITCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "db2dc751f5985187f9f548b50cd11ce215c22634",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 12,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -13,7 +13,16 @@\n const std::string CBaseChainParams::MAIN = \"main\";\n const std::string CBaseChainParams::TESTNET = \"test\";\n const std::string CBaseChainParams::REGTEST = \"regtest\";\n-const std::string CBaseChainParams::MAX_NETWORK_TYPES = \"unknown_chain\";\n+\n+void AppendParamsHelpMessages(std::string& strUsage, bool debugHelp)\n+{\n+    strUsage += HelpMessageGroup(_(\"Chain selection options:\"));\n+    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test chain\"));\n+    if (debugHelp) {\n+        strUsage += HelpMessageOpt(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n+                                   \"This is intended for regression testing tools and app development.\");\n+    }\n+}\n \n /**\n  * Main network\n@@ -95,24 +104,14 @@ std::string ChainNameFromCommandLine()\n     bool fTestNet = GetBoolArg(\"-testnet\", false);\n \n     if (fTestNet && fRegTest)\n-        return CBaseChainParams::MAX_NETWORK_TYPES;\n+        throw std::runtime_error(\"Invalid combination of -regtest and -testnet.\");\n     if (fRegTest)\n         return CBaseChainParams::REGTEST;\n     if (fTestNet)\n         return CBaseChainParams::TESTNET;\n     return CBaseChainParams::MAIN;\n }\n \n-bool SelectBaseParamsFromCommandLine()\n-{\n-    std::string network = ChainNameFromCommandLine();\n-    if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n-        return false;\n-\n-    SelectBaseParams(network);\n-    return true;\n-}\n-\n bool AreBaseParamsConfigured()\n {\n     return pCurrentBaseParams != NULL;"
      },
      {
        "sha": "095c4cbdcbfa841305e657b657a90ac637276df4",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -19,7 +19,6 @@ class CBaseChainParams\n     static const std::string MAIN;\n     static const std::string TESTNET;\n     static const std::string REGTEST;\n-    static const std::string MAX_NETWORK_TYPES;\n \n     const std::string& DataDir() const { return strDataDir; }\n     int RPCPort() const { return nRPCPort; }\n@@ -31,6 +30,12 @@ class CBaseChainParams\n     std::string strDataDir;\n };\n \n+/**\n+ * Append the help messages for the chainparams options to the\n+ * parameter string.\n+ */\n+void AppendParamsHelpMessages(std::string& strUsage, bool debugHelp=true);\n+\n /**\n  * Return the currently selected parameters. This won't change after app\n  * startup, except for unit tests.\n@@ -46,12 +51,6 @@ void SelectBaseParams(const std::string& chain);\n  */\n std::string ChainNameFromCommandLine();\n \n-/**\n- * Calls NetworkIdFromCommandLine() and then calls SelectParams as appropriate.\n- * Returns false if an invalid combination is given.\n- */\n-bool SelectBaseParamsFromCommandLine();\n-\n /**\n  * Return true if SelectBaseParamsFromCommandLine() has been called to select\n  * a network."
      },
      {
        "sha": "9bf21cfa37079e1802870d9bdbe7d910053e8e7c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -396,11 +396,10 @@ std::string HelpMessage(HelpMessageMode mode)\n     {\n         strUsage += HelpMessageOpt(\"-printpriority\", strprintf(\"Log transaction priority and fee per kB when mining blocks (default: %u)\", 0));\n         strUsage += HelpMessageOpt(\"-privdb\", strprintf(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\", 1));\n-        strUsage += HelpMessageOpt(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n-            \"This is intended for regression testing tools and app development.\");\n     }\n     strUsage += HelpMessageOpt(\"-shrinkdebugfile\", _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\"));\n-    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n+\n+    AppendParamsHelpMessages(strUsage, showDebug);\n \n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     if (showDebug)"
      },
      {
        "sha": "c6bb7112e1b31deeb2dd84711f323f0d62c9d113",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55a89751faaada5598771d10401030e9e86eecbd/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55a89751faaada5598771d10401030e9e86eecbd/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=55a89751faaada5598771d10401030e9e86eecbd",
        "patch": "@@ -604,8 +604,10 @@ int main(int argc, char *argv[])\n     // - Needs to be done before createOptionsModel\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n+    try {\n+        SelectParams(ChainNameFromCommandLine());\n+    } catch(std::exception &e) {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: %1\").arg(e.what()));\n         return 1;\n     }\n #ifdef ENABLE_WALLET"
      }
    ]
  },
  {
    "sha": "41db8c4733b34d56834162c4d054823c240ffc92",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MWRiOGM0NzMzYjM0ZDU2ODM0MTYyYzRkMDU0ODIzYzI0MGZmYzky",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T09:35:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T12:31:40Z"
      },
      "message": "http: Restrict maximum size of request line + headers\n\nPrevent memory exhaustion by sending lots of data.\nAlso add a test to `httpbasics.py`.\n\nCloses #6425",
      "tree": {
        "sha": "07b3417f8fc0ff7760be7534a6df349f951b5529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07b3417f8fc0ff7760be7534a6df349f951b5529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41db8c4733b34d56834162c4d054823c240ffc92",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41db8c4733b34d56834162c4d054823c240ffc92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41db8c4733b34d56834162c4d054823c240ffc92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41db8c4733b34d56834162c4d054823c240ffc92/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da7d57fb9501ad8939a2923f2a60fa540eae8cfa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da7d57fb9501ad8939a2923f2a60fa540eae8cfa"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7888114c54df4a30b133feb48e1f197f583517db",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41db8c4733b34d56834162c4d054823c240ffc92/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41db8c4733b34d56834162c4d054823c240ffc92/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=41db8c4733b34d56834162c4d054823c240ffc92",
        "patch": "@@ -97,5 +97,19 @@ def run_test(self):\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n \n+        # Check excessive request size\n+        conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n+        conn.connect()\n+        conn.request('GET', '/' + ('x'*1000), '', headers)\n+        out1 = conn.getresponse()\n+        assert_equal(out1.status, httplib.NOT_FOUND)\n+\n+        conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n+        conn.connect()\n+        conn.request('GET', '/' + ('x'*10000), '', headers)\n+        out1 = conn.getresponse()\n+        assert_equal(out1.status, httplib.BAD_REQUEST)\n+\n+\n if __name__ == '__main__':\n     HTTPBasicsTest ().main ()"
      },
      {
        "sha": "8698abb900e074c086995af3e5edd8195f5bc750",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41db8c4733b34d56834162c4d054823c240ffc92/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41db8c4733b34d56834162c4d054823c240ffc92/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=41db8c4733b34d56834162c4d054823c240ffc92",
        "patch": "@@ -38,6 +38,9 @@\n #include <boost/foreach.hpp>\n #include <boost/scoped_ptr.hpp>\n \n+/** Maximum size of http request (request line + headers) */\n+static const size_t MAX_HEADERS_SIZE = 8192;\n+\n /** HTTP request work item */\n class HTTPWorkItem : public HTTPClosure\n {\n@@ -414,6 +417,7 @@ bool InitHTTPServer()\n     }\n \n     evhttp_set_timeout(http, GetArg(\"-rpcservertimeout\", DEFAULT_HTTP_SERVER_TIMEOUT));\n+    evhttp_set_max_headers_size(http, MAX_HEADERS_SIZE);\n     evhttp_set_max_body_size(http, MAX_SIZE);\n     evhttp_set_gencb(http, http_request_cb, NULL);\n "
      }
    ]
  },
  {
    "sha": "e26a3f6713f8f12640cdb75aad48676e901e0c75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjZhM2Y2NzEzZjhmMTI2NDBjZGI3NWFhZDQ4Njc2ZTkwMWUwYzc1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T14:59:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T15:06:28Z"
      },
      "message": "Merge pull request #6235\n\n55a8975 Chainparams: Translations: DRY: options and error strings (Jorge Tim\u00f3n)\nf3525e2 Chainparams: Replace CBaseChainParams::Network enum with string constants (suggested by Wladimir) (Jorge Tim\u00f3n)",
      "tree": {
        "sha": "d661b5d59dc32e59570910adf494155c4093faf6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d661b5d59dc32e59570910adf494155c4093faf6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e26a3f6713f8f12640cdb75aad48676e901e0c75",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJlh0AAoJEHSBCwEjRsmmtDcH/jRZfEDCCKaj7licIInuYtB+\nSa4KRMU4swTE45/zSa3XKyQ18yw7l39YTT9bMmbd2QPH4YCUDSMFHfWJqLlnf9+V\nZfg9O9fYE5SzDlXBHRFkRnYlZNYdnW2S4yNt2kMmMvS05O3piTfSDp5Z6X5lVBSB\nuHjSWH1cWLM4/aqhZOLin9ZWNwA3emSYXVps5UI5BdpxYq9biaBAlS6Bkz5rXD82\n+POKLUOsL7d8AHzFQh26YhzQL8pW1k0KWRQXT6oTzvQhJgUPGdt2MZLNON8t4FMD\nGL36Z64O3BZQQx1mWSsN0FnptPOqyYmG+RoSJ5J6lihXbTazJHS+uQ2b8owmLtY=\n=tMgA\n-----END PGP SIGNATURE-----",
        "payload": "tree d661b5d59dc32e59570910adf494155c4093faf6\nparent 020c4073a03a69709ed6b33d10e163ab86d65f4f\nparent 55a89751faaada5598771d10401030e9e86eecbd\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445353173 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445353588 +0200\n\nMerge pull request #6235\n\n55a8975 Chainparams: Translations: DRY: options and error strings (Jorge Tim\u00f3n)\nf3525e2 Chainparams: Replace CBaseChainParams::Network enum with string constants (suggested by Wladimir) (Jorge Tim\u00f3n)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e26a3f6713f8f12640cdb75aad48676e901e0c75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e26a3f6713f8f12640cdb75aad48676e901e0c75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e26a3f6713f8f12640cdb75aad48676e901e0c75/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "020c4073a03a69709ed6b33d10e163ab86d65f4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/020c4073a03a69709ed6b33d10e163ab86d65f4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/020c4073a03a69709ed6b33d10e163ab86d65f4f"
      },
      {
        "sha": "55a89751faaada5598771d10401030e9e86eecbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55a89751faaada5598771d10401030e9e86eecbd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55a89751faaada5598771d10401030e9e86eecbd"
      }
    ],
    "stats": {
      "total": 169,
      "additions": 79,
      "deletions": 90
    },
    "files": [
      {
        "sha": "364baf9d1395e9849c0f89dd35e7b1f938e457c1",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -31,9 +31,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n-    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n-    strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                             \"solved instantly. This is intended for regression testing tools and app development.\"));\n+    AppendParamsHelpMessages(strUsage);\n     strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), \"127.0.0.1\"));\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\"), 8332, 18332));\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));\n@@ -94,8 +92,10 @@ static bool AppInitRPC(int argc, char* argv[])\n         return false;\n     }\n     // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n-    if (!SelectBaseParamsFromCommandLine()) {\n-        fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+    try {\n+        SelectBaseParams(ChainNameFromCommandLine());\n+    } catch(std::exception &e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }\n     if (GetBoolArg(\"-rpcssl\", false))"
      },
      {
        "sha": "5630d20cc5a9e7ed68172e0ac02cf499cb9f9689",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -35,8 +35,10 @@ static bool AppInitRawTx(int argc, char* argv[])\n     ParseParameters(argc, argv);\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+    try {\n+        SelectParams(ChainNameFromCommandLine());\n+    } catch(std::exception &e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }\n \n@@ -58,8 +60,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n         strUsage += HelpMessageOpt(\"-create\", _(\"Create new, empty TX.\"));\n         strUsage += HelpMessageOpt(\"-json\", _(\"Select JSON output\"));\n         strUsage += HelpMessageOpt(\"-txid\", _(\"Output only the hex-encoded transaction id of the resultant transaction.\"));\n-        strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\"));\n-        strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n+        AppendParamsHelpMessages(strUsage);\n \n         fprintf(stdout, \"%s\", strUsage.c_str());\n "
      },
      {
        "sha": "284a42b32659f5805310fd43262a9e971be0316b",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -107,8 +107,10 @@ bool AppInit(int argc, char* argv[])\n             return false;\n         }\n         // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-        if (!SelectParamsFromCommandLine()) {\n-            fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+        try {\n+            SelectParams(ChainNameFromCommandLine());\n+        } catch(std::exception &e) {\n+            fprintf(stderr, \"Error: %s\\n\", e.what());\n             return false;\n         }\n "
      },
      {
        "sha": "dd26c3b31a359f84b6c4ed6d09fb071ad86fcfa6",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 20,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"chainparams.h\"\n \n+#include \"tinyformat.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n@@ -266,31 +267,20 @@ const CChainParams &Params() {\n     return *pCurrentParams;\n }\n \n-CChainParams &Params(CBaseChainParams::Network network) {\n-    switch (network) {\n-        case CBaseChainParams::MAIN:\n+CChainParams& Params(const std::string& chain)\n+{\n+    if (chain == CBaseChainParams::MAIN)\n             return mainParams;\n-        case CBaseChainParams::TESTNET:\n+    else if (chain == CBaseChainParams::TESTNET)\n             return testNetParams;\n-        case CBaseChainParams::REGTEST:\n+    else if (chain == CBaseChainParams::REGTEST)\n             return regTestParams;\n-        default:\n-            assert(false && \"Unimplemented network\");\n-            return mainParams;\n-    }\n+    else\n+        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n-void SelectParams(CBaseChainParams::Network network) {\n+void SelectParams(const std::string& network)\n+{\n     SelectBaseParams(network);\n     pCurrentParams = &Params(network);\n }\n-\n-bool SelectParamsFromCommandLine()\n-{\n-    CBaseChainParams::Network network = NetworkIdFromCommandLine();\n-    if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n-        return false;\n-\n-    SelectParams(network);\n-    return true;\n-}"
      },
      {
        "sha": "cb061d596ed989cfcac124c25aa656129e145f27",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -105,16 +105,15 @@ class CChainParams\n  */\n const CChainParams &Params();\n \n-/** Return parameters for the given network. */\n-CChainParams &Params(CBaseChainParams::Network network);\n-\n-/** Sets the params returned by Params() to those for the given network. */\n-void SelectParams(CBaseChainParams::Network network);\n+/**\n+ * @returns CChainParams for the given BIP70 chain name.\n+ */\n+CChainParams& Params(const std::string& chain);\n \n /**\n- * Looks for -regtest or -testnet and then calls SelectParams as appropriate.\n- * Returns false if an invalid combination is given.\n+ * Sets the params returned by Params() to those for the given BIP70 chain name.\n+ * @throws std::runtime_error when the chain is not supported.\n  */\n-bool SelectParamsFromCommandLine();\n+void SelectParams(const std::string& chain);\n \n #endif // BITCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "db2dc751f5985187f9f548b50cd11ce215c22634",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 24,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -5,10 +5,25 @@\n \n #include \"chainparamsbase.h\"\n \n+#include \"tinyformat.h\"\n #include \"util.h\"\n \n #include <assert.h>\n \n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+\n+void AppendParamsHelpMessages(std::string& strUsage, bool debugHelp)\n+{\n+    strUsage += HelpMessageGroup(_(\"Chain selection options:\"));\n+    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test chain\"));\n+    if (debugHelp) {\n+        strUsage += HelpMessageOpt(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n+                                   \"This is intended for regression testing tools and app development.\");\n+    }\n+}\n+\n /**\n  * Main network\n  */\n@@ -71,48 +86,32 @@ const CBaseChainParams& BaseParams()\n     return *pCurrentBaseParams;\n }\n \n-void SelectBaseParams(CBaseChainParams::Network network)\n+void SelectBaseParams(const std::string& chain)\n {\n-    switch (network) {\n-    case CBaseChainParams::MAIN:\n+    if (chain == CBaseChainParams::MAIN)\n         pCurrentBaseParams = &mainParams;\n-        break;\n-    case CBaseChainParams::TESTNET:\n+    else if (chain == CBaseChainParams::TESTNET)\n         pCurrentBaseParams = &testNetParams;\n-        break;\n-    case CBaseChainParams::REGTEST:\n+    else if (chain == CBaseChainParams::REGTEST)\n         pCurrentBaseParams = &regTestParams;\n-        break;\n-    default:\n-        assert(false && \"Unimplemented network\");\n-        return;\n-    }\n+    else\n+        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n-CBaseChainParams::Network NetworkIdFromCommandLine()\n+std::string ChainNameFromCommandLine()\n {\n     bool fRegTest = GetBoolArg(\"-regtest\", false);\n     bool fTestNet = GetBoolArg(\"-testnet\", false);\n \n     if (fTestNet && fRegTest)\n-        return CBaseChainParams::MAX_NETWORK_TYPES;\n+        throw std::runtime_error(\"Invalid combination of -regtest and -testnet.\");\n     if (fRegTest)\n         return CBaseChainParams::REGTEST;\n     if (fTestNet)\n         return CBaseChainParams::TESTNET;\n     return CBaseChainParams::MAIN;\n }\n \n-bool SelectBaseParamsFromCommandLine()\n-{\n-    CBaseChainParams::Network network = NetworkIdFromCommandLine();\n-    if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n-        return false;\n-\n-    SelectBaseParams(network);\n-    return true;\n-}\n-\n bool AreBaseParamsConfigured()\n {\n     return pCurrentBaseParams != NULL;"
      },
      {
        "sha": "095c4cbdcbfa841305e657b657a90ac637276df4",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 14,
        "deletions": 17,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -15,13 +15,10 @@\n class CBaseChainParams\n {\n public:\n-    enum Network {\n-        MAIN,\n-        TESTNET,\n-        REGTEST,\n-\n-        MAX_NETWORK_TYPES\n-    };\n+    /** BIP70 chain name strings (main, test or regtest) */\n+    static const std::string MAIN;\n+    static const std::string TESTNET;\n+    static const std::string REGTEST;\n \n     const std::string& DataDir() const { return strDataDir; }\n     int RPCPort() const { return nRPCPort; }\n@@ -33,26 +30,26 @@ class CBaseChainParams\n     std::string strDataDir;\n };\n \n+/**\n+ * Append the help messages for the chainparams options to the\n+ * parameter string.\n+ */\n+void AppendParamsHelpMessages(std::string& strUsage, bool debugHelp=true);\n+\n /**\n  * Return the currently selected parameters. This won't change after app\n  * startup, except for unit tests.\n  */\n const CBaseChainParams& BaseParams();\n \n /** Sets the params returned by Params() to those for the given network. */\n-void SelectBaseParams(CBaseChainParams::Network network);\n-\n-/**\n- * Looks for -regtest or -testnet and returns the appropriate Network ID.\n- * Returns MAX_NETWORK_TYPES if an invalid combination is given.\n- */\n-CBaseChainParams::Network NetworkIdFromCommandLine();\n+void SelectBaseParams(const std::string& chain);\n \n /**\n- * Calls NetworkIdFromCommandLine() and then calls SelectParams as appropriate.\n- * Returns false if an invalid combination is given.\n+ * Looks for -regtest, -testnet and returns the appropriate BIP70 chain name.\n+ * @return CBaseChainParams::MAX_NETWORK_TYPES if an invalid combination is given. CBaseChainParams::MAIN by default.\n  */\n-bool SelectBaseParamsFromCommandLine();\n+std::string ChainNameFromCommandLine();\n \n /**\n  * Return true if SelectBaseParamsFromCommandLine() has been called to select"
      },
      {
        "sha": "75c76e32586a34a39d96857677b4fbea6c08284a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -439,11 +439,10 @@ std::string HelpMessage(HelpMessageMode mode)\n     {\n         strUsage += HelpMessageOpt(\"-printpriority\", strprintf(\"Log transaction priority and fee per kB when mining blocks (default: %u)\", 0));\n         strUsage += HelpMessageOpt(\"-privdb\", strprintf(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\", 1));\n-        strUsage += HelpMessageOpt(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n-            \"This is intended for regression testing tools and app development.\");\n     }\n     strUsage += HelpMessageOpt(\"-shrinkdebugfile\", _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\"));\n-    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n+\n+    AppendParamsHelpMessages(strUsage, showDebug);\n \n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     if (showDebug)"
      },
      {
        "sha": "89d2d44fd71ce3229c66492eb0eb6f15757ba466",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -597,8 +597,10 @@ int main(int argc, char *argv[])\n     // - Needs to be done before createOptionsModel\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n+    try {\n+        SelectParams(ChainNameFromCommandLine());\n+    } catch(std::exception &e) {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: %1\").arg(e.what()));\n         return 1;\n     }\n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "a74fbfc0d713a8fa1581f765cfbdd753f162a919",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -32,13 +32,13 @@ CWallet* pwalletMain;\n extern bool fPrintToConsole;\n extern void noui_connect();\n \n-BasicTestingSetup::BasicTestingSetup(CBaseChainParams::Network network)\n+BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n {\n         ECC_Start();\n         SetupEnvironment();\n         fPrintToDebugLog = false; // don't want to write to debug.log file\n         fCheckBlockIndex = true;\n-        SelectParams(network);\n+        SelectParams(chainName);\n         noui_connect();\n }\n \n@@ -47,7 +47,7 @@ BasicTestingSetup::~BasicTestingSetup()\n         ECC_Stop();\n }\n \n-TestingSetup::TestingSetup(CBaseChainParams::Network network) : BasicTestingSetup(network)\n+TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(chainName)\n {\n #ifdef ENABLE_WALLET\n         bitdb.MakeMock();"
      },
      {
        "sha": "0bab4b68319e108b645f4aad9b53386f3f4f7f2a",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e26a3f6713f8f12640cdb75aad48676e901e0c75/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "patch": "@@ -12,7 +12,7 @@\n  * This just configures logging and chain parameters.\n  */\n struct BasicTestingSetup {\n-    BasicTestingSetup(CBaseChainParams::Network network = CBaseChainParams::MAIN);\n+    BasicTestingSetup(const std::string& chainName = CBaseChainParams::MAIN);\n     ~BasicTestingSetup();\n };\n \n@@ -25,7 +25,7 @@ struct TestingSetup: public BasicTestingSetup {\n     boost::filesystem::path pathTemp;\n     boost::thread_group threadGroup;\n \n-    TestingSetup(CBaseChainParams::Network network = CBaseChainParams::MAIN);\n+    TestingSetup(const std::string& chainName = CBaseChainParams::MAIN);\n     ~TestingSetup();\n };\n "
      }
    ]
  },
  {
    "sha": "c6de5cc88614f587ae2d0e360536412407e02836",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNmRlNWNjODg2MTRmNTg3YWUyZDBlMzYwNTM2NDEyNDA3ZTAyODM2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T15:08:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-20T15:09:22Z"
      },
      "message": "Merge pull request #6796\n\nc7b36cc Change URLs to https in debian/control (Matt Corallo)\ne253e83 Update debian/changelog and slight tweak to debian/control (Matt Corallo)",
      "tree": {
        "sha": "675f24615021ff2317f11c7ed89768a323d0cbff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/675f24615021ff2317f11c7ed89768a323d0cbff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6de5cc88614f587ae2d0e360536412407e02836",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJlkiAAoJEHSBCwEjRsmmxzYH/Rq206XSJna3Z9hKa6Di2UHK\nhYf+3HQczaYe0TFtH/QlYgI80SmFhhqjbFXGNjKtrxg8qh2Xjga+7o8Ihk8wv7S4\nA6twMK+BZqySNs6LpXXtV+/A/DmaeWxHr46FuiAeQSKwmeD54iVZwRLb9La7qsqI\niIpDl9Gam5OESCJNiCejqsxF2xXEA6l1c/YvY4xBhLqlXnJiE8+iEOI7tPAjV2eI\nIEtPsazOKXIDIzB0EeSKehBfiE3cWuLDdqMmXqr8I5LaDrDElWM1RHjMhOuPALAt\nfDY7jt0FgbxRUkJk78TPyhOngMBL1YDg3UfpRga/Jbey63Is/ILvGSFYcHDc2bU=\n=NWtj\n-----END PGP SIGNATURE-----",
        "payload": "tree 675f24615021ff2317f11c7ed89768a323d0cbff\nparent e26a3f6713f8f12640cdb75aad48676e901e0c75\nparent c7b36ccf4a9a71864d850d1c6f597351ba20430f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445353728 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445353762 +0200\n\nMerge pull request #6796\n\nc7b36cc Change URLs to https in debian/control (Matt Corallo)\ne253e83 Update debian/changelog and slight tweak to debian/control (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6de5cc88614f587ae2d0e360536412407e02836",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c6de5cc88614f587ae2d0e360536412407e02836",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6de5cc88614f587ae2d0e360536412407e02836/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e26a3f6713f8f12640cdb75aad48676e901e0c75",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e26a3f6713f8f12640cdb75aad48676e901e0c75"
      },
      {
        "sha": "c7b36ccf4a9a71864d850d1c6f597351ba20430f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7b36ccf4a9a71864d850d1c6f597351ba20430f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7b36ccf4a9a71864d850d1c6f597351ba20430f"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 34,
      "deletions": 3
    },
    "files": [
      {
        "sha": "110bfe03effcdad2f353ff9746ab9589e4a7c08e",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6de5cc88614f587ae2d0e360536412407e02836/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6de5cc88614f587ae2d0e360536412407e02836/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=c6de5cc88614f587ae2d0e360536412407e02836",
        "patch": "@@ -1,3 +1,33 @@\n+bitcoin (0.11.0-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n+\n+bitcoin (0.10.2-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n+\n+bitcoin (0.10.1-precise3) precise; urgency=medium\n+\n+  * Fix build dep (include python).\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n+\n+bitcoin (0.10.1-precise2) precise; urgency=medium\n+\n+  * Fix miniupnpc dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n+\n+bitcoin (0.10.1-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n+\n bitcoin (0.10.0-precise1) precise; urgency=medium\n \n   * New upstream releases."
      },
      {
        "sha": "2fd68583cecee6907b1e09bbe381aa11cf5e040b",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6de5cc88614f587ae2d0e360536412407e02836/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6de5cc88614f587ae2d0e360536412407e02836/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=c6de5cc88614f587ae2d0e360536412407e02836",
        "patch": "@@ -20,11 +20,12 @@ Build-Depends: debhelper,\n  qt4-qmake,\n  libqt4-dev,\n  libqrencode-dev,\n- libprotobuf-dev, protobuf-compiler\n+ libprotobuf-dev, protobuf-compiler,\n+ python\n Standards-Version: 3.9.2\n-Homepage: http://www.bitcoin.org/\n+Homepage: https://www.bitcoin.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: http://github.com/bitcoin/bitcoin\n+Vcs-Browser: https://github.com/bitcoin/bitcoin\n \n Package: bitcoind\n Architecture: any"
      }
    ]
  },
  {
    "sha": "ab1f56072a796b0ff039d6690c6ac929dbcbf243",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjFmNTYwNzJhNzk2YjBmZjAzOWQ2NjkwYzZhYzkyOWRiY2JmMjQz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-07T21:34:55Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-20T16:59:08Z"
      },
      "message": "Support -checkmempool=N, which runs checks on average once every N transactions",
      "tree": {
        "sha": "bd16f4d42d3a075a41879dbaef2674a25a7442e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd16f4d42d3a075a41879dbaef2674a25a7442e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab1f56072a796b0ff039d6690c6ac929dbcbf243",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab1f56072a796b0ff039d6690c6ac929dbcbf243",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab1f56072a796b0ff039d6690c6ac929dbcbf243",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab1f56072a796b0ff039d6690c6ac929dbcbf243/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c6de5cc88614f587ae2d0e360536412407e02836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6de5cc88614f587ae2d0e360536412407e02836",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6de5cc88614f587ae2d0e360536412407e02836"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "d899a1cf9817df66e88921e71f9e412533426845",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab1f56072a796b0ff039d6690c6ac929dbcbf243/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab1f56072a796b0ff039d6690c6ac929dbcbf243/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ab1f56072a796b0ff039d6690c6ac929dbcbf243",
        "patch": "@@ -836,7 +836,10 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         InitWarning(_(\"Warning: Unsupported argument -benchmark ignored, use -debug=bench.\"));\n \n     // Checkmempool and checkblockindex default to true in regtest mode\n-    mempool.setSanityCheck(GetBoolArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks()));\n+    int ratio = std::min<int>(std::max<int>(GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n+    if (ratio != 0) {\n+        mempool.setSanityCheck(1.0 / ratio);\n+    }\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", true);\n "
      },
      {
        "sha": "c379a45b4833bcbf2c4a4b4bf25f8e4ba3ccaed5",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab1f56072a796b0ff039d6690c6ac929dbcbf243/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab1f56072a796b0ff039d6690c6ac929dbcbf243/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ab1f56072a796b0ff039d6690c6ac929dbcbf243",
        "patch": "@@ -311,7 +311,7 @@ CTxMemPool::CTxMemPool(const CFeeRate& _minRelayFee) :\n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n     // of transactions in the pool\n-    fSanityCheck = false;\n+    nCheckFrequency = 0;\n \n     minerPolicyEstimator = new CBlockPolicyEstimator(_minRelayFee);\n }\n@@ -483,7 +483,7 @@ void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned in\n             if (it2 != mapTx.end())\n                 continue;\n             const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n+            if (nCheckFrequency != 0) assert(coins);\n             if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n                 transactionsToRemove.push_back(tx);\n                 break;\n@@ -553,7 +553,10 @@ void CTxMemPool::clear()\n \n void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n {\n-    if (!fSanityCheck)\n+    if (nCheckFrequency == 0)\n+        return;\n+\n+    if (insecure_rand() >= nCheckFrequency)\n         return;\n \n     LogPrint(\"mempool\", \"Checking mempool with %u transactions and %u inputs\\n\", (unsigned int)mapTx.size(), (unsigned int)mapNextTx.size());"
      },
      {
        "sha": "7d83decb5539a945c78a1463768c89a8c7a5627b",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab1f56072a796b0ff039d6690c6ac929dbcbf243/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab1f56072a796b0ff039d6690c6ac929dbcbf243/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=ab1f56072a796b0ff039d6690c6ac929dbcbf243",
        "patch": "@@ -277,7 +277,7 @@ class CInPoint\n class CTxMemPool\n {\n private:\n-    bool fSanityCheck; //! Normally false, true if -checkmempool or -regtest\n+    uint32_t nCheckFrequency; //! Value n means that n times in 2^32 we check.\n     unsigned int nTransactionsUpdated;\n     CBlockPolicyEstimator* minerPolicyEstimator;\n \n@@ -338,7 +338,7 @@ class CTxMemPool\n      * check does nothing.\n      */\n     void check(const CCoinsViewCache *pcoins) const;\n-    void setSanityCheck(bool _fSanityCheck) { fSanityCheck = _fSanityCheck; }\n+    void setSanityCheck(double dFrequency = 1.0) { nCheckFrequency = dFrequency * 4294967296.0; }\n \n     // addUnchecked must updated state for all ancestors of a given transaction,\n     // to track size/count of descendant transactions.  First version of"
      }
    ]
  },
  {
    "sha": "3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjIwZTIzOWM2MDJkZDdkM2FiODU5MzVlZjlkMWY2YzVlMTkwN2Qy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-21T06:49:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-21T06:50:16Z"
      },
      "message": "Merge pull request #6722\n\n58254aa Fix stale comment in CTxMemPool::TrimToSize. (Matt Corallo)\n2bc5018 Fix comment formatting tabs (Matt Corallo)\n8abe0f5 Undo GetMinFee-requires-extra-call-to-hit-0 (Matt Corallo)\n9e93640 Drop minRelayTxFee to 1000 (Matt Corallo)\n074cb15 Add reasonable test case for mempool trimming (Matt Corallo)\nd355cf4 Only call TrimToSize once per reorg/blocks disconnect (Matt Corallo)\n794a8ce Implement on-the-fly mempool size limitation. (Matt Corallo)\ne6c7b36 Print mempool size in KB when adding txn (Matt Corallo)\n241d607 Add CFeeRate += operator (Matt Corallo)\ne8bcdce Track (and define) ::minRelayTxFee in CTxMemPool (Matt Corallo)\n9c9b66f Fix calling mempool directly, instead of pool, in ATMP (Matt Corallo)\n49b6fd5 Add Mempool Expire function to remove old transactions (Pieter Wuille)\n78b82f4 Reverse the sort on the mempool's feerate index (Suhas Daftuar)",
      "tree": {
        "sha": "2705a5810ce71e9f382fc2bf073dccd6d8cd6e8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2705a5810ce71e9f382fc2bf073dccd6d8cd6e8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJzWoAAoJEHSBCwEjRsmmmEEH/jVc/jnhJPGSgLDCSelp55WK\njtOwkrRcVA5fa9y7FokpD7H6CxRVsK//i87DHrWGfUm2zIg4DUwdORabPWaJX3r0\n9HmhyVkr0OimT66uGieKypvq+E2uFTkpKiKw7vnTtIizjNHXjZP/zcLENWyvVpgh\n4IALGPyIwOUn6d/uo3rIYPPrHAgHXbFVdxrpOCJk01OnlKnsWEA5Fj8ACu+SymbC\nqQrD+STU/bBSkFoKWpQj1sgVl814IePrVYGZF7qwGc4Hl+FNm1l2RpBjOZIOF8RS\ngBQAg1Mmti4cAMO0kt77fkxwajO/nTGsBNanv6AemH7vHOHJ71/cnnIVngFbFrY=\n=mqie\n-----END PGP SIGNATURE-----",
        "payload": "tree 2705a5810ce71e9f382fc2bf073dccd6d8cd6e8c\nparent c6de5cc88614f587ae2d0e360536412407e02836\nparent 58254aa3bc2e92840679183cc884eb76670af525\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445410165 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445410216 +0200\n\nMerge pull request #6722\n\n58254aa Fix stale comment in CTxMemPool::TrimToSize. (Matt Corallo)\n2bc5018 Fix comment formatting tabs (Matt Corallo)\n8abe0f5 Undo GetMinFee-requires-extra-call-to-hit-0 (Matt Corallo)\n9e93640 Drop minRelayTxFee to 1000 (Matt Corallo)\n074cb15 Add reasonable test case for mempool trimming (Matt Corallo)\nd355cf4 Only call TrimToSize once per reorg/blocks disconnect (Matt Corallo)\n794a8ce Implement on-the-fly mempool size limitation. (Matt Corallo)\ne6c7b36 Print mempool size in KB when adding txn (Matt Corallo)\n241d607 Add CFeeRate += operator (Matt Corallo)\ne8bcdce Track (and define) ::minRelayTxFee in CTxMemPool (Matt Corallo)\n9c9b66f Fix calling mempool directly, instead of pool, in ATMP (Matt Corallo)\n49b6fd5 Add Mempool Expire function to remove old transactions (Pieter Wuille)\n78b82f4 Reverse the sort on the mempool's feerate index (Suhas Daftuar)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c6de5cc88614f587ae2d0e360536412407e02836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6de5cc88614f587ae2d0e360536412407e02836",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6de5cc88614f587ae2d0e360536412407e02836"
      },
      {
        "sha": "58254aa3bc2e92840679183cc884eb76670af525",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58254aa3bc2e92840679183cc884eb76670af525",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58254aa3bc2e92840679183cc884eb76670af525"
      }
    ],
    "stats": {
      "total": 418,
      "additions": 361,
      "deletions": 57
    },
    "files": [
      {
        "sha": "a4c7764cda2bfd3a7afcc4ffa9a286eb0a42a4c3",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -51,6 +51,7 @@ class CFeeRate\n     friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n     friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n     friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n+    CFeeRate& operator+=(const CFeeRate& a) { nSatoshisPerK += a.nSatoshisPerK; return *this; }\n     std::string ToString() const;\n \n     ADD_SERIALIZE_METHODS;"
      },
      {
        "sha": "5c961a3ad9df601082768380c56ba2227d30ddaf",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -320,6 +320,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-dbcache=<n>\", strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache));\n     strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\"));\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n+    strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n+    strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n #ifndef WIN32\n@@ -840,6 +842,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", true);\n \n+    // -mempoollimit limits\n+    int64_t nMempoolSizeLimit = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolDescendantSizeLimit = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+    if (nMempoolSizeLimit < 0 || nMempoolSizeLimit < nMempoolDescendantSizeLimit * 40)\n+        return InitError(strprintf(_(\"Error: -maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 25));\n+\n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n     nScriptCheckThreads = GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n     if (nScriptCheckThreads <= 0)"
      },
      {
        "sha": "d870280e993c78157d2e80fd69d6e68e5c4dc346",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 20,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(5000);\n+CFeeRate minRelayTxFee = CFeeRate(1000);\n \n CTxMemPool mempool(::minRelayTxFee);\n \n@@ -740,17 +740,14 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n-CAmount GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree)\n+CAmount GetMinRelayFee(const CTransaction& tx, const CTxMemPool& pool, unsigned int nBytes, bool fAllowFree)\n {\n-    {\n-        LOCK(mempool.cs);\n-        uint256 hash = tx.GetHash();\n-        double dPriorityDelta = 0;\n-        CAmount nFeeDelta = 0;\n-        mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n-        if (dPriorityDelta > 0 || nFeeDelta > 0)\n-            return 0;\n-    }\n+    uint256 hash = tx.GetHash();\n+    double dPriorityDelta = 0;\n+    CAmount nFeeDelta = 0;\n+    pool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+    if (dPriorityDelta > 0 || nFeeDelta > 0)\n+        return 0;\n \n     CAmount nMinFee = ::minRelayTxFee.GetFee(nBytes);\n \n@@ -779,7 +776,7 @@ static std::string FormatStateMessage(const CValidationState &state)\n }\n \n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fRejectAbsurdFee)\n+                        bool* pfMissingInputs, bool fOverrideMempoolLimit, bool fRejectAbsurdFee)\n {\n     AssertLockHeld(cs_main);\n     if (pfMissingInputs)\n@@ -879,17 +876,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CAmount mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n+        if (mempoolRejectFee > 0 && nFees < mempoolRejectFee) {\n+            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", false, strprintf(\"%d < %d\", nFees, mempoolRejectFee));\n+        } else if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+            // Require that free transactions have sufficient priority to be mined in the next block.\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient priority\");\n         }\n \n@@ -954,6 +954,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n+\n+        // trim mempool and check if tx was trimmed\n+        if (!fOverrideMempoolLimit) {\n+            int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n+            if (expired != 0)\n+                LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n+\n+            pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+            if (!pool.exists(tx.GetHash()))\n+                return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");\n+        }\n     }\n \n     SyncWithWallets(tx, NULL);\n@@ -2020,7 +2031,7 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     }\n }\n \n-/** Disconnect chainActive's tip. */\n+/** Disconnect chainActive's tip. You want to manually re-limit mempool size after this */\n bool static DisconnectTip(CValidationState &state) {\n     CBlockIndex *pindexDelete = chainActive.Tip();\n     assert(pindexDelete);\n@@ -2047,7 +2058,7 @@ bool static DisconnectTip(CValidationState &state) {\n         // ignore validation errors in resurrected transactions\n         list<CTransaction> removed;\n         CValidationState stateDummy;\n-        if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL)) {\n+        if (tx.IsCoinBase() || !AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL, true)) {\n             mempool.remove(tx, removed, true);\n         } else if (mempool.exists(tx.GetHash())) {\n             vHashUpdate.push_back(tx.GetHash());\n@@ -2220,9 +2231,11 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n     const CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n     // Disconnect active blocks which are no longer in the best chain.\n+    bool fBlocksDisconnected = false;\n     while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n         if (!DisconnectTip(state))\n             return false;\n+        fBlocksDisconnected = true;\n     }\n \n     // Build list of new blocks to connect.\n@@ -2268,6 +2281,9 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n     }\n     }\n \n+    if (fBlocksDisconnected)\n+        mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+\n     // Callbacks/notifications for a new best chain.\n     if (fInvalidFound)\n         CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n@@ -2354,6 +2370,8 @@ bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n         }\n     }\n \n+    mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+\n     // The resulting new best tip may not be in setBlockIndexCandidates anymore, so\n     // add it again.\n     BlockMap::iterator it = mapBlockIndex.begin();\n@@ -4290,10 +4308,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             RelayTransaction(tx);\n             vWorkQueue.push_back(inv.hash);\n \n-            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u)\\n\",\n+            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u txn, %u kB)\\n\",\n                 pfrom->id,\n                 tx.GetHash().ToString(),\n-                mempool.size());\n+                mempool.size(), mempool.DynamicMemoryUsage() / 1000);\n \n             // Recursively process any orphan transactions that depended on this one\n             set<NodeId> setMisbehaving;"
      },
      {
        "sha": "202d2c772ba896b3f9f71cba6d1e6121ddd53594",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -51,6 +51,10 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n+/** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n+static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n /** The pre-allocation chunk size for blk?????.dat files (since 0.8) */\n@@ -225,7 +229,7 @@ void PruneAndFlush();\n \n /** (try to) add transaction to memory pool **/\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fRejectAbsurdFee=false);\n+                        bool* pfMissingInputs, bool fOverrideMempoolLimit=false, bool fRejectAbsurdFee=false);\n \n \n struct CNodeStateStats {"
      },
      {
        "sha": "4b964735042dabbffcc4bcc266942a28b99b5833",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -809,7 +809,7 @@ UniValue sendrawtransaction(const UniValue& params, bool fHelp)\n         // push to local node and sync with wallets\n         CValidationState state;\n         bool fMissingInputs;\n-        if (!AcceptToMemoryPool(mempool, state, tx, false, &fMissingInputs, !fOverrideFees)) {\n+        if (!AcceptToMemoryPool(mempool, state, tx, false, &fMissingInputs, false, !fOverrideFees)) {\n             if (state.IsInvalid()) {\n                 throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason()));\n             } else {"
      },
      {
        "sha": "0cf906a259e7b1fbdeefb655f5ced1fcc37b55ac",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 176,
        "deletions": 23,
        "changes": 199,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -153,11 +153,11 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n \n     std::vector<std::string> sortedOrder;\n     sortedOrder.resize(5);\n-    sortedOrder[0] = tx2.GetHash().ToString(); // 20000\n-    sortedOrder[1] = tx4.GetHash().ToString(); // 15000\n+    sortedOrder[0] = tx3.GetHash().ToString(); // 0\n+    sortedOrder[1] = tx5.GetHash().ToString(); // 10000\n     sortedOrder[2] = tx1.GetHash().ToString(); // 10000\n-    sortedOrder[3] = tx5.GetHash().ToString(); // 10000\n-    sortedOrder[4] = tx3.GetHash().ToString(); // 0\n+    sortedOrder[3] = tx4.GetHash().ToString(); // 15000\n+    sortedOrder[4] = tx2.GetHash().ToString(); // 20000\n     CheckSort(pool, sortedOrder);\n \n     /* low fee but with high fee child */\n@@ -169,7 +169,7 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     pool.addUnchecked(tx6.GetHash(), CTxMemPoolEntry(tx6, 0LL, 1, 10.0, 1, true));\n     BOOST_CHECK_EQUAL(pool.size(), 6);\n     // Check that at this point, tx6 is sorted low\n-    sortedOrder.push_back(tx6.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin(), tx6.GetHash().ToString());\n     CheckSort(pool, sortedOrder);\n \n     CTxMemPool::setEntries setAncestors;\n@@ -194,9 +194,9 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     BOOST_CHECK_EQUAL(pool.size(), 7);\n \n     // Now tx6 should be sorted higher (high fee child): tx7, tx6, tx2, ...\n-    sortedOrder.erase(sortedOrder.end()-1);\n-    sortedOrder.insert(sortedOrder.begin(), tx6.GetHash().ToString());\n-    sortedOrder.insert(sortedOrder.begin(), tx7.GetHash().ToString());\n+    sortedOrder.erase(sortedOrder.begin());\n+    sortedOrder.push_back(tx6.GetHash().ToString());\n+    sortedOrder.push_back(tx7.GetHash().ToString());\n     CheckSort(pool, sortedOrder);\n \n     /* low fee child of tx7 */\n@@ -211,7 +211,7 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     pool.addUnchecked(tx8.GetHash(), CTxMemPoolEntry(tx8, 0LL, 2, 10.0, 1, true), setAncestors);\n \n     // Now tx8 should be sorted low, but tx6/tx both high\n-    sortedOrder.push_back(tx8.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin(), tx8.GetHash().ToString());\n     CheckSort(pool, sortedOrder);\n \n     /* low fee child of tx7 */\n@@ -226,7 +226,7 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n \n     // tx9 should be sorted low\n     BOOST_CHECK_EQUAL(pool.size(), 9);\n-    sortedOrder.push_back(tx9.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin(), tx9.GetHash().ToString());\n     CheckSort(pool, sortedOrder);\n \n     std::vector<std::string> snapshotOrder = sortedOrder;\n@@ -255,21 +255,21 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n      *  tx8 and tx9 should both now be sorted higher\n      *  Final order after tx10 is added:\n      *\n-     *  tx7 = 2.2M (4 txs)\n-     *  tx6 = 2.2M (5 txs)\n-     *  tx10 = 200k (1 tx)\n-     *  tx8 = 200k (2 txs)\n-     *  tx9 = 200k (2 txs)\n-     *  tx2 = 20000 (1)\n-     *  tx4 = 15000 (1)\n-     *  tx1 = 10000 (1)\n-     *  tx5 = 10000 (1)\n      *  tx3 = 0 (1)\n+     *  tx5 = 10000 (1)\n+     *  tx1 = 10000 (1)\n+     *  tx4 = 15000 (1)\n+     *  tx2 = 20000 (1)\n+     *  tx9 = 200k (2 txs)\n+     *  tx8 = 200k (2 txs)\n+     *  tx10 = 200k (1 tx)\n+     *  tx6 = 2.2M (5 txs)\n+     *  tx7 = 2.2M (4 txs)\n      */\n-    sortedOrder.erase(sortedOrder.end()-2, sortedOrder.end()); // take out tx8, tx9 from the end\n-    sortedOrder.insert(sortedOrder.begin()+2, tx10.GetHash().ToString()); // tx10 is after tx6\n-    sortedOrder.insert(sortedOrder.begin()+3, tx9.GetHash().ToString());\n-    sortedOrder.insert(sortedOrder.begin()+3, tx8.GetHash().ToString());\n+    sortedOrder.erase(sortedOrder.begin(), sortedOrder.begin()+2); // take out tx9, tx8 from the beginning\n+    sortedOrder.insert(sortedOrder.begin()+5, tx9.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin()+6, tx8.GetHash().ToString());\n+    sortedOrder.insert(sortedOrder.begin()+7, tx10.GetHash().ToString()); // tx10 is just before tx6\n     CheckSort(pool, sortedOrder);\n \n     // there should be 10 transactions in the mempool\n@@ -281,4 +281,157 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n     CheckSort(pool, snapshotOrder);\n }\n \n+BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n+{\n+    CTxMemPool pool(CFeeRate(1000));\n+\n+    CMutableTransaction tx1 = CMutableTransaction();\n+    tx1.vin.resize(1);\n+    tx1.vin[0].scriptSig = CScript() << OP_1;\n+    tx1.vout.resize(1);\n+    tx1.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n+    tx1.vout[0].nValue = 10 * COIN;\n+    pool.addUnchecked(tx1.GetHash(), CTxMemPoolEntry(tx1, 10000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx1)));\n+\n+    CMutableTransaction tx2 = CMutableTransaction();\n+    tx2.vin.resize(1);\n+    tx2.vin[0].scriptSig = CScript() << OP_2;\n+    tx2.vout.resize(1);\n+    tx2.vout[0].scriptPubKey = CScript() << OP_2 << OP_EQUAL;\n+    tx2.vout[0].nValue = 10 * COIN;\n+    pool.addUnchecked(tx2.GetHash(), CTxMemPoolEntry(tx2, 5000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx2)));\n+\n+    pool.TrimToSize(pool.DynamicMemoryUsage()); // should do nothing\n+    BOOST_CHECK(pool.exists(tx1.GetHash()));\n+    BOOST_CHECK(pool.exists(tx2.GetHash()));\n+\n+    pool.TrimToSize(pool.DynamicMemoryUsage() * 3 / 4); // should remove the lower-feerate transaction\n+    BOOST_CHECK(pool.exists(tx1.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx2.GetHash()));\n+\n+    pool.addUnchecked(tx2.GetHash(), CTxMemPoolEntry(tx2, 5000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx2)));\n+    CMutableTransaction tx3 = CMutableTransaction();\n+    tx3.vin.resize(1);\n+    tx3.vin[0].prevout = COutPoint(tx2.GetHash(), 0);\n+    tx3.vin[0].scriptSig = CScript() << OP_2;\n+    tx3.vout.resize(1);\n+    tx3.vout[0].scriptPubKey = CScript() << OP_3 << OP_EQUAL;\n+    tx3.vout[0].nValue = 10 * COIN;\n+    pool.addUnchecked(tx3.GetHash(), CTxMemPoolEntry(tx3, 20000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx3)));\n+\n+    pool.TrimToSize(pool.DynamicMemoryUsage() * 3 / 4); // tx3 should pay for tx2 (CPFP)\n+    BOOST_CHECK(!pool.exists(tx1.GetHash()));\n+    BOOST_CHECK(pool.exists(tx2.GetHash()));\n+    BOOST_CHECK(pool.exists(tx3.GetHash()));\n+\n+    pool.TrimToSize(::GetSerializeSize(CTransaction(tx1), SER_NETWORK, PROTOCOL_VERSION)); // mempool is limited to tx1's size in memory usage, so nothing fits\n+    BOOST_CHECK(!pool.exists(tx1.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx2.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx3.GetHash()));\n+\n+    CFeeRate maxFeeRateRemoved(25000, ::GetSerializeSize(CTransaction(tx3), SER_NETWORK, PROTOCOL_VERSION) + ::GetSerializeSize(CTransaction(tx2), SER_NETWORK, PROTOCOL_VERSION));\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), maxFeeRateRemoved.GetFeePerK() + 1000);\n+\n+    CMutableTransaction tx4 = CMutableTransaction();\n+    tx4.vin.resize(2);\n+    tx4.vin[0].prevout.SetNull();\n+    tx4.vin[0].scriptSig = CScript() << OP_4;\n+    tx4.vin[1].prevout.SetNull();\n+    tx4.vin[1].scriptSig = CScript() << OP_4;\n+    tx4.vout.resize(2);\n+    tx4.vout[0].scriptPubKey = CScript() << OP_4 << OP_EQUAL;\n+    tx4.vout[0].nValue = 10 * COIN;\n+    tx4.vout[1].scriptPubKey = CScript() << OP_4 << OP_EQUAL;\n+    tx4.vout[1].nValue = 10 * COIN;\n+\n+    CMutableTransaction tx5 = CMutableTransaction();\n+    tx5.vin.resize(2);\n+    tx5.vin[0].prevout = COutPoint(tx4.GetHash(), 0);\n+    tx5.vin[0].scriptSig = CScript() << OP_4;\n+    tx5.vin[1].prevout.SetNull();\n+    tx5.vin[1].scriptSig = CScript() << OP_5;\n+    tx5.vout.resize(2);\n+    tx5.vout[0].scriptPubKey = CScript() << OP_5 << OP_EQUAL;\n+    tx5.vout[0].nValue = 10 * COIN;\n+    tx5.vout[1].scriptPubKey = CScript() << OP_5 << OP_EQUAL;\n+    tx5.vout[1].nValue = 10 * COIN;\n+\n+    CMutableTransaction tx6 = CMutableTransaction();\n+    tx6.vin.resize(2);\n+    tx6.vin[0].prevout = COutPoint(tx4.GetHash(), 1);\n+    tx6.vin[0].scriptSig = CScript() << OP_4;\n+    tx6.vin[1].prevout.SetNull();\n+    tx6.vin[1].scriptSig = CScript() << OP_6;\n+    tx6.vout.resize(2);\n+    tx6.vout[0].scriptPubKey = CScript() << OP_6 << OP_EQUAL;\n+    tx6.vout[0].nValue = 10 * COIN;\n+    tx6.vout[1].scriptPubKey = CScript() << OP_6 << OP_EQUAL;\n+    tx6.vout[1].nValue = 10 * COIN;\n+\n+    CMutableTransaction tx7 = CMutableTransaction();\n+    tx7.vin.resize(2);\n+    tx7.vin[0].prevout = COutPoint(tx5.GetHash(), 0);\n+    tx7.vin[0].scriptSig = CScript() << OP_5;\n+    tx7.vin[1].prevout = COutPoint(tx6.GetHash(), 0);\n+    tx7.vin[1].scriptSig = CScript() << OP_6;\n+    tx7.vout.resize(2);\n+    tx7.vout[0].scriptPubKey = CScript() << OP_7 << OP_EQUAL;\n+    tx7.vout[0].nValue = 10 * COIN;\n+    tx7.vout[0].scriptPubKey = CScript() << OP_7 << OP_EQUAL;\n+    tx7.vout[0].nValue = 10 * COIN;\n+\n+    pool.addUnchecked(tx4.GetHash(), CTxMemPoolEntry(tx4, 7000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx4)));\n+    pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 1000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx5)));\n+    pool.addUnchecked(tx6.GetHash(), CTxMemPoolEntry(tx6, 1100LL, 0, 10.0, 1, pool.HasNoInputsOf(tx6)));\n+    pool.addUnchecked(tx7.GetHash(), CTxMemPoolEntry(tx7, 9000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx7)));\n+\n+    // we only require this remove, at max, 2 txn, because its not clear what we're really optimizing for aside from that\n+    pool.TrimToSize(pool.DynamicMemoryUsage() - 1);\n+    BOOST_CHECK(pool.exists(tx4.GetHash()));\n+    BOOST_CHECK(pool.exists(tx6.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx7.GetHash()));\n+\n+    if (!pool.exists(tx5.GetHash()))\n+        pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 1000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx5)));\n+    pool.addUnchecked(tx7.GetHash(), CTxMemPoolEntry(tx7, 9000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx7)));\n+\n+    pool.TrimToSize(pool.DynamicMemoryUsage() / 2); // should maximize mempool size by only removing 5/7\n+    BOOST_CHECK(pool.exists(tx4.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx5.GetHash()));\n+    BOOST_CHECK(pool.exists(tx6.GetHash()));\n+    BOOST_CHECK(!pool.exists(tx7.GetHash()));\n+\n+    pool.addUnchecked(tx5.GetHash(), CTxMemPoolEntry(tx5, 1000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx5)));\n+    pool.addUnchecked(tx7.GetHash(), CTxMemPoolEntry(tx7, 9000LL, 0, 10.0, 1, pool.HasNoInputsOf(tx7)));\n+\n+    std::vector<CTransaction> vtx;\n+    std::list<CTransaction> conflicts;\n+    SetMockTime(42);\n+    SetMockTime(42 + CTxMemPool::ROLLING_FEE_HALFLIFE);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), maxFeeRateRemoved.GetFeePerK() + 1000);\n+    // ... we should keep the same min fee until we get a block\n+    pool.removeForBlock(vtx, 1, conflicts);\n+    SetMockTime(42 + 2*CTxMemPool::ROLLING_FEE_HALFLIFE);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), (maxFeeRateRemoved.GetFeePerK() + 1000)/2);\n+    // ... then feerate should drop 1/2 each halflife\n+\n+    SetMockTime(42 + 2*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(pool.DynamicMemoryUsage() * 5 / 2).GetFeePerK(), (maxFeeRateRemoved.GetFeePerK() + 1000)/4);\n+    // ... with a 1/2 halflife when mempool is < 1/2 its target size\n+\n+    SetMockTime(42 + 2*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(pool.DynamicMemoryUsage() * 9 / 2).GetFeePerK(), (maxFeeRateRemoved.GetFeePerK() + 1000)/8);\n+    // ... with a 1/4 halflife when mempool is < 1/4 its target size\n+\n+    SetMockTime(42 + 7*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 1000);\n+    // ... but feerate should never drop below 1000\n+\n+    SetMockTime(42 + 8*CTxMemPool::ROLLING_FEE_HALFLIFE + CTxMemPool::ROLLING_FEE_HALFLIFE/2 + CTxMemPool::ROLLING_FEE_HALFLIFE/4);\n+    BOOST_CHECK_EQUAL(pool.GetMinFee(1).GetFeePerK(), 0);\n+    // ... unless it has gone all the way to 0 (after getting past 1000/2)\n+\n+    SetMockTime(0);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "9b8e1c088b2d386986d23580d8efdaefaa40c0c9",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -23,7 +23,7 @@ ToMemPool(CMutableTransaction& tx)\n     LOCK(cs_main);\n \n     CValidationState state;\n-    return AcceptToMemoryPool(mempool, state, tx, false, NULL, false);\n+    return AcceptToMemoryPool(mempool, state, tx, false, NULL, true, false);\n }\n \n BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)"
      },
      {
        "sha": "bb148005cd274de57d0888a7b8d20497ef5aa79d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 88,
        "deletions": 4,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -13,6 +13,7 @@\n #include \"streams.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n+#include \"utiltime.h\"\n #include \"version.h\"\n \n using namespace std;\n@@ -305,15 +306,18 @@ void CTxMemPoolEntry::UpdateState(int64_t modifySize, CAmount modifyFee, int64_t\n     }\n }\n \n-CTxMemPool::CTxMemPool(const CFeeRate& _minRelayFee) :\n+CTxMemPool::CTxMemPool(const CFeeRate& _minReasonableRelayFee) :\n     nTransactionsUpdated(0)\n {\n+    clear();\n+\n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n     // of transactions in the pool\n     fSanityCheck = false;\n \n-    minerPolicyEstimator = new CBlockPolicyEstimator(_minRelayFee);\n+    minerPolicyEstimator = new CBlockPolicyEstimator(_minReasonableRelayFee);\n+    minReasonableRelayFee = _minReasonableRelayFee;\n }\n \n CTxMemPool::~CTxMemPool()\n@@ -538,6 +542,8 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n     }\n     // After the txs in the new block have been removed from the mempool, update policy estimates\n     minerPolicyEstimator->processBlock(nBlockHeight, entries, fCurrentEstimate);\n+    lastRollingFeeUpdate = GetTime();\n+    blockSinceLastRollingFeeBump = true;\n }\n \n void CTxMemPool::clear()\n@@ -548,6 +554,9 @@ void CTxMemPool::clear()\n     mapNextTx.clear();\n     totalTxSize = 0;\n     cachedInnerUsage = 0;\n+    lastRollingFeeUpdate = GetTime();\n+    blockSinceLastRollingFeeBump = false;\n+    rollingMinimumFeeRate = 0;\n     ++nTransactionsUpdated;\n }\n \n@@ -735,10 +744,10 @@ void CTxMemPool::PrioritiseTransaction(const uint256 hash, const string strHash,\n     LogPrintf(\"PrioritiseTransaction: %s priority += %f, fee += %d\\n\", strHash, dPriorityDelta, FormatMoney(nFeeDelta));\n }\n \n-void CTxMemPool::ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta)\n+void CTxMemPool::ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta) const\n {\n     LOCK(cs);\n-    std::map<uint256, std::pair<double, CAmount> >::iterator pos = mapDeltas.find(hash);\n+    std::map<uint256, std::pair<double, CAmount> >::const_iterator pos = mapDeltas.find(hash);\n     if (pos == mapDeltas.end())\n         return;\n     const std::pair<double, CAmount> &deltas = pos->second;\n@@ -792,6 +801,22 @@ void CTxMemPool::RemoveStaged(setEntries &stage) {\n     }\n }\n \n+int CTxMemPool::Expire(int64_t time) {\n+    LOCK(cs);\n+    indexed_transaction_set::nth_index<2>::type::iterator it = mapTx.get<2>().begin();\n+    setEntries toremove;\n+    while (it != mapTx.get<2>().end() && it->GetTime() < time) {\n+        toremove.insert(mapTx.project<0>(it));\n+        it++;\n+    }\n+    setEntries stage;\n+    BOOST_FOREACH(txiter removeit, toremove) {\n+        CalculateDescendants(removeit, stage);\n+    }\n+    RemoveStaged(stage);\n+    return stage.size();\n+}\n+\n bool CTxMemPool::addUnchecked(const uint256&hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate)\n {\n     LOCK(cs);\n@@ -837,3 +862,62 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+\n+        if (rollingMinimumFeeRate < minReasonableRelayFee.GetFeePerK() / 2) {\n+            rollingMinimumFeeRate = 0;\n+            return CFeeRate(0);\n+        }\n+    }\n+    return std::max(CFeeRate(rollingMinimumFeeRate), minReasonableRelayFee);\n+}\n+\n+void CTxMemPool::trackPackageRemoved(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+void CTxMemPool::TrimToSize(size_t sizelimit) {\n+    LOCK(cs);\n+\n+    unsigned nTxnRemoved = 0;\n+    CFeeRate maxFeeRateRemoved(0);\n+    while (DynamicMemoryUsage() > sizelimit) {\n+        indexed_transaction_set::nth_index<1>::type::iterator it = mapTx.get<1>().begin();\n+\n+        // We set the new mempool min fee to the feerate of the removed set, plus the\n+        // \"minimum reasonable fee rate\" (ie some value under which we consider txn\n+        // to have 0 fee). This way, we don't allow txn to enter mempool with feerate\n+        // equal to txn which were removed with no block in between.\n+        CFeeRate removed(it->GetFeesWithDescendants(), it->GetSizeWithDescendants());\n+        removed += minReasonableRelayFee;\n+        trackPackageRemoved(removed);\n+        maxFeeRateRemoved = std::max(maxFeeRateRemoved, removed);\n+\n+        setEntries stage;\n+        CalculateDescendants(mapTx.project<0>(it), stage);\n+        RemoveStaged(stage);\n+        nTxnRemoved += stage.size();\n+    }\n+\n+    if (maxFeeRateRemoved > CFeeRate(0))\n+        LogPrint(\"mempool\", \"Removed %u txn, rolling minimum fee bumped to %s\\n\", nTxnRemoved, maxFeeRateRemoved.ToString());\n+}"
      },
      {
        "sha": "d44995eefe737b67e7557a125fc47d5aed34590d",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 42,
        "deletions": 6,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -83,7 +83,7 @@ class CTxMemPoolEntry\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n-    CAmount GetFee() const { return nFee; }\n+    const CAmount& GetFee() const { return nFee; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return nHeight; }\n@@ -160,9 +160,9 @@ class CompareTxMemPoolEntryByFee\n         double f2 = aSize * bFees;\n \n         if (f1 == f2) {\n-            return a.GetTime() < b.GetTime();\n+            return a.GetTime() >= b.GetTime();\n         }\n-        return f1 > f2;\n+        return f1 < f2;\n     }\n \n     // Calculate which feerate to use for an entry (avoiding division).\n@@ -211,9 +211,10 @@ class CInPoint\n  *\n  * CTxMemPool::mapTx, and CTxMemPoolEntry bookkeeping:\n  *\n- * mapTx is a boost::multi_index that sorts the mempool on 2 criteria:\n+ * mapTx is a boost::multi_index that sorts the mempool on 3 criteria:\n  * - transaction hash\n  * - feerate [we use max(feerate of tx, feerate of tx with all descendants)]\n+ * - time in mempool\n  *\n  * Note: the term \"descendant\" refers to in-mempool transactions that depend on\n  * this one, while \"ancestor\" refers to in-mempool transactions that a given\n@@ -284,7 +285,18 @@ class CTxMemPool\n     uint64_t totalTxSize; //! sum of all mempool tx' byte sizes\n     uint64_t cachedInnerUsage; //! sum of dynamic memory usage of all the map elements (NOT the maps themselves)\n \n+    CFeeRate minReasonableRelayFee;\n+\n+    mutable int64_t lastRollingFeeUpdate;\n+    mutable bool blockSinceLastRollingFeeBump;\n+    mutable double rollingMinimumFeeRate; //! minimum fee to get into the pool, decreases exponentially\n+\n+    void trackPackageRemoved(const CFeeRate& rate);\n+\n public:\n+\n+    static const int ROLLING_FEE_HALFLIFE = 60 * 60 * 12; // public only for testing\n+\n     typedef boost::multi_index_container<\n         CTxMemPoolEntry,\n         boost::multi_index::indexed_by<\n@@ -294,6 +306,11 @@ class CTxMemPool\n             boost::multi_index::ordered_non_unique<\n                 boost::multi_index::identity<CTxMemPoolEntry>,\n                 CompareTxMemPoolEntryByFee\n+            >,\n+            // sorted by entry time\n+            boost::multi_index::ordered_non_unique<\n+                boost::multi_index::identity<CTxMemPoolEntry>,\n+                CompareTxMemPoolEntryByEntryTime\n             >\n         >\n     > indexed_transaction_set;\n@@ -328,7 +345,12 @@ class CTxMemPool\n     std::map<COutPoint, CInPoint> mapNextTx;\n     std::map<uint256, std::pair<double, CAmount> > mapDeltas;\n \n-    CTxMemPool(const CFeeRate& _minRelayFee);\n+    /** Create a new CTxMemPool.\n+     *  minReasonableRelayFee should be a feerate which is, roughly, somewhere\n+     *  around what it \"costs\" to relay a transaction around the network and\n+     *  below which we would reasonably say a transaction has 0-effective-fee.\n+     */\n+    CTxMemPool(const CFeeRate& _minReasonableRelayFee);\n     ~CTxMemPool();\n \n     /**\n@@ -365,7 +387,7 @@ class CTxMemPool\n \n     /** Affect CreateNewBlock prioritisation of transactions */\n     void PrioritiseTransaction(const uint256 hash, const std::string strHash, double dPriorityDelta, const CAmount& nFeeDelta);\n-    void ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta);\n+    void ApplyDeltas(const uint256 hash, double &dPriorityDelta, CAmount &nFeeDelta) const;\n     void ClearPrioritisation(const uint256 hash);\n \n public:\n@@ -397,6 +419,20 @@ class CTxMemPool\n      */\n     bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents = true);\n \n+    /** The minimum fee to get into the mempool, which may itself not be enough\n+      *  for larger-sized transactions.\n+      *  The minReasonableRelayFee constructor arg is used to bound the time it\n+      *  takes the fee rate to go back down all the way to 0. When the feerate\n+      *  would otherwise be half of this, it is set to 0 instead.\n+      */\n+    CFeeRate GetMinFee(size_t sizelimit) const;\n+\n+    /** Remove transactions from the mempool until its dynamic size is <= sizelimit. */\n+    void TrimToSize(size_t sizelimit);\n+\n+    /** Expire all transaction (and their dependencies) in the mempool older than time. Return the number of removed transactions. */\n+    int Expire(int64_t time);\n+\n     unsigned long size()\n     {\n         LOCK(cs);"
      },
      {
        "sha": "3f2d5a05f698d7da7e8d70f61ec2f1cda71a449d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "patch": "@@ -2863,6 +2863,6 @@ int CMerkleTx::GetBlocksToMaturity() const\n bool CMerkleTx::AcceptToMemoryPool(bool fLimitFree, bool fRejectAbsurdFee)\n {\n     CValidationState state;\n-    return ::AcceptToMemoryPool(mempool, state, *this, fLimitFree, NULL, fRejectAbsurdFee);\n+    return ::AcceptToMemoryPool(mempool, state, *this, fLimitFree, NULL, false, fRejectAbsurdFee);\n }\n "
      }
    ]
  },
  {
    "sha": "0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZmJmYzUxMDZjZDk4NjYzMjViNGExYWIzYjlkYjhlOTFlNTRmMDcw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-21T09:19:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-21T09:19:25Z"
      },
      "message": "Merge pull request #6859\n\n41db8c4 http: Restrict maximum size of request line + headers (Wladimir J. van der Laan)",
      "tree": {
        "sha": "e6230f51d9d6f753b6d1f8242fa3ef70cdd9330a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6230f51d9d6f753b6d1f8242fa3ef70cdd9330a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWJ1idAAoJEHSBCwEjRsmmIIYH+gOwBJexkUAAJL6HAB67TlUJ\noajKmxoFN9Der5chyIbDCshvJUL3o8SXUXhXMyhqyNEmeTZrButQ0Z6dbhz396VN\nMxBiotUvLxVVB8iPhGNvVclDCme5XiUwXRxqIDZ8zQbar21uNOmXvqSaTPlisimY\nPUkOH9lirUKUSuiqkC7QNE24NPzAimpG24EpWtGkBGxjDXDIq7oTyazuzmmGW5O0\nykY5ddQeIC0A4fBQs3CCR1kCRotmUpM6rspufmjvSx9D/DGDwL+4AKX+LEfpFBvp\n2q2BzTfPOPi9bGl8wVXWprTXiBbcMN13KGmnB9X6Bmi3Ro+wLAJLeJTWhSQEqzk=\n=7sio\n-----END PGP SIGNATURE-----",
        "payload": "tree e6230f51d9d6f753b6d1f8242fa3ef70cdd9330a\nparent 3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2\nparent 41db8c4733b34d56834162c4d054823c240ffc92\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445419153 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445419165 +0200\n\nMerge pull request #6859\n\n41db8c4 http: Restrict maximum size of request line + headers (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b20e239c602dd7d3ab85935ef9d1f6c5e1907d2"
      },
      {
        "sha": "41db8c4733b34d56834162c4d054823c240ffc92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41db8c4733b34d56834162c4d054823c240ffc92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41db8c4733b34d56834162c4d054823c240ffc92"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7888114c54df4a30b133feb48e1f197f583517db",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
        "patch": "@@ -97,5 +97,19 @@ def run_test(self):\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n \n+        # Check excessive request size\n+        conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n+        conn.connect()\n+        conn.request('GET', '/' + ('x'*1000), '', headers)\n+        out1 = conn.getresponse()\n+        assert_equal(out1.status, httplib.NOT_FOUND)\n+\n+        conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n+        conn.connect()\n+        conn.request('GET', '/' + ('x'*10000), '', headers)\n+        out1 = conn.getresponse()\n+        assert_equal(out1.status, httplib.BAD_REQUEST)\n+\n+\n if __name__ == '__main__':\n     HTTPBasicsTest ().main ()"
      },
      {
        "sha": "8698abb900e074c086995af3e5edd8195f5bc750",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
        "patch": "@@ -38,6 +38,9 @@\n #include <boost/foreach.hpp>\n #include <boost/scoped_ptr.hpp>\n \n+/** Maximum size of http request (request line + headers) */\n+static const size_t MAX_HEADERS_SIZE = 8192;\n+\n /** HTTP request work item */\n class HTTPWorkItem : public HTTPClosure\n {\n@@ -414,6 +417,7 @@ bool InitHTTPServer()\n     }\n \n     evhttp_set_timeout(http, GetArg(\"-rpcservertimeout\", DEFAULT_HTTP_SERVER_TIMEOUT));\n+    evhttp_set_max_headers_size(http, MAX_HEADERS_SIZE);\n     evhttp_set_max_body_size(http, MAX_SIZE);\n     evhttp_set_gencb(http, http_request_cb, NULL);\n "
      }
    ]
  },
  {
    "sha": "3cb56f37780854bf26650e0872a556da25897a0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2I1NmYzNzc4MDg1NGJmMjY2NTBlMDg3MmE1NTZkYTI1ODk3YTBh",
    "commit": {
      "author": {
        "name": "Daniel Cousens",
        "email": "github@dcousens.com",
        "date": "2015-10-18T10:02:36Z"
      },
      "committer": {
        "name": "Daniel Cousens",
        "email": "github@dcousens.com",
        "date": "2015-10-21T13:07:30Z"
      },
      "message": "*: alias -h for --help",
      "tree": {
        "sha": "96f6d3088a5205aeb5d181a8e80d43305dc3bc82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96f6d3088a5205aeb5d181a8e80d43305dc3bc82"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cb56f37780854bf26650e0872a556da25897a0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cb56f37780854bf26650e0872a556da25897a0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3cb56f37780854bf26650e0872a556da25897a0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cb56f37780854bf26650e0872a556da25897a0a/comments",
    "author": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "229dad7b3fc7a2b0c0e07eb50e0bd73e48320706",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cb56f37780854bf26650e0872a556da25897a0a/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cb56f37780854bf26650e0872a556da25897a0a/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=3cb56f37780854bf26650e0872a556da25897a0a",
        "patch": "@@ -69,7 +69,7 @@ static bool AppInitRPC(int argc, char* argv[])\n     // Parameters\n     //\n     ParseParameters(argc, argv);\n-    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\")) {\n+    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-h\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\")) {\n         std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";\n         if (!mapArgs.count(\"-version\")) {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +"
      },
      {
        "sha": "eb36435de644c3cd933430c39247a1e089e80886",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cb56f37780854bf26650e0872a556da25897a0a/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cb56f37780854bf26650e0872a556da25897a0a/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=3cb56f37780854bf26650e0872a556da25897a0a",
        "patch": "@@ -42,7 +42,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n \n     fCreateBlank = GetBoolArg(\"-create\", false);\n \n-    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\"))\n+    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-h\") || mapArgs.count(\"-help\"))\n     {\n         // First part of help message is specific to this utility\n         std::string strUsage = _(\"Bitcoin Core bitcoin-tx utility version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +"
      },
      {
        "sha": "ca05fefb77e8b21168fec56ff191c70b3fb1a5c6",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cb56f37780854bf26650e0872a556da25897a0a/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cb56f37780854bf26650e0872a556da25897a0a/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=3cb56f37780854bf26650e0872a556da25897a0a",
        "patch": "@@ -72,7 +72,7 @@ bool AppInit(int argc, char* argv[])\n     ParseParameters(argc, argv);\n \n     // Process help and version before taking care about datadir\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"-h\") ||  mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n         std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n "
      },
      {
        "sha": "86c820cd0f15a12d7c5e98f141293453e42410a1",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cb56f37780854bf26650e0872a556da25897a0a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cb56f37780854bf26650e0872a556da25897a0a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=3cb56f37780854bf26650e0872a556da25897a0a",
        "patch": "@@ -563,7 +563,7 @@ int main(int argc, char *argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"-h\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n         HelpMessageDialog help(NULL, mapArgs.count(\"-version\"));\n         help.showOrPrint();"
      }
    ]
  },
  {
    "sha": "579b863cd7586b98974484ad55e19be2a54d241d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzliODYzY2Q3NTg2Yjk4OTc0NDg0YWQ1NWUxOWJlMmE1NGQyNDFk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-19T12:53:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-22T01:35:38Z"
      },
      "message": "devtools: Add security-check.py\n\nPerform the following ELF security checks:\n\n- PIE: Check for position independent executable (PIE), allowing for address space randomization\n- NX: Check that no sections are writable and executable (including the stack)\n- RELRO: Check for read-only relocations, binding at startup\n- Canary: Check for use of stack canary\n\nAlso add a check to symbol-check.py that checks that only the subset of\nallowed libraries is imported (to avoid incompatibilities).",
      "tree": {
        "sha": "0a5e4661d767cd45c7c3bfb7d2cf75bb6bc5d831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a5e4661d767cd45c7c3bfb7d2cf75bb6bc5d831"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/579b863cd7586b98974484ad55e19be2a54d241d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/579b863cd7586b98974484ad55e19be2a54d241d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/579b863cd7586b98974484ad55e19be2a54d241d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/579b863cd7586b98974484ad55e19be2a54d241d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1d623da3ea4c73605d27703bc966ed8109d231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1d623da3ea4c73605d27703bc966ed8109d231e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1d623da3ea4c73605d27703bc966ed8109d231e"
      }
    ],
    "stats": {
      "total": 271,
      "additions": 268,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e96eaa9c387e0540514c701425befd6904973443",
        "filename": "contrib/devtools/security-check.py",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/579b863cd7586b98974484ad55e19be2a54d241d/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/579b863cd7586b98974484ad55e19be2a54d241d/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=579b863cd7586b98974484ad55e19be2a54d241d",
        "patch": "@@ -0,0 +1,181 @@\n+#!/usr/bin/python2\n+'''\n+Perform basic ELF security checks on a series of executables.\n+Exit status will be 0 if succesful, and the program will be silent.\n+Otherwise the exit status will be 1 and it will log which executables failed which checks.\n+Needs `readelf` (for ELF) and `objdump` (for PE).\n+'''\n+from __future__ import division,print_function\n+import subprocess\n+import sys\n+import os\n+\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+\n+def check_ELF_PIE(executable):\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+\n+    ok = False\n+    for line in stdout.split('\\n'):\n+        line = line.split()\n+        if len(line)>=2 and line[0] == 'Type:' and line[1] == 'DYN':\n+            ok = True\n+    return ok\n+\n+def get_ELF_program_headers(executable):\n+    '''Return type and flags for ELF program headers'''\n+    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    in_headers = False\n+    count = 0\n+    headers = []\n+    for line in stdout.split('\\n'):\n+        if line.startswith('Program Headers:'):\n+            in_headers = True\n+        if line == '':\n+            in_headers = False\n+        if in_headers:\n+            if count == 1: # header line\n+                ofs_typ = line.find('Type')\n+                ofs_offset = line.find('Offset')\n+                ofs_flags = line.find('Flg')\n+                ofs_align = line.find('Align')\n+                if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                typ = line[ofs_typ:ofs_offset].rstrip()\n+                flags = line[ofs_flags:ofs_align].rstrip()\n+                headers.append((typ, flags))\n+            count += 1\n+    return headers\n+\n+def check_ELF_NX(executable):\n+    '''\n+    Check that no sections are writable and executable (including the stack)\n+    '''\n+    have_wx = False\n+    have_gnu_stack = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        if typ == 'GNU_STACK':\n+            have_gnu_stack = True\n+        if 'W' in flags and 'E' in flags: # section is both writable and executable\n+            have_wx = True\n+    return have_gnu_stack and not have_wx\n+\n+def check_ELF_RELRO(executable):\n+    '''\n+    Check for read-only relocations.\n+    GNU_RELRO program header must exist\n+    Dynamic section must have BIND_NOW flag\n+    '''\n+    have_gnu_relro = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        # Note: not checking flags == 'R': here as linkers set the permission differently\n+        # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n+        # However, the dynamic linker need to write to this area so these are RW.\n+        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n+        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n+        if typ == 'GNU_RELRO':\n+            have_gnu_relro = True\n+\n+    have_bindnow = False\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>1 and tokens[1] == '(BIND_NOW)':\n+            have_bindnow = True\n+    return have_gnu_relro and have_bindnow\n+\n+def check_ELF_Canary(executable):\n+    '''\n+    Check for use of stack canary\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    ok = False\n+    for line in stdout.split('\\n'):\n+        if '__stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+def get_PE_dll_characteristics(executable):\n+    '''\n+    Get PE DllCharacteristics bits\n+    '''\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n+            return int(tokens[1],16)\n+    return 0\n+\n+\n+def check_PE_PIE(executable):\n+    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x40)\n+\n+def check_PE_NX(executable):\n+    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x100)\n+\n+CHECKS = {\n+'ELF': [\n+    ('PIE', check_ELF_PIE),\n+    ('NX', check_ELF_NX),\n+    ('RELRO', check_ELF_RELRO),\n+    ('Canary', check_ELF_Canary)\n+],\n+'PE': [\n+    ('PIE', check_PE_PIE),\n+    ('NX', check_PE_NX)\n+]\n+}\n+\n+def identify_executable(executable):\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('%s: unknown format' % filename)\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('%s: failed %s' % (filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('%s: cannot open' % filename)\n+            retval = 1\n+    exit(retval)\n+"
      },
      {
        "sha": "34f1ed2d17b147adbff0ba2e978d5eb46f8f4398",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 27,
        "deletions": 3,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/579b863cd7586b98974484ad55e19be2a54d241d/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/579b863cd7586b98974484ad55e19be2a54d241d/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=579b863cd7586b98974484ad55e19be2a54d241d",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/python\n+#!/usr/bin/python2\n # Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -15,6 +15,7 @@\n import subprocess\n import re\n import sys\n+import os\n \n # Debian 6.0.9 (Squeeze) has:\n #\n@@ -45,8 +46,10 @@\n IGNORE_EXPORTS = {\n '_edata', '_end', '_init', '__bss_start', '_fini'\n }\n-READELF_CMD = '/usr/bin/readelf'\n-CPPFILT_CMD = '/usr/bin/c++filt'\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+# Allowed NEEDED libraries\n+ALLOWED_LIBRARIES = {'librt.so.1','libpthread.so.0','libanl.so.1','libm.so.6','libgcc_s.so.1','libc.so.6','ld-linux-x86-64.so.2'}\n \n class CPPFilt(object):\n     '''\n@@ -98,6 +101,22 @@ def check_version(max_versions, version):\n         return False\n     return ver <= max_versions[lib]\n \n+def read_libraries(filename):\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n+            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n+            if match:\n+                libraries.append(match.group(1))\n+            else:\n+                raise ValueError('Unparseable (NEEDED) specification')\n+    return libraries\n+\n if __name__ == '__main__':\n     cppfilt = CPPFilt()\n     retval = 0\n@@ -113,6 +132,11 @@ def check_version(max_versions, version):\n                 continue\n             print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n             retval = 1\n+        # Check dependency libraries\n+        for library_name in read_libraries(filename):\n+            if library_name not in ALLOWED_LIBRARIES:\n+                print('%s: NEEDED library %s is not allowed' % (filename, library_name))\n+                retval = 1\n \n     exit(retval)\n "
      },
      {
        "sha": "fed7626aabaaf34a7ab4ed1e13a7b5e47769f950",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/579b863cd7586b98974484ad55e19be2a54d241d/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/579b863cd7586b98974484ad55e19be2a54d241d/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=579b863cd7586b98974484ad55e19be2a54d241d",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/python2\n+'''\n+Test script for security-check.py\n+'''\n+from __future__ import division,print_function\n+import subprocess\n+import sys\n+import unittest\n+\n+def write_testcode(filename):\n+    with open(filename, 'w') as f:\n+        f.write('''\n+    #include <stdio.h>\n+    int main()\n+    {\n+        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n+        return 0;\n+    }\n+    ''')\n+\n+def call_security_check(cc, source, executable, options):\n+    subprocess.check_call([cc,source,'-o',executable] + options)\n+    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    return (p.returncode, stdout.rstrip())\n+\n+class TestSecurityChecks(unittest.TestCase):\n+    def test_ELF(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE NX RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n+                (1, executable+': failed RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n+                (0, ''))\n+\n+    def test_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'i686-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, []), \n+                (1, executable+': failed PIE NX'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n+                (1, executable+': failed PIE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n+                (0, ''))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n+"
      }
    ]
  },
  {
    "sha": "a09297010e171af28a7a3fcad65a4e0aefea53ba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMDkyOTcwMTBlMTcxYWYyOGE3YTNmY2FkNjVhNGUwYWVmZWE1M2Jh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-22T08:23:18Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-22T08:23:42Z"
      },
      "message": "Merge pull request #6854\n\n579b863 devtools: Add security-check.py (Wladimir J. van der Laan)",
      "tree": {
        "sha": "8dbc5a8ba29909f6832d7bbb456e7cc70b67c7d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dbc5a8ba29909f6832d7bbb456e7cc70b67c7d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a09297010e171af28a7a3fcad65a4e0aefea53ba",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKJ0OAAoJEHSBCwEjRsmmq2YH/A/T9ElqSScgBOFt/QPqDA2l\nfKnuZrlKMufM2bOjadWpDkkaCqnOdq/eadzmi9Us5gAXvIgkQIBxUDNF029uNCoP\nKL/VX2oJV8ySYBqmNippVjhuuP+ngsmoyJ/2f2XOExAhh7JhXeFjpkDf/1x7gsJI\nEF6o96kNBxWVzuKiKeiS1fcMgeFS+XiLBz511OUDJercgzGptkGxbsLUs/qZwOqJ\nKwqyeo/twa6MKGStGyJ7tSqCwaYv82D222Cg4ZGUVRcXRjQHr7CEZbvQvrKYJ0oo\nmrTEtRpoOTWqpXsHudW2MfrbmJS3DJ2HjqlKm5mn7ram8yeewqiQqUUw/88wPSY=\n=cZem\n-----END PGP SIGNATURE-----",
        "payload": "tree 8dbc5a8ba29909f6832d7bbb456e7cc70b67c7d8\nparent 0fbfc5106cd9866325b4a1ab3b9db8e91e54f070\nparent 579b863cd7586b98974484ad55e19be2a54d241d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445502198 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445502222 +0200\n\nMerge pull request #6854\n\n579b863 devtools: Add security-check.py (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a09297010e171af28a7a3fcad65a4e0aefea53ba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a09297010e171af28a7a3fcad65a4e0aefea53ba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a09297010e171af28a7a3fcad65a4e0aefea53ba/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070"
      },
      {
        "sha": "579b863cd7586b98974484ad55e19be2a54d241d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/579b863cd7586b98974484ad55e19be2a54d241d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/579b863cd7586b98974484ad55e19be2a54d241d"
      }
    ],
    "stats": {
      "total": 271,
      "additions": 268,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e96eaa9c387e0540514c701425befd6904973443",
        "filename": "contrib/devtools/security-check.py",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a09297010e171af28a7a3fcad65a4e0aefea53ba/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a09297010e171af28a7a3fcad65a4e0aefea53ba/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "patch": "@@ -0,0 +1,181 @@\n+#!/usr/bin/python2\n+'''\n+Perform basic ELF security checks on a series of executables.\n+Exit status will be 0 if succesful, and the program will be silent.\n+Otherwise the exit status will be 1 and it will log which executables failed which checks.\n+Needs `readelf` (for ELF) and `objdump` (for PE).\n+'''\n+from __future__ import division,print_function\n+import subprocess\n+import sys\n+import os\n+\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+\n+def check_ELF_PIE(executable):\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+\n+    ok = False\n+    for line in stdout.split('\\n'):\n+        line = line.split()\n+        if len(line)>=2 and line[0] == 'Type:' and line[1] == 'DYN':\n+            ok = True\n+    return ok\n+\n+def get_ELF_program_headers(executable):\n+    '''Return type and flags for ELF program headers'''\n+    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    in_headers = False\n+    count = 0\n+    headers = []\n+    for line in stdout.split('\\n'):\n+        if line.startswith('Program Headers:'):\n+            in_headers = True\n+        if line == '':\n+            in_headers = False\n+        if in_headers:\n+            if count == 1: # header line\n+                ofs_typ = line.find('Type')\n+                ofs_offset = line.find('Offset')\n+                ofs_flags = line.find('Flg')\n+                ofs_align = line.find('Align')\n+                if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                typ = line[ofs_typ:ofs_offset].rstrip()\n+                flags = line[ofs_flags:ofs_align].rstrip()\n+                headers.append((typ, flags))\n+            count += 1\n+    return headers\n+\n+def check_ELF_NX(executable):\n+    '''\n+    Check that no sections are writable and executable (including the stack)\n+    '''\n+    have_wx = False\n+    have_gnu_stack = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        if typ == 'GNU_STACK':\n+            have_gnu_stack = True\n+        if 'W' in flags and 'E' in flags: # section is both writable and executable\n+            have_wx = True\n+    return have_gnu_stack and not have_wx\n+\n+def check_ELF_RELRO(executable):\n+    '''\n+    Check for read-only relocations.\n+    GNU_RELRO program header must exist\n+    Dynamic section must have BIND_NOW flag\n+    '''\n+    have_gnu_relro = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        # Note: not checking flags == 'R': here as linkers set the permission differently\n+        # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n+        # However, the dynamic linker need to write to this area so these are RW.\n+        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n+        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n+        if typ == 'GNU_RELRO':\n+            have_gnu_relro = True\n+\n+    have_bindnow = False\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>1 and tokens[1] == '(BIND_NOW)':\n+            have_bindnow = True\n+    return have_gnu_relro and have_bindnow\n+\n+def check_ELF_Canary(executable):\n+    '''\n+    Check for use of stack canary\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    ok = False\n+    for line in stdout.split('\\n'):\n+        if '__stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+def get_PE_dll_characteristics(executable):\n+    '''\n+    Get PE DllCharacteristics bits\n+    '''\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n+            return int(tokens[1],16)\n+    return 0\n+\n+\n+def check_PE_PIE(executable):\n+    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x40)\n+\n+def check_PE_NX(executable):\n+    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x100)\n+\n+CHECKS = {\n+'ELF': [\n+    ('PIE', check_ELF_PIE),\n+    ('NX', check_ELF_NX),\n+    ('RELRO', check_ELF_RELRO),\n+    ('Canary', check_ELF_Canary)\n+],\n+'PE': [\n+    ('PIE', check_PE_PIE),\n+    ('NX', check_PE_NX)\n+]\n+}\n+\n+def identify_executable(executable):\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('%s: unknown format' % filename)\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('%s: failed %s' % (filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('%s: cannot open' % filename)\n+            retval = 1\n+    exit(retval)\n+"
      },
      {
        "sha": "34f1ed2d17b147adbff0ba2e978d5eb46f8f4398",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 27,
        "deletions": 3,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a09297010e171af28a7a3fcad65a4e0aefea53ba/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a09297010e171af28a7a3fcad65a4e0aefea53ba/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/python\n+#!/usr/bin/python2\n # Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -15,6 +15,7 @@\n import subprocess\n import re\n import sys\n+import os\n \n # Debian 6.0.9 (Squeeze) has:\n #\n@@ -45,8 +46,10 @@\n IGNORE_EXPORTS = {\n '_edata', '_end', '_init', '__bss_start', '_fini'\n }\n-READELF_CMD = '/usr/bin/readelf'\n-CPPFILT_CMD = '/usr/bin/c++filt'\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+# Allowed NEEDED libraries\n+ALLOWED_LIBRARIES = {'librt.so.1','libpthread.so.0','libanl.so.1','libm.so.6','libgcc_s.so.1','libc.so.6','ld-linux-x86-64.so.2'}\n \n class CPPFilt(object):\n     '''\n@@ -98,6 +101,22 @@ def check_version(max_versions, version):\n         return False\n     return ver <= max_versions[lib]\n \n+def read_libraries(filename):\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n+            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n+            if match:\n+                libraries.append(match.group(1))\n+            else:\n+                raise ValueError('Unparseable (NEEDED) specification')\n+    return libraries\n+\n if __name__ == '__main__':\n     cppfilt = CPPFilt()\n     retval = 0\n@@ -113,6 +132,11 @@ def check_version(max_versions, version):\n                 continue\n             print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n             retval = 1\n+        # Check dependency libraries\n+        for library_name in read_libraries(filename):\n+            if library_name not in ALLOWED_LIBRARIES:\n+                print('%s: NEEDED library %s is not allowed' % (filename, library_name))\n+                retval = 1\n \n     exit(retval)\n "
      },
      {
        "sha": "fed7626aabaaf34a7ab4ed1e13a7b5e47769f950",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a09297010e171af28a7a3fcad65a4e0aefea53ba/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a09297010e171af28a7a3fcad65a4e0aefea53ba/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/python2\n+'''\n+Test script for security-check.py\n+'''\n+from __future__ import division,print_function\n+import subprocess\n+import sys\n+import unittest\n+\n+def write_testcode(filename):\n+    with open(filename, 'w') as f:\n+        f.write('''\n+    #include <stdio.h>\n+    int main()\n+    {\n+        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n+        return 0;\n+    }\n+    ''')\n+\n+def call_security_check(cc, source, executable, options):\n+    subprocess.check_call([cc,source,'-o',executable] + options)\n+    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    return (p.returncode, stdout.rstrip())\n+\n+class TestSecurityChecks(unittest.TestCase):\n+    def test_ELF(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE NX RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n+                (1, executable+': failed RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n+                (0, ''))\n+\n+    def test_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'i686-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, []), \n+                (1, executable+': failed PIE NX'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n+                (1, executable+': failed PIE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n+                (0, ''))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n+"
      }
    ]
  },
  {
    "sha": "95f429118585fdbe89b4e48a224d195e304f33a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWY0MjkxMTg1ODVmZGJlODliNGU0OGEyMjRkMTk1ZTMwNGYzM2E4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-11T10:47:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-22T15:01:53Z"
      },
      "message": "[trivial] Rewrite help text for feature enabled by default\n\nc.f #6748",
      "tree": {
        "sha": "7abd36ec8074121bf17425cbc2b0b9977215939e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7abd36ec8074121bf17425cbc2b0b9977215939e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95f429118585fdbe89b4e48a224d195e304f33a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95f429118585fdbe89b4e48a224d195e304f33a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95f429118585fdbe89b4e48a224d195e304f33a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95f429118585fdbe89b4e48a224d195e304f33a8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a09297010e171af28a7a3fcad65a4e0aefea53ba"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6cdc675e7dabe67ed73e6b28c52e7a83abcca167",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95f429118585fdbe89b4e48a224d195e304f33a8/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95f429118585fdbe89b4e48a224d195e304f33a8/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=95f429118585fdbe89b4e48a224d195e304f33a8",
        "patch": "@@ -92,7 +92,7 @@ AC_ARG_ENABLE(tests,\n     [use_tests=yes])\n \n AC_ARG_ENABLE(bench,\n-    AS_HELP_STRING([--enable-bench],[compile benchmarks (default is yes)]),\n+    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n     [use_bench=$enableval],\n     [use_bench=yes])\n "
      }
    ]
  },
  {
    "sha": "2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2QwMjBkMDU0ZDZlYzRiNTBlYjQ0ZmZhNDAwMGI0MDU0MGE0ZGIw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-22T15:51:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-22T15:53:07Z"
      },
      "message": "Merge pull request #6846\n\n3cb56f3 *: alias -h for --help (Daniel Cousens)",
      "tree": {
        "sha": "21f35c08c8199f44974b5a3edc6f7c737fd09625",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21f35c08c8199f44974b5a3edc6f7c737fd09625"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKQZjAAoJEHSBCwEjRsmmuqwIAMrwvii5BQcMj9evHmTgNDZc\nQ9gnF3stvrI7nD3Aj9KnNwTUf/ETBPXzXTq/VfI7eCatf+hr83Sz+Nr7C5r4iXDr\nhQnuotgF/Fiv4PqTmnWPDDNAM0PDfGAHUfQzBwkabKdB9pgeSs3R2b1x1ri4iexh\nw7wT21a4E0Ve10Y+3ms0qVktpD+Cha3ui++BV0a4xt5dflDdxxL7nY3Y4lrmmRYv\n9ABE0Ig1V82FdZXEARQg9Pt3cNcE+C6V2B+3ESp3+/sxCrH4ckYO+h2ANJYVbXu4\nQeTqaClntB+KzCZBvl7bPfBgxZpdgl2FarEno0qqs84XdJ4K9vm/xetPXKPrkGw=\n=DFfZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 21f35c08c8199f44974b5a3edc6f7c737fd09625\nparent a09297010e171af28a7a3fcad65a4e0aefea53ba\nparent 3cb56f37780854bf26650e0872a556da25897a0a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445529073 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445529187 +0200\n\nMerge pull request #6846\n\n3cb56f3 *: alias -h for --help (Daniel Cousens)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a09297010e171af28a7a3fcad65a4e0aefea53ba"
      },
      {
        "sha": "3cb56f37780854bf26650e0872a556da25897a0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cb56f37780854bf26650e0872a556da25897a0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cb56f37780854bf26650e0872a556da25897a0a"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6f22c7049488610d40de6e808bbc081dd56ab1a5",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
        "patch": "@@ -67,7 +67,7 @@ static bool AppInitRPC(int argc, char* argv[])\n     // Parameters\n     //\n     ParseParameters(argc, argv);\n-    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\")) {\n+    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-h\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\")) {\n         std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";\n         if (!mapArgs.count(\"-version\")) {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +"
      },
      {
        "sha": "3330fe5d12e3e38c603d700739ca2d146cbda3ce",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
        "patch": "@@ -44,7 +44,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n \n     fCreateBlank = GetBoolArg(\"-create\", false);\n \n-    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\"))\n+    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-h\") || mapArgs.count(\"-help\"))\n     {\n         // First part of help message is specific to this utility\n         std::string strUsage = _(\"Bitcoin Core bitcoin-tx utility version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +"
      },
      {
        "sha": "d2af897242a3ad20fea18763624934a598d1470f",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
        "patch": "@@ -72,7 +72,7 @@ bool AppInit(int argc, char* argv[])\n     ParseParameters(argc, argv);\n \n     // Process help and version before taking care about datadir\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"-h\") ||  mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n         std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n "
      },
      {
        "sha": "bda8acff1596fc017e1573cbc425c5d339a36bce",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cd020d054d6ec4b50eb44ffa4000b40540a4db0/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
        "patch": "@@ -563,7 +563,7 @@ int main(int argc, char *argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"-h\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n         HelpMessageDialog help(NULL, mapArgs.count(\"-version\"));\n         help.showOrPrint();"
      }
    ]
  },
  {
    "sha": "f2c869aef2e717ba61b9335f198322f6a4d1a12d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMmM4NjlhZWYyZTcxN2JhNjFiOTMzNWYxOTgzMjJmNmE0ZDFhMTJk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-22T16:01:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-22T16:02:17Z"
      },
      "message": "Merge pull request #6848\n\nc6824f8 Add DERSIG transaction test cases (J Ross Nicoll)",
      "tree": {
        "sha": "aa95013b466e3ad6b996d85c2929e1379d8a962b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa95013b466e3ad6b996d85c2929e1379d8a962b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2c869aef2e717ba61b9335f198322f6a4d1a12d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKQiJAAoJEHSBCwEjRsmmZmMIAL87ayReBsE2FqZLaAuHtglw\n7oaxUlBlGrsIpPnvu/H9uxf9SoeRDcCmLy42NUeMVV3agBkuUeuc0k/AWFFzqZ8S\nzWBE6SeuTg+84+y8uVRgbS3uIW0qWnCgaLfUDom4CGQr6p0mvU7IQ91UcyN5uQzO\nfbE44pm4wPte50rjruZVz/QSQQ001dcwQKVE1p0SWkYkthgM2NfC/8KXzFDYdNxl\nzECvrL4wr4Q++qbwH/cFn7pzfp2G6Ugh3XcVsq5ojiVhcbYPxFaIALNw7pz9cRSo\nsAuSNowVRdx6lEqzsFbzW6kH2OlKnpv5kSA2oe8ID2qiIZKhFhHthKrVg0wokTw=\n=ZOto\n-----END PGP SIGNATURE-----",
        "payload": "tree aa95013b466e3ad6b996d85c2929e1379d8a962b\nparent 2cd020d054d6ec4b50eb44ffa4000b40540a4db0\nparent c6824f8a90e33277de4db826bf1c65692a67be47\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445529684 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445529737 +0200\n\nMerge pull request #6848\n\nc6824f8 Add DERSIG transaction test cases (J Ross Nicoll)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2c869aef2e717ba61b9335f198322f6a4d1a12d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f2c869aef2e717ba61b9335f198322f6a4d1a12d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2c869aef2e717ba61b9335f198322f6a4d1a12d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cd020d054d6ec4b50eb44ffa4000b40540a4db0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2cd020d054d6ec4b50eb44ffa4000b40540a4db0"
      },
      {
        "sha": "c6824f8a90e33277de4db826bf1c65692a67be47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6824f8a90e33277de4db826bf1c65692a67be47",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6824f8a90e33277de4db826bf1c65692a67be47"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d3c859434255bc626c744986e4fb066b64813faa",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2c869aef2e717ba61b9335f198322f6a4d1a12d/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2c869aef2e717ba61b9335f198322f6a4d1a12d/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=f2c869aef2e717ba61b9335f198322f6a4d1a12d",
        "patch": "@@ -193,5 +193,9 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"HASH160 0x14 0xc5b93064159b3b2d6ab506a41b1f50463771b988 EQUAL\"]],\n \"0100000001000100000000000000000000000000000000000000000000000000000000000000000000030251b1000000000100000000000000000000000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n \n+[\"A transaction with a non-standard DER signature.\"],\n+[[[\"b1dbc81696c8a9c0fccd0693ab66d7c368dbc38c0def4e800685560ddd1b2132\", 0, \"DUP HASH160 0x14 0x4b3bd7eba3bc0284fd3007be7f3be275e94f5826 EQUALVERIFY CHECKSIG\"]],\n+\"010000000132211bdd0d568506804eef0d8cc3db68c3d766ab9306cdfcc0a9c89616c8dbb1000000006c493045022100c7bb0faea0522e74ff220c20c022d2cb6033f8d167fb89e75a50e237a35fd6d202203064713491b1f8ad5f79e623d0219ad32510bfaa1009ab30cbee77b59317d6e30001210237af13eb2d84e4545af287b919c2282019c9691cc509e78e196a9d8274ed1be0ffffffff0100000000000000001976a914f1b3ed2eda9a2ebe5a9374f692877cdf87c0f95b88ac00000000\", \"P2SH,DERSIG\"],\n+\n [\"Make diffs cleaner by leaving a comment here without comma at the end\"]\n ]"
      },
      {
        "sha": "0dfef73ae5e2bf3c2adf38fbe88184ebb4171424",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2c869aef2e717ba61b9335f198322f6a4d1a12d/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2c869aef2e717ba61b9335f198322f6a4d1a12d/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=f2c869aef2e717ba61b9335f198322f6a4d1a12d",
        "patch": "@@ -229,5 +229,9 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"HASH160 0x14 0xc5b93064159b3b2d6ab506a41b1f50463771b988 EQUAL\"]],\n \"0100000001000100000000000000000000000000000000000000000000000000000000000000000000030251b1000000000100000000000000000001000000\", \"P2SH,CHECKLOCKTIMEVERIFY\"],\n \n+[\"A transaction with a non-standard DER signature.\"],\n+[[[\"b1dbc81696c8a9c0fccd0693ab66d7c368dbc38c0def4e800685560ddd1b2132\", 0, \"DUP HASH160 0x14 0x4b3bd7eba3bc0284fd3007be7f3be275e94f5826 EQUALVERIFY CHECKSIG\"]],\n+\"010000000132211bdd0d568506804eef0d8cc3db68c3d766ab9306cdfcc0a9c89616c8dbb1000000006c493045022100c7bb0faea0522e74ff220c20c022d2cb6033f8d167fb89e75a50e237a35fd6d202203064713491b1f8ad5f79e623d0219ad32510bfaa1009ab30cbee77b59317d6e30001210237af13eb2d84e4545af287b919c2282019c9691cc509e78e196a9d8274ed1be0ffffffff0100000000000000001976a914f1b3ed2eda9a2ebe5a9374f692877cdf87c0f95b88ac00000000\", \"P2SH\"],\n+\n [\"Make diffs cleaner by leaving a comment here without comma at the end\"]\n ]"
      }
    ]
  },
  {
    "sha": "a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGUyOGIzZDFlNWM5NWViMGM4N2YxNDQ4NTFjZDY1MDQ4YzNlMGJj",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-10-21T23:52:29Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-10-22T17:57:48Z"
      },
      "message": "Set TCP_NODELAY on P2P sockets.\n\nNagle appears to be a significant contributor to latency now that the static\n sleeps are gone.  Most of our messages are relatively large compared to\n IP + TCP so I do not expect this to create enormous overhead.\n\nThis may also reduce traffic burstyness somewhat.",
      "tree": {
        "sha": "75863cc33e53fef354777cb7b9f206736c805201",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75863cc33e53fef354777cb7b9f206736c805201"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0fbfc5106cd9866325b4a1ab3b9db8e91e54f070"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 21,
      "deletions": 1
    },
    "files": [
      {
        "sha": "20c2a25143bf99d317b73a26b3f3493515a1c7c3",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
        "patch": "@@ -38,6 +38,7 @@\n #include <sys/types.h>\n #include <net/if.h>\n #include <netinet/in.h>\n+#include <netinet/tcp.h>\n #include <arpa/inet.h>\n #include <ifaddrs.h>\n #include <limits.h>"
      },
      {
        "sha": "58b946f4a13078d98ce254c9c86db672e80f15e4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
        "patch": "@@ -963,6 +963,15 @@ static void AcceptConnection(const ListenSocket& hListenSocket) {\n         return;\n     }\n \n+    // According to the internet TCP_NODELAY is not carried into accepted sockets\n+    // on all platforms.  Set it again here just to be sure.\n+    int set = 1;\n+#ifdef WIN32\n+    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&set, sizeof(int));\n+#else\n+    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&set, sizeof(int));\n+#endif\n+\n     if (CNode::IsBanned(addr) && !whitelisted)\n     {\n         LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n@@ -1790,8 +1799,11 @@ bool BindListenPort(const CService &addrBind, string& strError, bool fWhiteliste\n     // Allow binding if the port is still in TIME_WAIT state after\n     // the program was closed and restarted.\n     setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (void*)&nOne, sizeof(int));\n+    // Disable Nagle's algorithm\n+    setsockopt(hListenSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&nOne, sizeof(int));\n #else\n     setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (const char*)&nOne, sizeof(int));\n+    setsockopt(hListenSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&nOne, sizeof(int));\n #endif\n \n     // Set to non-blocking, incoming connections will also inherit this"
      },
      {
        "sha": "f5316965ce7fc7a13ba11f1482c0f7471967726d",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
        "patch": "@@ -444,12 +444,19 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     if (hSocket == INVALID_SOCKET)\n         return false;\n \n-#ifdef SO_NOSIGPIPE\n     int set = 1;\n+#ifdef SO_NOSIGPIPE\n     // Different way of disabling SIGPIPE on BSD\n     setsockopt(hSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&set, sizeof(int));\n #endif\n \n+    //Disable Nagle's algorithm\n+#ifdef WIN32\n+    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&set, sizeof(int));\n+#else\n+    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&set, sizeof(int));\n+#endif\n+\n     // Set to non-blocking\n     if (!SetSocketNonBlocking(hSocket, true))\n         return error(\"ConnectSocketDirectly: Setting socket to non-blocking failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));"
      }
    ]
  },
  {
    "sha": "6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWM0YjdlYjIwYWJmMDVkZDZlM2MwODg1NjQ0NjE2YTJjMmFjZmQ3",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jeff@bloq.com",
        "date": "2015-10-23T00:49:02Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-23T00:49:02Z"
      },
      "message": "leveldbwrapper: Remove unused .Prev(), .SeekToLast() methods\n\nAlso, trim trailing whitespace.",
      "tree": {
        "sha": "ca06e01a98dcf368d18ac796498a9d581f9ef308",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca06e01a98dcf368d18ac796498a9d581f9ef308"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7/comments",
    "author": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a09297010e171af28a7a3fcad65a4e0aefea53ba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a09297010e171af28a7a3fcad65a4e0aefea53ba"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 14,
      "deletions": 18
    },
    "files": [
      {
        "sha": "641d25152d6a7c6dfac3b8e56086e8bb471e7831",
        "filename": "src/leveldbwrapper.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7/src/leveldbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7/src/leveldbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.cpp?ref=6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7",
        "patch": "@@ -76,7 +76,7 @@ CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCa\n     bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n \n     if (!key_exists && obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset \n+        // Initialize non-degenerate obfuscation if it won't upset\n         // existing, non-obfuscated data.\n         std::vector<unsigned char> new_key = CreateObfuscateKey();\n \n@@ -118,10 +118,10 @@ const std::string CLevelDBWrapper::OBFUSCATE_KEY_KEY(\"\\000obfuscate_key\", 14);\n const unsigned int CLevelDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n \n /**\n- * Returns a string (consisting of 8 random bytes) suitable for use as an \n- * obfuscating XOR key. \n+ * Returns a string (consisting of 8 random bytes) suitable for use as an\n+ * obfuscating XOR key.\n  */\n-std::vector<unsigned char> CLevelDBWrapper::CreateObfuscateKey() const \n+std::vector<unsigned char> CLevelDBWrapper::CreateObfuscateKey() const\n {\n     unsigned char buff[OBFUSCATE_KEY_NUM_BYTES];\n     GetRandBytes(buff, OBFUSCATE_KEY_NUM_BYTES);\n@@ -136,19 +136,17 @@ bool CLevelDBWrapper::IsEmpty()\n     return !(it->Valid());\n }\n \n-const std::vector<unsigned char>& CLevelDBWrapper::GetObfuscateKey() const \n-{ \n-    return obfuscate_key; \n+const std::vector<unsigned char>& CLevelDBWrapper::GetObfuscateKey() const\n+{\n+    return obfuscate_key;\n }\n \n std::string CLevelDBWrapper::GetObfuscateKeyHex() const\n-{ \n-    return HexStr(obfuscate_key); \n+{\n+    return HexStr(obfuscate_key);\n }\n \n CLevelDBIterator::~CLevelDBIterator() { delete piter; }\n bool CLevelDBIterator::Valid() { return piter->Valid(); }\n void CLevelDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n-void CLevelDBIterator::SeekToLast() { piter->SeekToLast(); }\n void CLevelDBIterator::Next() { piter->Next(); }\n-void CLevelDBIterator::Prev() { piter->Prev(); }"
      },
      {
        "sha": "0effea407acd3e2c112ff183138ddc06f70963f0",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7",
        "patch": "@@ -68,7 +68,7 @@ class CLevelDBBatch\n         batch.Delete(slKey);\n     }\n };\n- \n+\n class CLevelDBIterator\n {\n private:\n@@ -88,7 +88,6 @@ class CLevelDBIterator\n     bool Valid();\n \n     void SeekToFirst();\n-    void SeekToLast();\n \n     template<typename K> void Seek(const K& key) {\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -99,7 +98,6 @@ class CLevelDBIterator\n     }\n \n     void Next();\n-    void Prev();\n \n     template<typename K> bool GetKey(K& key) {\n         leveldb::Slice slKey = piter->key();\n@@ -133,7 +131,7 @@ class CLevelDBIterator\n     }\n \n };\n- \n+\n class CLevelDBWrapper\n {\n private:\n@@ -163,10 +161,10 @@ class CLevelDBWrapper\n \n     //! the key under which the obfuscation key is stored\n     static const std::string OBFUSCATE_KEY_KEY;\n-    \n+\n     //! the length of the obfuscate key in number of bytes\n     static const unsigned int OBFUSCATE_KEY_NUM_BYTES;\n-    \n+\n     std::vector<unsigned char> CreateObfuscateKey() const;\n \n public:\n@@ -256,7 +254,7 @@ class CLevelDBWrapper\n         return WriteBatch(batch, true);\n     }\n \n-    CLevelDBIterator *NewIterator() \n+    CLevelDBIterator *NewIterator()\n     {\n         return new CLevelDBIterator(pdb->NewIterator(iteroptions), &obfuscate_key);\n     }"
      }
    ]
  },
  {
    "sha": "8587b23038b88340ec64253ea4282afe90187a69",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NTg3YjIzMDM4Yjg4MzQwZWM2NDI1M2VhNDI4MmFmZTkwMTg3YTY5",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jeff@bloq.com",
        "date": "2015-10-23T01:02:20Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-23T01:02:20Z"
      },
      "message": "leveldbwrapper symbol rename: Remove \"Level\" from class, etc. names",
      "tree": {
        "sha": "50b7b71777325fae5397f2ba144968309c1a0c94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50b7b71777325fae5397f2ba144968309c1a0c94"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8587b23038b88340ec64253ea4282afe90187a69",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8587b23038b88340ec64253ea4282afe90187a69",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8587b23038b88340ec64253ea4282afe90187a69",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8587b23038b88340ec64253ea4282afe90187a69/comments",
    "author": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ec4b7eb20abf05dd6e3c0885644616a2c2acfd7"
      }
    ],
    "stats": {
      "total": 130,
      "additions": 65,
      "deletions": 65
    },
    "files": [
      {
        "sha": "6ecf7c7f0ed4e54c872ea2cb933dbb0023e3646f",
        "filename": "src/leveldbwrapper.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8587b23038b88340ec64253ea4282afe90187a69/src/leveldbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8587b23038b88340ec64253ea4282afe90187a69/src/leveldbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.cpp?ref=8587b23038b88340ec64253ea4282afe90187a69",
        "patch": "@@ -15,18 +15,18 @@\n #include <memenv.h>\n #include <stdint.h>\n \n-void HandleError(const leveldb::Status& status) throw(leveldb_error)\n+void HandleError(const leveldb::Status& status) throw(dbwrapper_error)\n {\n     if (status.ok())\n         return;\n     LogPrintf(\"%s\\n\", status.ToString());\n     if (status.IsCorruption())\n-        throw leveldb_error(\"Database corrupted\");\n+        throw dbwrapper_error(\"Database corrupted\");\n     if (status.IsIOError())\n-        throw leveldb_error(\"Database I/O error\");\n+        throw dbwrapper_error(\"Database I/O error\");\n     if (status.IsNotFound())\n-        throw leveldb_error(\"Database entry missing\");\n-    throw leveldb_error(\"Unknown database error\");\n+        throw dbwrapper_error(\"Database entry missing\");\n+    throw dbwrapper_error(\"Unknown database error\");\n }\n \n static leveldb::Options GetOptions(size_t nCacheSize)\n@@ -45,7 +45,7 @@ static leveldb::Options GetOptions(size_t nCacheSize)\n     return options;\n }\n \n-CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n+CDBWrapper::CDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n {\n     penv = NULL;\n     readoptions.verify_checksums = true;\n@@ -90,7 +90,7 @@ CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCa\n     LogPrintf(\"Using obfuscation key for %s: %s\\n\", path.string(), GetObfuscateKeyHex());\n }\n \n-CLevelDBWrapper::~CLevelDBWrapper()\n+CDBWrapper::~CDBWrapper()\n {\n     delete pdb;\n     pdb = NULL;\n@@ -102,7 +102,7 @@ CLevelDBWrapper::~CLevelDBWrapper()\n     options.env = NULL;\n }\n \n-bool CLevelDBWrapper::WriteBatch(CLevelDBBatch& batch, bool fSync) throw(leveldb_error)\n+bool CDBWrapper::WriteBatch(CDBBatch& batch, bool fSync) throw(dbwrapper_error)\n {\n     leveldb::Status status = pdb->Write(fSync ? syncoptions : writeoptions, &batch.batch);\n     HandleError(status);\n@@ -113,40 +113,40 @@ bool CLevelDBWrapper::WriteBatch(CLevelDBBatch& batch, bool fSync) throw(leveldb\n //\n // We must use a string constructor which specifies length so that we copy\n // past the null-terminator.\n-const std::string CLevelDBWrapper::OBFUSCATE_KEY_KEY(\"\\000obfuscate_key\", 14);\n+const std::string CDBWrapper::OBFUSCATE_KEY_KEY(\"\\000obfuscate_key\", 14);\n \n-const unsigned int CLevelDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n+const unsigned int CDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n \n /**\n  * Returns a string (consisting of 8 random bytes) suitable for use as an\n  * obfuscating XOR key.\n  */\n-std::vector<unsigned char> CLevelDBWrapper::CreateObfuscateKey() const\n+std::vector<unsigned char> CDBWrapper::CreateObfuscateKey() const\n {\n     unsigned char buff[OBFUSCATE_KEY_NUM_BYTES];\n     GetRandBytes(buff, OBFUSCATE_KEY_NUM_BYTES);\n     return std::vector<unsigned char>(&buff[0], &buff[OBFUSCATE_KEY_NUM_BYTES]);\n \n }\n \n-bool CLevelDBWrapper::IsEmpty()\n+bool CDBWrapper::IsEmpty()\n {\n-    boost::scoped_ptr<CLevelDBIterator> it(NewIterator());\n+    boost::scoped_ptr<CDBIterator> it(NewIterator());\n     it->SeekToFirst();\n     return !(it->Valid());\n }\n \n-const std::vector<unsigned char>& CLevelDBWrapper::GetObfuscateKey() const\n+const std::vector<unsigned char>& CDBWrapper::GetObfuscateKey() const\n {\n     return obfuscate_key;\n }\n \n-std::string CLevelDBWrapper::GetObfuscateKeyHex() const\n+std::string CDBWrapper::GetObfuscateKeyHex() const\n {\n     return HexStr(obfuscate_key);\n }\n \n-CLevelDBIterator::~CLevelDBIterator() { delete piter; }\n-bool CLevelDBIterator::Valid() { return piter->Valid(); }\n-void CLevelDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n-void CLevelDBIterator::Next() { piter->Next(); }\n+CDBIterator::~CDBIterator() { delete piter; }\n+bool CDBIterator::Valid() { return piter->Valid(); }\n+void CDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n+void CDBIterator::Next() { piter->Next(); }"
      },
      {
        "sha": "c8fc457d9037e8d86cd3d2c5edf08e5e7992688b",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8587b23038b88340ec64253ea4282afe90187a69/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8587b23038b88340ec64253ea4282afe90187a69/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=8587b23038b88340ec64253ea4282afe90187a69",
        "patch": "@@ -17,18 +17,18 @@\n #include <leveldb/db.h>\n #include <leveldb/write_batch.h>\n \n-class leveldb_error : public std::runtime_error\n+class dbwrapper_error : public std::runtime_error\n {\n public:\n-    leveldb_error(const std::string& msg) : std::runtime_error(msg) {}\n+    dbwrapper_error(const std::string& msg) : std::runtime_error(msg) {}\n };\n \n-void HandleError(const leveldb::Status& status) throw(leveldb_error);\n+void HandleError(const leveldb::Status& status) throw(dbwrapper_error);\n \n-/** Batch of changes queued to be written to a CLevelDBWrapper */\n-class CLevelDBBatch\n+/** Batch of changes queued to be written to a CDBWrapper */\n+class CDBBatch\n {\n-    friend class CLevelDBWrapper;\n+    friend class CDBWrapper;\n \n private:\n     leveldb::WriteBatch batch;\n@@ -38,7 +38,7 @@ class CLevelDBBatch\n     /**\n      * @param[in] obfuscate_key    If passed, XOR data with this key.\n      */\n-    CLevelDBBatch(const std::vector<unsigned char> *obfuscate_key) : obfuscate_key(obfuscate_key) { };\n+    CDBBatch(const std::vector<unsigned char> *obfuscate_key) : obfuscate_key(obfuscate_key) { };\n \n     template <typename K, typename V>\n     void Write(const K& key, const V& value)\n@@ -69,7 +69,7 @@ class CLevelDBBatch\n     }\n };\n \n-class CLevelDBIterator\n+class CDBIterator\n {\n private:\n     leveldb::Iterator *piter;\n@@ -81,9 +81,9 @@ class CLevelDBIterator\n      * @param[in] piterIn          The original leveldb iterator.\n      * @param[in] obfuscate_key    If passed, XOR data with this key.\n      */\n-    CLevelDBIterator(leveldb::Iterator *piterIn, const std::vector<unsigned char>* obfuscate_key) :\n+    CDBIterator(leveldb::Iterator *piterIn, const std::vector<unsigned char>* obfuscate_key) :\n         piter(piterIn), obfuscate_key(obfuscate_key) { };\n-    ~CLevelDBIterator();\n+    ~CDBIterator();\n \n     bool Valid();\n \n@@ -132,7 +132,7 @@ class CLevelDBIterator\n \n };\n \n-class CLevelDBWrapper\n+class CDBWrapper\n {\n private:\n     //! custom environment this database is using (may be NULL in case of default environment)\n@@ -176,11 +176,11 @@ class CLevelDBWrapper\n      * @param[in] obfuscate   If true, store data obfuscated via simple XOR. If false, XOR\n      *                        with a zero'd byte array.\n      */\n-    CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false, bool obfuscate = false);\n-    ~CLevelDBWrapper();\n+    CDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false, bool obfuscate = false);\n+    ~CDBWrapper();\n \n     template <typename K, typename V>\n-    bool Read(const K& key, V& value) const throw(leveldb_error)\n+    bool Read(const K& key, V& value) const throw(dbwrapper_error)\n     {\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(ssKey.GetSerializeSize(key));\n@@ -206,15 +206,15 @@ class CLevelDBWrapper\n     }\n \n     template <typename K, typename V>\n-    bool Write(const K& key, const V& value, bool fSync = false) throw(leveldb_error)\n+    bool Write(const K& key, const V& value, bool fSync = false) throw(dbwrapper_error)\n     {\n-        CLevelDBBatch batch(&obfuscate_key);\n+        CDBBatch batch(&obfuscate_key);\n         batch.Write(key, value);\n         return WriteBatch(batch, fSync);\n     }\n \n     template <typename K>\n-    bool Exists(const K& key) const throw(leveldb_error)\n+    bool Exists(const K& key) const throw(dbwrapper_error)\n     {\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(ssKey.GetSerializeSize(key));\n@@ -233,30 +233,30 @@ class CLevelDBWrapper\n     }\n \n     template <typename K>\n-    bool Erase(const K& key, bool fSync = false) throw(leveldb_error)\n+    bool Erase(const K& key, bool fSync = false) throw(dbwrapper_error)\n     {\n-        CLevelDBBatch batch(&obfuscate_key);\n+        CDBBatch batch(&obfuscate_key);\n         batch.Erase(key);\n         return WriteBatch(batch, fSync);\n     }\n \n-    bool WriteBatch(CLevelDBBatch& batch, bool fSync = false) throw(leveldb_error);\n+    bool WriteBatch(CDBBatch& batch, bool fSync = false) throw(dbwrapper_error);\n \n     // not available for LevelDB; provide for compatibility with BDB\n     bool Flush()\n     {\n         return true;\n     }\n \n-    bool Sync() throw(leveldb_error)\n+    bool Sync() throw(dbwrapper_error)\n     {\n-        CLevelDBBatch batch(&obfuscate_key);\n+        CDBBatch batch(&obfuscate_key);\n         return WriteBatch(batch, true);\n     }\n \n-    CLevelDBIterator *NewIterator()\n+    CDBIterator *NewIterator()\n     {\n-        return new CLevelDBIterator(pdb->NewIterator(iteroptions), &obfuscate_key);\n+        return new CDBIterator(pdb->NewIterator(iteroptions), &obfuscate_key);\n     }\n \n     /**"
      },
      {
        "sha": "8defb8a8ffe9a0e74b22b4ebf44121b2eab1efc3",
        "filename": "src/test/leveldbwrapper_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8587b23038b88340ec64253ea4282afe90187a69/src/test/leveldbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8587b23038b88340ec64253ea4282afe90187a69/src/test/leveldbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/leveldbwrapper_tests.cpp?ref=8587b23038b88340ec64253ea4282afe90187a69",
        "patch": "@@ -25,15 +25,15 @@ bool is_null_key(const vector<unsigned char>& key) {\n     return isnull;\n }\n  \n-BOOST_FIXTURE_TEST_SUITE(leveldbwrapper_tests, BasicTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(dbwrapper_tests, BasicTestingSetup)\n                        \n-BOOST_AUTO_TEST_CASE(leveldbwrapper)\n+BOOST_AUTO_TEST_CASE(dbwrapper)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n         path ph = temp_directory_path() / unique_path();\n-        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n         char key = 'k';\n         uint256 in = GetRandHash();\n         uint256 res;\n@@ -48,13 +48,13 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper)\n }\n \n // Test batch operations\n-BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n+BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n         path ph = temp_directory_path() / unique_path();\n-        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         char key = 'i';\n         uint256 in = GetRandHash();\n@@ -64,7 +64,7 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n         uint256 in3 = GetRandHash();\n \n         uint256 res;\n-        CLevelDBBatch batch(&dbw.GetObfuscateKey());\n+        CDBBatch batch(&dbw.GetObfuscateKey());\n \n         batch.Write(key, in);\n         batch.Write(key2, in2);\n@@ -85,13 +85,13 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n     }\n }\n \n-BOOST_AUTO_TEST_CASE(leveldbwrapper_iterator)\n+BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n         path ph = temp_directory_path() / unique_path();\n-        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         // The two keys are intentionally chosen for ordering\n         char key = 'j';\n@@ -101,7 +101,7 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper_iterator)\n         uint256 in2 = GetRandHash();\n         BOOST_CHECK(dbw.Write(key2, in2));\n \n-        boost::scoped_ptr<CLevelDBIterator> it(const_cast<CLevelDBWrapper*>(&dbw)->NewIterator());\n+        boost::scoped_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n \n         // Be sure to seek past the obfuscation key (if it exists)\n         it->Seek(key);\n@@ -134,7 +134,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n-    CLevelDBWrapper* dbw = new CLevelDBWrapper(ph, (1 << 10), false, false, false);\n+    CDBWrapper* dbw = new CDBWrapper(ph, (1 << 10), false, false, false);\n     char key = 'k';\n     uint256 in = GetRandHash();\n     uint256 res;\n@@ -147,7 +147,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n     delete dbw;\n \n     // Now, set up another wrapper that wants to obfuscate the same directory\n-    CLevelDBWrapper odbw(ph, (1 << 10), false, false, true);\n+    CDBWrapper odbw(ph, (1 << 10), false, false, true);\n \n     // Check that the key/val we wrote with unobfuscated wrapper exists and \n     // is readable.\n@@ -175,7 +175,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n-    CLevelDBWrapper* dbw = new CLevelDBWrapper(ph, (1 << 10), false, false, false);\n+    CDBWrapper* dbw = new CDBWrapper(ph, (1 << 10), false, false, false);\n     char key = 'k';\n     uint256 in = GetRandHash();\n     uint256 res;\n@@ -188,7 +188,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n     delete dbw;\n \n     // Simulate a -reindex by wiping the existing data store\n-    CLevelDBWrapper odbw(ph, (1 << 10), false, true, true);\n+    CDBWrapper odbw(ph, (1 << 10), false, true, true);\n \n     // Check that the key/val we wrote with unobfuscated wrapper doesn't exist\n     uint256 res2;"
      },
      {
        "sha": "f0868a1ebfbde4c978955eac581572a2f533b47f",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8587b23038b88340ec64253ea4282afe90187a69/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8587b23038b88340ec64253ea4282afe90187a69/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=8587b23038b88340ec64253ea4282afe90187a69",
        "patch": "@@ -49,7 +49,7 @@ uint256 CCoinsViewDB::GetBestBlock() const {\n }\n \n bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n-    CLevelDBBatch batch(&db.GetObfuscateKey());\n+    CDBBatch batch(&db.GetObfuscateKey());\n     size_t count = 0;\n     size_t changed = 0;\n     for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end();) {\n@@ -71,7 +71,7 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n     return db.WriteBatch(batch);\n }\n \n-CBlockTreeDB::CBlockTreeDB(size_t nCacheSize, bool fMemory, bool fWipe) : CLevelDBWrapper(GetDataDir() / \"blocks\" / \"index\", nCacheSize, fMemory, fWipe) {\n+CBlockTreeDB::CBlockTreeDB(size_t nCacheSize, bool fMemory, bool fWipe) : CDBWrapper(GetDataDir() / \"blocks\" / \"index\", nCacheSize, fMemory, fWipe) {\n }\n \n bool CBlockTreeDB::ReadBlockFileInfo(int nFile, CBlockFileInfo &info) {\n@@ -98,7 +98,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n     /* It seems that there are no \"const iterators\" for LevelDB.  Since we\n        only need read operations on it, use a const-cast to get around\n        that restriction.  */\n-    boost::scoped_ptr<CLevelDBIterator> pcursor(const_cast<CLevelDBWrapper*>(&db)->NewIterator());\n+    boost::scoped_ptr<CDBIterator> pcursor(const_cast<CDBWrapper*>(&db)->NewIterator());\n     pcursor->Seek(DB_COINS);\n \n     CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n@@ -141,7 +141,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n }\n \n bool CBlockTreeDB::WriteBatchSync(const std::vector<std::pair<int, const CBlockFileInfo*> >& fileInfo, int nLastFile, const std::vector<const CBlockIndex*>& blockinfo) {\n-    CLevelDBBatch batch(&GetObfuscateKey());\n+    CDBBatch batch(&GetObfuscateKey());\n     for (std::vector<std::pair<int, const CBlockFileInfo*> >::const_iterator it=fileInfo.begin(); it != fileInfo.end(); it++) {\n         batch.Write(make_pair(DB_BLOCK_FILES, it->first), *it->second);\n     }\n@@ -157,7 +157,7 @@ bool CBlockTreeDB::ReadTxIndex(const uint256 &txid, CDiskTxPos &pos) {\n }\n \n bool CBlockTreeDB::WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos> >&vect) {\n-    CLevelDBBatch batch(&GetObfuscateKey());\n+    CDBBatch batch(&GetObfuscateKey());\n     for (std::vector<std::pair<uint256,CDiskTxPos> >::const_iterator it=vect.begin(); it!=vect.end(); it++)\n         batch.Write(make_pair(DB_TXINDEX, it->first), it->second);\n     return WriteBatch(batch);\n@@ -177,7 +177,7 @@ bool CBlockTreeDB::ReadFlag(const std::string &name, bool &fValue) {\n \n bool CBlockTreeDB::LoadBlockIndexGuts()\n {\n-    boost::scoped_ptr<CLevelDBIterator> pcursor(NewIterator());\n+    boost::scoped_ptr<CDBIterator> pcursor(NewIterator());\n \n     pcursor->Seek(make_pair(DB_BLOCK_INDEX, uint256()));\n "
      },
      {
        "sha": "1e8fccea45878253f121cf92d54c767205f9c99a",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8587b23038b88340ec64253ea4282afe90187a69/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8587b23038b88340ec64253ea4282afe90187a69/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=8587b23038b88340ec64253ea4282afe90187a69",
        "patch": "@@ -26,11 +26,11 @@ static const int64_t nMaxDbCache = sizeof(void*) > 4 ? 16384 : 1024;\n //! min. -dbcache in (MiB)\n static const int64_t nMinDbCache = 4;\n \n-/** CCoinsView backed by the LevelDB coin database (chainstate/) */\n+/** CCoinsView backed by the coin database (chainstate/) */\n class CCoinsViewDB : public CCoinsView\n {\n protected:\n-    CLevelDBWrapper db;\n+    CDBWrapper db;\n public:\n     CCoinsViewDB(size_t nCacheSize, bool fMemory = false, bool fWipe = false);\n \n@@ -42,7 +42,7 @@ class CCoinsViewDB : public CCoinsView\n };\n \n /** Access to the block database (blocks/index/) */\n-class CBlockTreeDB : public CLevelDBWrapper\n+class CBlockTreeDB : public CDBWrapper\n {\n public:\n     CBlockTreeDB(size_t nCacheSize, bool fMemory = false, bool fWipe = false);"
      }
    ]
  },
  {
    "sha": "3795e8152b678b9f805a395b144190a9f2fa2af4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzk1ZTgxNTJiNjc4YjlmODA1YTM5NWIxNDQxOTBhOWYyZmEyYWY0",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jeff@bloq.com",
        "date": "2015-10-23T01:33:06Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-23T01:33:06Z"
      },
      "message": "leveldbwrapper file rename to dbwrapper.*",
      "tree": {
        "sha": "2d714bcb45c42b93c4efc911c886ab238b451605",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d714bcb45c42b93c4efc911c886ab238b451605"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3795e8152b678b9f805a395b144190a9f2fa2af4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3795e8152b678b9f805a395b144190a9f2fa2af4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3795e8152b678b9f805a395b144190a9f2fa2af4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3795e8152b678b9f805a395b144190a9f2fa2af4/comments",
    "author": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8587b23038b88340ec64253ea4282afe90187a69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8587b23038b88340ec64253ea4282afe90187a69",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8587b23038b88340ec64253ea4282afe90187a69"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "312643cec36e38c0aee5164f304404d08270c37d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3795e8152b678b9f805a395b144190a9f2fa2af4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3795e8152b678b9f805a395b144190a9f2fa2af4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=3795e8152b678b9f805a395b144190a9f2fa2af4",
        "patch": "@@ -110,7 +110,7 @@ BITCOIN_CORE_H = \\\n   init.h \\\n   key.h \\\n   keystore.h \\\n-  leveldbwrapper.h \\\n+  dbwrapper.h \\\n   limitedmap.h \\\n   main.h \\\n   memusage.h \\\n@@ -188,7 +188,7 @@ libbitcoin_server_a_SOURCES = \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n   init.cpp \\\n-  leveldbwrapper.cpp \\\n+  dbwrapper.cpp \\\n   main.cpp \\\n   merkleblock.cpp \\\n   miner.cpp \\"
      },
      {
        "sha": "f23a8f41fc42d8a97d5a65be7dad268883ef501d",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3795e8152b678b9f805a395b144190a9f2fa2af4/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3795e8152b678b9f805a395b144190a9f2fa2af4/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=3795e8152b678b9f805a395b144190a9f2fa2af4",
        "patch": "@@ -54,7 +54,7 @@ BITCOIN_TESTS =\\\n   test/hash_tests.cpp \\\n   test/key_tests.cpp \\\n   test/limitedmap_tests.cpp \\\n-  test/leveldbwrapper_tests.cpp \\\n+  test/dbwrapper_tests.cpp \\\n   test/main_tests.cpp \\\n   test/mempool_tests.cpp \\\n   test/miner_tests.cpp \\"
      },
      {
        "sha": "b6307cf0bf37a98c76e5be6b97c4658de894b222",
        "filename": "src/dbwrapper.cpp",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3795e8152b678b9f805a395b144190a9f2fa2af4/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3795e8152b678b9f805a395b144190a9f2fa2af4/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=3795e8152b678b9f805a395b144190a9f2fa2af4",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"leveldbwrapper.h\"\n+#include \"dbwrapper.h\"\n \n #include \"util.h\"\n #include \"random.h\"",
        "previous_filename": "src/leveldbwrapper.cpp"
      },
      {
        "sha": "aa287675086bb98f48804115a392e7358ec865a7",
        "filename": "src/dbwrapper.h",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3795e8152b678b9f805a395b144190a9f2fa2af4/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3795e8152b678b9f805a395b144190a9f2fa2af4/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=3795e8152b678b9f805a395b144190a9f2fa2af4",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_LEVELDBWRAPPER_H\n-#define BITCOIN_LEVELDBWRAPPER_H\n+#ifndef BITCOIN_DBWRAPPER_H\n+#define BITCOIN_DBWRAPPER_H\n \n #include \"clientversion.h\"\n #include \"serialize.h\"\n@@ -276,5 +276,5 @@ class CDBWrapper\n \n };\n \n-#endif // BITCOIN_LEVELDBWRAPPER_H\n+#endif // BITCOIN_DBWRAPPER_H\n ",
        "previous_filename": "src/leveldbwrapper.h"
      },
      {
        "sha": "8b6b0697ab1d0848c322a48f2ce73d823d910011",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3795e8152b678b9f805a395b144190a9f2fa2af4/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3795e8152b678b9f805a395b144190a9f2fa2af4/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=3795e8152b678b9f805a395b144190a9f2fa2af4",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"leveldbwrapper.h\"\n+#include \"dbwrapper.h\"\n #include \"uint256.h\"\n #include \"random.h\"\n #include \"test/test_bitcoin.h\"",
        "previous_filename": "src/test/leveldbwrapper_tests.cpp"
      },
      {
        "sha": "586ab55d0d5501754a7f25d021705b33307454a8",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3795e8152b678b9f805a395b144190a9f2fa2af4/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3795e8152b678b9f805a395b144190a9f2fa2af4/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=3795e8152b678b9f805a395b144190a9f2fa2af4",
        "patch": "@@ -7,7 +7,7 @@\n #define BITCOIN_TXDB_H\n \n #include \"coins.h\"\n-#include \"leveldbwrapper.h\"\n+#include \"dbwrapper.h\"\n \n #include <map>\n #include <string>"
      }
    ]
  },
  {
    "sha": "27252b73894d00f9dbe27b664159b2a999683069",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzI1MmI3Mzg5NGQwMGY5ZGJlMjdiNjY0MTU5YjJhOTk5NjgzMDY5",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-23T02:50:01Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-23T02:50:01Z"
      },
      "message": "Fix pre-push-hook regexes",
      "tree": {
        "sha": "ae6de034486e9a3b01c058a998b56474238c3752",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae6de034486e9a3b01c058a998b56474238c3752"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27252b73894d00f9dbe27b664159b2a999683069",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27252b73894d00f9dbe27b664159b2a999683069",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27252b73894d00f9dbe27b664159b2a999683069",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27252b73894d00f9dbe27b664159b2a999683069/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2c869aef2e717ba61b9335f198322f6a4d1a12d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2c869aef2e717ba61b9335f198322f6a4d1a12d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2c869aef2e717ba61b9335f198322f6a4d1a12d"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c57222818ab8a3deb8a78a338e6792f204f97c91",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27252b73894d00f9dbe27b664159b2a999683069/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27252b73894d00f9dbe27b664159b2a999683069/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=27252b73894d00f9dbe27b664159b2a999683069",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-if ! [[ \"$2\" =~ [git@]?[www.]?github.com[:|/]bitcoin/bitcoin[.git]? ]]; then\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n     exit 0\n fi\n "
      }
    ]
  },
  {
    "sha": "bf681918d7ef5c4bc6f92465ae7922c9f4b03d93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjY4MTkxOGQ3ZWY1YzRiYzZmOTI0NjVhZTc5MjJjOWY0YjAzZDkz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-22T15:00:36Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-23T06:35:05Z"
      },
      "message": "[trivial] rpcnet: fix typo",
      "tree": {
        "sha": "1d40f10cdf33f86e5f5d64bf3e3388faaec07d9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d40f10cdf33f86e5f5d64bf3e3388faaec07d9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf681918d7ef5c4bc6f92465ae7922c9f4b03d93",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf681918d7ef5c4bc6f92465ae7922c9f4b03d93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf681918d7ef5c4bc6f92465ae7922c9f4b03d93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf681918d7ef5c4bc6f92465ae7922c9f4b03d93/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "95f429118585fdbe89b4e48a224d195e304f33a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95f429118585fdbe89b4e48a224d195e304f33a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/95f429118585fdbe89b4e48a224d195e304f33a8"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5f094069e52f2b329965d279f7220df344a280cc",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf681918d7ef5c4bc6f92465ae7922c9f4b03d93/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf681918d7ef5c4bc6f92465ae7922c9f4b03d93/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=bf681918d7ef5c4bc6f92465ae7922c9f4b03d93",
        "patch": "@@ -29,7 +29,7 @@ UniValue getconnectioncount(const UniValue& params, bool fHelp)\n         throw runtime_error(\n             \"getconnectioncount\\n\"\n             \"\\nReturns the number of connections to other nodes.\\n\"\n-            \"\\nbResult:\\n\"\n+            \"\\nResult:\\n\"\n             \"n          (numeric) The connection count\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getconnectioncount\", \"\")\n@@ -83,7 +83,7 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n         throw runtime_error(\n             \"getpeerinfo\\n\"\n             \"\\nReturns data about each connected network node as a json array of objects.\\n\"\n-            \"\\nbResult:\\n\"\n+            \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n             \"    \\\"id\\\": n,                   (numeric) Peer index\\n\""
      }
    ]
  },
  {
    "sha": "6782f58368af09a3507004edc761fb233a95bfae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NzgyZjU4MzY4YWYwOWEzNTA3MDA0ZWRjNzYxZmIyMzNhOTViZmFl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-21T06:33:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-23T06:35:05Z"
      },
      "message": "[trivial] Latest config.guess\n\nupstream commit 1e80063123b47b97d25dfeded8dd92a19dafab66",
      "tree": {
        "sha": "03929afb5cf71791acd46156d7ede8022956561d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03929afb5cf71791acd46156d7ede8022956561d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6782f58368af09a3507004edc761fb233a95bfae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6782f58368af09a3507004edc761fb233a95bfae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6782f58368af09a3507004edc761fb233a95bfae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6782f58368af09a3507004edc761fb233a95bfae/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf681918d7ef5c4bc6f92465ae7922c9f4b03d93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf681918d7ef5c4bc6f92465ae7922c9f4b03d93",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf681918d7ef5c4bc6f92465ae7922c9f4b03d93"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b3f905370ac63a60097a2d83dded1dee3387581f",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6782f58368af09a3507004edc761fb233a95bfae/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6782f58368af09a3507004edc761fb233a95bfae/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=6782f58368af09a3507004edc761fb233a95bfae",
        "patch": "@@ -2,7 +2,7 @@\n # Attempt to guess a canonical system name.\n #   Copyright 1992-2015 Free Software Foundation, Inc.\n \n-timestamp='2015-09-14'\n+timestamp='2015-10-21'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -1123,7 +1123,7 @@ EOF\n \t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n \t# the processor, so we play safe by assuming i586.\n \t# Note: whatever this is, it MUST be the same as what config.sub\n-\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n+\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n \t# this is a cross-build.\n \techo i586-pc-msdosdjgpp\n \texit ;;"
      }
    ]
  },
  {
    "sha": "b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmIxNzNhY2FiZWE3OGY1ZTYxM2RiM2QwY2RmNWUyM2FlZWQxZTlh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T07:29:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T07:29:49Z"
      },
      "message": "Merge pull request #6867\n\na4e28b3 Set TCP_NODELAY on P2P sockets. (Gregory Maxwell)",
      "tree": {
        "sha": "270790adb3840c7e29587cdaf9e6f44bfd1beaa3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/270790adb3840c7e29587cdaf9e6f44bfd1beaa3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKeHtAAoJEHSBCwEjRsmmESAH/j6JLgsOUT2CBPDTncmczVv2\nE2k4xetnbxSiibHWOgSrZLwA5URVIxxnBq+8Mb1XWhwmXGalDpod3TSaI3GPX9ro\ncP6WlKonrSfYXb2hojEGCIpq1Nv3aFoffjYAHzDpmmNyPA4EWnlGSAoMLY11Cdaz\ne+IQBSl8Ld6aGvwBFp3DX1qwAwp+JUwO6LbkNCCq8zqbL+I3D3GoMIscb6Irkf7u\nouRVSuMDr/ikXPHJkgKYiuthPPRABMVBiGCno3CQog9MUiWd134YXZjc+ZK5CuOD\nEDTs8idMRXLJN5m9++IBOxha90DPVqBcpsoFwrLKUI3wfhYyG2fieES18cPNEew=\n=43Cx\n-----END PGP SIGNATURE-----",
        "payload": "tree 270790adb3840c7e29587cdaf9e6f44bfd1beaa3\nparent f2c869aef2e717ba61b9335f198322f6a4d1a12d\nparent a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445585360 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445585389 +0200\n\nMerge pull request #6867\n\na4e28b3 Set TCP_NODELAY on P2P sockets. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2c869aef2e717ba61b9335f198322f6a4d1a12d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2c869aef2e717ba61b9335f198322f6a4d1a12d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2c869aef2e717ba61b9335f198322f6a4d1a12d"
      },
      {
        "sha": "a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4e28b3d1e5c95eb0c87f144851cd65048c3e0bc"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 21,
      "deletions": 1
    },
    "files": [
      {
        "sha": "20c2a25143bf99d317b73a26b3f3493515a1c7c3",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
        "patch": "@@ -38,6 +38,7 @@\n #include <sys/types.h>\n #include <net/if.h>\n #include <netinet/in.h>\n+#include <netinet/tcp.h>\n #include <arpa/inet.h>\n #include <ifaddrs.h>\n #include <limits.h>"
      },
      {
        "sha": "58b946f4a13078d98ce254c9c86db672e80f15e4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
        "patch": "@@ -963,6 +963,15 @@ static void AcceptConnection(const ListenSocket& hListenSocket) {\n         return;\n     }\n \n+    // According to the internet TCP_NODELAY is not carried into accepted sockets\n+    // on all platforms.  Set it again here just to be sure.\n+    int set = 1;\n+#ifdef WIN32\n+    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&set, sizeof(int));\n+#else\n+    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&set, sizeof(int));\n+#endif\n+\n     if (CNode::IsBanned(addr) && !whitelisted)\n     {\n         LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n@@ -1790,8 +1799,11 @@ bool BindListenPort(const CService &addrBind, string& strError, bool fWhiteliste\n     // Allow binding if the port is still in TIME_WAIT state after\n     // the program was closed and restarted.\n     setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (void*)&nOne, sizeof(int));\n+    // Disable Nagle's algorithm\n+    setsockopt(hListenSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&nOne, sizeof(int));\n #else\n     setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (const char*)&nOne, sizeof(int));\n+    setsockopt(hListenSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&nOne, sizeof(int));\n #endif\n \n     // Set to non-blocking, incoming connections will also inherit this"
      },
      {
        "sha": "f5316965ce7fc7a13ba11f1482c0f7471967726d",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
        "patch": "@@ -444,12 +444,19 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     if (hSocket == INVALID_SOCKET)\n         return false;\n \n-#ifdef SO_NOSIGPIPE\n     int set = 1;\n+#ifdef SO_NOSIGPIPE\n     // Different way of disabling SIGPIPE on BSD\n     setsockopt(hSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&set, sizeof(int));\n #endif\n \n+    //Disable Nagle's algorithm\n+#ifdef WIN32\n+    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&set, sizeof(int));\n+#else\n+    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&set, sizeof(int));\n+#endif\n+\n     // Set to non-blocking\n     if (!SetSocketNonBlocking(hSocket, true))\n         return error(\"ConnectSocketDirectly: Setting socket to non-blocking failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));"
      }
    ]
  },
  {
    "sha": "fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFkMjUyZTgyYThlYTc2ZmQ2NjkxOTU1ZWFlNWNhZTZlYzhiYzVh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T08:45:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T08:45:50Z"
      },
      "message": "Merge pull request #6790\n\n8c15f33 [trivial] Update contrib/devtools/README.md (MarcoFalke)\n338f62f [devtools] add clang-format.py (MarcoFalke)",
      "tree": {
        "sha": "a97e9c88240526c456bfd2065a9f1113380facb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a97e9c88240526c456bfd2065a9f1113380facb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKfO+AAoJEHSBCwEjRsmmEGAH/jl5EkDwprDjBdGYyD1FlTs8\nGHintAsq/wKafkd7wXnuwuI3cle55gVV5sGeWcy/907kfNllsZfGNiAPKtPE60+/\nNCuWabCScS9sqkTrlnLc3ws8uGkaUuqT1bYxFl/Xx3jQJ3JiBvaMksB1xD7ywqvu\n+2mxvQW/f0+bQqHDbE1ZJ6IUHQPQHJNNKD1BEubG74cSFHkH90hiAdbFDo1z1L6h\naYEEOTOde2/ZG5vGKWqJM68xjktgdUe27ix6lCS7RMaZes0z7aPe+aRyz2zsovDX\ncyGwK3PA2UvD51OnusdZ9LFt+GPENj8h18y0GcV1BN9iiXM5O+jJE+NOY1B9Rkw=\n=s4kq\n-----END PGP SIGNATURE-----",
        "payload": "tree a97e9c88240526c456bfd2065a9f1113380facb6\nparent b2b173acabea78f5e613db3d0cdf5e23aeed1e9a\nparent 8c15f33d15fddd984946b56a257049e15ddf4038\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445589948 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445589950 +0200\n\nMerge pull request #6790\n\n8c15f33 [trivial] Update contrib/devtools/README.md (MarcoFalke)\n338f62f [devtools] add clang-format.py (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2b173acabea78f5e613db3d0cdf5e23aeed1e9a"
      },
      {
        "sha": "8c15f33d15fddd984946b56a257049e15ddf4038",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c15f33d15fddd984946b56a257049e15ddf4038",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c15f33d15fddd984946b56a257049e15ddf4038"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 82,
      "deletions": 6
    },
    "files": [
      {
        "sha": "278794f14cadcfd035ddda6f42d1358cdb487504",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 20,
        "deletions": 6,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a",
        "patch": "@@ -1,9 +1,14 @@\n Contents\n-===========\n+========\n This directory contains tools for developers working on this repository.\n \n+clang-format.py\n+===============\n+\n+A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n+\n github-merge.sh\n-==================\n+===============\n \n A small script to automate merging pull-requests securely and sign them with GPG.\n \n@@ -37,23 +42,31 @@ Configuring the github-merge tool for the bitcoin repository is done in the foll\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n fix-copyright-headers.py\n-===========================\n+========================\n \n Every year newly updated files need to have its copyright headers updated to reflect the current year.\n If you run this script from src/ it will automatically update the year on the copyright header for all\n .cpp and .h files if these have a git commit from the current year.\n \n For example a file changed in 2014 (with 2014 being the current year):\n+\n ```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n \n would be changed to:\n+\n ```// Copyright (c) 2009-2014 The Bitcoin Core developers```\n \n+optimize-pngs.py\n+================\n+\n+A script to optimize png files in the bitcoin\n+repository (requires pngcrush).\n+\n symbol-check.py\n-==================\n+===============\n \n A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n+allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n still compatible with the minimum supported Linux distribution versions.\n \n Example usage after a gitian build:\n@@ -70,7 +83,7 @@ If there are 'unsupported' symbols, the return value will be 1 a list like this\n     .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n update-translations.py\n-=======================\n+======================\n \n Run this script from the root of the repository to update all translations from transifex.\n It will do the following automatically:\n@@ -93,4 +106,5 @@ maintained:\n * for sec/leveldb: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n \n Usage: git-subtree-check.sh DIR COMMIT\n+\n COMMIT may be omitted, in which case HEAD is used."
      },
      {
        "sha": "cee99047ac67e69fe767a910ac56811e574cfc8d",
        "filename": "contrib/devtools/clang-format.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python\n+'''\n+Wrapper script for clang-format\n+\n+Copyright (c) 2015 MarcoFalke\n+Copyright (c) 2015 The Bitcoin Core developers\n+Distributed under the MIT software license, see the accompanying\n+file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+import os\n+import sys\n+import subprocess\n+\n+tested_versions = ['3.6.0', '3.6.1', '3.6.2'] # A set of versions known to produce the same output\n+accepted_file_extensions = ('.h', '.cpp') # Files to format\n+\n+def check_clang_format_version(clang_format_exe):\n+    try:\n+        output = subprocess.check_output([clang_format_exe, '-version'])\n+        for ver in tested_versions:\n+            if ver in output:\n+                print \"Detected clang-format version \" + ver\n+                return\n+        raise RuntimeError(\"Untested version: \" + output)\n+    except Exception as e:\n+        print 'Could not verify version of ' + clang_format_exe + '.'\n+        raise e\n+\n+def check_command_line_args(argv):\n+    required_args = ['{clang-format-exe}', '{files}']\n+    example_args = ['clang-format-3.x', 'src/main.cpp', 'src/wallet/*']\n+\n+    if(len(argv) < len(required_args) + 1):\n+        for word in (['Usage:', argv[0]] + required_args):\n+            print word,\n+        print ''\n+        for word in (['E.g:', argv[0]] + example_args):\n+            print word,\n+        print ''\n+        sys.exit(1)\n+\n+def run_clang_format(clang_format_exe, files):\n+    for target in files:\n+        if os.path.isdir(target):\n+            for path, dirs, files in os.walk(target):\n+                run_clang_format(clang_format_exe, (os.path.join(path, f) for f in files))\n+        elif target.endswith(accepted_file_extensions):\n+            print \"Format \" + target\n+            subprocess.check_call([clang_format_exe, '-i', '-style=file', target], stdout=open(os.devnull, 'wb'), stderr=subprocess.STDOUT)\n+        else:\n+            print \"Skip \" + target\n+\n+def main(argv):\n+    check_command_line_args(argv)\n+    clang_format_exe = argv[1]\n+    files = argv[2:]\n+    check_clang_format_version(clang_format_exe)\n+    run_clang_format(clang_format_exe, files)\n+\n+if __name__ == \"__main__\":\n+    main(sys.argv)"
      }
    ]
  },
  {
    "sha": "1d94b72019e31066b33947af5709383b8075e43a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDk0YjcyMDE5ZTMxMDY2YjMzOTQ3YWY1NzA5MzgzYjgwNzVlNDNh",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-23T09:05:42Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-23T09:05:42Z"
      },
      "message": "Whitelist commits signed with Pieter's now-revoked key",
      "tree": {
        "sha": "e83ac333adc4b84830cc4482bcee2abde9a15e26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e83ac333adc4b84830cc4482bcee2abde9a15e26"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d94b72019e31066b33947af5709383b8075e43a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d94b72019e31066b33947af5709383b8075e43a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d94b72019e31066b33947af5709383b8075e43a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d94b72019e31066b33947af5709383b8075e43a/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27252b73894d00f9dbe27b664159b2a999683069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27252b73894d00f9dbe27b664159b2a999683069",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27252b73894d00f9dbe27b664159b2a999683069"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 34,
      "deletions": 2
    },
    "files": [
      {
        "sha": "31aeb8f3d38bb6004a891cea0aa04ed51a4a5973",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d94b72019e31066b33947af5709383b8075e43a/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d94b72019e31066b33947af5709383b8075e43a/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=1d94b72019e31066b33947af5709383b8075e43a",
        "patch": "@@ -0,0 +1,2 @@\n+586a29253dabec3ca0f1ccba9091daabd16b8411\n+eddaba7b5692288087a926da5733e86b47274e4e"
      },
      {
        "sha": "0218b82e11dd3bf8cc1fb8f5d24f4704c9a2cfc0",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d94b72019e31066b33947af5709383b8075e43a/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d94b72019e31066b33947af5709383b8075e43a/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=1d94b72019e31066b33947af5709383b8075e43a",
        "patch": "@@ -1,15 +1,33 @@\n #!/bin/sh\n INPUT=$(</dev/stdin)\n VALID=false\n+REVSIG=false\n IFS=$'\\n'\n for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n-\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG\"*)\n+\tcase \"$LINE\" in\n+\t\"[GNUPG:] VALIDSIG \"*)\n \t\twhile read KEY; do\n \t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n \t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n+\t\"[GNUPG:] REVKEYSIG \"*)\n+\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\twhile read KEY; do\n+\t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY:24:40} \"*)\n+\t\t\t\tREVSIG=true\n+\t\t\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${KEY:24:40} \"\n+\t\t\t\t;;\n+\t\t\tesac\n+\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n \tesac\n done\n if ! $VALID; then\n \texit 1\n fi\n-echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+if $VALID && $REVSIG; then\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\" 2>/dev/null\n+\techo \"$GOODREVSIG\"\n+else\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+fi"
      },
      {
        "sha": "9ba781008a6585699bdf515a52e340f9c56d10a8",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d94b72019e31066b33947af5709383b8075e43a/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d94b72019e31066b33947af5709383b8075e43a/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=1d94b72019e31066b33947af5709383b8075e43a",
        "patch": "@@ -7,11 +7,23 @@ git log \"$DIR\"\n \n VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n \n+IS_REVSIG_ALLOWED () {\n+\twhile read LINE; do\n+\t\t[ \"$LINE\" = \"$1\" ] && return 0\n+\tdone < \"${DIR}/allow-revsig-commits\"\n+\treturn 1\n+}\n+\n HAVE_FAILED=false\n IS_SIGNED () {\n \tif [ $1 = $VERIFIED_ROOT ]; then\n \t\treturn 0;\n \tfi\n+\tif IS_REVSIG_ALLOWED \"$1\"; then\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\telse\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\tfi\n \tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n \t\treturn 1;\n \tfi"
      }
    ]
  },
  {
    "sha": "923c5e93a90a6eddde3ab8589fc393da95bbc489",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjNjNWU5M2E5MGE2ZWRkZGUzYWI4NTg5ZmMzOTNkYTk1YmJjNDg5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T09:22:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T09:50:10Z"
      },
      "message": "Merge pull request #6818\n\nb48da5c script:  Remove magic numbers (David Hill)",
      "tree": {
        "sha": "1138bc84e9c0c8fa16cf9f9e067c276c0daee4cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1138bc84e9c0c8fa16cf9f9e067c276c0daee4cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/923c5e93a90a6eddde3ab8589fc393da95bbc489",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKgLSAAoJEHSBCwEjRsmmlzQH/io0KEZUC8wxd5TLnVVjDSnL\nI+geHJYUrsAk9WfgOBi4UXLqpaair7b53KHDadrENWO7sZoiki0SYnOQ06Zri57+\ne3pZR9Pn/TSP+5+CnJ4SKbAzdEMG5qxRWPqPQ7uSF/DUamZl9O8cgozQ4dMmOrcm\nwllP0JmfhWcWWjQJSF/8h74IOYTHq8Ea40NuFeOYHRx06U8tbDpSmrsN1tfUzA3b\nWbRLzydARs6bW8Yr18lT6bvh8Yw9idJRCTxuTjxCOB81Xlrc73K3zfm8jyf6uvGq\nIm8h8rehtYdvkm79HDfOo0pd272y8qqrIQpq9xb0aNChLXVOmkQil8psMhiZvhc=\n=1ihj\n-----END PGP SIGNATURE-----",
        "payload": "tree 1138bc84e9c0c8fa16cf9f9e067c276c0daee4cf\nparent fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a\nparent b48da5c1894a70f8fa2a50deb2e056c38ed27ecb\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445592120 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445593810 +0200\n\nMerge pull request #6818\n\nb48da5c script:  Remove magic numbers (David Hill)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/923c5e93a90a6eddde3ab8589fc393da95bbc489",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/923c5e93a90a6eddde3ab8589fc393da95bbc489",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/923c5e93a90a6eddde3ab8589fc393da95bbc489/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1d252e82a8ea76fd6691955eae5cae6ec8bc5a"
      },
      {
        "sha": "b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b48da5c1894a70f8fa2a50deb2e056c38ed27ecb"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6a20d497c0492c5b1ff74eaae9fdcb4d506bbb50",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/923c5e93a90a6eddde3ab8589fc393da95bbc489/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/923c5e93a90a6eddde3ab8589fc393da95bbc489/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=923c5e93a90a6eddde3ab8589fc393da95bbc489",
        "patch": "@@ -273,7 +273,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                 return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n \n             // Note how OP_RESERVED does not count towards the opcode limit.\n-            if (opcode > OP_16 && ++nOpCount > 201)\n+            if (opcode > OP_16 && ++nOpCount > MAX_OPS_PER_SCRIPT)\n                 return set_error(serror, SCRIPT_ERR_OP_COUNT);\n \n             if (opcode == OP_CAT ||\n@@ -869,10 +869,10 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n                         return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n \n                     int nKeysCount = CScriptNum(stacktop(-i), fRequireMinimal).getint();\n-                    if (nKeysCount < 0 || nKeysCount > 20)\n+                    if (nKeysCount < 0 || nKeysCount > MAX_PUBKEYS_PER_MULTISIG)\n                         return set_error(serror, SCRIPT_ERR_PUBKEY_COUNT);\n                     nOpCount += nKeysCount;\n-                    if (nOpCount > 201)\n+                    if (nOpCount > MAX_OPS_PER_SCRIPT)\n                         return set_error(serror, SCRIPT_ERR_OP_COUNT);\n                     int ikey = ++i;\n                     i += nKeysCount;"
      },
      {
        "sha": "263c89defe58309da0c8c5e9d063f1985d80247a",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/923c5e93a90a6eddde3ab8589fc393da95bbc489/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/923c5e93a90a6eddde3ab8589fc393da95bbc489/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=923c5e93a90a6eddde3ab8589fc393da95bbc489",
        "patch": "@@ -170,7 +170,7 @@ unsigned int CScript::GetSigOpCount(bool fAccurate) const\n             if (fAccurate && lastOpcode >= OP_1 && lastOpcode <= OP_16)\n                 n += DecodeOP_N(lastOpcode);\n             else\n-                n += 20;\n+                n += MAX_PUBKEYS_PER_MULTISIG;\n         }\n         lastOpcode = opcode;\n     }"
      },
      {
        "sha": "a38d33a1894ad57052b7e0bb56d560300f49d87c",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/923c5e93a90a6eddde3ab8589fc393da95bbc489/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/923c5e93a90a6eddde3ab8589fc393da95bbc489/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=923c5e93a90a6eddde3ab8589fc393da95bbc489",
        "patch": "@@ -17,7 +17,14 @@\n #include <string>\n #include <vector>\n \n-static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n+// Maximum number of bytes pushable to the stack\n+static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520;\n+\n+// Maximum number of non-push operations per script\n+static const int MAX_OPS_PER_SCRIPT = 201;\n+\n+// Maximum number of public keys per multisig\n+static const int MAX_PUBKEYS_PER_MULTISIG = 20;\n \n // Threshold for nLockTime: below this value it is interpreted as block number,\n // otherwise as UNIX timestamp."
      }
    ]
  },
  {
    "sha": "bf7c1958d1994c497387f8a2de678a06348f7874",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjdjMTk1OGQxOTk0YzQ5NzM4N2Y4YTJkZTY3OGEwNjM0OGY3ODc0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T10:39:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T10:47:19Z"
      },
      "message": "Merge pull request #5936\n\n212bcca Add optional locktime to createrawtransaction (Tom Harding)",
      "tree": {
        "sha": "f2ec5e87fd0a449230a0e2585ae3129b7d5612c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2ec5e87fd0a449230a0e2585ae3129b7d5612c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf7c1958d1994c497387f8a2de678a06348f7874",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKhA3AAoJEHSBCwEjRsmmrDMH/0ISM8f7PDX5ij9M5mumCNG9\nuxzG8UcGr+SwUcwKz4NBROz+CDope8WsSbukA4bJm8ueoWp+6tPP17KqMK+ac65t\nlCzg71z6Cyc61gYdDqcgAKcouwgndFh+YCxiGBq1JVzU2htDWBroZ3lQuR4jiLvw\nVUB7i/gYzDA7QoX5OaaeQX0LJFIM9q4qWRub5YE5FusLNK/E2quyjmsOQqgNknVp\ntTAAScxMBmL2Lb0fJ1IUrYaSQRNZZjkAAO+tnImgwCaLl5Nivk42YdBmjnJmj/0L\noqXMlMh+bxc+xxmyEM0RdlGMm+UZMnQGmaRXdtbiJedQD3IXZGA4s3gPQcX32DQ=\n=kN8u\n-----END PGP SIGNATURE-----",
        "payload": "tree f2ec5e87fd0a449230a0e2585ae3129b7d5612c4\nparent 923c5e93a90a6eddde3ab8589fc393da95bbc489\nparent 212bcca92089f406d9313dbe6d0e1d25143d61ff\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445596781 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445597239 +0200\n\nMerge pull request #5936\n\n212bcca Add optional locktime to createrawtransaction (Tom Harding)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf7c1958d1994c497387f8a2de678a06348f7874",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf7c1958d1994c497387f8a2de678a06348f7874",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf7c1958d1994c497387f8a2de678a06348f7874/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "923c5e93a90a6eddde3ab8589fc393da95bbc489",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/923c5e93a90a6eddde3ab8589fc393da95bbc489",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/923c5e93a90a6eddde3ab8589fc393da95bbc489"
      },
      {
        "sha": "212bcca92089f406d9313dbe6d0e1d25143d61ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/212bcca92089f406d9313dbe6d0e1d25143d61ff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/212bcca92089f406d9313dbe6d0e1d25143d61ff"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 17,
      "deletions": 4
    },
    "files": [
      {
        "sha": "343b6234d4dd7a07ecf64d331554265773c525da",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf7c1958d1994c497387f8a2de678a06348f7874/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf7c1958d1994c497387f8a2de678a06348f7874/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=bf7c1958d1994c497387f8a2de678a06348f7874",
        "patch": "@@ -76,6 +76,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getrawtransaction\", 1 },\n     { \"createrawtransaction\", 0 },\n     { \"createrawtransaction\", 1 },\n+    { \"createrawtransaction\", 2 },\n     { \"signrawtransaction\", 1 },\n     { \"signrawtransaction\", 2 },\n     { \"sendrawtransaction\", 1 },"
      },
      {
        "sha": "5f3363d097cc4f6ad3fb834925e9ea8e5b8add37",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf7c1958d1994c497387f8a2de678a06348f7874/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf7c1958d1994c497387f8a2de678a06348f7874/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=bf7c1958d1994c497387f8a2de678a06348f7874",
        "patch": "@@ -316,9 +316,9 @@ UniValue verifytxoutproof(const UniValue& params, bool fHelp)\n \n UniValue createrawtransaction(const UniValue& params, bool fHelp)\n {\n-    if (fHelp || params.size() != 2)\n+    if (fHelp || params.size() < 2 || params.size() > 3)\n         throw runtime_error(\n-            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...}\\n\"\n+            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...} ( locktime )\\n\"\n             \"\\nCreate a transaction spending the given inputs and creating new outputs.\\n\"\n             \"Outputs can be addresses or data.\\n\"\n             \"Returns hex-encoded raw transaction.\\n\"\n@@ -340,6 +340,7 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n             \"      \\\"data\\\": \\\"hex\\\",     (string, required) The key is \\\"data\\\", the value is hex encoded data\\n\"\n             \"      ...\\n\"\n             \"    }\\n\"\n+            \"3. locktime                (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transaction\\\"            (string) hex string of the transaction\\n\"\n \n@@ -351,13 +352,22 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n         );\n \n     LOCK(cs_main);\n-    RPCTypeCheck(params, boost::assign::list_of(UniValue::VARR)(UniValue::VOBJ));\n+    RPCTypeCheck(params, boost::assign::list_of(UniValue::VARR)(UniValue::VOBJ)(UniValue::VNUM), true);\n+    if (params[0].isNull() || params[1].isNull())\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, arguments 1 and 2 must be non-null\");\n \n     UniValue inputs = params[0].get_array();\n     UniValue sendTo = params[1].get_obj();\n \n     CMutableTransaction rawTx;\n \n+    if (params.size() > 2 && !params[2].isNull()) {\n+        int64_t nLockTime = params[2].get_int64();\n+        if (nLockTime < 0 || nLockTime > std::numeric_limits<uint32_t>::max())\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, locktime out of range\");\n+        rawTx.nLockTime = nLockTime;\n+    }\n+\n     for (unsigned int idx = 0; idx < inputs.size(); idx++) {\n         const UniValue& input = inputs[idx];\n         const UniValue& o = input.get_obj();\n@@ -371,7 +381,9 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n         if (nOutput < 0)\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout must be positive\");\n \n-        CTxIn in(COutPoint(txid, nOutput));\n+        uint32_t nSequence = (rawTx.nLockTime ? std::numeric_limits<uint32_t>::max() - 1 : std::numeric_limits<uint32_t>::max());\n+        CTxIn in(COutPoint(txid, nOutput), CScript(), nSequence);\n+\n         rawTx.vin.push_back(in);\n     }\n "
      }
    ]
  },
  {
    "sha": "2a1090d4f55c307ddf50639cdedf329de1f5a02a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTEwOTBkNGY1NWMzMDdkZGY1MDYzOWNkZWRmMzI5ZGUxZjVhMDJh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T11:32:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T11:33:13Z"
      },
      "message": "Merge pull request #6351\n\n65ef372 Add BIP65 to getblockchaininfo softforks list (Peter Todd)\ncde7ab2 Add RPC tests for the CHECKLOCKTIMEVERIFY (BIP65) soft-fork (Peter Todd)\n287f54f Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic (Peter Todd)",
      "tree": {
        "sha": "5ffda2b4acac63c6ae9dad3785e7d0c312643eea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ffda2b4acac63c6ae9dad3785e7d0c312643eea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a1090d4f55c307ddf50639cdedf329de1f5a02a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKhr5AAoJEHSBCwEjRsmmswkH/R12LuIVzzFN0uqcjYIC9E3x\nXz0N9MPg7Th/l90kqIdh1Cf3fRXAPyrrxQ+ddrN6NucvUoU7gUhVj3oKghGnWtmQ\n2EAHqS4ozEVXjA0thYSa93MD8qhsToDGMNtlkTk4PToc7T3JSxF1J2AHILVB2cj7\nQdET6hLE0+tUryI7lShOdykaSBl9HiUYtp+RqvEi6ubn82S5qEQlQD0UpdE98h7V\nJvXltFM860kDG55OQJbH++uCRvf4u/SYh8P+6t/PlqZaQAmch/G/mvtlW2783JiS\n6NfAzmab1VQF6NGB9OCc/Tg1GZU8r4XxbhkthZ5M3umKpBncT+OKYBbidnAVrEs=\n=z0zJ\n-----END PGP SIGNATURE-----",
        "payload": "tree 5ffda2b4acac63c6ae9dad3785e7d0c312643eea\nparent bf7c1958d1994c497387f8a2de678a06348f7874\nparent 65ef3723024881b7b21597bb784503094a323fb4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445599962 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445599993 +0200\n\nMerge pull request #6351\n\n65ef372 Add BIP65 to getblockchaininfo softforks list (Peter Todd)\ncde7ab2 Add RPC tests for the CHECKLOCKTIMEVERIFY (BIP65) soft-fork (Peter Todd)\n287f54f Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic (Peter Todd)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a1090d4f55c307ddf50639cdedf329de1f5a02a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a1090d4f55c307ddf50639cdedf329de1f5a02a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a1090d4f55c307ddf50639cdedf329de1f5a02a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf7c1958d1994c497387f8a2de678a06348f7874",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf7c1958d1994c497387f8a2de678a06348f7874",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf7c1958d1994c497387f8a2de678a06348f7874"
      },
      {
        "sha": "65ef3723024881b7b21597bb784503094a323fb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65ef3723024881b7b21597bb784503094a323fb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65ef3723024881b7b21597bb784503094a323fb4"
      }
    ],
    "stats": {
      "total": 290,
      "additions": 285,
      "deletions": 5
    },
    "files": [
      {
        "sha": "7e682d530af7e955b2c7d56a320e0bab848201c2",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a1090d4f55c307ddf50639cdedf329de1f5a02a/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a1090d4f55c307ddf50639cdedf329de1f5a02a/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "patch": "@@ -70,6 +70,8 @@\n     'blockchain.py',\n ]\n testScriptsExt = [\n+    'bip65-cltv.py',\n+    'bip65-cltv-p2p.py',\n     'bipdersig-p2p.py',\n     'bipdersig.py',\n     'getblocktemplate_longpoll.py',"
      },
      {
        "sha": "1f8548c21933eab8ece7565787bba51f39aeb055",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "added",
        "additions": 175,
        "deletions": 0,
        "changes": 175,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a1090d4f55c307ddf50639cdedf329de1f5a02a/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a1090d4f55c307ddf50639cdedf329de1f5a02a/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "patch": "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python2\n+#\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.util import *\n+from test_framework.mininode import CTransaction, NetworkThread\n+from test_framework.blocktools import create_coinbase, create_block\n+from test_framework.comptool import TestInstance, TestManager\n+from test_framework.script import CScript, OP_1NEGATE, OP_NOP2, OP_DROP\n+from binascii import hexlify, unhexlify\n+import cStringIO\n+import time\n+\n+def cltv_invalidate(tx):\n+    '''Modify the signature in vin 0 of the tx to fail CLTV\n+\n+    Prepends -1 CLTV DROP in the scriptSig itself.\n+    '''\n+    tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_NOP2, OP_DROP] +\n+                                  list(CScript(tx.vin[0].scriptSig)))\n+\n+'''\n+This test is meant to exercise BIP65 (CHECKLOCKTIMEVERIFY)\n+Connect to a single node.\n+Mine 2 (version 3) blocks (save the coinbases for later).\n+Generate 98 more version 3 blocks, verify the node accepts.\n+Mine 749 version 4 blocks, verify the node accepts.\n+Check that the new CLTV rules are not enforced on the 750th version 4 block.\n+Check that the new CLTV rules are enforced on the 751st version 4 block.\n+Mine 199 new version blocks.\n+Mine 1 old-version block.\n+Mine 1 new version block.\n+Mine 1 old version block, see that the node rejects.\n+'''\n+\n+class BIP65Test(ComparisonTestFramework):\n+\n+    def __init__(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        # Must set the blockversion for this test\n+        self.nodes = start_nodes(1, self.options.tmpdir,\n+                                 extra_args=[['-debug', '-whitelist=127.0.0.1', '-blockversion=3']],\n+                                 binary=[self.options.testbinary])\n+\n+    def run_test(self):\n+        test = TestManager(self, self.options.tmpdir)\n+        test.add_all_connections(self.nodes)\n+        NetworkThread().start() # Start up network handling in another thread\n+        test.run()\n+\n+    def create_transaction(self, node, coinbase, to_address, amount):\n+        from_txid = node.getblock(coinbase)['tx'][0]\n+        inputs = [{ \"txid\" : from_txid, \"vout\" : 0}]\n+        outputs = { to_address : amount }\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+        signresult = node.signrawtransaction(rawtx)\n+        tx = CTransaction()\n+        f = cStringIO.StringIO(unhexlify(signresult['hex']))\n+        tx.deserialize(f)\n+        return tx\n+\n+    def get_tests(self):\n+\n+        self.coinbase_blocks = self.nodes[0].generate(2)\n+        self.tip = int (\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n+        self.nodeaddress = self.nodes[0].getnewaddress()\n+        self.last_block_time = time.time()\n+\n+        ''' 98 more version 3 blocks '''\n+        test_blocks = []\n+        for i in xrange(98):\n+            block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+            block.nVersion = 3\n+            block.rehash()\n+            block.solve()\n+            test_blocks.append([block, True])\n+            self.last_block_time += 1\n+            self.tip = block.sha256\n+        yield TestInstance(test_blocks, sync_every_block=False)\n+\n+        ''' Mine 749 version 4 blocks '''\n+        test_blocks = []\n+        for i in xrange(749):\n+            block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+            block.nVersion = 4\n+            block.rehash()\n+            block.solve()\n+            test_blocks.append([block, True])\n+            self.last_block_time += 1\n+            self.tip = block.sha256\n+        yield TestInstance(test_blocks, sync_every_block=False)\n+\n+        '''\n+        Check that the new CLTV rules are not enforced in the 750th\n+        version 3 block.\n+        '''\n+        spendtx = self.create_transaction(self.nodes[0],\n+                self.coinbase_blocks[0], self.nodeaddress, 1.0)\n+        cltv_invalidate(spendtx)\n+        spendtx.rehash()\n+\n+        block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+        block.nVersion = 4\n+        block.vtx.append(spendtx)\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        block.rehash()\n+        block.solve()\n+\n+        self.last_block_time += 1\n+        self.tip = block.sha256\n+        yield TestInstance([[block, True]])\n+\n+        '''\n+        Check that the new CLTV rules are enforced in the 751st version 4\n+        block.\n+        '''\n+        spendtx = self.create_transaction(self.nodes[0],\n+                self.coinbase_blocks[1], self.nodeaddress, 1.0)\n+        cltv_invalidate(spendtx)\n+        spendtx.rehash()\n+\n+        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block.nVersion = 4\n+        block.vtx.append(spendtx)\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        block.rehash()\n+        block.solve()\n+        self.last_block_time += 1\n+        yield TestInstance([[block, False]])\n+\n+        ''' Mine 199 new version blocks on last valid tip '''\n+        test_blocks = []\n+        for i in xrange(199):\n+            block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+            block.nVersion = 4\n+            block.rehash()\n+            block.solve()\n+            test_blocks.append([block, True])\n+            self.last_block_time += 1\n+            self.tip = block.sha256\n+        yield TestInstance(test_blocks, sync_every_block=False)\n+\n+        ''' Mine 1 old version block '''\n+        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block.nVersion = 3\n+        block.rehash()\n+        block.solve()\n+        self.last_block_time += 1\n+        self.tip = block.sha256\n+        yield TestInstance([[block, True]])\n+\n+        ''' Mine 1 new version block '''\n+        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block.nVersion = 4\n+        block.rehash()\n+        block.solve()\n+        self.last_block_time += 1\n+        self.tip = block.sha256\n+        yield TestInstance([[block, True]])\n+\n+        ''' Mine 1 old version block, should be invalid '''\n+        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block.nVersion = 3\n+        block.rehash()\n+        block.solve()\n+        self.last_block_time += 1\n+        yield TestInstance([[block, False]])\n+\n+if __name__ == '__main__':\n+    BIP65Test().main()"
      },
      {
        "sha": "e90e11e6a75a8960e3aa403e67ad4249ab646f24",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a1090d4f55c307ddf50639cdedf329de1f5a02a/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a1090d4f55c307ddf50639cdedf329de1f5a02a/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "patch": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test the CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n+#\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import os\n+import shutil\n+\n+class BIP65Test(BitcoinTestFramework):\n+\n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, []))\n+        self.nodes.append(start_node(1, self.options.tmpdir, [\"-blockversion=3\"]))\n+        self.nodes.append(start_node(2, self.options.tmpdir, [\"-blockversion=4\"]))\n+        connect_nodes(self.nodes[1], 0)\n+        connect_nodes(self.nodes[2], 0)\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        cnt = self.nodes[0].getblockcount()\n+\n+        # Mine some old-version blocks\n+        self.nodes[1].generate(100)\n+        self.sync_all()\n+        if (self.nodes[0].getblockcount() != cnt + 100):\n+            raise AssertionError(\"Failed to mine 100 version=3 blocks\")\n+\n+        # Mine 750 new-version blocks\n+        for i in xrange(15):\n+            self.nodes[2].generate(50)\n+        self.sync_all()\n+        if (self.nodes[0].getblockcount() != cnt + 850):\n+            raise AssertionError(\"Failed to mine 750 version=4 blocks\")\n+\n+        # TODO: check that new CHECKLOCKTIMEVERIFY rules are not enforced\n+\n+        # Mine 1 new-version block\n+        self.nodes[2].generate(1)\n+        self.sync_all()\n+        if (self.nodes[0].getblockcount() != cnt + 851):\n+            raise AssertionFailure(\"Failed to mine a version=4 blocks\")\n+\n+        # TODO: check that new CHECKLOCKTIMEVERIFY rules are enforced\n+\n+        # Mine 198 new-version blocks\n+        for i in xrange(2):\n+            self.nodes[2].generate(99)\n+        self.sync_all()\n+        if (self.nodes[0].getblockcount() != cnt + 1049):\n+            raise AssertionError(\"Failed to mine 198 version=4 blocks\")\n+\n+        # Mine 1 old-version block\n+        self.nodes[1].generate(1)\n+        self.sync_all()\n+        if (self.nodes[0].getblockcount() != cnt + 1050):\n+            raise AssertionError(\"Failed to mine a version=3 block after 949 version=4 blocks\")\n+\n+        # Mine 1 new-version blocks\n+        self.nodes[2].generate(1)\n+        self.sync_all()\n+        if (self.nodes[0].getblockcount() != cnt + 1051):\n+            raise AssertionError(\"Failed to mine a version=4 block\")\n+\n+        # Mine 1 old-version blocks\n+        try:\n+            self.nodes[1].generate(1)\n+            raise AssertionError(\"Succeeded to mine a version=3 block after 950 version=4 blocks\")\n+        except JSONRPCException:\n+            pass\n+        self.sync_all()\n+        if (self.nodes[0].getblockcount() != cnt + 1051):\n+            raise AssertionError(\"Accepted a version=3 block after 950 version=4 blocks\")\n+\n+        # Mine 1 new-version blocks\n+        self.nodes[2].generate(1)\n+        self.sync_all()\n+        if (self.nodes[0].getblockcount() != cnt + 1052):\n+            raise AssertionError(\"Failed to mine a version=4 block\")\n+\n+if __name__ == '__main__':\n+    BIP65Test().main()"
      },
      {
        "sha": "2bcb5530985eb2317ca0b440fe567ff494a6af50",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a1090d4f55c307ddf50639cdedf329de1f5a02a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a1090d4f55c307ddf50639cdedf329de1f5a02a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "patch": "@@ -1751,11 +1751,18 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     unsigned int flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n \n-    // Start enforcing the DERSIG (BIP66) rules, for block.nVersion=3 blocks, when 75% of the network has upgraded:\n+    // Start enforcing the DERSIG (BIP66) rules, for block.nVersion=3 blocks,\n+    // when 75% of the network has upgraded:\n     if (block.nVersion >= 3 && IsSuperMajority(3, pindex->pprev, chainparams.GetConsensus().nMajorityEnforceBlockUpgrade, chainparams.GetConsensus())) {\n         flags |= SCRIPT_VERIFY_DERSIG;\n     }\n \n+    // Start enforcing CHECKLOCKTIMEVERIFY, (BIP65) for block.nVersion=4\n+    // blocks, when 75% of the network has upgraded:\n+    if (block.nVersion >= 4 && IsSuperMajority(4, pindex->pprev, chainparams.GetConsensus().nMajorityEnforceBlockUpgrade, chainparams.GetConsensus())) {\n+        flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+    }\n+\n     CBlockUndo blockundo;\n \n     CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads ? &scriptcheckqueue : NULL);\n@@ -2702,6 +2709,11 @@ bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& sta\n         return state.Invalid(error(\"%s : rejected nVersion=2 block\", __func__),\n                              REJECT_OBSOLETE, \"bad-version\");\n \n+    // Reject block.nVersion=3 blocks when 95% (75% on testnet) of the network has upgraded:\n+    if (block.nVersion < 4 && IsSuperMajority(4, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n+        return state.Invalid(error(\"%s : rejected nVersion=3 block\", __func__),\n+                             REJECT_OBSOLETE, \"bad-version\");\n+\n     return true;\n }\n "
      },
      {
        "sha": "54731ff55736332161b24052f6838dcf348c41ae",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a1090d4f55c307ddf50639cdedf329de1f5a02a/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a1090d4f55c307ddf50639cdedf329de1f5a02a/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "patch": "@@ -21,7 +21,7 @@ class CBlockHeader\n {\n public:\n     // header\n-    static const int32_t CURRENT_VERSION=3;\n+    static const int32_t CURRENT_VERSION=4;\n     int32_t nVersion;\n     uint256 hashPrevBlock;\n     uint256 hashMerkleRoot;"
      },
      {
        "sha": "20c0c1fb2f2e46b0be7c554ba294b0fbc2364117",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a1090d4f55c307ddf50639cdedf329de1f5a02a/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a1090d4f55c307ddf50639cdedf329de1f5a02a/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "patch": "@@ -648,6 +648,7 @@ UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n     UniValue softforks(UniValue::VARR);\n     softforks.push_back(SoftForkDesc(\"bip34\", 2, tip, consensusParams));\n     softforks.push_back(SoftForkDesc(\"bip66\", 3, tip, consensusParams));\n+    softforks.push_back(SoftForkDesc(\"bip65\", 4, tip, consensusParams));\n     obj.push_back(Pair(\"softforks\",             softforks));\n \n     if (fPruneMode)"
      },
      {
        "sha": "a48ff1e18d3a41c89ccf4b4686be51844a135635",
        "filename": "src/script/bitcoinconsensus.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a1090d4f55c307ddf50639cdedf329de1f5a02a/src/script/bitcoinconsensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a1090d4f55c307ddf50639cdedf329de1f5a02a/src/script/bitcoinconsensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.h?ref=2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "patch": "@@ -44,9 +44,10 @@ typedef enum bitcoinconsensus_error_t\n /** Script verification flags */\n enum\n {\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE      = 0,\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH      = (1U << 0), // evaluate P2SH (BIP16) subscripts\n-    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG    = (1U << 2), // enforce strict DER (BIP66) compliance\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE                = 0,\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH                = (1U << 0), // evaluate P2SH (BIP16) subscripts\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG              = (1U << 2), // enforce strict DER (BIP66) compliance\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n };\n \n /// Returns 1 if the input nIn of the serialized transaction pointed to by"
      }
    ]
  },
  {
    "sha": "dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2E3YmQzMTUyYzVjMjFhYTBhMmIxNGFhMDlkNDA0NWFlNTFkY2M1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T10:32:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T12:24:08Z"
      },
      "message": "doc: Add developer notes about gitignore\n\n- Add developer notes about `.gitignore.`\n- Remove qt creator specific files from gitignore, to be consistent.",
      "tree": {
        "sha": "1741e84a79817c6f2d2210bf707406aec0fe8465",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1741e84a79817c6f2d2210bf707406aec0fe8465"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "923c5e93a90a6eddde3ab8589fc393da95bbc489",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/923c5e93a90a6eddde3ab8589fc393da95bbc489",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/923c5e93a90a6eddde3ab8589fc393da95bbc489"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 33,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8ad862d84ccd4dcd2e81afbf12a793667b6bbc07",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5",
        "patch": "@@ -85,9 +85,6 @@ src/test/buildenv.py\n # Resources cpp\n qrc_*.cpp\n \n-# Qt creator\n-*.pro.user\n-\n # Mac specific\n .DS_Store\n build"
      },
      {
        "sha": "7fe292f1f8549ab6ddfdfdf2959c87c536a12375",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5",
        "patch": "@@ -171,3 +171,36 @@ Threads\n - BitcoinMiner : Generates bitcoins (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n+\n+Ignoring IDE/editor files\n+--------------------------\n+\n+In closed-source environments in which everyone uses the same IDE it is common\n+to add temporary files it produces to the project-wide `.gitignore` file.\n+\n+However, in open source software such as Bitcoin Core, where everyone uses\n+their own editors/IDE/tools, it is less common. Only you know what files your\n+editor produces and this may change from version to version. The canonical way\n+to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n+\n+```\n+[core]\n+        excludesfile = /home/.../.gitignore_global\n+```\n+\n+(alternatively, type the command `git config --global core.excludesfile ~/.gitignore_global`\n+on a terminal)\n+\n+Then put your favourite tool's temporary filenames in that file, e.g.\n+```\n+# NetBeans\n+nbproject/\n+```\n+\n+Another option is to create a per-repository excludes file `.git/info/exclude`.\n+These are not committed but apply only to one repository.\n+\n+If a set of tools is used by the build system or scripts the repository (for\n+example, lcov) it is perfectly acceptable to add its files to `.gitignore`\n+and commit them.\n+"
      }
    ]
  },
  {
    "sha": "c719cefc417cc578f48b33069b764339a61054ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzE5Y2VmYzQxN2NjNTc4ZjQ4YjMzMDY5Yjc2NDMzOWE2MTA1NGNl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T12:41:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T12:41:30Z"
      },
      "message": "Merge pull request #6856\n\nd3b09f6 Do not allow blockfile pruning during reindex. (Alex Morcos)",
      "tree": {
        "sha": "9d637db7808526596c4409d9ba6cc9aca9004b76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d637db7808526596c4409d9ba6cc9aca9004b76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c719cefc417cc578f48b33069b764339a61054ce",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWKir6AAoJEHSBCwEjRsmmixIH/iRmh/MhJIcm56oHThJtcX9l\nMeO2PsKmfSU/nv/S7yut26s0eNgD7DbTvO5UCNjLwchiKhA31kZRNGtNzv3uH3pp\nT/0HD4kMaFaEp9HOXx34JadMfHvFTdKAsuNYpfjyyypE1Jk6oOGLfgpDSmQrP9DP\nBT5sF6O2FZ9r8R22iY9vp3wZPdsYdBuVwfk9sq01XE9SJ5OVwocACyNEReVchHLs\nhkOfEs8uEpNB2OzYmNMc+5gw4pjuDNdEG+RJI2U4b34/DRsNb9/iSdO1emF3DCSo\nVxvRAqRxWsgDHMrQz2Hr1AMgeaD+qfBhhh2lIzaI7XyIj1H7lj0oEpjFtsfIaBI=\n=E8+p\n-----END PGP SIGNATURE-----",
        "payload": "tree 9d637db7808526596c4409d9ba6cc9aca9004b76\nparent 2a1090d4f55c307ddf50639cdedf329de1f5a02a\nparent d3b09f6bac738958b6bf5711bcb5291049b7466d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445604077 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445604090 +0200\n\nMerge pull request #6856\n\nd3b09f6 Do not allow blockfile pruning during reindex. (Alex Morcos)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c719cefc417cc578f48b33069b764339a61054ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c719cefc417cc578f48b33069b764339a61054ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c719cefc417cc578f48b33069b764339a61054ce/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a1090d4f55c307ddf50639cdedf329de1f5a02a"
      },
      {
        "sha": "d3b09f6bac738958b6bf5711bcb5291049b7466d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3b09f6bac738958b6bf5711bcb5291049b7466d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3b09f6bac738958b6bf5711bcb5291049b7466d"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "dd9259d4c9a417b64c2689481b2fce8eb707ec80",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c719cefc417cc578f48b33069b764339a61054ce/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c719cefc417cc578f48b33069b764339a61054ce/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c719cefc417cc578f48b33069b764339a61054ce",
        "patch": "@@ -1505,10 +1505,10 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // if pruning, unset the service bit and perform the initial blockstore prune\n     // after any wallet rescanning has taken place.\n     if (fPruneMode) {\n-        uiInterface.InitMessage(_(\"Pruning blockstore...\"));\n         LogPrintf(\"Unsetting NODE_NETWORK on prune mode\\n\");\n         nLocalServices &= ~NODE_NETWORK;\n         if (!fReindex) {\n+            uiInterface.InitMessage(_(\"Pruning blockstore...\"));\n             PruneAndFlush();\n         }\n     }"
      },
      {
        "sha": "30df2744a3271a212073a1bd45c92c026186f377",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c719cefc417cc578f48b33069b764339a61054ce/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c719cefc417cc578f48b33069b764339a61054ce/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c719cefc417cc578f48b33069b764339a61054ce",
        "patch": "@@ -1899,7 +1899,7 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode) {\n     std::set<int> setFilesToPrune;\n     bool fFlushForPrune = false;\n     try {\n-    if (fPruneMode && fCheckForPruning) {\n+    if (fPruneMode && fCheckForPruning && !fReindex) {\n         FindFilesToPrune(setFilesToPrune);\n         fCheckForPruning = false;\n         if (!setFilesToPrune.empty()) {"
      }
    ]
  },
  {
    "sha": "46f74379b86be982b121bcb8c3cfe07fa80bffd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NmY3NDM3OWI4NmJlOTgyYjEyMWJjYjhjM2NmZTA3ZmE4MGJmZmQw",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-23T13:01:22Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2015-10-23T13:01:22Z"
      },
      "message": "Merge pull request #6873",
      "tree": {
        "sha": "125eafb36c1f1e82aff53ded928bd4f3a16eeee7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/125eafb36c1f1e82aff53ded928bd4f3a16eeee7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAViovtSWzCDIBeCsvAQKrAA/+P8TtH9EZxoDTlYt+q/d9aZBPCUDBEWYM\nRJGgZM6B6dGWT1GEq5H39DBEKHTlC/SQAhOsSIcgbNShmsmFtuW3BfR+50M/fyzh\nHFCDjF3n7WG3utfi+8CDnJdbGavUqt798SEEmviksP/s4EgQznSccibSavnW8+i5\n0sglsuyvwhn8QVvlkYt3ZfofgF7TwazMFyI96OkSPG2kXIEoVRSigLTmRba0HUcl\nVjMcc/iGjPwHgR+AOK3qKo+e5qLeSzvxVXb64kUFcf5tYmtCNyvSRiSi/jcVDlqX\nIYicy0Xx1JUjPib5oIK9yyTsSzvj6X8r5Je+92fVT+nL3uyt7P3415j6pfqMalQa\n7Tcoqt4GWgvYCwkZ1T8nLk2VQX766s7nRgm6OxQhR7XzITbaKib0RMBgwwKlZ1xw\nRZLlBTyySqr93D5FqUlmLhtIFZXv6aKtXTGRjA6WSjwn+UMA/UfV6zP+ICO56xER\nAe3TkgX7BiTpjcMiLYbLBinbUZe+k/HjpQFWUeSQr24VEH7Tdj531/B5iFH1cZLg\nKhd1uzTQ+UToQfTi1RXcYc2bmWJN2Sl3Cw1bRzEagoLzZV8ygwfVb9BXuMHUEtb9\nDFhe6g09fM5MdxPKGoARfdYtYkHH+VzUZB+f7TY0jXTg4n+qD64zFugVgwSXlkN+\neo3O9UxIt8c=\n=J3tM\n-----END PGP SIGNATURE-----",
        "payload": "tree 125eafb36c1f1e82aff53ded928bd4f3a16eeee7\nparent c719cefc417cc578f48b33069b764339a61054ce\nparent 3795e8152b678b9f805a395b144190a9f2fa2af4\nauthor Jeff Garzik <jgarzik@pobox.com> 1445605282 -0400\ncommitter Jeff Garzik <jgarzik@pobox.com> 1445605282 -0400\n\nMerge pull request #6873\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0/comments",
    "author": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c719cefc417cc578f48b33069b764339a61054ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c719cefc417cc578f48b33069b764339a61054ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c719cefc417cc578f48b33069b764339a61054ce"
      },
      {
        "sha": "3795e8152b678b9f805a395b144190a9f2fa2af4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3795e8152b678b9f805a395b144190a9f2fa2af4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3795e8152b678b9f805a395b144190a9f2fa2af4"
      }
    ],
    "stats": {
      "total": 174,
      "additions": 85,
      "deletions": 89
    },
    "files": [
      {
        "sha": "312643cec36e38c0aee5164f304404d08270c37d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "patch": "@@ -110,7 +110,7 @@ BITCOIN_CORE_H = \\\n   init.h \\\n   key.h \\\n   keystore.h \\\n-  leveldbwrapper.h \\\n+  dbwrapper.h \\\n   limitedmap.h \\\n   main.h \\\n   memusage.h \\\n@@ -188,7 +188,7 @@ libbitcoin_server_a_SOURCES = \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n   init.cpp \\\n-  leveldbwrapper.cpp \\\n+  dbwrapper.cpp \\\n   main.cpp \\\n   merkleblock.cpp \\\n   miner.cpp \\"
      },
      {
        "sha": "f23a8f41fc42d8a97d5a65be7dad268883ef501d",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "patch": "@@ -54,7 +54,7 @@ BITCOIN_TESTS =\\\n   test/hash_tests.cpp \\\n   test/key_tests.cpp \\\n   test/limitedmap_tests.cpp \\\n-  test/leveldbwrapper_tests.cpp \\\n+  test/dbwrapper_tests.cpp \\\n   test/main_tests.cpp \\\n   test/mempool_tests.cpp \\\n   test/miner_tests.cpp \\"
      },
      {
        "sha": "b6307cf0bf37a98c76e5be6b97c4658de894b222",
        "filename": "src/dbwrapper.cpp",
        "status": "renamed",
        "additions": 27,
        "deletions": 29,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"leveldbwrapper.h\"\n+#include \"dbwrapper.h\"\n \n #include \"util.h\"\n #include \"random.h\"\n@@ -15,18 +15,18 @@\n #include <memenv.h>\n #include <stdint.h>\n \n-void HandleError(const leveldb::Status& status) throw(leveldb_error)\n+void HandleError(const leveldb::Status& status) throw(dbwrapper_error)\n {\n     if (status.ok())\n         return;\n     LogPrintf(\"%s\\n\", status.ToString());\n     if (status.IsCorruption())\n-        throw leveldb_error(\"Database corrupted\");\n+        throw dbwrapper_error(\"Database corrupted\");\n     if (status.IsIOError())\n-        throw leveldb_error(\"Database I/O error\");\n+        throw dbwrapper_error(\"Database I/O error\");\n     if (status.IsNotFound())\n-        throw leveldb_error(\"Database entry missing\");\n-    throw leveldb_error(\"Unknown database error\");\n+        throw dbwrapper_error(\"Database entry missing\");\n+    throw dbwrapper_error(\"Unknown database error\");\n }\n \n static leveldb::Options GetOptions(size_t nCacheSize)\n@@ -45,7 +45,7 @@ static leveldb::Options GetOptions(size_t nCacheSize)\n     return options;\n }\n \n-CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n+CDBWrapper::CDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n {\n     penv = NULL;\n     readoptions.verify_checksums = true;\n@@ -76,7 +76,7 @@ CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCa\n     bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n \n     if (!key_exists && obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset \n+        // Initialize non-degenerate obfuscation if it won't upset\n         // existing, non-obfuscated data.\n         std::vector<unsigned char> new_key = CreateObfuscateKey();\n \n@@ -90,7 +90,7 @@ CLevelDBWrapper::CLevelDBWrapper(const boost::filesystem::path& path, size_t nCa\n     LogPrintf(\"Using obfuscation key for %s: %s\\n\", path.string(), GetObfuscateKeyHex());\n }\n \n-CLevelDBWrapper::~CLevelDBWrapper()\n+CDBWrapper::~CDBWrapper()\n {\n     delete pdb;\n     pdb = NULL;\n@@ -102,7 +102,7 @@ CLevelDBWrapper::~CLevelDBWrapper()\n     options.env = NULL;\n }\n \n-bool CLevelDBWrapper::WriteBatch(CLevelDBBatch& batch, bool fSync) throw(leveldb_error)\n+bool CDBWrapper::WriteBatch(CDBBatch& batch, bool fSync) throw(dbwrapper_error)\n {\n     leveldb::Status status = pdb->Write(fSync ? syncoptions : writeoptions, &batch.batch);\n     HandleError(status);\n@@ -113,42 +113,40 @@ bool CLevelDBWrapper::WriteBatch(CLevelDBBatch& batch, bool fSync) throw(leveldb\n //\n // We must use a string constructor which specifies length so that we copy\n // past the null-terminator.\n-const std::string CLevelDBWrapper::OBFUSCATE_KEY_KEY(\"\\000obfuscate_key\", 14);\n+const std::string CDBWrapper::OBFUSCATE_KEY_KEY(\"\\000obfuscate_key\", 14);\n \n-const unsigned int CLevelDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n+const unsigned int CDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8;\n \n /**\n- * Returns a string (consisting of 8 random bytes) suitable for use as an \n- * obfuscating XOR key. \n+ * Returns a string (consisting of 8 random bytes) suitable for use as an\n+ * obfuscating XOR key.\n  */\n-std::vector<unsigned char> CLevelDBWrapper::CreateObfuscateKey() const \n+std::vector<unsigned char> CDBWrapper::CreateObfuscateKey() const\n {\n     unsigned char buff[OBFUSCATE_KEY_NUM_BYTES];\n     GetRandBytes(buff, OBFUSCATE_KEY_NUM_BYTES);\n     return std::vector<unsigned char>(&buff[0], &buff[OBFUSCATE_KEY_NUM_BYTES]);\n \n }\n \n-bool CLevelDBWrapper::IsEmpty()\n+bool CDBWrapper::IsEmpty()\n {\n-    boost::scoped_ptr<CLevelDBIterator> it(NewIterator());\n+    boost::scoped_ptr<CDBIterator> it(NewIterator());\n     it->SeekToFirst();\n     return !(it->Valid());\n }\n \n-const std::vector<unsigned char>& CLevelDBWrapper::GetObfuscateKey() const \n-{ \n-    return obfuscate_key; \n+const std::vector<unsigned char>& CDBWrapper::GetObfuscateKey() const\n+{\n+    return obfuscate_key;\n }\n \n-std::string CLevelDBWrapper::GetObfuscateKeyHex() const\n-{ \n-    return HexStr(obfuscate_key); \n+std::string CDBWrapper::GetObfuscateKeyHex() const\n+{\n+    return HexStr(obfuscate_key);\n }\n \n-CLevelDBIterator::~CLevelDBIterator() { delete piter; }\n-bool CLevelDBIterator::Valid() { return piter->Valid(); }\n-void CLevelDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n-void CLevelDBIterator::SeekToLast() { piter->SeekToLast(); }\n-void CLevelDBIterator::Next() { piter->Next(); }\n-void CLevelDBIterator::Prev() { piter->Prev(); }\n+CDBIterator::~CDBIterator() { delete piter; }\n+bool CDBIterator::Valid() { return piter->Valid(); }\n+void CDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n+void CDBIterator::Next() { piter->Next(); }",
        "previous_filename": "src/leveldbwrapper.cpp"
      },
      {
        "sha": "aa287675086bb98f48804115a392e7358ec865a7",
        "filename": "src/dbwrapper.h",
        "status": "renamed",
        "additions": 31,
        "deletions": 33,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_LEVELDBWRAPPER_H\n-#define BITCOIN_LEVELDBWRAPPER_H\n+#ifndef BITCOIN_DBWRAPPER_H\n+#define BITCOIN_DBWRAPPER_H\n \n #include \"clientversion.h\"\n #include \"serialize.h\"\n@@ -17,18 +17,18 @@\n #include <leveldb/db.h>\n #include <leveldb/write_batch.h>\n \n-class leveldb_error : public std::runtime_error\n+class dbwrapper_error : public std::runtime_error\n {\n public:\n-    leveldb_error(const std::string& msg) : std::runtime_error(msg) {}\n+    dbwrapper_error(const std::string& msg) : std::runtime_error(msg) {}\n };\n \n-void HandleError(const leveldb::Status& status) throw(leveldb_error);\n+void HandleError(const leveldb::Status& status) throw(dbwrapper_error);\n \n-/** Batch of changes queued to be written to a CLevelDBWrapper */\n-class CLevelDBBatch\n+/** Batch of changes queued to be written to a CDBWrapper */\n+class CDBBatch\n {\n-    friend class CLevelDBWrapper;\n+    friend class CDBWrapper;\n \n private:\n     leveldb::WriteBatch batch;\n@@ -38,7 +38,7 @@ class CLevelDBBatch\n     /**\n      * @param[in] obfuscate_key    If passed, XOR data with this key.\n      */\n-    CLevelDBBatch(const std::vector<unsigned char> *obfuscate_key) : obfuscate_key(obfuscate_key) { };\n+    CDBBatch(const std::vector<unsigned char> *obfuscate_key) : obfuscate_key(obfuscate_key) { };\n \n     template <typename K, typename V>\n     void Write(const K& key, const V& value)\n@@ -68,8 +68,8 @@ class CLevelDBBatch\n         batch.Delete(slKey);\n     }\n };\n- \n-class CLevelDBIterator\n+\n+class CDBIterator\n {\n private:\n     leveldb::Iterator *piter;\n@@ -81,14 +81,13 @@ class CLevelDBIterator\n      * @param[in] piterIn          The original leveldb iterator.\n      * @param[in] obfuscate_key    If passed, XOR data with this key.\n      */\n-    CLevelDBIterator(leveldb::Iterator *piterIn, const std::vector<unsigned char>* obfuscate_key) :\n+    CDBIterator(leveldb::Iterator *piterIn, const std::vector<unsigned char>* obfuscate_key) :\n         piter(piterIn), obfuscate_key(obfuscate_key) { };\n-    ~CLevelDBIterator();\n+    ~CDBIterator();\n \n     bool Valid();\n \n     void SeekToFirst();\n-    void SeekToLast();\n \n     template<typename K> void Seek(const K& key) {\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -99,7 +98,6 @@ class CLevelDBIterator\n     }\n \n     void Next();\n-    void Prev();\n \n     template<typename K> bool GetKey(K& key) {\n         leveldb::Slice slKey = piter->key();\n@@ -133,8 +131,8 @@ class CLevelDBIterator\n     }\n \n };\n- \n-class CLevelDBWrapper\n+\n+class CDBWrapper\n {\n private:\n     //! custom environment this database is using (may be NULL in case of default environment)\n@@ -163,10 +161,10 @@ class CLevelDBWrapper\n \n     //! the key under which the obfuscation key is stored\n     static const std::string OBFUSCATE_KEY_KEY;\n-    \n+\n     //! the length of the obfuscate key in number of bytes\n     static const unsigned int OBFUSCATE_KEY_NUM_BYTES;\n-    \n+\n     std::vector<unsigned char> CreateObfuscateKey() const;\n \n public:\n@@ -178,11 +176,11 @@ class CLevelDBWrapper\n      * @param[in] obfuscate   If true, store data obfuscated via simple XOR. If false, XOR\n      *                        with a zero'd byte array.\n      */\n-    CLevelDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false, bool obfuscate = false);\n-    ~CLevelDBWrapper();\n+    CDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false, bool obfuscate = false);\n+    ~CDBWrapper();\n \n     template <typename K, typename V>\n-    bool Read(const K& key, V& value) const throw(leveldb_error)\n+    bool Read(const K& key, V& value) const throw(dbwrapper_error)\n     {\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(ssKey.GetSerializeSize(key));\n@@ -208,15 +206,15 @@ class CLevelDBWrapper\n     }\n \n     template <typename K, typename V>\n-    bool Write(const K& key, const V& value, bool fSync = false) throw(leveldb_error)\n+    bool Write(const K& key, const V& value, bool fSync = false) throw(dbwrapper_error)\n     {\n-        CLevelDBBatch batch(&obfuscate_key);\n+        CDBBatch batch(&obfuscate_key);\n         batch.Write(key, value);\n         return WriteBatch(batch, fSync);\n     }\n \n     template <typename K>\n-    bool Exists(const K& key) const throw(leveldb_error)\n+    bool Exists(const K& key) const throw(dbwrapper_error)\n     {\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(ssKey.GetSerializeSize(key));\n@@ -235,30 +233,30 @@ class CLevelDBWrapper\n     }\n \n     template <typename K>\n-    bool Erase(const K& key, bool fSync = false) throw(leveldb_error)\n+    bool Erase(const K& key, bool fSync = false) throw(dbwrapper_error)\n     {\n-        CLevelDBBatch batch(&obfuscate_key);\n+        CDBBatch batch(&obfuscate_key);\n         batch.Erase(key);\n         return WriteBatch(batch, fSync);\n     }\n \n-    bool WriteBatch(CLevelDBBatch& batch, bool fSync = false) throw(leveldb_error);\n+    bool WriteBatch(CDBBatch& batch, bool fSync = false) throw(dbwrapper_error);\n \n     // not available for LevelDB; provide for compatibility with BDB\n     bool Flush()\n     {\n         return true;\n     }\n \n-    bool Sync() throw(leveldb_error)\n+    bool Sync() throw(dbwrapper_error)\n     {\n-        CLevelDBBatch batch(&obfuscate_key);\n+        CDBBatch batch(&obfuscate_key);\n         return WriteBatch(batch, true);\n     }\n \n-    CLevelDBIterator *NewIterator() \n+    CDBIterator *NewIterator()\n     {\n-        return new CLevelDBIterator(pdb->NewIterator(iteroptions), &obfuscate_key);\n+        return new CDBIterator(pdb->NewIterator(iteroptions), &obfuscate_key);\n     }\n \n     /**\n@@ -278,5 +276,5 @@ class CLevelDBWrapper\n \n };\n \n-#endif // BITCOIN_LEVELDBWRAPPER_H\n+#endif // BITCOIN_DBWRAPPER_H\n ",
        "previous_filename": "src/leveldbwrapper.h"
      },
      {
        "sha": "8b6b0697ab1d0848c322a48f2ce73d823d910011",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "renamed",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"leveldbwrapper.h\"\n+#include \"dbwrapper.h\"\n #include \"uint256.h\"\n #include \"random.h\"\n #include \"test/test_bitcoin.h\"\n@@ -25,15 +25,15 @@ bool is_null_key(const vector<unsigned char>& key) {\n     return isnull;\n }\n  \n-BOOST_FIXTURE_TEST_SUITE(leveldbwrapper_tests, BasicTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(dbwrapper_tests, BasicTestingSetup)\n                        \n-BOOST_AUTO_TEST_CASE(leveldbwrapper)\n+BOOST_AUTO_TEST_CASE(dbwrapper)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n         path ph = temp_directory_path() / unique_path();\n-        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n         char key = 'k';\n         uint256 in = GetRandHash();\n         uint256 res;\n@@ -48,13 +48,13 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper)\n }\n \n // Test batch operations\n-BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n+BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n         path ph = temp_directory_path() / unique_path();\n-        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         char key = 'i';\n         uint256 in = GetRandHash();\n@@ -64,7 +64,7 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n         uint256 in3 = GetRandHash();\n \n         uint256 res;\n-        CLevelDBBatch batch(&dbw.GetObfuscateKey());\n+        CDBBatch batch(&dbw.GetObfuscateKey());\n \n         batch.Write(key, in);\n         batch.Write(key2, in2);\n@@ -85,13 +85,13 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper_batch)\n     }\n }\n \n-BOOST_AUTO_TEST_CASE(leveldbwrapper_iterator)\n+BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n         path ph = temp_directory_path() / unique_path();\n-        CLevelDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         // The two keys are intentionally chosen for ordering\n         char key = 'j';\n@@ -101,7 +101,7 @@ BOOST_AUTO_TEST_CASE(leveldbwrapper_iterator)\n         uint256 in2 = GetRandHash();\n         BOOST_CHECK(dbw.Write(key2, in2));\n \n-        boost::scoped_ptr<CLevelDBIterator> it(const_cast<CLevelDBWrapper*>(&dbw)->NewIterator());\n+        boost::scoped_ptr<CDBIterator> it(const_cast<CDBWrapper*>(&dbw)->NewIterator());\n \n         // Be sure to seek past the obfuscation key (if it exists)\n         it->Seek(key);\n@@ -134,7 +134,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n-    CLevelDBWrapper* dbw = new CLevelDBWrapper(ph, (1 << 10), false, false, false);\n+    CDBWrapper* dbw = new CDBWrapper(ph, (1 << 10), false, false, false);\n     char key = 'k';\n     uint256 in = GetRandHash();\n     uint256 res;\n@@ -147,7 +147,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n     delete dbw;\n \n     // Now, set up another wrapper that wants to obfuscate the same directory\n-    CLevelDBWrapper odbw(ph, (1 << 10), false, false, true);\n+    CDBWrapper odbw(ph, (1 << 10), false, false, true);\n \n     // Check that the key/val we wrote with unobfuscated wrapper exists and \n     // is readable.\n@@ -175,7 +175,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n-    CLevelDBWrapper* dbw = new CLevelDBWrapper(ph, (1 << 10), false, false, false);\n+    CDBWrapper* dbw = new CDBWrapper(ph, (1 << 10), false, false, false);\n     char key = 'k';\n     uint256 in = GetRandHash();\n     uint256 res;\n@@ -188,7 +188,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n     delete dbw;\n \n     // Simulate a -reindex by wiping the existing data store\n-    CLevelDBWrapper odbw(ph, (1 << 10), false, true, true);\n+    CDBWrapper odbw(ph, (1 << 10), false, true, true);\n \n     // Check that the key/val we wrote with unobfuscated wrapper doesn't exist\n     uint256 res2;",
        "previous_filename": "src/test/leveldbwrapper_tests.cpp"
      },
      {
        "sha": "f0868a1ebfbde4c978955eac581572a2f533b47f",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "patch": "@@ -49,7 +49,7 @@ uint256 CCoinsViewDB::GetBestBlock() const {\n }\n \n bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n-    CLevelDBBatch batch(&db.GetObfuscateKey());\n+    CDBBatch batch(&db.GetObfuscateKey());\n     size_t count = 0;\n     size_t changed = 0;\n     for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end();) {\n@@ -71,7 +71,7 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) {\n     return db.WriteBatch(batch);\n }\n \n-CBlockTreeDB::CBlockTreeDB(size_t nCacheSize, bool fMemory, bool fWipe) : CLevelDBWrapper(GetDataDir() / \"blocks\" / \"index\", nCacheSize, fMemory, fWipe) {\n+CBlockTreeDB::CBlockTreeDB(size_t nCacheSize, bool fMemory, bool fWipe) : CDBWrapper(GetDataDir() / \"blocks\" / \"index\", nCacheSize, fMemory, fWipe) {\n }\n \n bool CBlockTreeDB::ReadBlockFileInfo(int nFile, CBlockFileInfo &info) {\n@@ -98,7 +98,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n     /* It seems that there are no \"const iterators\" for LevelDB.  Since we\n        only need read operations on it, use a const-cast to get around\n        that restriction.  */\n-    boost::scoped_ptr<CLevelDBIterator> pcursor(const_cast<CLevelDBWrapper*>(&db)->NewIterator());\n+    boost::scoped_ptr<CDBIterator> pcursor(const_cast<CDBWrapper*>(&db)->NewIterator());\n     pcursor->Seek(DB_COINS);\n \n     CHashWriter ss(SER_GETHASH, PROTOCOL_VERSION);\n@@ -141,7 +141,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n }\n \n bool CBlockTreeDB::WriteBatchSync(const std::vector<std::pair<int, const CBlockFileInfo*> >& fileInfo, int nLastFile, const std::vector<const CBlockIndex*>& blockinfo) {\n-    CLevelDBBatch batch(&GetObfuscateKey());\n+    CDBBatch batch(&GetObfuscateKey());\n     for (std::vector<std::pair<int, const CBlockFileInfo*> >::const_iterator it=fileInfo.begin(); it != fileInfo.end(); it++) {\n         batch.Write(make_pair(DB_BLOCK_FILES, it->first), *it->second);\n     }\n@@ -157,7 +157,7 @@ bool CBlockTreeDB::ReadTxIndex(const uint256 &txid, CDiskTxPos &pos) {\n }\n \n bool CBlockTreeDB::WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos> >&vect) {\n-    CLevelDBBatch batch(&GetObfuscateKey());\n+    CDBBatch batch(&GetObfuscateKey());\n     for (std::vector<std::pair<uint256,CDiskTxPos> >::const_iterator it=vect.begin(); it!=vect.end(); it++)\n         batch.Write(make_pair(DB_TXINDEX, it->first), it->second);\n     return WriteBatch(batch);\n@@ -177,7 +177,7 @@ bool CBlockTreeDB::ReadFlag(const std::string &name, bool &fValue) {\n \n bool CBlockTreeDB::LoadBlockIndexGuts()\n {\n-    boost::scoped_ptr<CLevelDBIterator> pcursor(NewIterator());\n+    boost::scoped_ptr<CDBIterator> pcursor(NewIterator());\n \n     pcursor->Seek(make_pair(DB_BLOCK_INDEX, uint256()));\n "
      },
      {
        "sha": "586ab55d0d5501754a7f25d021705b33307454a8",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46f74379b86be982b121bcb8c3cfe07fa80bffd0/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "patch": "@@ -7,7 +7,7 @@\n #define BITCOIN_TXDB_H\n \n #include \"coins.h\"\n-#include \"leveldbwrapper.h\"\n+#include \"dbwrapper.h\"\n \n #include <map>\n #include <string>\n@@ -26,11 +26,11 @@ static const int64_t nMaxDbCache = sizeof(void*) > 4 ? 16384 : 1024;\n //! min. -dbcache in (MiB)\n static const int64_t nMinDbCache = 4;\n \n-/** CCoinsView backed by the LevelDB coin database (chainstate/) */\n+/** CCoinsView backed by the coin database (chainstate/) */\n class CCoinsViewDB : public CCoinsView\n {\n protected:\n-    CLevelDBWrapper db;\n+    CDBWrapper db;\n public:\n     CCoinsViewDB(size_t nCacheSize, bool fMemory = false, bool fWipe = false);\n \n@@ -42,7 +42,7 @@ class CCoinsViewDB : public CCoinsView\n };\n \n /** Access to the block database (blocks/index/) */\n-class CBlockTreeDB : public CLevelDBWrapper\n+class CBlockTreeDB : public CDBWrapper\n {\n public:\n     CBlockTreeDB(size_t nCacheSize, bool fMemory = false, bool fWipe = false);"
      }
    ]
  },
  {
    "sha": "9d55050773d57c0e12005e524f2e54d9e622c6e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDU1MDUwNzczZDU3YzBlMTIwMDVlNTI0ZjJlNTRkOWU2MjJjNmUy",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2015-06-03T19:55:45Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2015-10-23T16:02:24Z"
      },
      "message": "Add rules--presently disabled--for using GetMedianTimePast as endpoint for lock-time calculations\n\nThe lock-time code currently uses CBlock::nTime as the cutoff point for time based locked transactions. This has the unfortunate outcome of creating a perverse incentive for miners to lie about the time of a block in order to collect more fees by including transactions that by wall clock determination have not yet matured. By using CBlockIndex::GetMedianTimePast from the prior block instead, the self-interested miner no longer gains from generating blocks with fraudulent timestamps. Users can compensate for this change by simply adding an hour (3600 seconds) to their time-based lock times.\n\nIf enforced, this would be a soft-fork change. This commit only adds the functionality on an unexecuted code path, without changing the behaviour of Bitcoin Core.",
      "tree": {
        "sha": "5e07889ff64f153d39b0a4b06d5e2ac29621153f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e07889ff64f153d39b0a4b06d5e2ac29621153f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d55050773d57c0e12005e524f2e54d9e622c6e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d55050773d57c0e12005e524f2e54d9e622c6e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d55050773d57c0e12005e524f2e54d9e622c6e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d55050773d57c0e12005e524f2e54d9e622c6e2/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46f74379b86be982b121bcb8c3cfe07fa80bffd0"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 54,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6d6ce7e0998e9248b65f4ee7fb47bb36216ed76a",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=9d55050773d57c0e12005e524f2e54d9e622c6e2",
        "patch": "@@ -13,4 +13,10 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n+/** Flags for LockTime() */\n+enum {\n+    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n+    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n+};\n+\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "499f2c3f767b65f9c282043727ba24f5635eacf1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 5,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9d55050773d57c0e12005e524f2e54d9e622c6e2",
        "patch": "@@ -650,10 +650,35 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n     return true;\n }\n \n-bool CheckFinalTx(const CTransaction &tx)\n+bool CheckFinalTx(const CTransaction &tx, int flags)\n {\n     AssertLockHeld(cs_main);\n-    return IsFinalTx(tx, chainActive.Height() + 1, GetAdjustedTime());\n+\n+    // By convention a negative value for flags indicates that the\n+    // current network-enforced consensus rules should be used. In\n+    // a future soft-fork scenario that would mean checking which\n+    // rules would be enforced for the next block and setting the\n+    // appropriate flags. At the present time no soft-forks are\n+    // scheduled, so no flags are set.\n+    flags = std::max(flags, 0);\n+\n+    // CheckFinalTx() uses chainActive.Height()+1 to evaluate\n+    // nLockTime because when IsFinalTx() is called within\n+    // CBlock::AcceptBlock(), the height of the block *being*\n+    // evaluated is what is used. Thus if we want to know if a\n+    // transaction can be part of the *next* block, we need to call\n+    // IsFinalTx() with one more than chainActive.Height().\n+    const int nBlockHeight = chainActive.Height() + 1;\n+\n+    // Timestamps on the other hand don't get any special treatment,\n+    // because we can't know what timestamp the next block will have,\n+    // and there aren't timestamp applications where it matters.\n+    // However this changes once median past time-locks are enforced:\n+    const int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n+                             ? chainActive.Tip()->GetMedianTimePast()\n+                             : GetAdjustedTime();\n+\n+    return IsFinalTx(tx, nBlockHeight, nBlockTime);\n }\n \n unsigned int GetLegacySigOpCount(const CTransaction& tx)\n@@ -797,7 +822,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     // Only accept nLockTime-using transactions that can be mined in the next\n     // block; we don't want our mempool filled up with transactions that can't\n     // be mined yet.\n-    if (!CheckFinalTx(tx))\n+    if (!CheckFinalTx(tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.DoS(0, false, REJECT_NONSTANDARD, \"non-final\");\n \n     // is it already in the memory pool?\n@@ -2723,10 +2748,15 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n-        if (!IsFinalTx(tx, nHeight, block.GetBlockTime())) {\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n+        int nLockTimeFlags = 0;\n+        int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n+                                ? pindexPrev->GetMedianTimePast()\n+                                : block.GetBlockTime();\n+        if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n             return state.DoS(10, error(\"%s: contains a non-final transaction\", __func__), REJECT_INVALID, \"bad-txns-nonfinal\");\n         }\n+    }\n \n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n     // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):"
      },
      {
        "sha": "65732d770f8811d9143764f9bf39f319002e3ab3",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=9d55050773d57c0e12005e524f2e54d9e622c6e2",
        "patch": "@@ -308,8 +308,10 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n  * Check if transaction will be final in the next block to be created.\n  *\n  * Calls IsFinalTx() with current block height and appropriate block time.\n+ *\n+ * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckFinalTx(const CTransaction &tx);\n+bool CheckFinalTx(const CTransaction &tx, int flags = -1);\n \n /** \n  * Closure representing one script verification"
      },
      {
        "sha": "053d9cdbc4ecca4fb22f747fb3d2551206f64d3b",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=9d55050773d57c0e12005e524f2e54d9e622c6e2",
        "patch": "@@ -148,6 +148,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n+        const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n         CCoinsViewCache view(pcoinsTip);\n \n         // Priority order to process transactions\n@@ -162,7 +163,12 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n              mi != mempool.mapTx.end(); ++mi)\n         {\n             const CTransaction& tx = mi->GetTx();\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n+\n+            int64_t nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n+                                    ? nMedianTimePast\n+                                    : pblock->GetBlockTime();\n+\n+            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, nLockTimeCutoff))\n                 continue;\n \n             COrphan* porphan = NULL;"
      },
      {
        "sha": "cfe6a4052675fb4c2f6cd4b2ae7b50cf2bd1c5c0",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d55050773d57c0e12005e524f2e54d9e622c6e2/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=9d55050773d57c0e12005e524f2e54d9e622c6e2",
        "patch": "@@ -43,6 +43,9 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n+/** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n+static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = 0;\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**\n      * Check for standard transaction types"
      }
    ]
  },
  {
    "sha": "dea8d21fc63e9f442299c97010e4740558f4f037",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZWE4ZDIxZmM2M2U5ZjQ0MjI5OWM5NzAxMGU0NzQwNTU4ZjRmMDM3",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2015-06-03T22:01:47Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2015-10-23T16:02:24Z"
      },
      "message": "Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\n\nTransactions are not allowed in the memory pool or selected for inclusion in a block until their lock times exceed chainActive.Tip()->GetMedianTimePast(). However blocks including transactions which are only mature under the old rules are still accepted; this is *not* the soft-fork required to actually rely on the new constraint in production.",
      "tree": {
        "sha": "a8a524a4a9f925d263400720a34cbfe4edd4b218",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8a524a4a9f925d263400720a34cbfe4edd4b218"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dea8d21fc63e9f442299c97010e4740558f4f037",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea8d21fc63e9f442299c97010e4740558f4f037",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dea8d21fc63e9f442299c97010e4740558f4f037",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea8d21fc63e9f442299c97010e4740558f4f037/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d55050773d57c0e12005e524f2e54d9e622c6e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d55050773d57c0e12005e524f2e54d9e622c6e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d55050773d57c0e12005e524f2e54d9e622c6e2"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "7027f1402f41a634a51c041f669fb1e21810384f",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dea8d21fc63e9f442299c97010e4740558f4f037/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dea8d21fc63e9f442299c97010e4740558f4f037/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=dea8d21fc63e9f442299c97010e4740558f4f037",
        "patch": "@@ -44,7 +44,7 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n /** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n-static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = 0;\n+static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_MEDIAN_TIME_PAST;\n \n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**"
      },
      {
        "sha": "827525783a36913a3d241804d4f746243032f84c",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dea8d21fc63e9f442299c97010e4740558f4f037/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dea8d21fc63e9f442299c97010e4740558f4f037/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=dea8d21fc63e9f442299c97010e4740558f4f037",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"chainparams.h\"\n #include \"coins.h\"\n+#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -229,7 +230,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.nLockTime = chainActive.Tip()->nHeight+1;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx));\n+    BOOST_CHECK(!CheckFinalTx(tx, LOCKTIME_MEDIAN_TIME_PAST));\n \n     // time locked\n     tx2.vin.resize(1);\n@@ -243,7 +244,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx2.nLockTime = chainActive.Tip()->GetMedianTimePast()+1;\n     hash = tx2.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx2, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx2));\n+    BOOST_CHECK(!CheckFinalTx(tx2, LOCKTIME_MEDIAN_TIME_PAST));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n \n@@ -261,7 +262,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     //BOOST_CHECK(CheckFinalTx(tx2));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n-    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 3);\n+    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 2);\n     delete pblocktemplate;\n \n     chainActive.Tip()->nHeight--;"
      }
    ]
  },
  {
    "sha": "4d2a926cb40995e483846cc125e42bdbcc1f5918",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDJhOTI2Y2I0MDk5NWU0ODM4NDZjYzEyNWU0MmJkYmNjMWY1OTE4",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-05-27T23:28:39Z"
      },
      "committer": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-23T20:08:07Z"
      },
      "message": "Ignore coverage data related and temporary test files",
      "tree": {
        "sha": "dfb073df5df66c413feb9c6cd197d51d890996d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfb073df5df66c413feb9c6cd197d51d890996d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d2a926cb40995e483846cc125e42bdbcc1f5918",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWKpO7AAoJEHZ14xz1cZgyl90P/iOm/jmhOSMCjCBjGSxIvkwm\nY2DKu7lERUJlXhjpCTpV3ctyp5e554z9/t9vX+OniPYOypwKsn0bj1JbplHEIYmA\nG3t+RItu9eF+77ofpnHvHQ8UDLRGiBLKSTV6Hy/CRzPrDbkrGc7gPjP1Qp2fg80p\nBDE6CN+cHL5t/2nDO988r3nHN7FqpUyY+EqLvfrx4uXRrqMsc0yeg3oPZk7wnBYL\nKMAvtDFwJ3r6oVT6oJdSWYQDbkT60fZrn+Hf/yQfzhZdTJqt4FU2jzuAJTVdOqFF\nh4iUHxZgpS9YlMhY8f/A1qgJiVnnir9J5rlBGtB7S2EZUEhCTNA92xxbMghBR1G1\nNmJQEHB+Wcq7NXyK4asQjzREnq2FLXNsLUCMhwrRfHBjEEacrQO3S/c5GKpQ4vWi\n6VCb6Nve6LmFBflJD+PASYPRl4N0CTDxOtUDGNz8M0blQYRAkdj969DST2rFRwlr\n0mEK1VOSem9WL2iH5/HQ0CAsBgdNthOHrHIl1beqkFME3I7dr61TfwFxKkLimYcE\nSJtjeZn4E6vDfWK2D/59NYrxBVud/flfFeLn9RfFDX0lA+BRkEK9hAkkkNfrmVXH\nBUoOenXW6N46wTbTj4WAaQBHkv73KpvAL68Fj7fv8fGxRtYhujIgWI48PKKQRyXU\nFpM1HTwVpWCXAjWdOMGS\n=aAsy\n-----END PGP SIGNATURE-----",
        "payload": "tree dfb073df5df66c413feb9c6cd197d51d890996d1\nparent 46f74379b86be982b121bcb8c3cfe07fa80bffd0\nauthor dexX7 <dexx@bitwatch.co> 1432769319 +0200\ncommitter dexX7 <dexx@bitwatch.co> 1445630887 +0200\n\nIgnore coverage data related and temporary test files\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d2a926cb40995e483846cc125e42bdbcc1f5918",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d2a926cb40995e483846cc125e42bdbcc1f5918",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d2a926cb40995e483846cc125e42bdbcc1f5918/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46f74379b86be982b121bcb8c3cfe07fa80bffd0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2b6b19883d3fd859548c292ac7e6cbe4d7bc5ffb",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d2a926cb40995e483846cc125e42bdbcc1f5918/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d2a926cb40995e483846cc125e42bdbcc1f5918/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=4d2a926cb40995e483846cc125e42bdbcc1f5918",
        "patch": "@@ -94,6 +94,7 @@ build\n \n #lcov\n *.gcno\n+*.gcda\n /*.info\n test_bitcoin.coverage/\n total.coverage/\n@@ -107,6 +108,9 @@ qa/pull-tester/run-bitcoind-for-test.sh\n qa/pull-tester/tests_config.py\n qa/pull-tester/cache/*\n qa/pull-tester/test.*/*\n+qa/tmp\n+cache/\n+share/BitcoindComparisonTool.jar\n \n !src/leveldb*/Makefile\n "
      }
    ]
  },
  {
    "sha": "d425877557037b063c5cadcc49ef0582706cff77",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDI1ODc3NTU3MDM3YjA2M2M1Y2FkY2M0OWVmMDU4MjcwNmNmZjc3",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-05-28T00:47:53Z"
      },
      "committer": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-23T20:09:14Z"
      },
      "message": "Remove coverage and test related files, when cleaning up\n\nUntil now there were quite a few leftovers, and only the coverage\nrelated files in `src/` were cleaned, while the ones in the other dirs\nremained. `qa/tmp/` is related to the BitcoinJ tests, and `cache/` is\nrelated to RPC tests.",
      "tree": {
        "sha": "66a92d7cf3a7d538409e7d28670ab98ed8f64553",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66a92d7cf3a7d538409e7d28670ab98ed8f64553"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d425877557037b063c5cadcc49ef0582706cff77",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWKpPqAAoJEHZ14xz1cZgyVWgP/i2djhcrV9J+0guOkXSdv2lV\n4cylmN+F/yL8TTIH883DLf42G2LCrI4yZ9tyAHf9OK71eDCSxnbUqgf5/IBHLyJ4\n7lRQ3VTY6y6OCUkttNt3vkpwygj5INiT/CuRqP4NFP0/rrMbg6Ha4VoUFJqCw+dt\n7TeGFt4JsGuV9zvIJdMdErbEZJhytMcubvN9Vwg+OPPE6cM4va+zAjtY32eH7uc8\nrcPgPrzfPSbsoJSG0dlgc/FYrwGLbqU5LfKNrSvpiUHPeYCRYO4QT6IORT9icB/u\naL2P37oCuVwJ4SxMZgVWlj5wnutsMn8ixhVmOGcr74/q0nC6oiSQ4mSHzOotzdER\nN3RW/RyaWnRnoDJ5x18nphmVjqodJBd7QNp4HcSMznojh4l8hogJRTR1s3/P2xE6\nydszliHIJprPMsmkcIoC1Qjh+jQDKA5dML1w19v4pKAQpJiAS3b7ONNfLfPDJmHS\nnQj/wHwaedGHYW8U9Zy6Lwf3p4NnRjPOfXtG4p+twEzdt1P17PQXVhr5TDfVtNop\nBieXsVRudnL5Xw5UBYWHnkavUoDU+j00Z9PObHTgw3KU6TmW7lvGvH2bOmBGoA2a\nqErg4/OTbme3mAa5RibQNKxT28gUQ3TqhmndP9JTpec11vcbZLDz+0UcecrJhxYt\nHxKQtgGwkl2jqCNSRont\n=85nD\n-----END PGP SIGNATURE-----",
        "payload": "tree 66a92d7cf3a7d538409e7d28670ab98ed8f64553\nparent 4d2a926cb40995e483846cc125e42bdbcc1f5918\nauthor dexX7 <dexx@bitwatch.co> 1432774073 +0200\ncommitter dexX7 <dexx@bitwatch.co> 1445630954 +0200\n\nRemove coverage and test related files, when cleaning up\n\nUntil now there were quite a few leftovers, and only the coverage\nrelated files in `src/` were cleaned, while the ones in the other dirs\nremained. `qa/tmp/` is related to the BitcoinJ tests, and `cache/` is\nrelated to RPC tests.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d425877557037b063c5cadcc49ef0582706cff77",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d425877557037b063c5cadcc49ef0582706cff77",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d425877557037b063c5cadcc49ef0582706cff77/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d2a926cb40995e483846cc125e42bdbcc1f5918",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d2a926cb40995e483846cc125e42bdbcc1f5918",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d2a926cb40995e483846cc125e42bdbcc1f5918"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 15,
      "deletions": 3
    },
    "files": [
      {
        "sha": "93a768b1c191d354c81f6c01f808f26cc48f338d",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d425877557037b063c5cadcc49ef0582706cff77/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d425877557037b063c5cadcc49ef0582706cff77/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=d425877557037b063c5cadcc49ef0582706cff77",
        "patch": "@@ -211,4 +211,4 @@ CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n .INTERMEDIATE: $(COVERAGE_INFO)\n \n clean-local:\n-\trm -rf test_bitcoin.coverage/ total.coverage/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)"
      },
      {
        "sha": "f35b9dc898143443d2678d30a1d81d47fc68ec1d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d425877557037b063c5cadcc49ef0582706cff77/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d425877557037b063c5cadcc49ef0582706cff77/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d425877557037b063c5cadcc49ef0582706cff77",
        "patch": "@@ -412,7 +412,19 @@ libbitcoinconsensus_la_CPPFLAGS = $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BIT\n endif\n #\n \n-CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n+CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a\n+CLEANFILES += *.gcda *.gcno\n+CLEANFILES += compat/*.gcda compat/*.gcno\n+CLEANFILES += consensus/*.gcda consensus/*.gcno\n+CLEANFILES += crypto/*.gcda crypto/*.gcno\n+CLEANFILES += policy/*.gcda policy/*.gcno\n+CLEANFILES += primitives/*.gcda primitives/*.gcno\n+CLEANFILES += script/*.gcda script/*.gcno\n+CLEANFILES += support/*.gcda support/*.gcno\n+CLEANFILES += univalue/*.gcda univalue/*.gcno\n+CLEANFILES += wallet/*.gcda wallet/*.gcno\n+CLEANFILES += wallet/test/*.gcda wallet/test/*.gcno\n+CLEANFILES += zmq/*.gcda zmq/*.gcno\n \n DISTCLEANFILES = obj/build.h\n \n@@ -422,7 +434,7 @@ clean-local:\n \t-$(MAKE) -C leveldb clean\n \t-$(MAKE) -C secp256k1 clean\n \t-$(MAKE) -C univalue clean\n-\trm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno\n+\t-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno\n \t-rm -f config.h\n \n .rc.o:"
      }
    ]
  },
  {
    "sha": "8e3a27bbbfc8d453877bf6521044c64dfbf64610",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTNhMjdiYmJmYzhkNDUzODc3YmY2NTIxMDQ0YzY0ZGZiZjY0NjEw",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-11T20:05:20Z"
      },
      "committer": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-23T20:09:17Z"
      },
      "message": "Require Python for RPC tests, when using lcov\n\nBecause Python is (going to be) used to run the RPC tests, when\ngathering coverage data with lcov, it is explicitly checked, whether\nPython is really available.",
      "tree": {
        "sha": "05f6baeabb6834656e0f306f2540064f90130fa3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05f6baeabb6834656e0f306f2540064f90130fa3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e3a27bbbfc8d453877bf6521044c64dfbf64610",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWKpPuAAoJEHZ14xz1cZgyP2oP/0ITdMG6goatpSrbumgUI5N6\nDSmQoTHWV8VufbUcrOQukConM+WELeF+nYFI9MqFk6FXumkXWpA9V7Qm4FxfzSU1\nCOFqWej0irgYGMNwUAcF+sjp95Ecx/qG1+BYAPTTzOcWAWOsohEMlbu0OYHxSGUM\nRiE/j8CiAxOrXMPR30ebhPi3n8OmBc0zUHFiXgpc1CMOQl7UsdaHw3BMSjOCG/65\nmCJYBPI3vMnue/kfssKcU/XrgEwXdb622jMbdW749QT44rKoHzqMiCqbUFCe1bzq\nEVuR2KeHbYFClhLCp8R43PgHa/v46+cPC3qJizzJMyDXbNC+JI8kTrI8vN+JJpru\nMEWHLPFBrPsKvV32jTsvKLZPZsIfhr7N7p5JQmQH9t7HBJHRy+xRDEq9JN7yPdDs\nZF/Rws62PgYYJ8wqv4PDVQfGkFqBldOUDQ1nHhXOK0qySf7KLkTwemif+9Bz0nEQ\nijkCHYTSI7a6v6MAdibek6+bWcvcklGwpPcjE7eAaF6e9U8x2JuoAm+11D2CVMxy\nTrB1zh9Kf4cI9XnuQEPEr/5tU/8iogloolUEu7qstKC2lLbwQlE5JQuotu5I0qNq\n+JJvAi/jUDvm77nlKzbqz76CQtCtDm9YaYHuSdgFP9TYAJ/v2O12fAqqOysGs8SK\nAjnsKkQVESUGHgRLfzMk\n=RXIP\n-----END PGP SIGNATURE-----",
        "payload": "tree 05f6baeabb6834656e0f306f2540064f90130fa3\nparent d425877557037b063c5cadcc49ef0582706cff77\nauthor dexX7 <dexx@bitwatch.co> 1444593920 +0200\ncommitter dexX7 <dexx@bitwatch.co> 1445630957 +0200\n\nRequire Python for RPC tests, when using lcov\n\nBecause Python is (going to be) used to run the RPC tests, when\ngathering coverage data with lcov, it is explicitly checked, whether\nPython is really available.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e3a27bbbfc8d453877bf6521044c64dfbf64610",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e3a27bbbfc8d453877bf6521044c64dfbf64610",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e3a27bbbfc8d453877bf6521044c64dfbf64610/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d425877557037b063c5cadcc49ef0582706cff77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d425877557037b063c5cadcc49ef0582706cff77",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d425877557037b063c5cadcc49ef0582706cff77"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "13598acd2f159bd9aa83eb3b088dccdb46bdd2c5",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e3a27bbbfc8d453877bf6521044c64dfbf64610/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e3a27bbbfc8d453877bf6521044c64dfbf64610/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=8e3a27bbbfc8d453877bf6521044c64dfbf64610",
        "patch": "@@ -58,6 +58,7 @@ AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n AC_PATH_PROG(JAVA, java)\n+AC_PATH_PROG(PYTHON, python)\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n AC_PATH_PROG(CCACHE,ccache)\n@@ -351,6 +352,9 @@ if test x$use_lcov = xyes; then\n   if test x$JAVA = x; then\n     AC_MSG_ERROR(\"lcov testing requested but java not found\")\n   fi\n+  if test x$PYTHON = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n+  fi\n   if test x$GENHTML = x; then\n     AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n   fi"
      }
    ]
  },
  {
    "sha": "45d4ff0c2094813e8a1c5446e728449157a289b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NWQ0ZmYwYzIwOTQ4MTNlOGExYzU0NDZlNzI4NDQ5MTU3YTI4OWI4",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-12T12:37:57Z"
      },
      "committer": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-23T20:09:19Z"
      },
      "message": "Add config option to enable extended RPC tests for code coverage\n\nWhen using lcov to gather code coverage data, the configuration option\n`--enable-extended-rpc-tests` may be used to enable extended RPC tests.",
      "tree": {
        "sha": "9f94fc2714ca7d7ea201f9341fa82ecccaee50a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f94fc2714ca7d7ea201f9341fa82ecccaee50a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45d4ff0c2094813e8a1c5446e728449157a289b8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWKpPvAAoJEHZ14xz1cZgydXEP/06sE3WwIWFmG4wseHL+aluZ\nhEYGvEO+Ro6/scaNZ70Q+b15GjKVWwbocpHWu/IuxQvEwI0Zw9LJ2J/QoOLR94VM\nhzjHDk4mVhcv8U+GnOIlF5qo5nik9ECnxdO58r9fiiZnjK7fxGst09eaEOZzN9P+\nl43FkLmjaW5/YZufOMxhy9psOvXFU1Deqyfq/qikv+ZrL5/SE3OnSNDqDa0a7CLl\n8RyG51796KHrattJ6tYUCxwqVyBkpBCw4IKUNEvmqMkQeEpEqvZaxoqCqVT9BJ7I\nu8rPbh2SwwTsYFA350vzq2U6mcqnjBlj6GEKlixUSrspbqO6vkUEJNZsmsz37vUx\n5Deuov8ls1/0+kPbDrEHwbUuMgRlP/F+N2DpOTkQ5lQlG3PusQEXCXqdHYdqI3G/\nTZkRUfH2YlmAs4cOs+MWbvRhaLG7NLUU5krMlP8fDkkF2Tda8+WsWL3mFtxmkQV2\nA5gVjmYm7XqX2315pbefgQbAXsOStKR1dyjzuaVvheLwQGYMDKL0CNTBG1JoLm3x\nvQ+uZ7xcpot9C30O9x3r324a3zHWrX+DetQpPwliKQqnIWBIJTcsDz8UNcw1eZNq\nSG8ICnt4MhxHpu8F7FYfdJHoXcKFhNmdb68OxUbHwIuEnHAB0uo4ytphxG6O+2uX\nE8BAXeuapVS9JSqGwSVv\n=ra9Z\n-----END PGP SIGNATURE-----",
        "payload": "tree 9f94fc2714ca7d7ea201f9341fa82ecccaee50a5\nparent 8e3a27bbbfc8d453877bf6521044c64dfbf64610\nauthor dexX7 <dexx@bitwatch.co> 1444653477 +0200\ncommitter dexX7 <dexx@bitwatch.co> 1445630959 +0200\n\nAdd config option to enable extended RPC tests for code coverage\n\nWhen using lcov to gather code coverage data, the configuration option\n`--enable-extended-rpc-tests` may be used to enable extended RPC tests.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45d4ff0c2094813e8a1c5446e728449157a289b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/45d4ff0c2094813e8a1c5446e728449157a289b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45d4ff0c2094813e8a1c5446e728449157a289b8/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e3a27bbbfc8d453877bf6521044c64dfbf64610",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e3a27bbbfc8d453877bf6521044c64dfbf64610",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e3a27bbbfc8d453877bf6521044c64dfbf64610"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "25ace88f3270cd69ea545fbc853185cdd9178e24",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45d4ff0c2094813e8a1c5446e728449157a289b8/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45d4ff0c2094813e8a1c5446e728449157a289b8/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=45d4ff0c2094813e8a1c5446e728449157a289b8",
        "patch": "@@ -107,6 +107,11 @@ AC_ARG_ENABLE([comparison-tool-reorg-tests],\n     [use_comparison_tool_reorg_tests=$enableval],\n     [use_comparison_tool_reorg_tests=no])\n \n+AC_ARG_ENABLE([extended-rpc-tests],\n+    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n+    [use_extended_rpc_tests=$enableval],\n+    [use_extended_rpc_tests=no])\n+\n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n   [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n@@ -342,6 +347,10 @@ else\n   AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n fi\n \n+if test x$use_extended_rpc_tests != xno; then\n+  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n+fi\n+\n if test x$use_lcov = xyes; then\n   if test x$LCOV = x; then\n     AC_MSG_ERROR(\"lcov testing requested but lcov not found\")"
      }
    ]
  },
  {
    "sha": "e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2I1ZTZjMzljNWE2ZTU2YmRjMjFkMzA3YWM1Y2I2YzgwYjczN2Rk",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-12T12:29:44Z"
      },
      "committer": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-23T20:09:20Z"
      },
      "message": "Run extended BitcoinJ tests for coverage based on config\n\nThe configuration option `--enable-comparison-tool-reorg-tests` may be\nused to enable extended tests via BitcoinJ also for coverage testing.",
      "tree": {
        "sha": "5b7526c264da7733d7e178d36316bfae0aa66cf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b7526c264da7733d7e178d36316bfae0aa66cf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWKpPzAAoJEHZ14xz1cZgyywgP/A/UYekRU+HxzNUfF5mnyi6x\nlEflPJtJw01YRRDugULmXS4ESoWZUdQab5aiyoicMysI7TH4db6u0JqAOLmfnkVB\nGNVOcuvwurLsgYydq4cVyaO3POSQsyFyQk3UoWXqL9XHpYma6hm+Xnjpq4oxU5tG\na+cX+mumwFaDX9ZkvdHq1vlu3YlUi9VGS1wwRgzEQB7ks1ZbDLaMVOCNoc6A1LFl\niFIY94WzqhxqVw+7vhZCM6fEaysU6c29D6MsIZV5WqL9L39sDKGGL5fKXiEehlZw\nCJOSh9e3yU32hD5UXnskzFS98ZUxaUofI5w9O8Tc61Cx3FlCUYh9Q9UY+66AikNe\nN3L5c4pGNviDdgLygvRzqr3D50rgvdcP1xKl77RcwPtZ6ry+WptIQNRKClMhq8aB\n34Ml7YwypFHWO0e8BKtbVXko8VrPumpnki6NmT+0wwkZHArvx0jamfYdN5bDfqIM\nntP4eBF0nHjptCwLwrmlpNRJdq1uXYFSADkMRXWh7P0ypkB0nPMWzQq7cMe0YG1B\nolIRMuVdOtoTW9t9ZkNhN46/L/VKonWJ2++nSZHCdjkVmWq2c3EMYDLZcl1DeT/Q\nXhoQe9S7HcwNSHltctZbeXS90nDbH24lGU6Z4W09YSoZpms7PVR5keSHKEcpvHOR\ndg2bbGAHfrKgXKtrfD4Y\n=Csgf\n-----END PGP SIGNATURE-----",
        "payload": "tree 5b7526c264da7733d7e178d36316bfae0aa66cf1\nparent 45d4ff0c2094813e8a1c5446e728449157a289b8\nauthor dexX7 <dexx@bitwatch.co> 1444652984 +0200\ncommitter dexX7 <dexx@bitwatch.co> 1445630960 +0200\n\nRun extended BitcoinJ tests for coverage based on config\n\nThe configuration option `--enable-comparison-tool-reorg-tests` may be\nused to enable extended tests via BitcoinJ also for coverage testing.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "45d4ff0c2094813e8a1c5446e728449157a289b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45d4ff0c2094813e8a1c5446e728449157a289b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45d4ff0c2094813e8a1c5446e728449157a289b8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8b298619f72b5512b633886a219cb8029b601d56",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd",
        "patch": "@@ -170,7 +170,7 @@ test_bitcoin_filtered.info: test_bitcoin.info\n \n block_test.info: test_bitcoin_filtered.info\n \t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool 0\n+\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n \t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb"
      }
    ]
  },
  {
    "sha": "d80e3cbece857b293a4903ef49c4d543bb2cfb7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODBlM2NiZWNlODU3YjI5M2E0OTAzZWY0OWM0ZDU0M2JiMmNmYjdm",
    "commit": {
      "author": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-11T16:29:42Z"
      },
      "committer": {
        "name": "dexX7",
        "email": "dexx@bitwatch.co",
        "date": "2015-10-23T20:09:24Z"
      },
      "message": "Support gathering of code coverage data for RPC tests\n\nThe RPC tests (via `qa/pull-tester/rpc-tests.py`) are now executed,\nwhen gathering code coverage data, for example with `make cov`.\n\nGenerating coverage data requires `lcov`, which can installed with:\n\n    sudo apt-get install lcov\n\nTo also use the BitcoinJ tests, get the test tool:\n\n    TOOL_URL=https://github.com/theuni/bitcoind-comparisontool/raw/master/pull-tests-8c6666f.jar\n    TOOL_HASH=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n    wget $TOOL_URL -O ./share/BitcoindComparisonTool.jar\n    echo \"$TOOL_HASH  ./share/BitcoindComparisonTool.jar\" | shasum --algorithm 256 --check\n\nThe coverage data can be generated with:\n\n    ./autogen.sh\n    ./configure --enable-lcov --with-comparison-tool=./share/BitcoindComparisonTool.jar\n    make\n    make cov\n\nOptionally the options `--enable-extended-rpc-tests` and\n`--enable-comparison-tool-reorg-tests` may be used to enable more time\nconsuming tests.\n\nIt then runs the tests and generates two HTML reports:\n\n - test_bitcoin.coverage/index.html\n - total.coverage/index.html",
      "tree": {
        "sha": "fd7b4b18ce0f93ee84cbdbc3bd20b5768bba4162",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd7b4b18ce0f93ee84cbdbc3bd20b5768bba4162"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d80e3cbece857b293a4903ef49c4d543bb2cfb7f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWKpP0AAoJEHZ14xz1cZgyu8cP/Ar1s7iRvmP5cOZ5LaOrCTM0\npRBBUbe9YNDmgCI4tOEsx46BZrqDIxdaJosi+rjw74PPlgp8s3y8LsMmpzSdanfY\nRhEVbpgCNYMYgnoszk7hFDvxcJbLhBEYk4X1O8ahIgSa6J+MfVvGVFGX1+cqlSJS\nM1hXzt2M26YH50qtM7+xBuUjAF+3Uok+gHAOqOvsiXGJVd1p1MeYfDQDZn31Vu+R\n6WJOAm3BbwKPoZisGZYPggVQFIPI8GnP3IYTXtYUSsskEhZkR0u0ZOH3LHXuEJZy\ncCIuUlrZ3HSrXYRAI+K3E5XItyAuYjiMmPYrdOPWKu9CcW4x1XbSNk3gtYDIkp9k\nMWeO83Bp/UD+e0dhkLtJtNjIESQb2Hz6XsMGRiq5xy6m6O4PN9f4AznZvAD1D85k\npnuxpbOUXihv3mfFxAQb5o0S39i/UBEfe+HNQS7wBJZZwjfqwNk177TMPQP2shy1\nsvSQovgM6VULki+wBJs+IE3aM/F/FINlIVIxkfc/946QkFunZ3F94hGZhZoOsbm1\nMGqVkTniZEZ7bxg5KT/xqlObHQRZWkuGVS193JBR9WqB4BqFUWV7llWADzIsaqgv\nMZFwtgYfZPzoz39tYdh/piqnGgaPojMg3btFpeVF8zYtb+NOPC8uQVkp7czecsaH\np5qlT4ubwW9UxqUiY4Iy\n=MrRf\n-----END PGP SIGNATURE-----",
        "payload": "tree fd7b4b18ce0f93ee84cbdbc3bd20b5768bba4162\nparent e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd\nauthor dexX7 <dexx@bitwatch.co> 1444580982 +0200\ncommitter dexX7 <dexx@bitwatch.co> 1445630964 +0200\n\nSupport gathering of code coverage data for RPC tests\n\nThe RPC tests (via `qa/pull-tester/rpc-tests.py`) are now executed,\nwhen gathering code coverage data, for example with `make cov`.\n\nGenerating coverage data requires `lcov`, which can installed with:\n\n    sudo apt-get install lcov\n\nTo also use the BitcoinJ tests, get the test tool:\n\n    TOOL_URL=https://github.com/theuni/bitcoind-comparisontool/raw/master/pull-tests-8c6666f.jar\n    TOOL_HASH=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n    wget $TOOL_URL -O ./share/BitcoindComparisonTool.jar\n    echo \"$TOOL_HASH  ./share/BitcoindComparisonTool.jar\" | shasum --algorithm 256 --check\n\nThe coverage data can be generated with:\n\n    ./autogen.sh\n    ./configure --enable-lcov --with-comparison-tool=./share/BitcoindComparisonTool.jar\n    make\n    make cov\n\nOptionally the options `--enable-extended-rpc-tests` and\n`--enable-comparison-tool-reorg-tests` may be used to enable more time\nconsuming tests.\n\nIt then runs the tests and generates two HTML reports:\n\n - test_bitcoin.coverage/index.html\n - total.coverage/index.html\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d80e3cbece857b293a4903ef49c4d543bb2cfb7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d80e3cbece857b293a4903ef49c4d543bb2cfb7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d80e3cbece857b293a4903ef49c4d543bb2cfb7f/comments",
    "author": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3b5e6c39c5a6e56bdc21d307ac5cb6c80b737dd"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f0961c64ec04c697275a02b6cfec6f51b5345315",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d80e3cbece857b293a4903ef49c4d543bb2cfb7f/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d80e3cbece857b293a4903ef49c4d543bb2cfb7f/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=d80e3cbece857b293a4903ef49c4d543bb2cfb7f",
        "patch": "@@ -39,7 +39,7 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) $\n \n COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n   leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info block_test_filtered.info \\\n+  baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n   leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n \n dist-hook:\n@@ -178,11 +178,20 @@ block_test.info: test_bitcoin_filtered.info\n block_test_filtered.info: block_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n+rpc_test.info: test_bitcoin_filtered.info\n+\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+rpc_test_filtered.info: rpc_test.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n \t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n-total_coverage.info:  baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n \t$(GENHTML) -s $< -o $(@D)"
      }
    ]
  },
  {
    "sha": "c939792baaaa5f34ee4079b871d56054e36fb26b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTM5NzkyYmFhYWE1ZjM0ZWU0MDc5Yjg3MWQ1NjA1NGUzNmZiMjZi",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-10-23T20:16:07Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-10-23T20:19:49Z"
      },
      "message": "Add BIP65 CHECKLOCKTIMEVERIFY to release notes",
      "tree": {
        "sha": "1679b42104555e7db0a1e5d2f9e7eb1f37c93894",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1679b42104555e7db0a1e5d2f9e7eb1f37c93894"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c939792baaaa5f34ee4079b871d56054e36fb26b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJWKpZmXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwZmI4NzliZGU0NWJhYjgxYjQ4MTgxYjQ1MWI3NWM2MWM5\nMjhjYjU0MDdiY2E1NjkvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQwIXyHOf0udzN8gf/WoJSQmfU2zFOBVCBZinlPOCi\nfY+hfZodEVw2RSPleDRb5qslqSnVT2FwZ7L08xngCBnzz9AleNurXheyZygVKSjl\nfgWKK2q/heh5c3aWWo3rWZbCGwv6HSnornUVoNBg9chae1yJuO+C/PVWxdEvyr+H\nDIFOWTIzxN8UqqisHmcwX7AsS5Is2uB7goq5GX4rScEO/YmWXJiMJ2QFPl6YxsS5\nmL0/6ytRiUFXk3+BPu0SSL+w89NqcsDstZ8x6fDkL2aAP0CzuFbI1IF9I64mcjpc\nBbblpdt6qsI/tZjCU1mpFgu9KFtSSDk3U92svI0oS/5BoVaxU6TfKJd2bBp1Bw==\n=IDWL\n-----END PGP SIGNATURE-----",
        "payload": "tree 1679b42104555e7db0a1e5d2f9e7eb1f37c93894\nparent 46f74379b86be982b121bcb8c3cfe07fa80bffd0\nauthor Peter Todd <pete@petertodd.org> 1445631367 -0400\ncommitter Peter Todd <pete@petertodd.org> 1445631589 -0400\n\nAdd BIP65 CHECKLOCKTIMEVERIFY to release notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c939792baaaa5f34ee4079b871d56054e36fb26b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c939792baaaa5f34ee4079b871d56054e36fb26b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c939792baaaa5f34ee4079b871d56054e36fb26b/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46f74379b86be982b121bcb8c3cfe07fa80bffd0"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fd034743e62151cac5383044f59b1ec82f87f2d1",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c939792baaaa5f34ee4079b871d56054e36fb26b/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c939792baaaa5f34ee4079b871d56054e36fb26b/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=c939792baaaa5f34ee4079b871d56054e36fb26b",
        "patch": "@@ -124,6 +124,33 @@ sanity check. Since 0.12, these are no longer stored. When loading a\n 0.12 wallet into an older version, it will automatically rescan to avoid\n failed checks.\n \n+BIP65 - CHECKLOCKTIMEVERIFY\n+---------------------------\n+\n+Previously it was impossible to create a transaction output that was guaranteed\n+to be unspendable until a specific date in the future. CHECKLOCKTIMEVERIFY is a\n+new opcode that allows a script to check if a specific block height or time has\n+been reached, failing the script otherwise. This enables a wide variety of new\n+functionality such as time-locked escrows, secure payment channels, etc.\n+\n+BIP65 implements CHECKLOCKTIMEVERIFY by introducing block version 4, which adds\n+additional restrictions to the NOP2 opcode. The same miner-voting mechanism as\n+in BIP34 and BIP66 is used: when 751 out of a sequence of 1001 blocks have\n+version number 4 or higher, the new consensus rule becomes active for those\n+blocks. When 951 out of a sequence of 1001 blocks have version number 4 or\n+higher, it becomes mandatory for all blocks and blocks with versions less than\n+4 are rejected.\n+\n+Bitcoin Core's block templates are now for version 4 blocks only, and any\n+mining software relying on its `getblocktemplate` must be updated in parallel\n+to use either libblkmaker version FIXME or any version from 0.5.1 onward. If\n+you are solo mining, this will affect you the moment you upgrade Bitcoin Core,\n+which must be done prior to BIP65 achieving its 951/1001 status.  If you are\n+mining with the stratum mining protocol: this does not affect you.  If you are\n+mining with the getblocktemplate protocol to a pool: this will affect you at\n+the pool operator's discretion, which must be no later than BIP65 achieving its\n+951/1001 status.\n+\n 0.12.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "e04b0b6b835483e7052a24b0224a6023e233d049",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDRiMGI2YjgzNTQ4M2U3MDUyYTI0YjAyMjRhNjAyM2UyMzNkMDQ5",
    "commit": {
      "author": {
        "name": "Kevin Cooper",
        "email": "k.coopr@gmail.com",
        "date": "2015-10-25T01:28:02Z"
      },
      "committer": {
        "name": "Kevin Cooper",
        "email": "k.coopr@gmail.com",
        "date": "2015-10-25T01:28:02Z"
      },
      "message": "added OS X documentation to doc/init.md",
      "tree": {
        "sha": "111020a09344c4eaceea0be1eca50fab61992379",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/111020a09344c4eaceea0be1eca50fab61992379"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e04b0b6b835483e7052a24b0224a6023e233d049",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04b0b6b835483e7052a24b0224a6023e233d049",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e04b0b6b835483e7052a24b0224a6023e233d049",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04b0b6b835483e7052a24b0224a6023e233d049/comments",
    "author": {
      "login": "kevcooper",
      "id": 6468064,
      "node_id": "MDQ6VXNlcjY0NjgwNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6468064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevcooper",
      "html_url": "https://github.com/kevcooper",
      "followers_url": "https://api.github.com/users/kevcooper/followers",
      "following_url": "https://api.github.com/users/kevcooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevcooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevcooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevcooper/subscriptions",
      "organizations_url": "https://api.github.com/users/kevcooper/orgs",
      "repos_url": "https://api.github.com/users/kevcooper/repos",
      "events_url": "https://api.github.com/users/kevcooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevcooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kevcooper",
      "id": 6468064,
      "node_id": "MDQ6VXNlcjY0NjgwNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6468064?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevcooper",
      "html_url": "https://github.com/kevcooper",
      "followers_url": "https://api.github.com/users/kevcooper/followers",
      "following_url": "https://api.github.com/users/kevcooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevcooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevcooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevcooper/subscriptions",
      "organizations_url": "https://api.github.com/users/kevcooper/orgs",
      "repos_url": "https://api.github.com/users/kevcooper/repos",
      "events_url": "https://api.github.com/users/kevcooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevcooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4aa54c5af925bd0ed81c7a9ffab457149e5d682",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4aa54c5af925bd0ed81c7a9ffab457149e5d682",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4aa54c5af925bd0ed81c7a9ffab457149e5d682"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 22,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1bbfed4380136bf632c9b60d39270f9cb851b44f",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e04b0b6b835483e7052a24b0224a6023e233d049/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e04b0b6b835483e7052a24b0224a6023e233d049/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=e04b0b6b835483e7052a24b0224a6023e233d049",
        "patch": "@@ -13,8 +13,9 @@ can be found in the contrib/init folder.\n 1. Service User\n ---------------------------------\n \n-All three startup configurations assume the existence of a \"bitcoin\" user\n+All three Linux startup configurations assume the existence of a \"bitcoin\" user\n and group.  They must be created before attempting to use these scripts.\n+The OS X configuration assumes bitcoind will be set up for the current user.\n \n 2. Configuration\n ---------------------------------\n@@ -48,6 +49,8 @@ see `contrib/debian/examples/bitcoin.conf`.\n 3. Paths\n ---------------------------------\n \n+3a) Linux\n+\n All three configurations assume several paths that might need to be adjusted.\n \n Binary:              `/usr/bin/bitcoind`  \n@@ -62,6 +65,13 @@ reasons to make the configuration file and data directory only readable by the\n bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n can then be controlled by group membership.\n \n+3b) Mac OS X\n+\n+Binary:              `/usr/local/bin/bitcoind`  \n+Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n+Data directory:      `~/Library/Application Support/Bitcoin`\n+Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+\n 4. Installing Service Configuration\n -----------------------------------\n \n@@ -97,6 +107,17 @@ Using this script, you can adjust the path and flags to the bitcoind program by\n setting the BITCOIND and FLAGS environment variables in the file \n /etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n \n+4e) Mac OS X\n+\n+Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n+running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n+\n+This Launch Agent will cause bitcoind to start whenever the user logs in.\n+\n+NOTE: This approach is intended for those wanting to run bitcoind as the current user.\n+You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n+Launch Daemon with a dedicated bitcoin user.\n+\n 5. Auto-respawn\n -----------------------------------\n "
      }
    ]
  },
  {
    "sha": "143d17396906835c3a3ccd59e202f5327c05f63f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDNkMTczOTY5MDY4MzVjM2EzY2NkNTllMjAyZjUzMjdjMDVmNjNm",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2015-10-25T08:19:21Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2015-10-25T09:47:02Z"
      },
      "message": "Use BOOST_CHECK_MESSAGE() rather than BOOST_CHECK() in alerts_tests.cpp and initialize strMiscWarning before calling PartitionCheck().\"",
      "tree": {
        "sha": "bbc1c03c6d4af8563f1ee3cdacf04991b70ccfe1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bbc1c03c6d4af8563f1ee3cdacf04991b70ccfe1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/143d17396906835c3a3ccd59e202f5327c05f63f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/143d17396906835c3a3ccd59e202f5327c05f63f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/143d17396906835c3a3ccd59e202f5327c05f63f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/143d17396906835c3a3ccd59e202f5327c05f63f/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46f74379b86be982b121bcb8c3cfe07fa80bffd0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "468eda1c9bbee675d1be6186e7a218966a6bc4e3",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/143d17396906835c3a3ccd59e202f5327c05f63f/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/143d17396906835c3a3ccd59e202f5327c05f63f/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=143d17396906835c3a3ccd59e202f5327c05f63f",
        "patch": "@@ -217,10 +217,12 @@ BOOST_AUTO_TEST_CASE(PartitionAlert)\n         // use them\n     }\n \n+    strMiscWarning = \"\";\n+\n     // Test 1: chain with blocks every nPowTargetSpacing seconds,\n     // as normal, no worries:\n     PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n-    BOOST_CHECK(strMiscWarning.empty());\n+    BOOST_CHECK_MESSAGE(strMiscWarning.empty(), strMiscWarning);\n \n     // Test 2: go 3.5 hours without a block, expect a warning:\n     now += 3*60*60+30*60;"
      }
    ]
  },
  {
    "sha": "ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZWIyYTljM2UxOTBhODUyNDgyYzBkMmE4YThmZThjZjYxOTdkNzAx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T11:53:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T07:05:43Z"
      },
      "message": "doc: mention BIP65 softfork in bips.md",
      "tree": {
        "sha": "ec496fb27a9178cfb9790f89f4a8a767e567e105",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec496fb27a9178cfb9790f89f4a8a767e567e105"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a1090d4f55c307ddf50639cdedf329de1f5a02a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a1090d4f55c307ddf50639cdedf329de1f5a02a"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c780e2dde05ff38ff7a5ad0dc82879f59ba11caf",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701",
        "patch": "@@ -14,6 +14,7 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.12.0**):\n * [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)).\n * [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n+* [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579))."
      }
    ]
  },
  {
    "sha": "450893769f7af89fa985c02a8723be43176e60b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTA4OTM3NjlmN2FmODlmYTk4NWMwMmE4NzIzYmU0MzE3NmU2MGIy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T07:06:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T07:06:19Z"
      },
      "message": "Merge pull request #6879\n\nceb2a9c doc: mention BIP65 softfork in bips.md (Wladimir J. van der Laan)",
      "tree": {
        "sha": "038240b93ae322b0036ef9d84cce4a65422ea1a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/038240b93ae322b0036ef9d84cce4a65422ea1a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/450893769f7af89fa985c02a8723be43176e60b2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLdDrAAoJEHSBCwEjRsmmgnQIAJHNLO6XBuOj8yIZVhof7SfG\n7hdH4VoZYuLQRYFtyMqn6yr2GX3vX7voJ+W8dfAlA4qs35wzf/Lqj0GAHL5+FEIu\nAWxXidslHCZE4w1ghxqQ4pu6yRbQIaSbuv0MEteWZ8W2Alv0vmyObe3CmEBVW/dQ\nCemBJ0JVfoSbcD1f0jt0rKXBVT3Kdo9aQ7+G9Q7e1kG/elG27tfaBrkDvJLcZ4+B\nB7jtOsnAM0ddIaOg3huA0lPl3h4hm8FL6MP8EfwtkHlsHZvS0xN+GHNEyMrKQai7\nylGiwS5CraRjMKF9uLI0DmC7pSBZKEgFy6DAPpUW/AuRhvzuD1lYyR8tF1iSETU=\n=Bocr\n-----END PGP SIGNATURE-----",
        "payload": "tree 038240b93ae322b0036ef9d84cce4a65422ea1a8\nparent 46f74379b86be982b121bcb8c3cfe07fa80bffd0\nparent ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445843172 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445843179 +0100\n\nMerge pull request #6879\n\nceb2a9c doc: mention BIP65 softfork in bips.md (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/450893769f7af89fa985c02a8723be43176e60b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/450893769f7af89fa985c02a8723be43176e60b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/450893769f7af89fa985c02a8723be43176e60b2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46f74379b86be982b121bcb8c3cfe07fa80bffd0"
      },
      {
        "sha": "ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ceb2a9c3e190a852482c0d2a8a8fe8cf6197d701"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c780e2dde05ff38ff7a5ad0dc82879f59ba11caf",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/450893769f7af89fa985c02a8723be43176e60b2/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/450893769f7af89fa985c02a8723be43176e60b2/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=450893769f7af89fa985c02a8723be43176e60b2",
        "patch": "@@ -14,6 +14,7 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.12.0**):\n * [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)).\n * [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n+* [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, but only enforced for peer versions `>=70011` as of **v0.12.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579))."
      }
    ]
  },
  {
    "sha": "867d6c90b85070644c3458e3e7ed168765523361",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjdkNmM5MGI4NTA3MDY0NGMzNDU4ZTNlN2VkMTY4NzY1NTIzMzYx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T07:20:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T07:21:03Z"
      },
      "message": "Merge pull request #6878\n\ndca7bd3 doc: Add developer notes about gitignore (Wladimir J. van der Laan)",
      "tree": {
        "sha": "983a507c7b64d16dec06cfb3b6c77906ac2dc5f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/983a507c7b64d16dec06cfb3b6c77906ac2dc5f3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/867d6c90b85070644c3458e3e7ed168765523361",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLdRfAAoJEHSBCwEjRsmmyg4H/3gUWNtuq4W65zx7gQQPfVyI\nvS0FtdcGRiZxav6mFSauBzKYbhVsvikB2TX/8+4ULeTzuc5BXt750BlsN+GHi+bq\nVm83KLlOlCG+QtQLsWkDvabDuczIdwCBIZ2EDD50apc3WVgn54+UEO9XTVwxlBVV\n8k8YFvyJIkuNKz+0o7aCzlwfJZjv/Czeh4zi9OnHV0Jb5AXU14HKLI6ta+VfAF5W\nxJHjXN8i8mafPFlbxxp9ID1aXrKlqXkuXUk5tvyDTdBrKMqFTKY5+mdrjOBPNyNd\nkJIxfNeQLoTTbwQz2KOYxhT3DlhZWOfmJAnxkpiv2dc/E3V+rrsmAZYnT2V01xs=\n=wJ//\n-----END PGP SIGNATURE-----",
        "payload": "tree 983a507c7b64d16dec06cfb3b6c77906ac2dc5f3\nparent 450893769f7af89fa985c02a8723be43176e60b2\nparent dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445844032 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445844063 +0100\n\nMerge pull request #6878\n\ndca7bd3 doc: Add developer notes about gitignore (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/867d6c90b85070644c3458e3e7ed168765523361",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/867d6c90b85070644c3458e3e7ed168765523361",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/867d6c90b85070644c3458e3e7ed168765523361/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "450893769f7af89fa985c02a8723be43176e60b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/450893769f7af89fa985c02a8723be43176e60b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/450893769f7af89fa985c02a8723be43176e60b2"
      },
      {
        "sha": "dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dca7bd3152c5c21aa0a2b14aa09d4045ae51dcc5"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 33,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8ad862d84ccd4dcd2e81afbf12a793667b6bbc07",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/867d6c90b85070644c3458e3e7ed168765523361/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/867d6c90b85070644c3458e3e7ed168765523361/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=867d6c90b85070644c3458e3e7ed168765523361",
        "patch": "@@ -85,9 +85,6 @@ src/test/buildenv.py\n # Resources cpp\n qrc_*.cpp\n \n-# Qt creator\n-*.pro.user\n-\n # Mac specific\n .DS_Store\n build"
      },
      {
        "sha": "7fe292f1f8549ab6ddfdfdf2959c87c536a12375",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/867d6c90b85070644c3458e3e7ed168765523361/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/867d6c90b85070644c3458e3e7ed168765523361/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=867d6c90b85070644c3458e3e7ed168765523361",
        "patch": "@@ -171,3 +171,36 @@ Threads\n - BitcoinMiner : Generates bitcoins (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n+\n+Ignoring IDE/editor files\n+--------------------------\n+\n+In closed-source environments in which everyone uses the same IDE it is common\n+to add temporary files it produces to the project-wide `.gitignore` file.\n+\n+However, in open source software such as Bitcoin Core, where everyone uses\n+their own editors/IDE/tools, it is less common. Only you know what files your\n+editor produces and this may change from version to version. The canonical way\n+to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n+\n+```\n+[core]\n+        excludesfile = /home/.../.gitignore_global\n+```\n+\n+(alternatively, type the command `git config --global core.excludesfile ~/.gitignore_global`\n+on a terminal)\n+\n+Then put your favourite tool's temporary filenames in that file, e.g.\n+```\n+# NetBeans\n+nbproject/\n+```\n+\n+Another option is to create a per-repository excludes file `.git/info/exclude`.\n+These are not committed but apply only to one repository.\n+\n+If a set of tools is used by the build system or scripts the repository (for\n+example, lcov) it is perfectly acceptable to add its files to `.gitignore`\n+and commit them.\n+"
      }
    ]
  },
  {
    "sha": "5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjQyYmIzMmM3MjMxZDMxMTBiZmEyZmUyZjY4M2U5ZWExOGE3NDQ0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T08:09:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T08:09:33Z"
      },
      "message": "Merge pull request #6813\n\nd80e3cb Support gathering of code coverage data for RPC tests (dexX7)\ne3b5e6c Run extended BitcoinJ tests for coverage based on config (dexX7)\n45d4ff0 Add config option to enable extended RPC tests for code coverage (dexX7)\n8e3a27b Require Python for RPC tests, when using lcov (dexX7)\nd425877 Remove coverage and test related files, when cleaning up (dexX7)\n4d2a926 Ignore coverage data related and temporary test files (dexX7)",
      "tree": {
        "sha": "2fdfba98e157f600e09e7926ff260778d6ba5e64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2fdfba98e157f600e09e7926ff260778d6ba5e64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLd+9AAoJEHSBCwEjRsmmjkkH/13oqKA0xJTK2xo+VTbzZNUo\nFuGxGWpcZ1sBVxfmZfzqyUfH4GBriL6c9jS/ORPSp7ojv6FMAbzKOfWSALDDbxnZ\nfMIg69praqIDGEHUtlxB9R3a+IpvEB8JS7XL7Lml6RxeHqSlWCP2CHCdvcT3ny9p\n9xI0aysZeDsCcfE0V+UmOLhb9NeEhpQGyvhqgiItpydQZ6cxXlJKeAdhUtCCUFAU\niScWgsGN1CPzw1YyU6h43fOGX81VVTNvWEuh3PSS74LTrcxBeVh5YsX/JWg775bH\nP2Xa8hwzdLoH5TcAxYId0n6I2FEid31wGguU9EKAF5TBt82lU1hk569XXI2Fj/Y=\n=/t5r\n-----END PGP SIGNATURE-----",
        "payload": "tree 2fdfba98e157f600e09e7926ff260778d6ba5e64\nparent 867d6c90b85070644c3458e3e7ed168765523361\nparent d80e3cbece857b293a4903ef49c4d543bb2cfb7f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445846956 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445846973 +0100\n\nMerge pull request #6813\n\nd80e3cb Support gathering of code coverage data for RPC tests (dexX7)\ne3b5e6c Run extended BitcoinJ tests for coverage based on config (dexX7)\n45d4ff0 Add config option to enable extended RPC tests for code coverage (dexX7)\n8e3a27b Require Python for RPC tests, when using lcov (dexX7)\nd425877 Remove coverage and test related files, when cleaning up (dexX7)\n4d2a926 Ignore coverage data related and temporary test files (dexX7)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "867d6c90b85070644c3458e3e7ed168765523361",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/867d6c90b85070644c3458e3e7ed168765523361",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/867d6c90b85070644c3458e3e7ed168765523361"
      },
      {
        "sha": "d80e3cbece857b293a4903ef49c4d543bb2cfb7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d80e3cbece857b293a4903ef49c4d543bb2cfb7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d80e3cbece857b293a4903ef49c4d543bb2cfb7f"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 45,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a8722aa593ac379dea5f29f9f11aabb6442d9d7f",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
        "patch": "@@ -91,6 +91,7 @@ build\n \n #lcov\n *.gcno\n+*.gcda\n /*.info\n test_bitcoin.coverage/\n total.coverage/\n@@ -104,6 +105,9 @@ qa/pull-tester/run-bitcoind-for-test.sh\n qa/pull-tester/tests_config.py\n qa/pull-tester/cache/*\n qa/pull-tester/test.*/*\n+qa/tmp\n+cache/\n+share/BitcoindComparisonTool.jar\n \n !src/leveldb*/Makefile\n "
      },
      {
        "sha": "f0961c64ec04c697275a02b6cfec6f51b5345315",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
        "patch": "@@ -39,7 +39,7 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) $\n \n COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n   leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info block_test_filtered.info \\\n+  baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n   leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n \n dist-hook:\n@@ -170,19 +170,28 @@ test_bitcoin_filtered.info: test_bitcoin.info\n \n block_test.info: test_bitcoin_filtered.info\n \t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool 0\n+\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n \t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n block_test_filtered.info: block_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n+rpc_test.info: test_bitcoin_filtered.info\n+\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+rpc_test_filtered.info: rpc_test.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n \t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n-total_coverage.info:  baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n@@ -211,4 +220,4 @@ CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n .INTERMEDIATE: $(COVERAGE_INFO)\n \n clean-local:\n-\trm -rf test_bitcoin.coverage/ total.coverage/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)"
      },
      {
        "sha": "25ace88f3270cd69ea545fbc853185cdd9178e24",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
        "patch": "@@ -58,6 +58,7 @@ AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n AC_PATH_PROG(JAVA, java)\n+AC_PATH_PROG(PYTHON, python)\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n AC_PATH_PROG(CCACHE,ccache)\n@@ -106,6 +107,11 @@ AC_ARG_ENABLE([comparison-tool-reorg-tests],\n     [use_comparison_tool_reorg_tests=$enableval],\n     [use_comparison_tool_reorg_tests=no])\n \n+AC_ARG_ENABLE([extended-rpc-tests],\n+    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n+    [use_extended_rpc_tests=$enableval],\n+    [use_extended_rpc_tests=no])\n+\n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n   [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n@@ -341,6 +347,10 @@ else\n   AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n fi\n \n+if test x$use_extended_rpc_tests != xno; then\n+  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n+fi\n+\n if test x$use_lcov = xyes; then\n   if test x$LCOV = x; then\n     AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n@@ -351,6 +361,9 @@ if test x$use_lcov = xyes; then\n   if test x$JAVA = x; then\n     AC_MSG_ERROR(\"lcov testing requested but java not found\")\n   fi\n+  if test x$PYTHON = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n+  fi\n   if test x$GENHTML = x; then\n     AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n   fi"
      },
      {
        "sha": "f35b9dc898143443d2678d30a1d81d47fc68ec1d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5242bb32c7231d3110bfa2fe2f683e9ea18a7444/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
        "patch": "@@ -412,7 +412,19 @@ libbitcoinconsensus_la_CPPFLAGS = $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BIT\n endif\n #\n \n-CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n+CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a\n+CLEANFILES += *.gcda *.gcno\n+CLEANFILES += compat/*.gcda compat/*.gcno\n+CLEANFILES += consensus/*.gcda consensus/*.gcno\n+CLEANFILES += crypto/*.gcda crypto/*.gcno\n+CLEANFILES += policy/*.gcda policy/*.gcno\n+CLEANFILES += primitives/*.gcda primitives/*.gcno\n+CLEANFILES += script/*.gcda script/*.gcno\n+CLEANFILES += support/*.gcda support/*.gcno\n+CLEANFILES += univalue/*.gcda univalue/*.gcno\n+CLEANFILES += wallet/*.gcda wallet/*.gcno\n+CLEANFILES += wallet/test/*.gcda wallet/test/*.gcno\n+CLEANFILES += zmq/*.gcda zmq/*.gcno\n \n DISTCLEANFILES = obj/build.h\n \n@@ -422,7 +434,7 @@ clean-local:\n \t-$(MAKE) -C leveldb clean\n \t-$(MAKE) -C secp256k1 clean\n \t-$(MAKE) -C univalue clean\n-\trm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno\n+\t-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno\n \t-rm -f config.h\n \n .rc.o:"
      }
    ]
  },
  {
    "sha": "10e2eae35c65b7551618a24e15cf068ce215beef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGUyZWFlMzVjNjViNzU1MTYxOGEyNGUxNWNmMDY4Y2UyMTViZWVm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-23T06:31:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T08:59:07Z"
      },
      "message": "rpc: Add maxmempool and effective min fee to getmempoolinfo",
      "tree": {
        "sha": "cc2683a07683849a2f5687c622da74bdd6cf1022",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc2683a07683849a2f5687c622da74bdd6cf1022"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10e2eae35c65b7551618a24e15cf068ce215beef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10e2eae35c65b7551618a24e15cf068ce215beef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10e2eae35c65b7551618a24e15cf068ce215beef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10e2eae35c65b7551618a24e15cf068ce215beef/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2c869aef2e717ba61b9335f198322f6a4d1a12d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2c869aef2e717ba61b9335f198322f6a4d1a12d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2c869aef2e717ba61b9335f198322f6a4d1a12d"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0a267e1a161ae3a2dc2bf2ca852523ac56285f5d",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10e2eae35c65b7551618a24e15cf068ce215beef/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10e2eae35c65b7551618a24e15cf068ce215beef/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=10e2eae35c65b7551618a24e15cf068ce215beef",
        "patch": "@@ -772,6 +772,9 @@ UniValue mempoolInfoToJSON()\n     ret.push_back(Pair(\"size\", (int64_t) mempool.size()));\n     ret.push_back(Pair(\"bytes\", (int64_t) mempool.GetTotalTxSize()));\n     ret.push_back(Pair(\"usage\", (int64_t) mempool.DynamicMemoryUsage()));\n+    size_t maxmempool = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    ret.push_back(Pair(\"maxmempool\", (int64_t) maxmempool));\n+    ret.push_back(Pair(\"mempoolminfee\", ValueFromAmount(mempool.GetMinFee(maxmempool).GetFeePerK())));\n \n     return ret;\n }"
      }
    ]
  },
  {
    "sha": "26f5b34e88387a6aabbb886e16532ddbe7dcca92",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNmY1YjM0ZTg4Mzg3YTZhYWJiYjg4NmUxNjUzMmRkYmU3ZGNjYTky",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T09:06:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T09:07:04Z"
      },
      "message": "Merge pull request #6877\n\n10e2eae rpc: Add maxmempool and effective min fee to getmempoolinfo (Wladimir J. van der Laan)",
      "tree": {
        "sha": "7dc72bf51bfbd5d9ec04df549ef047ccd69003f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7dc72bf51bfbd5d9ec04df549ef047ccd69003f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26f5b34e88387a6aabbb886e16532ddbe7dcca92",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLe04AAoJEHSBCwEjRsmmt/8IAMS2YaFonDLODNIEeLs6qrX2\n0vveUJnRrvmiUDQ/WrhAY14RCbKuhpJB49MMColEOHlL/k4I3/Ehs8ZYKG/C2Vyf\nUqaiV7nG0f5g6t/VOolVQ5HlrXAlgROH3raW9hcj93qfvAqtNhDFrhNbFTdc4Fyq\nFDkCkiCYy9WVWXoM0zh9JLM/f9Qg4QOPJJ1tQmIm4/Nl/tFrSlKCIiCa9uOg6hk8\nle4DF2QUe3KMxp2D2DJ1vlIM5YRLDeoqVTKDVPXQLUNjrJSfIAIxTvn1tlJwCi9s\n5i03mmRiymXS70gP28HrNTlgHB7JdnAymu/ClsWPYiLOVgz4K9tIb8qcBtVKcmA=\n=XYny\n-----END PGP SIGNATURE-----",
        "payload": "tree 7dc72bf51bfbd5d9ec04df549ef047ccd69003f8\nparent 5242bb32c7231d3110bfa2fe2f683e9ea18a7444\nparent 10e2eae35c65b7551618a24e15cf068ce215beef\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445850406 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445850424 +0100\n\nMerge pull request #6877\n\n10e2eae rpc: Add maxmempool and effective min fee to getmempoolinfo (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26f5b34e88387a6aabbb886e16532ddbe7dcca92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26f5b34e88387a6aabbb886e16532ddbe7dcca92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26f5b34e88387a6aabbb886e16532ddbe7dcca92/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5242bb32c7231d3110bfa2fe2f683e9ea18a7444",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5242bb32c7231d3110bfa2fe2f683e9ea18a7444"
      },
      {
        "sha": "10e2eae35c65b7551618a24e15cf068ce215beef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10e2eae35c65b7551618a24e15cf068ce215beef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10e2eae35c65b7551618a24e15cf068ce215beef"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4786d72a3f2b336ba0594d9be8daec7fd151da79",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26f5b34e88387a6aabbb886e16532ddbe7dcca92/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26f5b34e88387a6aabbb886e16532ddbe7dcca92/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=26f5b34e88387a6aabbb886e16532ddbe7dcca92",
        "patch": "@@ -773,6 +773,9 @@ UniValue mempoolInfoToJSON()\n     ret.push_back(Pair(\"size\", (int64_t) mempool.size()));\n     ret.push_back(Pair(\"bytes\", (int64_t) mempool.GetTotalTxSize()));\n     ret.push_back(Pair(\"usage\", (int64_t) mempool.DynamicMemoryUsage()));\n+    size_t maxmempool = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    ret.push_back(Pair(\"maxmempool\", (int64_t) maxmempool));\n+    ret.push_back(Pair(\"mempoolminfee\", ValueFromAmount(mempool.GetMinFee(maxmempool).GetFeePerK())));\n \n     return ret;\n }"
      }
    ]
  },
  {
    "sha": "ff057f41aa14fcedc40dd14d70242cf6b88601dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjA1N2Y0MWFhMTRmY2VkYzQwZGQxNGQ3MDI0MmNmNmI4ODYwMWRj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T10:32:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T10:32:46Z"
      },
      "message": "Merge pull request #6566\n\ndea8d21 Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints (Mark Friedenbach)\n9d55050 Add rules--presently disabled--for using GetMedianTimePast as endpoint for lock-time calculations (Mark Friedenbach)",
      "tree": {
        "sha": "825ab51f6d1a3a4246a444a2d05ab815cd6e0d15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/825ab51f6d1a3a4246a444a2d05ab815cd6e0d15"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff057f41aa14fcedc40dd14d70242cf6b88601dc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLgFOAAoJEHSBCwEjRsmmShEH/iBLhZYtsqH3JawFkToht+KL\n400ZPAmQH/YyBYt4+d94HpBHI/PCGbFR8vafVmk73H261VLXL7/7m7B/lr0Gsurb\nw4KDiZTuXtB7XAC70yPq3YQnWiRKoyHS6l/+J42MiPXRK9SIYszJF6plWEpbztro\nA5+q8e8JBkISIUQ7/E8T0njntLL5z2s6+g1JKJhazYhzRQvsKddVndSnZG05RcEo\nX32WxnKGlTIomdlwIUdgg7j2rUPCbJ44d53Ne69eO74kADqf87r/lLMQCZ0wVYxH\n7mKKNPENZzB4qvmi9PhNwqhz3giGgjRjt6GQOjwIQDViOvzNQ/fld26bdGEymBk=\n=QJtP\n-----END PGP SIGNATURE-----",
        "payload": "tree 825ab51f6d1a3a4246a444a2d05ab815cd6e0d15\nparent 26f5b34e88387a6aabbb886e16532ddbe7dcca92\nparent dea8d21fc63e9f442299c97010e4740558f4f037\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445855563 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445855566 +0100\n\nMerge pull request #6566\n\ndea8d21 Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints (Mark Friedenbach)\n9d55050 Add rules--presently disabled--for using GetMedianTimePast as endpoint for lock-time calculations (Mark Friedenbach)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff057f41aa14fcedc40dd14d70242cf6b88601dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff057f41aa14fcedc40dd14d70242cf6b88601dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff057f41aa14fcedc40dd14d70242cf6b88601dc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26f5b34e88387a6aabbb886e16532ddbe7dcca92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26f5b34e88387a6aabbb886e16532ddbe7dcca92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26f5b34e88387a6aabbb886e16532ddbe7dcca92"
      },
      {
        "sha": "dea8d21fc63e9f442299c97010e4740558f4f037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea8d21fc63e9f442299c97010e4740558f4f037",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dea8d21fc63e9f442299c97010e4740558f4f037"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 58,
      "deletions": 10
    },
    "files": [
      {
        "sha": "6d6ce7e0998e9248b65f4ee7fb47bb36216ed76a",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=ff057f41aa14fcedc40dd14d70242cf6b88601dc",
        "patch": "@@ -13,4 +13,10 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n+/** Flags for LockTime() */\n+enum {\n+    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n+    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n+};\n+\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "499f2c3f767b65f9c282043727ba24f5635eacf1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 5,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ff057f41aa14fcedc40dd14d70242cf6b88601dc",
        "patch": "@@ -650,10 +650,35 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n     return true;\n }\n \n-bool CheckFinalTx(const CTransaction &tx)\n+bool CheckFinalTx(const CTransaction &tx, int flags)\n {\n     AssertLockHeld(cs_main);\n-    return IsFinalTx(tx, chainActive.Height() + 1, GetAdjustedTime());\n+\n+    // By convention a negative value for flags indicates that the\n+    // current network-enforced consensus rules should be used. In\n+    // a future soft-fork scenario that would mean checking which\n+    // rules would be enforced for the next block and setting the\n+    // appropriate flags. At the present time no soft-forks are\n+    // scheduled, so no flags are set.\n+    flags = std::max(flags, 0);\n+\n+    // CheckFinalTx() uses chainActive.Height()+1 to evaluate\n+    // nLockTime because when IsFinalTx() is called within\n+    // CBlock::AcceptBlock(), the height of the block *being*\n+    // evaluated is what is used. Thus if we want to know if a\n+    // transaction can be part of the *next* block, we need to call\n+    // IsFinalTx() with one more than chainActive.Height().\n+    const int nBlockHeight = chainActive.Height() + 1;\n+\n+    // Timestamps on the other hand don't get any special treatment,\n+    // because we can't know what timestamp the next block will have,\n+    // and there aren't timestamp applications where it matters.\n+    // However this changes once median past time-locks are enforced:\n+    const int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n+                             ? chainActive.Tip()->GetMedianTimePast()\n+                             : GetAdjustedTime();\n+\n+    return IsFinalTx(tx, nBlockHeight, nBlockTime);\n }\n \n unsigned int GetLegacySigOpCount(const CTransaction& tx)\n@@ -797,7 +822,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     // Only accept nLockTime-using transactions that can be mined in the next\n     // block; we don't want our mempool filled up with transactions that can't\n     // be mined yet.\n-    if (!CheckFinalTx(tx))\n+    if (!CheckFinalTx(tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.DoS(0, false, REJECT_NONSTANDARD, \"non-final\");\n \n     // is it already in the memory pool?\n@@ -2723,10 +2748,15 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n-        if (!IsFinalTx(tx, nHeight, block.GetBlockTime())) {\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n+        int nLockTimeFlags = 0;\n+        int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n+                                ? pindexPrev->GetMedianTimePast()\n+                                : block.GetBlockTime();\n+        if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n             return state.DoS(10, error(\"%s: contains a non-final transaction\", __func__), REJECT_INVALID, \"bad-txns-nonfinal\");\n         }\n+    }\n \n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n     // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):"
      },
      {
        "sha": "65732d770f8811d9143764f9bf39f319002e3ab3",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=ff057f41aa14fcedc40dd14d70242cf6b88601dc",
        "patch": "@@ -308,8 +308,10 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n  * Check if transaction will be final in the next block to be created.\n  *\n  * Calls IsFinalTx() with current block height and appropriate block time.\n+ *\n+ * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckFinalTx(const CTransaction &tx);\n+bool CheckFinalTx(const CTransaction &tx, int flags = -1);\n \n /** \n  * Closure representing one script verification"
      },
      {
        "sha": "053d9cdbc4ecca4fb22f747fb3d2551206f64d3b",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=ff057f41aa14fcedc40dd14d70242cf6b88601dc",
        "patch": "@@ -148,6 +148,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n+        const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n         CCoinsViewCache view(pcoinsTip);\n \n         // Priority order to process transactions\n@@ -162,7 +163,12 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n              mi != mempool.mapTx.end(); ++mi)\n         {\n             const CTransaction& tx = mi->GetTx();\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n+\n+            int64_t nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n+                                    ? nMedianTimePast\n+                                    : pblock->GetBlockTime();\n+\n+            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, nLockTimeCutoff))\n                 continue;\n \n             COrphan* porphan = NULL;"
      },
      {
        "sha": "7027f1402f41a634a51c041f669fb1e21810384f",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=ff057f41aa14fcedc40dd14d70242cf6b88601dc",
        "patch": "@@ -43,6 +43,9 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n+/** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n+static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_MEDIAN_TIME_PAST;\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**\n      * Check for standard transaction types"
      },
      {
        "sha": "827525783a36913a3d241804d4f746243032f84c",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff057f41aa14fcedc40dd14d70242cf6b88601dc/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=ff057f41aa14fcedc40dd14d70242cf6b88601dc",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"chainparams.h\"\n #include \"coins.h\"\n+#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -229,7 +230,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.nLockTime = chainActive.Tip()->nHeight+1;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx));\n+    BOOST_CHECK(!CheckFinalTx(tx, LOCKTIME_MEDIAN_TIME_PAST));\n \n     // time locked\n     tx2.vin.resize(1);\n@@ -243,7 +244,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx2.nLockTime = chainActive.Tip()->GetMedianTimePast()+1;\n     hash = tx2.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx2, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx2));\n+    BOOST_CHECK(!CheckFinalTx(tx2, LOCKTIME_MEDIAN_TIME_PAST));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n \n@@ -261,7 +262,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     //BOOST_CHECK(CheckFinalTx(tx2));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n-    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 3);\n+    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 2);\n     delete pblocktemplate;\n \n     chainActive.Tip()->nHeight--;"
      }
    ]
  },
  {
    "sha": "0d699fc821048ab9316b0004e6552c8f1dc5e5f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDY5OWZjODIxMDQ4YWI5MzE2YjAwMDRlNjU1MmM4ZjFkYzVlNWY0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-26T13:55:17Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-26T13:58:17Z"
      },
      "message": "fix locking issue with new mempool limiting\n\nCurrent master crashes on OSX with an exception: \"boost: mutex lock failed in pthread_mutex_lock: Invalid argument\"",
      "tree": {
        "sha": "96c6d0c6903133255916e568729a5a398d0ce032",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96c6d0c6903133255916e568729a5a398d0ce032"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d699fc821048ab9316b0004e6552c8f1dc5e5f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWLjF5AAoJECnUvLZBb1PsdOkQAKj99j5Ybiedd1meM6rMz9oQ\nIkSR64JPlrX2c24uac3EDOyzsmvYKzC/PoxOhtwpMjAXGf9o1HkhPTh8FO3zOn3h\njrQi/MIJ+eiZM+a5ceIJ7PbI2T1YdGvNSrYPQH9mliqjy1PsBrX/apPxsnOP1EwU\nHrakiu0jR18M1nXWGiz9ehMyZxSz4PKBcFtpvezI9iu1phfoiN9sAs19it8johuP\nUqa6zh1CS0nyZEM4kSweT265L3DktmLzMNwQqSJAMgW3jofCWSU6BwiqP1lHpDer\nIt4vJCNFRn9InwJwC6AfvFnemU24brsDOvfSPRWSDkDZd2BqJemnEaQIi4hRNzNm\naJmr1XRp/AJieiJFLKXTS8lO+e271BhDMHIhu8AxkLLBCE58dLPbm8R75/r40mb+\nJVthnrwcj+B0szv8UuikxH6R+JnqTj4jrai/8thf7MCwuTLhcRx5zBJT+7vu8s/3\n29JI82eFWvO8WosuCMK8h4sRpwF6Uu1ApYgAI7VAYdq4Z3PuL9FPqp6MoGEeJaaL\n5/fMGVfM/X21YJ1FH2uuq5B36cdTa/cNGmoKW/Qp/E5jPnU6Ieaqxjg+rVbgTucz\nybxxtJeg4x/33V2S6ieVsYH02JFwouaAZyhZ0FyFAT6NUFAiilJNM1wZ/5/oySyw\nC2AFxiUxo8LYANzjTSkJ\n=7ZJ7\n-----END PGP SIGNATURE-----",
        "payload": "tree 96c6d0c6903133255916e568729a5a398d0ce032\nparent 867d6c90b85070644c3458e3e7ed168765523361\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1445867717 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1445867897 +0100\n\nfix locking issue with new mempool limiting\n\nCurrent master crashes on OSX with an exception: \"boost: mutex lock failed in pthread_mutex_lock: Invalid argument\"\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d699fc821048ab9316b0004e6552c8f1dc5e5f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d699fc821048ab9316b0004e6552c8f1dc5e5f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d699fc821048ab9316b0004e6552c8f1dc5e5f4/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "867d6c90b85070644c3458e3e7ed168765523361",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/867d6c90b85070644c3458e3e7ed168765523361",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/867d6c90b85070644c3458e3e7ed168765523361"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "efa5c8f7a3eb2742324e3a8932f2183de6be1fef",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d699fc821048ab9316b0004e6552c8f1dc5e5f4/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d699fc821048ab9316b0004e6552c8f1dc5e5f4/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=0d699fc821048ab9316b0004e6552c8f1dc5e5f4",
        "patch": "@@ -309,7 +309,7 @@ void CTxMemPoolEntry::UpdateState(int64_t modifySize, CAmount modifyFee, int64_t\n CTxMemPool::CTxMemPool(const CFeeRate& _minReasonableRelayFee) :\n     nTransactionsUpdated(0)\n {\n-    clear();\n+    _clear(); //lock free clear\n \n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n@@ -546,9 +546,8 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n     blockSinceLastRollingFeeBump = true;\n }\n \n-void CTxMemPool::clear()\n+void CTxMemPool::_clear()\n {\n-    LOCK(cs);\n     mapLinks.clear();\n     mapTx.clear();\n     mapNextTx.clear();\n@@ -560,6 +559,12 @@ void CTxMemPool::clear()\n     ++nTransactionsUpdated;\n }\n \n+void CTxMemPool::clear()\n+{\n+    LOCK(cs);\n+    _clear();\n+}\n+\n void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n {\n     if (!fSanityCheck)"
      },
      {
        "sha": "dedc7ba72c567c938e5023a59ccf35da9f6b8f80",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d699fc821048ab9316b0004e6552c8f1dc5e5f4/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d699fc821048ab9316b0004e6552c8f1dc5e5f4/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=0d699fc821048ab9316b0004e6552c8f1dc5e5f4",
        "patch": "@@ -375,6 +375,7 @@ class CTxMemPool\n     void removeForBlock(const std::vector<CTransaction>& vtx, unsigned int nBlockHeight,\n                         std::list<CTransaction>& conflicts, bool fCurrentEstimate = true);\n     void clear();\n+    void _clear(); //lock free\n     void queryHashes(std::vector<uint256>& vtxid);\n     void pruneSpent(const uint256& hash, CCoins &coins);\n     unsigned int GetTransactionsUpdated() const;"
      }
    ]
  },
  {
    "sha": "872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzJmZWUzZmNjYzhiMzNiOWFmMGE0MDFiNWY4NWFjNTUwNGI1N2Vi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-09-02T15:03:27Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-26T14:37:30Z"
      },
      "message": "Introduce -maxuploadtarget\n\n* -maxuploadtarget can be set in MiB\n* if <limit> - ( time-left-in-24h-cycle / 600 * MAX_BLOCK_SIZE ) has reach, stop serve blocks older than one week and filtered blocks\n* no action if limit has reached, no guarantee that the target will not be  surpassed\n* add outbound limit informations to rpc getnettotals",
      "tree": {
        "sha": "d868b4a0a6b9f9b55882c324afb362d5a1914e20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d868b4a0a6b9f9b55882c324afb362d5a1914e20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWLjqqAAoJECnUvLZBb1PsZWwQAJZQ+5tcBcUYVeO6VlI1sOP0\nnGjew7tzZMtJKJ/6EQeRt861TS8uFdgq2r7ijx+6dzlKe9A/p7QVq1Z/3XksddDO\n5c2nlKLyZtPoBsqQDPLxYLhT0ZRiGwkcx6FRkHwdpT2DLrsOky+eQ0y3tHbZzhYu\nNDPDxAFezYhRlRordlNS0rMFTwyqF1/YxVsUuSjVc8ItMPZskhW/ORV5T8i4Rpej\n0gTthidwd/E2ajbCDMu5HUrlE0g7lWURSbhnzMKU+uAgfwcrvLvV6iqU0nt4MfjC\nPsT7vX3+Ei3teHPrMlgKxTDFeleS7OfaVYgv3ZhY016o8LyQyl0FSrc5G+nMkqLs\nsoviyB7w9QydYqvBzvcqtNcp0o3ALJhyGy5myH4+ZS1IXEjXGsSQoYYdAKJsM7+i\nCV7VWz1jYuZN4Q+sjHAj5qMcObItSUa24K/qy0QycUS3q74JjSBfvQRu7XWdmips\nC44lPIE7LAUx+Fb84wZ1I7k9eJC3jqLr6SgNuuI3xx6YWT0PLvTsRhoDG1OWPQy5\nna185ik7Dlwv2QOAcWsmGEiCu8K/JtoOIb7iZ9Tm+KpiGVg2lS20C2sEG6W/XZ8M\nsvC+Iow7NSi0l4McioofxYVlnYg4hMiuPP21YwqZWT+N1HoskbVdyNS6yvcnJ+vq\n/v2D6s8exGlh8HA1zKlo\n=thWL\n-----END PGP SIGNATURE-----",
        "payload": "tree d868b4a0a6b9f9b55882c324afb362d5a1914e20\nparent 867d6c90b85070644c3458e3e7ed168765523361\nauthor Jonas Schnelli <jonas.schnelli@include7.ch> 1441206207 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1445870250 +0100\n\nIntroduce -maxuploadtarget\n\n* -maxuploadtarget can be set in MiB\n* if <limit> - ( time-left-in-24h-cycle / 600 * MAX_BLOCK_SIZE ) has reach, stop serve blocks older than one week and filtered blocks\n* no action if limit has reached, no guarantee that the target will not be  surpassed\n* add outbound limit informations to rpc getnettotals\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "867d6c90b85070644c3458e3e7ed168765523361",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/867d6c90b85070644c3458e3e7ed168765523361",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/867d6c90b85070644c3458e3e7ed168765523361"
      }
    ],
    "stats": {
      "total": 144,
      "additions": 144,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0210ac1135d53d36e2aabc0ce79656f941bc0e14",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
        "patch": "@@ -369,6 +369,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-whitebind=<addr>\", _(\"Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\"));\n     strUsage += HelpMessageOpt(\"-whitelist=<netmask>\", _(\"Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.\") +\n         \" \" + _(\"Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway\"));\n+    strUsage += HelpMessageOpt(\"-maxuploadtarget=<n>\", strprintf(_(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\"), 0));\n \n #ifdef ENABLE_WALLET\n     strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n@@ -1174,6 +1175,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         RegisterValidationInterface(pzmqNotificationInterface);\n     }\n #endif\n+    if (mapArgs.count(\"-maxuploadtarget\")) {\n+        CNode::SetMaxOutboundTarget(GetArg(\"-maxuploadtarget\", 0)*1024*1024);\n+    }\n \n     // ********************************************************* Step 7: load block chain\n "
      },
      {
        "sha": "26a22ae6fd7cfd7d618410c6a03a6022b22d01ee",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
        "patch": "@@ -3805,6 +3805,16 @@ void static ProcessGetData(CNode* pfrom)\n                         }\n                     }\n                 }\n+                // disconnect node in case we have reached the outbound limit for serving historical blocks\n+                static const int nOneWeek = 7 * 24 * 60 * 60; // assume > 1 week = historical\n+                if (send && CNode::OutboundTargetReached(true) && ( ((pindexBestHeader != NULL) && (pindexBestHeader->GetBlockTime() - mi->second->GetBlockTime() > nOneWeek)) || inv.type == MSG_FILTERED_BLOCK) )\n+                {\n+                    LogPrint(\"net\", \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n+\n+                    //disconnect node\n+                    pfrom->fDisconnect = true;\n+                    send = false;\n+                }\n                 // Pruned nodes may have deleted the block, so check whether\n                 // it's available before trying to send.\n                 if (send && (mi->second->nStatus & BLOCK_HAVE_DATA))"
      },
      {
        "sha": "e18e8d0e29aa30a46b931b223137b5b1ab57465d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
        "patch": "@@ -12,6 +12,7 @@\n #include \"addrman.h\"\n #include \"chainparams.h\"\n #include \"clientversion.h\"\n+#include \"consensus/consensus.h\"\n #include \"crypto/common.h\"\n #include \"hash.h\"\n #include \"primitives/transaction.h\"\n@@ -326,6 +327,11 @@ uint64_t CNode::nTotalBytesSent = 0;\n CCriticalSection CNode::cs_totalBytesRecv;\n CCriticalSection CNode::cs_totalBytesSent;\n \n+uint64_t CNode::nMaxOutboundLimit = 0;\n+uint64_t CNode::nMaxOutboundTotalBytesSentInCycle = 0;\n+uint64_t CNode::nMaxOutboundTimeframe = 60*60*24; //1 day\n+uint64_t CNode::nMaxOutboundCycleStartTime = 0;\n+\n CNode* FindNode(const CNetAddr& ip)\n {\n     LOCK(cs_vNodes);\n@@ -2083,6 +2089,94 @@ void CNode::RecordBytesSent(uint64_t bytes)\n {\n     LOCK(cs_totalBytesSent);\n     nTotalBytesSent += bytes;\n+\n+    uint64_t now = GetTime();\n+    if (nMaxOutboundCycleStartTime + nMaxOutboundTimeframe < now)\n+    {\n+        // timeframe expired, reset cycle\n+        nMaxOutboundCycleStartTime = now;\n+        nMaxOutboundTotalBytesSentInCycle = 0;\n+    }\n+\n+    // TODO, exclude whitebind peers\n+    nMaxOutboundTotalBytesSentInCycle += bytes;\n+}\n+\n+void CNode::SetMaxOutboundTarget(uint64_t limit)\n+{\n+    LOCK(cs_totalBytesSent);\n+    uint64_t recommendedMinimum = (nMaxOutboundTimeframe / 600) * MAX_BLOCK_SIZE;\n+    nMaxOutboundLimit = limit;\n+\n+    if (limit < recommendedMinimum)\n+        LogPrintf(\"Max outbound target is very small (%s) and will be overshot. Recommended minimum is %s\\n.\", nMaxOutboundLimit, recommendedMinimum);\n+}\n+\n+uint64_t CNode::GetMaxOutboundTarget()\n+{\n+    LOCK(cs_totalBytesSent);\n+    return nMaxOutboundLimit;\n+}\n+\n+uint64_t CNode::GetMaxOutboundTimeframe()\n+{\n+    LOCK(cs_totalBytesSent);\n+    return nMaxOutboundTimeframe;\n+}\n+\n+uint64_t CNode::GetMaxOutboundTimeLeftInCycle()\n+{\n+    LOCK(cs_totalBytesSent);\n+    if (nMaxOutboundLimit == 0)\n+        return 0;\n+\n+    if (nMaxOutboundCycleStartTime == 0)\n+        return nMaxOutboundTimeframe;\n+\n+    uint64_t cycleEndTime = nMaxOutboundCycleStartTime + nMaxOutboundTimeframe;\n+    uint64_t now = GetTime();\n+    return (cycleEndTime < now) ? 0 : cycleEndTime - GetTime();\n+}\n+\n+void CNode::SetMaxOutboundTimeframe(uint64_t timeframe)\n+{\n+    LOCK(cs_totalBytesSent);\n+    if (nMaxOutboundTimeframe != timeframe)\n+    {\n+        // reset measure-cycle in case of changing\n+        // the timeframe\n+        nMaxOutboundCycleStartTime = GetTime();\n+    }\n+    nMaxOutboundTimeframe = timeframe;\n+}\n+\n+bool CNode::OutboundTargetReached(bool historicalBlockServingLimit)\n+{\n+    LOCK(cs_totalBytesSent);\n+    if (nMaxOutboundLimit == 0)\n+        return false;\n+\n+    if (historicalBlockServingLimit)\n+    {\n+        // keep a large enought buffer to at least relay each block once\n+        uint64_t timeLeftInCycle = GetMaxOutboundTimeLeftInCycle();\n+        uint64_t buffer = timeLeftInCycle / 600 * MAX_BLOCK_SIZE;\n+        if (buffer >= nMaxOutboundLimit || nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit - buffer)\n+            return true;\n+    }\n+    else if (nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit)\n+        return true;\n+\n+    return false;\n+}\n+\n+uint64_t CNode::GetOutboundTargetBytesLeft()\n+{\n+    LOCK(cs_totalBytesSent);\n+    if (nMaxOutboundLimit == 0)\n+        return 0;\n+\n+    return (nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit) ? 0 : nMaxOutboundLimit - nMaxOutboundTotalBytesSentInCycle;\n }\n \n uint64_t CNode::GetTotalBytesRecv()"
      },
      {
        "sha": "f90b3385afea1f1358d161cd8623c52f938992e0",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
        "patch": "@@ -400,6 +400,12 @@ class CNode\n     static uint64_t nTotalBytesRecv;\n     static uint64_t nTotalBytesSent;\n \n+    // outbound limit & stats\n+    static uint64_t nMaxOutboundTotalBytesSentInCycle;\n+    static uint64_t nMaxOutboundCycleStartTime;\n+    static uint64_t nMaxOutboundLimit;\n+    static uint64_t nMaxOutboundTimeframe;\n+\n     CNode(const CNode&);\n     void operator=(const CNode&);\n \n@@ -701,6 +707,27 @@ class CNode\n \n     static uint64_t GetTotalBytesRecv();\n     static uint64_t GetTotalBytesSent();\n+\n+    //!set the max outbound target in bytes\n+    static void SetMaxOutboundTarget(uint64_t limit);\n+    static uint64_t GetMaxOutboundTarget();\n+\n+    //!set the timeframe for the max outbound target\n+    static void SetMaxOutboundTimeframe(uint64_t timeframe);\n+    static uint64_t GetMaxOutboundTimeframe();\n+\n+    //!check if the outbound target is reached\n+    // if param historicalBlockServingLimit is set true, the function will\n+    // response true if the limit for serving historical blocks has been reached\n+    static bool OutboundTargetReached(bool historicalBlockServingLimit);\n+\n+    //!response the bytes left in the current max outbound cycle\n+    // in case of no limit, it will always response 0\n+    static uint64_t GetOutboundTargetBytesLeft();\n+\n+    //!response the time in second left in the current max outbound cycle\n+    // in case of no limit, it will always response 0\n+    static uint64_t GetMaxOutboundTimeLeftInCycle();\n };\n \n "
      },
      {
        "sha": "6b4815ebd8fa763a5b4b435c840aa6c54abd6d77",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/872fee3fccc8b33b9af0a401b5f85ac5504b57eb/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
        "patch": "@@ -379,6 +379,15 @@ UniValue getnettotals(const UniValue& params, bool fHelp)\n     obj.push_back(Pair(\"totalbytesrecv\", CNode::GetTotalBytesRecv()));\n     obj.push_back(Pair(\"totalbytessent\", CNode::GetTotalBytesSent()));\n     obj.push_back(Pair(\"timemillis\", GetTimeMillis()));\n+\n+    UniValue outboundLimit(UniValue::VOBJ);\n+    outboundLimit.push_back(Pair(\"timeframe\", CNode::GetMaxOutboundTimeframe()));\n+    outboundLimit.push_back(Pair(\"target\", CNode::GetMaxOutboundTarget()));\n+    outboundLimit.push_back(Pair(\"target_reached\", CNode::OutboundTargetReached(false)));\n+    outboundLimit.push_back(Pair(\"serve_historical_blocks\", !CNode::OutboundTargetReached(true)));\n+    outboundLimit.push_back(Pair(\"bytes_left_in_cycle\", CNode::GetOutboundTargetBytesLeft()));\n+    outboundLimit.push_back(Pair(\"time_left_in_cycle\", CNode::GetMaxOutboundTimeLeftInCycle()));\n+    obj.push_back(Pair(\"uploadtarget\", outboundLimit));\n     return obj;\n }\n "
      }
    ]
  },
  {
    "sha": "17a073ae0692fe378827e3c4dae01294509e19e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2EwNzNhZTA2OTJmZTM3ODgyN2UzYzRkYWUwMTI5NDUwOWUxOWU5",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2015-09-18T19:59:55Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-10-26T14:40:38Z"
      },
      "message": "Add RPC test for -maxuploadtarget",
      "tree": {
        "sha": "4560ef6836a8e1556ec4e65aedf573af4e7f3f79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4560ef6836a8e1556ec4e65aedf573af4e7f3f79"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17a073ae0692fe378827e3c4dae01294509e19e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWLjtmAAoJECnUvLZBb1Ps7i8P/1b2BxoAYvAFo3OkjCohF5Qn\nmZUlrbBuimVrFx9vlu7i1/rMH/nwjjkxAugxn5ZG3b4io4/SnCZHyP8uXbsMyM/B\n7km1hDmB6gw4iPSwtbdya2s1ouIc4b7gbw5Dfga2hqX3FUcnHWAf0bVSOa6zs8Bf\nimNtqVodG8MeU1SBa/r04q2fBUP8xMIqraxqURhgXgwowr6iLUHZ3DzXKSI6fB1T\nzegvx43U3mpUzmSRJhq7K/77k82CevATlpKmXjc4mRdg4ijuJCxWmzH4Lgkmtazm\n44wHc5LrDS8uOzEO3tzt0BF5gRar475UFIuSgCkZ83U2nV7zD11tfL+lekXR8EID\na6515mvsA6b+kLqQb2poaEyuNC1UT/kDUxTwNmKfbAiH2Jjhe0krYQyGPIeyLB3p\nnxvbN2x1eLOBYlxYWkbCguIxRe3lGBQYElHowODJwHKrAF7lHL3z7nnRC6ZAQzwZ\n816ynCCAdRSnyLoj0b0gynxcGsmphCQh9QhLaQ+3ZDdunWYoq8h7hXPLB1meUWwB\nstBAsJfO7myaHEZiDskjVyOn+jBKZCfRrlamvQary8IR0mA+FEALDINlKlzfgMyk\nVwP2Rh9+ztsMdZtR/vN1ROx0l6pYulrjn0Wubg9ZMYjz4DsH+Xp8x/UgqB4Fiw85\n6+p4r1WqMCOdua48xL05\n=7HiY\n-----END PGP SIGNATURE-----",
        "payload": "tree 4560ef6836a8e1556ec4e65aedf573af4e7f3f79\nparent 872fee3fccc8b33b9af0a401b5f85ac5504b57eb\nauthor Suhas Daftuar <sdaftuar@chaincode.com> 1442606395 -0400\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1445870438 +0100\n\nAdd RPC test for -maxuploadtarget\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17a073ae0692fe378827e3c4dae01294509e19e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17a073ae0692fe378827e3c4dae01294509e19e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17a073ae0692fe378827e3c4dae01294509e19e9/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/872fee3fccc8b33b9af0a401b5f85ac5504b57eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/872fee3fccc8b33b9af0a401b5f85ac5504b57eb"
      }
    ],
    "stats": {
      "total": 251,
      "additions": 250,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3059fee42662e6010e9056ffcc2894afdaaab38e",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17a073ae0692fe378827e3c4dae01294509e19e9/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17a073ae0692fe378827e3c4dae01294509e19e9/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=17a073ae0692fe378827e3c4dae01294509e19e9",
        "patch": "@@ -84,12 +84,13 @@\n     'keypool.py',\n     'receivedby.py',\n #    'rpcbind_test.py', #temporary, bug in libevent, see #6655\n-#   'script_test.py', #used for manual comparison of 2 binaries\n+#    'script_test.py', #used for manual comparison of 2 binaries\n     'smartfees.py',\n     'maxblocksinflight.py',\n     'invalidblockrequest.py',\n     'p2p-acceptblock.py',\n     'mempool_packages.py',\n+    'maxuploadtarget.py',\n ]\n \n #Enable ZMQ tests"
      },
      {
        "sha": "67c4a509854c84c487761868c82c5ed5fac0c680",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "added",
        "additions": 248,
        "deletions": 0,
        "changes": 248,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17a073ae0692fe378827e3c4dae01294509e19e9/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17a073ae0692fe378827e3c4dae01294509e19e9/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=17a073ae0692fe378827e3c4dae01294509e19e9",
        "patch": "@@ -0,0 +1,248 @@\n+#!/usr/bin/env python2\n+#\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+from test_framework.comptool import wait_until\n+import time\n+\n+'''\n+Test behavior of -maxuploadtarget.\n+\n+* Verify that getdata requests for old blocks (>1week) are dropped\n+if uploadtarget has been reached.\n+* Verify that getdata requests for recent blocks are respecteved even\n+if uploadtarget has been reached.\n+* Verify that the upload counters are reset after 24 hours.\n+'''\n+\n+# TestNode: bare-bones \"peer\".  Used mostly as a conduit for a test to sending\n+# p2p messages to a node, generating the messages in the main testing logic.\n+class TestNode(NodeConnCB):\n+    def __init__(self):\n+        NodeConnCB.__init__(self)\n+        self.create_callback_map()\n+        self.connection = None\n+        self.ping_counter = 1\n+        self.last_pong = msg_pong()\n+        self.block_receive_map = {}\n+\n+    def add_connection(self, conn):\n+        self.connection = conn\n+        self.peer_disconnected = False\n+\n+    def on_inv(self, conn, message):\n+        pass\n+\n+    # Track the last getdata message we receive (used in the test)\n+    def on_getdata(self, conn, message):\n+        self.last_getdata = message\n+\n+    def on_block(self, conn, message):\n+        message.block.calc_sha256()\n+        try:\n+            self.block_receive_map[message.block.sha256] += 1\n+        except KeyError as e:\n+            self.block_receive_map[message.block.sha256] = 1\n+\n+    # Spin until verack message is received from the node.\n+    # We use this to signal that our test can begin. This\n+    # is called from the testing thread, so it needs to acquire\n+    # the global lock.\n+    def wait_for_verack(self):\n+        def veracked():\n+            return self.verack_received\n+        return wait_until(veracked, timeout=10)\n+\n+    def wait_for_disconnect(self):\n+        def disconnected():\n+            return self.peer_disconnected\n+        return wait_until(disconnected, timeout=10)\n+\n+    # Wrapper for the NodeConn's send_message function\n+    def send_message(self, message):\n+        self.connection.send_message(message)\n+\n+    def on_pong(self, conn, message):\n+        self.last_pong = message\n+\n+    def on_close(self, conn):\n+        self.peer_disconnected = True\n+\n+    # Sync up with the node after delivery of a block\n+    def sync_with_ping(self, timeout=30):\n+        def received_pong():\n+            return (self.last_pong.nonce == self.ping_counter)\n+        self.connection.send_message(msg_ping(nonce=self.ping_counter))\n+        success = wait_until(received_pong, timeout)\n+        self.ping_counter += 1\n+        return success\n+\n+class MaxUploadTest(BitcoinTestFramework):\n+    def __init__(self):\n+        self.utxo = []\n+\n+        # Some pre-processing to create a bunch of OP_RETURN txouts to insert into transactions we create\n+        # So we have big transactions and full blocks to fill up our block files\n+        # create one script_pubkey\n+        script_pubkey = \"6a4d0200\" #OP_RETURN OP_PUSH2 512 bytes\n+        for i in xrange (512):\n+            script_pubkey = script_pubkey + \"01\"\n+        # concatenate 128 txouts of above script_pubkey which we'll insert before the txout for change\n+        self.txouts = \"81\"\n+        for k in xrange(128):\n+            # add txout value\n+            self.txouts = self.txouts + \"0000000000000000\"\n+            # add length of script_pubkey\n+            self.txouts = self.txouts + \"fd0402\"\n+            # add script_pubkey\n+            self.txouts = self.txouts + script_pubkey\n+ \n+    def add_options(self, parser):\n+        parser.add_option(\"--testbinary\", dest=\"testbinary\",\n+                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n+                          help=\"bitcoind binary to test\")\n+\n+    def setup_chain(self):\n+        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def setup_network(self):\n+        # Start a node with maxuploadtarget of 200 MB (/24h)\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-debug\", \"-maxuploadtarget=200\", \"-blockmaxsize=999000\"]))\n+\n+    def mine_full_block(self, node, address):\n+        # Want to create a full block\n+        # We'll generate a 66k transaction below, and 14 of them is close to the 1MB block limit\n+        for j in xrange(14):\n+            if len(self.utxo) < 14:\n+                self.utxo = node.listunspent()\n+            inputs=[]\n+            outputs = {}\n+            t = self.utxo.pop()\n+            inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]})\n+            remchange = t[\"amount\"] - Decimal(\"0.001000\")\n+            outputs[address]=remchange\n+            # Create a basic transaction that will send change back to ourself after account for a fee\n+            # And then insert the 128 generated transaction outs in the middle rawtx[92] is where the #\n+            # of txouts is stored and is the only thing we overwrite from the original transaction\n+            rawtx = node.createrawtransaction(inputs, outputs)\n+            newtx = rawtx[0:92]\n+            newtx = newtx + self.txouts\n+            newtx = newtx + rawtx[94:]\n+            # Appears to be ever so slightly faster to sign with SIGHASH_NONE\n+            signresult = node.signrawtransaction(newtx,None,None,\"NONE\")\n+            txid = node.sendrawtransaction(signresult[\"hex\"], True)\n+        # Mine a full sized block which will be these transactions we just created\n+        node.generate(1)\n+\n+    def run_test(self):\n+        # Before we connect anything, we first set the time on the node\n+        # to be in the past, otherwise things break because the CNode\n+        # time counters can't be reset backward after initialization\n+        old_time = int(time.time() - 2*60*60*24*7)\n+        self.nodes[0].setmocktime(old_time)\n+\n+        # Generate some old blocks\n+        self.nodes[0].generate(130)\n+\n+        # test_nodes[0] will only request old blocks\n+        # test_nodes[1] will only request new blocks\n+        # test_nodes[2] will test resetting the counters\n+        test_nodes = []\n+        connections = []\n+\n+        for i in xrange(3):\n+            test_nodes.append(TestNode())\n+            connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], test_nodes[i]))\n+            test_nodes[i].add_connection(connections[i])\n+\n+        NetworkThread().start() # Start up network handling in another thread\n+        [x.wait_for_verack() for x in test_nodes]\n+\n+        # Test logic begins here\n+\n+        # Now mine a big block\n+        self.mine_full_block(self.nodes[0], self.nodes[0].getnewaddress())\n+\n+        # Store the hash; we'll request this later\n+        big_old_block = self.nodes[0].getbestblockhash()\n+        old_block_size = self.nodes[0].getblock(big_old_block, True)['size']\n+        big_old_block = int(big_old_block, 16)\n+\n+        # Advance to two days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 2*60*60*24)\n+\n+        # Mine one more block, so that the prior block looks old\n+        self.mine_full_block(self.nodes[0], self.nodes[0].getnewaddress())\n+\n+        # We'll be requesting this new block too\n+        big_new_block = self.nodes[0].getbestblockhash()\n+        new_block_size = self.nodes[0].getblock(big_new_block)['size']\n+        big_new_block = int(big_new_block, 16)\n+\n+        # test_nodes[0] will test what happens if we just keep requesting the\n+        # the same big old block too many times (expect: disconnect)\n+\n+        getdata_request = msg_getdata()\n+        getdata_request.inv.append(CInv(2, big_old_block))\n+\n+        max_bytes_per_day = 200*1024*1024\n+        max_bytes_available = max_bytes_per_day - 144*1000000\n+        success_count = max_bytes_available / old_block_size\n+        \n+        # 144MB will be reserved for relaying new blocks, so expect this to\n+        # succeed for ~70 tries.\n+        for i in xrange(success_count):\n+            test_nodes[0].send_message(getdata_request)\n+            test_nodes[0].sync_with_ping()\n+            assert_equal(test_nodes[0].block_receive_map[big_old_block], i+1)\n+\n+        assert_equal(len(self.nodes[0].getpeerinfo()), 3)\n+        # At most a couple more tries should succeed (depending on how long \n+        # the test has been running so far).\n+        for i in xrange(3):\n+            test_nodes[0].send_message(getdata_request)\n+        test_nodes[0].wait_for_disconnect()\n+        assert_equal(len(self.nodes[0].getpeerinfo()), 2)\n+        print \"Peer 0 disconnected after downloading old block too many times\"\n+\n+        # Requesting the current block on test_nodes[1] should succeed indefinitely,\n+        # even when over the max upload target.\n+        # We'll try 200 times\n+        getdata_request.inv = [CInv(2, big_new_block)]\n+        for i in xrange(200):\n+            test_nodes[1].send_message(getdata_request)\n+            test_nodes[1].sync_with_ping()\n+            assert_equal(test_nodes[1].block_receive_map[big_new_block], i+1)\n+\n+        print \"Peer 1 able to repeatedly download new block\"\n+\n+        # But if test_nodes[1] tries for an old block, it gets disconnected too.\n+        getdata_request.inv = [CInv(2, big_old_block)]\n+        test_nodes[1].send_message(getdata_request)\n+        test_nodes[1].wait_for_disconnect()\n+        assert_equal(len(self.nodes[0].getpeerinfo()), 1)\n+        \n+        print \"Peer 1 disconnected after trying to download old block\"\n+\n+        print \"Advancing system time on node to clear counters...\"\n+\n+        # If we advance the time by 24 hours, then the counters should reset,\n+        # and test_nodes[2] should be able to retrieve the old block.\n+        self.nodes[0].setmocktime(int(time.time()))\n+        test_nodes[2].sync_with_ping()\n+        test_nodes[2].send_message(getdata_request)\n+        test_nodes[2].sync_with_ping()\n+        assert_equal(test_nodes[2].block_receive_map[big_old_block], 1)\n+\n+        print \"Peer 2 able to download old block\"\n+\n+        [c.disconnect_node() for c in connections]\n+\n+if __name__ == '__main__':\n+    MaxUploadTest().main()"
      }
    ]
  },
  {
    "sha": "c8322ff7f7544ac38cdc8df89058f434bb1498e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODMyMmZmN2Y3NTQ0YWMzOGNkYzhkZjg5MDU4ZjQzNGJiMTQ5OGU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T16:24:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T16:25:19Z"
      },
      "message": "Merge pull request #6888\n\n143d173 Use BOOST_CHECK_MESSAGE() rather than BOOST_CHECK() in alerts_tests.cpp and initialize strMiscWarning before calling PartitionCheck().\" (Eric Lombrozo)",
      "tree": {
        "sha": "f8e27f0bdda73b79a88877f5ac6f18a8f0fd6008",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8e27f0bdda73b79a88877f5ac6f18a8f0fd6008"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8322ff7f7544ac38cdc8df89058f434bb1498e6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLlPvAAoJEHSBCwEjRsmmJqgIAL8fYsH8whSg31/W9ST1ps6B\nn7MiEdL0fXnzRLO2C68ejVH/oxF0zGANjlo37slEvGTN0XX+cCbldDawyum3DaJw\nCFSwuvroLRkQ1/STas3kTfCg3m6ZHz2tYxm52Q2eEQliFcv48UhcsMckcrXteOCV\n11H8W7+0x6ARMM24nGQsDGu8t+u4AHqvbpBXQJC4c2Afc/BZ178cr1QDF4T0ZiUf\nDxc67+zu4zWGSNLk/0KTlGVmlHRgpc/1TIbsXkCnCIh7eetvKIUWjqqwQdNeMar4\nV2AziZqboCT2vsT9fJW+a1AadWSbUTI4lnmfvTTVWSFN2K6s073NdVYwW1EuDfc=\n=gd+Q\n-----END PGP SIGNATURE-----",
        "payload": "tree f8e27f0bdda73b79a88877f5ac6f18a8f0fd6008\nparent ff057f41aa14fcedc40dd14d70242cf6b88601dc\nparent 143d17396906835c3a3ccd59e202f5327c05f63f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445876690 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445876719 +0100\n\nMerge pull request #6888\n\n143d173 Use BOOST_CHECK_MESSAGE() rather than BOOST_CHECK() in alerts_tests.cpp and initialize strMiscWarning before calling PartitionCheck().\" (Eric Lombrozo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8322ff7f7544ac38cdc8df89058f434bb1498e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8322ff7f7544ac38cdc8df89058f434bb1498e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8322ff7f7544ac38cdc8df89058f434bb1498e6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff057f41aa14fcedc40dd14d70242cf6b88601dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff057f41aa14fcedc40dd14d70242cf6b88601dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff057f41aa14fcedc40dd14d70242cf6b88601dc"
      },
      {
        "sha": "143d17396906835c3a3ccd59e202f5327c05f63f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/143d17396906835c3a3ccd59e202f5327c05f63f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/143d17396906835c3a3ccd59e202f5327c05f63f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "468eda1c9bbee675d1be6186e7a218966a6bc4e3",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8322ff7f7544ac38cdc8df89058f434bb1498e6/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8322ff7f7544ac38cdc8df89058f434bb1498e6/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=c8322ff7f7544ac38cdc8df89058f434bb1498e6",
        "patch": "@@ -217,10 +217,12 @@ BOOST_AUTO_TEST_CASE(PartitionAlert)\n         // use them\n     }\n \n+    strMiscWarning = \"\";\n+\n     // Test 1: chain with blocks every nPowTargetSpacing seconds,\n     // as normal, no worries:\n     PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n-    BOOST_CHECK(strMiscWarning.empty());\n+    BOOST_CHECK_MESSAGE(strMiscWarning.empty(), strMiscWarning);\n \n     // Test 2: go 3.5 hours without a block, expect a warning:\n     now += 3*60*60+30*60;"
      }
    ]
  },
  {
    "sha": "dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmM1ZWU4MjFlY2RkNzIwYjRkOGVmOWRjOGI2OGQ3Y2QxYjg3ODM5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T16:41:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T16:42:00Z"
      },
      "message": "Merge pull request #6621\n\ne04b0b6 added OS X documentation to doc/init.md (Kevin Cooper)\nd4aa54c added org.bitcoin.bitcoind.plist for launchd (OS X) (Kevin Cooper)",
      "tree": {
        "sha": "cf6d863ae51fbce2b1a4fb4411bae41f6cfe53fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf6d863ae51fbce2b1a4fb4411bae41f6cfe53fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLlfYAAoJEHSBCwEjRsmmuJsIAKbvlK/q5mMx3V00Xb7WFYMd\nUaNIcHZaVTKyXl4G1z4goyLKP/ueL6/rer7EOpz91IeGO1KVOSJ7suzxVGXvizkf\n+wyOWDDFQl9ltVBfJPEEe1ZdXsOe7TJ8XuC/92dmoLSg6ZX7cZxFiBS4J33Mfpo8\n6FRCU37B3OW9xJ6xJy2S085Sh/+fCnwhHV34LUuhMhjcPYRUeRqPR4cemrubNkIq\nudh4UakYLyV/nSUifYSLGSGJCpItTRrsJvBqsQTOd0+dALnnqk/X2tqDu2tmgCf4\npFvQP6KL6zEejywJaxGjTXo1GLHZz9jXiDvkUncVeLmKmRSxnDkMZOR/mKNYjvc=\n=QmhN\n-----END PGP SIGNATURE-----",
        "payload": "tree cf6d863ae51fbce2b1a4fb4411bae41f6cfe53fe\nparent c8322ff7f7544ac38cdc8df89058f434bb1498e6\nparent e04b0b6b835483e7052a24b0224a6023e233d049\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445877708 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445877720 +0100\n\nMerge pull request #6621\n\ne04b0b6 added OS X documentation to doc/init.md (Kevin Cooper)\nd4aa54c added org.bitcoin.bitcoind.plist for launchd (OS X) (Kevin Cooper)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8322ff7f7544ac38cdc8df89058f434bb1498e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8322ff7f7544ac38cdc8df89058f434bb1498e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8322ff7f7544ac38cdc8df89058f434bb1498e6"
      },
      {
        "sha": "e04b0b6b835483e7052a24b0224a6023e233d049",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e04b0b6b835483e7052a24b0224a6023e233d049",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e04b0b6b835483e7052a24b0224a6023e233d049"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 38,
      "deletions": 1
    },
    "files": [
      {
        "sha": "eb5d30accef8bfc9dfbf7e4b38b0ca5b924fa508",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
        "patch": "@@ -5,6 +5,7 @@ Upstart: bitcoind.conf\n OpenRC:  bitcoind.openrc\n          bitcoind.openrcconf\n CentOS:  bitcoind.init\n+OS X:    org.bitcoin.bitcoind.plist\n \n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "e94cd4466d226a992e2bb2e24d594dcb49b58dac",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
        "patch": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+\t<key>Label</key>\n+\t<string>org.bitcoin.bitcoind</string>\n+\t<key>ProgramArguments</key>\n+\t<array>\n+\t\t<string>/usr/local/bin/bitcoind</string>\n+\t\t<string>-daemon</string>\n+\t</array>\n+\t<key>RunAtLoad</key>\n+\t<true/>\n+</dict>\n+</plist>"
      },
      {
        "sha": "e3db5b05efcd6f93eaf114d731cf090a4882d07f",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
        "patch": "@@ -13,8 +13,9 @@ can be found in the contrib/init folder.\n 1. Service User\n ---------------------------------\n \n-All three startup configurations assume the existence of a \"bitcoin\" user\n+All three Linux startup configurations assume the existence of a \"bitcoin\" user\n and group.  They must be created before attempting to use these scripts.\n+The OS X configuration assumes bitcoind will be set up for the current user.\n \n 2. Configuration\n ---------------------------------\n@@ -48,6 +49,8 @@ see `contrib/debian/examples/bitcoin.conf`.\n 3. Paths\n ---------------------------------\n \n+3a) Linux\n+\n All three configurations assume several paths that might need to be adjusted.\n \n Binary:              `/usr/bin/bitcoind`  \n@@ -62,6 +65,13 @@ reasons to make the configuration file and data directory only readable by the\n bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n can then be controlled by group membership.\n \n+3b) Mac OS X\n+\n+Binary:              `/usr/local/bin/bitcoind`  \n+Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n+Data directory:      `~/Library/Application Support/Bitcoin`\n+Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+\n 4. Installing Service Configuration\n -----------------------------------\n \n@@ -97,6 +107,17 @@ Using this script, you can adjust the path and flags to the bitcoind program by\n setting the BITCOIND and FLAGS environment variables in the file\n /etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n \n+4e) Mac OS X\n+\n+Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n+running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n+\n+This Launch Agent will cause bitcoind to start whenever the user logs in.\n+\n+NOTE: This approach is intended for those wanting to run bitcoind as the current user.\n+You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n+Launch Daemon with a dedicated bitcoin user.\n+\n 5. Auto-respawn\n -----------------------------------\n "
      }
    ]
  },
  {
    "sha": "7939164d8985a499f710db2c7ce6aa80cc92d819",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTM5MTY0ZDg5ODVhNDk5ZjcxMGRiMmM3Y2U2YWE4MGNjOTJkODE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T16:46:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T16:54:00Z"
      },
      "message": "Merge pull request #6622\n\n17a073a Add RPC test for -maxuploadtarget (Suhas Daftuar)\n872fee3 Introduce -maxuploadtarget (Jonas Schnelli)",
      "tree": {
        "sha": "b5d423e947f62142d46dcd3b8db09400a5407770",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5d423e947f62142d46dcd3b8db09400a5407770"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7939164d8985a499f710db2c7ce6aa80cc92d819",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLlqoAAoJEHSBCwEjRsmm6eQIALlomwkHknO2U6y4Ug9jGyR2\nAURXF87KTGmsydOLA/d1VddaE/TA3HMLrMR+21jfAJ41uxrkBEb1cwj25msvoIPS\ngoeXKsfmgsycPP67I2m4DWeg7yNBazxiJWv2XQj5icCVTzjR5CAxcdn81e209UAd\nSrWbfDGSa1uRv6FTp6sXYlL2AvspbhEnaT+y0PRvF1VKO3ZTaRybns+Q0EBgN69F\nLzLVobD00yQ4G/8zzwjHEhlfazGm0tLoN8Qa7lfOouqItxNtcJT0ax3v3Ldkfj9o\nM0NvqzSzCRnoSy1QtDsb20Rnv5CBhn2WIIuRuFaLuSOIrpqHYyZ21qd1CoSNcrY=\n=lVzv\n-----END PGP SIGNATURE-----",
        "payload": "tree b5d423e947f62142d46dcd3b8db09400a5407770\nparent dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839\nparent 17a073ae0692fe378827e3c4dae01294509e19e9\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445877980 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445878440 +0100\n\nMerge pull request #6622\n\n17a073a Add RPC test for -maxuploadtarget (Suhas Daftuar)\n872fee3 Introduce -maxuploadtarget (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7939164d8985a499f710db2c7ce6aa80cc92d819",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7939164d8985a499f710db2c7ce6aa80cc92d819",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7939164d8985a499f710db2c7ce6aa80cc92d819/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dbc5ee821ecdd720b4d8ef9dc8b68d7cd1b87839"
      },
      {
        "sha": "17a073ae0692fe378827e3c4dae01294509e19e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17a073ae0692fe378827e3c4dae01294509e19e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17a073ae0692fe378827e3c4dae01294509e19e9"
      }
    ],
    "stats": {
      "total": 395,
      "additions": 394,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3059fee42662e6010e9056ffcc2894afdaaab38e",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7939164d8985a499f710db2c7ce6aa80cc92d819/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7939164d8985a499f710db2c7ce6aa80cc92d819/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=7939164d8985a499f710db2c7ce6aa80cc92d819",
        "patch": "@@ -84,12 +84,13 @@\n     'keypool.py',\n     'receivedby.py',\n #    'rpcbind_test.py', #temporary, bug in libevent, see #6655\n-#   'script_test.py', #used for manual comparison of 2 binaries\n+#    'script_test.py', #used for manual comparison of 2 binaries\n     'smartfees.py',\n     'maxblocksinflight.py',\n     'invalidblockrequest.py',\n     'p2p-acceptblock.py',\n     'mempool_packages.py',\n+    'maxuploadtarget.py',\n ]\n \n #Enable ZMQ tests"
      },
      {
        "sha": "67c4a509854c84c487761868c82c5ed5fac0c680",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "added",
        "additions": 248,
        "deletions": 0,
        "changes": 248,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7939164d8985a499f710db2c7ce6aa80cc92d819/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7939164d8985a499f710db2c7ce6aa80cc92d819/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=7939164d8985a499f710db2c7ce6aa80cc92d819",
        "patch": "@@ -0,0 +1,248 @@\n+#!/usr/bin/env python2\n+#\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+from test_framework.comptool import wait_until\n+import time\n+\n+'''\n+Test behavior of -maxuploadtarget.\n+\n+* Verify that getdata requests for old blocks (>1week) are dropped\n+if uploadtarget has been reached.\n+* Verify that getdata requests for recent blocks are respecteved even\n+if uploadtarget has been reached.\n+* Verify that the upload counters are reset after 24 hours.\n+'''\n+\n+# TestNode: bare-bones \"peer\".  Used mostly as a conduit for a test to sending\n+# p2p messages to a node, generating the messages in the main testing logic.\n+class TestNode(NodeConnCB):\n+    def __init__(self):\n+        NodeConnCB.__init__(self)\n+        self.create_callback_map()\n+        self.connection = None\n+        self.ping_counter = 1\n+        self.last_pong = msg_pong()\n+        self.block_receive_map = {}\n+\n+    def add_connection(self, conn):\n+        self.connection = conn\n+        self.peer_disconnected = False\n+\n+    def on_inv(self, conn, message):\n+        pass\n+\n+    # Track the last getdata message we receive (used in the test)\n+    def on_getdata(self, conn, message):\n+        self.last_getdata = message\n+\n+    def on_block(self, conn, message):\n+        message.block.calc_sha256()\n+        try:\n+            self.block_receive_map[message.block.sha256] += 1\n+        except KeyError as e:\n+            self.block_receive_map[message.block.sha256] = 1\n+\n+    # Spin until verack message is received from the node.\n+    # We use this to signal that our test can begin. This\n+    # is called from the testing thread, so it needs to acquire\n+    # the global lock.\n+    def wait_for_verack(self):\n+        def veracked():\n+            return self.verack_received\n+        return wait_until(veracked, timeout=10)\n+\n+    def wait_for_disconnect(self):\n+        def disconnected():\n+            return self.peer_disconnected\n+        return wait_until(disconnected, timeout=10)\n+\n+    # Wrapper for the NodeConn's send_message function\n+    def send_message(self, message):\n+        self.connection.send_message(message)\n+\n+    def on_pong(self, conn, message):\n+        self.last_pong = message\n+\n+    def on_close(self, conn):\n+        self.peer_disconnected = True\n+\n+    # Sync up with the node after delivery of a block\n+    def sync_with_ping(self, timeout=30):\n+        def received_pong():\n+            return (self.last_pong.nonce == self.ping_counter)\n+        self.connection.send_message(msg_ping(nonce=self.ping_counter))\n+        success = wait_until(received_pong, timeout)\n+        self.ping_counter += 1\n+        return success\n+\n+class MaxUploadTest(BitcoinTestFramework):\n+    def __init__(self):\n+        self.utxo = []\n+\n+        # Some pre-processing to create a bunch of OP_RETURN txouts to insert into transactions we create\n+        # So we have big transactions and full blocks to fill up our block files\n+        # create one script_pubkey\n+        script_pubkey = \"6a4d0200\" #OP_RETURN OP_PUSH2 512 bytes\n+        for i in xrange (512):\n+            script_pubkey = script_pubkey + \"01\"\n+        # concatenate 128 txouts of above script_pubkey which we'll insert before the txout for change\n+        self.txouts = \"81\"\n+        for k in xrange(128):\n+            # add txout value\n+            self.txouts = self.txouts + \"0000000000000000\"\n+            # add length of script_pubkey\n+            self.txouts = self.txouts + \"fd0402\"\n+            # add script_pubkey\n+            self.txouts = self.txouts + script_pubkey\n+ \n+    def add_options(self, parser):\n+        parser.add_option(\"--testbinary\", dest=\"testbinary\",\n+                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n+                          help=\"bitcoind binary to test\")\n+\n+    def setup_chain(self):\n+        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def setup_network(self):\n+        # Start a node with maxuploadtarget of 200 MB (/24h)\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-debug\", \"-maxuploadtarget=200\", \"-blockmaxsize=999000\"]))\n+\n+    def mine_full_block(self, node, address):\n+        # Want to create a full block\n+        # We'll generate a 66k transaction below, and 14 of them is close to the 1MB block limit\n+        for j in xrange(14):\n+            if len(self.utxo) < 14:\n+                self.utxo = node.listunspent()\n+            inputs=[]\n+            outputs = {}\n+            t = self.utxo.pop()\n+            inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]})\n+            remchange = t[\"amount\"] - Decimal(\"0.001000\")\n+            outputs[address]=remchange\n+            # Create a basic transaction that will send change back to ourself after account for a fee\n+            # And then insert the 128 generated transaction outs in the middle rawtx[92] is where the #\n+            # of txouts is stored and is the only thing we overwrite from the original transaction\n+            rawtx = node.createrawtransaction(inputs, outputs)\n+            newtx = rawtx[0:92]\n+            newtx = newtx + self.txouts\n+            newtx = newtx + rawtx[94:]\n+            # Appears to be ever so slightly faster to sign with SIGHASH_NONE\n+            signresult = node.signrawtransaction(newtx,None,None,\"NONE\")\n+            txid = node.sendrawtransaction(signresult[\"hex\"], True)\n+        # Mine a full sized block which will be these transactions we just created\n+        node.generate(1)\n+\n+    def run_test(self):\n+        # Before we connect anything, we first set the time on the node\n+        # to be in the past, otherwise things break because the CNode\n+        # time counters can't be reset backward after initialization\n+        old_time = int(time.time() - 2*60*60*24*7)\n+        self.nodes[0].setmocktime(old_time)\n+\n+        # Generate some old blocks\n+        self.nodes[0].generate(130)\n+\n+        # test_nodes[0] will only request old blocks\n+        # test_nodes[1] will only request new blocks\n+        # test_nodes[2] will test resetting the counters\n+        test_nodes = []\n+        connections = []\n+\n+        for i in xrange(3):\n+            test_nodes.append(TestNode())\n+            connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], test_nodes[i]))\n+            test_nodes[i].add_connection(connections[i])\n+\n+        NetworkThread().start() # Start up network handling in another thread\n+        [x.wait_for_verack() for x in test_nodes]\n+\n+        # Test logic begins here\n+\n+        # Now mine a big block\n+        self.mine_full_block(self.nodes[0], self.nodes[0].getnewaddress())\n+\n+        # Store the hash; we'll request this later\n+        big_old_block = self.nodes[0].getbestblockhash()\n+        old_block_size = self.nodes[0].getblock(big_old_block, True)['size']\n+        big_old_block = int(big_old_block, 16)\n+\n+        # Advance to two days ago\n+        self.nodes[0].setmocktime(int(time.time()) - 2*60*60*24)\n+\n+        # Mine one more block, so that the prior block looks old\n+        self.mine_full_block(self.nodes[0], self.nodes[0].getnewaddress())\n+\n+        # We'll be requesting this new block too\n+        big_new_block = self.nodes[0].getbestblockhash()\n+        new_block_size = self.nodes[0].getblock(big_new_block)['size']\n+        big_new_block = int(big_new_block, 16)\n+\n+        # test_nodes[0] will test what happens if we just keep requesting the\n+        # the same big old block too many times (expect: disconnect)\n+\n+        getdata_request = msg_getdata()\n+        getdata_request.inv.append(CInv(2, big_old_block))\n+\n+        max_bytes_per_day = 200*1024*1024\n+        max_bytes_available = max_bytes_per_day - 144*1000000\n+        success_count = max_bytes_available / old_block_size\n+        \n+        # 144MB will be reserved for relaying new blocks, so expect this to\n+        # succeed for ~70 tries.\n+        for i in xrange(success_count):\n+            test_nodes[0].send_message(getdata_request)\n+            test_nodes[0].sync_with_ping()\n+            assert_equal(test_nodes[0].block_receive_map[big_old_block], i+1)\n+\n+        assert_equal(len(self.nodes[0].getpeerinfo()), 3)\n+        # At most a couple more tries should succeed (depending on how long \n+        # the test has been running so far).\n+        for i in xrange(3):\n+            test_nodes[0].send_message(getdata_request)\n+        test_nodes[0].wait_for_disconnect()\n+        assert_equal(len(self.nodes[0].getpeerinfo()), 2)\n+        print \"Peer 0 disconnected after downloading old block too many times\"\n+\n+        # Requesting the current block on test_nodes[1] should succeed indefinitely,\n+        # even when over the max upload target.\n+        # We'll try 200 times\n+        getdata_request.inv = [CInv(2, big_new_block)]\n+        for i in xrange(200):\n+            test_nodes[1].send_message(getdata_request)\n+            test_nodes[1].sync_with_ping()\n+            assert_equal(test_nodes[1].block_receive_map[big_new_block], i+1)\n+\n+        print \"Peer 1 able to repeatedly download new block\"\n+\n+        # But if test_nodes[1] tries for an old block, it gets disconnected too.\n+        getdata_request.inv = [CInv(2, big_old_block)]\n+        test_nodes[1].send_message(getdata_request)\n+        test_nodes[1].wait_for_disconnect()\n+        assert_equal(len(self.nodes[0].getpeerinfo()), 1)\n+        \n+        print \"Peer 1 disconnected after trying to download old block\"\n+\n+        print \"Advancing system time on node to clear counters...\"\n+\n+        # If we advance the time by 24 hours, then the counters should reset,\n+        # and test_nodes[2] should be able to retrieve the old block.\n+        self.nodes[0].setmocktime(int(time.time()))\n+        test_nodes[2].sync_with_ping()\n+        test_nodes[2].send_message(getdata_request)\n+        test_nodes[2].sync_with_ping()\n+        assert_equal(test_nodes[2].block_receive_map[big_old_block], 1)\n+\n+        print \"Peer 2 able to download old block\"\n+\n+        [c.disconnect_node() for c in connections]\n+\n+if __name__ == '__main__':\n+    MaxUploadTest().main()"
      },
      {
        "sha": "0210ac1135d53d36e2aabc0ce79656f941bc0e14",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7939164d8985a499f710db2c7ce6aa80cc92d819/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7939164d8985a499f710db2c7ce6aa80cc92d819/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7939164d8985a499f710db2c7ce6aa80cc92d819",
        "patch": "@@ -369,6 +369,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-whitebind=<addr>\", _(\"Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\"));\n     strUsage += HelpMessageOpt(\"-whitelist=<netmask>\", _(\"Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.\") +\n         \" \" + _(\"Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway\"));\n+    strUsage += HelpMessageOpt(\"-maxuploadtarget=<n>\", strprintf(_(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\"), 0));\n \n #ifdef ENABLE_WALLET\n     strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n@@ -1174,6 +1175,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         RegisterValidationInterface(pzmqNotificationInterface);\n     }\n #endif\n+    if (mapArgs.count(\"-maxuploadtarget\")) {\n+        CNode::SetMaxOutboundTarget(GetArg(\"-maxuploadtarget\", 0)*1024*1024);\n+    }\n \n     // ********************************************************* Step 7: load block chain\n "
      },
      {
        "sha": "e038fe3663f1a0d2673dee4f9991e3f268eb42ec",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7939164d8985a499f710db2c7ce6aa80cc92d819/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7939164d8985a499f710db2c7ce6aa80cc92d819/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7939164d8985a499f710db2c7ce6aa80cc92d819",
        "patch": "@@ -3835,6 +3835,16 @@ void static ProcessGetData(CNode* pfrom)\n                         }\n                     }\n                 }\n+                // disconnect node in case we have reached the outbound limit for serving historical blocks\n+                static const int nOneWeek = 7 * 24 * 60 * 60; // assume > 1 week = historical\n+                if (send && CNode::OutboundTargetReached(true) && ( ((pindexBestHeader != NULL) && (pindexBestHeader->GetBlockTime() - mi->second->GetBlockTime() > nOneWeek)) || inv.type == MSG_FILTERED_BLOCK) )\n+                {\n+                    LogPrint(\"net\", \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n+\n+                    //disconnect node\n+                    pfrom->fDisconnect = true;\n+                    send = false;\n+                }\n                 // Pruned nodes may have deleted the block, so check whether\n                 // it's available before trying to send.\n                 if (send && (mi->second->nStatus & BLOCK_HAVE_DATA))"
      },
      {
        "sha": "e18e8d0e29aa30a46b931b223137b5b1ab57465d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7939164d8985a499f710db2c7ce6aa80cc92d819/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7939164d8985a499f710db2c7ce6aa80cc92d819/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=7939164d8985a499f710db2c7ce6aa80cc92d819",
        "patch": "@@ -12,6 +12,7 @@\n #include \"addrman.h\"\n #include \"chainparams.h\"\n #include \"clientversion.h\"\n+#include \"consensus/consensus.h\"\n #include \"crypto/common.h\"\n #include \"hash.h\"\n #include \"primitives/transaction.h\"\n@@ -326,6 +327,11 @@ uint64_t CNode::nTotalBytesSent = 0;\n CCriticalSection CNode::cs_totalBytesRecv;\n CCriticalSection CNode::cs_totalBytesSent;\n \n+uint64_t CNode::nMaxOutboundLimit = 0;\n+uint64_t CNode::nMaxOutboundTotalBytesSentInCycle = 0;\n+uint64_t CNode::nMaxOutboundTimeframe = 60*60*24; //1 day\n+uint64_t CNode::nMaxOutboundCycleStartTime = 0;\n+\n CNode* FindNode(const CNetAddr& ip)\n {\n     LOCK(cs_vNodes);\n@@ -2083,6 +2089,94 @@ void CNode::RecordBytesSent(uint64_t bytes)\n {\n     LOCK(cs_totalBytesSent);\n     nTotalBytesSent += bytes;\n+\n+    uint64_t now = GetTime();\n+    if (nMaxOutboundCycleStartTime + nMaxOutboundTimeframe < now)\n+    {\n+        // timeframe expired, reset cycle\n+        nMaxOutboundCycleStartTime = now;\n+        nMaxOutboundTotalBytesSentInCycle = 0;\n+    }\n+\n+    // TODO, exclude whitebind peers\n+    nMaxOutboundTotalBytesSentInCycle += bytes;\n+}\n+\n+void CNode::SetMaxOutboundTarget(uint64_t limit)\n+{\n+    LOCK(cs_totalBytesSent);\n+    uint64_t recommendedMinimum = (nMaxOutboundTimeframe / 600) * MAX_BLOCK_SIZE;\n+    nMaxOutboundLimit = limit;\n+\n+    if (limit < recommendedMinimum)\n+        LogPrintf(\"Max outbound target is very small (%s) and will be overshot. Recommended minimum is %s\\n.\", nMaxOutboundLimit, recommendedMinimum);\n+}\n+\n+uint64_t CNode::GetMaxOutboundTarget()\n+{\n+    LOCK(cs_totalBytesSent);\n+    return nMaxOutboundLimit;\n+}\n+\n+uint64_t CNode::GetMaxOutboundTimeframe()\n+{\n+    LOCK(cs_totalBytesSent);\n+    return nMaxOutboundTimeframe;\n+}\n+\n+uint64_t CNode::GetMaxOutboundTimeLeftInCycle()\n+{\n+    LOCK(cs_totalBytesSent);\n+    if (nMaxOutboundLimit == 0)\n+        return 0;\n+\n+    if (nMaxOutboundCycleStartTime == 0)\n+        return nMaxOutboundTimeframe;\n+\n+    uint64_t cycleEndTime = nMaxOutboundCycleStartTime + nMaxOutboundTimeframe;\n+    uint64_t now = GetTime();\n+    return (cycleEndTime < now) ? 0 : cycleEndTime - GetTime();\n+}\n+\n+void CNode::SetMaxOutboundTimeframe(uint64_t timeframe)\n+{\n+    LOCK(cs_totalBytesSent);\n+    if (nMaxOutboundTimeframe != timeframe)\n+    {\n+        // reset measure-cycle in case of changing\n+        // the timeframe\n+        nMaxOutboundCycleStartTime = GetTime();\n+    }\n+    nMaxOutboundTimeframe = timeframe;\n+}\n+\n+bool CNode::OutboundTargetReached(bool historicalBlockServingLimit)\n+{\n+    LOCK(cs_totalBytesSent);\n+    if (nMaxOutboundLimit == 0)\n+        return false;\n+\n+    if (historicalBlockServingLimit)\n+    {\n+        // keep a large enought buffer to at least relay each block once\n+        uint64_t timeLeftInCycle = GetMaxOutboundTimeLeftInCycle();\n+        uint64_t buffer = timeLeftInCycle / 600 * MAX_BLOCK_SIZE;\n+        if (buffer >= nMaxOutboundLimit || nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit - buffer)\n+            return true;\n+    }\n+    else if (nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit)\n+        return true;\n+\n+    return false;\n+}\n+\n+uint64_t CNode::GetOutboundTargetBytesLeft()\n+{\n+    LOCK(cs_totalBytesSent);\n+    if (nMaxOutboundLimit == 0)\n+        return 0;\n+\n+    return (nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit) ? 0 : nMaxOutboundLimit - nMaxOutboundTotalBytesSentInCycle;\n }\n \n uint64_t CNode::GetTotalBytesRecv()"
      },
      {
        "sha": "f90b3385afea1f1358d161cd8623c52f938992e0",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7939164d8985a499f710db2c7ce6aa80cc92d819/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7939164d8985a499f710db2c7ce6aa80cc92d819/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=7939164d8985a499f710db2c7ce6aa80cc92d819",
        "patch": "@@ -400,6 +400,12 @@ class CNode\n     static uint64_t nTotalBytesRecv;\n     static uint64_t nTotalBytesSent;\n \n+    // outbound limit & stats\n+    static uint64_t nMaxOutboundTotalBytesSentInCycle;\n+    static uint64_t nMaxOutboundCycleStartTime;\n+    static uint64_t nMaxOutboundLimit;\n+    static uint64_t nMaxOutboundTimeframe;\n+\n     CNode(const CNode&);\n     void operator=(const CNode&);\n \n@@ -701,6 +707,27 @@ class CNode\n \n     static uint64_t GetTotalBytesRecv();\n     static uint64_t GetTotalBytesSent();\n+\n+    //!set the max outbound target in bytes\n+    static void SetMaxOutboundTarget(uint64_t limit);\n+    static uint64_t GetMaxOutboundTarget();\n+\n+    //!set the timeframe for the max outbound target\n+    static void SetMaxOutboundTimeframe(uint64_t timeframe);\n+    static uint64_t GetMaxOutboundTimeframe();\n+\n+    //!check if the outbound target is reached\n+    // if param historicalBlockServingLimit is set true, the function will\n+    // response true if the limit for serving historical blocks has been reached\n+    static bool OutboundTargetReached(bool historicalBlockServingLimit);\n+\n+    //!response the bytes left in the current max outbound cycle\n+    // in case of no limit, it will always response 0\n+    static uint64_t GetOutboundTargetBytesLeft();\n+\n+    //!response the time in second left in the current max outbound cycle\n+    // in case of no limit, it will always response 0\n+    static uint64_t GetMaxOutboundTimeLeftInCycle();\n };\n \n "
      },
      {
        "sha": "6b4815ebd8fa763a5b4b435c840aa6c54abd6d77",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7939164d8985a499f710db2c7ce6aa80cc92d819/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7939164d8985a499f710db2c7ce6aa80cc92d819/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=7939164d8985a499f710db2c7ce6aa80cc92d819",
        "patch": "@@ -379,6 +379,15 @@ UniValue getnettotals(const UniValue& params, bool fHelp)\n     obj.push_back(Pair(\"totalbytesrecv\", CNode::GetTotalBytesRecv()));\n     obj.push_back(Pair(\"totalbytessent\", CNode::GetTotalBytesSent()));\n     obj.push_back(Pair(\"timemillis\", GetTimeMillis()));\n+\n+    UniValue outboundLimit(UniValue::VOBJ);\n+    outboundLimit.push_back(Pair(\"timeframe\", CNode::GetMaxOutboundTimeframe()));\n+    outboundLimit.push_back(Pair(\"target\", CNode::GetMaxOutboundTarget()));\n+    outboundLimit.push_back(Pair(\"target_reached\", CNode::OutboundTargetReached(false)));\n+    outboundLimit.push_back(Pair(\"serve_historical_blocks\", !CNode::OutboundTargetReached(true)));\n+    outboundLimit.push_back(Pair(\"bytes_left_in_cycle\", CNode::GetOutboundTargetBytesLeft()));\n+    outboundLimit.push_back(Pair(\"time_left_in_cycle\", CNode::GetMaxOutboundTimeLeftInCycle()));\n+    obj.push_back(Pair(\"uploadtarget\", outboundLimit));\n     return obj;\n }\n "
      }
    ]
  },
  {
    "sha": "7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmJjN2MzMTRmNGViYjFlN2ZlODgyYTBhMmFhZTVhNTY1NWYyOTcy",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-10-23T17:07:36Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-10-26T19:05:37Z"
      },
      "message": "Add option for microsecond precision in debug.log",
      "tree": {
        "sha": "962a5af7cb1251b5166915474c80d4b54277fc52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/962a5af7cb1251b5166915474c80d4b54277fc52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 22,
      "deletions": 3
    },
    "files": [
      {
        "sha": "bfa9c95e3bc63761d9d9aa2063a729ad53eeb53f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -428,6 +428,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), 1));\n     if (showDebug)\n     {\n+        strUsage += HelpMessageOpt(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS));\n         strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", 15));\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n@@ -726,6 +727,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Set this early so that parameter interactions go to console\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n+    fLogTimeMicros = GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n     fLogIPs = GetBoolArg(\"-logips\", false);\n \n     LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");"
      },
      {
        "sha": "e8514a2ef0ea6902cfbee58b579dc40dbc1d9e0b",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -108,6 +108,7 @@ bool fDaemon = false;\n bool fServer = false;\n string strMiscWarning;\n bool fLogTimestamps = false;\n+bool fLogTimeMicros = DEFAULT_LOGTIMEMICROS;\n bool fLogIPs = false;\n volatile bool fReopenDebugLog = false;\n CTranslationInterface translationInterface;\n@@ -263,9 +264,13 @@ static std::string LogTimestampStr(const std::string &str, bool *fStartedNewLine\n     if (!fLogTimestamps)\n         return str;\n \n-    if (*fStartedNewLine)\n-        strStamped =  DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()) + ' ' + str;\n-    else\n+    if (*fStartedNewLine) {\n+        int64_t nTimeMicros = GetLogTimeMicros();\n+        strStamped = DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", nTimeMicros/1000000);\n+        if (fLogTimeMicros)\n+            strStamped += strprintf(\".%06d\", nTimeMicros%1000000);\n+        strStamped += ' ' + str;\n+    } else\n         strStamped = str;\n \n     if (!str.empty() && str[str.size()-1] == '\\n')"
      },
      {
        "sha": "b2779fe782d0dedddc34380972ad230a6b11a73c",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -28,6 +28,8 @@\n #include <boost/signals2/signal.hpp>\n #include <boost/thread/exceptions.hpp>\n \n+static const bool DEFAULT_LOGTIMEMICROS = false;\n+\n /** Signals for translation. */\n class CTranslationInterface\n {\n@@ -44,6 +46,7 @@ extern bool fPrintToDebugLog;\n extern bool fServer;\n extern std::string strMiscWarning;\n extern bool fLogTimestamps;\n+extern bool fLogTimeMicros;\n extern bool fLogIPs;\n extern volatile bool fReopenDebugLog;\n extern CTranslationInterface translationInterface;"
      },
      {
        "sha": "3202c47f1dc92ce9bc596957fe0d020af0c5b4da",
        "filename": "src/utiltime.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/utiltime.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/utiltime.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utiltime.cpp?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -40,6 +40,14 @@ int64_t GetTimeMicros()\n             boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();\n }\n \n+/** Return a time useful for the debug log */\n+int64_t GetLogTimeMicros()\n+{\n+    if (nMockTime) return nMockTime*1000000;\n+\n+    return GetTimeMicros();\n+}\n+\n void MilliSleep(int64_t n)\n {\n "
      },
      {
        "sha": "241b5211e90526c466127f7afc79a19af864c9b1",
        "filename": "src/utiltime.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/utiltime.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/utiltime.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utiltime.h?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -12,6 +12,7 @@\n int64_t GetTime();\n int64_t GetTimeMillis();\n int64_t GetTimeMicros();\n+int64_t GetLogTimeMicros();\n void SetMockTime(int64_t nMockTimeIn);\n void MilliSleep(int64_t n);\n "
      }
    ]
  },
  {
    "sha": "2b625510d37471d4eaf5f99c2311afbdcae448c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjYyNTUxMGQzNzQ3MWQ0ZWFmNWY5OWMyMzExYWZiZGNhZTQ0OGMy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T20:04:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-26T20:04:41Z"
      },
      "message": "Merge pull request #6881\n\n7bbc7c3 Add option for microsecond precision in debug.log (Suhas Daftuar)",
      "tree": {
        "sha": "77cd9b5aaeefcd75409dab1811a7b6985744276b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77cd9b5aaeefcd75409dab1811a7b6985744276b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b625510d37471d4eaf5f99c2311afbdcae448c2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLodZAAoJEHSBCwEjRsmmNyIH/j54h9Vjp22jHvcC8O0pN+2X\nkGcRB+EDwY8rm7zKvWIAIVRT5lp3VwlBMsOPLfpthy2TLB4esAMJ4rJIvjBWo2AL\nj+lHtU8YGrFqjCMWDLfKzS4w9LbzJ171E4KvY4HehBS91Jko/RmvBU9A3/F6eKYU\n3xzApqZpR+NGgbxCMJ4m23k9fxQhG4KWWrYEBfakJcK6ZemOgFP+g6ir/xNwpT30\nWNG9hE/9e4Ds/UbpI39plHUMPrVe931/WNFjglcreBPXy2tDz4fiAP0Z7R63mCCr\nRAxfvie64mMvjalE+vaMZLFNpY9qQgp3SOjQOlPi3pt+7ggTnqkgJIuUud4NJSM=\n=H4sY\n-----END PGP SIGNATURE-----",
        "payload": "tree 77cd9b5aaeefcd75409dab1811a7b6985744276b\nparent 7939164d8985a499f710db2c7ce6aa80cc92d819\nparent 7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445889873 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445889881 +0100\n\nMerge pull request #6881\n\n7bbc7c3 Add option for microsecond precision in debug.log (Suhas Daftuar)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b625510d37471d4eaf5f99c2311afbdcae448c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b625510d37471d4eaf5f99c2311afbdcae448c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b625510d37471d4eaf5f99c2311afbdcae448c2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7939164d8985a499f710db2c7ce6aa80cc92d819",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7939164d8985a499f710db2c7ce6aa80cc92d819",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7939164d8985a499f710db2c7ce6aa80cc92d819"
      },
      {
        "sha": "7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 22,
      "deletions": 3
    },
    "files": [
      {
        "sha": "920fc3069ecd87f00cb46540cd845baec45ec480",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2b625510d37471d4eaf5f99c2311afbdcae448c2",
        "patch": "@@ -431,6 +431,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), 1));\n     if (showDebug)\n     {\n+        strUsage += HelpMessageOpt(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS));\n         strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", 15));\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n@@ -728,6 +729,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Set this early so that parameter interactions go to console\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n+    fLogTimeMicros = GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n     fLogIPs = GetBoolArg(\"-logips\", false);\n \n     LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");"
      },
      {
        "sha": "e8514a2ef0ea6902cfbee58b579dc40dbc1d9e0b",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=2b625510d37471d4eaf5f99c2311afbdcae448c2",
        "patch": "@@ -108,6 +108,7 @@ bool fDaemon = false;\n bool fServer = false;\n string strMiscWarning;\n bool fLogTimestamps = false;\n+bool fLogTimeMicros = DEFAULT_LOGTIMEMICROS;\n bool fLogIPs = false;\n volatile bool fReopenDebugLog = false;\n CTranslationInterface translationInterface;\n@@ -263,9 +264,13 @@ static std::string LogTimestampStr(const std::string &str, bool *fStartedNewLine\n     if (!fLogTimestamps)\n         return str;\n \n-    if (*fStartedNewLine)\n-        strStamped =  DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()) + ' ' + str;\n-    else\n+    if (*fStartedNewLine) {\n+        int64_t nTimeMicros = GetLogTimeMicros();\n+        strStamped = DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", nTimeMicros/1000000);\n+        if (fLogTimeMicros)\n+            strStamped += strprintf(\".%06d\", nTimeMicros%1000000);\n+        strStamped += ' ' + str;\n+    } else\n         strStamped = str;\n \n     if (!str.empty() && str[str.size()-1] == '\\n')"
      },
      {
        "sha": "b2779fe782d0dedddc34380972ad230a6b11a73c",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=2b625510d37471d4eaf5f99c2311afbdcae448c2",
        "patch": "@@ -28,6 +28,8 @@\n #include <boost/signals2/signal.hpp>\n #include <boost/thread/exceptions.hpp>\n \n+static const bool DEFAULT_LOGTIMEMICROS = false;\n+\n /** Signals for translation. */\n class CTranslationInterface\n {\n@@ -44,6 +46,7 @@ extern bool fPrintToDebugLog;\n extern bool fServer;\n extern std::string strMiscWarning;\n extern bool fLogTimestamps;\n+extern bool fLogTimeMicros;\n extern bool fLogIPs;\n extern volatile bool fReopenDebugLog;\n extern CTranslationInterface translationInterface;"
      },
      {
        "sha": "3202c47f1dc92ce9bc596957fe0d020af0c5b4da",
        "filename": "src/utiltime.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/utiltime.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/utiltime.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utiltime.cpp?ref=2b625510d37471d4eaf5f99c2311afbdcae448c2",
        "patch": "@@ -40,6 +40,14 @@ int64_t GetTimeMicros()\n             boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();\n }\n \n+/** Return a time useful for the debug log */\n+int64_t GetLogTimeMicros()\n+{\n+    if (nMockTime) return nMockTime*1000000;\n+\n+    return GetTimeMicros();\n+}\n+\n void MilliSleep(int64_t n)\n {\n "
      },
      {
        "sha": "241b5211e90526c466127f7afc79a19af864c9b1",
        "filename": "src/utiltime.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/utiltime.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b625510d37471d4eaf5f99c2311afbdcae448c2/src/utiltime.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utiltime.h?ref=2b625510d37471d4eaf5f99c2311afbdcae448c2",
        "patch": "@@ -12,6 +12,7 @@\n int64_t GetTime();\n int64_t GetTimeMillis();\n int64_t GetTimeMicros();\n+int64_t GetLogTimeMicros();\n void SetMockTime(int64_t nMockTimeIn);\n void MilliSleep(int64_t n);\n "
      }
    ]
  },
  {
    "sha": "38369dda325d704041e7eb43222cdd5c23daa7c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODM2OWRkYTMyNWQ3MDQwNDFlN2ViNDMyMjJjZGQ1YzIzZGFhN2Mz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-27T07:42:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-27T07:48:12Z"
      },
      "message": "Merge pull request #6889\n\n0d699fc fix locking issue with new mempool limiting (Jonas Schnelli)",
      "tree": {
        "sha": "06e7c2f32145e6620c61f9a504436efbf99969b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06e7c2f32145e6620c61f9a504436efbf99969b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38369dda325d704041e7eb43222cdd5c23daa7c3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWLyw8AAoJEHSBCwEjRsmmC8AH/R8OlrWb/v4jJ15CjsYXVBhg\nQxBkuM8myeMYJyLXygE6Ap1VeFaTvpXCai2uM3yfFVHQO9tcnIGCstccyVd8geFl\njERWjCbBBr47alT1WfDCkYb/EBiCNxaVt9s151j+Qiw9Y8Qmj0e0K3rSi1Q30zI8\nzEMsPMBYYuZ2hMRezT5Xzae2oYX6wsZglejadqOvCtlgt8i4GEs5t7aEZu9UzxkP\npoqMVFjQdLlxQ17aLwekM0ihmo/1mE5/t1jqmJHYZmIBKjTotPs9KM60NolDJ2EO\nGcbhQJrmnOeVKe6idiULutrNeN79p8v7yOSvQgqv7u+0DBu+4Q9BQ+9w3RfX3Tc=\n=n7ZU\n-----END PGP SIGNATURE-----",
        "payload": "tree 06e7c2f32145e6620c61f9a504436efbf99969b5\nparent 2b625510d37471d4eaf5f99c2311afbdcae448c2\nparent 0d699fc821048ab9316b0004e6552c8f1dc5e5f4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445931744 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445932092 +0100\n\nMerge pull request #6889\n\n0d699fc fix locking issue with new mempool limiting (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38369dda325d704041e7eb43222cdd5c23daa7c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38369dda325d704041e7eb43222cdd5c23daa7c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38369dda325d704041e7eb43222cdd5c23daa7c3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b625510d37471d4eaf5f99c2311afbdcae448c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b625510d37471d4eaf5f99c2311afbdcae448c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b625510d37471d4eaf5f99c2311afbdcae448c2"
      },
      {
        "sha": "0d699fc821048ab9316b0004e6552c8f1dc5e5f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d699fc821048ab9316b0004e6552c8f1dc5e5f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d699fc821048ab9316b0004e6552c8f1dc5e5f4"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "efa5c8f7a3eb2742324e3a8932f2183de6be1fef",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38369dda325d704041e7eb43222cdd5c23daa7c3/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38369dda325d704041e7eb43222cdd5c23daa7c3/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=38369dda325d704041e7eb43222cdd5c23daa7c3",
        "patch": "@@ -309,7 +309,7 @@ void CTxMemPoolEntry::UpdateState(int64_t modifySize, CAmount modifyFee, int64_t\n CTxMemPool::CTxMemPool(const CFeeRate& _minReasonableRelayFee) :\n     nTransactionsUpdated(0)\n {\n-    clear();\n+    _clear(); //lock free clear\n \n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n@@ -546,9 +546,8 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n     blockSinceLastRollingFeeBump = true;\n }\n \n-void CTxMemPool::clear()\n+void CTxMemPool::_clear()\n {\n-    LOCK(cs);\n     mapLinks.clear();\n     mapTx.clear();\n     mapNextTx.clear();\n@@ -560,6 +559,12 @@ void CTxMemPool::clear()\n     ++nTransactionsUpdated;\n }\n \n+void CTxMemPool::clear()\n+{\n+    LOCK(cs);\n+    _clear();\n+}\n+\n void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n {\n     if (!fSanityCheck)"
      },
      {
        "sha": "dedc7ba72c567c938e5023a59ccf35da9f6b8f80",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38369dda325d704041e7eb43222cdd5c23daa7c3/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38369dda325d704041e7eb43222cdd5c23daa7c3/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=38369dda325d704041e7eb43222cdd5c23daa7c3",
        "patch": "@@ -375,6 +375,7 @@ class CTxMemPool\n     void removeForBlock(const std::vector<CTransaction>& vtx, unsigned int nBlockHeight,\n                         std::list<CTransaction>& conflicts, bool fCurrentEstimate = true);\n     void clear();\n+    void _clear(); //lock free\n     void queryHashes(std::vector<uint256>& vtxid);\n     void pruneSpent(const uint256& hash, CCoins &coins);\n     unsigned int GetTransactionsUpdated() const;"
      }
    ]
  },
  {
    "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjNiM2NkZWU0OTdiOGExZDdjNmE3Mjc5ZTdiYjEzNDM1NTI3YjYw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-27T10:57:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-27T10:58:35Z"
      },
      "message": "Merge pull request #6464\n\n2d8c49d Clean up tx prioritization when conflict mined (Casey Rodarmor)",
      "tree": {
        "sha": "0300f0b3a5d31e5e963025b1caf27c480bd69871",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0300f0b3a5d31e5e963025b1caf27c480bd69871"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWL1jbAAoJEHSBCwEjRsmm2VwH/joO+Bppjgv6ydZOBGGq3MUn\n09klaZh3RBm3PuWMnmMJYJzBELABbq1cZ+aTfAH50xzIOBTRjLb3hYQy1AIpbCn+\nU+yF5DzpOz63/Z36ArZbBWHeL5nJoExqpV3bOY2sbFGiT74jWhKpd2yoXwKiBX8a\nfmtIpJqCQqNx0pBSt8IMW9u7fdJ9xZ3Rz2Rna7Fq01ubcIPdRDcExvxgbbvnKhcW\nUrC0m/Ou7Ytb1GsiYhwIFFGJQtKdXkgt+aDDh9B8pUIchU91Q8Fp8L3xbk8giTvC\nX0Co8toMSndOEWonjjhWdr/950p3HL/1cW3XQKPCfJO/ptefATgMbxqjavAw7xs=\n=W+/p\n-----END PGP SIGNATURE-----",
        "payload": "tree 0300f0b3a5d31e5e963025b1caf27c480bd69871\nparent 38369dda325d704041e7eb43222cdd5c23daa7c3\nparent 2d8c49d126bf2551ef0268f314ab75932fa96510\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1445943441 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1445943515 +0100\n\nMerge pull request #6464\n\n2d8c49d Clean up tx prioritization when conflict mined (Casey Rodarmor)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38369dda325d704041e7eb43222cdd5c23daa7c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38369dda325d704041e7eb43222cdd5c23daa7c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38369dda325d704041e7eb43222cdd5c23daa7c3"
      },
      {
        "sha": "2d8c49d126bf2551ef0268f314ab75932fa96510",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d8c49d126bf2551ef0268f314ab75932fa96510",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2d8c49d126bf2551ef0268f314ab75932fa96510"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "47e8de5361705c9e01e498ab7e015d2f424af72d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "patch": "@@ -512,6 +512,7 @@ void CTxMemPool::removeConflicts(const CTransaction &tx, std::list<CTransaction>\n             if (txConflict != tx)\n             {\n                 remove(txConflict, removed, true);\n+                ClearPrioritisation(txConflict.GetHash());\n             }\n         }\n     }"
      }
    ]
  },
  {
    "sha": "ad5aae15b40dcbdbfc08221e615f06b030b92334",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDVhYWUxNWI0MGRjYmRiZmMwODIyMWU2MTVmMDZiMDMwYjkyMzM0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-27T16:39:42Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-27T16:39:42Z"
      },
      "message": "constify missing catch cases\n\n- ensure all missing catch cases are constant where possible",
      "tree": {
        "sha": "731356d063c6e597c24b9a877e8f9dcff92af31e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/731356d063c6e597c24b9a877e8f9dcff92af31e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad5aae15b40dcbdbfc08221e615f06b030b92334",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad5aae15b40dcbdbfc08221e615f06b030b92334",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad5aae15b40dcbdbfc08221e615f06b030b92334",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad5aae15b40dcbdbfc08221e615f06b030b92334/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9564573657e11a941b69f7d567b6141f5ad01089",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad5aae15b40dcbdbfc08221e615f06b030b92334/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad5aae15b40dcbdbfc08221e615f06b030b92334/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=ad5aae15b40dcbdbfc08221e615f06b030b92334",
        "patch": "@@ -94,7 +94,7 @@ static bool AppInitRPC(int argc, char* argv[])\n     // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n     try {\n         SelectBaseParams(ChainNameFromCommandLine());\n-    } catch(std::exception &e) {\n+    } catch (const std::exception& e) {\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }"
      },
      {
        "sha": "48033cd8ad9323663ac18c660167c38dff4ee3f1",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad5aae15b40dcbdbfc08221e615f06b030b92334/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad5aae15b40dcbdbfc08221e615f06b030b92334/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=ad5aae15b40dcbdbfc08221e615f06b030b92334",
        "patch": "@@ -37,7 +37,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n         SelectParams(ChainNameFromCommandLine());\n-    } catch(std::exception &e) {\n+    } catch (const std::exception& e) {\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }"
      },
      {
        "sha": "addf0e6a26b4041d40de38c0e33ba45da162d9f1",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad5aae15b40dcbdbfc08221e615f06b030b92334/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad5aae15b40dcbdbfc08221e615f06b030b92334/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=ad5aae15b40dcbdbfc08221e615f06b030b92334",
        "patch": "@@ -109,7 +109,7 @@ bool AppInit(int argc, char* argv[])\n         // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n         try {\n             SelectParams(ChainNameFromCommandLine());\n-        } catch(std::exception &e) {\n+        } catch (const std::exception& e) {\n             fprintf(stderr, \"Error: %s\\n\", e.what());\n             return false;\n         }"
      },
      {
        "sha": "1d31ab8ae5c879a9d545b850f327c55932606636",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad5aae15b40dcbdbfc08221e615f06b030b92334/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad5aae15b40dcbdbfc08221e615f06b030b92334/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=ad5aae15b40dcbdbfc08221e615f06b030b92334",
        "patch": "@@ -104,7 +104,7 @@ class CDBIterator\n         try {\n             CDataStream ssKey(slKey.data(), slKey.data() + slKey.size(), SER_DISK, CLIENT_VERSION);\n             ssKey >> key;\n-        } catch(std::exception &e) {\n+        } catch (const std::exception&) {\n             return false;\n         }\n         return true;\n@@ -120,7 +120,7 @@ class CDBIterator\n             CDataStream ssValue(slValue.data(), slValue.data() + slValue.size(), SER_DISK, CLIENT_VERSION);\n             ssValue.Xor(*obfuscate_key);\n             ssValue >> value;\n-        } catch(std::exception &e) {\n+        } catch (const std::exception&) {\n             return false;\n         }\n         return true;"
      }
    ]
  },
  {
    "sha": "214de7e54c282f7d452d9b628baaa94e6af51727",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTRkZTdlNTRjMjgyZjdkNDUyZDliNjI4YmFhYTk0ZTZhZjUxNzI3",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-27T16:44:13Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-10-27T16:44:13Z"
      },
      "message": "[Trivial] ensure minimal header conventions\n\n- ensure header namespaces and end comments are correct\n- add missing header end comments\n- ensure minimal formatting (add newlines etc.)",
      "tree": {
        "sha": "50cefc7b0e721304ce1094063f3b2384f8219b02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50cefc7b0e721304ce1094063f3b2384f8219b02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/214de7e54c282f7d452d9b628baaa94e6af51727",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/214de7e54c282f7d452d9b628baaa94e6af51727",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/214de7e54c282f7d452d9b628baaa94e6af51727",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/214de7e54c282f7d452d9b628baaa94e6af51727/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 18,
      "deletions": 15
    },
    "files": [
      {
        "sha": "6ee3cdc27a49e82622defb77dd2f35106b76c162",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214de7e54c282f7d452d9b628baaa94e6af51727/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214de7e54c282f7d452d9b628baaa94e6af51727/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=214de7e54c282f7d452d9b628baaa94e6af51727",
        "patch": "@@ -1,7 +1,9 @@\n // Copyright (c) 2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include \"bench.h\"\n+\n #include <iostream>\n #include <sys/time.h>\n "
      },
      {
        "sha": "5ce13c642b59b9528c47145e3215bc5f754b16f8",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214de7e54c282f7d452d9b628baaa94e6af51727/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214de7e54c282f7d452d9b628baaa94e6af51727/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=214de7e54c282f7d452d9b628baaa94e6af51727",
        "patch": "@@ -1,8 +1,16 @@\n // Copyright (c) 2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#ifndef BITCOIN_BENCH_H\n-#define BITCOIN_BENCH_H\n+\n+#ifndef BITCOIN_BENCH_BENCH_H\n+#define BITCOIN_BENCH_BENCH_H\n+\n+#include <map>\n+#include <string>\n+\n+#include <boost/function.hpp>\n+#include <boost/preprocessor/cat.hpp>\n+#include <boost/preprocessor/stringize.hpp>\n \n // Simple micro-benchmarking framework; API mostly matches a subset of the Google Benchmark\n // framework (see https://github.com/google/benchmark)\n@@ -25,14 +33,7 @@ static void CODE_TO_TIME(benchmark::State& state)\n BENCHMARK(CODE_TO_TIME);\n \n  */\n-\n-\n-#include <boost/function.hpp>\n-#include <boost/preprocessor/cat.hpp>\n-#include <boost/preprocessor/stringize.hpp>\n-#include <map>\n-#include <string>\n-\n+ \n namespace benchmark {\n \n     class State {\n@@ -68,4 +69,4 @@ namespace benchmark {\n #define BENCHMARK(n) \\\n     benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n \n-#endif // BITCOIN_BENCH_H\n+#endif // BITCOIN_BENCH_BENCH_H"
      },
      {
        "sha": "e96c5bf0383a0be5c6b8a8e1fc8b733f6964fa71",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214de7e54c282f7d452d9b628baaa94e6af51727/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214de7e54c282f7d452d9b628baaa94e6af51727/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=214de7e54c282f7d452d9b628baaa94e6af51727",
        "patch": "@@ -121,4 +121,4 @@ static inline size_t DynamicUsage(const boost::unordered_map<X, Y, Z>& m)\n \n }\n \n-#endif\n+#endif // BITCOIN_MEMUSAGE_H"
      },
      {
        "sha": "f269e8d4762e441f5c73134ddfee6b044070f307",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/214de7e54c282f7d452d9b628baaa94e6af51727/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/214de7e54c282f7d452d9b628baaa94e6af51727/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=214de7e54c282f7d452d9b628baaa94e6af51727",
        "patch": "@@ -3,8 +3,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_POLICY_H\n-#define BITCOIN_POLICY_H\n+#ifndef BITCOIN_POLICY_POLICY_H\n+#define BITCOIN_POLICY_POLICY_H\n \n #include \"consensus/consensus.h\"\n #include \"script/interpreter.h\"\n@@ -59,4 +59,4 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason);\n      */\n bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs);\n \n-#endif // BITCOIN_POLICY_H\n+#endif // BITCOIN_POLICY_POLICY_H"
      }
    ]
  },
  {
    "sha": "0be387a536f03a1dd0df66176fc354fb0895be48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmUzODdhNTM2ZjAzYTFkZDBkZjY2MTc2ZmMzNTRmYjA4OTViZTQ4",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-10-27T19:11:56Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2015-10-27T19:11:56Z"
      },
      "message": "unittest: fix test for null tx input\n\nUpdate the unittest that is meant to catch a transaction that is invalid\nbecause it has a null input.  The old test failed not because of that\nbut because it was considered a coinbase with too large script.  This is\nalready checked with a different test, though.\n\nThe new test is *not* a coinbase since it has two inputs, but one of\nthem is null.  This really checks the corresponding code path in\nCheckTransaction.",
      "tree": {
        "sha": "367ba013479e7fb457f28458a49008ae777bc67f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/367ba013479e7fb457f28458a49008ae777bc67f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0be387a536f03a1dd0df66176fc354fb0895be48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0be387a536f03a1dd0df66176fc354fb0895be48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0be387a536f03a1dd0df66176fc354fb0895be48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0be387a536f03a1dd0df66176fc354fb0895be48/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "cc059e814fdf1100b6277636727fc9400f0e54d1",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0be387a536f03a1dd0df66176fc354fb0895be48/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0be387a536f03a1dd0df66176fc354fb0895be48/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=0be387a536f03a1dd0df66176fc354fb0895be48",
        "patch": "@@ -64,9 +64,13 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000000\", -1, \"1\"]],\n \"01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff655151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151ffffffff010000000000000000015100000000\", \"P2SH\"],\n \n-[\"Null txin\"],\n-[[[\"0000000000000000000000000000000000000000000000000000000000000000\", -1, \"HASH160 0x14 0x02dae7dbbda56097959cba59b1989dd3e47937bf EQUAL\"]],\n-\"01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff6e49304602210086f39e028e46dafa8e1e3be63906465f4cf038fbe5ed6403dc3e74ae876e6431022100c4625c675cfc5c7e3a0e0d7eaec92ac24da20c73a88eb40d09253e51ac6def5201232103a183ddc41e84753aca47723c965d1b5c8b0e2b537963518355e6dd6cf8415e50acffffffff010000000000000000015100000000\", \"P2SH\"],\n+[\"Null txin, but without being a coinbase (because there are two inputs)\"],\n+[[[\"0000000000000000000000000000000000000000000000000000000000000000\", -1, \"1\"],\n+  [\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1\"]],\n+\"01000000020000000000000000000000000000000000000000000000000000000000000000ffffffff00ffffffff00010000000000000000000000000000000000000000000000000000000000000000000000ffffffff010000000000000000015100000000\", \"P2SH\"],\n+[[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1\"],\n+  [\"0000000000000000000000000000000000000000000000000000000000000000\", -1, \"1\"]],\n+\"010000000200010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000000000000ffffffff00ffffffff010000000000000000015100000000\", \"P2SH\"],\n \n [\"Same as the transactions in valid with one input SIGHASH_ALL and one SIGHASH_ANYONECANPAY, but we set the _ANYONECANPAY sequence number, invalidating the SIGHASH_ALL signature\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0x21 0x035e7f0d4d0841bcd56c39337ed086b1a633ee770c1ffdd94ac552a95ac2ce0efc CHECKSIG\"],"
      }
    ]
  },
  {
    "sha": "3e187f2acdb69ceb97a875f8f3bf361c11ef543c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTE4N2YyYWNkYjY5Y2ViOTdhODc1ZjhmM2JmMzYxYzExZWY1NDNj",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-10-27T19:36:06Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-10-27T19:36:06Z"
      },
      "message": "Fix BIP65 p2p test\n\ncreate_coinbase() was being called with the wrong arguments",
      "tree": {
        "sha": "bc3fa71d91511896b7acbbd8bcf1235c77d95991",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc3fa71d91511896b7acbbd8bcf1235c77d95991"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e187f2acdb69ceb97a875f8f3bf361c11ef543c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e187f2acdb69ceb97a875f8f3bf361c11ef543c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e187f2acdb69ceb97a875f8f3bf361c11ef543c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e187f2acdb69ceb97a875f8f3bf361c11ef543c/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 15,
      "deletions": 8
    },
    "files": [
      {
        "sha": "9ca5c69f162d23752337d0408996b3d54df90751",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e187f2acdb69ceb97a875f8f3bf361c11ef543c/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e187f2acdb69ceb97a875f8f3bf361c11ef543c/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=3e187f2acdb69ceb97a875f8f3bf361c11ef543c",
        "patch": "@@ -67,32 +67,35 @@ def create_transaction(self, node, coinbase, to_address, amount):\n     def get_tests(self):\n \n         self.coinbase_blocks = self.nodes[0].generate(2)\n+        height = 3  # height of the next block to build\n         self.tip = int (\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n         self.nodeaddress = self.nodes[0].getnewaddress()\n         self.last_block_time = time.time()\n \n         ''' 98 more version 3 blocks '''\n         test_blocks = []\n         for i in xrange(98):\n-            block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n             block.nVersion = 3\n             block.rehash()\n             block.solve()\n             test_blocks.append([block, True])\n             self.last_block_time += 1\n             self.tip = block.sha256\n+            height += 1\n         yield TestInstance(test_blocks, sync_every_block=False)\n \n         ''' Mine 749 version 4 blocks '''\n         test_blocks = []\n         for i in xrange(749):\n-            block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n             block.nVersion = 4\n             block.rehash()\n             block.solve()\n             test_blocks.append([block, True])\n             self.last_block_time += 1\n             self.tip = block.sha256\n+            height += 1\n         yield TestInstance(test_blocks, sync_every_block=False)\n \n         '''\n@@ -104,7 +107,7 @@ def get_tests(self):\n         cltv_invalidate(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 4\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n@@ -113,6 +116,7 @@ def get_tests(self):\n \n         self.last_block_time += 1\n         self.tip = block.sha256\n+        height += 1\n         yield TestInstance([[block, True]])\n \n         '''\n@@ -124,7 +128,7 @@ def get_tests(self):\n         cltv_invalidate(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 4\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n@@ -136,35 +140,38 @@ def get_tests(self):\n         ''' Mine 199 new version blocks on last valid tip '''\n         test_blocks = []\n         for i in xrange(199):\n-            block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n             block.nVersion = 4\n             block.rehash()\n             block.solve()\n             test_blocks.append([block, True])\n             self.last_block_time += 1\n             self.tip = block.sha256\n+            height += 1\n         yield TestInstance(test_blocks, sync_every_block=False)\n \n         ''' Mine 1 old version block '''\n-        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 3\n         block.rehash()\n         block.solve()\n         self.last_block_time += 1\n         self.tip = block.sha256\n+        height += 1\n         yield TestInstance([[block, True]])\n \n         ''' Mine 1 new version block '''\n-        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 4\n         block.rehash()\n         block.solve()\n         self.last_block_time += 1\n         self.tip = block.sha256\n+        height += 1\n         yield TestInstance([[block, True]])\n \n         ''' Mine 1 old version block, should be invalid '''\n-        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 3\n         block.rehash()\n         block.solve()"
      }
    ]
  },
  {
    "sha": "298e040bca0aad62b616a1d3e66e1e44d2b9bd3a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOThlMDQwYmNhMGFhZDYyYjYxNmExZDNlNjZlMWU0NGQyYjliZDNh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-21T21:23:59Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T00:05:32Z"
      },
      "message": "Fix chainstate serialized_size computation",
      "tree": {
        "sha": "4057b56ca2f37870d9897beb978fc127bf236d13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4057b56ca2f37870d9897beb978fc127bf236d13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b7bfe362855cadcfc9ea8801167eb1cf099f5d5d",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=298e040bca0aad62b616a1d3e66e1e44d2b9bd3a",
        "patch": "@@ -43,7 +43,7 @@ def run_test(self):\n         assert_equal(res[u'transactions'], 200)\n         assert_equal(res[u'height'], 200)\n         assert_equal(res[u'txouts'], 200)\n-        assert_equal(res[u'bytes_serialized'], 13000),\n+        assert_equal(res[u'bytes_serialized'], 13924),\n         assert_equal(len(res[u'bestblock']), 64)\n         assert_equal(len(res[u'hash_serialized']), 64)\n "
      },
      {
        "sha": "cd76c0155cfd25be8c9dc5c59257cef514bb8875",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=298e040bca0aad62b616a1d3e66e1e44d2b9bd3a",
        "patch": "@@ -121,7 +121,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n                         nTotalAmount += out.nValue;\n                     }\n                 }\n-                stats.nSerializedSize += 32 + pcursor->GetKeySize();\n+                stats.nSerializedSize += 32 + pcursor->GetValueSize();\n                 ss << VARINT(0);\n             } else {\n                 return error(\"CCoinsViewDB::GetStats() : unable to read value\");"
      }
    ]
  },
  {
    "sha": "6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTgwMGMyYjQxYWNhN2U0YTIyZDM0MWYxZTZkY2Y3MjJkOTRlNmUx",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@mattcorallo.com",
        "date": "2015-10-28T00:06:13Z"
      },
      "committer": {
        "name": "Matt Corallo (laptop - only while traveling)",
        "email": "matt@mattcorallo.com",
        "date": "2015-10-28T00:06:13Z"
      },
      "message": "Add Pieter's new PGP key to verify-commits/trusted-keys",
      "tree": {
        "sha": "d3b3943fb5a30ffd7415c5cccc2b7e406e195f5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3b3943fb5a30ffd7415c5cccc2b7e406e195f5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "no_user",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJWMBF1AAoJECr+by8oF5mAPi0H/0GzoykiSYLtKvv0YApZrcv2\nGrnM6lLCzwkdyEpNRrHu4GaiWsSzbzhXgWtZ9ads3XmLC3/xp3RZLyHr906HO7zS\nUVJbhaHQSm5mb35U2nsTOHAn8M8Pl+0IvTl32aIFg/gdzc4iG9sYNmWUzzqTumPS\noc2l7b2wyCJ6uHWKtiUvPeiqf/+7bUzx4nBtDAmuvWH4TD4+0EPNrtZGKQFqEDXB\nrgfO4Fv/WWSpAaA5uHy6SSPfrqqUFrMTwhgqXEwNoE8gYslUlXfcbEtxIb9nDAkm\n6O2w/EHYE2/qrn7TF1Ft0O7G2oN+SROJvV88dGD165g209eFpa2UeDdcxt1qCEU=\n=0A5Z\n-----END PGP SIGNATURE-----",
        "payload": "tree d3b3943fb5a30ffd7415c5cccc2b7e406e195f5e\nparent 1d94b72019e31066b33947af5709383b8075e43a\nauthor Matt Corallo <matt@mattcorallo.com> 1445990773 -0700\ncommitter Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com> 1445990773 -0700\n\nAdd Pieter's new PGP key to verify-commits/trusted-keys\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1d94b72019e31066b33947af5709383b8075e43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d94b72019e31066b33947af5709383b8075e43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d94b72019e31066b33947af5709383b8075e43a"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a0dce7a8a527303445fc530a64e327b697006a6a",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1",
        "patch": "@@ -3,3 +3,4 @@\n 01CDF4627A3B88AAE4A571C87588242FBE38D3A8\n AF8BE07C7049F3A26B239D5325B3083201782B2F\n 81291FA67D2C379A006A053FEAB5AF94D9E9ABE7\n+133EAC179436F14A5CF1B794860FEB804E669320"
      }
    ]
  },
  {
    "sha": "4252cd09fd729b0d8a9d53c0308f54b3a798c372",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjUyY2QwOWZkNzI5YjBkOGE5ZDUzYzAzMDhmNTRiM2E3OThjMzcy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T00:19:42Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:03:15Z"
      },
      "message": "Update to my new key",
      "tree": {
        "sha": "0ba333f7851fd2fd6ba97c86779620b4ba0c0955",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ba333f7851fd2fd6ba97c86779620b4ba0c0955"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4252cd09fd729b0d8a9d53c0308f54b3a798c372",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4252cd09fd729b0d8a9d53c0308f54b3a798c372",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4252cd09fd729b0d8a9d53c0308f54b3a798c372",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4252cd09fd729b0d8a9d53c0308f54b3a798c372/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-downloader/sipa-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4252cd09fd729b0d8a9d53c0308f54b3a798c372/contrib/gitian-downloader/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4252cd09fd729b0d8a9d53c0308f54b3a798c372/contrib/gitian-downloader/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sipa-key.pgp?ref=4252cd09fd729b0d8a9d53c0308f54b3a798c372"
      }
    ]
  },
  {
    "sha": "d0badb916e511da158c3626142745dfb14bd68e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGJhZGI5MTZlNTExZGExNThjMzYyNjE0Mjc0NWRmYjE0YmQ2OGUw",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-10-28T01:06:47Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-10-28T01:07:03Z"
      },
      "message": "Merge pull request #6865\n\n298e040 Fix chainstate serialized_size computation (Pieter Wuille)",
      "tree": {
        "sha": "4057b56ca2f37870d9897beb978fc127bf236d13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4057b56ca2f37870d9897beb978fc127bf236d13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0badb916e511da158c3626142745dfb14bd68e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABCAAGBQJWMB+3AAoJEOq1r5TZ6avnL3UQAJhP1JjCtYonaNEtsHNSjyJn\nZYb/H0kwtfxsytFWoSOG4zov0Ih1UZpNEHo5JQ/3ALfWo4b84i5gVTabBI2RRdpR\nIIjy0X7GZWHkzddOFs3IMfpbH3LWfgqvc9Uikxoy+XGbWZ/SEqVqFR66fUnK7vu+\npcF2zwGW9JYvVSA7OQnz4R4xUvrBIHpQ9wGpaWZwNnr7o32T23UqY+L60YYnkHZc\nyy3KyrnwQsBE3LjEETBNKy7ruSIGRnOthk/tbR0HNtOJE/jLCPyqkheaU87MIkYU\n/c85ADXwislYzi+01ajt0rx5UU2QB3TVNzXwCQEVAI6CfjIfNtYIJwZyJfL9Ip6l\n565PNXi9gyZsi7I7L++k2O3H/TLneM6+xYoT7q42cG5P2no7yDbfqX19/Diygq6l\nvGie6Ib/lr0tiPg18XS3WJmRqoQSNpjYAuTH+d8RxJmVkLOR3/O8AEt+8JZIVKq/\nUoq+nj7NGgLs/CbnDL7rV8FKm0dbHSZn2/rQAmGXMSjTB8nHCMmh2KmszYdvPX4J\nPFg1dYcbEJEJeTdqciqvvQGVC8DRw+jncwdjSvnKvSUU4QuMoskOWqImaJzEmDFT\n6x6TzpwCYN0TQZJpaAbfbblJgwj69NvzHcjEHwp2lDlhyrytf1MpyHwk2fB3s4dP\nDET6nlYJg+cXGxP40HSU\n=mPpO\n-----END PGP SIGNATURE-----",
        "payload": "tree 4057b56ca2f37870d9897beb978fc127bf236d13\nparent 8f3b3cdee497b8a1d7c6a7279e7bb13435527b60\nparent 298e040bca0aad62b616a1d3e66e1e44d2b9bd3a\nauthor Gregory Maxwell <greg@xiph.org> 1445994407 -0700\ncommitter Gregory Maxwell <greg@xiph.org> 1445994423 -0700\n\nMerge pull request #6865\n\n298e040 Fix chainstate serialized_size computation (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0badb916e511da158c3626142745dfb14bd68e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0badb916e511da158c3626142745dfb14bd68e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0badb916e511da158c3626142745dfb14bd68e0/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60"
      },
      {
        "sha": "298e040bca0aad62b616a1d3e66e1e44d2b9bd3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/298e040bca0aad62b616a1d3e66e1e44d2b9bd3a"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b7bfe362855cadcfc9ea8801167eb1cf099f5d5d",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0badb916e511da158c3626142745dfb14bd68e0/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0badb916e511da158c3626142745dfb14bd68e0/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=d0badb916e511da158c3626142745dfb14bd68e0",
        "patch": "@@ -43,7 +43,7 @@ def run_test(self):\n         assert_equal(res[u'transactions'], 200)\n         assert_equal(res[u'height'], 200)\n         assert_equal(res[u'txouts'], 200)\n-        assert_equal(res[u'bytes_serialized'], 13000),\n+        assert_equal(res[u'bytes_serialized'], 13924),\n         assert_equal(len(res[u'bestblock']), 64)\n         assert_equal(len(res[u'hash_serialized']), 64)\n "
      },
      {
        "sha": "cd76c0155cfd25be8c9dc5c59257cef514bb8875",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0badb916e511da158c3626142745dfb14bd68e0/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0badb916e511da158c3626142745dfb14bd68e0/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=d0badb916e511da158c3626142745dfb14bd68e0",
        "patch": "@@ -121,7 +121,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) const {\n                         nTotalAmount += out.nValue;\n                     }\n                 }\n-                stats.nSerializedSize += 32 + pcursor->GetKeySize();\n+                stats.nSerializedSize += 32 + pcursor->GetValueSize();\n                 ss << VARINT(0);\n             } else {\n                 return error(\"CCoinsViewDB::GetStats() : unable to read value\");"
      }
    ]
  },
  {
    "sha": "93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzUyMWE0ZjU2Y2U3NTBmM2Q4ZmQ4OWUxMjQxYzk5NDRhZDUzZDdj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:19:42Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:21:47Z"
      },
      "message": "Merge pull request #6875\n\n6e800c2 Add Pieter's new PGP key to verify-commits/trusted-keys (Matt Corallo)\n1d94b72 Whitelist commits signed with Pieter's now-revoked key (Matt Corallo)\n27252b7 Fix pre-push-hook regexes (Matt Corallo)",
      "tree": {
        "sha": "9f1ab7d75ae55176ff0cd53876f19393891b0dd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f1ab7d75ae55176ff0cd53876f19393891b0dd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWMCMrAAoJENuhpnN5oakx/y0QAIQ8sRdA95STQ7SCTFbrSdJ1\nGRyOdCqbfkOKSBA9h/VjnZz3zhJUORAWMuvpWK73coRV3U+TxGy6RS/y+Z7MhdhI\n3YFGYRSVC+r0QljO7jewXzLcck1xlUCRsMimPH4tKlcWt89c6VPWy7Jsfwfxv82v\nDJNlKqcqJkwRJnpiKE13Gl7tNDCKZ23PVlj2W9pGVCtjzr1+KIe1kERnUfaPnnSV\nVjQ4Zg038uJBlAqzAX1bXx4/QmduxGQNQPzDK5LZAHmhPK9aNH2setEjSbP9Wgw2\n4Sv7HCe4VricyvzH3SoY4SahynfWObBwxqM44ibXRVjyLMGbOo4cxDZ3xC+hAVmZ\njICOs2fIMFgwMRYkHaNSOzNx3CoZwmZkjj2+g9YWZinXzZlTpsRCIBVjJPUfJA5w\nelI2Ehgrgwga0swAN0N10C1+qrJQb25rOc15XqfqFkRbCMTlO7xVAuAmkIhbVJMO\nk5R0ShlrX3KlWOO3yXjsMP5lasIJg4JNBHM+f3+nQ+ldhJR/6ypgHo2uVCno7qcw\nYd+ApIhsAInNs1uIml3x60GJtCAa542Q7TQWOSTxCnqOqFXaF1oPWlLwDhPZB2XZ\nGUotdHzpEOg9uOyruwXjWjNBQd/063Hx2s6svbo+cT5jaDOpJudNnsaCEleghk6W\nEJGyc+V1tWgZRwBoNuTp\n=T+2l\n-----END PGP SIGNATURE-----",
        "payload": "tree 9f1ab7d75ae55176ff0cd53876f19393891b0dd4\nparent d0badb916e511da158c3626142745dfb14bd68e0\nparent 6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1445995182 +0100\ncommitter Pieter Wuille <pieter.wuille@gmail.com> 1445995307 +0100\n\nMerge pull request #6875\n\n6e800c2 Add Pieter's new PGP key to verify-commits/trusted-keys (Matt Corallo)\n1d94b72 Whitelist commits signed with Pieter's now-revoked key (Matt Corallo)\n27252b7 Fix pre-push-hook regexes (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d0badb916e511da158c3626142745dfb14bd68e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0badb916e511da158c3626142745dfb14bd68e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d0badb916e511da158c3626142745dfb14bd68e0"
      },
      {
        "sha": "6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e800c2b41aca7e4a22d341f1e6dcf722d94e6e1"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 36,
      "deletions": 3
    },
    "files": [
      {
        "sha": "31aeb8f3d38bb6004a891cea0aa04ed51a4a5973",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
        "patch": "@@ -0,0 +1,2 @@\n+586a29253dabec3ca0f1ccba9091daabd16b8411\n+eddaba7b5692288087a926da5733e86b47274e4e"
      },
      {
        "sha": "0218b82e11dd3bf8cc1fb8f5d24f4704c9a2cfc0",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
        "patch": "@@ -1,15 +1,33 @@\n #!/bin/sh\n INPUT=$(</dev/stdin)\n VALID=false\n+REVSIG=false\n IFS=$'\\n'\n for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n-\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG\"*)\n+\tcase \"$LINE\" in\n+\t\"[GNUPG:] VALIDSIG \"*)\n \t\twhile read KEY; do\n \t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n \t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n+\t\"[GNUPG:] REVKEYSIG \"*)\n+\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\twhile read KEY; do\n+\t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY:24:40} \"*)\n+\t\t\t\tREVSIG=true\n+\t\t\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${KEY:24:40} \"\n+\t\t\t\t;;\n+\t\t\tesac\n+\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n \tesac\n done\n if ! $VALID; then\n \texit 1\n fi\n-echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+if $VALID && $REVSIG; then\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\" 2>/dev/null\n+\techo \"$GOODREVSIG\"\n+else\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+fi"
      },
      {
        "sha": "c57222818ab8a3deb8a78a338e6792f204f97c91",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-if ! [[ \"$2\" =~ [git@]?[www.]?github.com[:|/]bitcoin/bitcoin[.git]? ]]; then\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n     exit 0\n fi\n "
      },
      {
        "sha": "a0dce7a8a527303445fc530a64e327b697006a6a",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
        "patch": "@@ -3,3 +3,4 @@\n 01CDF4627A3B88AAE4A571C87588242FBE38D3A8\n AF8BE07C7049F3A26B239D5325B3083201782B2F\n 81291FA67D2C379A006A053FEAB5AF94D9E9ABE7\n+133EAC179436F14A5CF1B794860FEB804E669320"
      },
      {
        "sha": "9ba781008a6585699bdf515a52e340f9c56d10a8",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93521a4f56ce750f3d8fd89e1241c9944ad53d7c/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
        "patch": "@@ -7,11 +7,23 @@ git log \"$DIR\"\n \n VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n \n+IS_REVSIG_ALLOWED () {\n+\twhile read LINE; do\n+\t\t[ \"$LINE\" = \"$1\" ] && return 0\n+\tdone < \"${DIR}/allow-revsig-commits\"\n+\treturn 1\n+}\n+\n HAVE_FAILED=false\n IS_SIGNED () {\n \tif [ $1 = $VERIFIED_ROOT ]; then\n \t\treturn 0;\n \tfi\n+\tif IS_REVSIG_ALLOWED \"$1\"; then\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\telse\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\tfi\n \tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n \t\treturn 1;\n \tfi"
      }
    ]
  },
  {
    "sha": "8756c986420ccd8302c396e0db8f5434dd41c57a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzU2Yzk4NjQyMGNjZDgzMDJjMzk2ZTBkYjhmNTQzNGRkNDFjNTdh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:22:22Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:23:20Z"
      },
      "message": "Merge pull request #6895\n\n4252cd0 Update to my new key (Pieter Wuille)",
      "tree": {
        "sha": "bd233a750d3a8ed3d54798fe7b2e34068aba50d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd233a750d3a8ed3d54798fe7b2e34068aba50d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8756c986420ccd8302c396e0db8f5434dd41c57a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWMCOIAAoJENuhpnN5oakxxFMQAJEM/4SItRhxbXOrYCYUAjS1\ni2jgy+aJZeoSQfU3jqPMODGVVbm0MTVk7JQukReGtOUlIm4fzMO21iJkwbZDAD1B\n/EvWlOAMzf+v9nv4qozKjbMQNpghGmrRIC6LdQTjM2MrsHbBNNr+aUgK/U4MyPmh\noyKD0ayxlUB17LMVCdyc3A6pEpsKdBYoSrPJn3BIqpLLxnZj+8m3RIM2t//3AU6O\nn8n4/f92hYC8kzBf2P1+AbHyFQaf39WXRBjebe2afIaMOcKjao51lVikBuCw0q+4\nXD4AfrNV15Kg2JBU+FbcTR+G//DJHGQzUaBl399ntuNnp3FZO5RwZklAMyn+gQK2\nhv5+8n1unkGKrGImr2g8EUAnkTKwLIXupVDQsRX0zzbgXyDkz6Q8q43ZZJfR1qep\nGMana7KC5kNe9CUoWnLcHFQBWenEYysQA4oNtLP9uNLjGiMnlEhVy/csa4chG9kD\nHyHy4SLcq03woU2EVn9qUW6zqXr/EoEi8/2UegA3HxiJirlNsmC8tJsqJfw4sJRs\niiigfA2jMMM68v3/q5a089/IYlUFwv+Q8bkyhj/XXJ5BSJhB0Zrj6sHgicu3HSfc\ncUx2Y9zU+yZjltN7sC3dBb79keTQXC/gUQZ4ZDP4MXbZBAkiuDVysX9rphDS4cqt\nKBhaKUFjRB0zyuj7S8dx\n=ykhB\n-----END PGP SIGNATURE-----",
        "payload": "tree bd233a750d3a8ed3d54798fe7b2e34068aba50d0\nparent 93521a4f56ce750f3d8fd89e1241c9944ad53d7c\nparent 4252cd09fd729b0d8a9d53c0308f54b3a798c372\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1445995342 +0100\ncommitter Pieter Wuille <pieter.wuille@gmail.com> 1445995400 +0100\n\nMerge pull request #6895\n\n4252cd0 Update to my new key (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8756c986420ccd8302c396e0db8f5434dd41c57a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8756c986420ccd8302c396e0db8f5434dd41c57a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8756c986420ccd8302c396e0db8f5434dd41c57a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93521a4f56ce750f3d8fd89e1241c9944ad53d7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93521a4f56ce750f3d8fd89e1241c9944ad53d7c"
      },
      {
        "sha": "4252cd09fd729b0d8a9d53c0308f54b3a798c372",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4252cd09fd729b0d8a9d53c0308f54b3a798c372",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4252cd09fd729b0d8a9d53c0308f54b3a798c372"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-downloader/sipa-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8756c986420ccd8302c396e0db8f5434dd41c57a/contrib/gitian-downloader/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8756c986420ccd8302c396e0db8f5434dd41c57a/contrib/gitian-downloader/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sipa-key.pgp?ref=8756c986420ccd8302c396e0db8f5434dd41c57a"
      }
    ]
  },
  {
    "sha": "e06c14fb59ee493da5283819420d949a14304ca7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDZjMTRmYjU5ZWU0OTNkYTUyODM4MTk0MjBkOTQ5YTE0MzA0Y2E3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:24:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:25:06Z"
      },
      "message": "Merge pull request #6776\n\nab1f560 Support -checkmempool=N, which runs checks on average once every N transactions (Pieter Wuille)",
      "tree": {
        "sha": "2d1b41bd1895a3e59001f44b6eda249bdf5c2712",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d1b41bd1895a3e59001f44b6eda249bdf5c2712"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e06c14fb59ee493da5283819420d949a14304ca7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWMCPyAAoJENuhpnN5oakxlssQAMJy8oYS5IuNwZUYMb9bqWeA\nhxf/8bIJC/b0dzp/QGsctFgmPirf4RfAL+1mxXzfo0WtJWBxirKMtRN9jL+coYqB\nO1gMvWU4h0LjBVj46RtHoYYHng8g3DQMa8YJIqDfqnFXc8Mpe9J/9W9dekEh3iil\nYbzNhH/zKQ06uwSY/aWHcVAkorxyv1f8TGx6W+SXkGL2r6WxqA5b/ZRDGLfoyf6x\nvdVjr/gg1StcJX8e5th+YyqxD5av+j9YDu650gW7veoshLGiIQ9J0B0CUPOsKNRy\nOMLGC29EifrnLKG6Ft9fZc0p2LlsF/W6d4YOcHmBkVi3k0B8h6K1yj4YWWX4ZSIM\n5Y63/+BZOIfatPrPxDdU+5DdFsohiK5MAKC0VuH1PSn6CTmqshGWiPaphBorg66t\npYnqloWyIR+DLLG//8qSeqAdqJm7voAYKYTQZn/YDRFiGW79DdBwDjfARfaGVsq4\nCf1fMnRR8WSICqhr8DiZLHfP46K0kCJKLkRJBhfX30XC/ckCD99nBAriLTqG8YIN\nXeQ8LO6amvmewaTRNzvqvffemw33yyLr7nG7kO1/G/GewZ7g4v/jGCSYqEsFkRwG\nvn4zoVpmRIBko0P3d9PSwWDlgj5E2bncws0RL5PwYQgt9e4GcXFvB+4xj38GwYs+\nDiLvv8paGEBplDkKemOs\n=8UVw\n-----END PGP SIGNATURE-----",
        "payload": "tree 2d1b41bd1895a3e59001f44b6eda249bdf5c2712\nparent 8756c986420ccd8302c396e0db8f5434dd41c57a\nparent ab1f56072a796b0ff039d6690c6ac929dbcbf243\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1445995484 +0100\ncommitter Pieter Wuille <pieter.wuille@gmail.com> 1445995506 +0100\n\nMerge pull request #6776\n\nab1f560 Support -checkmempool=N, which runs checks on average once every N transactions (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e06c14fb59ee493da5283819420d949a14304ca7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e06c14fb59ee493da5283819420d949a14304ca7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e06c14fb59ee493da5283819420d949a14304ca7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8756c986420ccd8302c396e0db8f5434dd41c57a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8756c986420ccd8302c396e0db8f5434dd41c57a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8756c986420ccd8302c396e0db8f5434dd41c57a"
      },
      {
        "sha": "ab1f56072a796b0ff039d6690c6ac929dbcbf243",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab1f56072a796b0ff039d6690c6ac929dbcbf243",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab1f56072a796b0ff039d6690c6ac929dbcbf243"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4189907b9fb478d8fa9d1bd7d07475322ed0671b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e06c14fb59ee493da5283819420d949a14304ca7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e06c14fb59ee493da5283819420d949a14304ca7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e06c14fb59ee493da5283819420d949a14304ca7",
        "patch": "@@ -841,7 +841,10 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         InitWarning(_(\"Warning: Unsupported argument -benchmark ignored, use -debug=bench.\"));\n \n     // Checkmempool and checkblockindex default to true in regtest mode\n-    mempool.setSanityCheck(GetBoolArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks()));\n+    int ratio = std::min<int>(std::max<int>(GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n+    if (ratio != 0) {\n+        mempool.setSanityCheck(1.0 / ratio);\n+    }\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", true);\n "
      },
      {
        "sha": "a772e7adeaf940d3a7911ae937aaf63a03155322",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e06c14fb59ee493da5283819420d949a14304ca7/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e06c14fb59ee493da5283819420d949a14304ca7/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=e06c14fb59ee493da5283819420d949a14304ca7",
        "patch": "@@ -314,7 +314,7 @@ CTxMemPool::CTxMemPool(const CFeeRate& _minReasonableRelayFee) :\n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n     // of transactions in the pool\n-    fSanityCheck = false;\n+    nCheckFrequency = 0;\n \n     minerPolicyEstimator = new CBlockPolicyEstimator(_minReasonableRelayFee);\n     minReasonableRelayFee = _minReasonableRelayFee;\n@@ -487,7 +487,7 @@ void CTxMemPool::removeCoinbaseSpends(const CCoinsViewCache *pcoins, unsigned in\n             if (it2 != mapTx.end())\n                 continue;\n             const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n-            if (fSanityCheck) assert(coins);\n+            if (nCheckFrequency != 0) assert(coins);\n             if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n                 transactionsToRemove.push_back(tx);\n                 break;\n@@ -568,7 +568,10 @@ void CTxMemPool::clear()\n \n void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n {\n-    if (!fSanityCheck)\n+    if (nCheckFrequency == 0)\n+        return;\n+\n+    if (insecure_rand() >= nCheckFrequency)\n         return;\n \n     LogPrint(\"mempool\", \"Checking mempool with %u transactions and %u inputs\\n\", (unsigned int)mapTx.size(), (unsigned int)mapNextTx.size());"
      },
      {
        "sha": "6aa5f6d77c48a48ff97cc3493db21a5bf8a8dd11",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e06c14fb59ee493da5283819420d949a14304ca7/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e06c14fb59ee493da5283819420d949a14304ca7/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=e06c14fb59ee493da5283819420d949a14304ca7",
        "patch": "@@ -278,7 +278,7 @@ class CInPoint\n class CTxMemPool\n {\n private:\n-    bool fSanityCheck; //! Normally false, true if -checkmempool or -regtest\n+    uint32_t nCheckFrequency; //! Value n means that n times in 2^32 we check.\n     unsigned int nTransactionsUpdated;\n     CBlockPolicyEstimator* minerPolicyEstimator;\n \n@@ -360,7 +360,7 @@ class CTxMemPool\n      * check does nothing.\n      */\n     void check(const CCoinsViewCache *pcoins) const;\n-    void setSanityCheck(bool _fSanityCheck) { fSanityCheck = _fSanityCheck; }\n+    void setSanityCheck(double dFrequency = 1.0) { nCheckFrequency = dFrequency * 4294967296.0; }\n \n     // addUnchecked must updated state for all ancestors of a given transaction,\n     // to track size/count of descendant transactions.  First version of"
      }
    ]
  },
  {
    "sha": "4764f5db9d2c68e517fe2ba1d67dde39987a525c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzY0ZjVkYjlkMmM2OGU1MTdmZTJiYTFkNjdkZGUzOTk4N2E1MjVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:25:45Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:30:31Z"
      },
      "message": "Merge pull request #6892\n\n214de7e [Trivial] ensure minimal header conventions (Philip Kaufmann)",
      "tree": {
        "sha": "7b4ab6474a2043d0f10ee10f5429580534342697",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b4ab6474a2043d0f10ee10f5429580534342697"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4764f5db9d2c68e517fe2ba1d67dde39987a525c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWMCU3AAoJENuhpnN5oakx/5cQANxMEZzo8WPj/PN5fAGWHQGD\nqDsQOvj+bFgLqD6R85sSkRWbHn1Vi72zxnyWBdHwrNoVZAM+5c+o3URRhIcgNwOi\nOtuun9DcJfW2rvvzGgqvEHC9dvTamtmsIF2ZVhfltD74z4UeuSsFgeodRInIY+Hn\nQO4OLwC0lH8ud/3mYcIi+Er/jfpqxJMrNKaPI4QNujNL0yee1TncnkN9iagkc5lN\nXohnskyY20RsvbnvWrWg+NWSihc7jmQA0NvlfkdHIFwoV4FmoV6prMzsoVjFPYYG\n2gH0n8vbB+R/RmM2jqLQao1ZwOLeXPpLCU0XPip6xX3TAkgceLwmflNE8jDGHTYs\nMjG/OLcdThc+ThlIv8vQlXIiW7caImYFze4XNkKwty8GgHdt6iQRx5b3GQuqIjeF\nZu0xHTHRPzHU/rf36yv3UrBJzIYYngAAIGVyv5nMg+akD2ygGbGCAARGVpofXc+S\nZRp0aRUuJOGnVAFlMDm6qXkd+lk1OCCAt7anGiDphD9qe5CMguul23ejbHQznuYL\n2Iiy4dm2vgwF69AMTuyhQohGzDxtZcDkIMPcYcZ/Fi7khWzxtOy2hCYhH8egsFJt\nvxxUwWS4nSvIKkhRXng/3H8ITBDSUKEUVteAou5/AP25jUyREgcEOmIp3W+/BG/p\nCMNQ5DyQDEwC5lHoxNLl\n=MujE\n-----END PGP SIGNATURE-----",
        "payload": "tree 7b4ab6474a2043d0f10ee10f5429580534342697\nparent e06c14fb59ee493da5283819420d949a14304ca7\nparent 214de7e54c282f7d452d9b628baaa94e6af51727\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1445995545 +0100\ncommitter Pieter Wuille <pieter.wuille@gmail.com> 1445995831 +0100\n\nMerge pull request #6892\n\n214de7e [Trivial] ensure minimal header conventions (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4764f5db9d2c68e517fe2ba1d67dde39987a525c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4764f5db9d2c68e517fe2ba1d67dde39987a525c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4764f5db9d2c68e517fe2ba1d67dde39987a525c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e06c14fb59ee493da5283819420d949a14304ca7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e06c14fb59ee493da5283819420d949a14304ca7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e06c14fb59ee493da5283819420d949a14304ca7"
      },
      {
        "sha": "214de7e54c282f7d452d9b628baaa94e6af51727",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/214de7e54c282f7d452d9b628baaa94e6af51727",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/214de7e54c282f7d452d9b628baaa94e6af51727"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 18,
      "deletions": 15
    },
    "files": [
      {
        "sha": "6ee3cdc27a49e82622defb77dd2f35106b76c162",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4764f5db9d2c68e517fe2ba1d67dde39987a525c/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4764f5db9d2c68e517fe2ba1d67dde39987a525c/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=4764f5db9d2c68e517fe2ba1d67dde39987a525c",
        "patch": "@@ -1,7 +1,9 @@\n // Copyright (c) 2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include \"bench.h\"\n+\n #include <iostream>\n #include <sys/time.h>\n "
      },
      {
        "sha": "5ce13c642b59b9528c47145e3215bc5f754b16f8",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4764f5db9d2c68e517fe2ba1d67dde39987a525c/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4764f5db9d2c68e517fe2ba1d67dde39987a525c/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=4764f5db9d2c68e517fe2ba1d67dde39987a525c",
        "patch": "@@ -1,8 +1,16 @@\n // Copyright (c) 2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#ifndef BITCOIN_BENCH_H\n-#define BITCOIN_BENCH_H\n+\n+#ifndef BITCOIN_BENCH_BENCH_H\n+#define BITCOIN_BENCH_BENCH_H\n+\n+#include <map>\n+#include <string>\n+\n+#include <boost/function.hpp>\n+#include <boost/preprocessor/cat.hpp>\n+#include <boost/preprocessor/stringize.hpp>\n \n // Simple micro-benchmarking framework; API mostly matches a subset of the Google Benchmark\n // framework (see https://github.com/google/benchmark)\n@@ -25,14 +33,7 @@ static void CODE_TO_TIME(benchmark::State& state)\n BENCHMARK(CODE_TO_TIME);\n \n  */\n-\n-\n-#include <boost/function.hpp>\n-#include <boost/preprocessor/cat.hpp>\n-#include <boost/preprocessor/stringize.hpp>\n-#include <map>\n-#include <string>\n-\n+ \n namespace benchmark {\n \n     class State {\n@@ -68,4 +69,4 @@ namespace benchmark {\n #define BENCHMARK(n) \\\n     benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n \n-#endif // BITCOIN_BENCH_H\n+#endif // BITCOIN_BENCH_BENCH_H"
      },
      {
        "sha": "e96c5bf0383a0be5c6b8a8e1fc8b733f6964fa71",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4764f5db9d2c68e517fe2ba1d67dde39987a525c/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4764f5db9d2c68e517fe2ba1d67dde39987a525c/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=4764f5db9d2c68e517fe2ba1d67dde39987a525c",
        "patch": "@@ -121,4 +121,4 @@ static inline size_t DynamicUsage(const boost::unordered_map<X, Y, Z>& m)\n \n }\n \n-#endif\n+#endif // BITCOIN_MEMUSAGE_H"
      },
      {
        "sha": "f269e8d4762e441f5c73134ddfee6b044070f307",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4764f5db9d2c68e517fe2ba1d67dde39987a525c/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4764f5db9d2c68e517fe2ba1d67dde39987a525c/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=4764f5db9d2c68e517fe2ba1d67dde39987a525c",
        "patch": "@@ -3,8 +3,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_POLICY_H\n-#define BITCOIN_POLICY_H\n+#ifndef BITCOIN_POLICY_POLICY_H\n+#define BITCOIN_POLICY_POLICY_H\n \n #include \"consensus/consensus.h\"\n #include \"script/interpreter.h\"\n@@ -59,4 +59,4 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason);\n      */\n bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs);\n \n-#endif // BITCOIN_POLICY_H\n+#endif // BITCOIN_POLICY_POLICY_H"
      }
    ]
  },
  {
    "sha": "8daffe227bc67706d6640b67776f7711a6a98607",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGFmZmUyMjdiYzY3NzA2ZDY2NDBiNjc3NzZmNzcxMWE2YTk4NjA3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:31:22Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T01:34:09Z"
      },
      "message": "Merge pull request #6891\n\nad5aae1 constify missing catch cases (Philip Kaufmann)",
      "tree": {
        "sha": "8a5df80256d7a19cae49e483d3f087849cdb0e9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a5df80256d7a19cae49e483d3f087849cdb0e9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8daffe227bc67706d6640b67776f7711a6a98607",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWMCYRAAoJENuhpnN5oakxoPoQAJtu+Zk128/sm1HTBa5nkrrp\nD8bcOC7QqvVgNQBZ02kRg4ec0hM+NQR/HkZjryWwrD5fNvIZd3y0nUBEFGHn9ypR\n1DhlNFRoGF56SQG11CpBk3XYoZfV9HQiBlv3OC1SiP1PV/7cJ5BYjLgu0o8jKNnL\npVuUKnuGCAmj5UAKhNTr537UMSLZF/qyGGzkDcslIP+mFWdyP5wiaB5neILOcJhg\noj0u3oDDMt0CS8UF9BYIB+ksS9eWD61PjXbbe70ppwZ/d5l5T8ORQZUha8Fwh2PA\nsnY9GUbkXU0UpdYQOxTbTOGlMz1ZY1FG1BsYUYFh8pwIWM/b+KTIUqd25WxnihO6\nX9oU0gVelqBBRUIeW0JQYUabUC7qVvtfHDiRKC9t31pxMA5+fXgo2cOiWkGQaaPL\njUX883EMdk6g5T06FIidHV6zpOPPgE4t0Injt6X0BptjSVGRX+VEnYF3kkF7F0Un\n8Lj/TOG3rJdf+X8sns0ycDiq8VSxAlNiZzRGxXrKjo+1DkT6puP+vN80WP45Xch9\neL2PwTdfx3jZiJPORK9EotStut0QMwAdZB04SMpjSPMPjwhg0hU6wLuHJJT8E8A0\nI1gWL6fJro87y57FxANMAlSt5nysqEuFpoXfCmvx7hNni234NcDn2gSffpikJRWp\nGpwNKvFDVAM8HZECd2w0\n=2nkq\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a5df80256d7a19cae49e483d3f087849cdb0e9e\nparent 4764f5db9d2c68e517fe2ba1d67dde39987a525c\nparent ad5aae15b40dcbdbfc08221e615f06b030b92334\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1445995882 +0100\ncommitter Pieter Wuille <pieter.wuille@gmail.com> 1445996049 +0100\n\nMerge pull request #6891\n\nad5aae1 constify missing catch cases (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8daffe227bc67706d6640b67776f7711a6a98607",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8daffe227bc67706d6640b67776f7711a6a98607",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8daffe227bc67706d6640b67776f7711a6a98607/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4764f5db9d2c68e517fe2ba1d67dde39987a525c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4764f5db9d2c68e517fe2ba1d67dde39987a525c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4764f5db9d2c68e517fe2ba1d67dde39987a525c"
      },
      {
        "sha": "ad5aae15b40dcbdbfc08221e615f06b030b92334",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad5aae15b40dcbdbfc08221e615f06b030b92334",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad5aae15b40dcbdbfc08221e615f06b030b92334"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9564573657e11a941b69f7d567b6141f5ad01089",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8daffe227bc67706d6640b67776f7711a6a98607/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8daffe227bc67706d6640b67776f7711a6a98607/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=8daffe227bc67706d6640b67776f7711a6a98607",
        "patch": "@@ -94,7 +94,7 @@ static bool AppInitRPC(int argc, char* argv[])\n     // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n     try {\n         SelectBaseParams(ChainNameFromCommandLine());\n-    } catch(std::exception &e) {\n+    } catch (const std::exception& e) {\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }"
      },
      {
        "sha": "48033cd8ad9323663ac18c660167c38dff4ee3f1",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8daffe227bc67706d6640b67776f7711a6a98607/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8daffe227bc67706d6640b67776f7711a6a98607/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=8daffe227bc67706d6640b67776f7711a6a98607",
        "patch": "@@ -37,7 +37,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n         SelectParams(ChainNameFromCommandLine());\n-    } catch(std::exception &e) {\n+    } catch (const std::exception& e) {\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }"
      },
      {
        "sha": "addf0e6a26b4041d40de38c0e33ba45da162d9f1",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8daffe227bc67706d6640b67776f7711a6a98607/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8daffe227bc67706d6640b67776f7711a6a98607/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=8daffe227bc67706d6640b67776f7711a6a98607",
        "patch": "@@ -109,7 +109,7 @@ bool AppInit(int argc, char* argv[])\n         // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n         try {\n             SelectParams(ChainNameFromCommandLine());\n-        } catch(std::exception &e) {\n+        } catch (const std::exception& e) {\n             fprintf(stderr, \"Error: %s\\n\", e.what());\n             return false;\n         }"
      },
      {
        "sha": "1d31ab8ae5c879a9d545b850f327c55932606636",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8daffe227bc67706d6640b67776f7711a6a98607/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8daffe227bc67706d6640b67776f7711a6a98607/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=8daffe227bc67706d6640b67776f7711a6a98607",
        "patch": "@@ -104,7 +104,7 @@ class CDBIterator\n         try {\n             CDataStream ssKey(slKey.data(), slKey.data() + slKey.size(), SER_DISK, CLIENT_VERSION);\n             ssKey >> key;\n-        } catch(std::exception &e) {\n+        } catch (const std::exception&) {\n             return false;\n         }\n         return true;\n@@ -120,7 +120,7 @@ class CDBIterator\n             CDataStream ssValue(slValue.data(), slValue.data() + slValue.size(), SER_DISK, CLIENT_VERSION);\n             ssValue.Xor(*obfuscate_key);\n             ssValue >> value;\n-        } catch(std::exception &e) {\n+        } catch (const std::exception&) {\n             return false;\n         }\n         return true;"
      }
    ]
  },
  {
    "sha": "e9e616323bc44daf61f4358f5b2de58e90b5c602",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOWU2MTYzMjNiYzQ0ZGFmNjFmNDM1OGY1YjJkZTU4ZTkwYjVjNjAy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T02:07:59Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-28T02:07:59Z"
      },
      "message": "Make -checkmempool=1 not fail through int32 overflow",
      "tree": {
        "sha": "767da987b19111036f305867500b0d22d3e4d442",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/767da987b19111036f305867500b0d22d3e4d442"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9e616323bc44daf61f4358f5b2de58e90b5c602",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9e616323bc44daf61f4358f5b2de58e90b5c602",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9e616323bc44daf61f4358f5b2de58e90b5c602",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9e616323bc44daf61f4358f5b2de58e90b5c602/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8daffe227bc67706d6640b67776f7711a6a98607",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8daffe227bc67706d6640b67776f7711a6a98607",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8daffe227bc67706d6640b67776f7711a6a98607"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7b5843a8d0d0fd4c1ef116841344552c8a656ddc",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9e616323bc44daf61f4358f5b2de58e90b5c602/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9e616323bc44daf61f4358f5b2de58e90b5c602/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=e9e616323bc44daf61f4358f5b2de58e90b5c602",
        "patch": "@@ -360,7 +360,7 @@ class CTxMemPool\n      * check does nothing.\n      */\n     void check(const CCoinsViewCache *pcoins) const;\n-    void setSanityCheck(double dFrequency = 1.0) { nCheckFrequency = dFrequency * 4294967296.0; }\n+    void setSanityCheck(double dFrequency = 1.0) { nCheckFrequency = dFrequency * 4294967295.0; }\n \n     // addUnchecked must updated state for all ancestors of a given transaction,\n     // to track size/count of descendant transactions.  First version of"
      }
    ]
  },
  {
    "sha": "971a4e6b86e5bd3ac33441d8c031d63d88c59a8b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzFhNGU2Yjg2ZTViZDNhYzMzNDQxZDhjMDMxZDYzZDg4YzU5YThi",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-10-06T02:16:15Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-10-28T03:59:19Z"
      },
      "message": "Lower default policy limits\n\nReduce the default limits on maximum number of transactions and the cumulative size of those transactions in both ancestor and descendant packages to 25 txs and 101kb total size.",
      "tree": {
        "sha": "6f0abe1cc2c5bf5c71bdf5fd32a08046cda4cb21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f0abe1cc2c5bf5c71bdf5fd32a08046cda4cb21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8daffe227bc67706d6640b67776f7711a6a98607",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8daffe227bc67706d6640b67776f7711a6a98607",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8daffe227bc67706d6640b67776f7711a6a98607"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 15,
      "deletions": 12
    },
    "files": [
      {
        "sha": "746c26ff5e83e38c798fb304723fd9408d931024",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=971a4e6b86e5bd3ac33441d8c031d63d88c59a8b",
        "patch": "@@ -11,6 +11,9 @@\n def satoshi_round(amount):\n     return  Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n \n+MAX_ANCESTORS = 25\n+MAX_DESCENDANTS = 25\n+\n class MempoolPackagesTest(BitcoinTestFramework):\n \n     def setup_network(self):\n@@ -45,17 +48,17 @@ def run_test(self):\n         value = utxo[0]['amount']\n \n         fee = Decimal(\"0.0001\")\n-        # 100 transactions off a confirmed tx should be fine\n+        # MAX_ANCESTORS transactions off a confirmed tx should be fine\n         chain = []\n-        for i in xrange(100):\n+        for i in xrange(MAX_ANCESTORS):\n             (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, 0, value, fee, 1)\n             value = sent_value\n             chain.append(txid)\n \n-        # Check mempool has 100 transactions in it, and descendant\n+        # Check mempool has MAX_ANCESTORS transactions in it, and descendant\n         # count and fees should look correct\n         mempool = self.nodes[0].getrawmempool(True)\n-        assert_equal(len(mempool), 100)\n+        assert_equal(len(mempool), MAX_ANCESTORS)\n         descendant_count = 1\n         descendant_fees = 0\n         descendant_size = 0\n@@ -91,18 +94,18 @@ def run_test(self):\n         for i in xrange(10):\n             transaction_package.append({'txid': txid, 'vout': i, 'amount': sent_value})\n \n-        for i in xrange(1000):\n+        for i in xrange(MAX_DESCENDANTS):\n             utxo = transaction_package.pop(0)\n             try:\n                 (txid, sent_value) = self.chain_transaction(self.nodes[0], utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n                 for j in xrange(10):\n                     transaction_package.append({'txid': txid, 'vout': j, 'amount': sent_value})\n-                if i == 998:\n+                if i == MAX_DESCENDANTS - 2:\n                     mempool = self.nodes[0].getrawmempool(True)\n-                    assert_equal(mempool[parent_transaction]['descendantcount'], 1000)\n+                    assert_equal(mempool[parent_transaction]['descendantcount'], MAX_DESCENDANTS)\n             except JSONRPCException as e:\n                 print e.error['message']\n-                assert_equal(i, 999)\n+                assert_equal(i, MAX_DESCENDANTS - 1)\n                 print \"tx that would create too large descendant package successfully rejected\"\n \n         # TODO: check that node1's mempool is as expected"
      },
      {
        "sha": "214493287e9b91c8bdfdf4d65b58839f849924ae",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=971a4e6b86e5bd3ac33441d8c031d63d88c59a8b",
        "patch": "@@ -44,13 +44,13 @@ static const bool DEFAULT_ALERTS = true;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n /** Default for -limitancestorcount, max number of in-mempool ancestors */\n-static const unsigned int DEFAULT_ANCESTOR_LIMIT = 100;\n+static const unsigned int DEFAULT_ANCESTOR_LIMIT = 25;\n /** Default for -limitancestorsize, maximum kilobytes of tx + all in-mempool ancestors */\n-static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n+static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 101;\n /** Default for -limitdescendantcount, max number of in-mempool descendants */\n-static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n+static const unsigned int DEFAULT_DESCENDANT_LIMIT = 25;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n-static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 101;\n /** Default for -maxmempool, maximum megabytes of mempool memory usage */\n static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n /** Default for -mempoolexpiry, expiration time for mempool transactions in hours */"
      }
    ]
  },
  {
    "sha": "6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjBlNjIyYzI1ZGRiYTY1NjE0OWRlMGY5ZjhiN2YyYTBhYTBkZWJh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-13T21:23:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-28T09:52:46Z"
      },
      "message": "[wallet] Refactor to use new MIN_CHANGE\n\n* Introduce new constant MIN_CHANGE and use it instead of the\nhardcoded \"CENT\"\n* Add test case for MIN_CHANGE\n* Introduce new constant for -mintxfee default:\n  DEFAULT_TRANSACTION_MINFEE = 1000",
      "tree": {
        "sha": "5e4f6bc4931e4d687174c742ec5cb3112755b261",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e4f6bc4931e4d687174c742ec5cb3112755b261"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0143a1f228c3447ae2e025c697b0ad53a0d8d306",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0143a1f228c3447ae2e025c697b0ad53a0d8d306"
      }
    ],
    "stats": {
      "total": 141,
      "additions": 85,
      "deletions": 56
    },
    "files": [
      {
        "sha": "74bc8dbec9b7df1e6300bc572e3364425ddf0747",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
        "patch": "@@ -567,7 +567,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 nChange -= nPayFee;\n \n             // Never create dust outputs; if we would, just add the dust to the fee.\n-            if (nChange > 0 && nChange < CENT)\n+            if (nChange > 0 && nChange < MIN_CHANGE)\n             {\n                 CTxOut txout(nChange, (CScript)std::vector<unsigned char>(24, 0));\n                 if (txout.IsDust(::minRelayTxFee))"
      },
      {
        "sha": "8b9292bd14d7f91a37298283182924263c1c2241",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 67,
        "deletions": 46,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
        "patch": "@@ -117,7 +117,7 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n \n         // try making 34 cents from 1,2,5,10,20 - we can't do it exactly\n         BOOST_CHECK( wallet.SelectCoinsMinConf(34 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_GT(nValueRet, 34 * CENT);         // but should get more than 34 cents\n+        BOOST_CHECK_EQUAL(nValueRet, 35 * CENT);       // but 35 cents is closest\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 3U);     // the best should be 20+10+5.  it's incredibly unlikely the 1 or 2 got included (but possible)\n \n         // when we try making 7 cents, the smaller coins (1,2,5) are enough.  We should see just 2+5\n@@ -185,33 +185,34 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n         BOOST_CHECK_EQUAL(nValueRet, 2 * COIN);  // we should get 2 BTC in 1 coin\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 1U);\n \n-        // empty the wallet and start again, now with fractions of a cent, to test sub-cent change avoidance\n+        // empty the wallet and start again, now with fractions of a cent, to test small change avoidance\n+\n         empty_wallet();\n-        add_coin(0.1*CENT);\n-        add_coin(0.2*CENT);\n-        add_coin(0.3*CENT);\n-        add_coin(0.4*CENT);\n-        add_coin(0.5*CENT);\n-\n-        // try making 1 cent from 0.1 + 0.2 + 0.3 + 0.4 + 0.5 = 1.5 cents\n-        // we'll get sub-cent change whatever happens, so can expect 1.0 exactly\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);\n+        add_coin(0.1*MIN_CHANGE);\n+        add_coin(0.2*MIN_CHANGE);\n+        add_coin(0.3*MIN_CHANGE);\n+        add_coin(0.4*MIN_CHANGE);\n+        add_coin(0.5*MIN_CHANGE);\n+\n+        // try making 1 * MIN_CHANGE from the 1.5 * MIN_CHANGE\n+        // we'll get change smaller than MIN_CHANGE whatever happens, so can expect MIN_CHANGE exactly\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, MIN_CHANGE);\n \n-        // but if we add a bigger coin, making it possible to avoid sub-cent change, things change:\n-        add_coin(1111*CENT);\n+        // but if we add a bigger coin, small change is avoided\n+        add_coin(1111*MIN_CHANGE);\n \n-        // try making 1 cent from 0.1 + 0.2 + 0.3 + 0.4 + 0.5 + 1111 = 1112.5 cents\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT); // we should get the exact amount\n+        // try making 1 from 0.1 + 0.2 + 0.3 + 0.4 + 0.5 + 1111 = 1112.5\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * MIN_CHANGE); // we should get the exact amount\n \n-        // if we add more sub-cent coins:\n-        add_coin(0.6*CENT);\n-        add_coin(0.7*CENT);\n+        // if we add more small coins:\n+        add_coin(0.6*MIN_CHANGE);\n+        add_coin(0.7*MIN_CHANGE);\n \n-        // and try again to make 1.0 cents, we can still make 1.0 cents\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT); // we should get the exact amount\n+        // and try again to make 1.0 * MIN_CHANGE\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * MIN_CHANGE); // we should get the exact amount\n \n         // run the 'mtgox' test (see http://blockexplorer.com/tx/29a3efd3ef04f9153d47a990bd7b048a4b2d213daaa5fb8ed670fb85f13bdbcf)\n         // they tried to consolidate 10 50k coins into one 500k coin, and ended up with 50k in change\n@@ -223,45 +224,65 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n         BOOST_CHECK_EQUAL(nValueRet, 500000 * COIN); // we should get the exact amount\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 10U); // in ten coins\n \n-        // if there's not enough in the smaller coins to make at least 1 cent change (0.5+0.6+0.7 < 1.0+1.0),\n+        // if there's not enough in the smaller coins to make at least 1 * MIN_CHANGE change (0.5+0.6+0.7 < 1.0+1.0),\n         // we need to try finding an exact subset anyway\n \n         // sometimes it will fail, and so we use the next biggest coin:\n         empty_wallet();\n-        add_coin(0.5 * CENT);\n-        add_coin(0.6 * CENT);\n-        add_coin(0.7 * CENT);\n-        add_coin(1111 * CENT);\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1111 * CENT); // we get the bigger coin\n+        add_coin(0.5 * MIN_CHANGE);\n+        add_coin(0.6 * MIN_CHANGE);\n+        add_coin(0.7 * MIN_CHANGE);\n+        add_coin(1111 * MIN_CHANGE);\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1111 * MIN_CHANGE); // we get the bigger coin\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 1U);\n \n         // but sometimes it's possible, and we use an exact subset (0.4 + 0.6 = 1.0)\n         empty_wallet();\n-        add_coin(0.4 * CENT);\n-        add_coin(0.6 * CENT);\n-        add_coin(0.8 * CENT);\n-        add_coin(1111 * CENT);\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);   // we should get the exact amount\n+        add_coin(0.4 * MIN_CHANGE);\n+        add_coin(0.6 * MIN_CHANGE);\n+        add_coin(0.8 * MIN_CHANGE);\n+        add_coin(1111 * MIN_CHANGE);\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, MIN_CHANGE);   // we should get the exact amount\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 2U); // in two coins 0.4+0.6\n \n-        // test avoiding sub-cent change\n+        // test avoiding small change\n         empty_wallet();\n-        add_coin(0.0005 * COIN);\n-        add_coin(0.01 * COIN);\n-        add_coin(1 * COIN);\n+        add_coin(0.05 * MIN_CHANGE);\n+        add_coin(1    * MIN_CHANGE);\n+        add_coin(100  * MIN_CHANGE);\n \n-        // trying to make 1.0001 from these three coins\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1.0001 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1.0105 * COIN);   // we should get all coins\n+        // trying to make 100.01 from these three coins\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(100.01 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 101.05 * MIN_CHANGE);   // we should get all coins\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 3U);\n \n-        // but if we try to make 0.999, we should take the bigger of the two small coins to avoid sub-cent change\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(0.999 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1.01 * COIN);   // we should get 1 + 0.01\n+        // but if we try to make 99.9, we should take the bigger of the two small coins to avoid small change\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(99.9 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 101 * MIN_CHANGE);\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 2U);\n \n+        // test with many inputs\n+        for (CAmount amt=1500; amt < COIN; amt*=10) {\n+             empty_wallet();\n+             // Create 676 inputs (= MAX_STANDARD_TX_SIZE / 148 bytes per input)\n+             for (uint16_t j = 0; j < 676; j++)\n+                 add_coin(amt);\n+             BOOST_CHECK(wallet.SelectCoinsMinConf(2000, 1, 1, vCoins, setCoinsRet, nValueRet));\n+             if (amt - 2000 < MIN_CHANGE) {\n+                 // needs more than one input:\n+                 uint16_t returnSize = std::ceil((2000.0 + MIN_CHANGE)/amt);\n+                 CAmount returnValue = amt * returnSize;\n+                 BOOST_CHECK_EQUAL(nValueRet, returnValue);\n+                 BOOST_CHECK_EQUAL(setCoinsRet.size(), returnSize);\n+             } else {\n+                 // one input is sufficient:\n+                 BOOST_CHECK_EQUAL(nValueRet, amt);\n+                 BOOST_CHECK_EQUAL(setCoinsRet.size(), 1U);\n+             }\n+        }\n+\n         // test randomness\n         {\n             empty_wallet();"
      },
      {
        "sha": "2414532f7539243e2fd135b758226709f03d78c7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
        "patch": "@@ -47,7 +47,7 @@ bool fPayAtLeastCustomFee = true;\n  * Fees smaller than this (in satoshi) are considered zero fee (for transaction creation)\n  * Override with -mintxfee\n  */\n-CFeeRate CWallet::minTxFee = CFeeRate(1000);\n+CFeeRate CWallet::minTxFee = CFeeRate(DEFAULT_TRANSACTION_MINFEE);\n \n /** @defgroup mapWallet\n  *\n@@ -1498,9 +1498,6 @@ CAmount CWallet::GetImmatureWatchOnlyBalance() const\n     return nTotal;\n }\n \n-/**\n- * populate vCoins with vector of available COutputs.\n- */\n void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const CCoinControl *coinControl, bool fIncludeZeroValue) const\n {\n     vCoins.clear();\n@@ -1620,7 +1617,7 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int\n             nValueRet += coin.first;\n             return true;\n         }\n-        else if (n < nTargetValue + CENT)\n+        else if (n < nTargetValue + MIN_CHANGE)\n         {\n             vValue.push_back(coin);\n             nTotalLower += n;\n@@ -1655,14 +1652,14 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int\n     vector<char> vfBest;\n     CAmount nBest;\n \n-    ApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest, 1000);\n-    if (nBest != nTargetValue && nTotalLower >= nTargetValue + CENT)\n-        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + CENT, vfBest, nBest, 1000);\n+    ApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest);\n+    if (nBest != nTargetValue && nTotalLower >= nTargetValue + MIN_CHANGE)\n+        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + MIN_CHANGE, vfBest, nBest);\n \n     // If we have a bigger coin and (either the stochastic approximation didn't find a good solution,\n     //                                   or the next bigger coin is closer), return the bigger coin\n     if (coinLowestLarger.second.first &&\n-        ((nBest != nTargetValue && nBest < nTargetValue + CENT) || coinLowestLarger.first <= nBest))\n+        ((nBest != nTargetValue && nBest < nTargetValue + MIN_CHANGE) || coinLowestLarger.first <= nBest))\n     {\n         setCoinsRet.insert(coinLowestLarger.second);\n         nValueRet += coinLowestLarger.first;"
      },
      {
        "sha": "143ca22bdcd2f61c842e2a457fd8ef7367a7b46d",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
        "patch": "@@ -41,8 +41,12 @@ extern bool fPayAtLeastCustomFee;\n static const CAmount DEFAULT_TRANSACTION_FEE = 0;\n //! -paytxfee will warn if called with a higher fee than this amount (in satoshis) per KB\n static const CAmount nHighTransactionFeeWarning = 0.01 * COIN;\n+//! -mintxfee default\n+static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n //! -maxtxfee default\n static const CAmount DEFAULT_TRANSACTION_MAXFEE = 0.1 * COIN;\n+//! minimum change amount\n+static const CAmount MIN_CHANGE = CENT;\n //! -txconfirmtarget default\n static const unsigned int DEFAULT_TX_CONFIRM_TARGET = 2;\n //! -maxtxfee will warn if called with a higher fee than this amount (in satoshis)\n@@ -544,7 +548,14 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     //! check whether we are allowed to upgrade (or already support) to the named feature\n     bool CanSupportFeature(enum WalletFeature wf) { AssertLockHeld(cs_wallet); return nWalletMaxVersion >= wf; }\n \n+    /**\n+     * populate vCoins with vector of available COutputs.\n+     */\n     void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl = NULL, bool fIncludeZeroValue=false) const;\n+    /**\n+     * Select coins until nTargetValue is reached. Return the actual value\n+     * and the corresponding coin set.\n+     */\n     bool SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet) const;\n \n     bool IsSpent(const uint256& hash, unsigned int n) const;"
      }
    ]
  },
  {
    "sha": "a9c73a130ebf2369381241d0053c8fa0a301e0fc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWM3M2ExMzBlYmYyMzY5MzgxMjQxZDAwNTNjOGZhMGEzMDFlMGZj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-14T12:49:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-28T10:15:48Z"
      },
      "message": "[wallet] Add comments for doxygen",
      "tree": {
        "sha": "90a453e9451ee7b35ecf0d59c34b01491fce977b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90a453e9451ee7b35ecf0d59c34b01491fce977b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9c73a130ebf2369381241d0053c8fa0a301e0fc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9c73a130ebf2369381241d0053c8fa0a301e0fc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9c73a130ebf2369381241d0053c8fa0a301e0fc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9c73a130ebf2369381241d0053c8fa0a301e0fc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b0e622c25ddba656149de0f9f8b7f2a0aa0deba"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 21,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4e05f519cc2b0f626d728028cf2ad6ee15ad65d3",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9c73a130ebf2369381241d0053c8fa0a301e0fc/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9c73a130ebf2369381241d0053c8fa0a301e0fc/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a9c73a130ebf2369381241d0053c8fa0a301e0fc",
        "patch": "@@ -1842,6 +1842,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n         LOCK2(cs_main, cs_wallet);\n         {\n             nFeeRet = 0;\n+            // Start with no fee and loop until there is enough fee\n             while (true)\n             {\n                 txNew.vin.clear();"
      },
      {
        "sha": "cb2c09b8923b853b2d6ece42f574891706c1a01a",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9c73a130ebf2369381241d0053c8fa0a301e0fc/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9c73a130ebf2369381241d0053c8fa0a301e0fc/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=a9c73a130ebf2369381241d0053c8fa0a301e0fc",
        "patch": "@@ -451,6 +451,11 @@ class CWalletKey\n class CWallet : public CCryptoKeyStore, public CValidationInterface\n {\n private:\n+    /**\n+     * Select a set of coins such that nValueRet >= nTargetValue and at least\n+     * all coins from coinControl are selected; Never select unconfirmed coins\n+     * if they are not ours\n+     */\n     bool SelectCoins(const CAmount& nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl *coinControl = NULL) const;\n \n     CWalletDB *pwalletdbEncryption;\n@@ -552,9 +557,12 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * populate vCoins with vector of available COutputs.\n      */\n     void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl = NULL, bool fIncludeZeroValue=false) const;\n+\n     /**\n-     * Select coins until nTargetValue is reached. Return the actual value\n-     * and the corresponding coin set.\n+     * Shuffle and select coins until nTargetValue is reached while avoiding\n+     * small change; This method is stochastic for some inputs and upon\n+     * completion the coin set and corresponding actual target value is\n+     * assembled\n      */\n     bool SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet) const;\n \n@@ -638,7 +646,17 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetWatchOnlyBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;\n     CAmount GetImmatureWatchOnlyBalance() const;\n+\n+    /**\n+     * Insert additional inputs into the transaction by\n+     * calling CreateTransaction();\n+     */\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosRet, std::string& strFailReason, bool includeWatching);\n+\n+    /**\n+     * Create a new transaction paying the recipients with a set of coins\n+     * selected by SelectCoins(); Also create the change output, when needed\n+     */\n     bool CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosRet,\n                            std::string& strFailReason, const CCoinControl *coinControl = NULL, bool sign = true);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);"
      }
    ]
  },
  {
    "sha": "040c0ea0935ffa0a23972250c23cd0d7b6b1b702",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDBjMGVhMDkzNWZmYTBhMjM5NzIyNTBjMjNjZDBkN2I2YjFiNzAy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-22T16:09:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-28T21:11:43Z"
      },
      "message": "Init: Cleanup error and warning strings\n\nAlso update doc/translation_strings_policy.md",
      "tree": {
        "sha": "909f7fcc87ae78c17de9c4f36ebca500619a8c6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/909f7fcc87ae78c17de9c4f36ebca500619a8c6f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/040c0ea0935ffa0a23972250c23cd0d7b6b1b702",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/040c0ea0935ffa0a23972250c23cd0d7b6b1b702",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/040c0ea0935ffa0a23972250c23cd0d7b6b1b702",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/040c0ea0935ffa0a23972250c23cd0d7b6b1b702/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6782f58368af09a3507004edc761fb233a95bfae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6782f58368af09a3507004edc761fb233a95bfae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6782f58368af09a3507004edc761fb233a95bfae"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 13,
      "deletions": 14
    },
    "files": [
      {
        "sha": "b95259cdc9debc0285239406396f175ea7d0f3bb",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/040c0ea0935ffa0a23972250c23cd0d7b6b1b702/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/040c0ea0935ffa0a23972250c23cd0d7b6b1b702/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=040c0ea0935ffa0a23972250c23cd0d7b6b1b702",
        "patch": "@@ -52,7 +52,7 @@ Try to write translation strings in an understandable way, for both the user and\n ### Do not translate internal errors\n \n Do not translate internal errors, or log messages, or messages that appear on the RPC interface. If an error is to be shown to the user,\n-use a generic message, then log the detailed message to the log. E.g. \"Error: A fatal internal error occurred, see debug.log for details\".\n+use a translatable generic message, then log the detailed message to the log. E.g. \"A fatal internal error occurred, see debug.log for details\".\n This helps troubleshooting; if the error is the same for everyone, the likelihood is increased that it can be found using a search engine.\n \n ### Avoid fragments"
      },
      {
        "sha": "3ef51019a4fef34aa85e4dc2a68edfd4bb97c6b7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/040c0ea0935ffa0a23972250c23cd0d7b6b1b702/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/040c0ea0935ffa0a23972250c23cd0d7b6b1b702/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=040c0ea0935ffa0a23972250c23cd0d7b6b1b702",
        "patch": "@@ -690,13 +690,13 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n #endif\n \n     if (!SetupNetworking())\n-        return InitError(\"Error: Initializing networking failed\");\n+        return InitError(\"Initializing networking failed\");\n \n #ifndef WIN32\n     if (GetBoolArg(\"-sysperms\", false)) {\n #ifdef ENABLE_WALLET\n         if (!GetBoolArg(\"-disablewallet\", false))\n-            return InitError(\"Error: -sysperms is not allowed in combination with enabled wallet functionality\");\n+            return InitError(\"-sysperms is not allowed in combination with enabled wallet functionality\");\n #endif\n     } else {\n         umask(077);\n@@ -826,16 +826,16 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // Check for -debugnet\n     if (GetBoolArg(\"-debugnet\", false))\n-        InitWarning(_(\"Warning: Unsupported argument -debugnet ignored, use -debug=net.\"));\n+        InitWarning(_(\"Unsupported argument -debugnet ignored, use -debug=net.\"));\n     // Check for -socks - as this is a privacy risk to continue, exit here\n     if (mapArgs.count(\"-socks\"))\n-        return InitError(_(\"Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.\"));\n+        return InitError(_(\"Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.\"));\n     // Check for -tor - as this is a privacy risk to continue, exit here\n     if (GetBoolArg(\"-tor\", false))\n-        return InitError(_(\"Error: Unsupported argument -tor found, use -onion.\"));\n+        return InitError(_(\"Unsupported argument -tor found, use -onion.\"));\n \n     if (GetBoolArg(\"-benchmark\", false))\n-        InitWarning(_(\"Warning: Unsupported argument -benchmark ignored, use -debug=bench.\"));\n+        InitWarning(_(\"Unsupported argument -benchmark ignored, use -debug=bench.\"));\n \n     // Checkmempool and checkblockindex default to true in regtest mode\n     mempool.setSanityCheck(GetBoolArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks()));\n@@ -846,7 +846,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     int64_t nMempoolSizeLimit = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     int64_t nMempoolDescendantSizeLimit = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n     if (nMempoolSizeLimit < 0 || nMempoolSizeLimit < nMempoolDescendantSizeLimit * 40)\n-        return InitError(strprintf(_(\"Error: -maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 25));\n+        return InitError(strprintf(_(\"-maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 25));\n \n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n     nScriptCheckThreads = GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n@@ -915,7 +915,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n             return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s'\"), mapArgs[\"-paytxfee\"]));\n         if (nFeePerK > nHighTransactionFeeWarning)\n-            InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n+            InitWarning(_(\"-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n         payTxFee = CFeeRate(nFeePerK, 1000);\n         if (payTxFee < ::minRelayTxFee)\n         {\n@@ -929,7 +929,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (!ParseMoney(mapArgs[\"-maxtxfee\"], nMaxFee))\n             return InitError(strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s'\"), mapArgs[\"-maptxfee\"]));\n         if (nMaxFee > nHighTransactionMaxFeeWarning)\n-            InitWarning(_(\"Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n+            InitWarning(_(\"-maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n         maxTxFee = nMaxFee;\n         if (CFeeRate(maxTxFee, 1000) < ::minRelayTxFee)\n         {\n@@ -1056,12 +1056,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     BOOST_FOREACH(string cmt, mapMultiArgs[\"-uacomment\"])\n     {\n         if (cmt != SanitizeString(cmt, SAFE_CHARS_UA_COMMENT))\n-            return InitError(strprintf(\"User Agent comment (%s) contains unsafe characters.\", cmt));\n+            return InitError(strprintf(_(\"User Agent comment (%s) contains unsafe characters.\"), cmt));\n         uacomments.push_back(SanitizeString(cmt, SAFE_CHARS_UA_COMMENT));\n     }\n     strSubVersion = FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, uacomments);\n     if (strSubVersion.size() > MAX_SUBVERSION_LENGTH) {\n-        return InitError(strprintf(\"Total length of network version string %i exceeds maximum of %i characters. Reduce the number and/or size of uacomments.\",\n+        return InitError(strprintf(_(\"Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.\"),\n             strSubVersion.size(), MAX_SUBVERSION_LENGTH));\n     }\n \n@@ -1382,9 +1382,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 strErrors << _(\"Error loading wallet.dat: Wallet corrupted\") << \"\\n\";\n             else if (nLoadWalletRet == DB_NONCRITICAL_ERROR)\n             {\n-                string msg(_(\"Warning: error reading wallet.dat! All keys read correctly, but transaction data\"\n+                InitWarning(_(\"Error reading wallet.dat! All keys read correctly, but transaction data\"\n                              \" or address book entries might be missing or incorrect.\"));\n-                InitWarning(msg);\n             }\n             else if (nLoadWalletRet == DB_TOO_NEW)\n                 strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\") << \"\\n\";"
      }
    ]
  },
  {
    "sha": "a83f3c2426429ddf3e38cfc26204398c097a23d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODNmM2MyNDI2NDI5ZGRmM2UzOGNmYzI2MjA0Mzk4YzA5N2EyM2Q0",
    "commit": {
      "author": {
        "name": "Bob McElrath",
        "email": "bob@mcelrath.org",
        "date": "2015-10-29T02:25:32Z"
      },
      "committer": {
        "name": "Bob McElrath",
        "email": "bob@mcelrath.org",
        "date": "2015-10-29T02:25:32Z"
      },
      "message": "Add explicit shared_ptr constructor due to C++11 error",
      "tree": {
        "sha": "8c259be06cfe90d76057d466fda75bc441645946",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c259be06cfe90d76057d466fda75bc441645946"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a83f3c2426429ddf3e38cfc26204398c097a23d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a83f3c2426429ddf3e38cfc26204398c097a23d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a83f3c2426429ddf3e38cfc26204398c097a23d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a83f3c2426429ddf3e38cfc26204398c097a23d4/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f3b3cdee497b8a1d7c6a7279e7bb13435527b60"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8bda5a037360c8476a1dd0fd77099d80090405b6",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a83f3c2426429ddf3e38cfc26204398c097a23d4/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a83f3c2426429ddf3e38cfc26204398c097a23d4/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=a83f3c2426429ddf3e38cfc26204398c097a23d4",
        "patch": "@@ -563,7 +563,7 @@ void RPCRunLater(const std::string& name, boost::function<void(void)> func, int6\n     deadlineTimers.erase(name);\n     RPCTimerInterface* timerInterface = timerInterfaces[0];\n     LogPrint(\"rpc\", \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n-    deadlineTimers.insert(std::make_pair(name, timerInterface->NewTimer(func, nSeconds*1000)));\n+    deadlineTimers.insert(std::make_pair(name, boost::shared_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000))));\n }\n \n const CRPCTable tableRPC;"
      }
    ]
  },
  {
    "sha": "26752767df451f710e1ad592bc80e8ab89116735",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjc1Mjc2N2RmNDUxZjcxMGUxYWQ1OTJiYzgwZThhYjg5MTE2NzM1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-29T12:12:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-29T12:12:47Z"
      },
      "message": "Merge pull request #6894\n\n3e187f2 Fix BIP65 p2p test (Suhas Daftuar)",
      "tree": {
        "sha": "5071608c4417660d2043276d7568b9b75e2c84ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5071608c4417660d2043276d7568b9b75e2c84ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26752767df451f710e1ad592bc80e8ab89116735",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWMg0/AAoJEHSBCwEjRsmmpn4H/0km5DVIsIHo2kH0pP6S8ZJz\n5gi7sLZRQcujtLKnPo4Bt20JkgtIIxeAPU7MLmlXpAPxMrphn8m5ccuNH5pHt/kp\ni/RpBtrleSlENHEIkFgjVGwWFV3BAFjaYSTxF3tlSrSTx7/xI5OeDoQ/F0UxNnHL\nYVtI20UJSTQgx8sdqDjl7w9uMpm+WQJPd5RGQrrkM/Vn+AwV7agrPA5w9zRFUZZ7\n0R4r26u6w569yom+hYE2qpTPvKtSmSLqIudqq3NRrOQ+0KQ7yoJYAhjrTL9e6O1a\noCD/YI6P4figMIzrqi9wS5pIQAdQU8sYPu4d0ijwUpFTwRsPjAUdUdp1GHenE3Q=\n=hQ5q\n-----END PGP SIGNATURE-----",
        "payload": "tree 5071608c4417660d2043276d7568b9b75e2c84ba\nparent 8daffe227bc67706d6640b67776f7711a6a98607\nparent 3e187f2acdb69ceb97a875f8f3bf361c11ef543c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446120754 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446120767 +0100\n\nMerge pull request #6894\n\n3e187f2 Fix BIP65 p2p test (Suhas Daftuar)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26752767df451f710e1ad592bc80e8ab89116735",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26752767df451f710e1ad592bc80e8ab89116735",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26752767df451f710e1ad592bc80e8ab89116735/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8daffe227bc67706d6640b67776f7711a6a98607",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8daffe227bc67706d6640b67776f7711a6a98607",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8daffe227bc67706d6640b67776f7711a6a98607"
      },
      {
        "sha": "3e187f2acdb69ceb97a875f8f3bf361c11ef543c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e187f2acdb69ceb97a875f8f3bf361c11ef543c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e187f2acdb69ceb97a875f8f3bf361c11ef543c"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 15,
      "deletions": 8
    },
    "files": [
      {
        "sha": "9ca5c69f162d23752337d0408996b3d54df90751",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26752767df451f710e1ad592bc80e8ab89116735/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26752767df451f710e1ad592bc80e8ab89116735/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=26752767df451f710e1ad592bc80e8ab89116735",
        "patch": "@@ -67,32 +67,35 @@ def create_transaction(self, node, coinbase, to_address, amount):\n     def get_tests(self):\n \n         self.coinbase_blocks = self.nodes[0].generate(2)\n+        height = 3  # height of the next block to build\n         self.tip = int (\"0x\" + self.nodes[0].getbestblockhash() + \"L\", 0)\n         self.nodeaddress = self.nodes[0].getnewaddress()\n         self.last_block_time = time.time()\n \n         ''' 98 more version 3 blocks '''\n         test_blocks = []\n         for i in xrange(98):\n-            block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n             block.nVersion = 3\n             block.rehash()\n             block.solve()\n             test_blocks.append([block, True])\n             self.last_block_time += 1\n             self.tip = block.sha256\n+            height += 1\n         yield TestInstance(test_blocks, sync_every_block=False)\n \n         ''' Mine 749 version 4 blocks '''\n         test_blocks = []\n         for i in xrange(749):\n-            block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n             block.nVersion = 4\n             block.rehash()\n             block.solve()\n             test_blocks.append([block, True])\n             self.last_block_time += 1\n             self.tip = block.sha256\n+            height += 1\n         yield TestInstance(test_blocks, sync_every_block=False)\n \n         '''\n@@ -104,7 +107,7 @@ def get_tests(self):\n         cltv_invalidate(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(2), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 4\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n@@ -113,6 +116,7 @@ def get_tests(self):\n \n         self.last_block_time += 1\n         self.tip = block.sha256\n+        height += 1\n         yield TestInstance([[block, True]])\n \n         '''\n@@ -124,7 +128,7 @@ def get_tests(self):\n         cltv_invalidate(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 4\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n@@ -136,35 +140,38 @@ def get_tests(self):\n         ''' Mine 199 new version blocks on last valid tip '''\n         test_blocks = []\n         for i in xrange(199):\n-            block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n             block.nVersion = 4\n             block.rehash()\n             block.solve()\n             test_blocks.append([block, True])\n             self.last_block_time += 1\n             self.tip = block.sha256\n+            height += 1\n         yield TestInstance(test_blocks, sync_every_block=False)\n \n         ''' Mine 1 old version block '''\n-        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 3\n         block.rehash()\n         block.solve()\n         self.last_block_time += 1\n         self.tip = block.sha256\n+        height += 1\n         yield TestInstance([[block, True]])\n \n         ''' Mine 1 new version block '''\n-        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 4\n         block.rehash()\n         block.solve()\n         self.last_block_time += 1\n         self.tip = block.sha256\n+        height += 1\n         yield TestInstance([[block, True]])\n \n         ''' Mine 1 old version block, should be invalid '''\n-        block = create_block(self.tip, create_coinbase(1), self.last_block_time + 1)\n+        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n         block.nVersion = 3\n         block.rehash()\n         block.solve()"
      }
    ]
  },
  {
    "sha": "b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmNlMmMxZjBmYjEyYWY4MmYzZmY5ZjIwYzY2NDkyYjkyNjNmYTEw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-29T12:26:37Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-29T12:30:42Z"
      },
      "message": "Merge pull request #6870\n\n040c0ea Init: Cleanup error and warning strings (MarcoFalke)\n6782f58 [trivial] Latest config.guess (MarcoFalke)\nbf68191 [trivial] rpcnet: fix typo (MarcoFalke)\n95f4291 [trivial] Rewrite help text for feature enabled by default (MarcoFalke)",
      "tree": {
        "sha": "6c5e35f1587f438d2f0af1e9f5bb58d3100dee29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c5e35f1587f438d2f0af1e9f5bb58d3100dee29"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWMhFyAAoJEHSBCwEjRsmmk24H/iaHLs+eSkx1rZYkH+Y/UMb8\nWylNV/fTsX8bOEqXQHId/fjK3TwbdF5wKm9drpCPoLVi51dWWNuDBldHw7ZkAXYq\naidHhOTI8VKPIqACYuJq0nQIZony9NTgvvY1U4XOfQ8m9+91p+kRegNKlbljuCcV\n4s01gctDLt3IZjoH8Hoz5NZrzXvg3zf0qK8lBrs9NdSYdXOpD0KFB6LUiScaFWsr\nWye23nld/SBn7UN7SInRskfQ8/VYiVbvg+jGmlVE/BwLZKaLjm/sJAHrKuhedtEL\n0fXpaeMKp7TipuSwl7GRKAUHFoYmAuNz9u7TWiBWuhrtEbG+RK2QHJ+NoQWOkuY=\n=05YI\n-----END PGP SIGNATURE-----",
        "payload": "tree 6c5e35f1587f438d2f0af1e9f5bb58d3100dee29\nparent 26752767df451f710e1ad592bc80e8ab89116735\nparent 040c0ea0935ffa0a23972250c23cd0d7b6b1b702\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446121597 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446121842 +0100\n\nMerge pull request #6870\n\n040c0ea Init: Cleanup error and warning strings (MarcoFalke)\n6782f58 [trivial] Latest config.guess (MarcoFalke)\nbf68191 [trivial] rpcnet: fix typo (MarcoFalke)\n95f4291 [trivial] Rewrite help text for feature enabled by default (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26752767df451f710e1ad592bc80e8ab89116735",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26752767df451f710e1ad592bc80e8ab89116735",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26752767df451f710e1ad592bc80e8ab89116735"
      },
      {
        "sha": "040c0ea0935ffa0a23972250c23cd0d7b6b1b702",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/040c0ea0935ffa0a23972250c23cd0d7b6b1b702",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/040c0ea0935ffa0a23972250c23cd0d7b6b1b702"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 18,
      "deletions": 19
    },
    "files": [
      {
        "sha": "1669ec03ce82aa862bf1e59defa53e30258af763",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
        "patch": "@@ -93,7 +93,7 @@ AC_ARG_ENABLE(tests,\n     [use_tests=yes])\n \n AC_ARG_ENABLE(bench,\n-    AS_HELP_STRING([--enable-bench],[compile benchmarks (default is yes)]),\n+    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n     [use_bench=$enableval],\n     [use_bench=yes])\n "
      },
      {
        "sha": "b3f905370ac63a60097a2d83dded1dee3387581f",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
        "patch": "@@ -2,7 +2,7 @@\n # Attempt to guess a canonical system name.\n #   Copyright 1992-2015 Free Software Foundation, Inc.\n \n-timestamp='2015-09-14'\n+timestamp='2015-10-21'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -1123,7 +1123,7 @@ EOF\n \t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n \t# the processor, so we play safe by assuming i586.\n \t# Note: whatever this is, it MUST be the same as what config.sub\n-\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n+\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n \t# this is a cross-build.\n \techo i586-pc-msdosdjgpp\n \texit ;;"
      },
      {
        "sha": "b95259cdc9debc0285239406396f175ea7d0f3bb",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
        "patch": "@@ -52,7 +52,7 @@ Try to write translation strings in an understandable way, for both the user and\n ### Do not translate internal errors\n \n Do not translate internal errors, or log messages, or messages that appear on the RPC interface. If an error is to be shown to the user,\n-use a generic message, then log the detailed message to the log. E.g. \"Error: A fatal internal error occurred, see debug.log for details\".\n+use a translatable generic message, then log the detailed message to the log. E.g. \"A fatal internal error occurred, see debug.log for details\".\n This helps troubleshooting; if the error is the same for everyone, the likelihood is increased that it can be found using a search engine.\n \n ### Avoid fragments"
      },
      {
        "sha": "76adca76923c6f406c28c41c1d0fb3c478f9326e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
        "patch": "@@ -692,13 +692,13 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n #endif\n \n     if (!SetupNetworking())\n-        return InitError(\"Error: Initializing networking failed\");\n+        return InitError(\"Initializing networking failed\");\n \n #ifndef WIN32\n     if (GetBoolArg(\"-sysperms\", false)) {\n #ifdef ENABLE_WALLET\n         if (!GetBoolArg(\"-disablewallet\", false))\n-            return InitError(\"Error: -sysperms is not allowed in combination with enabled wallet functionality\");\n+            return InitError(\"-sysperms is not allowed in combination with enabled wallet functionality\");\n #endif\n     } else {\n         umask(077);\n@@ -829,16 +829,16 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // Check for -debugnet\n     if (GetBoolArg(\"-debugnet\", false))\n-        InitWarning(_(\"Warning: Unsupported argument -debugnet ignored, use -debug=net.\"));\n+        InitWarning(_(\"Unsupported argument -debugnet ignored, use -debug=net.\"));\n     // Check for -socks - as this is a privacy risk to continue, exit here\n     if (mapArgs.count(\"-socks\"))\n-        return InitError(_(\"Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.\"));\n+        return InitError(_(\"Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.\"));\n     // Check for -tor - as this is a privacy risk to continue, exit here\n     if (GetBoolArg(\"-tor\", false))\n-        return InitError(_(\"Error: Unsupported argument -tor found, use -onion.\"));\n+        return InitError(_(\"Unsupported argument -tor found, use -onion.\"));\n \n     if (GetBoolArg(\"-benchmark\", false))\n-        InitWarning(_(\"Warning: Unsupported argument -benchmark ignored, use -debug=bench.\"));\n+        InitWarning(_(\"Unsupported argument -benchmark ignored, use -debug=bench.\"));\n \n     // Checkmempool and checkblockindex default to true in regtest mode\n     int ratio = std::min<int>(std::max<int>(GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n@@ -852,7 +852,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     int64_t nMempoolSizeLimit = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     int64_t nMempoolDescendantSizeLimit = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n     if (nMempoolSizeLimit < 0 || nMempoolSizeLimit < nMempoolDescendantSizeLimit * 40)\n-        return InitError(strprintf(_(\"Error: -maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 25));\n+        return InitError(strprintf(_(\"-maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 25));\n \n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n     nScriptCheckThreads = GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n@@ -921,7 +921,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n             return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s'\"), mapArgs[\"-paytxfee\"]));\n         if (nFeePerK > nHighTransactionFeeWarning)\n-            InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n+            InitWarning(_(\"-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n         payTxFee = CFeeRate(nFeePerK, 1000);\n         if (payTxFee < ::minRelayTxFee)\n         {\n@@ -935,7 +935,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (!ParseMoney(mapArgs[\"-maxtxfee\"], nMaxFee))\n             return InitError(strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s'\"), mapArgs[\"-maptxfee\"]));\n         if (nMaxFee > nHighTransactionMaxFeeWarning)\n-            InitWarning(_(\"Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n+            InitWarning(_(\"-maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n         maxTxFee = nMaxFee;\n         if (CFeeRate(maxTxFee, 1000) < ::minRelayTxFee)\n         {\n@@ -1062,12 +1062,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     BOOST_FOREACH(string cmt, mapMultiArgs[\"-uacomment\"])\n     {\n         if (cmt != SanitizeString(cmt, SAFE_CHARS_UA_COMMENT))\n-            return InitError(strprintf(\"User Agent comment (%s) contains unsafe characters.\", cmt));\n+            return InitError(strprintf(_(\"User Agent comment (%s) contains unsafe characters.\"), cmt));\n         uacomments.push_back(SanitizeString(cmt, SAFE_CHARS_UA_COMMENT));\n     }\n     strSubVersion = FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, uacomments);\n     if (strSubVersion.size() > MAX_SUBVERSION_LENGTH) {\n-        return InitError(strprintf(\"Total length of network version string %i exceeds maximum of %i characters. Reduce the number and/or size of uacomments.\",\n+        return InitError(strprintf(_(\"Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.\"),\n             strSubVersion.size(), MAX_SUBVERSION_LENGTH));\n     }\n \n@@ -1391,9 +1391,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 strErrors << _(\"Error loading wallet.dat: Wallet corrupted\") << \"\\n\";\n             else if (nLoadWalletRet == DB_NONCRITICAL_ERROR)\n             {\n-                string msg(_(\"Warning: error reading wallet.dat! All keys read correctly, but transaction data\"\n+                InitWarning(_(\"Error reading wallet.dat! All keys read correctly, but transaction data\"\n                              \" or address book entries might be missing or incorrect.\"));\n-                InitWarning(msg);\n             }\n             else if (nLoadWalletRet == DB_TOO_NEW)\n                 strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin Core\") << \"\\n\";"
      },
      {
        "sha": "9bf017e385fb2921941b81499463cc8a484ee2bc",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
        "patch": "@@ -29,7 +29,7 @@ UniValue getconnectioncount(const UniValue& params, bool fHelp)\n         throw runtime_error(\n             \"getconnectioncount\\n\"\n             \"\\nReturns the number of connections to other nodes.\\n\"\n-            \"\\nbResult:\\n\"\n+            \"\\nResult:\\n\"\n             \"n          (numeric) The connection count\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getconnectioncount\", \"\")\n@@ -83,7 +83,7 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n         throw runtime_error(\n             \"getpeerinfo\\n\"\n             \"\\nReturns data about each connected network node as a json array of objects.\\n\"\n-            \"\\nbResult:\\n\"\n+            \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n             \"    \\\"id\\\": n,                   (numeric) Peer index\\n\""
      }
    ]
  },
  {
    "sha": "b28c229324d02963d79d66df85efe6bd78db451e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjhjMjI5MzI0ZDAyOTYzZDc5ZDY2ZGY4NWVmZTZiZDc4ZGI0NTFl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-29T12:39:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-29T12:39:56Z"
      },
      "message": "Merge pull request #6899\n\na83f3c2 Add explicit shared_ptr constructor due to C++11 error (Bob McElrath)",
      "tree": {
        "sha": "c84982f99e7c4d9f12673e3c4b0bf532d37de696",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c84982f99e7c4d9f12673e3c4b0bf532d37de696"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b28c229324d02963d79d66df85efe6bd78db451e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWMhOcAAoJEHSBCwEjRsmmBfgIAJ6Vxj45XzihuJMWJsyE+Yl/\nK6XBVytXuVZFAWmnAk+TP5TLuDju+sc39Ik0+xCkcbTxGeTqqsFX4m/cLY/XPGgA\np0eImHTye/EQKuV8mI8tUmNKLnEQPs5qrePwsxEAiCT4lut9Ob5dhpzpltC4v+QX\nW5pCP+Fk9XCO7YZsjHQA9PnTUxYDYoOsumUofWnTYbRfByYrPEhOxGwGegUe8vuE\nduNFE7XaqNdGEwR0dha4jWH0tstLjbO+EdPevblw0QSqD/GurLngD0E7vAzwSo8s\nKB1WJgSM+k4jLuH+Nk/L3QJb3G09RUTj4UnSdius6miPUzvb25f0dVihSzw3Lx0=\n=mOJZ\n-----END PGP SIGNATURE-----",
        "payload": "tree c84982f99e7c4d9f12673e3c4b0bf532d37de696\nparent b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10\nparent a83f3c2426429ddf3e38cfc26204398c097a23d4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446122391 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446122396 +0100\n\nMerge pull request #6899\n\na83f3c2 Add explicit shared_ptr constructor due to C++11 error (Bob McElrath)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b28c229324d02963d79d66df85efe6bd78db451e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b28c229324d02963d79d66df85efe6bd78db451e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b28c229324d02963d79d66df85efe6bd78db451e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2ce2c1f0fb12af82f3ff9f20c66492b9263fa10"
      },
      {
        "sha": "a83f3c2426429ddf3e38cfc26204398c097a23d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a83f3c2426429ddf3e38cfc26204398c097a23d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a83f3c2426429ddf3e38cfc26204398c097a23d4"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8bda5a037360c8476a1dd0fd77099d80090405b6",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b28c229324d02963d79d66df85efe6bd78db451e/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b28c229324d02963d79d66df85efe6bd78db451e/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=b28c229324d02963d79d66df85efe6bd78db451e",
        "patch": "@@ -563,7 +563,7 @@ void RPCRunLater(const std::string& name, boost::function<void(void)> func, int6\n     deadlineTimers.erase(name);\n     RPCTimerInterface* timerInterface = timerInterfaces[0];\n     LogPrint(\"rpc\", \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n-    deadlineTimers.insert(std::make_pair(name, timerInterface->NewTimer(func, nSeconds*1000)));\n+    deadlineTimers.insert(std::make_pair(name, boost::shared_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000))));\n }\n \n const CRPCTable tableRPC;"
      }
    ]
  },
  {
    "sha": "725539ea03769416d3502feeb4dfcbec3fbb7ae0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjU1MzllYTAzNzY5NDE2ZDM1MDJmZWViNGRmY2JlYzNmYmI3YWUw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-29T12:40:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-29T12:40:33Z"
      },
      "message": "Merge pull request #6863\n\n0be387a unittest: fix test for null tx input (Daniel Kraft)",
      "tree": {
        "sha": "a1d0d30e7b6defd2559b90c180edb0978d75b070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1d0d30e7b6defd2559b90c180edb0978d75b070"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/725539ea03769416d3502feeb4dfcbec3fbb7ae0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWMhPBAAoJEHSBCwEjRsmmIdIIAMtkwbSgdtzxWtK2upqclSxB\npPZdL/clklLd81dMdSIEKQypsg7/wTkQWeedVQnKMvtWbQkTG2jXy8+/8ItFupCa\nceQSKs/anSnnffRAg1gt6esWiyTOlaJ6yKfgNj4Y7A+yqS+M2MSo4vo9jYVoKxKC\nWnQMsHOP1cR3Je1JgBw5zWZrzyOKJeaWdjIyjnAm+p9PfzBOeLpYmb4rtNH1X/6W\n2Ugn71/zpEGHI9/780QbIDQ5QeTGnuxvG3WIOKG/7E3nFRozApBRrriSjJzVvafD\nAFM3R7kwDiwXWyhBC920CkqKinPEHOGdG8HXhWjr5a9F5zQaA6/EbPlSocJtTTk=\n=DBmn\n-----END PGP SIGNATURE-----",
        "payload": "tree a1d0d30e7b6defd2559b90c180edb0978d75b070\nparent b28c229324d02963d79d66df85efe6bd78db451e\nparent 0be387a536f03a1dd0df66176fc354fb0895be48\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446122428 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446122433 +0100\n\nMerge pull request #6863\n\n0be387a unittest: fix test for null tx input (Daniel Kraft)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/725539ea03769416d3502feeb4dfcbec3fbb7ae0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/725539ea03769416d3502feeb4dfcbec3fbb7ae0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/725539ea03769416d3502feeb4dfcbec3fbb7ae0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b28c229324d02963d79d66df85efe6bd78db451e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b28c229324d02963d79d66df85efe6bd78db451e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b28c229324d02963d79d66df85efe6bd78db451e"
      },
      {
        "sha": "0be387a536f03a1dd0df66176fc354fb0895be48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0be387a536f03a1dd0df66176fc354fb0895be48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0be387a536f03a1dd0df66176fc354fb0895be48"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "cc059e814fdf1100b6277636727fc9400f0e54d1",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/725539ea03769416d3502feeb4dfcbec3fbb7ae0/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/725539ea03769416d3502feeb4dfcbec3fbb7ae0/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "patch": "@@ -64,9 +64,13 @@\n [[[\"0000000000000000000000000000000000000000000000000000000000000000\", -1, \"1\"]],\n \"01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff655151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151ffffffff010000000000000000015100000000\", \"P2SH\"],\n \n-[\"Null txin\"],\n-[[[\"0000000000000000000000000000000000000000000000000000000000000000\", -1, \"HASH160 0x14 0x02dae7dbbda56097959cba59b1989dd3e47937bf EQUAL\"]],\n-\"01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff6e49304602210086f39e028e46dafa8e1e3be63906465f4cf038fbe5ed6403dc3e74ae876e6431022100c4625c675cfc5c7e3a0e0d7eaec92ac24da20c73a88eb40d09253e51ac6def5201232103a183ddc41e84753aca47723c965d1b5c8b0e2b537963518355e6dd6cf8415e50acffffffff010000000000000000015100000000\", \"P2SH\"],\n+[\"Null txin, but without being a coinbase (because there are two inputs)\"],\n+[[[\"0000000000000000000000000000000000000000000000000000000000000000\", -1, \"1\"],\n+  [\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1\"]],\n+\"01000000020000000000000000000000000000000000000000000000000000000000000000ffffffff00ffffffff00010000000000000000000000000000000000000000000000000000000000000000000000ffffffff010000000000000000015100000000\", \"P2SH\"],\n+[[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"1\"],\n+  [\"0000000000000000000000000000000000000000000000000000000000000000\", -1, \"1\"]],\n+\"010000000200010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000000000000ffffffff00ffffffff010000000000000000015100000000\", \"P2SH\"],\n \n [\"Same as the transactions in valid with one input SIGHASH_ALL and one SIGHASH_ANYONECANPAY, but we set the _ANYONECANPAY sequence number, invalidating the SIGHASH_ALL signature\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0x21 0x035e7f0d4d0841bcd56c39337ed086b1a633ee770c1ffdd94ac552a95ac2ce0efc CHECKSIG\"],"
      }
    ]
  },
  {
    "sha": "6342a4889bc4add42c270e1e0aee246a7f0692dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzQyYTQ4ODliYzRhZGQ0MmMyNzBlMWUwYWVlMjQ2YTdmMDY5MmRj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-29T15:52:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-29T15:52:40Z"
      },
      "message": "Init: Use DEFAULT_TRANSACTION_MINFEE in help message",
      "tree": {
        "sha": "31f04f5dba3b802ad901aac945c08af538f76f9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31f04f5dba3b802ad901aac945c08af538f76f9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6342a4889bc4add42c270e1e0aee246a7f0692dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6342a4889bc4add42c270e1e0aee246a7f0692dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6342a4889bc4add42c270e1e0aee246a7f0692dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6342a4889bc4add42c270e1e0aee246a7f0692dc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9c73a130ebf2369381241d0053c8fa0a301e0fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9c73a130ebf2369381241d0053c8fa0a301e0fc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9c73a130ebf2369381241d0053c8fa0a301e0fc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "48680edc2428e7f0d0b8e503a42c29145e0c1ef4",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6342a4889bc4add42c270e1e0aee246a7f0692dc/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6342a4889bc4add42c270e1e0aee246a7f0692dc/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6342a4889bc4add42c270e1e0aee246a7f0692dc",
        "patch": "@@ -374,7 +374,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\",\n-            CURRENCY_UNIT, FormatMoney(CWallet::minTxFee.GetFeePerK())));\n+            CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(payTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));"
      }
    ]
  },
  {
    "sha": "28313b83fc1a16b5e6da2b868b5f297050ce8b05",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODMxM2I4M2ZjMWExNmI1ZTZkYTJiODY4YjVmMjk3MDUwY2U4YjA1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-22T11:33:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-29T17:01:39Z"
      },
      "message": "[qt] Use fixed pitch font for the rpc console\n\nAlso:\n* Preserve white space\n* Make fixed font as large as default font",
      "tree": {
        "sha": "f0362697b3de238017fb38565bf3208537e34abb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0362697b3de238017fb38565bf3208537e34abb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28313b83fc1a16b5e6da2b868b5f297050ce8b05",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28313b83fc1a16b5e6da2b868b5f297050ce8b05",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28313b83fc1a16b5e6da2b868b5f297050ce8b05",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28313b83fc1a16b5e6da2b868b5f297050ce8b05/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8daffe227bc67706d6640b67776f7711a6a98607",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8daffe227bc67706d6640b67776f7711a6a98607",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8daffe227bc67706d6640b67776f7711a6a98607"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 18,
      "deletions": 11
    },
    "files": [
      {
        "sha": "a488d298c46a7e53604bad84b07ba71f4824e291",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "patch": "@@ -218,7 +218,7 @@ QVariant AddressTableModel::data(const QModelIndex &index, int role) const\n         QFont font;\n         if(index.column() == Address)\n         {\n-            font = GUIUtil::bitcoinAddressFont();\n+            font = GUIUtil::fixedPitchFont();\n         }\n         return font;\n     }"
      },
      {
        "sha": "1c0056a7bd074bfa7bcba2337eec652800339114",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "patch": "@@ -88,7 +88,7 @@ QString dateTimeStr(qint64 nTime)\n     return dateTimeStr(QDateTime::fromTime_t((qint32)nTime));\n }\n \n-QFont bitcoinAddressFont()\n+QFont fixedPitchFont()\n {\n     QFont font(\"Monospace\");\n #if QT_VERSION >= 0x040800\n@@ -103,7 +103,7 @@ void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n {\n     parent->setFocusProxy(widget);\n \n-    widget->setFont(bitcoinAddressFont());\n+    widget->setFont(fixedPitchFont());\n #if QT_VERSION >= 0x040700\n     // We don't want translators to use own addresses in translations\n     // and this is the only place, where this address is supplied."
      },
      {
        "sha": "ec678c4af2277a3bd32982cca92a14bad30ab903",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "patch": "@@ -37,8 +37,8 @@ namespace GUIUtil\n     QString dateTimeStr(const QDateTime &datetime);\n     QString dateTimeStr(qint64 nTime);\n \n-    // Render Bitcoin addresses in monospace font\n-    QFont bitcoinAddressFont();\n+    // Return a monospace font\n+    QFont fixedPitchFont();\n \n     // Set up widgets for address and amounts\n     void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent);"
      },
      {
        "sha": "5be750772f273220e74bf2323ce986027e8c9390",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "patch": "@@ -462,13 +462,19 @@ void RPCConsole::clear()\n     }\n \n     // Set default style sheet\n+    QFontInfo fixedFontInfo(GUIUtil::fixedPitchFont());\n+    // Try to make font equally large on different OS.\n+    QString ptSize = QString(\"%1pt\").arg(QFontInfo(QFont()).pointSize());\n     ui->messagesWidget->document()->setDefaultStyleSheet(\n+        QString(\n                 \"table { }\"\n                 \"td.time { color: #808080; padding-top: 3px; } \"\n+                \"td.message { font-family: %1; font-size: %2; white-space:pre-wrap; } \"\n                 \"td.cmd-request { color: #006060; } \"\n                 \"td.cmd-error { color: red; } \"\n                 \"b { color: #006060; } \"\n-                );\n+            ).arg(fixedFontInfo.family(), ptSize)\n+        );\n \n     message(CMD_REPLY, (tr(\"Welcome to the Bitcoin Core RPC console.\") + \"<br>\" +\n                         tr(\"Use up and down arrows to navigate history, and <b>Ctrl-L</b> to clear screen.\") + \"<br>\" +\n@@ -494,7 +500,7 @@ void RPCConsole::message(int category, const QString &message, bool html)\n     if(html)\n         out += message;\n     else\n-        out += GUIUtil::HtmlEscape(message, true);\n+        out += GUIUtil::HtmlEscape(message, false);\n     out += \"</td></tr></table>\";\n     ui->messagesWidget->append(out);\n }\n@@ -849,4 +855,4 @@ void RPCConsole::showOrHideBanTableIfRequired()\n     bool visible = clientModel->getBanTableModel()->shouldShow();\n     ui->banlistWidget->setVisible(visible);\n     ui->banHeading->setVisible(visible);\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "d5932ff149ca00338e0bd81d3f714dbb2c38aaa2",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "patch": "@@ -71,6 +71,7 @@ private Q_SLOTS:\n \n public Q_SLOTS:\n     void clear();\n+    /** Append the message to the message widget */\n     void message(int category, const QString &message, bool html = false);\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);"
      },
      {
        "sha": "4f4b5b70d50e6eea5340af81f613f1df7e605e71",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "patch": "@@ -40,7 +40,7 @@ SendCoinsEntry::SendCoinsEntry(const PlatformStyle *platformStyle, QWidget *pare\n     // normal bitcoin address field\n     GUIUtil::setupAddressWidget(ui->payTo, this);\n     // just a label for displaying bitcoin address(es)\n-    ui->payTo_is->setFont(GUIUtil::bitcoinAddressFont());\n+    ui->payTo_is->setFont(GUIUtil::fixedPitchFont());\n \n     // Connect signals\n     connect(ui->payAmount, SIGNAL(valueChanged()), this, SIGNAL(payAmountChanged()));"
      },
      {
        "sha": "96f50a26563ff53db27eb315bfa13e8c21bfcc6d",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28313b83fc1a16b5e6da2b868b5f297050ce8b05/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "patch": "@@ -51,8 +51,8 @@ SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *platformSt\n     ui->messageIn_VM->installEventFilter(this);\n     ui->signatureIn_VM->installEventFilter(this);\n \n-    ui->signatureOut_SM->setFont(GUIUtil::bitcoinAddressFont());\n-    ui->signatureIn_VM->setFont(GUIUtil::bitcoinAddressFont());\n+    ui->signatureOut_SM->setFont(GUIUtil::fixedPitchFont());\n+    ui->signatureIn_VM->setFont(GUIUtil::fixedPitchFont());\n }\n \n SignVerifyMessageDialog::~SignVerifyMessageDialog()"
      }
    ]
  },
  {
    "sha": "30d9662bd780e298516d514984ced1f88ec5bc3b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGQ5NjYyYmQ3ODBlMjk4NTE2ZDUxNDk4NGNlZDFmODhlYzViYzNi",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-10-29T18:24:49Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-10-29T18:24:49Z"
      },
      "message": "Reject invalid pubkeys when reading ckey items from the wallet.\n\nThis makes the behavior more consistent with key objects and will\n reject some corrupted pubkeys (e.g. zero length).",
      "tree": {
        "sha": "a0836c96114e13b28dc4cbd46d4a3ef875212866",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0836c96114e13b28dc4cbd46d4a3ef875212866"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30d9662bd780e298516d514984ced1f88ec5bc3b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30d9662bd780e298516d514984ced1f88ec5bc3b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30d9662bd780e298516d514984ced1f88ec5bc3b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30d9662bd780e298516d514984ced1f88ec5bc3b/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/725539ea03769416d3502feeb4dfcbec3fbb7ae0"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ea8a4eb043cc56876dda668fcce43425f179ec6a",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30d9662bd780e298516d514984ced1f88ec5bc3b/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30d9662bd780e298516d514984ced1f88ec5bc3b/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=30d9662bd780e298516d514984ced1f88ec5bc3b",
        "patch": "@@ -512,8 +512,13 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         }\n         else if (strType == \"ckey\")\n         {\n-            vector<unsigned char> vchPubKey;\n+            CPubKey vchPubKey;\n             ssKey >> vchPubKey;\n+            if (!vchPubKey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CPubKey corrupt\";\n+                return false;\n+            }\n             vector<unsigned char> vchPrivKey;\n             ssValue >> vchPrivKey;\n             wss.nCKeys++;"
      }
    ]
  },
  {
    "sha": "a6efc019085fd70790ad7fa97078ce02d8f8dec3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmVmYzAxOTA4NWZkNzA3OTBhZDdmYTk3MDc4Y2UwMmQ4ZjhkZWMz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-06-30T23:22:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-29T23:32:08Z"
      },
      "message": "Bugfix: Omit wallet-related options from -help when wallet is disabled",
      "tree": {
        "sha": "7fa3e8a3a97b7eea99ab6dda743e6064cbcf4eba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fa3e8a3a97b7eea99ab6dda743e6064cbcf4eba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6efc019085fd70790ad7fa97078ce02d8f8dec3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6efc019085fd70790ad7fa97078ce02d8f8dec3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6efc019085fd70790ad7fa97078ce02d8f8dec3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6efc019085fd70790ad7fa97078ce02d8f8dec3/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f9260f45843e5b0e1f4156af0f7b6d6c2d93a76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f9260f45843e5b0e1f4156af0f7b6d6c2d93a76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f9260f45843e5b0e1f4156af0f7b6d6c2d93a76"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3c8a9a08ffce5119b24ece897ed24790964eec8c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6efc019085fd70790ad7fa97078ce02d8f8dec3/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6efc019085fd70790ad7fa97078ce02d8f8dec3/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a6efc019085fd70790ad7fa97078ce02d8f8dec3",
        "patch": "@@ -404,12 +404,16 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug)\n     {\n         strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", 1));\n+#ifdef ENABLE_WALLET\n         strUsage += HelpMessageOpt(\"-dblogsize=<n>\", strprintf(\"Flush wallet database activity from memory to disk log every <n> megabytes (default: %u)\", DEFAULT_WALLET_DBLOGSIZE));\n+#endif\n         strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", 0));\n         strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", 0));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n+#ifdef ENABLE_WALLET\n         strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+#endif\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n         strUsage += HelpMessageOpt(\"-limitancestorcount=<n>\", strprintf(\"Do not accept transactions if number of in-mempool ancestors is <n> or more (default: %u)\", DEFAULT_ANCESTOR_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT));"
      }
    ]
  },
  {
    "sha": "87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4N2NiZGI4YjQxZWVlNDA2NzAyM2NmYTBkOWQ2ODcyMmRhNzRhNWVi",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-17T12:19:21Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-30T13:07:30Z"
      },
      "message": "Globals: Explicit Consensus::Params arg for main:\n\n-CheckBlockIndex\n-DisconnectTip\n-GetTransaction\n-InvalidateBlock\n-ProcessGetData\n-ReadBlockFromDisk",
      "tree": {
        "sha": "2da5f329b57e2b9624db73407ec70fca187f0888",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2da5f329b57e2b9624db73407ec70fca187f0888"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/725539ea03769416d3502feeb4dfcbec3fbb7ae0"
      }
    ],
    "stats": {
      "total": 97,
      "additions": 52,
      "deletions": 45
    },
    "files": [
      {
        "sha": "4470cd73365aed5b29360b12b38e337755c3eb23",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 29,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "patch": "@@ -92,7 +92,7 @@ void EraseOrphansFor(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n  * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n  */\n static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams);\n-static void CheckBlockIndex();\n+static void CheckBlockIndex(const Consensus::Params& consensusParams);\n \n /** Constant stuff for coinbase transactions we create: */\n CScript COINBASE_FLAGS;\n@@ -998,7 +998,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in tx, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256 &hash, CTransaction &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n {\n     CBlockIndex *pindexSlow = NULL;\n \n@@ -1044,7 +1044,7 @@ bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock\n \n     if (pindexSlow) {\n         CBlock block;\n-        if (ReadBlockFromDisk(block, pindexSlow)) {\n+        if (ReadBlockFromDisk(block, pindexSlow, consensusParams)) {\n             BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n                 if (tx.GetHash() == hash) {\n                     txOut = tx;\n@@ -1089,7 +1089,7 @@ bool WriteBlockToDisk(const CBlock& block, CDiskBlockPos& pos, const CMessageHea\n     return true;\n }\n \n-bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n+bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos, const Consensus::Params& consensusParams)\n {\n     block.SetNull();\n \n@@ -1107,15 +1107,15 @@ bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n     }\n \n     // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits, Params().GetConsensus()))\n+    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n     return true;\n }\n \n-bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex)\n+bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n {\n-    if (!ReadBlockFromDisk(block, pindex->GetBlockPos()))\n+    if (!ReadBlockFromDisk(block, pindex->GetBlockPos(), consensusParams))\n         return false;\n     if (block.GetHash() != pindex->GetBlockHash())\n         return error(\"ReadBlockFromDisk(CBlock&, CBlockIndex*): GetHash() doesn't match index for %s at %s\",\n@@ -2064,13 +2064,14 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n }\n \n /** Disconnect chainActive's tip. You want to manually re-limit mempool size after this */\n-bool static DisconnectTip(CValidationState &state) {\n+bool static DisconnectTip(CValidationState& state, const Consensus::Params& consensusParams)\n+{\n     CBlockIndex *pindexDelete = chainActive.Tip();\n     assert(pindexDelete);\n     mempool.check(pcoinsTip);\n     // Read block from disk.\n     CBlock block;\n-    if (!ReadBlockFromDisk(block, pindexDelete))\n+    if (!ReadBlockFromDisk(block, pindexDelete, consensusParams))\n         return AbortNode(state, \"Failed to read block\");\n     // Apply the block atomically to the chain state.\n     int64_t nStart = GetTimeMicros();\n@@ -2125,13 +2126,14 @@ static int64_t nTimePostConnect = 0;\n  * corresponding to pindexNew, to bypass loading it again from disk.\n  */\n bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, const CBlock *pblock) {\n+    const CChainParams& chainparams = Params();\n     assert(pindexNew->pprev == chainActive.Tip());\n     mempool.check(pcoinsTip);\n     // Read block from disk.\n     int64_t nTime1 = GetTimeMicros();\n     CBlock block;\n     if (!pblock) {\n-        if (!ReadBlockFromDisk(block, pindexNew))\n+        if (!ReadBlockFromDisk(block, pindexNew, chainparams.GetConsensus()))\n             return AbortNode(state, \"Failed to read block\");\n         pblock = &block;\n     }\n@@ -2257,6 +2259,7 @@ static void PruneBlockIndexCandidates() {\n  * pblock is either NULL or a pointer to a CBlock corresponding to pindexMostWork.\n  */\n static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork, const CBlock *pblock) {\n+    const CChainParams& chainparams = Params();\n     AssertLockHeld(cs_main);\n     bool fInvalidFound = false;\n     const CBlockIndex *pindexOldTip = chainActive.Tip();\n@@ -2265,7 +2268,7 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n     // Disconnect active blocks which are no longer in the best chain.\n     bool fBlocksDisconnected = false;\n     while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n-        if (!DisconnectTip(state))\n+        if (!DisconnectTip(state, chainparams.GetConsensus()))\n             return false;\n         fBlocksDisconnected = true;\n     }\n@@ -2333,7 +2336,7 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n     CBlockIndex *pindexNewTip = NULL;\n     CBlockIndex *pindexMostWork = NULL;\n-    const CChainParams& chainParams = Params();\n+    const CChainParams& chainparams = Params();\n     do {\n         boost::this_thread::interruption_point();\n \n@@ -2360,7 +2363,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n             // Relay inventory, but don't relay old inventory during initial block download.\n             int nBlockEstimate = 0;\n             if (fCheckpointsEnabled)\n-                nBlockEstimate = Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints());\n+                nBlockEstimate = Checkpoints::GetTotalBlocksEstimate(chainparams.Checkpoints());\n             {\n                 LOCK(cs_vNodes);\n                 BOOST_FOREACH(CNode* pnode, vNodes)\n@@ -2372,7 +2375,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n             uiInterface.NotifyBlockTip(hashNewTip);\n         }\n     } while(pindexMostWork != chainActive.Tip());\n-    CheckBlockIndex();\n+    CheckBlockIndex(chainparams.GetConsensus());\n \n     // Write changes periodically to disk, after relay.\n     if (!FlushStateToDisk(state, FLUSH_STATE_PERIODIC)) {\n@@ -2382,7 +2385,8 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n     return true;\n }\n \n-bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n+bool InvalidateBlock(CValidationState& state, const Consensus::Params& consensusParams, CBlockIndex *pindex)\n+{\n     AssertLockHeld(cs_main);\n \n     // Mark the block itself as invalid.\n@@ -2397,7 +2401,7 @@ bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n         setBlockIndexCandidates.erase(pindexWalk);\n         // ActivateBestChain considers blocks already in chainActive\n         // unconditionally valid already, so force disconnect away from it.\n-        if (!DisconnectTip(state)) {\n+        if (!DisconnectTip(state, consensusParams)) {\n             return false;\n         }\n     }\n@@ -2899,6 +2903,7 @@ static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned\n \n bool ProcessNewBlock(CValidationState &state, const CNode* pfrom, const CBlock* pblock, bool fForceProcessing, CDiskBlockPos *dbp)\n {\n+    const CChainParams& chainparams = Params();\n     // Preliminary checks\n     bool checked = CheckBlock(*pblock, state);\n \n@@ -2916,7 +2921,7 @@ bool ProcessNewBlock(CValidationState &state, const CNode* pfrom, const CBlock*\n         if (pindex && pfrom) {\n             mapBlockSource[pindex->GetBlockHash()] = pfrom->GetId();\n         }\n-        CheckBlockIndex();\n+        CheckBlockIndex(chainparams.GetConsensus());\n         if (!ret)\n             return error(\"%s: AcceptBlock FAILED\", __func__);\n     }\n@@ -3248,6 +3253,7 @@ CVerifyDB::~CVerifyDB()\n \n bool CVerifyDB::VerifyDB(CCoinsView *coinsview, int nCheckLevel, int nCheckDepth)\n {\n+    const CChainParams& chainparams = Params();\n     LOCK(cs_main);\n     if (chainActive.Tip() == NULL || chainActive.Tip()->pprev == NULL)\n         return true;\n@@ -3272,7 +3278,7 @@ bool CVerifyDB::VerifyDB(CCoinsView *coinsview, int nCheckLevel, int nCheckDepth\n             break;\n         CBlock block;\n         // check level 0: read from disk\n-        if (!ReadBlockFromDisk(block, pindex))\n+        if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n             return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n         // check level 1: verify block validity\n         if (nCheckLevel >= 1 && !CheckBlock(block, state))\n@@ -3312,7 +3318,7 @@ bool CVerifyDB::VerifyDB(CCoinsView *coinsview, int nCheckLevel, int nCheckDepth\n             uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, 100 - (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * 50))));\n             pindex = chainActive.Next(pindex);\n             CBlock block;\n-            if (!ReadBlockFromDisk(block, pindex))\n+            if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n                 return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n             if (!ConnectBlock(block, state, pindex, coins))\n                 return error(\"VerifyDB(): *** found unconnectable block at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n@@ -3485,7 +3491,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                     std::pair<std::multimap<uint256, CDiskBlockPos>::iterator, std::multimap<uint256, CDiskBlockPos>::iterator> range = mapBlocksUnknownParent.equal_range(head);\n                     while (range.first != range.second) {\n                         std::multimap<uint256, CDiskBlockPos>::iterator it = range.first;\n-                        if (ReadBlockFromDisk(block, it->second))\n+                        if (ReadBlockFromDisk(block, it->second, chainparams.GetConsensus()))\n                         {\n                             LogPrintf(\"%s: Processing out of order child %s of %s\\n\", __func__, block.GetHash().ToString(),\n                                     head.ToString());\n@@ -3512,9 +3518,8 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n     return nLoaded > 0;\n }\n \n-void static CheckBlockIndex()\n+void static CheckBlockIndex(const Consensus::Params& consensusParams)\n {\n-    const Consensus::Params& consensusParams = Params().GetConsensus();\n     if (!fCheckBlockIndex) {\n         return;\n     }\n@@ -3796,7 +3801,7 @@ bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n     return true;\n }\n \n-void static ProcessGetData(CNode* pfrom)\n+void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParams)\n {\n     std::deque<CInv>::iterator it = pfrom->vRecvGetData.begin();\n \n@@ -3851,7 +3856,7 @@ void static ProcessGetData(CNode* pfrom)\n                 {\n                     // Send block from disk\n                     CBlock block;\n-                    if (!ReadBlockFromDisk(block, (*mi).second))\n+                    if (!ReadBlockFromDisk(block, (*mi).second, consensusParams))\n                         assert(!\"cannot load block from disk\");\n                     if (inv.type == MSG_BLOCK)\n                         pfrom->PushMessage(\"block\", block);\n@@ -4243,7 +4248,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             LogPrint(\"net\", \"received getdata for: %s peer=%d\\n\", vInv[0].ToString(), pfrom->id);\n \n         pfrom->vRecvGetData.insert(pfrom->vRecvGetData.end(), vInv.begin(), vInv.end());\n-        ProcessGetData(pfrom);\n+        ProcessGetData(pfrom, chainparams.GetConsensus());\n     }\n \n \n@@ -4509,7 +4514,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             pfrom->PushMessage(\"getheaders\", chainActive.GetLocator(pindexLast), uint256());\n         }\n \n-        CheckBlockIndex();\n+        CheckBlockIndex(chainparams.GetConsensus());\n     }\n \n     else if (strCommand == \"block\" && !fImporting && !fReindex) // Ignore blocks received while importing\n@@ -4793,6 +4798,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n // requires LOCK(cs_vRecvMsg)\n bool ProcessMessages(CNode* pfrom)\n {\n+    const CChainParams& chainparams = Params();\n     //if (fDebug)\n     //    LogPrintf(\"%s(%u messages)\\n\", __func__, pfrom->vRecvMsg.size());\n \n@@ -4807,7 +4813,7 @@ bool ProcessMessages(CNode* pfrom)\n     bool fOk = true;\n \n     if (!pfrom->vRecvGetData.empty())\n-        ProcessGetData(pfrom);\n+        ProcessGetData(pfrom, chainparams.GetConsensus());\n \n     // this maintains the order of responses\n     if (!pfrom->vRecvGetData.empty()) return fOk;\n@@ -4834,15 +4840,15 @@ bool ProcessMessages(CNode* pfrom)\n         it++;\n \n         // Scan for message start\n-        if (memcmp(msg.hdr.pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE) != 0) {\n+        if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), MESSAGE_START_SIZE) != 0) {\n             LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);\n             fOk = false;\n             break;\n         }\n \n         // Read header\n         CMessageHeader& hdr = msg.hdr;\n-        if (!hdr.IsValid(Params().MessageStart()))\n+        if (!hdr.IsValid(chainparams.MessageStart()))\n         {\n             LogPrintf(\"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->id);\n             continue;"
      },
      {
        "sha": "f3c5dac1a3346431c4f16ce8398c634c89f5608d",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "patch": "@@ -189,7 +189,7 @@ bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */\n std::string GetWarnings(const std::string& strFor);\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */\n-bool GetTransaction(const uint256 &hash, CTransaction &tx, uint256 &hashBlock, bool fAllowSlow = false);\n+bool GetTransaction(const uint256 &hash, CTransaction &tx, const Consensus::Params& params, uint256 &hashBlock, bool fAllowSlow = false);\n /** Find the best known block, and make it the tip of the block chain */\n bool ActivateBestChain(CValidationState &state, const CBlock *pblock = NULL);\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n@@ -350,9 +350,8 @@ class CScriptCheck\n \n /** Functions for disk access for blocks */\n bool WriteBlockToDisk(const CBlock& block, CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart);\n-bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos);\n-bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex);\n-\n+bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos, const Consensus::Params& consensusParams);\n+bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n \n /** Functions for validating blocks and updating the block tree */\n \n@@ -378,8 +377,7 @@ bool TestBlockValidity(CValidationState &state, const CBlock& block, CBlockIndex\n \n /** Store block on disk. If dbp is non-NULL, the file is known to already reside on disk */\n bool AcceptBlock(const CBlock& block, CValidationState& state, CBlockIndex **pindex, bool fRequested, CDiskBlockPos* dbp);\n-bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBlockIndex **ppindex= NULL);\n-\n+bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, CBlockIndex **ppindex= NULL);\n \n \n class CBlockFileInfo\n@@ -448,7 +446,7 @@ class CVerifyDB {\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator);\n \n /** Mark a block as invalid. */\n-bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex);\n+bool InvalidateBlock(CValidationState& state, const Consensus::Params& consensusParams, CBlockIndex *pindex);\n \n /** Remove invalidity status from a block and its descendants. */\n bool ReconsiderBlock(CValidationState& state, CBlockIndex *pindex);"
      },
      {
        "sha": "5d69542a913b5d62c2ff94d65a95970c361d2e3b",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "patch": "@@ -4,6 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"chain.h\"\n+#include \"chainparams.h\"\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n #include \"main.h\"\n@@ -223,7 +224,7 @@ static bool rest_block(HTTPRequest* req,\n         if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\n             return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not available (pruned data)\");\n \n-        if (!ReadBlockFromDisk(block, pblockindex))\n+        if (!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n             return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n     }\n \n@@ -360,7 +361,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n \n     CTransaction tx;\n     uint256 hashBlock = uint256();\n-    if (!GetTransaction(hash, tx, hashBlock, true))\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n         return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "685d66d2d9f6ac9478edb75113f44bce11cead38",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "patch": "@@ -405,7 +405,7 @@ UniValue getblock(const UniValue& params, bool fHelp)\n     if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Block not available (pruned data)\");\n \n-    if(!ReadBlockFromDisk(block, pblockindex))\n+    if(!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n \n     if (!fVerbose)\n@@ -824,7 +824,7 @@ UniValue invalidateblock(const UniValue& params, bool fHelp)\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n \n         CBlockIndex* pblockindex = mapBlockIndex[hash];\n-        InvalidateBlock(state, pblockindex);\n+        InvalidateBlock(state, Params().GetConsensus(), pblockindex);\n     }\n \n     if (state.IsValid()) {"
      },
      {
        "sha": "11d9a6f2bbd2824b20245663e03b6dd8a3f8cacb",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "patch": "@@ -186,7 +186,7 @@ UniValue getrawtransaction(const UniValue& params, bool fHelp)\n \n     CTransaction tx;\n     uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, hashBlock, true))\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No information available about transaction\");\n \n     string strHex = EncodeHexTx(tx);\n@@ -256,15 +256,15 @@ UniValue gettxoutproof(const UniValue& params, bool fHelp)\n     if (pblockindex == NULL)\n     {\n         CTransaction tx;\n-        if (!GetTransaction(oneTxid, tx, hashBlock, false) || hashBlock.IsNull())\n+        if (!GetTransaction(oneTxid, tx, Params().GetConsensus(), hashBlock, false) || hashBlock.IsNull())\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction not yet in block\");\n         if (!mapBlockIndex.count(hashBlock))\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Transaction index corrupt\");\n         pblockindex = mapBlockIndex[hashBlock];\n     }\n \n     CBlock block;\n-    if(!ReadBlockFromDisk(block, pblockindex))\n+    if(!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n \n     unsigned int ntxFound = 0;"
      },
      {
        "sha": "e81b1daf526fd2f5c235686bc8a469c9f1100560",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "patch": "@@ -1078,7 +1078,7 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), pindex, false) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n \n             CBlock block;\n-            ReadBlockFromDisk(block, pindex);\n+            ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n             BOOST_FOREACH(CTransaction& tx, block.vtx)\n             {\n                 if (AddToWalletIfInvolvingMe(tx, &block, fUpdate))"
      },
      {
        "sha": "ac788843ebdeda99d5160ccf7cf6584ffe873ec4",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87cbdb8b41eee4067023cfa0d9d68722da74a5eb/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"chainparams.h\"\n #include \"zmqpublishnotifier.h\"\n #include \"main.h\"\n #include \"util.h\"\n@@ -142,11 +143,12 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n     LogPrint(\"zmq\", \"Publish raw block %s\\n\", pindex->GetBlockHash().GetHex());\n \n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     {\n         LOCK(cs_main);\n         CBlock block;\n-        if(!ReadBlockFromDisk(block, pindex))\n+        if(!ReadBlockFromDisk(block, pindex, consensusParams))\n         {\n             zmqError(\"Can't read block from disk\");\n             return false;"
      }
    ]
  },
  {
    "sha": "d482c0a7b246aa935595678a0c0e2f5ad530665b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDgyYzBhN2IyNDZhYTkzNTU5NTY3OGEwYzBlMmY1YWQ1MzA2NjVi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-30T23:38:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-30T23:38:31Z"
      },
      "message": "Merge pull request #6896\n\ne9e6163 Make -checkmempool=1 not fail through int32 overflow (Pieter Wuille)",
      "tree": {
        "sha": "70ef1c12005b1ad98e3cff8c9bdadbf959743f89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/70ef1c12005b1ad98e3cff8c9bdadbf959743f89"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d482c0a7b246aa935595678a0c0e2f5ad530665b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWM/93AAoJEHSBCwEjRsmmkE0IAIidh76/EPl0e9RtIOjKCYVJ\n0PFjPn+VJBTaFwEhOPeEdX/QlMA4umihABRbpF2T8SAnBZf/Pg0JglBSNelx1ZHq\nX8TbD6aGVrTAfVSp1wGtH54Rd9gdeTbkPE2ha1CVZvRHq7LMg3oIWeLnYOWspovF\nuVVs70C6eAoGyB89VxQGOkqaU1/Na65ngfpguWDeRMHQtJEBXpTmD0GWU0ujFwH3\na5bSRpGHw0G9lawCy7PgJS0DGzGQPTFcgrPaHWjBtgxDv06NY8TaXLnuaehotjux\nLVCbKnIwri3A5FkPb7SgkzhWTOFWgTTGqldfyBgxSZrm24S2mHyxD41FkA3Hef4=\n=2q7o\n-----END PGP SIGNATURE-----",
        "payload": "tree 70ef1c12005b1ad98e3cff8c9bdadbf959743f89\nparent 725539ea03769416d3502feeb4dfcbec3fbb7ae0\nparent e9e616323bc44daf61f4358f5b2de58e90b5c602\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446248293 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446248311 +0100\n\nMerge pull request #6896\n\ne9e6163 Make -checkmempool=1 not fail through int32 overflow (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d482c0a7b246aa935595678a0c0e2f5ad530665b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d482c0a7b246aa935595678a0c0e2f5ad530665b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d482c0a7b246aa935595678a0c0e2f5ad530665b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/725539ea03769416d3502feeb4dfcbec3fbb7ae0"
      },
      {
        "sha": "e9e616323bc44daf61f4358f5b2de58e90b5c602",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9e616323bc44daf61f4358f5b2de58e90b5c602",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9e616323bc44daf61f4358f5b2de58e90b5c602"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7b5843a8d0d0fd4c1ef116841344552c8a656ddc",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d482c0a7b246aa935595678a0c0e2f5ad530665b/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d482c0a7b246aa935595678a0c0e2f5ad530665b/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=d482c0a7b246aa935595678a0c0e2f5ad530665b",
        "patch": "@@ -360,7 +360,7 @@ class CTxMemPool\n      * check does nothing.\n      */\n     void check(const CCoinsViewCache *pcoins) const;\n-    void setSanityCheck(double dFrequency = 1.0) { nCheckFrequency = dFrequency * 4294967296.0; }\n+    void setSanityCheck(double dFrequency = 1.0) { nCheckFrequency = dFrequency * 4294967295.0; }\n \n     // addUnchecked must updated state for all ancestors of a given transaction,\n     // to track size/count of descendant transactions.  First version of"
      }
    ]
  },
  {
    "sha": "48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGI1Yjg0ZWU1MTFkNWNjZDBkNDdiYjAwMThjMWIzYzlkZGViZWZm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-30T23:39:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-30T23:39:50Z"
      },
      "message": "Merge pull request #6906\n\n30d9662 Reject invalid pubkeys when reading ckey items from the wallet. (Gregory Maxwell)",
      "tree": {
        "sha": "c41db909f64474f51a2210cfec2a67f7f5dde062",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c41db909f64474f51a2210cfec2a67f7f5dde062"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWM//GAAoJEHSBCwEjRsmmYKYH/0p6axrlq0Ps7R2gXCYR09pP\nypMj6corr5tqSmySRTxSscfBP2+8WaIGjf0rZSgYUUIM2MTO3pr/HRXiBFG1yLe0\nUvHIYg0xUZxHhEmEK4qjE7rJKhHQ5LXaKhejt25FTCLSbWavVqljAkdbevx88/kX\ng5xFuiZsx6aC+6os5lv1nXx/6jSjmalc5LnNEh0Fi9/2BKrgjnPDOEA2wg861b8w\n4abHIgsOQpzjpzgvKnCHLjNQLxRY7wZkF99KAiqHHTOtAMmGSWWSO1OS+rc9tWjm\n7Hx5Eys0r7hEAQfb64Jsfdb9hfb5T0a7JUSO4TemJSto1gy9NHU9adurSmz7kz4=\n=2LZ5\n-----END PGP SIGNATURE-----",
        "payload": "tree c41db909f64474f51a2210cfec2a67f7f5dde062\nparent d482c0a7b246aa935595678a0c0e2f5ad530665b\nparent 30d9662bd780e298516d514984ced1f88ec5bc3b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446248385 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446248390 +0100\n\nMerge pull request #6906\n\n30d9662 Reject invalid pubkeys when reading ckey items from the wallet. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d482c0a7b246aa935595678a0c0e2f5ad530665b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d482c0a7b246aa935595678a0c0e2f5ad530665b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d482c0a7b246aa935595678a0c0e2f5ad530665b"
      },
      {
        "sha": "30d9662bd780e298516d514984ced1f88ec5bc3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30d9662bd780e298516d514984ced1f88ec5bc3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30d9662bd780e298516d514984ced1f88ec5bc3b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ea8a4eb043cc56876dda668fcce43425f179ec6a",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
        "patch": "@@ -512,8 +512,13 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         }\n         else if (strType == \"ckey\")\n         {\n-            vector<unsigned char> vchPubKey;\n+            CPubKey vchPubKey;\n             ssKey >> vchPubKey;\n+            if (!vchPubKey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CPubKey corrupt\";\n+                return false;\n+            }\n             vector<unsigned char> vchPrivKey;\n             ssValue >> vchPrivKey;\n             wss.nCKeys++;"
      }
    ]
  },
  {
    "sha": "830e3f3d027ba5c8121eed0f6a9ce99961352572",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzBlM2YzZDAyN2JhNWM4MTIxZWVkMGY2YTljZTk5OTYxMzUyNTcy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-30T22:14:38Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-31T00:15:11Z"
      },
      "message": "Make sigcache faster and more efficient",
      "tree": {
        "sha": "1a098256efaeeeec8e7483f61161f0c9f88b127e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a098256efaeeeec8e7483f61161f0c9f88b127e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/830e3f3d027ba5c8121eed0f6a9ce99961352572",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/830e3f3d027ba5c8121eed0f6a9ce99961352572",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/830e3f3d027ba5c8121eed0f6a9ce99961352572",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/830e3f3d027ba5c8121eed0f6a9ce99961352572/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 52,
      "deletions": 35
    },
    "files": [
      {
        "sha": "5843b7d79ac6f16d4e0a5e2bfbe60ea75e8ca034",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/830e3f3d027ba5c8121eed0f6a9ce99961352572/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/830e3f3d027ba5c8121eed0f6a9ce99961352572/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=830e3f3d027ba5c8121eed0f6a9ce99961352572",
        "patch": "@@ -25,6 +25,7 @@\n #include \"policy/policy.h\"\n #include \"rpcserver.h\"\n #include \"script/standard.h\"\n+#include \"script/sigcache.h\"\n #include \"scheduler.h\"\n #include \"txdb.h\"\n #include \"txmempool.h\"\n@@ -434,7 +435,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS));\n         strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", 15));\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n-        strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n+        strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE));\n     }\n     strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(::minRelayTxFee.GetFeePerK())));"
      },
      {
        "sha": "9dc7f0fcd54a9fcc271272e0ed0cfcdd6dbba525",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 34,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/830e3f3d027ba5c8121eed0f6a9ce99961352572/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/830e3f3d027ba5c8121eed0f6a9ce99961352572/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=830e3f3d027ba5c8121eed0f6a9ce99961352572",
        "patch": "@@ -5,16 +5,29 @@\n \n #include \"sigcache.h\"\n \n+#include \"memusage.h\"\n #include \"pubkey.h\"\n #include \"random.h\"\n #include \"uint256.h\"\n #include \"util.h\"\n \n #include <boost/thread.hpp>\n-#include <boost/tuple/tuple_comparison.hpp>\n+#include <boost/unordered_set.hpp>\n \n namespace {\n \n+/**\n+ * We're hashing a nonce into the entries themselves, so we don't need extra\n+ * blinding in the set hash computation.\n+ */\n+class CSignatureCacheHasher\n+{\n+public:\n+    size_t operator()(const uint256& key) const {\n+        return key.GetCheapHash();\n+    }\n+};\n+\n /**\n  * Valid signature cache, to avoid doing expensive ECDSA signature checking\n  * twice for every transaction (once when accepted into memory pool, and\n@@ -23,52 +36,48 @@ namespace {\n class CSignatureCache\n {\n private:\n-     //! sigdata_type is (signature hash, signature, public key):\n-    typedef boost::tuple<uint256, std::vector<unsigned char>, CPubKey> sigdata_type;\n-    std::set< sigdata_type> setValid;\n+     //! Entries are SHA256(nonce || signature hash || public key || signature):\n+    uint256 nonce;\n+    typedef boost::unordered_set<uint256, CSignatureCacheHasher> map_type;\n+    map_type setValid;\n     boost::shared_mutex cs_sigcache;\n \n+\n public:\n+    CSignatureCache()\n+    {\n+        GetRandBytes(nonce.begin(), 32);\n+    }\n+\n+    void\n+    ComputeEntry(uint256& entry, const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubkey)\n+    {\n+        CSHA256().Write(nonce.begin(), 32).Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(&vchSig[0], vchSig.size()).Finalize(entry.begin());\n+    }\n+\n     bool\n-    Get(const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubKey)\n+    Get(const uint256& entry)\n     {\n         boost::shared_lock<boost::shared_mutex> lock(cs_sigcache);\n-\n-        sigdata_type k(hash, vchSig, pubKey);\n-        std::set<sigdata_type>::iterator mi = setValid.find(k);\n-        if (mi != setValid.end())\n-            return true;\n-        return false;\n+        return setValid.count(entry);\n     }\n \n-    void Set(const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubKey)\n+    void Set(const uint256& entry)\n     {\n-        // DoS prevention: limit cache size to less than 10MB\n-        // (~200 bytes per cache entry times 50,000 entries)\n-        // Since there are a maximum of 20,000 signature operations per block\n-        // 50,000 is a reasonable default.\n-        int64_t nMaxCacheSize = GetArg(\"-maxsigcachesize\", 50000);\n+        size_t nMaxCacheSize = GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n         if (nMaxCacheSize <= 0) return;\n \n         boost::unique_lock<boost::shared_mutex> lock(cs_sigcache);\n-\n-        while (static_cast<int64_t>(setValid.size()) > nMaxCacheSize)\n+        while (memusage::DynamicUsage(setValid) > nMaxCacheSize)\n         {\n-            // Evict a random entry. Random because that helps\n-            // foil would-be DoS attackers who might try to pre-generate\n-            // and re-use a set of valid signatures just-slightly-greater\n-            // than our cache size.\n-            uint256 randomHash = GetRandHash();\n-            std::vector<unsigned char> unused;\n-            std::set<sigdata_type>::iterator it =\n-                setValid.lower_bound(sigdata_type(randomHash, unused, unused));\n-            if (it == setValid.end())\n-                it = setValid.begin();\n-            setValid.erase(*it);\n+            map_type::size_type s = GetRand(setValid.bucket_count());\n+            map_type::local_iterator it = setValid.begin(s);\n+            if (it != setValid.end(s)) {\n+                setValid.erase(*it);\n+            }\n         }\n \n-        sigdata_type k(hash, vchSig, pubKey);\n-        setValid.insert(k);\n+        setValid.insert(entry);\n     }\n };\n \n@@ -78,13 +87,16 @@ bool CachingTransactionSignatureChecker::VerifySignature(const std::vector<unsig\n {\n     static CSignatureCache signatureCache;\n \n-    if (signatureCache.Get(sighash, vchSig, pubkey))\n+    uint256 entry;\n+    signatureCache.ComputeEntry(entry, sighash, vchSig, pubkey);\n+\n+    if (signatureCache.Get(entry))\n         return true;\n \n     if (!TransactionSignatureChecker::VerifySignature(vchSig, pubkey, sighash))\n         return false;\n \n     if (store)\n-        signatureCache.Set(sighash, vchSig, pubkey);\n+        signatureCache.Set(entry);\n     return true;\n }"
      },
      {
        "sha": "22699725607c999ef573c663732edc3d4bd2974c",
        "filename": "src/script/sigcache.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/830e3f3d027ba5c8121eed0f6a9ce99961352572/src/script/sigcache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/830e3f3d027ba5c8121eed0f6a9ce99961352572/src/script/sigcache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.h?ref=830e3f3d027ba5c8121eed0f6a9ce99961352572",
        "patch": "@@ -10,6 +10,10 @@\n \n #include <vector>\n \n+// DoS prevention: limit cache size to less than 40MB (over 500000\n+// entries on 64-bit systems).\n+static const unsigned int DEFAULT_MAX_SIG_CACHE_SIZE = 40;\n+\n class CPubKey;\n \n class CachingTransactionSignatureChecker : public TransactionSignatureChecker"
      }
    ]
  },
  {
    "sha": "0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjllOWRjYTRlODhlNDFmN2RhZTRmZDljZDhlMGY5M2ZhYmFmZTAx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-30T22:38:40Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-31T00:15:11Z"
      },
      "message": "Evict sigcache entries that are seen in a block",
      "tree": {
        "sha": "1b779dca561d32e9888d77679b8f1c65f61af088",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b779dca561d32e9888d77679b8f1c65f61af088"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "830e3f3d027ba5c8121eed0f6a9ce99961352572",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/830e3f3d027ba5c8121eed0f6a9ce99961352572",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/830e3f3d027ba5c8121eed0f6a9ce99961352572"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 13,
      "deletions": 2
    },
    "files": [
      {
        "sha": "eee96e7c2d1d2976341f44080e25e976f610340f",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01",
        "patch": "@@ -62,6 +62,12 @@ class CSignatureCache\n         return setValid.count(entry);\n     }\n \n+    void Erase(const uint256& entry)\n+    {\n+        boost::unique_lock<boost::shared_mutex> lock(cs_sigcache);\n+        setValid.erase(entry);\n+    }\n+\n     void Set(const uint256& entry)\n     {\n         size_t nMaxCacheSize = GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n@@ -90,13 +96,18 @@ bool CachingTransactionSignatureChecker::VerifySignature(const std::vector<unsig\n     uint256 entry;\n     signatureCache.ComputeEntry(entry, sighash, vchSig, pubkey);\n \n-    if (signatureCache.Get(entry))\n+    if (signatureCache.Get(entry)) {\n+        if (!store) {\n+            signatureCache.Erase(entry);\n+        }\n         return true;\n+    }\n \n     if (!TransactionSignatureChecker::VerifySignature(vchSig, pubkey, sighash))\n         return false;\n \n-    if (store)\n+    if (store) {\n         signatureCache.Set(entry);\n+    }\n     return true;\n }"
      }
    ]
  },
  {
    "sha": "a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmU4MGU0MDE3MTZiMGFjMTViMmJmM2M1M2ZkMDc1NzFkZTJiM2Q3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-31T10:07:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-10-31T10:07:24Z"
      },
      "message": "Merge pull request #6883\n\nc939792 Add BIP65 CHECKLOCKTIMEVERIFY to release notes (Peter Todd)",
      "tree": {
        "sha": "b25d1a00d5db5683ce65cc435c33a2ca5b5e93f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b25d1a00d5db5683ce65cc435c33a2ca5b5e93f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
      "comment_count": 1,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWNJLcAAoJEHSBCwEjRsmmHXkH/3yG9N6Sz73nT2YeqSJnM1dT\nllRssKCOBKFMxodBMpT756n4ALEf0kNik50VlXtrWO79+hQ3zaEdyYiAVym3JFDa\n2e/yeUU5/Plyxm2c1HNfxq57x7iy+gH9o9h1KbycWE0tGWtupxsYdgTVy3AXP5JJ\no9fm4+TZUUkMPJ3yTfqKgo8kYkHbgtNijjqYaVVggztyOfxq1dx+BdorNkcZHj6O\nHwtmUdX/PCxyryCTTQOCo+WArdXvo+h48N9fmMjz9+hcau9kFL2Qkf3HtQTN5TjB\nO2DASVxU0oWzxhUyZSWdwWTVc7LJO6qrlL8JZntgBqdDDqjQ4MNDWgXjz7BiVOI=\n=irVz\n-----END PGP SIGNATURE-----",
        "payload": "tree b25d1a00d5db5683ce65cc435c33a2ca5b5e93f6\nparent 48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff\nparent c939792baaaa5f34ee4079b871d56054e36fb26b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446286039 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446286044 +0100\n\nMerge pull request #6883\n\nc939792 Add BIP65 CHECKLOCKTIMEVERIFY to release notes (Peter Todd)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48b5b84ee511d5ccd0d47bb0018c1b3c9ddebeff"
      },
      {
        "sha": "c939792baaaa5f34ee4079b871d56054e36fb26b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c939792baaaa5f34ee4079b871d56054e36fb26b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c939792baaaa5f34ee4079b871d56054e36fb26b"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fd034743e62151cac5383044f59b1ec82f87f2d1",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
        "patch": "@@ -124,6 +124,33 @@ sanity check. Since 0.12, these are no longer stored. When loading a\n 0.12 wallet into an older version, it will automatically rescan to avoid\n failed checks.\n \n+BIP65 - CHECKLOCKTIMEVERIFY\n+---------------------------\n+\n+Previously it was impossible to create a transaction output that was guaranteed\n+to be unspendable until a specific date in the future. CHECKLOCKTIMEVERIFY is a\n+new opcode that allows a script to check if a specific block height or time has\n+been reached, failing the script otherwise. This enables a wide variety of new\n+functionality such as time-locked escrows, secure payment channels, etc.\n+\n+BIP65 implements CHECKLOCKTIMEVERIFY by introducing block version 4, which adds\n+additional restrictions to the NOP2 opcode. The same miner-voting mechanism as\n+in BIP34 and BIP66 is used: when 751 out of a sequence of 1001 blocks have\n+version number 4 or higher, the new consensus rule becomes active for those\n+blocks. When 951 out of a sequence of 1001 blocks have version number 4 or\n+higher, it becomes mandatory for all blocks and blocks with versions less than\n+4 are rejected.\n+\n+Bitcoin Core's block templates are now for version 4 blocks only, and any\n+mining software relying on its `getblocktemplate` must be updated in parallel\n+to use either libblkmaker version FIXME or any version from 0.5.1 onward. If\n+you are solo mining, this will affect you the moment you upgrade Bitcoin Core,\n+which must be done prior to BIP65 achieving its 951/1001 status.  If you are\n+mining with the stratum mining protocol: this does not affect you.  If you are\n+mining with the getblocktemplate protocol to a pool: this will affect you at\n+the pool operator's discretion, which must be no later than BIP65 achieving its\n+951/1001 status.\n+\n 0.12.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "7497e805bd437b07fc3e5920f0c1f84bf10b0ebe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDk3ZTgwNWJkNDM3YjA3ZmMzZTU5MjBmMGMxZjg0YmYxMGIwZWJl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-01T10:43:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-01T10:45:06Z"
      },
      "message": "tests: Initialize networking on windows",
      "tree": {
        "sha": "a5dcedb3c52b5c2974e1445a32df30708e108b9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5dcedb3c52b5c2974e1445a32df30708e108b9f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7497e805bd437b07fc3e5920f0c1f84bf10b0ebe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7497e805bd437b07fc3e5920f0c1f84bf10b0ebe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7497e805bd437b07fc3e5920f0c1f84bf10b0ebe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7497e805bd437b07fc3e5920f0c1f84bf10b0ebe/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "23e5e66d8443778a3043954ee7350f1ac61b0cda",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7497e805bd437b07fc3e5920f0c1f84bf10b0ebe/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7497e805bd437b07fc3e5920f0c1f84bf10b0ebe/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=7497e805bd437b07fc3e5920f0c1f84bf10b0ebe",
        "patch": "@@ -36,6 +36,7 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n {\n         ECC_Start();\n         SetupEnvironment();\n+        SetupNetworking();\n         fPrintToDebugLog = false; // don't want to write to debug.log file\n         fCheckBlockIndex = true;\n         SelectParams(chainName);"
      }
    ]
  },
  {
    "sha": "02a95be97759e70d9e7537775c95eec219c8333e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmE5NWJlOTc3NTllNzBkOWU3NTM3Nzc1Yzk1ZWVjMjE5YzgzMzNl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-01T15:03:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-01T15:11:50Z"
      },
      "message": "qt: translation update prior to opening 0.12 translations\n\nAlso update transifex slug for new version.",
      "tree": {
        "sha": "856fa428dc081f2b610d69634075f937d5eb7cd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/856fa428dc081f2b610d69634075f937d5eb7cd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02a95be97759e70d9e7537775c95eec219c8333e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWNivQAAoJEHSBCwEjRsmmLIkH/33X881f3GTSEL/bk8s8jnd9\nOEs8gvDl74edbUfFf/3KxpTgCIfa47wzs3b9u2NjQlKkHwvmeATnMdBJroCBvdnk\nKKl83j6zQEGShOS4PNe55uI2NlhhTbXd94b6lXyHYfsEcLET0uH49IF/d3kXI9ee\nEXEz0AC6Jl7D+FIBKmJailUVgHPijjorjmioXSNvvU9zMcZtqUbDq7PeBV+2HP4Y\nR0t5/kRV73bzS/HF7o2Xayw//jZnyW4x2QTMTahbngqPeaxbxk/hG9EhqbTBCJMP\n2sNzcO4NJy+Ja2N0MLaScMfqXq7/OZ7UshkDaDYO5j9v12Bu9kzQiPcrR78GT9I=\n=iU3E\n-----END PGP SIGNATURE-----",
        "payload": "tree 856fa428dc081f2b610d69634075f937d5eb7cd4\nparent a6e80e401716b0ac15b2bf3c53fd07571de2b3d7\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446390203 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446390710 +0100\n\nqt: translation update prior to opening 0.12 translations\n\nAlso update transifex slug for new version.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a95be97759e70d9e7537775c95eec219c8333e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02a95be97759e70d9e7537775c95eec219c8333e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a95be97759e70d9e7537775c95eec219c8333e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7"
      }
    ],
    "stats": {
      "total": 223,
      "additions": 129,
      "deletions": 94
    },
    "files": [
      {
        "sha": "d6cc3aab8879ce3af16c8fa1b5ab5f5d3df5839b",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02a95be97759e70d9e7537775c95eec219c8333e/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02a95be97759e70d9e7537775c95eec219c8333e/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=02a95be97759e70d9e7537775c95eec219c8333e",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-011x]\n+[bitcoin.qt-translation-012x]\n file_filter = src/qt/locale/bitcoin_<lang>.ts\n source_file = src/qt/locale/bitcoin_en.ts\n source_lang = en"
      },
      {
        "sha": "538b8912abc0b0682831e7f3eec15ce53d2d70af",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 16,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02a95be97759e70d9e7537775c95eec219c8333e/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02a95be97759e70d9e7537775c95eec219c8333e/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=02a95be97759e70d9e7537775c95eec219c8333e",
        "patch": "@@ -13,6 +13,12 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"(1 = keep tx meta data e.g. account owner and payment request information, 2 \"\n \"= drop tx meta data)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"-maxtxfee is set very high! Fees this large could be paid on a single \"\n+\"transaction.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"-paytxfee is set very high! This is the transaction fee you will pay if you \"\n+\"send a transaction.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Allow JSON-RPC connections from specified source. Valid for <ip> are a \"\n \"single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or \"\n \"a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"),\n@@ -42,10 +48,12 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Distributed under the MIT software license, see the accompanying file \"\n \"COPYING or <http://www.opensource.org/licenses/mit-license.php>.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Error: Listening for incoming connections failed (listen returned error %s)\"),\n+\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Error: Unsupported argument -socks found. Setting SOCKS version isn't \"\n-\"possible anymore, only SOCKS5 proxies are supported.\"),\n+\"Error reading wallet.dat! All keys read correctly, but transaction data or \"\n+\"address book entries might be missing or incorrect.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Error: Listening for incoming connections failed (listen returned error %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when a relevant alert is received or we see a really long \"\n \"fork (%s in cmd is replaced by message)\"),\n@@ -127,9 +135,18 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software \"\n \"written by Eric Young and UPnP software written by Thomas Bernard.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Total length of network version string (%i) exceeds maximum length (%i). \"\n+\"Reduce the number or size of uacomments.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = \"\n+\"no limit (default: %d)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Unable to bind to %s on this computer. Bitcoin Core is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Unsupported argument -socks found. Setting SOCKS version isn't possible \"\n+\"anymore, only SOCKS5 proxies are supported.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: \"\n@@ -141,21 +158,12 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"WARNING: check your network connection, %d blocks received in the last %d \"\n \"hours (%d expected)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Warning: -maxtxfee is set very high! Fees this large could be paid on a \"\n-\"single transaction.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Warning: -paytxfee is set very high! This is the transaction fee you will \"\n-\"pay if you send a transaction.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: The network does not appear to fully agree! Some miners appear to \"\n \"be experiencing issues.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: We do not appear to fully agree with our peers! You may need to \"\n \"upgrade, or other nodes may need to upgrade.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Warning: error reading wallet.dat! All keys read correctly, but transaction \"\n-\"data or address book entries might be missing or incorrect.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as \"\n \"wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect \"\n \"you should restore from a backup.\"),\n@@ -171,6 +179,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: 1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"-maxmempool must be at least %d MB\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"<category> can be:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\"),\n@@ -212,7 +221,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error reading from database, shutting down.\")\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: A fatal internal error occurred, see debug.log for details\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Disk space is low!\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Unsupported argument -tor found, use -onion.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to listen on any port. Use -listen=0 if you want this.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins (default: %u)\"),\n@@ -233,6 +241,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s' (\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid netmask specified in -whitelist: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Keep at most <n> unconnectable transactions in memory (default: %u)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Keep the transaction memory pool below <n> megabytes (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for connections on <port> (default: %u or testnet: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading addresses...\"),\n@@ -294,9 +303,12 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"UI Options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to start HTTP server. See debug log for details.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unsupported argument -benchmark ignored, use -debug=bench.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unsupported argument -debugnet ignored, use -debug=net.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unsupported argument -tor found, use -onion.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Upgrade wallet to latest format\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"User Agent comment (%s) contains unsafe characters.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying blocks...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet...\"),\n@@ -305,8 +317,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoi\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete; upgrade required!\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Unsupported argument -benchmark ignored, use -debug=bench.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Unsupported argument -debugnet ignored, use -debug=net.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Zapping all transactions from wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"ZeroMQ notification options:\"),"
      },
      {
        "sha": "58921a9f8b1dc9ce0e3b90c0c3ffa0f010210fb4",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 102,
        "deletions": 77,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02a95be97759e70d9e7537775c95eec219c8333e/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02a95be97759e70d9e7537775c95eec219c8333e/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=02a95be97759e70d9e7537775c95eec219c8333e",
        "patch": "@@ -3706,7 +3706,7 @@\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+249\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+258\"/>\n         <source>Options:</source>\n         <translation>Options:</translation>\n     </message>\n@@ -3731,7 +3731,7 @@\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n     <message>\n-        <location line=\"-117\"/>\n+        <location line=\"-118\"/>\n         <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3771,17 +3771,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+110\"/>\n         <source>Error: A fatal internal error occurred, see debug.log for details</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+37\"/>\n+        <location line=\"+38\"/>\n         <source>Pruning blockstore...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3796,17 +3796,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Use the test network</source>\n-        <translation>Use the test network</translation>\n-    </message>\n-    <message>\n-        <location line=\"-123\"/>\n+        <location line=\"-119\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accept connections from outside (default: 1 if no -proxy or -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-157\"/>\n+        <location line=\"-160\"/>\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Bind to given address and always listen on it. Use [host]:port notation for IPv6</translation>\n     </message>\n@@ -3821,7 +3816,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+13\"/>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</translation>\n     </message>\n@@ -3841,12 +3836,12 @@\n         <translation>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+13\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3860,11 +3855,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+6\"/>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</translation>\n-    </message>\n     <message>\n         <location line=\"+3\"/>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n@@ -3875,11 +3865,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</translation>\n     </message>\n-    <message>\n-        <location line=\"+3\"/>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</translation>\n-    </message>\n     <message>\n         <location line=\"+3\"/>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n@@ -3895,6 +3880,11 @@\n         <source>(default: 1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>&lt;category&gt; can be:</source>\n@@ -3986,7 +3976,7 @@\n         <translation>Error: Disk space is low!</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Failed to listen on any port. Use -listen=0 if you want this.</translation>\n     </message>\n@@ -4006,7 +3996,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+9\"/>\n+        <source>Keep the transaction memory pool below &lt;n&gt; megabytes (default: %u)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n         <source>Not enough file descriptors available.</source>\n         <translation>Not enough file descriptors available.</translation>\n     </message>\n@@ -4041,12 +4036,32 @@\n         <translation>Specify wallet file (within data directory)</translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+16\"/>\n+        <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Unsupported argument -tor found, use -onion.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+1\"/>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Verifying blocks...</source>\n         <translation>Verifying blocks...</translation>\n     </message>\n@@ -4071,17 +4086,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+1\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>You need to rebuild the database using -reindex to change -txindex</translation>\n     </message>\n     <message>\n-        <location line=\"-89\"/>\n+        <location line=\"-91\"/>\n         <source>Imports blocks from external blk000??.dat file</source>\n         <translation>Imports blocks from external blk000??.dat file</translation>\n     </message>\n     <message>\n-        <location line=\"-206\"/>\n+        <location line=\"-208\"/>\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4111,17 +4126,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+11\"/>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn&apos;t possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</translation>\n     </message>\n@@ -4171,12 +4181,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+18\"/>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+22\"/>\n+        <location line=\"+40\"/>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4191,7 +4196,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4231,12 +4236,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+12\"/>\n         <source>Information</source>\n         <translation>Information</translation>\n     </message>\n@@ -4276,7 +4276,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>Need to specify a port with -whitebind: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4391,7 +4391,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+9\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Username for JSON-RPC connections</translation>\n     </message>\n@@ -4406,17 +4406,7 @@\n         <translation>Warning</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+3\"/>\n         <source>Zapping all transactions from wallet...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4436,22 +4426,22 @@\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location line=\"-64\"/>\n+        <location line=\"-65\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-195\"/>\n+        <location line=\"-196\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+242\"/>\n+        <location line=\"+246\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>Upgrade wallet to latest format</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-39\"/>\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Rescan the block chain for missing wallet transactions</translation>\n     </message>\n@@ -4476,12 +4466,32 @@\n         <translation>Error loading wallet.dat: Wallet corrupted</translation>\n     </message>\n     <message>\n-        <location line=\"-196\"/>\n+        <location line=\"-205\"/>\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+49\"/>\n+        <location line=\"+3\"/>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Do not keep transactions in the mempool longer than &lt;n&gt; hours (default: %u)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+17\"/>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4501,17 +4511,32 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+51\"/>\n+        <location line=\"+46\"/>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Unsupported argument -socks found. Setting SOCKS version isn&apos;t possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+37\"/>\n+        <location line=\"+28\"/>\n         <source>(default: %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4521,7 +4546,7 @@\n         <translation>Error loading wallet.dat</translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+10\"/>\n         <source>Generate coins (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4541,7 +4566,7 @@\n         <translation>Invalid -proxy address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4641,7 +4666,7 @@\n         <translation>Cannot resolve -externalip address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+47\"/>\n+        <location line=\"+46\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -4651,7 +4676,7 @@\n         <translation>Insufficient funds</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+14\"/>\n         <source>Loading block index...</source>\n         <translation>Loading block index...</translation>\n     </message>"
      }
    ]
  },
  {
    "sha": "8537ecdfc40181249ec37556015a99cfae4b21fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NTM3ZWNkZmM0MDE4MTI0OWVjMzc1NTYwMTVhOTljZmFlNGIyMWZk",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-01T20:05:16Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-01T20:05:16Z"
      },
      "message": "Revert \"Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\"\n\nThis reverts commit dea8d21fc63e9f442299c97010e4740558f4f037.",
      "tree": {
        "sha": "e7a5c3815bcfd33247cd1195d248f13767517c2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7a5c3815bcfd33247cd1195d248f13767517c2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8537ecdfc40181249ec37556015a99cfae4b21fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8537ecdfc40181249ec37556015a99cfae4b21fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8537ecdfc40181249ec37556015a99cfae4b21fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8537ecdfc40181249ec37556015a99cfae4b21fd/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02a95be97759e70d9e7537775c95eec219c8333e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a95be97759e70d9e7537775c95eec219c8333e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02a95be97759e70d9e7537775c95eec219c8333e"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "fdc54a70a1bcd3730038fbc6fb1346ebee3ae419",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8537ecdfc40181249ec37556015a99cfae4b21fd/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8537ecdfc40181249ec37556015a99cfae4b21fd/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=8537ecdfc40181249ec37556015a99cfae4b21fd",
        "patch": "@@ -44,7 +44,7 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n /** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n-static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_MEDIAN_TIME_PAST;\n+static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = 0;\n \n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**"
      },
      {
        "sha": "91a3a5738ef298526c762d2f85ebdf3f5ca135cc",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8537ecdfc40181249ec37556015a99cfae4b21fd/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8537ecdfc40181249ec37556015a99cfae4b21fd/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=8537ecdfc40181249ec37556015a99cfae4b21fd",
        "patch": "@@ -4,7 +4,6 @@\n \n #include \"chainparams.h\"\n #include \"coins.h\"\n-#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -230,7 +229,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.nLockTime = chainActive.Tip()->nHeight+1;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx, LOCKTIME_MEDIAN_TIME_PAST));\n+    BOOST_CHECK(!CheckFinalTx(tx));\n \n     // time locked\n     tx2.vin.resize(1);\n@@ -244,7 +243,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx2.nLockTime = chainActive.Tip()->GetMedianTimePast()+1;\n     hash = tx2.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx2, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx2, LOCKTIME_MEDIAN_TIME_PAST));\n+    BOOST_CHECK(!CheckFinalTx(tx2));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n \n@@ -262,7 +261,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     //BOOST_CHECK(CheckFinalTx(tx2));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n-    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 2);\n+    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 3);\n     delete pblocktemplate;\n \n     chainActive.Tip()->nHeight--;"
      }
    ]
  },
  {
    "sha": "40cd32e835092c3158175511da5193193ec54939",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGNkMzJlODM1MDkyYzMxNTgxNzU1MTFkYTUxOTMxOTNlYzU0OTM5",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-01T20:05:18Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-01T20:05:18Z"
      },
      "message": "Revert \"Add rules--presently disabled--for using GetMedianTimePast as endpoint for lock-time calculations\"\n\nThis reverts commit 9d55050773d57c0e12005e524f2e54d9e622c6e2.\n\nAs noted by Luke-Jr, under some conditions this will accept transactions which are invalid by the network\n rules.  This happens when the current block time is head of the median time past and a transaction's\n locktime is in the middle.\n\nThis could be addressed by changing the rule to MAX(this_block_time, MTP+offset) but this solution and\n the particular offset used deserve some consideration.",
      "tree": {
        "sha": "a277d4f0514dc26c86c8fa86ab831acd6ed3e63f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a277d4f0514dc26c86c8fa86ab831acd6ed3e63f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40cd32e835092c3158175511da5193193ec54939",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40cd32e835092c3158175511da5193193ec54939",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40cd32e835092c3158175511da5193193ec54939",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40cd32e835092c3158175511da5193193ec54939/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8537ecdfc40181249ec37556015a99cfae4b21fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8537ecdfc40181249ec37556015a99cfae4b21fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8537ecdfc40181249ec37556015a99cfae4b21fd"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 7,
      "deletions": 54
    },
    "files": [
      {
        "sha": "f937844e9f7e15391537db3aea9cdfadd1a94617",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40cd32e835092c3158175511da5193193ec54939/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40cd32e835092c3158175511da5193193ec54939/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=40cd32e835092c3158175511da5193193ec54939",
        "patch": "@@ -13,10 +13,4 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n-/** Flags for LockTime() */\n-enum {\n-    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n-    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n-};\n-\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "26a22ae6fd7cfd7d618410c6a03a6022b22d01ee",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 35,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40cd32e835092c3158175511da5193193ec54939/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40cd32e835092c3158175511da5193193ec54939/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=40cd32e835092c3158175511da5193193ec54939",
        "patch": "@@ -650,35 +650,10 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n     return true;\n }\n \n-bool CheckFinalTx(const CTransaction &tx, int flags)\n+bool CheckFinalTx(const CTransaction &tx)\n {\n     AssertLockHeld(cs_main);\n-\n-    // By convention a negative value for flags indicates that the\n-    // current network-enforced consensus rules should be used. In\n-    // a future soft-fork scenario that would mean checking which\n-    // rules would be enforced for the next block and setting the\n-    // appropriate flags. At the present time no soft-forks are\n-    // scheduled, so no flags are set.\n-    flags = std::max(flags, 0);\n-\n-    // CheckFinalTx() uses chainActive.Height()+1 to evaluate\n-    // nLockTime because when IsFinalTx() is called within\n-    // CBlock::AcceptBlock(), the height of the block *being*\n-    // evaluated is what is used. Thus if we want to know if a\n-    // transaction can be part of the *next* block, we need to call\n-    // IsFinalTx() with one more than chainActive.Height().\n-    const int nBlockHeight = chainActive.Height() + 1;\n-\n-    // Timestamps on the other hand don't get any special treatment,\n-    // because we can't know what timestamp the next block will have,\n-    // and there aren't timestamp applications where it matters.\n-    // However this changes once median past time-locks are enforced:\n-    const int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n-                             ? chainActive.Tip()->GetMedianTimePast()\n-                             : GetAdjustedTime();\n-\n-    return IsFinalTx(tx, nBlockHeight, nBlockTime);\n+    return IsFinalTx(tx, chainActive.Height() + 1, GetAdjustedTime());\n }\n \n unsigned int GetLegacySigOpCount(const CTransaction& tx)\n@@ -822,7 +797,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     // Only accept nLockTime-using transactions that can be mined in the next\n     // block; we don't want our mempool filled up with transactions that can't\n     // be mined yet.\n-    if (!CheckFinalTx(tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n+    if (!CheckFinalTx(tx))\n         return state.DoS(0, false, REJECT_NONSTANDARD, \"non-final\");\n \n     // is it already in the memory pool?\n@@ -2748,15 +2723,10 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n-        int nLockTimeFlags = 0;\n-        int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n-                                ? pindexPrev->GetMedianTimePast()\n-                                : block.GetBlockTime();\n-        if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n+        if (!IsFinalTx(tx, nHeight, block.GetBlockTime())) {\n             return state.DoS(10, error(\"%s: contains a non-final transaction\", __func__), REJECT_INVALID, \"bad-txns-nonfinal\");\n         }\n-    }\n \n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n     // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):"
      },
      {
        "sha": "202d2c772ba896b3f9f71cba6d1e6121ddd53594",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40cd32e835092c3158175511da5193193ec54939/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40cd32e835092c3158175511da5193193ec54939/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=40cd32e835092c3158175511da5193193ec54939",
        "patch": "@@ -308,10 +308,8 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n  * Check if transaction will be final in the next block to be created.\n  *\n  * Calls IsFinalTx() with current block height and appropriate block time.\n- *\n- * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckFinalTx(const CTransaction &tx, int flags = -1);\n+bool CheckFinalTx(const CTransaction &tx);\n \n /** \n  * Closure representing one script verification"
      },
      {
        "sha": "42c8bb970b9b5aa051af5b280944b9895a67f114",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40cd32e835092c3158175511da5193193ec54939/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40cd32e835092c3158175511da5193193ec54939/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=40cd32e835092c3158175511da5193193ec54939",
        "patch": "@@ -148,7 +148,6 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n-        const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n         CCoinsViewCache view(pcoinsTip);\n \n         // Priority order to process transactions\n@@ -163,12 +162,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n              mi != mempool.mapTx.end(); ++mi)\n         {\n             const CTransaction& tx = mi->GetTx();\n-\n-            int64_t nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n-                                    ? nMedianTimePast\n-                                    : pblock->GetBlockTime();\n-\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, nLockTimeCutoff))\n+            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n                 continue;\n \n             COrphan* porphan = NULL;"
      },
      {
        "sha": "747c5ce8ce4abf6e92767277bfbadd17e1dee640",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40cd32e835092c3158175511da5193193ec54939/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40cd32e835092c3158175511da5193193ec54939/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=40cd32e835092c3158175511da5193193ec54939",
        "patch": "@@ -43,9 +43,6 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n-/** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n-static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = 0;\n-\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**\n      * Check for standard transaction types"
      }
    ]
  },
  {
    "sha": "69d373ff6693de204bdf58cbc90f8a26d8f711c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWQzNzNmZjY2OTNkZTIwNGJkZjU4Y2JjOTBmOGEyNmQ4ZjcxMWM4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-02T01:01:45Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-02T01:01:45Z"
      },
      "message": "Don't wipe the sigcache in TestBlockValidity",
      "tree": {
        "sha": "c71f3c98d9f7ea950516e4fa80aa1dfe355be0b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c71f3c98d9f7ea950516e4fa80aa1dfe355be0b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69d373ff6693de204bdf58cbc90f8a26d8f711c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69d373ff6693de204bdf58cbc90f8a26d8f711c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69d373ff6693de204bdf58cbc90f8a26d8f711c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69d373ff6693de204bdf58cbc90f8a26d8f711c8/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b9e9dca4e88e41f7dae4fd9cd8e0f93fabafe01"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ad19b50ce46c51b90053ab1b0fda208056c91c24",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69d373ff6693de204bdf58cbc90f8a26d8f711c8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69d373ff6693de204bdf58cbc90f8a26d8f711c8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=69d373ff6693de204bdf58cbc90f8a26d8f711c8",
        "patch": "@@ -1830,7 +1830,8 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n             nFees += view.GetValueIn(tx)-tx.GetValueOut();\n \n             std::vector<CScriptCheck> vChecks;\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, false, nScriptCheckThreads ? &vChecks : NULL))\n+            bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, nScriptCheckThreads ? &vChecks : NULL))\n                 return error(\"ConnectBlock(): CheckInputs on %s failed with %s\",\n                     tx.GetHash().ToString(), FormatStateMessage(state));\n             control.Add(vChecks);"
      }
    ]
  },
  {
    "sha": "ff2a2af64c75724cbd6f64963da792532093004b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjJhMmFmNjRjNzU3MjRjYmQ2ZjY0OTYzZGE3OTI1MzIwOTMwMDRi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-02T03:15:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-02T03:15:58Z"
      },
      "message": "build: don't distribute tests_config.py\n\nThis file is dynamically generated by configure based on the platform,\nit doesn't belong in the distribution archive.\n\nFixes #6929.",
      "tree": {
        "sha": "21fd5c375d5c07a22d0bb8d50481b0dd5582b82b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21fd5c375d5c07a22d0bb8d50481b0dd5582b82b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff2a2af64c75724cbd6f64963da792532093004b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff2a2af64c75724cbd6f64963da792532093004b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff2a2af64c75724cbd6f64963da792532093004b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff2a2af64c75724cbd6f64963da792532093004b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02a95be97759e70d9e7537775c95eec219c8333e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a95be97759e70d9e7537775c95eec219c8333e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02a95be97759e70d9e7537775c95eec219c8333e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "303ad3b06f7b9e92daed1e47d53d85d676caa03e",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff2a2af64c75724cbd6f64963da792532093004b/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff2a2af64c75724cbd6f64963da792532093004b/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=ff2a2af64c75724cbd6f64963da792532093004b",
        "patch": "@@ -213,7 +213,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/pull-tester/tests_config.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      }
    ]
  },
  {
    "sha": "a6d0d623fc955bba93d8f09e3fd2454284b61472",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmQwZDYyM2ZjOTU1YmJhOTNkOGYwOWUzZmQyNDU0Mjg0YjYxNDcy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-02T03:29:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-02T03:29:45Z"
      },
      "message": "Merge pull request #6926\n\n7497e80 tests: Initialize networking on windows (Wladimir J. van der Laan)",
      "tree": {
        "sha": "8b7e257ec76dffd5d4f38a06697c0963393c76c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b7e257ec76dffd5d4f38a06697c0963393c76c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6d0d623fc955bba93d8f09e3fd2454284b61472",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWNtipAAoJEHSBCwEjRsmmZjQH/RVywQ55MpmiaQ6hhPoUWJfo\nrettIg4moSuBtrzaI49G2kDmqbBzDiIJbshphHw7DZuP9Mr1FZm4/jb4uvifWZS6\nPZL2j7/NZ2SW7ZeY6unXOzmkE6XY5Vfk0MBxZF09JEXrRQwM1NvXY+eqCKXn5+DY\nYD+j1qxVlUHVz079RNZDpSmMBjufPoHoWJuzEktKo/1J6fgmqvH5RtOTutkfYkJm\n6gebAf3KBAo/8HCmjqBHSc0N8ox1OLF9DkzRGa080jVATUp7eZGB1d27YrRgU/yK\n8R3vPaJh011tsFrXbzECGOZVCPfgVydYWDpXQ6egD5TmbbV1ozQ13J95/RRAke0=\n=eGf3\n-----END PGP SIGNATURE-----",
        "payload": "tree 8b7e257ec76dffd5d4f38a06697c0963393c76c6\nparent 02a95be97759e70d9e7537775c95eec219c8333e\nparent 7497e805bd437b07fc3e5920f0c1f84bf10b0ebe\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446434982 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446434985 +0100\n\nMerge pull request #6926\n\n7497e80 tests: Initialize networking on windows (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6d0d623fc955bba93d8f09e3fd2454284b61472",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6d0d623fc955bba93d8f09e3fd2454284b61472",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6d0d623fc955bba93d8f09e3fd2454284b61472/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02a95be97759e70d9e7537775c95eec219c8333e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a95be97759e70d9e7537775c95eec219c8333e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02a95be97759e70d9e7537775c95eec219c8333e"
      },
      {
        "sha": "7497e805bd437b07fc3e5920f0c1f84bf10b0ebe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7497e805bd437b07fc3e5920f0c1f84bf10b0ebe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7497e805bd437b07fc3e5920f0c1f84bf10b0ebe"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "23e5e66d8443778a3043954ee7350f1ac61b0cda",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6d0d623fc955bba93d8f09e3fd2454284b61472/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6d0d623fc955bba93d8f09e3fd2454284b61472/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=a6d0d623fc955bba93d8f09e3fd2454284b61472",
        "patch": "@@ -36,6 +36,7 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n {\n         ECC_Start();\n         SetupEnvironment();\n+        SetupNetworking();\n         fPrintToDebugLog = false; // don't want to write to debug.log file\n         fCheckBlockIndex = true;\n         SelectParams(chainName);"
      }
    ]
  },
  {
    "sha": "8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZmUzMGZiNGQxMzA1MzJkNGEwZTRjOWQxNDNmMDNlMWI4NWE3NDll",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-02T03:44:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-02T03:44:47Z"
      },
      "message": "Merge pull request #6928\n\n40cd32e Revert \"Add rules--presently disabled--for using GetMedianTimePast as endpoint for lock-time calculations\" (Gregory Maxwell)\n8537ecd Revert \"Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\" (Gregory Maxwell)",
      "tree": {
        "sha": "5442cc39c9cc9e9c88c0b441db4f5b47a950a1c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5442cc39c9cc9e9c88c0b441db4f5b47a950a1c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWNtwvAAoJEHSBCwEjRsmmiTcIAKOk5wKfrT5MUiPmyWLh3aSS\nyZXTUreJ39ntLLiDLXdISK/ecLcpPPbfW3G3m/Jf0E/CL9ZQ/H2/vdfdndP7tzOi\nHRCSadVwNy74jcbv+WHTpTMEr+Kj0g098B4uVkRkShyKbTbSboTdl3YiJ0HVsoVo\nlqUnb7kCPCPzw0y/F8zMFjHWOsHC1l8bOYVoF1K8HqKC7eIAA5Q3pu+AOrqJF6xu\n8xhFAk0hvxwUzKMvfC6YsSg62KMCbpb7imvdkx5J40LOSx6WqsaQoj8pq0SQxlvG\noKgyS2aPrzJ3kK9ZmMfSctL+7NqodkaXdNhzb806k7T5KKDeKIuwvwNqN9era54=\n=qLRi\n-----END PGP SIGNATURE-----",
        "payload": "tree 5442cc39c9cc9e9c88c0b441db4f5b47a950a1c3\nparent a6d0d623fc955bba93d8f09e3fd2454284b61472\nparent 40cd32e835092c3158175511da5193193ec54939\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446435841 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446435887 +0100\n\nMerge pull request #6928\n\n40cd32e Revert \"Add rules--presently disabled--for using GetMedianTimePast as endpoint for lock-time calculations\" (Gregory Maxwell)\n8537ecd Revert \"Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\" (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6d0d623fc955bba93d8f09e3fd2454284b61472",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6d0d623fc955bba93d8f09e3fd2454284b61472",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6d0d623fc955bba93d8f09e3fd2454284b61472"
      },
      {
        "sha": "40cd32e835092c3158175511da5193193ec54939",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40cd32e835092c3158175511da5193193ec54939",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40cd32e835092c3158175511da5193193ec54939"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 10,
      "deletions": 58
    },
    "files": [
      {
        "sha": "f937844e9f7e15391537db3aea9cdfadd1a94617",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "patch": "@@ -13,10 +13,4 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n-/** Flags for LockTime() */\n-enum {\n-    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n-    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n-};\n-\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "26a22ae6fd7cfd7d618410c6a03a6022b22d01ee",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 35,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "patch": "@@ -650,35 +650,10 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n     return true;\n }\n \n-bool CheckFinalTx(const CTransaction &tx, int flags)\n+bool CheckFinalTx(const CTransaction &tx)\n {\n     AssertLockHeld(cs_main);\n-\n-    // By convention a negative value for flags indicates that the\n-    // current network-enforced consensus rules should be used. In\n-    // a future soft-fork scenario that would mean checking which\n-    // rules would be enforced for the next block and setting the\n-    // appropriate flags. At the present time no soft-forks are\n-    // scheduled, so no flags are set.\n-    flags = std::max(flags, 0);\n-\n-    // CheckFinalTx() uses chainActive.Height()+1 to evaluate\n-    // nLockTime because when IsFinalTx() is called within\n-    // CBlock::AcceptBlock(), the height of the block *being*\n-    // evaluated is what is used. Thus if we want to know if a\n-    // transaction can be part of the *next* block, we need to call\n-    // IsFinalTx() with one more than chainActive.Height().\n-    const int nBlockHeight = chainActive.Height() + 1;\n-\n-    // Timestamps on the other hand don't get any special treatment,\n-    // because we can't know what timestamp the next block will have,\n-    // and there aren't timestamp applications where it matters.\n-    // However this changes once median past time-locks are enforced:\n-    const int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n-                             ? chainActive.Tip()->GetMedianTimePast()\n-                             : GetAdjustedTime();\n-\n-    return IsFinalTx(tx, nBlockHeight, nBlockTime);\n+    return IsFinalTx(tx, chainActive.Height() + 1, GetAdjustedTime());\n }\n \n unsigned int GetLegacySigOpCount(const CTransaction& tx)\n@@ -822,7 +797,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     // Only accept nLockTime-using transactions that can be mined in the next\n     // block; we don't want our mempool filled up with transactions that can't\n     // be mined yet.\n-    if (!CheckFinalTx(tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n+    if (!CheckFinalTx(tx))\n         return state.DoS(0, false, REJECT_NONSTANDARD, \"non-final\");\n \n     // is it already in the memory pool?\n@@ -2748,15 +2723,10 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n-        int nLockTimeFlags = 0;\n-        int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n-                                ? pindexPrev->GetMedianTimePast()\n-                                : block.GetBlockTime();\n-        if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n+        if (!IsFinalTx(tx, nHeight, block.GetBlockTime())) {\n             return state.DoS(10, error(\"%s: contains a non-final transaction\", __func__), REJECT_INVALID, \"bad-txns-nonfinal\");\n         }\n-    }\n \n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n     // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):"
      },
      {
        "sha": "202d2c772ba896b3f9f71cba6d1e6121ddd53594",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "patch": "@@ -308,10 +308,8 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n  * Check if transaction will be final in the next block to be created.\n  *\n  * Calls IsFinalTx() with current block height and appropriate block time.\n- *\n- * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckFinalTx(const CTransaction &tx, int flags = -1);\n+bool CheckFinalTx(const CTransaction &tx);\n \n /** \n  * Closure representing one script verification"
      },
      {
        "sha": "42c8bb970b9b5aa051af5b280944b9895a67f114",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "patch": "@@ -148,7 +148,6 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n-        const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n         CCoinsViewCache view(pcoinsTip);\n \n         // Priority order to process transactions\n@@ -163,12 +162,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n              mi != mempool.mapTx.end(); ++mi)\n         {\n             const CTransaction& tx = mi->GetTx();\n-\n-            int64_t nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n-                                    ? nMedianTimePast\n-                                    : pblock->GetBlockTime();\n-\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, nLockTimeCutoff))\n+            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n                 continue;\n \n             COrphan* porphan = NULL;"
      },
      {
        "sha": "747c5ce8ce4abf6e92767277bfbadd17e1dee640",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "patch": "@@ -43,9 +43,6 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n-/** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n-static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_MEDIAN_TIME_PAST;\n-\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**\n      * Check for standard transaction types"
      },
      {
        "sha": "91a3a5738ef298526c762d2f85ebdf3f5ca135cc",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "patch": "@@ -4,7 +4,6 @@\n \n #include \"chainparams.h\"\n #include \"coins.h\"\n-#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -230,7 +229,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.nLockTime = chainActive.Tip()->nHeight+1;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx, LOCKTIME_MEDIAN_TIME_PAST));\n+    BOOST_CHECK(!CheckFinalTx(tx));\n \n     // time locked\n     tx2.vin.resize(1);\n@@ -244,7 +243,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx2.nLockTime = chainActive.Tip()->GetMedianTimePast()+1;\n     hash = tx2.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx2, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx2, LOCKTIME_MEDIAN_TIME_PAST));\n+    BOOST_CHECK(!CheckFinalTx(tx2));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n \n@@ -262,7 +261,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     //BOOST_CHECK(CheckFinalTx(tx2));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n-    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 2);\n+    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 3);\n     delete pblocktemplate;\n \n     chainActive.Tip()->nHeight--;"
      }
    ]
  },
  {
    "sha": "06d81ad516f1d136da9f03ca2ae823211c0f6988",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmQ4MWFkNTE2ZjFkMTM2ZGE5ZjAzY2EyYWU4MjMyMTFjMGY2OTg4",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-02T21:10:57Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-03T01:10:24Z"
      },
      "message": "Skip BIP30 check after BIP34 activation",
      "tree": {
        "sha": "b8e854ae27aa93329f59ce7e798e45fa0a9c2a01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8e854ae27aa93329f59ce7e798e45fa0a9c2a01"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06d81ad516f1d136da9f03ca2ae823211c0f6988",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d81ad516f1d136da9f03ca2ae823211c0f6988",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06d81ad516f1d136da9f03ca2ae823211c0f6988",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d81ad516f1d136da9f03ca2ae823211c0f6988/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "159f6f644c04bb588ae744a1b28bba1f21907d3e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d81ad516f1d136da9f03ca2ae823211c0f6988/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d81ad516f1d136da9f03ca2ae823211c0f6988/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=06d81ad516f1d136da9f03ca2ae823211c0f6988",
        "patch": "@@ -1736,6 +1736,17 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     bool fEnforceBIP30 = (!pindex->phashBlock) || // Enforce on CreateNewBlock invocations which don't have a hash.\n                           !((pindex->nHeight==91842 && pindex->GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n                            (pindex->nHeight==91880 && pindex->GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n+\n+    // Once BIP34 activated it was not possible to create new duplicate coinbases and thus other than starting\n+    // with the 2 existing duplicate coinbase pairs, not possible to create overwriting txs.  But by the\n+    // time BIP34 activated, in each of the existing pairs the duplicate coinbase had overwritten the first\n+    // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n+    // duplicate transactions descending from the known pairs either.\n+    // If we're on the known chain at height greater than 227931 where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n+    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(227931);\n+    //Only continue to enforce if we're below height 227931 or the block hash at that height doesn't correspond.\n+    fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\")));\n+\n     if (fEnforceBIP30) {\n         BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n             const CCoins* coins = view.AccessCoins(tx.GetHash());"
      }
    ]
  },
  {
    "sha": "33c90cf197223fb95f858db80d090d570d70498a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2M5MGNmMTk3MjIzZmI5NWY4NThkYjgwZDA5MGQ1NzBkNzA0OThh",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-02T21:41:55Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-03T01:11:55Z"
      },
      "message": "Make skipping BIP30 check chain agnostic",
      "tree": {
        "sha": "07c236112b37b67a337aa8b9b10a4bf9fbe0e815",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07c236112b37b67a337aa8b9b10a4bf9fbe0e815"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33c90cf197223fb95f858db80d090d570d70498a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33c90cf197223fb95f858db80d090d570d70498a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33c90cf197223fb95f858db80d090d570d70498a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33c90cf197223fb95f858db80d090d570d70498a/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06d81ad516f1d136da9f03ca2ae823211c0f6988",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d81ad516f1d136da9f03ca2ae823211c0f6988",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06d81ad516f1d136da9f03ca2ae823211c0f6988"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 13,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5d6d1ef9d8f7d28a8381cf010ec667c951de9403",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33c90cf197223fb95f858db80d090d570d70498a/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33c90cf197223fb95f858db80d090d570d70498a/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=33c90cf197223fb95f858db80d090d570d70498a",
        "patch": "@@ -73,6 +73,8 @@ class CMainParams : public CChainParams {\n         consensus.nMajorityEnforceBlockUpgrade = 750;\n         consensus.nMajorityRejectBlockOutdated = 950;\n         consensus.nMajorityWindow = 1000;\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -153,6 +155,8 @@ class CTestNetParams : public CChainParams {\n         consensus.nMajorityEnforceBlockUpgrade = 51;\n         consensus.nMajorityRejectBlockOutdated = 75;\n         consensus.nMajorityWindow = 100;\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -216,6 +220,8 @@ class CRegTestParams : public CChainParams {\n         consensus.nMajorityEnforceBlockUpgrade = 750;\n         consensus.nMajorityRejectBlockOutdated = 950;\n         consensus.nMajorityWindow = 1000;\n+        consensus.BIP34Height = -1; // BIP34 has not necessarily activated on regtest\n+        consensus.BIP34Hash = uint256();\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;"
      },
      {
        "sha": "5ebc48a8df9d35049755ab26a4b7d8e0c4cb4e42",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33c90cf197223fb95f858db80d090d570d70498a/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33c90cf197223fb95f858db80d090d570d70498a/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=33c90cf197223fb95f858db80d090d570d70498a",
        "patch": "@@ -19,6 +19,9 @@ struct Params {\n     int nMajorityEnforceBlockUpgrade;\n     int nMajorityRejectBlockOutdated;\n     int nMajorityWindow;\n+    /** Block height and hash at which BIP34 becomes active */\n+    int BIP34Height;\n+    uint256 BIP34Hash;\n     /** Proof of work parameters */\n     uint256 powLimit;\n     bool fPowAllowMinDifficultyBlocks;"
      },
      {
        "sha": "a4c9de185db5893ee11ffeae2107385e73851efc",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33c90cf197223fb95f858db80d090d570d70498a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33c90cf197223fb95f858db80d090d570d70498a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=33c90cf197223fb95f858db80d090d570d70498a",
        "patch": "@@ -1742,10 +1742,10 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     // time BIP34 activated, in each of the existing pairs the duplicate coinbase had overwritten the first\n     // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n     // duplicate transactions descending from the known pairs either.\n-    // If we're on the known chain at height greater than 227931 where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n-    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(227931);\n-    //Only continue to enforce if we're below height 227931 or the block hash at that height doesn't correspond.\n-    fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\")));\n+    // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n+    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n+    //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n+    fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n \n     if (fEnforceBIP30) {\n         BOOST_FOREACH(const CTransaction& tx, block.vtx) {"
      }
    ]
  },
  {
    "sha": "abd8b768ee889f28b3d2bc209307a9867a973556",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYmQ4Yjc2OGVlODg5ZjI4YjNkMmJjMjA5MzA3YTk4NjdhOTczNTU2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-25T00:47:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-03T07:53:37Z"
      },
      "message": "[qt] Properly display required fee instead of minTxFee",
      "tree": {
        "sha": "85c5e1d4a31b2f61e53e2d9372afbb71fa1ca819",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85c5e1d4a31b2f61e53e2d9372afbb71fa1ca819"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abd8b768ee889f28b3d2bc209307a9867a973556",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd8b768ee889f28b3d2bc209307a9867a973556",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/abd8b768ee889f28b3d2bc209307a9867a973556",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd8b768ee889f28b3d2bc209307a9867a973556/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46f74379b86be982b121bcb8c3cfe07fa80bffd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46f74379b86be982b121bcb8c3cfe07fa80bffd0"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 26,
      "deletions": 12
    },
    "files": [
      {
        "sha": "781d8f7e02912fdf022be0bfac9a9e034de8570c",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -636,21 +636,21 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n-    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK())) + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000))) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n     toolTip2 += tr(\"This label turns red if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK()));\n+    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000)));\n \n     QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n     double dFeeVary;\n     if (payTxFee.GetFeePerK() > 0)\n-        dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), payTxFee.GetFeePerK()) / 1000;\n+        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), payTxFee.GetFeePerK()) / 1000;\n     else\n-        dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), mempool.estimateFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n+        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), mempool.estimateFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n     QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n \n     l3->setToolTip(toolTip4);"
      },
      {
        "sha": "d0191fa6d8aaf864ec69983037191c207b8fbf13",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -18,7 +18,7 @@\n #include \"txdb.h\" // for -dbcache defaults\n \n #ifdef ENABLE_WALLET\n-#include \"wallet/wallet.h\" // for CWallet::minTxFee\n+#include \"wallet/wallet.h\" // for CWallet::GetRequiredFee()\n #endif\n \n #include <boost/thread.hpp>"
      },
      {
        "sha": "ab277171c80077bc52dec9cba5946e6de06a6597",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -172,7 +172,7 @@ void SendCoinsDialog::setModel(WalletModel *model)\n         connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n         connect(ui->checkBoxFreeTx, SIGNAL(stateChanged(int)), this, SLOT(updateGlobalFeeVariables()));\n         connect(ui->checkBoxFreeTx, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        ui->customFee->setSingleStep(CWallet::minTxFee.GetFeePerK());\n+        ui->customFee->setSingleStep(CWallet::GetRequiredFee(1000));\n         updateFeeSectionControls();\n         updateMinFeeLabel();\n         updateSmartFeeLabel();\n@@ -569,7 +569,7 @@ void SendCoinsDialog::on_buttonMinimizeFee_clicked()\n void SendCoinsDialog::setMinimumFee()\n {\n     ui->radioCustomPerKilobyte->setChecked(true);\n-    ui->customFee->setValue(CWallet::minTxFee.GetFeePerK());\n+    ui->customFee->setValue(CWallet::GetRequiredFee(1000));\n }\n \n void SendCoinsDialog::updateFeeSectionControls()\n@@ -621,8 +621,8 @@ void SendCoinsDialog::updateFeeMinimizedLabel()\n void SendCoinsDialog::updateMinFeeLabel()\n {\n     if (model && model->getOptionsModel())\n-        ui->checkBoxMinimumFee->setText(tr(\"Pay only the minimum fee of %1\").arg(\n-            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::minTxFee.GetFeePerK()) + \"/kB\")\n+        ui->checkBoxMinimumFee->setText(tr(\"Pay only the required fee of %1\").arg(\n+            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::GetRequiredFee(1000)) + \"/kB\")\n         );\n }\n \n@@ -635,7 +635,7 @@ void SendCoinsDialog::updateSmartFeeLabel()\n     CFeeRate feeRate = mempool.estimateFee(nBlocksToConfirm);\n     if (feeRate <= CFeeRate(0)) // not enough data => minfee\n     {\n-        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::minTxFee.GetFeePerK()) + \"/kB\");\n+        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::GetRequiredFee(1000)) + \"/kB\");\n         ui->labelSmartFee2->show(); // (Smart fee not initialized yet. This usually takes a few blocks...)\n         ui->labelFeeEstimation->setText(\"\");\n     }"
      },
      {
        "sha": "8c0dad2381b69743c4cd4b5b904889fbb26637d6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -2120,6 +2120,11 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n     return true;\n }\n \n+CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n+{\n+    return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));\n+}\n+\n CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool)\n {\n     // payTxFee is user-set \"I want to pay this much\"\n@@ -2131,9 +2136,9 @@ CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarge\n     if (nFeeNeeded == 0)\n         nFeeNeeded = pool.estimateFee(nConfirmTarget).GetFee(nTxBytes);\n     // ... unless we don't have enough mempool data, in which case fall\n-    // back to a hard-coded fee\n+    // back to the required fee\n     if (nFeeNeeded == 0)\n-        nFeeNeeded = minTxFee.GetFee(nTxBytes);\n+        nFeeNeeded = GetRequiredFee(nTxBytes);\n     // prevent user from paying a non-sense fee (like 1 satoshi): 0 < fee < minRelayFee\n     if (nFeeNeeded < ::minRelayTxFee.GetFee(nTxBytes))\n         nFeeNeeded = ::minRelayTxFee.GetFee(nTxBytes);"
      },
      {
        "sha": "22fe08670f62399f9ff3b049bea2030784d7c691",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abd8b768ee889f28b3d2bc209307a9867a973556/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abd8b768ee889f28b3d2bc209307a9867a973556/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=abd8b768ee889f28b3d2bc209307a9867a973556",
        "patch": "@@ -628,7 +628,16 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n \n     static CFeeRate minTxFee;\n+    /**\n+     * Estimate the minimum fee considering user set parameters\n+     * and the required fee\n+     */\n     static CAmount GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool);\n+    /**\n+     * Return the minimum required fee taking into account the\n+     * floating relay fee and user set minimum transaction fee\n+     */\n+    static CAmount GetRequiredFee(unsigned int nTxBytes);\n \n     bool NewKeyPool();\n     bool TopUpKeyPool(unsigned int kpSize = 0);"
      }
    ]
  },
  {
    "sha": "53238ff0b1085352e4aaa796d0e473551e573143",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzIzOGZmMGIxMDg1MzUyZTRhYWE3OTZkMGU0NzM1NTFlNTczMTQz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-25T02:01:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-03T07:53:37Z"
      },
      "message": "Clarify what minrelaytxfee does",
      "tree": {
        "sha": "62fce450d78982cedc2533d8bef1705e57304cef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62fce450d78982cedc2533d8bef1705e57304cef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53238ff0b1085352e4aaa796d0e473551e573143",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53238ff0b1085352e4aaa796d0e473551e573143",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53238ff0b1085352e4aaa796d0e473551e573143",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53238ff0b1085352e4aaa796d0e473551e573143/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abd8b768ee889f28b3d2bc209307a9867a973556",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd8b768ee889f28b3d2bc209307a9867a973556",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abd8b768ee889f28b3d2bc209307a9867a973556"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5fd06b34440aed88ddf471dd1fd0878f4f844680",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53238ff0b1085352e4aaa796d0e473551e573143/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53238ff0b1085352e4aaa796d0e473551e573143/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=53238ff0b1085352e4aaa796d0e473551e573143",
        "patch": "@@ -434,7 +434,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n     }\n-    strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)\"),\n+    strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(::minRelayTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-printtoconsole\", _(\"Send trace/debug info to console instead of debug.log file\"));\n     if (showDebug)"
      },
      {
        "sha": "c340bcd5c4ffa3100d495266b843f33c86753a6f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53238ff0b1085352e4aaa796d0e473551e573143/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53238ff0b1085352e4aaa796d0e473551e573143/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=53238ff0b1085352e4aaa796d0e473551e573143",
        "patch": "@@ -74,7 +74,7 @@ size_t nCoinCacheUsage = 5000 * 300;\n uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n-/** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n+/** Fees smaller than this (in satoshi) are considered zero fee (for relaying, mining and transaction creation) */\n CFeeRate minRelayTxFee = CFeeRate(1000);\n \n CTxMemPool mempool(::minRelayTxFee);"
      }
    ]
  },
  {
    "sha": "42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmYzMzllZjc4MGJmZjI2ODM2OWUzYTczOTljOGI4ZjJlZjNlOGI0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-03T09:08:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-03T09:09:09Z"
      },
      "message": "Merge pull request #6930\n\nff2a2af build: don't distribute tests_config.py (Wladimir J. van der Laan)",
      "tree": {
        "sha": "288d41beef1aa19375ab9e160b28c9796c6f96d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/288d41beef1aa19375ab9e160b28c9796c6f96d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOHm1AAoJEHSBCwEjRsmm1CAIAIM+8NCd1qa4+MTrk1BNZVt+\nIpstD1+kN4VrDbT5346iMN/ydRAVKuovxbe3xyHtPsZfT/mmDnUkfOPop04B5Ms5\njTbxi77miROwOkrrVQ+WPMUzr4x/sHE0UrEufuME2iSZbuAkkbkBRLYr+lc82NIG\n5NNGl4SMT61F8oJmlKUyfSnTuk/+tnv5AY4EpeW49NDQE9b1X7gaF3l0Ria19iCs\nShLMoIGoaK/NZmuE/RaPBsUg2z2NjRAsVQsF8cMyqJ6CE0CdqgvP3h7P3DcMR0vw\nB8kosw1Mn2UgVriBUHzheIbsSBDOzHxlqADZ0BPiDfnZAsPcA68ST+VoZO8nzLU=\n=QJ7V\n-----END PGP SIGNATURE-----",
        "payload": "tree 288d41beef1aa19375ab9e160b28c9796c6f96d4\nparent 8fe30fb4d130532d4a0e4c9d143f03e1b85a749e\nparent ff2a2af64c75724cbd6f64963da792532093004b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446541732 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446541749 +0100\n\nMerge pull request #6930\n\nff2a2af build: don't distribute tests_config.py (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42f339ef780bff268369e3a7399c8b8f2ef3e8b4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8fe30fb4d130532d4a0e4c9d143f03e1b85a749e"
      },
      {
        "sha": "ff2a2af64c75724cbd6f64963da792532093004b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff2a2af64c75724cbd6f64963da792532093004b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff2a2af64c75724cbd6f64963da792532093004b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "303ad3b06f7b9e92daed1e47d53d85d676caa03e",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42f339ef780bff268369e3a7399c8b8f2ef3e8b4/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42f339ef780bff268369e3a7399c8b8f2ef3e8b4/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
        "patch": "@@ -213,7 +213,7 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/pull-tester/tests_config.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n "
      }
    ]
  },
  {
    "sha": "268b79ef0c54a3bff0b50e093b98b943e49a4939",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjhiNzllZjBjNTRhM2JmZjBiNTBlMDkzYjk4Yjk0M2U0OWE0OTM5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-03T10:58:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-03T11:34:51Z"
      },
      "message": "[qt] rpcconsole: Scale monospace font to 95%",
      "tree": {
        "sha": "0bef8e4779ed46ec9b6fdc2fec87db2f99300439",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bef8e4779ed46ec9b6fdc2fec87db2f99300439"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/268b79ef0c54a3bff0b50e093b98b943e49a4939",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/268b79ef0c54a3bff0b50e093b98b943e49a4939",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/268b79ef0c54a3bff0b50e093b98b943e49a4939",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/268b79ef0c54a3bff0b50e093b98b943e49a4939/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28313b83fc1a16b5e6da2b868b5f297050ce8b05",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28313b83fc1a16b5e6da2b868b5f297050ce8b05"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "840170182144ac198f35eab723c04b9412d363af",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/268b79ef0c54a3bff0b50e093b98b943e49a4939/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/268b79ef0c54a3bff0b50e093b98b943e49a4939/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=268b79ef0c54a3bff0b50e093b98b943e49a4939",
        "patch": "@@ -463,8 +463,8 @@ void RPCConsole::clear()\n \n     // Set default style sheet\n     QFontInfo fixedFontInfo(GUIUtil::fixedPitchFont());\n-    // Try to make font equally large on different OS.\n-    QString ptSize = QString(\"%1pt\").arg(QFontInfo(QFont()).pointSize());\n+    // Try to make fixed font adequately large on different OS\n+    QString ptSize = QString(\"%1pt\").arg(QFontInfo(QFont()).pointSize() * 8.5 / 9);\n     ui->messagesWidget->document()->setDefaultStyleSheet(\n         QString(\n                 \"table { }\""
      }
    ]
  },
  {
    "sha": "e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNGU1MzM0ZWY4ZDkyMzk5M2VmOWNmNzA0ZWE4ZjNkMGI1ODAxMzUw",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-03T17:12:36Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-03T17:12:36Z"
      },
      "message": "Restore MedianTimePast for locktime.\n\nRevert \"Revert \"Add rules--presently disabled--for using GetMedianTimePast as endpoint for lock-time calculations\"\"\nThis reverts commit 40cd32e835092c3158175511da5193193ec54939.\n\nAfter careful analysis it was determined that the change was, in fact, safe and several people were suffering\nmomentary confusion about locktime semantics.",
      "tree": {
        "sha": "a8298dd0e362e318eaa075c468a5e1b556d7d47b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8298dd0e362e318eaa075c468a5e1b556d7d47b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42f339ef780bff268369e3a7399c8b8f2ef3e8b4"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 54,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6d6ce7e0998e9248b65f4ee7fb47bb36216ed76a",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
        "patch": "@@ -13,4 +13,10 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n+/** Flags for LockTime() */\n+enum {\n+    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n+    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n+};\n+\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "e038fe3663f1a0d2673dee4f9991e3f268eb42ec",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 5,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
        "patch": "@@ -650,10 +650,35 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n     return true;\n }\n \n-bool CheckFinalTx(const CTransaction &tx)\n+bool CheckFinalTx(const CTransaction &tx, int flags)\n {\n     AssertLockHeld(cs_main);\n-    return IsFinalTx(tx, chainActive.Height() + 1, GetAdjustedTime());\n+\n+    // By convention a negative value for flags indicates that the\n+    // current network-enforced consensus rules should be used. In\n+    // a future soft-fork scenario that would mean checking which\n+    // rules would be enforced for the next block and setting the\n+    // appropriate flags. At the present time no soft-forks are\n+    // scheduled, so no flags are set.\n+    flags = std::max(flags, 0);\n+\n+    // CheckFinalTx() uses chainActive.Height()+1 to evaluate\n+    // nLockTime because when IsFinalTx() is called within\n+    // CBlock::AcceptBlock(), the height of the block *being*\n+    // evaluated is what is used. Thus if we want to know if a\n+    // transaction can be part of the *next* block, we need to call\n+    // IsFinalTx() with one more than chainActive.Height().\n+    const int nBlockHeight = chainActive.Height() + 1;\n+\n+    // Timestamps on the other hand don't get any special treatment,\n+    // because we can't know what timestamp the next block will have,\n+    // and there aren't timestamp applications where it matters.\n+    // However this changes once median past time-locks are enforced:\n+    const int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n+                             ? chainActive.Tip()->GetMedianTimePast()\n+                             : GetAdjustedTime();\n+\n+    return IsFinalTx(tx, nBlockHeight, nBlockTime);\n }\n \n unsigned int GetLegacySigOpCount(const CTransaction& tx)\n@@ -797,7 +822,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     // Only accept nLockTime-using transactions that can be mined in the next\n     // block; we don't want our mempool filled up with transactions that can't\n     // be mined yet.\n-    if (!CheckFinalTx(tx))\n+    if (!CheckFinalTx(tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.DoS(0, false, REJECT_NONSTANDARD, \"non-final\");\n \n     // is it already in the memory pool?\n@@ -2723,10 +2748,15 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n-        if (!IsFinalTx(tx, nHeight, block.GetBlockTime())) {\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n+        int nLockTimeFlags = 0;\n+        int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n+                                ? pindexPrev->GetMedianTimePast()\n+                                : block.GetBlockTime();\n+        if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n             return state.DoS(10, error(\"%s: contains a non-final transaction\", __func__), REJECT_INVALID, \"bad-txns-nonfinal\");\n         }\n+    }\n \n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n     // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):"
      },
      {
        "sha": "65732d770f8811d9143764f9bf39f319002e3ab3",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
        "patch": "@@ -308,8 +308,10 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n  * Check if transaction will be final in the next block to be created.\n  *\n  * Calls IsFinalTx() with current block height and appropriate block time.\n+ *\n+ * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckFinalTx(const CTransaction &tx);\n+bool CheckFinalTx(const CTransaction &tx, int flags = -1);\n \n /** \n  * Closure representing one script verification"
      },
      {
        "sha": "053d9cdbc4ecca4fb22f747fb3d2551206f64d3b",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
        "patch": "@@ -148,6 +148,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n+        const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n         CCoinsViewCache view(pcoinsTip);\n \n         // Priority order to process transactions\n@@ -162,7 +163,12 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n              mi != mempool.mapTx.end(); ++mi)\n         {\n             const CTransaction& tx = mi->GetTx();\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n+\n+            int64_t nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n+                                    ? nMedianTimePast\n+                                    : pblock->GetBlockTime();\n+\n+            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, nLockTimeCutoff))\n                 continue;\n \n             COrphan* porphan = NULL;"
      },
      {
        "sha": "fdc54a70a1bcd3730038fbc6fb1346ebee3ae419",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4e5334ef8d923993ef9cf704ea8f3d0b5801350/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
        "patch": "@@ -43,6 +43,9 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n+/** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n+static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = 0;\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**\n      * Check for standard transaction types"
      }
    ]
  },
  {
    "sha": "d1c3762ae8c8c73ddd47766041507a6c131afaf2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWMzNzYyYWU4YzhjNzNkZGQ0Nzc2NjA0MTUwN2E2YzEzMWFmYWYy",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-03T17:14:09Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-11-03T17:14:09Z"
      },
      "message": "Revert \"Revert \"Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\"\"\n\nThis reverts commit 8537ecdfc40181249ec37556015a99cfae4b21fd.",
      "tree": {
        "sha": "25a57c056159681fb7277b582c5daec83afc2b62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25a57c056159681fb7277b582c5daec83afc2b62"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1c3762ae8c8c73ddd47766041507a6c131afaf2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1c3762ae8c8c73ddd47766041507a6c131afaf2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1c3762ae8c8c73ddd47766041507a6c131afaf2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1c3762ae8c8c73ddd47766041507a6c131afaf2/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4e5334ef8d923993ef9cf704ea8f3d0b5801350",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4e5334ef8d923993ef9cf704ea8f3d0b5801350"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f269e8d4762e441f5c73134ddfee6b044070f307",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1c3762ae8c8c73ddd47766041507a6c131afaf2/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1c3762ae8c8c73ddd47766041507a6c131afaf2/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=d1c3762ae8c8c73ddd47766041507a6c131afaf2",
        "patch": "@@ -44,7 +44,7 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n /** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n-static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = 0;\n+static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_MEDIAN_TIME_PAST;\n \n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**"
      },
      {
        "sha": "827525783a36913a3d241804d4f746243032f84c",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1c3762ae8c8c73ddd47766041507a6c131afaf2/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1c3762ae8c8c73ddd47766041507a6c131afaf2/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=d1c3762ae8c8c73ddd47766041507a6c131afaf2",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"chainparams.h\"\n #include \"coins.h\"\n+#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -229,7 +230,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.nLockTime = chainActive.Tip()->nHeight+1;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx));\n+    BOOST_CHECK(!CheckFinalTx(tx, LOCKTIME_MEDIAN_TIME_PAST));\n \n     // time locked\n     tx2.vin.resize(1);\n@@ -243,7 +244,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx2.nLockTime = chainActive.Tip()->GetMedianTimePast()+1;\n     hash = tx2.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx2, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx2));\n+    BOOST_CHECK(!CheckFinalTx(tx2, LOCKTIME_MEDIAN_TIME_PAST));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n \n@@ -261,7 +262,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     //BOOST_CHECK(CheckFinalTx(tx2));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n-    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 3);\n+    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 2);\n     delete pblocktemplate;\n \n     chainActive.Tip()->nHeight--;"
      }
    ]
  },
  {
    "sha": "de0499d3b8352334357c8d60931cd5d2be5ab61d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTA0OTlkM2I4MzUyMzM0MzU3YzhkNjA5MzFjZDVkMmJlNWFiNjFk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-11-01T18:09:17Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@bitreserve.org",
        "date": "2015-11-04T10:36:00Z"
      },
      "message": "Fix ZMQ Notification initialization and shutdown\n\nMoves the call Initialize() from init.cpp to CreateWithArguments() and handles the\nreturn value. Moves the call Shutdown() from init.cpp to destructor.\nChanges Initialize() and Shutdown() to protected members.",
      "tree": {
        "sha": "debaa2e8f9671650860d827cedbdac27ca79b243",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/debaa2e8f9671650860d827cedbdac27ca79b243"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de0499d3b8352334357c8d60931cd5d2be5ab61d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de0499d3b8352334357c8d60931cd5d2be5ab61d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de0499d3b8352334357c8d60931cd5d2be5ab61d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de0499d3b8352334357c8d60931cd5d2be5ab61d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02a95be97759e70d9e7537775c95eec219c8333e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a95be97759e70d9e7537775c95eec219c8333e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02a95be97759e70d9e7537775c95eec219c8333e"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "3e7381b82f07a94712050cb80e16efa55ce04100",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de0499d3b8352334357c8d60931cd5d2be5ab61d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de0499d3b8352334357c8d60931cd5d2be5ab61d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=de0499d3b8352334357c8d60931cd5d2be5ab61d",
        "patch": "@@ -222,7 +222,6 @@ void Shutdown()\n #if ENABLE_ZMQ\n     if (pzmqNotificationInterface) {\n         UnregisterValidationInterface(pzmqNotificationInterface);\n-        pzmqNotificationInterface->Shutdown();\n         delete pzmqNotificationInterface;\n         pzmqNotificationInterface = NULL;\n     }\n@@ -1176,7 +1175,6 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     pzmqNotificationInterface = CZMQNotificationInterface::CreateWithArguments(mapArgs);\n \n     if (pzmqNotificationInterface) {\n-        pzmqNotificationInterface->Initialize();\n         RegisterValidationInterface(pzmqNotificationInterface);\n     }\n #endif"
      },
      {
        "sha": "09fe3aeb4c8e93df548b51c6ebcef85a17b0e8fe",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de0499d3b8352334357c8d60931cd5d2be5ab61d/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de0499d3b8352334357c8d60931cd5d2be5ab61d/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=de0499d3b8352334357c8d60931cd5d2be5ab61d",
        "patch": "@@ -21,8 +21,7 @@ CZMQNotificationInterface::CZMQNotificationInterface() : pcontext(NULL)\n \n CZMQNotificationInterface::~CZMQNotificationInterface()\n {\n-    // ensure Shutdown if Initialize is called\n-    assert(!pcontext);\n+    Shutdown();\n \n     for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n     {\n@@ -59,6 +58,12 @@ CZMQNotificationInterface* CZMQNotificationInterface::CreateWithArguments(const\n     {\n         notificationInterface = new CZMQNotificationInterface();\n         notificationInterface->notifiers = notifiers;\n+\n+        if (!notificationInterface->Initialize())\n+        {\n+            delete notificationInterface;\n+            notificationInterface = NULL;\n+        }\n     }\n \n     return notificationInterface;\n@@ -99,7 +104,7 @@ bool CZMQNotificationInterface::Initialize()\n         return false;\n     }\n \n-    return false;\n+    return true;\n }\n \n // Called during shutdown sequence"
      },
      {
        "sha": "3ccfaf341d20d8e57772fcaeb6f93ab34b4feec1",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de0499d3b8352334357c8d60931cd5d2be5ab61d/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de0499d3b8352334357c8d60931cd5d2be5ab61d/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=de0499d3b8352334357c8d60931cd5d2be5ab61d",
        "patch": "@@ -19,10 +19,11 @@ class CZMQNotificationInterface : public CValidationInterface\n \n     static CZMQNotificationInterface* CreateWithArguments(const std::map<std::string, std::string> &args);\n \n+protected:\n     bool Initialize();\n     void Shutdown();\n \n-protected: // CValidationInterface\n+    // CValidationInterface\n     void SyncTransaction(const CTransaction &tx, const CBlock *pblock);\n     void UpdatedBlockTip(const CBlockIndex *pindex);\n "
      }
    ]
  },
  {
    "sha": "aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2EwYzAwYWUxZmNkNGRkYWFkZjdhMzU3NjVmNzYzYTdiYzRiOTQ2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T10:44:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T10:45:33Z"
      },
      "message": "Merge pull request #6905\n\na6efc01 Bugfix: Omit wallet-related options from -help when wallet is disabled (Luke Dashjr)\n5f9260f Bugfix: If genproclimit is omitted to RPC setgenerate, don't change it; also show correct default in getmininginfo (Luke Dashjr)\n420a82f Bugfix: Describe dblogsize option correctly (it refers to the wallet database, not memory pool) (Luke Dashjr)\ncaa3d42 Bugfix: RPC: blockchain: Display correct defaults in help for verifychain method (Luke Dashjr)",
      "tree": {
        "sha": "0bc5bbb7fefb099f7c1802d7cbf09d75a14df573",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bc5bbb7fefb099f7c1802d7cbf09d75a14df573"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOeHNAAoJEHSBCwEjRsmmnKQH/isEiL05BPtuTQkkeKA+GTkN\n6UTyqLeaYFsaMKYoemLvVwuyIjbd94sOxngWiFjLefqLCgvyb/HL9URLzIDU4l1M\nC4E+ICNXhFqrLSYAznrYXtQqA7tzhbyIKQAjWSC/Z0VmzVANGD9C+8TY5N921NYP\nH1ne1ZCJc9ubr93rcmgMLkYWejTGfudhB027YdZxNkDI/NgqYKSYfGU8Zez1uYB4\n7Lrs4txGpjf8ArhmtUil+4iSJpC3haAXSnP2JoWdbY+hwqhsy7nj0kMWeq0WlY4J\nzj7udHQSY6rD8omPuC7JWg0wSG1ks9TuIaHuAZqcfFwbpCTcjmdLzwZ22T4oaIU=\n=f2m3\n-----END PGP SIGNATURE-----",
        "payload": "tree 0bc5bbb7fefb099f7c1802d7cbf09d75a14df573\nparent 42f339ef780bff268369e3a7399c8b8f2ef3e8b4\nparent a6efc019085fd70790ad7fa97078ce02d8f8dec3\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446633884 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446633933 +0100\n\nMerge pull request #6905\n\na6efc01 Bugfix: Omit wallet-related options from -help when wallet is disabled (Luke Dashjr)\n5f9260f Bugfix: If genproclimit is omitted to RPC setgenerate, don't change it; also show correct default in getmininginfo (Luke Dashjr)\n420a82f Bugfix: Describe dblogsize option correctly (it refers to the wallet database, not memory pool) (Luke Dashjr)\ncaa3d42 Bugfix: RPC: blockchain: Display correct defaults in help for verifychain method (Luke Dashjr)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42f339ef780bff268369e3a7399c8b8f2ef3e8b4"
      },
      {
        "sha": "a6efc019085fd70790ad7fa97078ce02d8f8dec3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6efc019085fd70790ad7fa97078ce02d8f8dec3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6efc019085fd70790ad7fa97078ce02d8f8dec3"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 27,
      "deletions": 16
    },
    "files": [
      {
        "sha": "d0f73a632b2964ae0654af171d48897ae5c03580",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "patch": "@@ -307,8 +307,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-alerts\", strprintf(_(\"Receive and display P2P network alerts (default: %u)\"), DEFAULT_ALERTS));\n     strUsage += HelpMessageOpt(\"-alertnotify=<cmd>\", _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\"));\n     strUsage += HelpMessageOpt(\"-blocknotify=<cmd>\", _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\"));\n-    strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), 288));\n-    strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), 3));\n+    strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), DEFAULT_CHECKBLOCKS));\n+    strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), DEFAULT_CHECKLEVEL));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n     if (mode == HMM_BITCOIND)\n     {\n@@ -407,12 +407,16 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug)\n     {\n         strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", 1));\n-        strUsage += HelpMessageOpt(\"-dblogsize=<n>\", strprintf(\"Flush database activity from memory pool to disk log every <n> megabytes (default: %u)\", 100));\n+#ifdef ENABLE_WALLET\n+        strUsage += HelpMessageOpt(\"-dblogsize=<n>\", strprintf(\"Flush wallet database activity from memory to disk log every <n> megabytes (default: %u)\", DEFAULT_WALLET_DBLOGSIZE));\n+#endif\n         strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", 0));\n         strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", 0));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n+#ifdef ENABLE_WALLET\n         strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", 1));\n+#endif\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", 0));\n         strUsage += HelpMessageOpt(\"-limitancestorcount=<n>\", strprintf(\"Do not accept transactions if number of in-mempool ancestors is <n> or more (default: %u)\", DEFAULT_ANCESTOR_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT));\n@@ -425,7 +429,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n         _(\"If <category> is not supplied or if <category> = 1, output all debugging information.\") + _(\"<category> can be:\") + \" \" + debugCategories + \".\");\n     strUsage += HelpMessageOpt(\"-gen\", strprintf(_(\"Generate coins (default: %u)\"), 0));\n-    strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), 1));\n+    strUsage += HelpMessageOpt(\"-genproclimit=<n>\", strprintf(_(\"Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)\"), DEFAULT_GENERATE_THREADS));\n     strUsage += HelpMessageOpt(\"-help-debug\", _(\"Show all debugging options (usage: --help -help-debug)\"));\n     strUsage += HelpMessageOpt(\"-logips\", strprintf(_(\"Include IP addresses in debug output (default: %u)\"), 0));\n     strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), 1));\n@@ -1289,9 +1293,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 }\n \n                 uiInterface.InitMessage(_(\"Verifying blocks...\"));\n-                if (fHavePruned && GetArg(\"-checkblocks\", 288) > MIN_BLOCKS_TO_KEEP) {\n+                if (fHavePruned && GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS) > MIN_BLOCKS_TO_KEEP) {\n                     LogPrintf(\"Prune: pruned datadir may not have more than %d blocks; -checkblocks=%d may fail\\n\",\n-                        MIN_BLOCKS_TO_KEEP, GetArg(\"-checkblocks\", 288));\n+                        MIN_BLOCKS_TO_KEEP, GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS));\n                 }\n \n                 {\n@@ -1305,8 +1309,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                     }\n                 }\n \n-                if (!CVerifyDB().VerifyDB(pcoinsdbview, GetArg(\"-checklevel\", 3),\n-                              GetArg(\"-checkblocks\", 288))) {\n+                if (!CVerifyDB().VerifyDB(pcoinsdbview, GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n+                              GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n                     strLoadError = _(\"Corrupted block database detected\");\n                     break;\n                 }\n@@ -1573,7 +1577,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     scheduler.scheduleEvery(f, nPowTargetSpacing);\n \n     // Generate coins in the background\n-    GenerateBitcoins(GetBoolArg(\"-gen\", false), GetArg(\"-genproclimit\", 1), Params());\n+    GenerateBitcoins(GetBoolArg(\"-gen\", false), GetArg(\"-genproclimit\", DEFAULT_GENERATE_THREADS), Params());\n \n     // ********************************************************* Step 12: finished\n "
      },
      {
        "sha": "c3874be66316d493c18fad64cd62e078bc8bb4ac",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "patch": "@@ -127,6 +127,9 @@ extern uint64_t nPruneTarget;\n /** Block files containing a block-height within MIN_BLOCKS_TO_KEEP of chainActive.Tip() will not be pruned. */\n static const unsigned int MIN_BLOCKS_TO_KEEP = 288;\n \n+static const signed int DEFAULT_CHECKBLOCKS = MIN_BLOCKS_TO_KEEP;\n+static const unsigned int DEFAULT_CHECKLEVEL = 3;\n+\n // Require that user allocate at least 550MB for block & undo files (blk???.dat and rev???.dat)\n // At 1MB per block, 288 blocks = 288MB.\n // Add 15% for Undo data = 331MB"
      },
      {
        "sha": "ad1320481887bbffa050865c40c7e4c3da902189",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "patch": "@@ -17,6 +17,8 @@ class CScript;\n class CWallet;\n namespace Consensus { struct Params; };\n \n+static const int DEFAULT_GENERATE_THREADS = 1;\n+\n struct CBlockTemplate\n {\n     CBlock block;"
      },
      {
        "sha": "146eb3905ace21b8077ad734c00f210d17ad15df",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "patch": "@@ -539,13 +539,15 @@ UniValue gettxout(const UniValue& params, bool fHelp)\n \n UniValue verifychain(const UniValue& params, bool fHelp)\n {\n+    int nCheckLevel = GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL);\n+    int nCheckDepth = GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS);\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n             \"verifychain ( checklevel numblocks )\\n\"\n             \"\\nVerifies blockchain database.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. checklevel   (numeric, optional, 0-4, default=3) How thorough the block verification is.\\n\"\n-            \"2. numblocks    (numeric, optional, default=288, 0=all) The number of blocks to check.\\n\"\n+            \"1. checklevel   (numeric, optional, 0-4, default=\" + strprintf(\"%d\", nCheckLevel) + \") How thorough the block verification is.\\n\"\n+            \"2. numblocks    (numeric, optional, default=\" + strprintf(\"%d\", nCheckDepth) + \", 0=all) The number of blocks to check.\\n\"\n             \"\\nResult:\\n\"\n             \"true|false       (boolean) Verified or not\\n\"\n             \"\\nExamples:\\n\"\n@@ -555,8 +557,6 @@ UniValue verifychain(const UniValue& params, bool fHelp)\n \n     LOCK(cs_main);\n \n-    int nCheckLevel = GetArg(\"-checklevel\", 3);\n-    int nCheckDepth = GetArg(\"-checkblocks\", 288);\n     if (params.size() > 0)\n         nCheckLevel = params[0].get_int();\n     if (params.size() > 1)"
      },
      {
        "sha": "f42b31627c46f7fe85450070ce1029610e422d8b",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "patch": "@@ -211,7 +211,7 @@ UniValue setgenerate(const UniValue& params, bool fHelp)\n     if (params.size() > 0)\n         fGenerate = params[0].get_bool();\n \n-    int nGenProcLimit = -1;\n+    int nGenProcLimit = GetArg(\"-genproclimit\", DEFAULT_GENERATE_THREADS);\n     if (params.size() > 1)\n     {\n         nGenProcLimit = params[1].get_int();\n@@ -259,7 +259,7 @@ UniValue getmininginfo(const UniValue& params, bool fHelp)\n     obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n     obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n     obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n-    obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n+    obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", DEFAULT_GENERATE_THREADS)));\n     obj.push_back(Pair(\"networkhashps\",    getnetworkhashps(params, false)));\n     obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n     obj.push_back(Pair(\"testnet\",          Params().TestnetToBeDeprecatedFieldRPC()));"
      },
      {
        "sha": "cf6122813c059a36973eeb8872ac7f45a24ff768",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "patch": "@@ -293,7 +293,7 @@ void CDB::Flush()\n     if (fReadOnly)\n         nMinutes = 1;\n \n-    bitdb.dbenv->txn_checkpoint(nMinutes ? GetArg(\"-dblogsize\", 100) * 1024 : 0, nMinutes, 0);\n+    bitdb.dbenv->txn_checkpoint(nMinutes ? GetArg(\"-dblogsize\", DEFAULT_WALLET_DBLOGSIZE) * 1024 : 0, nMinutes, 0);\n }\n \n void CDB::Close()"
      },
      {
        "sha": "46bc0ac0a9f25992199931a3802ae3749ea1db9c",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "patch": "@@ -20,6 +20,8 @@\n \n #include <db_cxx.h>\n \n+static const unsigned int DEFAULT_WALLET_DBLOGSIZE = 100;\n+\n extern unsigned int nWalletDBUpdated;\n \n class CDBEnv"
      }
    ]
  },
  {
    "sha": "35bb381435abe0cee661fa169d5d228a464d7632",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWJiMzgxNDM1YWJlMGNlZTY2MWZhMTY5ZDVkMjI4YTQ2NGQ3NjMy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-03T10:36:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T10:57:30Z"
      },
      "message": "build: Improve build instructions\n\n- Add package instructions for Ubuntu 15.10\n- Clarify BerkeleyDB/wallet situation for unix\n- Add basic build instructions for Windows (closes #1401)",
      "tree": {
        "sha": "974f42ad90b8d298b16643ac2ad5947523351231",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/974f42ad90b8d298b16643ac2ad5947523351231"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35bb381435abe0cee661fa169d5d228a464d7632",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35bb381435abe0cee661fa169d5d228a464d7632",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35bb381435abe0cee661fa169d5d228a464d7632",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35bb381435abe0cee661fa169d5d228a464d7632/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42f339ef780bff268369e3a7399c8b8f2ef3e8b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42f339ef780bff268369e3a7399c8b8f2ef3e8b4"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 66,
      "deletions": 18
    },
    "files": [
      {
        "sha": "0594d20dd4276ef58d4b37dc1d3cb9d049243fc9",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35bb381435abe0cee661fa169d5d228a464d7632/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35bb381435abe0cee661fa169d5d228a464d7632/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=35bb381435abe0cee661fa169d5d228a464d7632",
        "patch": "@@ -43,6 +43,8 @@ The following are developer notes on how to build Bitcoin on your native platfor\n \n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n+- [Windows Build Notes](build-windows.md)\n+- [OpenBSD Build Notes](build-openbsd.md)\n - [Gitian Building Guide](gitian-building.md)\n \n Development"
      },
      {
        "sha": "25867e2993a46a9eab95e857743c73cfcca5b73b",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 24,
        "deletions": 18,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35bb381435abe0cee661fa169d5d228a464d7632/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35bb381435abe0cee661fa169d5d228a464d7632/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=35bb381435abe0cee661fa169d5d228a464d7632",
        "patch": "@@ -1,6 +1,6 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin in Unix.\n+Some notes on how to build Bitcoin Core in Unix.\n \n (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n@@ -61,49 +61,55 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n+        sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n \n-For Ubuntu 12.04 and later or Debian 7 and later libboost-all-dev has to be installed:\n+On Ubuntu 15.10+ there are generic names for the individual boost development\n+packages, so the following can be used to only install necessary parts of\n+boost:\n \n-\tsudo apt-get install libboost-all-dev\n+        apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-base-dev\n \n- db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n- You can add the repository using the following command:\n+For Ubuntu before 15.10, or Debian 7 and later libboost-all-dev has to be installed:\n+\n+        sudo apt-get install libboost-all-dev\n+\n+BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n+You can add the repository and install using the following commands:\n \n         sudo add-apt-repository ppa:bitcoin/bitcoin\n         sudo apt-get update\n+        sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n- Ubuntu 12.04 and later have packages for libdb5.1-dev and libdb5.1++-dev,\n- but using these will break binary wallet compatibility, and is not recommended.\n+Ubuntu and Debian have their own libdb-dev and libdb++-dev packages, but these will install\n+BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distributed executables which\n+are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n+pass `--with-incompatible-bdb` to configure.\n \n-For other Debian & Ubuntu (with ppa):\n-\n-\tsudo apt-get install libdb4.8-dev libdb4.8++-dev\n+See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n \n Optional:\n \n-\tsudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n+        sudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n \n ZMQ dependencies:\n \n         sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n \n-\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n-are installed. Either Qt 4 or Qt 5 are necessary to build the GUI.\n+are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n If both Qt 4 and Qt 5 are installed, Qt 4 will be used. Pass `--with-gui=qt5` to configure to choose Qt5.\n To build without GUI pass `--without-gui`.\n \n-To build with Qt 4 you need the following:\n+To build with Qt 5 (recommended) you need the following:\n \n-    sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n+    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n \n-For Qt 5 you need the following:\n+Alternatively, to build with Qt 4 you need the following:\n \n-    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n+    sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n \n libqrencode (optional) can be installed with:\n "
      },
      {
        "sha": "2b9233d1e140631d3bc18a311a7737981710b87d",
        "filename": "doc/build-windows.md",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35bb381435abe0cee661fa169d5d228a464d7632/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35bb381435abe0cee661fa169d5d228a464d7632/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=35bb381435abe0cee661fa169d5d228a464d7632",
        "patch": "@@ -0,0 +1,40 @@\n+WINDOWS BUILD NOTES\n+====================\n+\n+Some notes on how to build Bitcoin Core for Windows.\n+\n+Most developers use cross-compilation from Ubuntu to build executables for\n+Windows. This is also used to build the release binaries.\n+\n+Building on Windows itself is possible (for example using msys / mingw-w64),\n+but no one documented the steps to do this. If you are doing this, please contribute them.\n+\n+Cross-compilation\n+-------------------\n+\n+These steps can be performed on, for example, an Ubuntu VM. The depends system\n+will also work on other Linux distributions, however the commands for\n+installing the toolchain will be different.\n+\n+First install the toolchains:\n+\n+    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev\n+\n+To build executables for Windows 32-bit:\n+\n+    cd depends\n+    make HOST=i686-w64-mingw32 -j4\n+    cd ..\n+    ./configure --prefix=`pwd`/depends/i686-w64-mingw32\n+    make\n+\n+To build executables for Windows 64-bit:\n+\n+    cd depends\n+    make HOST=x86_64-w64-mingw32 -j4\n+    cd ..\n+    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n+    make\n+\n+For further documentation on the depends system see [README.md](../depends/README.md) in the depends directory.\n+"
      }
    ]
  },
  {
    "sha": "29c3c43e19caf70ad707ecf6c98d879254ea67cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWMzYzQzZTE5Y2FmNzBhZDcwN2VjZjZjOThkODc5MjU0ZWE2N2Nj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T11:08:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T11:08:20Z"
      },
      "message": "Merge pull request #6933\n\n35bb381 build: Improve build instructions (Wladimir J. van der Laan)",
      "tree": {
        "sha": "e1c10f6e316b15410008c0b83096c625dc658c9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1c10f6e316b15410008c0b83096c625dc658c9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29c3c43e19caf70ad707ecf6c98d879254ea67cc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOeckAAoJEHSBCwEjRsmmpOcIAIIkB+5QdytR7T7cwI+Dzo3n\npIbfkBFAFF75x2BwXbMk5OEmTYbhq9dssIhv0GftDkBNr7WPAW2P0ppaWce9eJDz\nlT4uCLMO0gRkMteEycjUSRPxmZBfMzwDZe3m5W6bq5L7C0/JaL8DQa80yM4MiCZ2\nj1E0AZcI0QRKB4UwywrJFDMKzhZ+hu66MwPMOtd6GulOdyNyQNoey1mlsJGJQhCc\nwybdTNkCyitiKfu3cLzMRkvq9ys970G6tUV5jqyrT0BOG97TfD3HhB0onBaQBe4L\nDD+8q9UQgeOK3WOfnkY4fOVFy5Kie43I0u9lchstlHaTh4FIyQMWeURdtE3XXEo=\n=awMa\n-----END PGP SIGNATURE-----",
        "payload": "tree e1c10f6e316b15410008c0b83096c625dc658c9e\nparent aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946\nparent 35bb381435abe0cee661fa169d5d228a464d7632\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446635296 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446635300 +0100\n\nMerge pull request #6933\n\n35bb381 build: Improve build instructions (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c3c43e19caf70ad707ecf6c98d879254ea67cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29c3c43e19caf70ad707ecf6c98d879254ea67cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c3c43e19caf70ad707ecf6c98d879254ea67cc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aca0c00ae1fcd4ddaadf7a35765f763a7bc4b946"
      },
      {
        "sha": "35bb381435abe0cee661fa169d5d228a464d7632",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35bb381435abe0cee661fa169d5d228a464d7632",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35bb381435abe0cee661fa169d5d228a464d7632"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 66,
      "deletions": 18
    },
    "files": [
      {
        "sha": "0594d20dd4276ef58d4b37dc1d3cb9d049243fc9",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29c3c43e19caf70ad707ecf6c98d879254ea67cc/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29c3c43e19caf70ad707ecf6c98d879254ea67cc/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=29c3c43e19caf70ad707ecf6c98d879254ea67cc",
        "patch": "@@ -43,6 +43,8 @@ The following are developer notes on how to build Bitcoin on your native platfor\n \n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n+- [Windows Build Notes](build-windows.md)\n+- [OpenBSD Build Notes](build-openbsd.md)\n - [Gitian Building Guide](gitian-building.md)\n \n Development"
      },
      {
        "sha": "25867e2993a46a9eab95e857743c73cfcca5b73b",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 24,
        "deletions": 18,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29c3c43e19caf70ad707ecf6c98d879254ea67cc/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29c3c43e19caf70ad707ecf6c98d879254ea67cc/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=29c3c43e19caf70ad707ecf6c98d879254ea67cc",
        "patch": "@@ -1,6 +1,6 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin in Unix.\n+Some notes on how to build Bitcoin Core in Unix.\n \n (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n@@ -61,49 +61,55 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n+        sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n \n-For Ubuntu 12.04 and later or Debian 7 and later libboost-all-dev has to be installed:\n+On Ubuntu 15.10+ there are generic names for the individual boost development\n+packages, so the following can be used to only install necessary parts of\n+boost:\n \n-\tsudo apt-get install libboost-all-dev\n+        apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-base-dev\n \n- db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n- You can add the repository using the following command:\n+For Ubuntu before 15.10, or Debian 7 and later libboost-all-dev has to be installed:\n+\n+        sudo apt-get install libboost-all-dev\n+\n+BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n+You can add the repository and install using the following commands:\n \n         sudo add-apt-repository ppa:bitcoin/bitcoin\n         sudo apt-get update\n+        sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n- Ubuntu 12.04 and later have packages for libdb5.1-dev and libdb5.1++-dev,\n- but using these will break binary wallet compatibility, and is not recommended.\n+Ubuntu and Debian have their own libdb-dev and libdb++-dev packages, but these will install\n+BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distributed executables which\n+are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n+pass `--with-incompatible-bdb` to configure.\n \n-For other Debian & Ubuntu (with ppa):\n-\n-\tsudo apt-get install libdb4.8-dev libdb4.8++-dev\n+See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n \n Optional:\n \n-\tsudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n+        sudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n \n ZMQ dependencies:\n \n         sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n \n-\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n-are installed. Either Qt 4 or Qt 5 are necessary to build the GUI.\n+are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n If both Qt 4 and Qt 5 are installed, Qt 4 will be used. Pass `--with-gui=qt5` to configure to choose Qt5.\n To build without GUI pass `--without-gui`.\n \n-To build with Qt 4 you need the following:\n+To build with Qt 5 (recommended) you need the following:\n \n-    sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n+    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n \n-For Qt 5 you need the following:\n+Alternatively, to build with Qt 4 you need the following:\n \n-    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n+    sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n \n libqrencode (optional) can be installed with:\n "
      },
      {
        "sha": "2b9233d1e140631d3bc18a311a7737981710b87d",
        "filename": "doc/build-windows.md",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29c3c43e19caf70ad707ecf6c98d879254ea67cc/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29c3c43e19caf70ad707ecf6c98d879254ea67cc/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=29c3c43e19caf70ad707ecf6c98d879254ea67cc",
        "patch": "@@ -0,0 +1,40 @@\n+WINDOWS BUILD NOTES\n+====================\n+\n+Some notes on how to build Bitcoin Core for Windows.\n+\n+Most developers use cross-compilation from Ubuntu to build executables for\n+Windows. This is also used to build the release binaries.\n+\n+Building on Windows itself is possible (for example using msys / mingw-w64),\n+but no one documented the steps to do this. If you are doing this, please contribute them.\n+\n+Cross-compilation\n+-------------------\n+\n+These steps can be performed on, for example, an Ubuntu VM. The depends system\n+will also work on other Linux distributions, however the commands for\n+installing the toolchain will be different.\n+\n+First install the toolchains:\n+\n+    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev\n+\n+To build executables for Windows 32-bit:\n+\n+    cd depends\n+    make HOST=i686-w64-mingw32 -j4\n+    cd ..\n+    ./configure --prefix=`pwd`/depends/i686-w64-mingw32\n+    make\n+\n+To build executables for Windows 64-bit:\n+\n+    cd depends\n+    make HOST=x86_64-w64-mingw32 -j4\n+    cd ..\n+    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n+    make\n+\n+For further documentation on the depends system see [README.md](../depends/README.md) in the depends directory.\n+"
      }
    ]
  },
  {
    "sha": "aa03fb35c4b395bad9f9731afa62f29532ddf15a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYTAzZmIzNWM0YjM5NWJhZDlmOTczMWFmYTYyZjI5NTMyZGRmMTVh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T11:10:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T11:10:46Z"
      },
      "message": "Merge pull request #6927\n\nde0499d Fix ZMQ Notification initialization and shutdown (Jo\u00e3o Barbosa)",
      "tree": {
        "sha": "7a50e9ccda86f4d7bd6da1c9f61628875d54b19b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a50e9ccda86f4d7bd6da1c9f61628875d54b19b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa03fb35c4b395bad9f9731afa62f29532ddf15a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOee2AAoJEHSBCwEjRsmmFEkIAJu1em3w02O716FUto7OF/sE\nuJ5BaPGsbfdx5aZ0H7PyfkGmgpxnZn2ljrdeMvxZ0NymCrndjBHI0AcekDgSp10C\ndZFONj6fLR+pjHByjCjOzLLlM5ctSqsVCfHTDNeuIhkCACuz5s4yrbaW5LPDa1tG\nh/4QTHMWdJSNxQL5weTzNVUNQCt/OGi7IQDI1c84jRNaDeNMsFRFFzbIemrxHcyb\nu77s7HxM6jYYNEs7qXU0Gj1fUYPmWvoLjmG7QN9oKKph8uxaajlmPH2M8/YSvP25\nj8TGXGwTy9mNiPcERgqANn+wd+nQgaMA2Ro1CQLDhtu72rnAtmQDCB/Ujv2Ch0I=\n=wK2y\n-----END PGP SIGNATURE-----",
        "payload": "tree 7a50e9ccda86f4d7bd6da1c9f61628875d54b19b\nparent 29c3c43e19caf70ad707ecf6c98d879254ea67cc\nparent de0499d3b8352334357c8d60931cd5d2be5ab61d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446635429 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446635446 +0100\n\nMerge pull request #6927\n\nde0499d Fix ZMQ Notification initialization and shutdown (Jo\u00e3o Barbosa)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa03fb35c4b395bad9f9731afa62f29532ddf15a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa03fb35c4b395bad9f9731afa62f29532ddf15a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa03fb35c4b395bad9f9731afa62f29532ddf15a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29c3c43e19caf70ad707ecf6c98d879254ea67cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c3c43e19caf70ad707ecf6c98d879254ea67cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29c3c43e19caf70ad707ecf6c98d879254ea67cc"
      },
      {
        "sha": "de0499d3b8352334357c8d60931cd5d2be5ab61d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de0499d3b8352334357c8d60931cd5d2be5ab61d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de0499d3b8352334357c8d60931cd5d2be5ab61d"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1c79ff9f467212f1157bf0c08eaa987176ad1d6a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa03fb35c4b395bad9f9731afa62f29532ddf15a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa03fb35c4b395bad9f9731afa62f29532ddf15a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=aa03fb35c4b395bad9f9731afa62f29532ddf15a",
        "patch": "@@ -222,7 +222,6 @@ void Shutdown()\n #if ENABLE_ZMQ\n     if (pzmqNotificationInterface) {\n         UnregisterValidationInterface(pzmqNotificationInterface);\n-        pzmqNotificationInterface->Shutdown();\n         delete pzmqNotificationInterface;\n         pzmqNotificationInterface = NULL;\n     }\n@@ -1180,7 +1179,6 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     pzmqNotificationInterface = CZMQNotificationInterface::CreateWithArguments(mapArgs);\n \n     if (pzmqNotificationInterface) {\n-        pzmqNotificationInterface->Initialize();\n         RegisterValidationInterface(pzmqNotificationInterface);\n     }\n #endif"
      },
      {
        "sha": "09fe3aeb4c8e93df548b51c6ebcef85a17b0e8fe",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa03fb35c4b395bad9f9731afa62f29532ddf15a/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa03fb35c4b395bad9f9731afa62f29532ddf15a/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=aa03fb35c4b395bad9f9731afa62f29532ddf15a",
        "patch": "@@ -21,8 +21,7 @@ CZMQNotificationInterface::CZMQNotificationInterface() : pcontext(NULL)\n \n CZMQNotificationInterface::~CZMQNotificationInterface()\n {\n-    // ensure Shutdown if Initialize is called\n-    assert(!pcontext);\n+    Shutdown();\n \n     for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n     {\n@@ -59,6 +58,12 @@ CZMQNotificationInterface* CZMQNotificationInterface::CreateWithArguments(const\n     {\n         notificationInterface = new CZMQNotificationInterface();\n         notificationInterface->notifiers = notifiers;\n+\n+        if (!notificationInterface->Initialize())\n+        {\n+            delete notificationInterface;\n+            notificationInterface = NULL;\n+        }\n     }\n \n     return notificationInterface;\n@@ -99,7 +104,7 @@ bool CZMQNotificationInterface::Initialize()\n         return false;\n     }\n \n-    return false;\n+    return true;\n }\n \n // Called during shutdown sequence"
      },
      {
        "sha": "3ccfaf341d20d8e57772fcaeb6f93ab34b4feec1",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa03fb35c4b395bad9f9731afa62f29532ddf15a/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa03fb35c4b395bad9f9731afa62f29532ddf15a/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=aa03fb35c4b395bad9f9731afa62f29532ddf15a",
        "patch": "@@ -19,10 +19,11 @@ class CZMQNotificationInterface : public CValidationInterface\n \n     static CZMQNotificationInterface* CreateWithArguments(const std::map<std::string, std::string> &args);\n \n+protected:\n     bool Initialize();\n     void Shutdown();\n \n-protected: // CValidationInterface\n+    // CValidationInterface\n     void SyncTransaction(const CTransaction &tx, const CBlock *pblock);\n     void UpdatedBlockTip(const CBlockIndex *pindex);\n "
      }
    ]
  },
  {
    "sha": "8a95a18562b2be0b738ec5dd36670c8098c5f255",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTk1YTE4NTYyYjJiZTBiNzM4ZWM1ZGQzNjY3MGM4MDk4YzVmMjU1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T11:30:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T11:30:50Z"
      },
      "message": "Merge pull request #6669\n\n6342a48 Init: Use DEFAULT_TRANSACTION_MINFEE in help message (MarcoFalke)\na9c73a1 [wallet] Add comments for doxygen (MarcoFalke)\n6b0e622 [wallet] Refactor to use new MIN_CHANGE (MarcoFalke)",
      "tree": {
        "sha": "da424912e41c51ef5bcafdf8221b7b334aba2e3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da424912e41c51ef5bcafdf8221b7b334aba2e3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a95a18562b2be0b738ec5dd36670c8098c5f255",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOexqAAoJEHSBCwEjRsmmRKoH/2dmc0BF34R0WWMnBIzGDiO/\n6OFDe1Dy1AKBaFu0zUbkVoGfhXVEw9HS9rQThV5+RVKjrQ4l7jnViHI/z4TlBzKo\nDcDKkZrM3hjmN1Tnv42H1go/rRCIFoEFk3Fo9Bc+mZfZbht3TvdR6Uws2OOhxxaP\nbnbr6i6+h6rJ4nnSQ9aJPUzRqs+06lZ45BGVanNY5F1NGkZtCYGgefmeG7iBeC+e\n/qdQsQPh/KHGP9t3irEa4o3lgvV9T7XDqTOyEoW4X5blQrMQH5V3s2NEIxzrAaNz\n68ZfnXqDSZgIZMiRpCVCbRwuknvdiODakWbHcRxK/RW/RRRVDaW4ASV5rDAG6p8=\n=0cfm\n-----END PGP SIGNATURE-----",
        "payload": "tree da424912e41c51ef5bcafdf8221b7b334aba2e3f\nparent aa03fb35c4b395bad9f9731afa62f29532ddf15a\nparent 6342a4889bc4add42c270e1e0aee246a7f0692dc\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446636623 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446636650 +0100\n\nMerge pull request #6669\n\n6342a48 Init: Use DEFAULT_TRANSACTION_MINFEE in help message (MarcoFalke)\na9c73a1 [wallet] Add comments for doxygen (MarcoFalke)\n6b0e622 [wallet] Refactor to use new MIN_CHANGE (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a95a18562b2be0b738ec5dd36670c8098c5f255",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a95a18562b2be0b738ec5dd36670c8098c5f255",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a95a18562b2be0b738ec5dd36670c8098c5f255/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aa03fb35c4b395bad9f9731afa62f29532ddf15a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa03fb35c4b395bad9f9731afa62f29532ddf15a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aa03fb35c4b395bad9f9731afa62f29532ddf15a"
      },
      {
        "sha": "6342a4889bc4add42c270e1e0aee246a7f0692dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6342a4889bc4add42c270e1e0aee246a7f0692dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6342a4889bc4add42c270e1e0aee246a7f0692dc"
      }
    ],
    "stats": {
      "total": 162,
      "additions": 105,
      "deletions": 57
    },
    "files": [
      {
        "sha": "4dd80907531e59ddeb20a1c4dd4a4345e1974022",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "patch": "@@ -376,7 +376,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), 100));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\",\n-            CURRENCY_UNIT, FormatMoney(CWallet::minTxFee.GetFeePerK())));\n+            CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(payTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));"
      },
      {
        "sha": "74bc8dbec9b7df1e6300bc572e3364425ddf0747",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "patch": "@@ -567,7 +567,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 nChange -= nPayFee;\n \n             // Never create dust outputs; if we would, just add the dust to the fee.\n-            if (nChange > 0 && nChange < CENT)\n+            if (nChange > 0 && nChange < MIN_CHANGE)\n             {\n                 CTxOut txout(nChange, (CScript)std::vector<unsigned char>(24, 0));\n                 if (txout.IsDust(::minRelayTxFee))"
      },
      {
        "sha": "8b9292bd14d7f91a37298283182924263c1c2241",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 67,
        "deletions": 46,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "patch": "@@ -117,7 +117,7 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n \n         // try making 34 cents from 1,2,5,10,20 - we can't do it exactly\n         BOOST_CHECK( wallet.SelectCoinsMinConf(34 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_GT(nValueRet, 34 * CENT);         // but should get more than 34 cents\n+        BOOST_CHECK_EQUAL(nValueRet, 35 * CENT);       // but 35 cents is closest\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 3U);     // the best should be 20+10+5.  it's incredibly unlikely the 1 or 2 got included (but possible)\n \n         // when we try making 7 cents, the smaller coins (1,2,5) are enough.  We should see just 2+5\n@@ -185,33 +185,34 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n         BOOST_CHECK_EQUAL(nValueRet, 2 * COIN);  // we should get 2 BTC in 1 coin\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 1U);\n \n-        // empty the wallet and start again, now with fractions of a cent, to test sub-cent change avoidance\n+        // empty the wallet and start again, now with fractions of a cent, to test small change avoidance\n+\n         empty_wallet();\n-        add_coin(0.1*CENT);\n-        add_coin(0.2*CENT);\n-        add_coin(0.3*CENT);\n-        add_coin(0.4*CENT);\n-        add_coin(0.5*CENT);\n-\n-        // try making 1 cent from 0.1 + 0.2 + 0.3 + 0.4 + 0.5 = 1.5 cents\n-        // we'll get sub-cent change whatever happens, so can expect 1.0 exactly\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);\n+        add_coin(0.1*MIN_CHANGE);\n+        add_coin(0.2*MIN_CHANGE);\n+        add_coin(0.3*MIN_CHANGE);\n+        add_coin(0.4*MIN_CHANGE);\n+        add_coin(0.5*MIN_CHANGE);\n+\n+        // try making 1 * MIN_CHANGE from the 1.5 * MIN_CHANGE\n+        // we'll get change smaller than MIN_CHANGE whatever happens, so can expect MIN_CHANGE exactly\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, MIN_CHANGE);\n \n-        // but if we add a bigger coin, making it possible to avoid sub-cent change, things change:\n-        add_coin(1111*CENT);\n+        // but if we add a bigger coin, small change is avoided\n+        add_coin(1111*MIN_CHANGE);\n \n-        // try making 1 cent from 0.1 + 0.2 + 0.3 + 0.4 + 0.5 + 1111 = 1112.5 cents\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT); // we should get the exact amount\n+        // try making 1 from 0.1 + 0.2 + 0.3 + 0.4 + 0.5 + 1111 = 1112.5\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * MIN_CHANGE); // we should get the exact amount\n \n-        // if we add more sub-cent coins:\n-        add_coin(0.6*CENT);\n-        add_coin(0.7*CENT);\n+        // if we add more small coins:\n+        add_coin(0.6*MIN_CHANGE);\n+        add_coin(0.7*MIN_CHANGE);\n \n-        // and try again to make 1.0 cents, we can still make 1.0 cents\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT); // we should get the exact amount\n+        // and try again to make 1.0 * MIN_CHANGE\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * MIN_CHANGE); // we should get the exact amount\n \n         // run the 'mtgox' test (see http://blockexplorer.com/tx/29a3efd3ef04f9153d47a990bd7b048a4b2d213daaa5fb8ed670fb85f13bdbcf)\n         // they tried to consolidate 10 50k coins into one 500k coin, and ended up with 50k in change\n@@ -223,45 +224,65 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n         BOOST_CHECK_EQUAL(nValueRet, 500000 * COIN); // we should get the exact amount\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 10U); // in ten coins\n \n-        // if there's not enough in the smaller coins to make at least 1 cent change (0.5+0.6+0.7 < 1.0+1.0),\n+        // if there's not enough in the smaller coins to make at least 1 * MIN_CHANGE change (0.5+0.6+0.7 < 1.0+1.0),\n         // we need to try finding an exact subset anyway\n \n         // sometimes it will fail, and so we use the next biggest coin:\n         empty_wallet();\n-        add_coin(0.5 * CENT);\n-        add_coin(0.6 * CENT);\n-        add_coin(0.7 * CENT);\n-        add_coin(1111 * CENT);\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1111 * CENT); // we get the bigger coin\n+        add_coin(0.5 * MIN_CHANGE);\n+        add_coin(0.6 * MIN_CHANGE);\n+        add_coin(0.7 * MIN_CHANGE);\n+        add_coin(1111 * MIN_CHANGE);\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1111 * MIN_CHANGE); // we get the bigger coin\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 1U);\n \n         // but sometimes it's possible, and we use an exact subset (0.4 + 0.6 = 1.0)\n         empty_wallet();\n-        add_coin(0.4 * CENT);\n-        add_coin(0.6 * CENT);\n-        add_coin(0.8 * CENT);\n-        add_coin(1111 * CENT);\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);   // we should get the exact amount\n+        add_coin(0.4 * MIN_CHANGE);\n+        add_coin(0.6 * MIN_CHANGE);\n+        add_coin(0.8 * MIN_CHANGE);\n+        add_coin(1111 * MIN_CHANGE);\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, MIN_CHANGE);   // we should get the exact amount\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 2U); // in two coins 0.4+0.6\n \n-        // test avoiding sub-cent change\n+        // test avoiding small change\n         empty_wallet();\n-        add_coin(0.0005 * COIN);\n-        add_coin(0.01 * COIN);\n-        add_coin(1 * COIN);\n+        add_coin(0.05 * MIN_CHANGE);\n+        add_coin(1    * MIN_CHANGE);\n+        add_coin(100  * MIN_CHANGE);\n \n-        // trying to make 1.0001 from these three coins\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(1.0001 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1.0105 * COIN);   // we should get all coins\n+        // trying to make 100.01 from these three coins\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(100.01 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 101.05 * MIN_CHANGE);   // we should get all coins\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 3U);\n \n-        // but if we try to make 0.999, we should take the bigger of the two small coins to avoid sub-cent change\n-        BOOST_CHECK( wallet.SelectCoinsMinConf(0.999 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n-        BOOST_CHECK_EQUAL(nValueRet, 1.01 * COIN);   // we should get 1 + 0.01\n+        // but if we try to make 99.9, we should take the bigger of the two small coins to avoid small change\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(99.9 * MIN_CHANGE, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 101 * MIN_CHANGE);\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 2U);\n \n+        // test with many inputs\n+        for (CAmount amt=1500; amt < COIN; amt*=10) {\n+             empty_wallet();\n+             // Create 676 inputs (= MAX_STANDARD_TX_SIZE / 148 bytes per input)\n+             for (uint16_t j = 0; j < 676; j++)\n+                 add_coin(amt);\n+             BOOST_CHECK(wallet.SelectCoinsMinConf(2000, 1, 1, vCoins, setCoinsRet, nValueRet));\n+             if (amt - 2000 < MIN_CHANGE) {\n+                 // needs more than one input:\n+                 uint16_t returnSize = std::ceil((2000.0 + MIN_CHANGE)/amt);\n+                 CAmount returnValue = amt * returnSize;\n+                 BOOST_CHECK_EQUAL(nValueRet, returnValue);\n+                 BOOST_CHECK_EQUAL(setCoinsRet.size(), returnSize);\n+             } else {\n+                 // one input is sufficient:\n+                 BOOST_CHECK_EQUAL(nValueRet, amt);\n+                 BOOST_CHECK_EQUAL(setCoinsRet.size(), 1U);\n+             }\n+        }\n+\n         // test randomness\n         {\n             empty_wallet();"
      },
      {
        "sha": "93c7c7f2474ad36ad81d3b40bf06c110eddd3a09",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "patch": "@@ -47,7 +47,7 @@ bool fPayAtLeastCustomFee = true;\n  * Fees smaller than this (in satoshi) are considered zero fee (for transaction creation)\n  * Override with -mintxfee\n  */\n-CFeeRate CWallet::minTxFee = CFeeRate(1000);\n+CFeeRate CWallet::minTxFee = CFeeRate(DEFAULT_TRANSACTION_MINFEE);\n \n /** @defgroup mapWallet\n  *\n@@ -1497,9 +1497,6 @@ CAmount CWallet::GetImmatureWatchOnlyBalance() const\n     return nTotal;\n }\n \n-/**\n- * populate vCoins with vector of available COutputs.\n- */\n void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const CCoinControl *coinControl, bool fIncludeZeroValue) const\n {\n     vCoins.clear();\n@@ -1619,7 +1616,7 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int\n             nValueRet += coin.first;\n             return true;\n         }\n-        else if (n < nTargetValue + CENT)\n+        else if (n < nTargetValue + MIN_CHANGE)\n         {\n             vValue.push_back(coin);\n             nTotalLower += n;\n@@ -1654,14 +1651,14 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int\n     vector<char> vfBest;\n     CAmount nBest;\n \n-    ApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest, 1000);\n-    if (nBest != nTargetValue && nTotalLower >= nTargetValue + CENT)\n-        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + CENT, vfBest, nBest, 1000);\n+    ApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest);\n+    if (nBest != nTargetValue && nTotalLower >= nTargetValue + MIN_CHANGE)\n+        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + MIN_CHANGE, vfBest, nBest);\n \n     // If we have a bigger coin and (either the stochastic approximation didn't find a good solution,\n     //                                   or the next bigger coin is closer), return the bigger coin\n     if (coinLowestLarger.second.first &&\n-        ((nBest != nTargetValue && nBest < nTargetValue + CENT) || coinLowestLarger.first <= nBest))\n+        ((nBest != nTargetValue && nBest < nTargetValue + MIN_CHANGE) || coinLowestLarger.first <= nBest))\n     {\n         setCoinsRet.insert(coinLowestLarger.second);\n         nValueRet += coinLowestLarger.first;\n@@ -1844,6 +1841,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n         LOCK2(cs_main, cs_wallet);\n         {\n             nFeeRet = 0;\n+            // Start with no fee and loop until there is enough fee\n             while (true)\n             {\n                 txNew.vin.clear();"
      },
      {
        "sha": "7e8dcc2914e5553090d6a3456092a1fe12bb6707",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a95a18562b2be0b738ec5dd36670c8098c5f255/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "patch": "@@ -41,8 +41,12 @@ extern bool fPayAtLeastCustomFee;\n static const CAmount DEFAULT_TRANSACTION_FEE = 0;\n //! -paytxfee will warn if called with a higher fee than this amount (in satoshis) per KB\n static const CAmount nHighTransactionFeeWarning = 0.01 * COIN;\n+//! -mintxfee default\n+static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n //! -maxtxfee default\n static const CAmount DEFAULT_TRANSACTION_MAXFEE = 0.1 * COIN;\n+//! minimum change amount\n+static const CAmount MIN_CHANGE = CENT;\n //! -txconfirmtarget default\n static const unsigned int DEFAULT_TX_CONFIRM_TARGET = 2;\n //! -maxtxfee will warn if called with a higher fee than this amount (in satoshis)\n@@ -442,6 +446,11 @@ class CWalletKey\n class CWallet : public CCryptoKeyStore, public CValidationInterface\n {\n private:\n+    /**\n+     * Select a set of coins such that nValueRet >= nTargetValue and at least\n+     * all coins from coinControl are selected; Never select unconfirmed coins\n+     * if they are not ours\n+     */\n     bool SelectCoins(const CAmount& nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl *coinControl = NULL) const;\n \n     CWalletDB *pwalletdbEncryption;\n@@ -539,7 +548,17 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     //! check whether we are allowed to upgrade (or already support) to the named feature\n     bool CanSupportFeature(enum WalletFeature wf) { AssertLockHeld(cs_wallet); return nWalletMaxVersion >= wf; }\n \n+    /**\n+     * populate vCoins with vector of available COutputs.\n+     */\n     void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl = NULL, bool fIncludeZeroValue=false) const;\n+\n+    /**\n+     * Shuffle and select coins until nTargetValue is reached while avoiding\n+     * small change; This method is stochastic for some inputs and upon\n+     * completion the coin set and corresponding actual target value is\n+     * assembled\n+     */\n     bool SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet) const;\n \n     bool IsSpent(const uint256& hash, unsigned int n) const;\n@@ -622,7 +641,17 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetWatchOnlyBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;\n     CAmount GetImmatureWatchOnlyBalance() const;\n+\n+    /**\n+     * Insert additional inputs into the transaction by\n+     * calling CreateTransaction();\n+     */\n     bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosRet, std::string& strFailReason, bool includeWatching);\n+\n+    /**\n+     * Create a new transaction paying the recipients with a set of coins\n+     * selected by SelectCoins(); Also create the change output, when needed\n+     */\n     bool CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosRet,\n                            std::string& strFailReason, const CCoinControl *coinControl = NULL, bool sign = true);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);"
      }
    ]
  },
  {
    "sha": "0af8fe45aeac9dc2391f6f737b8b3c210142b19c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYWY4ZmU0NWFlYWM5ZGMyMzkxZjZmNzM3YjhiM2MyMTAxNDJiMTlj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-24T21:44:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-04T12:05:25Z"
      },
      "message": "devtools: Update README.md",
      "tree": {
        "sha": "0e0acc5ec9013561eade8c2f866ae4a7a7b03ea0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e0acc5ec9013561eade8c2f866ae4a7a7b03ea0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0af8fe45aeac9dc2391f6f737b8b3c210142b19c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0af8fe45aeac9dc2391f6f737b8b3c210142b19c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0af8fe45aeac9dc2391f6f737b8b3c210142b19c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0af8fe45aeac9dc2391f6f737b8b3c210142b19c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a95a18562b2be0b738ec5dd36670c8098c5f255"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2e70c5adcc8e8129018fc364a8c428d61ef4f31f",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0af8fe45aeac9dc2391f6f737b8b3c210142b19c/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0af8fe45aeac9dc2391f6f737b8b3c210142b19c/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=0af8fe45aeac9dc2391f6f737b8b3c210142b19c",
        "patch": "@@ -62,6 +62,11 @@ optimize-pngs.py\n A script to optimize png files in the bitcoin\n repository (requires pngcrush).\n \n+security-check.py and test-security-check.py\n+============================================\n+\n+Perform basic ELF security checks on a series of executables.\n+\n symbol-check.py\n ===============\n "
      }
    ]
  },
  {
    "sha": "c702521a85640d1972c982879efcb2cb0f897692",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzAyNTIxYTg1NjQwZDE5NzJjOTgyODc5ZWZjYjJjYjBmODk3Njky",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T12:03:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T12:06:14Z"
      },
      "message": "Merge pull request #6864\n\n268b79e [qt] rpcconsole: Scale monospace font to 95% (MarcoFalke)\n28313b8 [qt] Use fixed pitch font for the rpc console (MarcoFalke)",
      "tree": {
        "sha": "4af243a646e02c6b41263f2ce469610e227513bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4af243a646e02c6b41263f2ce469610e227513bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c702521a85640d1972c982879efcb2cb0f897692",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOfS2AAoJEHSBCwEjRsmm/jMIAI50ER9gXlgvLgNTJpsqHG4D\nAPutPSFehvfz/oH6q56qUP+/pEfoXLGf9T2dttTyO/KQt0Q456AsVyOoV98LnKUU\nyngJtdNXwTgILXMVULnVmNe5WNv1P3BnnoZ6RpuW19EPGb6165HDn3BttypgMNfV\nZYqt96x72djsqg3CP33tSv30WEAAGVKuylRYEkkor8i5T/INF4JZv/lX7O9NCSYv\n196zFFppfeUO/ztRxmC9NyN5+C/rFBBN479z5ssMZOoKkw/tFEfi354S7zOd2eKG\nfOuz+Xzsayr8QqZo9iBRRVrXw+uEqdEo9lXUMonIBzk9xcWsPcd8YuXUQIs2iqU=\n=0iRP\n-----END PGP SIGNATURE-----",
        "payload": "tree 4af243a646e02c6b41263f2ce469610e227513bd\nparent 8a95a18562b2be0b738ec5dd36670c8098c5f255\nparent 268b79ef0c54a3bff0b50e093b98b943e49a4939\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446638630 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446638774 +0100\n\nMerge pull request #6864\n\n268b79e [qt] rpcconsole: Scale monospace font to 95% (MarcoFalke)\n28313b8 [qt] Use fixed pitch font for the rpc console (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c702521a85640d1972c982879efcb2cb0f897692",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c702521a85640d1972c982879efcb2cb0f897692",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c702521a85640d1972c982879efcb2cb0f897692/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a95a18562b2be0b738ec5dd36670c8098c5f255"
      },
      {
        "sha": "268b79ef0c54a3bff0b50e093b98b943e49a4939",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/268b79ef0c54a3bff0b50e093b98b943e49a4939",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/268b79ef0c54a3bff0b50e093b98b943e49a4939"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 18,
      "deletions": 11
    },
    "files": [
      {
        "sha": "a488d298c46a7e53604bad84b07ba71f4824e291",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c702521a85640d1972c982879efcb2cb0f897692/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c702521a85640d1972c982879efcb2cb0f897692/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=c702521a85640d1972c982879efcb2cb0f897692",
        "patch": "@@ -218,7 +218,7 @@ QVariant AddressTableModel::data(const QModelIndex &index, int role) const\n         QFont font;\n         if(index.column() == Address)\n         {\n-            font = GUIUtil::bitcoinAddressFont();\n+            font = GUIUtil::fixedPitchFont();\n         }\n         return font;\n     }"
      },
      {
        "sha": "1c0056a7bd074bfa7bcba2337eec652800339114",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c702521a85640d1972c982879efcb2cb0f897692/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c702521a85640d1972c982879efcb2cb0f897692/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=c702521a85640d1972c982879efcb2cb0f897692",
        "patch": "@@ -88,7 +88,7 @@ QString dateTimeStr(qint64 nTime)\n     return dateTimeStr(QDateTime::fromTime_t((qint32)nTime));\n }\n \n-QFont bitcoinAddressFont()\n+QFont fixedPitchFont()\n {\n     QFont font(\"Monospace\");\n #if QT_VERSION >= 0x040800\n@@ -103,7 +103,7 @@ void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n {\n     parent->setFocusProxy(widget);\n \n-    widget->setFont(bitcoinAddressFont());\n+    widget->setFont(fixedPitchFont());\n #if QT_VERSION >= 0x040700\n     // We don't want translators to use own addresses in translations\n     // and this is the only place, where this address is supplied."
      },
      {
        "sha": "ec678c4af2277a3bd32982cca92a14bad30ab903",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c702521a85640d1972c982879efcb2cb0f897692/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c702521a85640d1972c982879efcb2cb0f897692/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=c702521a85640d1972c982879efcb2cb0f897692",
        "patch": "@@ -37,8 +37,8 @@ namespace GUIUtil\n     QString dateTimeStr(const QDateTime &datetime);\n     QString dateTimeStr(qint64 nTime);\n \n-    // Render Bitcoin addresses in monospace font\n-    QFont bitcoinAddressFont();\n+    // Return a monospace font\n+    QFont fixedPitchFont();\n \n     // Set up widgets for address and amounts\n     void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent);"
      },
      {
        "sha": "840170182144ac198f35eab723c04b9412d363af",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c702521a85640d1972c982879efcb2cb0f897692/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c702521a85640d1972c982879efcb2cb0f897692/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=c702521a85640d1972c982879efcb2cb0f897692",
        "patch": "@@ -462,13 +462,19 @@ void RPCConsole::clear()\n     }\n \n     // Set default style sheet\n+    QFontInfo fixedFontInfo(GUIUtil::fixedPitchFont());\n+    // Try to make fixed font adequately large on different OS\n+    QString ptSize = QString(\"%1pt\").arg(QFontInfo(QFont()).pointSize() * 8.5 / 9);\n     ui->messagesWidget->document()->setDefaultStyleSheet(\n+        QString(\n                 \"table { }\"\n                 \"td.time { color: #808080; padding-top: 3px; } \"\n+                \"td.message { font-family: %1; font-size: %2; white-space:pre-wrap; } \"\n                 \"td.cmd-request { color: #006060; } \"\n                 \"td.cmd-error { color: red; } \"\n                 \"b { color: #006060; } \"\n-                );\n+            ).arg(fixedFontInfo.family(), ptSize)\n+        );\n \n     message(CMD_REPLY, (tr(\"Welcome to the Bitcoin Core RPC console.\") + \"<br>\" +\n                         tr(\"Use up and down arrows to navigate history, and <b>Ctrl-L</b> to clear screen.\") + \"<br>\" +\n@@ -494,7 +500,7 @@ void RPCConsole::message(int category, const QString &message, bool html)\n     if(html)\n         out += message;\n     else\n-        out += GUIUtil::HtmlEscape(message, true);\n+        out += GUIUtil::HtmlEscape(message, false);\n     out += \"</td></tr></table>\";\n     ui->messagesWidget->append(out);\n }\n@@ -849,4 +855,4 @@ void RPCConsole::showOrHideBanTableIfRequired()\n     bool visible = clientModel->getBanTableModel()->shouldShow();\n     ui->banlistWidget->setVisible(visible);\n     ui->banHeading->setVisible(visible);\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "d5932ff149ca00338e0bd81d3f714dbb2c38aaa2",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c702521a85640d1972c982879efcb2cb0f897692/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c702521a85640d1972c982879efcb2cb0f897692/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=c702521a85640d1972c982879efcb2cb0f897692",
        "patch": "@@ -71,6 +71,7 @@ private Q_SLOTS:\n \n public Q_SLOTS:\n     void clear();\n+    /** Append the message to the message widget */\n     void message(int category, const QString &message, bool html = false);\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);"
      },
      {
        "sha": "4f4b5b70d50e6eea5340af81f613f1df7e605e71",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c702521a85640d1972c982879efcb2cb0f897692/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c702521a85640d1972c982879efcb2cb0f897692/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=c702521a85640d1972c982879efcb2cb0f897692",
        "patch": "@@ -40,7 +40,7 @@ SendCoinsEntry::SendCoinsEntry(const PlatformStyle *platformStyle, QWidget *pare\n     // normal bitcoin address field\n     GUIUtil::setupAddressWidget(ui->payTo, this);\n     // just a label for displaying bitcoin address(es)\n-    ui->payTo_is->setFont(GUIUtil::bitcoinAddressFont());\n+    ui->payTo_is->setFont(GUIUtil::fixedPitchFont());\n \n     // Connect signals\n     connect(ui->payAmount, SIGNAL(valueChanged()), this, SIGNAL(payAmountChanged()));"
      },
      {
        "sha": "96f50a26563ff53db27eb315bfa13e8c21bfcc6d",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c702521a85640d1972c982879efcb2cb0f897692/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c702521a85640d1972c982879efcb2cb0f897692/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=c702521a85640d1972c982879efcb2cb0f897692",
        "patch": "@@ -51,8 +51,8 @@ SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *platformSt\n     ui->messageIn_VM->installEventFilter(this);\n     ui->signatureIn_VM->installEventFilter(this);\n \n-    ui->signatureOut_SM->setFont(GUIUtil::bitcoinAddressFont());\n-    ui->signatureIn_VM->setFont(GUIUtil::bitcoinAddressFont());\n+    ui->signatureOut_SM->setFont(GUIUtil::fixedPitchFont());\n+    ui->signatureIn_VM->setFont(GUIUtil::fixedPitchFont());\n }\n \n SignVerifyMessageDialog::~SignVerifyMessageDialog()"
      }
    ]
  },
  {
    "sha": "c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTNkNDhhNmIzZDRlMzNhY2U5Yjk1NzZlMmY0YmE3ZjQwYTNhMTk3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T03:41:00Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-11-04T13:02:10Z"
      },
      "message": "BIP70: Chainparams: DRY: Make qt/guiutil.cpp fit BIP70 chain name strings\n\nAs a side effect, the qt user will see \"test\" instead of \"testnet\"",
      "tree": {
        "sha": "95a4151b1ae40327a17f937da6844428e4c76c0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95a4151b1ae40327a17f937da6844428e4c76c0e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c6de5cc88614f587ae2d0e360536412407e02836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6de5cc88614f587ae2d0e360536412407e02836",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6de5cc88614f587ae2d0e360536412407e02836"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 9,
      "deletions": 10
    },
    "files": [
      {
        "sha": "24cad37944d0ee42d571ba347f12c821aceb8aaa",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
        "patch": "@@ -581,12 +581,12 @@ TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(QTableView* t\n #ifdef WIN32\n boost::filesystem::path static StartupShortcutPath()\n {\n-    if (GetBoolArg(\"-testnet\", false))\n+    std::string chain = ChainNameFromCommandLine();\n+    if (chain == CBaseChainParams::MAIN)\n+        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+    if (chain == CBaseChainParams::TESTNET) // Remove this special case when CBaseChainParams::TESTNET = \"testnet4\"\n         return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (testnet).lnk\";\n-    else if (GetBoolArg(\"-regtest\", false))\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (regtest).lnk\";\n-\n-    return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf(\"Bitcoin (%s).lnk\", chain);\n }\n \n bool GetStartOnSystemStartup()\n@@ -719,15 +719,14 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         boost::filesystem::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n+        std::string chain = ChainNameFromCommandLine();\n         // Write a bitcoin.desktop file to the autostart directory:\n         optionFile << \"[Desktop Entry]\\n\";\n         optionFile << \"Type=Application\\n\";\n-        if (GetBoolArg(\"-testnet\", false))\n-            optionFile << \"Name=Bitcoin (testnet)\\n\";\n-        else if (GetBoolArg(\"-regtest\", false))\n-            optionFile << \"Name=Bitcoin (regtest)\\n\";\n-        else\n+        if (chain == CBaseChainParams::MAIN)\n             optionFile << \"Name=Bitcoin\\n\";\n+        else\n+            optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n         optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false));\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";"
      }
    ]
  },
  {
    "sha": "dbacc69b4f2e16841556a69f26ef9f6b81100100",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmFjYzY5YjRmMmUxNjg0MTU1NmE2OWYyNmVmOWY2YjgxMTAwMTAw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T11:00:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T15:19:28Z"
      },
      "message": "build: If both Qt4 and Qt5 are installed, use Qt5\n\nIf both Qt4 and Qt5 development headers are installed, use Qt5. Building\nagainst Qt5 should be encouraged as that is where active development\nhappens.",
      "tree": {
        "sha": "93741fe96e25f7e338a351abdaaac228306ff03b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93741fe96e25f7e338a351abdaaac228306ff03b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbacc69b4f2e16841556a69f26ef9f6b81100100",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbacc69b4f2e16841556a69f26ef9f6b81100100",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbacc69b4f2e16841556a69f26ef9f6b81100100",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbacc69b4f2e16841556a69f26ef9f6b81100100/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29c3c43e19caf70ad707ecf6c98d879254ea67cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c3c43e19caf70ad707ecf6c98d879254ea67cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29c3c43e19caf70ad707ecf6c98d879254ea67cc"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4ea2e734e8aceb267ff39b094dbbc8c23fefebe3",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbacc69b4f2e16841556a69f26ef9f6b81100100/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbacc69b4f2e16841556a69f26ef9f6b81100100/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=dbacc69b4f2e16841556a69f26ef9f6b81100100",
        "patch": "@@ -50,7 +50,7 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n     [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt4 tried first)])],\n+    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n     [\n      bitcoin_qt_want_version=$withval\n      if test x$bitcoin_qt_want_version = xyes; then"
      },
      {
        "sha": "d94dd0c3dcc9f934eb3abf5cba1242c640709356",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbacc69b4f2e16841556a69f26ef9f6b81100100/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbacc69b4f2e16841556a69f26ef9f6b81100100/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=dbacc69b4f2e16841556a69f26ef9f6b81100100",
        "patch": "@@ -538,7 +538,7 @@ fi\n BITCOIN_QT_INIT\n \n dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt4])\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n \n if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n     use_boost=no"
      },
      {
        "sha": "2102bbc8309b6f7733e3fab1b638babf9158f6f1",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbacc69b4f2e16841556a69f26ef9f6b81100100/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbacc69b4f2e16841556a69f26ef9f6b81100100/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=dbacc69b4f2e16841556a69f26ef9f6b81100100",
        "patch": "@@ -100,7 +100,7 @@ Dependencies for the GUI: Ubuntu & Debian\n \n If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n-If both Qt 4 and Qt 5 are installed, Qt 4 will be used. Pass `--with-gui=qt5` to configure to choose Qt5.\n+If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n \n To build with Qt 5 (recommended) you need the following:"
      }
    ]
  },
  {
    "sha": "193f7b553e0ad41e6579adbce867ef14866034b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTNmN2I1NTNlMGFkNDFlNjU3OWFkYmNlODY3ZWYxNDg2NjAzNGIw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T15:42:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-04T15:43:12Z"
      },
      "message": "Merge pull request #6938\n\ndbacc69 build: If both Qt4 and Qt5 are installed, use Qt5 (Wladimir J. van der Laan)",
      "tree": {
        "sha": "fb990b1282002709cb369cbcee6466eec45b1f65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb990b1282002709cb369cbcee6466eec45b1f65"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/193f7b553e0ad41e6579adbce867ef14866034b0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOieQAAoJEHSBCwEjRsmmR0kIAIFeJr92TIq2aFGCncbBWXjx\nwj0gdB7WUz4/VrXCWmDJptuFwfXRzx/juPuxOQx9970RsH4jv7wJNHz72R9BSzyI\ng5fWLWKws/Xu27qM79WPEu//fCV3iSXgrBXFbQolBi+lspXg83daQRLAr+OWb5Gq\n2xmlycYX0SRVvO1QytLAbXVWwS54NZ6rNZ4Qti8mu/MevSWjIBIOsNmDQnZ8lUlf\n+OZ5s+E8QXmN2MGWSEFaYZkHfAV3ilF6A40Q8fUKYI14E0sTxsZKzIefzkxpLJRr\nVGuMS1LMtz434T4o1EcM4GymOXBzXulVvx8PQauaSoYSb3xf8rbULyu0lIUVOug=\n=FMWf\n-----END PGP SIGNATURE-----",
        "payload": "tree fb990b1282002709cb369cbcee6466eec45b1f65\nparent c702521a85640d1972c982879efcb2cb0f897692\nparent dbacc69b4f2e16841556a69f26ef9f6b81100100\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446651771 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446651792 +0100\n\nMerge pull request #6938\n\ndbacc69 build: If both Qt4 and Qt5 are installed, use Qt5 (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/193f7b553e0ad41e6579adbce867ef14866034b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/193f7b553e0ad41e6579adbce867ef14866034b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/193f7b553e0ad41e6579adbce867ef14866034b0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c702521a85640d1972c982879efcb2cb0f897692",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c702521a85640d1972c982879efcb2cb0f897692",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c702521a85640d1972c982879efcb2cb0f897692"
      },
      {
        "sha": "dbacc69b4f2e16841556a69f26ef9f6b81100100",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbacc69b4f2e16841556a69f26ef9f6b81100100",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dbacc69b4f2e16841556a69f26ef9f6b81100100"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4ea2e734e8aceb267ff39b094dbbc8c23fefebe3",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/193f7b553e0ad41e6579adbce867ef14866034b0/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/193f7b553e0ad41e6579adbce867ef14866034b0/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=193f7b553e0ad41e6579adbce867ef14866034b0",
        "patch": "@@ -50,7 +50,7 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n     [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt4 tried first)])],\n+    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n     [\n      bitcoin_qt_want_version=$withval\n      if test x$bitcoin_qt_want_version = xyes; then"
      },
      {
        "sha": "d94dd0c3dcc9f934eb3abf5cba1242c640709356",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/193f7b553e0ad41e6579adbce867ef14866034b0/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/193f7b553e0ad41e6579adbce867ef14866034b0/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=193f7b553e0ad41e6579adbce867ef14866034b0",
        "patch": "@@ -538,7 +538,7 @@ fi\n BITCOIN_QT_INIT\n \n dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt4])\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n \n if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n     use_boost=no"
      },
      {
        "sha": "2102bbc8309b6f7733e3fab1b638babf9158f6f1",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/193f7b553e0ad41e6579adbce867ef14866034b0/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/193f7b553e0ad41e6579adbce867ef14866034b0/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=193f7b553e0ad41e6579adbce867ef14866034b0",
        "patch": "@@ -100,7 +100,7 @@ Dependencies for the GUI: Ubuntu & Debian\n \n If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n-If both Qt 4 and Qt 5 are installed, Qt 4 will be used. Pass `--with-gui=qt5` to configure to choose Qt5.\n+If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n \n To build with Qt 5 (recommended) you need the following:"
      }
    ]
  },
  {
    "sha": "7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Y2E3M2RjZjZiN2U0YzZiMGZiZTUyNzE4YjU1ZDZhMGY2MTk3ZDYx",
    "commit": {
      "author": {
        "name": "Jonathan Cross",
        "email": "jonathancross@users.noreply.github.com",
        "date": "2015-11-04T19:14:16Z"
      },
      "committer": {
        "name": "Jonathan Cross",
        "email": "jonathancross@users.noreply.github.com",
        "date": "2015-11-04T19:14:16Z"
      },
      "message": "Improving labels for Sent / Received \"Bytes\"\n\nThe labels for Sent & Received data in the \"Peers\" debug panel should not be defined as \"Bytes\" because the units (B, KB, MB) appear after the number.  I decided to simply use \"Sent\" and \"Received\" (rather than \"Data Sent\" and \"Data Received\") because we already have translations for the former:\r\nhttps://www.transifex.com/bitcoin/bitcoin/viewstrings/#ja/qt-translation-011x/47533089?q=sent\r\nhttps://www.transifex.com/bitcoin/bitcoin/viewstrings/#ja/qt-translation-011x/47533089?q=received\r\n\r\nDemo of changes:\r\n\r\nCurrent UI:\r\n    Bytes Sent      12 KB\r\n    Bytes Received  26 MB\r\n\r\nWith this pull request:\r\n    Sent       12 KB\r\n    Received   26 MB",
      "tree": {
        "sha": "b23b1d235f1609514a0959c01baa284508da339c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b23b1d235f1609514a0959c01baa284508da339c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61/comments",
    "author": {
      "login": "jonathancross",
      "id": 5115470,
      "node_id": "MDQ6VXNlcjUxMTU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5115470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathancross",
      "html_url": "https://github.com/jonathancross",
      "followers_url": "https://api.github.com/users/jonathancross/followers",
      "following_url": "https://api.github.com/users/jonathancross/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathancross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathancross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathancross/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathancross/orgs",
      "repos_url": "https://api.github.com/users/jonathancross/repos",
      "events_url": "https://api.github.com/users/jonathancross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathancross/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonathancross",
      "id": 5115470,
      "node_id": "MDQ6VXNlcjUxMTU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5115470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathancross",
      "html_url": "https://github.com/jonathancross",
      "followers_url": "https://api.github.com/users/jonathancross/followers",
      "following_url": "https://api.github.com/users/jonathancross/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathancross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathancross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathancross/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathancross/orgs",
      "repos_url": "https://api.github.com/users/jonathancross/repos",
      "events_url": "https://api.github.com/users/jonathancross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathancross/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "193f7b553e0ad41e6579adbce867ef14866034b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/193f7b553e0ad41e6579adbce867ef14866034b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/193f7b553e0ad41e6579adbce867ef14866034b0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "eb02dd80ff6458d235a610f73ec73ae4dec3beb3",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61",
        "patch": "@@ -1117,7 +1117,7 @@\n           <item row=\"12\" column=\"0\">\n            <widget class=\"QLabel\" name=\"label_18\">\n             <property name=\"text\">\n-             <string>Bytes Sent</string>\n+             <string>Sent</string>\n             </property>\n            </widget>\n           </item>\n@@ -1140,7 +1140,7 @@\n           <item row=\"13\" column=\"0\">\n            <widget class=\"QLabel\" name=\"label_20\">\n             <property name=\"text\">\n-             <string>Bytes Received</string>\n+             <string>Received</string>\n             </property>\n            </widget>\n           </item>"
      }
    ]
  },
  {
    "sha": "fb9857bfd68c13b52e14bc28dd981bc12501806a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjk4NTdiZmQ2OGMxM2I1MmUxNGJjMjhkZDk4MWJjMTI1MDE4MDZh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-04T22:46:47Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-04T22:46:47Z"
      },
      "message": "Squashed 'src/leveldb/' changes from 7d41e6f..20ca81f\n\n20ca81f Merge pull request #9\n7aa105e leveldb: Win32WritableFile without memory mapping\n\ngit-subtree-dir: src/leveldb\ngit-subtree-split: 20ca81f08fb7fa108923a091668e447dcf5c6b9d",
      "tree": {
        "sha": "1c185cba2ddcb6a77ece1094bc22aea072db84d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c185cba2ddcb6a77ece1094bc22aea072db84d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb9857bfd68c13b52e14bc28dd981bc12501806a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb9857bfd68c13b52e14bc28dd981bc12501806a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb9857bfd68c13b52e14bc28dd981bc12501806a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb9857bfd68c13b52e14bc28dd981bc12501806a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b0e2d75d78036e7e76fd9584e17b0379ba08d24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b0e2d75d78036e7e76fd9584e17b0379ba08d24",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b0e2d75d78036e7e76fd9584e17b0379ba08d24"
      }
    ],
    "stats": {
      "total": 236,
      "additions": 39,
      "deletions": 197
    },
    "files": [
      {
        "sha": "e11a96b791871506cfe004f32520f6d76314dccf",
        "filename": "util/env_win.cc",
        "status": "modified",
        "additions": 39,
        "deletions": 197,
        "changes": 236,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb9857bfd68c13b52e14bc28dd981bc12501806a/util/env_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb9857bfd68c13b52e14bc28dd981bc12501806a/util/env_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util/env_win.cc?ref=fb9857bfd68c13b52e14bc28dd981bc12501806a",
        "patch": "@@ -103,39 +103,20 @@ class Win32RandomAccessFile : public RandomAccessFile\n     DISALLOW_COPY_AND_ASSIGN(Win32RandomAccessFile);\n };\n \n-class Win32MapFile : public WritableFile\n+class Win32WritableFile : public WritableFile\n {\n public:\n-    Win32MapFile(const std::string& fname);\n+    Win32WritableFile(const std::string& fname);\n+    ~Win32WritableFile();\n \n-    ~Win32MapFile();\n     virtual Status Append(const Slice& data);\n     virtual Status Close();\n     virtual Status Flush();\n     virtual Status Sync();\n     BOOL isEnable();\n private:\n-    std::string _filename;\n-    HANDLE _hFile;\n-    size_t _page_size;\n-    size_t _map_size;       // How much extra memory to map at a time\n-    char* _base;            // The mapped region\n-    HANDLE _base_handle;\t\n-    char* _limit;           // Limit of the mapped region\n-    char* _dst;             // Where to write next  (in range [base_,limit_])\n-    char* _last_sync;       // Where have we synced up to\n-    uint64_t _file_offset;  // Offset of base_ in file\n-    //LARGE_INTEGER file_offset_;\n-    // Have we done an munmap of unsynced data?\n-    bool _pending_sync;\n-\n-    // Roundup x to a multiple of y\n-    static size_t _Roundup(size_t x, size_t y);\n-    size_t _TruncateToPageBoundary(size_t s);\n-    bool _UnmapCurrentRegion();\n-    bool _MapNewRegion();\n-    DISALLOW_COPY_AND_ASSIGN(Win32MapFile);\n-    BOOL _Init(LPCWSTR Path);\n+    std::string filename_;\n+    ::HANDLE _hFile;\n };\n \n class Win32FileLock : public FileLock\n@@ -442,202 +423,63 @@ void Win32RandomAccessFile::_CleanUp()\n     }\n }\n \n-size_t Win32MapFile::_Roundup( size_t x, size_t y )\n+Win32WritableFile::Win32WritableFile(const std::string& fname)\n+    : filename_(fname)\n {\n-    return ((x + y - 1) / y) * y;\n+    std::wstring path;\n+    ToWidePath(fname, path);\n+    DWORD Flag = PathFileExistsW(path.c_str()) ? OPEN_EXISTING : CREATE_ALWAYS;\n+    _hFile = CreateFileW(path.c_str(),\n+                         GENERIC_READ | GENERIC_WRITE,\n+                         FILE_SHARE_READ|FILE_SHARE_DELETE|FILE_SHARE_WRITE,\n+                         NULL,\n+                         Flag,\n+                         FILE_ATTRIBUTE_NORMAL,\n+                         NULL);\n+    // CreateFileW returns INVALID_HANDLE_VALUE in case of error, always check isEnable() before use\n }\n \n-size_t Win32MapFile::_TruncateToPageBoundary( size_t s )\n+Win32WritableFile::~Win32WritableFile()\n {\n-    s -= (s & (_page_size - 1));\n-    assert((s % _page_size) == 0);\n-    return s;\n+    if (_hFile != INVALID_HANDLE_VALUE)\n+        Close();\n }\n \n-bool Win32MapFile::_UnmapCurrentRegion()\n+Status Win32WritableFile::Append(const Slice& data)\n {\n-    bool result = true;\n-    if (_base != NULL) {\n-        if (_last_sync < _limit) {\n-            // Defer syncing this data until next Sync() call, if any\n-            _pending_sync = true;\n-        }\n-        if (!UnmapViewOfFile(_base) || !CloseHandle(_base_handle))\n-            result = false;\n-        _file_offset += _limit - _base;\n-        _base = NULL;\n-        _base_handle = NULL;\n-        _limit = NULL;\n-        _last_sync = NULL;\n-        _dst = NULL;\n-        // Increase the amount we map the next time, but capped at 1MB\n-        if (_map_size < (1<<20)) {\n-            _map_size *= 2;\n-        }\n+    DWORD r = 0;\n+    if (!WriteFile(_hFile, data.data(), data.size(), &r, NULL) || r != data.size()) {\n+        return Status::IOError(\"Win32WritableFile.Append::WriteFile: \"+filename_, Win32::GetLastErrSz());\n     }\n-    return result;\n-}\n-\n-bool Win32MapFile::_MapNewRegion()\n-{\n-    assert(_base == NULL);\n-    //LONG newSizeHigh = (LONG)((file_offset_ + map_size_) >> 32);\n-    //LONG newSizeLow = (LONG)((file_offset_ + map_size_) & 0xFFFFFFFF);\n-    DWORD off_hi = (DWORD)(_file_offset >> 32);\n-    DWORD off_lo = (DWORD)(_file_offset & 0xFFFFFFFF);\n-    LARGE_INTEGER newSize;\n-    newSize.QuadPart = _file_offset + _map_size;\n-    SetFilePointerEx(_hFile, newSize, NULL, FILE_BEGIN);\n-    SetEndOfFile(_hFile);\n-\n-    _base_handle = CreateFileMappingA(\n-        _hFile,\n-        NULL,\n-        PAGE_READWRITE,\n-        0,\n-        0,\n-        0);\n-    if (_base_handle != NULL) {\n-        _base = (char*) MapViewOfFile(_base_handle,\n-            FILE_MAP_ALL_ACCESS,\n-            off_hi,\n-            off_lo,\n-            _map_size);\n-        if (_base != NULL) {\n-            _limit = _base + _map_size;\n-            _dst = _base;\n-            _last_sync = _base;\n-            return true;\n-        }\n-    }\n-    return false;\n+    return Status::OK();\n }\n \n-Win32MapFile::Win32MapFile( const std::string& fname) :\n-    _filename(fname),\n-    _hFile(NULL),\n-    _page_size(Win32::g_PageSize),\n-    _map_size(_Roundup(65536, Win32::g_PageSize)),\n-    _base(NULL),\n-    _base_handle(NULL),\n-    _limit(NULL),\n-    _dst(NULL),\n-    _last_sync(NULL),\n-    _file_offset(0),\n-    _pending_sync(false)\n+Status Win32WritableFile::Close()\n {\n-\tstd::wstring path;\n-\tToWidePath(fname, path);\n-    _Init(path.c_str());\n-    assert((Win32::g_PageSize & (Win32::g_PageSize - 1)) == 0);\n-}\n-\n-Status Win32MapFile::Append( const Slice& data )\n-{\n-    const char* src = data.data();\n-    size_t left = data.size();\n-    Status s;\n-    while (left > 0) {\n-        assert(_base <= _dst);\n-        assert(_dst <= _limit);\n-        size_t avail = _limit - _dst;\n-        if (avail == 0) {\n-            if (!_UnmapCurrentRegion() ||\n-                !_MapNewRegion()) {\n-                    return Status::IOError(\"WinMmapFile.Append::UnmapCurrentRegion or MapNewRegion: \", Win32::GetLastErrSz());\n-            }\n-        }\n-        size_t n = (left <= avail) ? left : avail;\n-        memcpy(_dst, src, n);\n-        _dst += n;\n-        src += n;\n-        left -= n;\n-    }\n-    return s;\n-}\n-\n-Status Win32MapFile::Close()\n-{\n-    Status s;\n-    size_t unused = _limit - _dst;\n-    if (!_UnmapCurrentRegion()) {\n-        s = Status::IOError(\"WinMmapFile.Close::UnmapCurrentRegion: \",Win32::GetLastErrSz());\n-    } else if (unused > 0) {\n-        // Trim the extra space at the end of the file\n-        LARGE_INTEGER newSize;\n-        newSize.QuadPart = _file_offset - unused;\n-        if (!SetFilePointerEx(_hFile, newSize, NULL, FILE_BEGIN)) {\n-            s = Status::IOError(\"WinMmapFile.Close::SetFilePointer: \",Win32::GetLastErrSz());\n-        } else \n-            SetEndOfFile(_hFile);\n-    }\n     if (!CloseHandle(_hFile)) {\n-        if (s.ok()) {\n-            s = Status::IOError(\"WinMmapFile.Close::CloseHandle: \", Win32::GetLastErrSz());\n-        }\n+        return Status::IOError(\"Win32WritableFile.Close::CloseHandle: \"+filename_, Win32::GetLastErrSz());\n     }\n     _hFile = INVALID_HANDLE_VALUE;\n-    _base = NULL;\n-    _base_handle = NULL;\n-    _limit = NULL;\n-\n-    return s;\n-}\n-\n-Status Win32MapFile::Sync()\n-{\n-    Status s;\n-    if (_pending_sync) {\n-        // Some unmapped data was not synced\n-        _pending_sync = false;\n-        if (!FlushFileBuffers(_hFile)) {\n-            s = Status::IOError(\"WinMmapFile.Sync::FlushFileBuffers: \",Win32::GetLastErrSz());\n-        }\n-    }\n-    if (_dst > _last_sync) {\n-        // Find the beginnings of the pages that contain the first and last\n-        // bytes to be synced.\n-        size_t p1 = _TruncateToPageBoundary(_last_sync - _base);\n-        size_t p2 = _TruncateToPageBoundary(_dst - _base - 1);\n-        _last_sync = _dst;\n-        if (!FlushViewOfFile(_base + p1, p2 - p1 + _page_size)) {\n-            s = Status::IOError(\"WinMmapFile.Sync::FlushViewOfFile: \",Win32::GetLastErrSz());\n-        }\n-    }\n-    return s;\n+    return Status::OK();\n }\n \n-Status Win32MapFile::Flush()\n+Status Win32WritableFile::Flush()\n {\n+    // Nothing to do here, there are no application-side buffers\n     return Status::OK();\n }\n \n-Win32MapFile::~Win32MapFile()\n+Status Win32WritableFile::Sync()\n {\n-    if (_hFile != INVALID_HANDLE_VALUE) { \n-        Win32MapFile::Close();\n+    if (!FlushFileBuffers(_hFile)) {\n+        return Status::IOError(\"Win32WritableFile.Sync::FlushFileBuffers \"+filename_, Win32::GetLastErrSz());\n     }\n+    return Status::OK();\n }\n \n-BOOL Win32MapFile::_Init( LPCWSTR Path )\n-{\n-    DWORD Flag = PathFileExistsW(Path) ? OPEN_EXISTING : CREATE_ALWAYS;\n-    _hFile = CreateFileW(Path,\n-                         GENERIC_READ | GENERIC_WRITE,\n-                         FILE_SHARE_READ|FILE_SHARE_DELETE|FILE_SHARE_WRITE,\n-                         NULL,\n-                         Flag,\n-                         FILE_ATTRIBUTE_NORMAL,\n-                         NULL);\n-    if(!_hFile || _hFile == INVALID_HANDLE_VALUE)\n-        return FALSE;\n-    else\n-        return TRUE;\n-}\n-\n-BOOL Win32MapFile::isEnable()\n+BOOL Win32WritableFile::isEnable()\n {\n-    return _hFile ? TRUE : FALSE;\n+    return _hFile != INVALID_HANDLE_VALUE;\n }\n \n Win32FileLock::Win32FileLock( const std::string& fname ) :\n@@ -981,7 +823,7 @@ Status Win32Env::NewLogger( const std::string& fname, Logger** result )\n {\n     Status sRet;\n     std::string path = fname;\n-    Win32MapFile* pMapFile = new Win32MapFile(ModifyPath(path));\n+    Win32WritableFile* pMapFile = new Win32WritableFile(ModifyPath(path));\n     if(!pMapFile->isEnable()){\n         delete pMapFile;\n         *result = NULL;\n@@ -995,7 +837,7 @@ Status Win32Env::NewWritableFile( const std::string& fname, WritableFile** resul\n {\n     Status sRet;\n     std::string path = fname;\n-    Win32MapFile* pFile = new Win32MapFile(ModifyPath(path));\n+    Win32WritableFile* pFile = new Win32WritableFile(ModifyPath(path));\n     if(!pFile->isEnable()){\n         *result = NULL;\n         sRet = Status::IOError(fname,Win32::GetLastErrSz());"
      }
    ]
  },
  {
    "sha": "f0343e937094291ffad43783d2685d7ca9d5e60d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDM0M2U5MzcwOTQyOTFmZmFkNDM3ODNkMjY4NWQ3Y2E5ZDVlNjBk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-04T22:46:47Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-04T22:46:47Z"
      },
      "message": "Update LevelDB",
      "tree": {
        "sha": "4f1adc0c3061894c5f0c2689fd143eb712fcad11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f1adc0c3061894c5f0c2689fd143eb712fcad11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0343e937094291ffad43783d2685d7ca9d5e60d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0343e937094291ffad43783d2685d7ca9d5e60d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0343e937094291ffad43783d2685d7ca9d5e60d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0343e937094291ffad43783d2685d7ca9d5e60d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "193f7b553e0ad41e6579adbce867ef14866034b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/193f7b553e0ad41e6579adbce867ef14866034b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/193f7b553e0ad41e6579adbce867ef14866034b0"
      },
      {
        "sha": "fb9857bfd68c13b52e14bc28dd981bc12501806a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb9857bfd68c13b52e14bc28dd981bc12501806a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb9857bfd68c13b52e14bc28dd981bc12501806a"
      }
    ],
    "stats": {
      "total": 236,
      "additions": 39,
      "deletions": 197
    },
    "files": [
      {
        "sha": "e11a96b791871506cfe004f32520f6d76314dccf",
        "filename": "src/leveldb/util/env_win.cc",
        "status": "modified",
        "additions": 39,
        "deletions": 197,
        "changes": 236,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0343e937094291ffad43783d2685d7ca9d5e60d/src/leveldb/util/env_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0343e937094291ffad43783d2685d7ca9d5e60d/src/leveldb/util/env_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_win.cc?ref=f0343e937094291ffad43783d2685d7ca9d5e60d",
        "patch": "@@ -103,39 +103,20 @@ class Win32RandomAccessFile : public RandomAccessFile\n     DISALLOW_COPY_AND_ASSIGN(Win32RandomAccessFile);\n };\n \n-class Win32MapFile : public WritableFile\n+class Win32WritableFile : public WritableFile\n {\n public:\n-    Win32MapFile(const std::string& fname);\n+    Win32WritableFile(const std::string& fname);\n+    ~Win32WritableFile();\n \n-    ~Win32MapFile();\n     virtual Status Append(const Slice& data);\n     virtual Status Close();\n     virtual Status Flush();\n     virtual Status Sync();\n     BOOL isEnable();\n private:\n-    std::string _filename;\n-    HANDLE _hFile;\n-    size_t _page_size;\n-    size_t _map_size;       // How much extra memory to map at a time\n-    char* _base;            // The mapped region\n-    HANDLE _base_handle;\t\n-    char* _limit;           // Limit of the mapped region\n-    char* _dst;             // Where to write next  (in range [base_,limit_])\n-    char* _last_sync;       // Where have we synced up to\n-    uint64_t _file_offset;  // Offset of base_ in file\n-    //LARGE_INTEGER file_offset_;\n-    // Have we done an munmap of unsynced data?\n-    bool _pending_sync;\n-\n-    // Roundup x to a multiple of y\n-    static size_t _Roundup(size_t x, size_t y);\n-    size_t _TruncateToPageBoundary(size_t s);\n-    bool _UnmapCurrentRegion();\n-    bool _MapNewRegion();\n-    DISALLOW_COPY_AND_ASSIGN(Win32MapFile);\n-    BOOL _Init(LPCWSTR Path);\n+    std::string filename_;\n+    ::HANDLE _hFile;\n };\n \n class Win32FileLock : public FileLock\n@@ -442,202 +423,63 @@ void Win32RandomAccessFile::_CleanUp()\n     }\n }\n \n-size_t Win32MapFile::_Roundup( size_t x, size_t y )\n+Win32WritableFile::Win32WritableFile(const std::string& fname)\n+    : filename_(fname)\n {\n-    return ((x + y - 1) / y) * y;\n+    std::wstring path;\n+    ToWidePath(fname, path);\n+    DWORD Flag = PathFileExistsW(path.c_str()) ? OPEN_EXISTING : CREATE_ALWAYS;\n+    _hFile = CreateFileW(path.c_str(),\n+                         GENERIC_READ | GENERIC_WRITE,\n+                         FILE_SHARE_READ|FILE_SHARE_DELETE|FILE_SHARE_WRITE,\n+                         NULL,\n+                         Flag,\n+                         FILE_ATTRIBUTE_NORMAL,\n+                         NULL);\n+    // CreateFileW returns INVALID_HANDLE_VALUE in case of error, always check isEnable() before use\n }\n \n-size_t Win32MapFile::_TruncateToPageBoundary( size_t s )\n+Win32WritableFile::~Win32WritableFile()\n {\n-    s -= (s & (_page_size - 1));\n-    assert((s % _page_size) == 0);\n-    return s;\n+    if (_hFile != INVALID_HANDLE_VALUE)\n+        Close();\n }\n \n-bool Win32MapFile::_UnmapCurrentRegion()\n+Status Win32WritableFile::Append(const Slice& data)\n {\n-    bool result = true;\n-    if (_base != NULL) {\n-        if (_last_sync < _limit) {\n-            // Defer syncing this data until next Sync() call, if any\n-            _pending_sync = true;\n-        }\n-        if (!UnmapViewOfFile(_base) || !CloseHandle(_base_handle))\n-            result = false;\n-        _file_offset += _limit - _base;\n-        _base = NULL;\n-        _base_handle = NULL;\n-        _limit = NULL;\n-        _last_sync = NULL;\n-        _dst = NULL;\n-        // Increase the amount we map the next time, but capped at 1MB\n-        if (_map_size < (1<<20)) {\n-            _map_size *= 2;\n-        }\n+    DWORD r = 0;\n+    if (!WriteFile(_hFile, data.data(), data.size(), &r, NULL) || r != data.size()) {\n+        return Status::IOError(\"Win32WritableFile.Append::WriteFile: \"+filename_, Win32::GetLastErrSz());\n     }\n-    return result;\n-}\n-\n-bool Win32MapFile::_MapNewRegion()\n-{\n-    assert(_base == NULL);\n-    //LONG newSizeHigh = (LONG)((file_offset_ + map_size_) >> 32);\n-    //LONG newSizeLow = (LONG)((file_offset_ + map_size_) & 0xFFFFFFFF);\n-    DWORD off_hi = (DWORD)(_file_offset >> 32);\n-    DWORD off_lo = (DWORD)(_file_offset & 0xFFFFFFFF);\n-    LARGE_INTEGER newSize;\n-    newSize.QuadPart = _file_offset + _map_size;\n-    SetFilePointerEx(_hFile, newSize, NULL, FILE_BEGIN);\n-    SetEndOfFile(_hFile);\n-\n-    _base_handle = CreateFileMappingA(\n-        _hFile,\n-        NULL,\n-        PAGE_READWRITE,\n-        0,\n-        0,\n-        0);\n-    if (_base_handle != NULL) {\n-        _base = (char*) MapViewOfFile(_base_handle,\n-            FILE_MAP_ALL_ACCESS,\n-            off_hi,\n-            off_lo,\n-            _map_size);\n-        if (_base != NULL) {\n-            _limit = _base + _map_size;\n-            _dst = _base;\n-            _last_sync = _base;\n-            return true;\n-        }\n-    }\n-    return false;\n+    return Status::OK();\n }\n \n-Win32MapFile::Win32MapFile( const std::string& fname) :\n-    _filename(fname),\n-    _hFile(NULL),\n-    _page_size(Win32::g_PageSize),\n-    _map_size(_Roundup(65536, Win32::g_PageSize)),\n-    _base(NULL),\n-    _base_handle(NULL),\n-    _limit(NULL),\n-    _dst(NULL),\n-    _last_sync(NULL),\n-    _file_offset(0),\n-    _pending_sync(false)\n+Status Win32WritableFile::Close()\n {\n-\tstd::wstring path;\n-\tToWidePath(fname, path);\n-    _Init(path.c_str());\n-    assert((Win32::g_PageSize & (Win32::g_PageSize - 1)) == 0);\n-}\n-\n-Status Win32MapFile::Append( const Slice& data )\n-{\n-    const char* src = data.data();\n-    size_t left = data.size();\n-    Status s;\n-    while (left > 0) {\n-        assert(_base <= _dst);\n-        assert(_dst <= _limit);\n-        size_t avail = _limit - _dst;\n-        if (avail == 0) {\n-            if (!_UnmapCurrentRegion() ||\n-                !_MapNewRegion()) {\n-                    return Status::IOError(\"WinMmapFile.Append::UnmapCurrentRegion or MapNewRegion: \", Win32::GetLastErrSz());\n-            }\n-        }\n-        size_t n = (left <= avail) ? left : avail;\n-        memcpy(_dst, src, n);\n-        _dst += n;\n-        src += n;\n-        left -= n;\n-    }\n-    return s;\n-}\n-\n-Status Win32MapFile::Close()\n-{\n-    Status s;\n-    size_t unused = _limit - _dst;\n-    if (!_UnmapCurrentRegion()) {\n-        s = Status::IOError(\"WinMmapFile.Close::UnmapCurrentRegion: \",Win32::GetLastErrSz());\n-    } else if (unused > 0) {\n-        // Trim the extra space at the end of the file\n-        LARGE_INTEGER newSize;\n-        newSize.QuadPart = _file_offset - unused;\n-        if (!SetFilePointerEx(_hFile, newSize, NULL, FILE_BEGIN)) {\n-            s = Status::IOError(\"WinMmapFile.Close::SetFilePointer: \",Win32::GetLastErrSz());\n-        } else \n-            SetEndOfFile(_hFile);\n-    }\n     if (!CloseHandle(_hFile)) {\n-        if (s.ok()) {\n-            s = Status::IOError(\"WinMmapFile.Close::CloseHandle: \", Win32::GetLastErrSz());\n-        }\n+        return Status::IOError(\"Win32WritableFile.Close::CloseHandle: \"+filename_, Win32::GetLastErrSz());\n     }\n     _hFile = INVALID_HANDLE_VALUE;\n-    _base = NULL;\n-    _base_handle = NULL;\n-    _limit = NULL;\n-\n-    return s;\n-}\n-\n-Status Win32MapFile::Sync()\n-{\n-    Status s;\n-    if (_pending_sync) {\n-        // Some unmapped data was not synced\n-        _pending_sync = false;\n-        if (!FlushFileBuffers(_hFile)) {\n-            s = Status::IOError(\"WinMmapFile.Sync::FlushFileBuffers: \",Win32::GetLastErrSz());\n-        }\n-    }\n-    if (_dst > _last_sync) {\n-        // Find the beginnings of the pages that contain the first and last\n-        // bytes to be synced.\n-        size_t p1 = _TruncateToPageBoundary(_last_sync - _base);\n-        size_t p2 = _TruncateToPageBoundary(_dst - _base - 1);\n-        _last_sync = _dst;\n-        if (!FlushViewOfFile(_base + p1, p2 - p1 + _page_size)) {\n-            s = Status::IOError(\"WinMmapFile.Sync::FlushViewOfFile: \",Win32::GetLastErrSz());\n-        }\n-    }\n-    return s;\n+    return Status::OK();\n }\n \n-Status Win32MapFile::Flush()\n+Status Win32WritableFile::Flush()\n {\n+    // Nothing to do here, there are no application-side buffers\n     return Status::OK();\n }\n \n-Win32MapFile::~Win32MapFile()\n+Status Win32WritableFile::Sync()\n {\n-    if (_hFile != INVALID_HANDLE_VALUE) { \n-        Win32MapFile::Close();\n+    if (!FlushFileBuffers(_hFile)) {\n+        return Status::IOError(\"Win32WritableFile.Sync::FlushFileBuffers \"+filename_, Win32::GetLastErrSz());\n     }\n+    return Status::OK();\n }\n \n-BOOL Win32MapFile::_Init( LPCWSTR Path )\n-{\n-    DWORD Flag = PathFileExistsW(Path) ? OPEN_EXISTING : CREATE_ALWAYS;\n-    _hFile = CreateFileW(Path,\n-                         GENERIC_READ | GENERIC_WRITE,\n-                         FILE_SHARE_READ|FILE_SHARE_DELETE|FILE_SHARE_WRITE,\n-                         NULL,\n-                         Flag,\n-                         FILE_ATTRIBUTE_NORMAL,\n-                         NULL);\n-    if(!_hFile || _hFile == INVALID_HANDLE_VALUE)\n-        return FALSE;\n-    else\n-        return TRUE;\n-}\n-\n-BOOL Win32MapFile::isEnable()\n+BOOL Win32WritableFile::isEnable()\n {\n-    return _hFile ? TRUE : FALSE;\n+    return _hFile != INVALID_HANDLE_VALUE;\n }\n \n Win32FileLock::Win32FileLock( const std::string& fname ) :\n@@ -981,7 +823,7 @@ Status Win32Env::NewLogger( const std::string& fname, Logger** result )\n {\n     Status sRet;\n     std::string path = fname;\n-    Win32MapFile* pMapFile = new Win32MapFile(ModifyPath(path));\n+    Win32WritableFile* pMapFile = new Win32WritableFile(ModifyPath(path));\n     if(!pMapFile->isEnable()){\n         delete pMapFile;\n         *result = NULL;\n@@ -995,7 +837,7 @@ Status Win32Env::NewWritableFile( const std::string& fname, WritableFile** resul\n {\n     Status sRet;\n     std::string path = fname;\n-    Win32MapFile* pFile = new Win32MapFile(ModifyPath(path));\n+    Win32WritableFile* pFile = new Win32WritableFile(ModifyPath(path));\n     if(!pFile->isEnable()){\n         *result = NULL;\n         sRet = Status::IOError(fname,Win32::GetLastErrSz());"
      }
    ]
  },
  {
    "sha": "22e780737db57bcb18b3824eb8158e19a4775cb6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmU3ODA3MzdkYjU3YmNiMThiMzgyNGViODE1OGUxOWE0Nzc1Y2I2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-04T23:16:49Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-04T23:43:49Z"
      },
      "message": "Always flush block and undo when switching to new file\n\nPreviously, the undo weren't being flushed during a reindex because\nfKnown was set to true in FindBlockPos. That is the correct behaviour\nfor block files as they aren't being touched, but undo files are\ntouched.\n\nThis changes the behaviour to always flush when switching to a new file\n(even for block files, though that isn't really necessary).",
      "tree": {
        "sha": "56969bf36db75eb79d9fb33c3eea6bb5ae2822ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56969bf36db75eb79d9fb33c3eea6bb5ae2822ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22e780737db57bcb18b3824eb8158e19a4775cb6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22e780737db57bcb18b3824eb8158e19a4775cb6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22e780737db57bcb18b3824eb8158e19a4775cb6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22e780737db57bcb18b3824eb8158e19a4775cb6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "193f7b553e0ad41e6579adbce867ef14866034b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/193f7b553e0ad41e6579adbce867ef14866034b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/193f7b553e0ad41e6579adbce867ef14866034b0"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a2a5e0b729ede7dd33aff7f1e770067a3501ef99",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22e780737db57bcb18b3824eb8158e19a4775cb6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22e780737db57bcb18b3824eb8158e19a4775cb6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=22e780737db57bcb18b3824eb8158e19a4775cb6",
        "patch": "@@ -2517,8 +2517,6 @@ bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAdd\n \n     if (!fKnown) {\n         while (vinfoBlockFile[nFile].nSize + nAddSize >= MAX_BLOCKFILE_SIZE) {\n-            LogPrintf(\"Leaving block file %i: %s\\n\", nFile, vinfoBlockFile[nFile].ToString());\n-            FlushBlockFile(true);\n             nFile++;\n             if (vinfoBlockFile.size() <= nFile) {\n                 vinfoBlockFile.resize(nFile + 1);\n@@ -2528,7 +2526,14 @@ bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAdd\n         pos.nPos = vinfoBlockFile[nFile].nSize;\n     }\n \n-    nLastBlockFile = nFile;\n+    if (nFile != nLastBlockFile) {\n+        if (!fKnown) {\n+            LogPrintf(\"Leaving block file %i: %s\\n\", nFile, vinfoBlockFile[nFile].ToString());\n+        }\n+        FlushBlockFile(!fKnown);\n+        nLastBlockFile = nFile;\n+    }\n+\n     vinfoBlockFile[nFile].AddBlock(nHeight, nTime);\n     if (fKnown)\n         vinfoBlockFile[nFile].nSize = std::max(pos.nPos + nAddSize, vinfoBlockFile[nFile].nSize);"
      }
    ]
  },
  {
    "sha": "79456524f8f5b8a4e1313acbbacf214cf3e6ee5d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTQ1NjUyNGY4ZjViOGE0ZTEzMTNhY2JiYWNmMjE0Y2YzZTZlZTVk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T09:49:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T09:49:59Z"
      },
      "message": "Merge pull request #6944\n\nfb9857b Squashed 'src/leveldb/' changes from 7d41e6f..20ca81f (Pieter Wuille)",
      "tree": {
        "sha": "4f1adc0c3061894c5f0c2689fd143eb712fcad11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f1adc0c3061894c5f0c2689fd143eb712fcad11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79456524f8f5b8a4e1313acbbacf214cf3e6ee5d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOyZHAAoJEHSBCwEjRsmmSB4H/2W7CJCwb2EZW/UkXK+YbydW\n8iI9hjrsEAcjG3bRugssZNw+ATdJaMPc00mFAcJVHT/gKgWAVeammtSXPJKwM/w2\nyAJTKDVCmalMbIfzy8fe9x5Sz9KgsfkFqP8PAffJl/HHjolCbHY4sz0tU41taGfF\nOW5eX2ydGZhOyMwbCR0v0hmvB2EMq9TdPGwzab63SeRhTMxRhFL7etEgP3iHdSe1\nT+lqNk8mHrvJN6ux95Ar90JqqMuTnkpt0VixqLosRbiU7CUTOlbzAH/ApTiavMEy\nV1zLKlySqP1NCm9mIHfioPhSJi9RaOLTpfbporV2TwcppAzxYGca5EHwOe8Hdzs=\n=Hcg+\n-----END PGP SIGNATURE-----",
        "payload": "tree 4f1adc0c3061894c5f0c2689fd143eb712fcad11\nparent 193f7b553e0ad41e6579adbce867ef14866034b0\nparent f0343e937094291ffad43783d2685d7ca9d5e60d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446716979 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446716999 +0100\n\nMerge pull request #6944\n\nfb9857b Squashed 'src/leveldb/' changes from 7d41e6f..20ca81f (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79456524f8f5b8a4e1313acbbacf214cf3e6ee5d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79456524f8f5b8a4e1313acbbacf214cf3e6ee5d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79456524f8f5b8a4e1313acbbacf214cf3e6ee5d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "193f7b553e0ad41e6579adbce867ef14866034b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/193f7b553e0ad41e6579adbce867ef14866034b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/193f7b553e0ad41e6579adbce867ef14866034b0"
      },
      {
        "sha": "f0343e937094291ffad43783d2685d7ca9d5e60d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0343e937094291ffad43783d2685d7ca9d5e60d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0343e937094291ffad43783d2685d7ca9d5e60d"
      }
    ],
    "stats": {
      "total": 236,
      "additions": 39,
      "deletions": 197
    },
    "files": [
      {
        "sha": "e11a96b791871506cfe004f32520f6d76314dccf",
        "filename": "src/leveldb/util/env_win.cc",
        "status": "modified",
        "additions": 39,
        "deletions": 197,
        "changes": 236,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79456524f8f5b8a4e1313acbbacf214cf3e6ee5d/src/leveldb/util/env_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79456524f8f5b8a4e1313acbbacf214cf3e6ee5d/src/leveldb/util/env_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_win.cc?ref=79456524f8f5b8a4e1313acbbacf214cf3e6ee5d",
        "patch": "@@ -103,39 +103,20 @@ class Win32RandomAccessFile : public RandomAccessFile\n     DISALLOW_COPY_AND_ASSIGN(Win32RandomAccessFile);\n };\n \n-class Win32MapFile : public WritableFile\n+class Win32WritableFile : public WritableFile\n {\n public:\n-    Win32MapFile(const std::string& fname);\n+    Win32WritableFile(const std::string& fname);\n+    ~Win32WritableFile();\n \n-    ~Win32MapFile();\n     virtual Status Append(const Slice& data);\n     virtual Status Close();\n     virtual Status Flush();\n     virtual Status Sync();\n     BOOL isEnable();\n private:\n-    std::string _filename;\n-    HANDLE _hFile;\n-    size_t _page_size;\n-    size_t _map_size;       // How much extra memory to map at a time\n-    char* _base;            // The mapped region\n-    HANDLE _base_handle;\t\n-    char* _limit;           // Limit of the mapped region\n-    char* _dst;             // Where to write next  (in range [base_,limit_])\n-    char* _last_sync;       // Where have we synced up to\n-    uint64_t _file_offset;  // Offset of base_ in file\n-    //LARGE_INTEGER file_offset_;\n-    // Have we done an munmap of unsynced data?\n-    bool _pending_sync;\n-\n-    // Roundup x to a multiple of y\n-    static size_t _Roundup(size_t x, size_t y);\n-    size_t _TruncateToPageBoundary(size_t s);\n-    bool _UnmapCurrentRegion();\n-    bool _MapNewRegion();\n-    DISALLOW_COPY_AND_ASSIGN(Win32MapFile);\n-    BOOL _Init(LPCWSTR Path);\n+    std::string filename_;\n+    ::HANDLE _hFile;\n };\n \n class Win32FileLock : public FileLock\n@@ -442,202 +423,63 @@ void Win32RandomAccessFile::_CleanUp()\n     }\n }\n \n-size_t Win32MapFile::_Roundup( size_t x, size_t y )\n+Win32WritableFile::Win32WritableFile(const std::string& fname)\n+    : filename_(fname)\n {\n-    return ((x + y - 1) / y) * y;\n+    std::wstring path;\n+    ToWidePath(fname, path);\n+    DWORD Flag = PathFileExistsW(path.c_str()) ? OPEN_EXISTING : CREATE_ALWAYS;\n+    _hFile = CreateFileW(path.c_str(),\n+                         GENERIC_READ | GENERIC_WRITE,\n+                         FILE_SHARE_READ|FILE_SHARE_DELETE|FILE_SHARE_WRITE,\n+                         NULL,\n+                         Flag,\n+                         FILE_ATTRIBUTE_NORMAL,\n+                         NULL);\n+    // CreateFileW returns INVALID_HANDLE_VALUE in case of error, always check isEnable() before use\n }\n \n-size_t Win32MapFile::_TruncateToPageBoundary( size_t s )\n+Win32WritableFile::~Win32WritableFile()\n {\n-    s -= (s & (_page_size - 1));\n-    assert((s % _page_size) == 0);\n-    return s;\n+    if (_hFile != INVALID_HANDLE_VALUE)\n+        Close();\n }\n \n-bool Win32MapFile::_UnmapCurrentRegion()\n+Status Win32WritableFile::Append(const Slice& data)\n {\n-    bool result = true;\n-    if (_base != NULL) {\n-        if (_last_sync < _limit) {\n-            // Defer syncing this data until next Sync() call, if any\n-            _pending_sync = true;\n-        }\n-        if (!UnmapViewOfFile(_base) || !CloseHandle(_base_handle))\n-            result = false;\n-        _file_offset += _limit - _base;\n-        _base = NULL;\n-        _base_handle = NULL;\n-        _limit = NULL;\n-        _last_sync = NULL;\n-        _dst = NULL;\n-        // Increase the amount we map the next time, but capped at 1MB\n-        if (_map_size < (1<<20)) {\n-            _map_size *= 2;\n-        }\n+    DWORD r = 0;\n+    if (!WriteFile(_hFile, data.data(), data.size(), &r, NULL) || r != data.size()) {\n+        return Status::IOError(\"Win32WritableFile.Append::WriteFile: \"+filename_, Win32::GetLastErrSz());\n     }\n-    return result;\n-}\n-\n-bool Win32MapFile::_MapNewRegion()\n-{\n-    assert(_base == NULL);\n-    //LONG newSizeHigh = (LONG)((file_offset_ + map_size_) >> 32);\n-    //LONG newSizeLow = (LONG)((file_offset_ + map_size_) & 0xFFFFFFFF);\n-    DWORD off_hi = (DWORD)(_file_offset >> 32);\n-    DWORD off_lo = (DWORD)(_file_offset & 0xFFFFFFFF);\n-    LARGE_INTEGER newSize;\n-    newSize.QuadPart = _file_offset + _map_size;\n-    SetFilePointerEx(_hFile, newSize, NULL, FILE_BEGIN);\n-    SetEndOfFile(_hFile);\n-\n-    _base_handle = CreateFileMappingA(\n-        _hFile,\n-        NULL,\n-        PAGE_READWRITE,\n-        0,\n-        0,\n-        0);\n-    if (_base_handle != NULL) {\n-        _base = (char*) MapViewOfFile(_base_handle,\n-            FILE_MAP_ALL_ACCESS,\n-            off_hi,\n-            off_lo,\n-            _map_size);\n-        if (_base != NULL) {\n-            _limit = _base + _map_size;\n-            _dst = _base;\n-            _last_sync = _base;\n-            return true;\n-        }\n-    }\n-    return false;\n+    return Status::OK();\n }\n \n-Win32MapFile::Win32MapFile( const std::string& fname) :\n-    _filename(fname),\n-    _hFile(NULL),\n-    _page_size(Win32::g_PageSize),\n-    _map_size(_Roundup(65536, Win32::g_PageSize)),\n-    _base(NULL),\n-    _base_handle(NULL),\n-    _limit(NULL),\n-    _dst(NULL),\n-    _last_sync(NULL),\n-    _file_offset(0),\n-    _pending_sync(false)\n+Status Win32WritableFile::Close()\n {\n-\tstd::wstring path;\n-\tToWidePath(fname, path);\n-    _Init(path.c_str());\n-    assert((Win32::g_PageSize & (Win32::g_PageSize - 1)) == 0);\n-}\n-\n-Status Win32MapFile::Append( const Slice& data )\n-{\n-    const char* src = data.data();\n-    size_t left = data.size();\n-    Status s;\n-    while (left > 0) {\n-        assert(_base <= _dst);\n-        assert(_dst <= _limit);\n-        size_t avail = _limit - _dst;\n-        if (avail == 0) {\n-            if (!_UnmapCurrentRegion() ||\n-                !_MapNewRegion()) {\n-                    return Status::IOError(\"WinMmapFile.Append::UnmapCurrentRegion or MapNewRegion: \", Win32::GetLastErrSz());\n-            }\n-        }\n-        size_t n = (left <= avail) ? left : avail;\n-        memcpy(_dst, src, n);\n-        _dst += n;\n-        src += n;\n-        left -= n;\n-    }\n-    return s;\n-}\n-\n-Status Win32MapFile::Close()\n-{\n-    Status s;\n-    size_t unused = _limit - _dst;\n-    if (!_UnmapCurrentRegion()) {\n-        s = Status::IOError(\"WinMmapFile.Close::UnmapCurrentRegion: \",Win32::GetLastErrSz());\n-    } else if (unused > 0) {\n-        // Trim the extra space at the end of the file\n-        LARGE_INTEGER newSize;\n-        newSize.QuadPart = _file_offset - unused;\n-        if (!SetFilePointerEx(_hFile, newSize, NULL, FILE_BEGIN)) {\n-            s = Status::IOError(\"WinMmapFile.Close::SetFilePointer: \",Win32::GetLastErrSz());\n-        } else \n-            SetEndOfFile(_hFile);\n-    }\n     if (!CloseHandle(_hFile)) {\n-        if (s.ok()) {\n-            s = Status::IOError(\"WinMmapFile.Close::CloseHandle: \", Win32::GetLastErrSz());\n-        }\n+        return Status::IOError(\"Win32WritableFile.Close::CloseHandle: \"+filename_, Win32::GetLastErrSz());\n     }\n     _hFile = INVALID_HANDLE_VALUE;\n-    _base = NULL;\n-    _base_handle = NULL;\n-    _limit = NULL;\n-\n-    return s;\n-}\n-\n-Status Win32MapFile::Sync()\n-{\n-    Status s;\n-    if (_pending_sync) {\n-        // Some unmapped data was not synced\n-        _pending_sync = false;\n-        if (!FlushFileBuffers(_hFile)) {\n-            s = Status::IOError(\"WinMmapFile.Sync::FlushFileBuffers: \",Win32::GetLastErrSz());\n-        }\n-    }\n-    if (_dst > _last_sync) {\n-        // Find the beginnings of the pages that contain the first and last\n-        // bytes to be synced.\n-        size_t p1 = _TruncateToPageBoundary(_last_sync - _base);\n-        size_t p2 = _TruncateToPageBoundary(_dst - _base - 1);\n-        _last_sync = _dst;\n-        if (!FlushViewOfFile(_base + p1, p2 - p1 + _page_size)) {\n-            s = Status::IOError(\"WinMmapFile.Sync::FlushViewOfFile: \",Win32::GetLastErrSz());\n-        }\n-    }\n-    return s;\n+    return Status::OK();\n }\n \n-Status Win32MapFile::Flush()\n+Status Win32WritableFile::Flush()\n {\n+    // Nothing to do here, there are no application-side buffers\n     return Status::OK();\n }\n \n-Win32MapFile::~Win32MapFile()\n+Status Win32WritableFile::Sync()\n {\n-    if (_hFile != INVALID_HANDLE_VALUE) { \n-        Win32MapFile::Close();\n+    if (!FlushFileBuffers(_hFile)) {\n+        return Status::IOError(\"Win32WritableFile.Sync::FlushFileBuffers \"+filename_, Win32::GetLastErrSz());\n     }\n+    return Status::OK();\n }\n \n-BOOL Win32MapFile::_Init( LPCWSTR Path )\n-{\n-    DWORD Flag = PathFileExistsW(Path) ? OPEN_EXISTING : CREATE_ALWAYS;\n-    _hFile = CreateFileW(Path,\n-                         GENERIC_READ | GENERIC_WRITE,\n-                         FILE_SHARE_READ|FILE_SHARE_DELETE|FILE_SHARE_WRITE,\n-                         NULL,\n-                         Flag,\n-                         FILE_ATTRIBUTE_NORMAL,\n-                         NULL);\n-    if(!_hFile || _hFile == INVALID_HANDLE_VALUE)\n-        return FALSE;\n-    else\n-        return TRUE;\n-}\n-\n-BOOL Win32MapFile::isEnable()\n+BOOL Win32WritableFile::isEnable()\n {\n-    return _hFile ? TRUE : FALSE;\n+    return _hFile != INVALID_HANDLE_VALUE;\n }\n \n Win32FileLock::Win32FileLock( const std::string& fname ) :\n@@ -981,7 +823,7 @@ Status Win32Env::NewLogger( const std::string& fname, Logger** result )\n {\n     Status sRet;\n     std::string path = fname;\n-    Win32MapFile* pMapFile = new Win32MapFile(ModifyPath(path));\n+    Win32WritableFile* pMapFile = new Win32WritableFile(ModifyPath(path));\n     if(!pMapFile->isEnable()){\n         delete pMapFile;\n         *result = NULL;\n@@ -995,7 +837,7 @@ Status Win32Env::NewWritableFile( const std::string& fname, WritableFile** resul\n {\n     Status sRet;\n     std::string path = fname;\n-    Win32MapFile* pFile = new Win32MapFile(ModifyPath(path));\n+    Win32WritableFile* pFile = new Win32WritableFile(ModifyPath(path));\n     if(!pFile->isEnable()){\n         *result = NULL;\n         sRet = Status::IOError(fname,Win32::GetLastErrSz());"
      }
    ]
  },
  {
    "sha": "3694b74fa9c85e07ddbd3583154b38cd3b39f640",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjk0Yjc0ZmE5Yzg1ZTA3ZGRiZDM1ODMxNTRiMzhjZDNiMzlmNjQw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T11:10:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T11:11:11Z"
      },
      "message": "Merge pull request #6887\n\n53238ff Clarify what minrelaytxfee does (MarcoFalke)\nabd8b76 [qt] Properly display required fee instead of minTxFee (MarcoFalke)",
      "tree": {
        "sha": "b937124865bd063aa52152f4e1bb1eb6a30f025f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b937124865bd063aa52152f4e1bb1eb6a30f025f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3694b74fa9c85e07ddbd3583154b38cd3b39f640",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOzlPAAoJEHSBCwEjRsmm+xgIAKp8WqH1g14S5G4rLzeQYr9y\nxKwzU40aZf1T+gnsAx+1j1HfXKgwg/i+fjanwKa565TkQ8okbOXQQvEhp2J7oriT\nY40bgbmBQG4XKQuixiRZO0yX641mpqJr96HBmeiNYNE8N90fAIJ9f+e/lepMqf4E\nfHqTFlManvpbwrzwczVybgVo7THAQpjv8mVLzqH1szY0qWye9Emwzs5qMfV6Nsty\nslMvtfcTj57qoSzh+QrviTQCAmhfupEiD8EShWhCwYq3SBiEDszv9rC4k/hfDJ1+\nrezMgKQlC6hTEnVAHBMX2vMYQmdZTcwSRL+7om814208P9KdVRqcfRr01nPsKTU=\n=TCII\n-----END PGP SIGNATURE-----",
        "payload": "tree b937124865bd063aa52152f4e1bb1eb6a30f025f\nparent 79456524f8f5b8a4e1313acbbacf214cf3e6ee5d\nparent 53238ff0b1085352e4aaa796d0e473551e573143\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446721838 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446721871 +0100\n\nMerge pull request #6887\n\n53238ff Clarify what minrelaytxfee does (MarcoFalke)\nabd8b76 [qt] Properly display required fee instead of minTxFee (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3694b74fa9c85e07ddbd3583154b38cd3b39f640",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3694b74fa9c85e07ddbd3583154b38cd3b39f640",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3694b74fa9c85e07ddbd3583154b38cd3b39f640/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "79456524f8f5b8a4e1313acbbacf214cf3e6ee5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79456524f8f5b8a4e1313acbbacf214cf3e6ee5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79456524f8f5b8a4e1313acbbacf214cf3e6ee5d"
      },
      {
        "sha": "53238ff0b1085352e4aaa796d0e473551e573143",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53238ff0b1085352e4aaa796d0e473551e573143",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53238ff0b1085352e4aaa796d0e473551e573143"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 28,
      "deletions": 14
    },
    "files": [
      {
        "sha": "cc055900f520458f4b7199ca4ef010924bf396a2",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "patch": "@@ -439,7 +439,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n     }\n-    strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)\"),\n+    strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(::minRelayTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-printtoconsole\", _(\"Send trace/debug info to console instead of debug.log file\"));\n     if (showDebug)"
      },
      {
        "sha": "5a0406c7710eb0c930765908c8f8f4fc77c26940",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "patch": "@@ -74,7 +74,7 @@ size_t nCoinCacheUsage = 5000 * 300;\n uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n-/** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n+/** Fees smaller than this (in satoshi) are considered zero fee (for relaying, mining and transaction creation) */\n CFeeRate minRelayTxFee = CFeeRate(1000);\n \n CTxMemPool mempool(::minRelayTxFee);"
      },
      {
        "sha": "81b2597c3b0a3b9d8dd18532f848cbe88b1d7f4a",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "patch": "@@ -636,21 +636,21 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n-    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK())) + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000))) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n     toolTip2 += tr(\"This label turns red if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK()));\n+    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::GetRequiredFee(1000)));\n \n     QString toolTip3 = tr(\"This label turns red if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n     double dFeeVary;\n     if (payTxFee.GetFeePerK() > 0)\n-        dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), payTxFee.GetFeePerK()) / 1000;\n+        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), payTxFee.GetFeePerK()) / 1000;\n     else\n-        dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), mempool.estimateFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n+        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), mempool.estimateFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n     QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n \n     l3->setToolTip(toolTip4);"
      },
      {
        "sha": "d0191fa6d8aaf864ec69983037191c207b8fbf13",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "patch": "@@ -18,7 +18,7 @@\n #include \"txdb.h\" // for -dbcache defaults\n \n #ifdef ENABLE_WALLET\n-#include \"wallet/wallet.h\" // for CWallet::minTxFee\n+#include \"wallet/wallet.h\" // for CWallet::GetRequiredFee()\n #endif\n \n #include <boost/thread.hpp>"
      },
      {
        "sha": "ab277171c80077bc52dec9cba5946e6de06a6597",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "patch": "@@ -172,7 +172,7 @@ void SendCoinsDialog::setModel(WalletModel *model)\n         connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n         connect(ui->checkBoxFreeTx, SIGNAL(stateChanged(int)), this, SLOT(updateGlobalFeeVariables()));\n         connect(ui->checkBoxFreeTx, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        ui->customFee->setSingleStep(CWallet::minTxFee.GetFeePerK());\n+        ui->customFee->setSingleStep(CWallet::GetRequiredFee(1000));\n         updateFeeSectionControls();\n         updateMinFeeLabel();\n         updateSmartFeeLabel();\n@@ -569,7 +569,7 @@ void SendCoinsDialog::on_buttonMinimizeFee_clicked()\n void SendCoinsDialog::setMinimumFee()\n {\n     ui->radioCustomPerKilobyte->setChecked(true);\n-    ui->customFee->setValue(CWallet::minTxFee.GetFeePerK());\n+    ui->customFee->setValue(CWallet::GetRequiredFee(1000));\n }\n \n void SendCoinsDialog::updateFeeSectionControls()\n@@ -621,8 +621,8 @@ void SendCoinsDialog::updateFeeMinimizedLabel()\n void SendCoinsDialog::updateMinFeeLabel()\n {\n     if (model && model->getOptionsModel())\n-        ui->checkBoxMinimumFee->setText(tr(\"Pay only the minimum fee of %1\").arg(\n-            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::minTxFee.GetFeePerK()) + \"/kB\")\n+        ui->checkBoxMinimumFee->setText(tr(\"Pay only the required fee of %1\").arg(\n+            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::GetRequiredFee(1000)) + \"/kB\")\n         );\n }\n \n@@ -635,7 +635,7 @@ void SendCoinsDialog::updateSmartFeeLabel()\n     CFeeRate feeRate = mempool.estimateFee(nBlocksToConfirm);\n     if (feeRate <= CFeeRate(0)) // not enough data => minfee\n     {\n-        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::minTxFee.GetFeePerK()) + \"/kB\");\n+        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::GetRequiredFee(1000)) + \"/kB\");\n         ui->labelSmartFee2->show(); // (Smart fee not initialized yet. This usually takes a few blocks...)\n         ui->labelFeeEstimation->setText(\"\");\n     }"
      },
      {
        "sha": "cce3e40f3836e98bf400d8135386077450f59300",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "patch": "@@ -2118,6 +2118,11 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n     return true;\n }\n \n+CAmount CWallet::GetRequiredFee(unsigned int nTxBytes)\n+{\n+    return std::max(minTxFee.GetFee(nTxBytes), ::minRelayTxFee.GetFee(nTxBytes));\n+}\n+\n CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool)\n {\n     // payTxFee is user-set \"I want to pay this much\"\n@@ -2129,9 +2134,9 @@ CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarge\n     if (nFeeNeeded == 0)\n         nFeeNeeded = pool.estimateFee(nConfirmTarget).GetFee(nTxBytes);\n     // ... unless we don't have enough mempool data, in which case fall\n-    // back to a hard-coded fee\n+    // back to the required fee\n     if (nFeeNeeded == 0)\n-        nFeeNeeded = minTxFee.GetFee(nTxBytes);\n+        nFeeNeeded = GetRequiredFee(nTxBytes);\n     // prevent user from paying a non-sense fee (like 1 satoshi): 0 < fee < minRelayFee\n     if (nFeeNeeded < ::minRelayTxFee.GetFee(nTxBytes))\n         nFeeNeeded = ::minRelayTxFee.GetFee(nTxBytes);"
      },
      {
        "sha": "719f11f20654dc4abe8e4af6999989db9435e772",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3694b74fa9c85e07ddbd3583154b38cd3b39f640/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "patch": "@@ -657,7 +657,16 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n \n     static CFeeRate minTxFee;\n+    /**\n+     * Estimate the minimum fee considering user set parameters\n+     * and the required fee\n+     */\n     static CAmount GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool);\n+    /**\n+     * Return the minimum required fee taking into account the\n+     * floating relay fee and user set minimum transaction fee\n+     */\n+    static CAmount GetRequiredFee(unsigned int nTxBytes);\n \n     bool NewKeyPool();\n     bool TopUpKeyPool(unsigned int kpSize = 0);"
      }
    ]
  },
  {
    "sha": "3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDM4ZWI2M2U4YTY3NGI0ODE4Y2I1ZDVlNDYxZjFjY2Y0YjI5MzJm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T11:12:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T11:13:04Z"
      },
      "message": "Merge pull request #6934\n\nd1c3762 Revert \"Revert \"Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\"\" (Gregory Maxwell)\ne4e5334 Restore MedianTimePast for locktime. (Gregory Maxwell)",
      "tree": {
        "sha": "1017d21cb0b94b3108b079a8c0611dbc7ba5851e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1017d21cb0b94b3108b079a8c0611dbc7ba5851e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWOznAAAoJEHSBCwEjRsmm5OQIAKAAipYLHMXZPihWTyK6ZD4u\nZfyPeOjx/GWjpCkqO6xcHmyCU5aLWiU8/v6+lu7flYkcLDTX8hEf+i8YFuiNG+El\nJfPqesNj61821lxghQH3fMnoAv7jg13K9YtPrZSWIjplNylg4l0S2Bjo4ZZkGf0v\nlWETVeIMsh2dhHiJDOrmiPJ7Om8Qr2W6JW905ewaRxvCoxoAYFunqLuEFaaVVw9a\nFyIzup64Q1b8t/BS9sOtSlYPKDCukzZk3HMAVK5W7+PNjXWCIbBGRyYq4fRMIQVa\nQkWX13dopsdRJEbLoFa+EuHqCQdjpyvMJ6YpJPftKNNAqBgr1WSHtoyziGX3Hd0=\n=BKAS\n-----END PGP SIGNATURE-----",
        "payload": "tree 1017d21cb0b94b3108b079a8c0611dbc7ba5851e\nparent 3694b74fa9c85e07ddbd3583154b38cd3b39f640\nparent d1c3762ae8c8c73ddd47766041507a6c131afaf2\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446721970 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446721984 +0100\n\nMerge pull request #6934\n\nd1c3762 Revert \"Revert \"Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\"\" (Gregory Maxwell)\ne4e5334 Restore MedianTimePast for locktime. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3694b74fa9c85e07ddbd3583154b38cd3b39f640",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3694b74fa9c85e07ddbd3583154b38cd3b39f640"
      },
      {
        "sha": "d1c3762ae8c8c73ddd47766041507a6c131afaf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1c3762ae8c8c73ddd47766041507a6c131afaf2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1c3762ae8c8c73ddd47766041507a6c131afaf2"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 58,
      "deletions": 10
    },
    "files": [
      {
        "sha": "6d6ce7e0998e9248b65f4ee7fb47bb36216ed76a",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "patch": "@@ -13,4 +13,10 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n+/** Flags for LockTime() */\n+enum {\n+    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n+    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n+};\n+\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "0199832f76150080143dc7aacbc1fe4c411bcf02",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 5,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "patch": "@@ -650,10 +650,35 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n     return true;\n }\n \n-bool CheckFinalTx(const CTransaction &tx)\n+bool CheckFinalTx(const CTransaction &tx, int flags)\n {\n     AssertLockHeld(cs_main);\n-    return IsFinalTx(tx, chainActive.Height() + 1, GetAdjustedTime());\n+\n+    // By convention a negative value for flags indicates that the\n+    // current network-enforced consensus rules should be used. In\n+    // a future soft-fork scenario that would mean checking which\n+    // rules would be enforced for the next block and setting the\n+    // appropriate flags. At the present time no soft-forks are\n+    // scheduled, so no flags are set.\n+    flags = std::max(flags, 0);\n+\n+    // CheckFinalTx() uses chainActive.Height()+1 to evaluate\n+    // nLockTime because when IsFinalTx() is called within\n+    // CBlock::AcceptBlock(), the height of the block *being*\n+    // evaluated is what is used. Thus if we want to know if a\n+    // transaction can be part of the *next* block, we need to call\n+    // IsFinalTx() with one more than chainActive.Height().\n+    const int nBlockHeight = chainActive.Height() + 1;\n+\n+    // Timestamps on the other hand don't get any special treatment,\n+    // because we can't know what timestamp the next block will have,\n+    // and there aren't timestamp applications where it matters.\n+    // However this changes once median past time-locks are enforced:\n+    const int64_t nBlockTime = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n+                             ? chainActive.Tip()->GetMedianTimePast()\n+                             : GetAdjustedTime();\n+\n+    return IsFinalTx(tx, nBlockHeight, nBlockTime);\n }\n \n unsigned int GetLegacySigOpCount(const CTransaction& tx)\n@@ -797,7 +822,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     // Only accept nLockTime-using transactions that can be mined in the next\n     // block; we don't want our mempool filled up with transactions that can't\n     // be mined yet.\n-    if (!CheckFinalTx(tx))\n+    if (!CheckFinalTx(tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.DoS(0, false, REJECT_NONSTANDARD, \"non-final\");\n \n     // is it already in the memory pool?\n@@ -2723,10 +2748,15 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n-        if (!IsFinalTx(tx, nHeight, block.GetBlockTime())) {\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n+        int nLockTimeFlags = 0;\n+        int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n+                                ? pindexPrev->GetMedianTimePast()\n+                                : block.GetBlockTime();\n+        if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n             return state.DoS(10, error(\"%s: contains a non-final transaction\", __func__), REJECT_INVALID, \"bad-txns-nonfinal\");\n         }\n+    }\n \n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n     // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):"
      },
      {
        "sha": "273a450867192747110541853bac0c52c2d173cc",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "patch": "@@ -311,8 +311,10 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n  * Check if transaction will be final in the next block to be created.\n  *\n  * Calls IsFinalTx() with current block height and appropriate block time.\n+ *\n+ * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckFinalTx(const CTransaction &tx);\n+bool CheckFinalTx(const CTransaction &tx, int flags = -1);\n \n /** \n  * Closure representing one script verification"
      },
      {
        "sha": "053d9cdbc4ecca4fb22f747fb3d2551206f64d3b",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "patch": "@@ -148,6 +148,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n         pblock->nTime = GetAdjustedTime();\n+        const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n         CCoinsViewCache view(pcoinsTip);\n \n         // Priority order to process transactions\n@@ -162,7 +163,12 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n              mi != mempool.mapTx.end(); ++mi)\n         {\n             const CTransaction& tx = mi->GetTx();\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n+\n+            int64_t nLockTimeCutoff = (STANDARD_LOCKTIME_VERIFY_FLAGS & LOCKTIME_MEDIAN_TIME_PAST)\n+                                    ? nMedianTimePast\n+                                    : pblock->GetBlockTime();\n+\n+            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, nLockTimeCutoff))\n                 continue;\n \n             COrphan* porphan = NULL;"
      },
      {
        "sha": "f269e8d4762e441f5c73134ddfee6b044070f307",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "patch": "@@ -43,6 +43,9 @@ static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY\n /** For convenience, standard but not mandatory verify flags. */\n static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;\n \n+/** Used as the flags parameter to CheckFinalTx() in non-consensus code */\n+static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_MEDIAN_TIME_PAST;\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n     /**\n      * Check for standard transaction types"
      },
      {
        "sha": "827525783a36913a3d241804d4f746243032f84c",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"chainparams.h\"\n #include \"coins.h\"\n+#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -229,7 +230,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.nLockTime = chainActive.Tip()->nHeight+1;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx));\n+    BOOST_CHECK(!CheckFinalTx(tx, LOCKTIME_MEDIAN_TIME_PAST));\n \n     // time locked\n     tx2.vin.resize(1);\n@@ -243,7 +244,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx2.nLockTime = chainActive.Tip()->GetMedianTimePast()+1;\n     hash = tx2.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx2, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(!CheckFinalTx(tx2));\n+    BOOST_CHECK(!CheckFinalTx(tx2, LOCKTIME_MEDIAN_TIME_PAST));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n \n@@ -261,7 +262,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     //BOOST_CHECK(CheckFinalTx(tx2));\n \n     BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n-    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 3);\n+    BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 2);\n     delete pblocktemplate;\n \n     chainActive.Tip()->nHeight--;"
      }
    ]
  },
  {
    "sha": "849a7e645323062878604589df97a1cd75517eb1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDlhN2U2NDUzMjMwNjI4Nzg2MDQ1ODlkZjk3YTFjZDc1NTE3ZWIx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T22:06:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T22:06:34Z"
      },
      "message": "Merge pull request #6948\n\n22e7807 Always flush block and undo when switching to new file (Pieter Wuille)",
      "tree": {
        "sha": "9b484d97beb56c4b1d47b5ee8cf84109680c4b2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b484d97beb56c4b1d47b5ee8cf84109680c4b2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/849a7e645323062878604589df97a1cd75517eb1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWO9LqAAoJEHSBCwEjRsmmDjgH/jku7wPJf10WkHrD6bOQ+XHM\nhkOsGd/bAF6OSyIe58DaPnIINmL7lMY8fyksF4ey1jdBS/c5b3GTKBMce8LXtWbm\n06T1bBZFthvwwEk9+mot57i4bJc4gGUiGvl455lYu+0DhBp46V0pqUOZLTcf2aAX\n8PVp/n4mat3cjPOD8MigNQZs63ldMofohnt+og4YjhrELFP2Aa5NtM9OrW6AE4Qo\nbyI9u5MMOFUVbpTkWhUA3kB9oSMrIuUctiSXWA/e84T0q6Ihv1Qoka/XAQFFYVbD\nXAmRDumw1zlxuRfLxZtEzVx9qEdrBuVj57q+hwnkq6kysMXbMAxmFLS6LvfOlR8=\n=sIys\n-----END PGP SIGNATURE-----",
        "payload": "tree 9b484d97beb56c4b1d47b5ee8cf84109680c4b2d\nparent 3038eb63e8a674b4818cb5d5e461f1ccf4b2932f\nparent 22e780737db57bcb18b3824eb8158e19a4775cb6\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446761183 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446761194 +0100\n\nMerge pull request #6948\n\n22e7807 Always flush block and undo when switching to new file (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/849a7e645323062878604589df97a1cd75517eb1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/849a7e645323062878604589df97a1cd75517eb1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/849a7e645323062878604589df97a1cd75517eb1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f"
      },
      {
        "sha": "22e780737db57bcb18b3824eb8158e19a4775cb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22e780737db57bcb18b3824eb8158e19a4775cb6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22e780737db57bcb18b3824eb8158e19a4775cb6"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9016fe42a0c90dd1f20e86082274d7610f1b250b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/849a7e645323062878604589df97a1cd75517eb1/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/849a7e645323062878604589df97a1cd75517eb1/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=849a7e645323062878604589df97a1cd75517eb1",
        "patch": "@@ -2542,8 +2542,6 @@ bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAdd\n \n     if (!fKnown) {\n         while (vinfoBlockFile[nFile].nSize + nAddSize >= MAX_BLOCKFILE_SIZE) {\n-            LogPrintf(\"Leaving block file %i: %s\\n\", nFile, vinfoBlockFile[nFile].ToString());\n-            FlushBlockFile(true);\n             nFile++;\n             if (vinfoBlockFile.size() <= nFile) {\n                 vinfoBlockFile.resize(nFile + 1);\n@@ -2553,7 +2551,14 @@ bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAdd\n         pos.nPos = vinfoBlockFile[nFile].nSize;\n     }\n \n-    nLastBlockFile = nFile;\n+    if (nFile != nLastBlockFile) {\n+        if (!fKnown) {\n+            LogPrintf(\"Leaving block file %i: %s\\n\", nFile, vinfoBlockFile[nFile].ToString());\n+        }\n+        FlushBlockFile(!fKnown);\n+        nLastBlockFile = nFile;\n+    }\n+\n     vinfoBlockFile[nFile].AddBlock(nHeight, nTime);\n     if (fKnown)\n         vinfoBlockFile[nFile].nSize = std::max(pos.nPos + nAddSize, vinfoBlockFile[nFile].nSize);"
      }
    ]
  },
  {
    "sha": "e0eeb672f2dbf21e850ca5c3053065b74ee03046",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGVlYjY3MmYyZGJmMjFlODUwY2E1YzMwNTMwNjViNzRlZTAzMDQ2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-02T21:23:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-05T22:28:02Z"
      },
      "message": "[trivial] clang-format: Set AlignAfterOpenBracket: false",
      "tree": {
        "sha": "ff97844e93adf38edec499a3ccc5434382f6d7b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff97844e93adf38edec499a3ccc5434382f6d7b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0eeb672f2dbf21e850ca5c3053065b74ee03046",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0eeb672f2dbf21e850ca5c3053065b74ee03046",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0eeb672f2dbf21e850ca5c3053065b74ee03046",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0eeb672f2dbf21e850ca5c3053065b74ee03046/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0af8fe45aeac9dc2391f6f737b8b3c210142b19c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0af8fe45aeac9dc2391f6f737b8b3c210142b19c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0af8fe45aeac9dc2391f6f737b8b3c210142b19c"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "129f062ef8b72712d62c0981ae1e6bcff82e7f98",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0eeb672f2dbf21e850ca5c3053065b74ee03046/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0eeb672f2dbf21e850ca5c3053065b74ee03046/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=e0eeb672f2dbf21e850ca5c3053065b74ee03046",
        "patch": "@@ -1,4 +1,6 @@\n+Language:        Cpp\n AccessModifierOffset: -4\n+AlignAfterOpenBracket: false\n AlignEscapedNewlinesLeft: true\n AlignTrailingComments: true\n AllowAllParametersOfDeclarationOnNextLine: false\n@@ -26,7 +28,6 @@ IndentCaseLabels: false\n IndentFunctionDeclarationAfterType: false\n IndentWidth:     4\n KeepEmptyLinesAtTheStartOfBlocks: false\n-Language:        Cpp\n MaxEmptyLinesToKeep: 2\n NamespaceIndentation: None\n ObjCSpaceAfterProperty: false"
      }
    ]
  },
  {
    "sha": "e167af2acd0bfc428ed3c68303c42c996a8df435",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTY3YWYyYWNkMGJmYzQyOGVkM2M2ODMwM2M0MmM5OTZhOGRmNDM1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-04T12:22:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-05T22:29:29Z"
      },
      "message": "[doc] Remove excessive white space",
      "tree": {
        "sha": "8b8ed12613b3a19aa519de68f707896fae31fb75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b8ed12613b3a19aa519de68f707896fae31fb75"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e167af2acd0bfc428ed3c68303c42c996a8df435",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e167af2acd0bfc428ed3c68303c42c996a8df435",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e167af2acd0bfc428ed3c68303c42c996a8df435",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e167af2acd0bfc428ed3c68303c42c996a8df435/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0eeb672f2dbf21e850ca5c3053065b74ee03046",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0eeb672f2dbf21e850ca5c3053065b74ee03046",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0eeb672f2dbf21e850ca5c3053065b74ee03046"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "02498e5c4b979a5a4315e33282eb8067d443c877",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e167af2acd0bfc428ed3c68303c42c996a8df435/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e167af2acd0bfc428ed3c68303c42c996a8df435/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=e167af2acd0bfc428ed3c68303c42c996a8df435",
        "patch": "@@ -32,7 +32,7 @@ Instructions: Homebrew\n \n #### Install dependencies using Homebrew\n \n-        brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5 libevent\n+    brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5 libevent\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. As such, building with Qt5 is recommended.\n "
      },
      {
        "sha": "f84644a3b140d35820becfc5aa9c5decf1c498db",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e167af2acd0bfc428ed3c68303c42c996a8df435/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e167af2acd0bfc428ed3c68303c42c996a8df435/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=e167af2acd0bfc428ed3c68303c42c996a8df435",
        "patch": "@@ -61,24 +61,24 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-        sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n+    sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n \n On Ubuntu 15.10+ there are generic names for the individual boost development\n packages, so the following can be used to only install necessary parts of\n boost:\n \n-        apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-base-dev\n+    apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-base-dev\n \n For Ubuntu before 15.10, or Debian 7 and later libboost-all-dev has to be installed:\n \n-        sudo apt-get install libboost-all-dev\n+    sudo apt-get install libboost-all-dev\n \n BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n You can add the repository and install using the following commands:\n \n-        sudo add-apt-repository ppa:bitcoin/bitcoin\n-        sudo apt-get update\n-        sudo apt-get install libdb4.8-dev libdb4.8++-dev\n+    sudo add-apt-repository ppa:bitcoin/bitcoin\n+    sudo apt-get update\n+    sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n Ubuntu and Debian have their own libdb-dev and libdb++-dev packages, but these will install\n BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distributed executables which\n@@ -89,11 +89,11 @@ See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n \n Optional:\n \n-        sudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n+    sudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n \n ZMQ dependencies:\n \n-        sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n+    sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n \n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n@@ -213,6 +213,7 @@ Hardening enables the following features:\n     \tscanelf -e ./bitcoin\n \n     The output should contain:\n+\n      TYPE\n     ET_DYN\n "
      }
    ]
  },
  {
    "sha": "4ee149a6db25cde31432f83369b40c92be13021c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWUxNDlhNmRiMjVjZGUzMTQzMmY4MzM2OWI0MGM5MmJlMTMwMjFj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T22:39:35Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-05T22:39:48Z"
      },
      "message": "Merge pull request #6955\n\ne167af2 [doc] Remove excessive white space (MarcoFalke)\ne0eeb67 [trivial] clang-format: Set AlignAfterOpenBracket: false (MarcoFalke)\n0af8fe4 devtools: Update README.md (MarcoFalke)",
      "tree": {
        "sha": "9d6dcc5b846e22702fd016327d0701036d75b242",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d6dcc5b846e22702fd016327d0701036d75b242"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ee149a6db25cde31432f83369b40c92be13021c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWO9q0AAoJEHSBCwEjRsmmuPgIALcbxQWsSZAdCFsAzV+aFo6q\njoZ+KGaMevvdWRZSG3Fq+q6qLCYqkysQsEhHn9ny5/kfF0IqjCmtE39mGjonHdE2\nzdcFHLqit+VvGwzNdxlgRXGeyA1TYpL58sZv4PN9iTivxaAaifEcDiLhF0SMfVBH\nml2c5vDD4YEP9z0TG9+ou4r0K7iKhE/2EY+JvUDBf1qdafTwGhXgx0nWIRzv3WOE\nuTMdEAEKjBbOYO+nAQJPSUw4nZpA0ZFQOAUxydX0bYQE8QLB71+q41K2ia3gsxiu\nFaKHjn410JwhDkZFhM82VoGwVyIOQXF1ev6ZKZG+FfqvJ++azm6IwS5fiOOv134=\n=YoBW\n-----END PGP SIGNATURE-----",
        "payload": "tree 9d6dcc5b846e22702fd016327d0701036d75b242\nparent 849a7e645323062878604589df97a1cd75517eb1\nparent e167af2acd0bfc428ed3c68303c42c996a8df435\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1446763175 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1446763188 +0100\n\nMerge pull request #6955\n\ne167af2 [doc] Remove excessive white space (MarcoFalke)\ne0eeb67 [trivial] clang-format: Set AlignAfterOpenBracket: false (MarcoFalke)\n0af8fe4 devtools: Update README.md (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee149a6db25cde31432f83369b40c92be13021c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee149a6db25cde31432f83369b40c92be13021c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee149a6db25cde31432f83369b40c92be13021c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "849a7e645323062878604589df97a1cd75517eb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/849a7e645323062878604589df97a1cd75517eb1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/849a7e645323062878604589df97a1cd75517eb1"
      },
      {
        "sha": "e167af2acd0bfc428ed3c68303c42c996a8df435",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e167af2acd0bfc428ed3c68303c42c996a8df435",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e167af2acd0bfc428ed3c68303c42c996a8df435"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 17,
      "deletions": 10
    },
    "files": [
      {
        "sha": "2e70c5adcc8e8129018fc364a8c428d61ef4f31f",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee149a6db25cde31432f83369b40c92be13021c/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee149a6db25cde31432f83369b40c92be13021c/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=4ee149a6db25cde31432f83369b40c92be13021c",
        "patch": "@@ -62,6 +62,11 @@ optimize-pngs.py\n A script to optimize png files in the bitcoin\n repository (requires pngcrush).\n \n+security-check.py and test-security-check.py\n+============================================\n+\n+Perform basic ELF security checks on a series of executables.\n+\n symbol-check.py\n ===============\n "
      },
      {
        "sha": "02498e5c4b979a5a4315e33282eb8067d443c877",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee149a6db25cde31432f83369b40c92be13021c/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee149a6db25cde31432f83369b40c92be13021c/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=4ee149a6db25cde31432f83369b40c92be13021c",
        "patch": "@@ -32,7 +32,7 @@ Instructions: Homebrew\n \n #### Install dependencies using Homebrew\n \n-        brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5 libevent\n+    brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5 libevent\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. As such, building with Qt5 is recommended.\n "
      },
      {
        "sha": "57853a9c9d2006b7239702a746ab065c70f22447",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee149a6db25cde31432f83369b40c92be13021c/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee149a6db25cde31432f83369b40c92be13021c/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=4ee149a6db25cde31432f83369b40c92be13021c",
        "patch": "@@ -61,24 +61,24 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-        sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n+    sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n \n On Ubuntu 15.10+ there are generic names for the individual boost development\n packages, so the following can be used to only install necessary parts of\n boost:\n \n-        apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-base-dev\n+    apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-base-dev\n \n For Ubuntu before 15.10, or Debian 7 and later libboost-all-dev has to be installed:\n \n-        sudo apt-get install libboost-all-dev\n+    sudo apt-get install libboost-all-dev\n \n BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n You can add the repository and install using the following commands:\n \n-        sudo add-apt-repository ppa:bitcoin/bitcoin\n-        sudo apt-get update\n-        sudo apt-get install libdb4.8-dev libdb4.8++-dev\n+    sudo add-apt-repository ppa:bitcoin/bitcoin\n+    sudo apt-get update\n+    sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n Ubuntu and Debian have their own libdb-dev and libdb++-dev packages, but these will install\n BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distributed executables which\n@@ -89,11 +89,11 @@ See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n \n Optional:\n \n-        sudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n+    sudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n \n ZMQ dependencies:\n \n-        sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n+    sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n \n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n@@ -213,6 +213,7 @@ Hardening enables the following features:\n     \tscanelf -e ./bitcoin\n \n     The output should contain:\n+\n      TYPE\n     ET_DYN\n "
      },
      {
        "sha": "129f062ef8b72712d62c0981ae1e6bcff82e7f98",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee149a6db25cde31432f83369b40c92be13021c/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee149a6db25cde31432f83369b40c92be13021c/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=4ee149a6db25cde31432f83369b40c92be13021c",
        "patch": "@@ -1,4 +1,6 @@\n+Language:        Cpp\n AccessModifierOffset: -4\n+AlignAfterOpenBracket: false\n AlignEscapedNewlinesLeft: true\n AlignTrailingComments: true\n AllowAllParametersOfDeclarationOnNextLine: false\n@@ -26,7 +28,6 @@ IndentCaseLabels: false\n IndentFunctionDeclarationAfterType: false\n IndentWidth:     4\n KeepEmptyLinesAtTheStartOfBlocks: false\n-Language:        Cpp\n MaxEmptyLinesToKeep: 2\n NamespaceIndentation: None\n ObjCSpaceAfterProperty: false"
      }
    ]
  },
  {
    "sha": "9ea7762e2c5422a66698371b563526d443299f0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZWE3NzYyZTJjNTQyMmE2NjY5ODM3MWI1NjM1MjZkNDQzMjk5ZjBh",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-11-06T23:05:32Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-11-06T23:19:31Z"
      },
      "message": "Use Pieter's signing subkey instead of his primary key\n\nThis commit is signed.",
      "tree": {
        "sha": "9f9619b09f41f81d18f75d16ddbb281019e3e919",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f9619b09f41f81d18f75d16ddbb281019e3e919"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ea7762e2c5422a66698371b563526d443299f0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ea7762e2c5422a66698371b563526d443299f0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ea7762e2c5422a66698371b563526d443299f0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ea7762e2c5422a66698371b563526d443299f0a/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ee149a6db25cde31432f83369b40c92be13021c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee149a6db25cde31432f83369b40c92be13021c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee149a6db25cde31432f83369b40c92be13021c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "fcf2b98e7798c74ef830795528254c2779462b3f",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ea7762e2c5422a66698371b563526d443299f0a/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ea7762e2c5422a66698371b563526d443299f0a/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=9ea7762e2c5422a66698371b563526d443299f0a",
        "patch": "@@ -3,4 +3,4 @@\n 01CDF4627A3B88AAE4A571C87588242FBE38D3A8\n AF8BE07C7049F3A26B239D5325B3083201782B2F\n 81291FA67D2C379A006A053FEAB5AF94D9E9ABE7\n-133EAC179436F14A5CF1B794860FEB804E669320\n+3F1888C6DCA92A6499C4911FDBA1A67379A1A931"
      }
    ]
  },
  {
    "sha": "77f1f59d12b8ea097e8ccba83bd329011817bdf8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2YxZjU5ZDEyYjhlYTA5N2U4Y2NiYTgzYmQzMjkwMTE4MTdiZGY4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-11-06T23:12:30Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-11-06T23:21:14Z"
      },
      "message": "Benchmark sanity checks and fork checks in ConnectBlock",
      "tree": {
        "sha": "3b3077d2a8b2ae28a756b75739f1f58d3eba3854",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b3077d2a8b2ae28a756b75739f1f58d3eba3854"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77f1f59d12b8ea097e8ccba83bd329011817bdf8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f1f59d12b8ea097e8ccba83bd329011817bdf8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77f1f59d12b8ea097e8ccba83bd329011817bdf8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f1f59d12b8ea097e8ccba83bd329011817bdf8/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ee149a6db25cde31432f83369b40c92be13021c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee149a6db25cde31432f83369b40c92be13021c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee149a6db25cde31432f83369b40c92be13021c"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "a93a2d850568da07ec533c6ffa7b2d0eaa1dc7d9",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77f1f59d12b8ea097e8ccba83bd329011817bdf8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77f1f59d12b8ea097e8ccba83bd329011817bdf8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=77f1f59d12b8ea097e8ccba83bd329011817bdf8",
        "patch": "@@ -1711,6 +1711,8 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+static int64_t nTimeCheck = 0;\n+static int64_t nTimeForks = 0;\n static int64_t nTimeVerify = 0;\n static int64_t nTimeConnect = 0;\n static int64_t nTimeIndex = 0;\n@@ -1721,6 +1723,9 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n {\n     const CChainParams& chainparams = Params();\n     AssertLockHeld(cs_main);\n+\n+    int64_t nTimeStart = GetTimeMicros();\n+\n     // Check it again in case a previous version let a bad block in\n     if (!CheckBlock(block, state, !fJustCheck, !fJustCheck))\n         return false;\n@@ -1746,6 +1751,9 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         }\n     }\n \n+    int64_t nTime1 = GetTimeMicros(); nTimeCheck += nTime1 - nTimeStart;\n+    LogPrint(\"bench\", \"    - Sanity checks: %.2fms [%.2fs]\\n\", 0.001 * (nTime1 - nTimeStart), nTimeCheck * 0.000001);\n+\n     // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n     // unless those are already completely spent.\n     // If such overwrites are allowed, coinbases and transactions depending upon those\n@@ -1788,11 +1796,13 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n     }\n \n+    int64_t nTime2 = GetTimeMicros(); nTimeForks += nTime2 - nTime1;\n+    LogPrint(\"bench\", \"    - Fork checks: %.2fms [%.2fs]\\n\", 0.001 * (nTime2 - nTime1), nTimeForks * 0.000001);\n+\n     CBlockUndo blockundo;\n \n     CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads ? &scriptcheckqueue : NULL);\n \n-    int64_t nTimeStart = GetTimeMicros();\n     CAmount nFees = 0;\n     int nInputs = 0;\n     unsigned int nSigOps = 0;\n@@ -1845,8 +1855,8 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         vPos.push_back(std::make_pair(tx.GetHash(), pos));\n         pos.nTxOffset += ::GetSerializeSize(tx, SER_DISK, CLIENT_VERSION);\n     }\n-    int64_t nTime1 = GetTimeMicros(); nTimeConnect += nTime1 - nTimeStart;\n-    LogPrint(\"bench\", \"      - Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin) [%.2fs]\\n\", (unsigned)block.vtx.size(), 0.001 * (nTime1 - nTimeStart), 0.001 * (nTime1 - nTimeStart) / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * (nTime1 - nTimeStart) / (nInputs-1), nTimeConnect * 0.000001);\n+    int64_t nTime3 = GetTimeMicros(); nTimeConnect += nTime3 - nTime2;\n+    LogPrint(\"bench\", \"      - Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin) [%.2fs]\\n\", (unsigned)block.vtx.size(), 0.001 * (nTime3 - nTime2), 0.001 * (nTime3 - nTime2) / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * (nTime3 - nTime2) / (nInputs-1), nTimeConnect * 0.000001);\n \n     CAmount blockReward = nFees + GetBlockSubsidy(pindex->nHeight, chainparams.GetConsensus());\n     if (block.vtx[0].GetValueOut() > blockReward)\n@@ -1857,8 +1867,8 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     if (!control.Wait())\n         return state.DoS(100, false);\n-    int64_t nTime2 = GetTimeMicros(); nTimeVerify += nTime2 - nTimeStart;\n-    LogPrint(\"bench\", \"    - Verify %u txins: %.2fms (%.3fms/txin) [%.2fs]\\n\", nInputs - 1, 0.001 * (nTime2 - nTimeStart), nInputs <= 1 ? 0 : 0.001 * (nTime2 - nTimeStart) / (nInputs-1), nTimeVerify * 0.000001);\n+    int64_t nTime4 = GetTimeMicros(); nTimeVerify += nTime4 - nTime2;\n+    LogPrint(\"bench\", \"    - Verify %u txins: %.2fms (%.3fms/txin) [%.2fs]\\n\", nInputs - 1, 0.001 * (nTime4 - nTime2), nInputs <= 1 ? 0 : 0.001 * (nTime4 - nTime2) / (nInputs-1), nTimeVerify * 0.000001);\n \n     if (fJustCheck)\n         return true;\n@@ -1889,16 +1899,16 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     // add this block to the view's block chain\n     view.SetBestBlock(pindex->GetBlockHash());\n \n-    int64_t nTime3 = GetTimeMicros(); nTimeIndex += nTime3 - nTime2;\n-    LogPrint(\"bench\", \"    - Index writing: %.2fms [%.2fs]\\n\", 0.001 * (nTime3 - nTime2), nTimeIndex * 0.000001);\n+    int64_t nTime5 = GetTimeMicros(); nTimeIndex += nTime5 - nTime4;\n+    LogPrint(\"bench\", \"    - Index writing: %.2fms [%.2fs]\\n\", 0.001 * (nTime5 - nTime4), nTimeIndex * 0.000001);\n \n     // Watch for changes to the previous coinbase transaction.\n     static uint256 hashPrevBestCoinBase;\n     GetMainSignals().UpdatedTransaction(hashPrevBestCoinBase);\n     hashPrevBestCoinBase = block.vtx[0].GetHash();\n \n-    int64_t nTime4 = GetTimeMicros(); nTimeCallbacks += nTime4 - nTime3;\n-    LogPrint(\"bench\", \"    - Callbacks: %.2fms [%.2fs]\\n\", 0.001 * (nTime4 - nTime3), nTimeCallbacks * 0.000001);\n+    int64_t nTime6 = GetTimeMicros(); nTimeCallbacks += nTime6 - nTime5;\n+    LogPrint(\"bench\", \"    - Callbacks: %.2fms [%.2fs]\\n\", 0.001 * (nTime6 - nTime5), nTimeCallbacks * 0.000001);\n \n     return true;\n }"
      }
    ]
  },
  {
    "sha": "70857287869fa33f4bcbe346fccd86f9facdece5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDg1NzI4Nzg2OWZhMzNmNGJjYmUzNDZmY2NkODZmOWZhY2RlY2U1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-07T19:33:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-08T19:01:08Z"
      },
      "message": "doc: there is no libboost-base-dev, add missing sudo\n\n- There is no libboost-base-dev, no idea how I ended up with this\n    - Without that, installing separate boost packages works fine on both\n      Ubuntu 14.04 and Debian 7 (tested on VMs), this did not use to be\n      the case, AFAIK.\n- Add a missing 'sudo' for consistency\n- Need `bsdmainutils` for `hexdump` (for the tests)",
      "tree": {
        "sha": "ae0c972703becdd318db0b86c2b1a61a7bf2cc13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae0c972703becdd318db0b86c2b1a61a7bf2cc13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70857287869fa33f4bcbe346fccd86f9facdece5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70857287869fa33f4bcbe346fccd86f9facdece5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70857287869fa33f4bcbe346fccd86f9facdece5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70857287869fa33f4bcbe346fccd86f9facdece5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ee149a6db25cde31432f83369b40c92be13021c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee149a6db25cde31432f83369b40c92be13021c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee149a6db25cde31432f83369b40c92be13021c"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e1f2ce54d3ec884a7a5a6fe0ecdcdbfaa90620bf",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70857287869fa33f4bcbe346fccd86f9facdece5/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70857287869fa33f4bcbe346fccd86f9facdece5/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=70857287869fa33f4bcbe346fccd86f9facdece5",
        "patch": "@@ -61,15 +61,15 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-    sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n+    sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev bsdmainutils\n \n-On Ubuntu 15.10+ there are generic names for the individual boost development\n-packages, so the following can be used to only install necessary parts of\n-boost:\n+On at least Ubuntu 14.04+ and Debian 7+ there are generic names for the\n+individual boost development packages, so the following can be used to only\n+install necessary parts of boost:\n \n-    apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-base-dev\n+    sudo apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev\n \n-For Ubuntu before 15.10, or Debian 7 and later libboost-all-dev has to be installed:\n+If that doesn't work, you can install all boost development packages with:\n \n     sudo apt-get install libboost-all-dev\n "
      }
    ]
  },
  {
    "sha": "2980a18572dbe6173c41afc037b0cefe367d935c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTgwYTE4NTcyZGJlNjE3M2M0MWFmYzAzN2IwY2VmZTM2N2Q5MzVj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T07:40:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T07:44:19Z"
      },
      "message": "Fix crash in validateaddress with -disablewallet\n\nFix a null pointer dereference in validateaddress with -disablewallet. Also add a regression testcase.",
      "tree": {
        "sha": "84c50cb7b8447730453204ff1739651542b1e9e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84c50cb7b8447730453204ff1739651542b1e9e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2980a18572dbe6173c41afc037b0cefe367d935c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2980a18572dbe6173c41afc037b0cefe367d935c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2980a18572dbe6173c41afc037b0cefe367d935c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2980a18572dbe6173c41afc037b0cefe367d935c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ee149a6db25cde31432f83369b40c92be13021c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee149a6db25cde31432f83369b40c92be13021c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee149a6db25cde31432f83369b40c92be13021c"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 35,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c23dcbdb7c7a4c2057a4395b5dc7e1c9e33f8a5b",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2980a18572dbe6173c41afc037b0cefe367d935c/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2980a18572dbe6173c41afc037b0cefe367d935c/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=2980a18572dbe6173c41afc037b0cefe367d935c",
        "patch": "@@ -68,6 +68,7 @@\n     'decodescript.py',\n     'p2p-fullblocktest.py',\n     'blockchain.py',\n+    'disablewallet.py',\n ]\n testScriptsExt = [\n     'bip65-cltv.py',"
      },
      {
        "sha": "4cb01575e2805ec69b0cdc2fb440f30b70a56810",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2980a18572dbe6173c41afc037b0cefe367d935c/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2980a18572dbe6173c41afc037b0cefe367d935c/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=2980a18572dbe6173c41afc037b0cefe367d935c",
        "patch": "@@ -0,0 +1,32 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Exercise API with -disablewallet.\n+#\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class DisableWalletTest (BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 1)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(1, self.options.tmpdir, [['-disablewallet']])\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test (self):\n+        # Check regression: https://github.com/bitcoin/bitcoin/issues/6963#issuecomment-154548880\n+        x = self.nodes[0].validateaddress('3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy')\n+        assert(x['isvalid'] == False)\n+        x = self.nodes[0].validateaddress('mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ')\n+        assert(x['isvalid'] == True)\n+\n+if __name__ == '__main__':\n+    DisableWalletTest ().main ()"
      },
      {
        "sha": "0c656d5cf15483863215091e630109997cb5f6ab",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2980a18572dbe6173c41afc037b0cefe367d935c/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2980a18572dbe6173c41afc037b0cefe367d935c/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=2980a18572dbe6173c41afc037b0cefe367d935c",
        "patch": "@@ -117,7 +117,7 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n         UniValue obj(UniValue::VOBJ);\n         CPubKey vchPubKey;\n         obj.push_back(Pair(\"isscript\", false));\n-        if (pwalletMain->GetPubKey(keyID, vchPubKey)) {\n+        if (pwalletMain && pwalletMain->GetPubKey(keyID, vchPubKey)) {\n             obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n             obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n         }\n@@ -128,7 +128,7 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n         UniValue obj(UniValue::VOBJ);\n         CScript subscript;\n         obj.push_back(Pair(\"isscript\", true));\n-        if (pwalletMain->GetCScript(scriptID, subscript)) {\n+        if (pwalletMain && pwalletMain->GetCScript(scriptID, subscript)) {\n             std::vector<CTxDestination> addresses;\n             txnouttype whichType;\n             int nRequired;"
      }
    ]
  },
  {
    "sha": "6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGQzYTQ0Y2UyY2I0NDgwMDU0YWUwY2EwOTYwZjU4OGE5YWQ4ZDI1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-06T12:22:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-09T10:40:52Z"
      },
      "message": "translations: Don't translate markdown or force English grammar",
      "tree": {
        "sha": "b7fe08b3cc7bcc7127dc10d2ffcba1b6f4df204b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7fe08b3cc7bcc7127dc10d2ffcba1b6f4df204b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a95a18562b2be0b738ec5dd36670c8098c5f255"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "55ed153f1cb61df9bd2a691c488f144394406cbc",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25",
        "patch": "@@ -317,7 +317,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     }\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n     strUsage += HelpMessageOpt(\"-dbcache=<n>\", strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache));\n-    strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file on startup\"));\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n@@ -379,14 +379,14 @@ std::string HelpMessage(HelpMessageMode mode)\n             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(payTxFee.GetFeePerK())));\n-    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n-    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat on startup\"));\n     strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n     strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(maxTxFee)));\n-    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n     strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n     strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n@@ -499,6 +499,7 @@ std::string HelpMessage(HelpMessageMode mode)\n \n std::string LicenseInfo()\n {\n+    // todo: remove urls from translations on next change\n     return FormatParagraph(strprintf(_(\"Copyright (C) 2009-%i The Bitcoin Core Developers\"), COPYRIGHT_YEAR)) + \"\\n\" +\n            \"\\n\" +\n            FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +"
      },
      {
        "sha": "9e4d77bb156195228bb6398e81103ed9ac312bc9",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25",
        "patch": "@@ -312,8 +312,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n         if(u != model->getOptionsModel()->getDisplayUnit())\n             alternativeUnits.append(BitcoinUnits::formatHtmlWithUnit(u, totalAmount));\n     }\n-    questionString.append(tr(\"Total Amount %1<span style='font-size:10pt;font-weight:normal;'><br />(=%2)</span>\")\n-        .arg(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount))\n+    questionString.append(tr(\"Total Amount %1\")\n+        .arg(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount)));\n+    questionString.append(QString(\"<span style='font-size:10pt;font-weight:normal;'><br />(=%2)</span>\")\n         .arg(alternativeUnits.join(\" \" + tr(\"or\") + \"<br />\")));\n \n     QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm send coins\"),"
      }
    ]
  },
  {
    "sha": "92701b3b891884706390c2bfff3209310656aa1e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjcwMWIzYjg5MTg4NDcwNjM5MGMyYmZmZjMyMDkzMTA2NTZhYTFl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T10:57:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T10:57:31Z"
      },
      "message": "Merge pull request #6970\n\n2980a18 Fix crash in validateaddress with -disablewallet (Wladimir J. van der Laan)",
      "tree": {
        "sha": "84c50cb7b8447730453204ff1739651542b1e9e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84c50cb7b8447730453204ff1739651542b1e9e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92701b3b891884706390c2bfff3209310656aa1e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQHwbAAoJEHSBCwEjRsmm0mwH+QFim04mLRC7bI8w1TdPosha\npr5hdunUqdSWF9n0zpOpy0uG/NUI6yP5kwLStLvdid8drgEk8aJQ/wbVlDuMED2f\nwtGAWY08WnCAFlCGYwxjOeNjikZI+O0FKv5lR1zwo2O+6/LOxwCmiieGzErSnATD\nV7DGKZ9apLz1UW93aTI+/sRkaFbxFtQ/PvajOPx3x4Z60bYGLZFILqwnwBLj0626\n7ZadTG7Iad+TXYdYZWPrHIizMexLLLRocIBtKEGflS6c+e9r7Ja+UJ2P/poPAgnI\nhImxAhDpEFxEBhlLzjcF0mcpWYRpqCSVt2GQ6AYFCUE2BxVT06Uv54B09TUp3dk=\n=78iO\n-----END PGP SIGNATURE-----",
        "payload": "tree 84c50cb7b8447730453204ff1739651542b1e9e3\nparent 4ee149a6db25cde31432f83369b40c92be13021c\nparent 2980a18572dbe6173c41afc037b0cefe367d935c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447066630 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447066651 +0100\n\nMerge pull request #6970\n\n2980a18 Fix crash in validateaddress with -disablewallet (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92701b3b891884706390c2bfff3209310656aa1e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92701b3b891884706390c2bfff3209310656aa1e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92701b3b891884706390c2bfff3209310656aa1e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ee149a6db25cde31432f83369b40c92be13021c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee149a6db25cde31432f83369b40c92be13021c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee149a6db25cde31432f83369b40c92be13021c"
      },
      {
        "sha": "2980a18572dbe6173c41afc037b0cefe367d935c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2980a18572dbe6173c41afc037b0cefe367d935c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2980a18572dbe6173c41afc037b0cefe367d935c"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 35,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c23dcbdb7c7a4c2057a4395b5dc7e1c9e33f8a5b",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92701b3b891884706390c2bfff3209310656aa1e/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92701b3b891884706390c2bfff3209310656aa1e/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=92701b3b891884706390c2bfff3209310656aa1e",
        "patch": "@@ -68,6 +68,7 @@\n     'decodescript.py',\n     'p2p-fullblocktest.py',\n     'blockchain.py',\n+    'disablewallet.py',\n ]\n testScriptsExt = [\n     'bip65-cltv.py',"
      },
      {
        "sha": "4cb01575e2805ec69b0cdc2fb440f30b70a56810",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92701b3b891884706390c2bfff3209310656aa1e/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92701b3b891884706390c2bfff3209310656aa1e/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=92701b3b891884706390c2bfff3209310656aa1e",
        "patch": "@@ -0,0 +1,32 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Exercise API with -disablewallet.\n+#\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class DisableWalletTest (BitcoinTestFramework):\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 1)\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(1, self.options.tmpdir, [['-disablewallet']])\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test (self):\n+        # Check regression: https://github.com/bitcoin/bitcoin/issues/6963#issuecomment-154548880\n+        x = self.nodes[0].validateaddress('3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy')\n+        assert(x['isvalid'] == False)\n+        x = self.nodes[0].validateaddress('mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ')\n+        assert(x['isvalid'] == True)\n+\n+if __name__ == '__main__':\n+    DisableWalletTest ().main ()"
      },
      {
        "sha": "0c656d5cf15483863215091e630109997cb5f6ab",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92701b3b891884706390c2bfff3209310656aa1e/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92701b3b891884706390c2bfff3209310656aa1e/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=92701b3b891884706390c2bfff3209310656aa1e",
        "patch": "@@ -117,7 +117,7 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n         UniValue obj(UniValue::VOBJ);\n         CPubKey vchPubKey;\n         obj.push_back(Pair(\"isscript\", false));\n-        if (pwalletMain->GetPubKey(keyID, vchPubKey)) {\n+        if (pwalletMain && pwalletMain->GetPubKey(keyID, vchPubKey)) {\n             obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n             obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n         }\n@@ -128,7 +128,7 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n         UniValue obj(UniValue::VOBJ);\n         CScript subscript;\n         obj.push_back(Pair(\"isscript\", true));\n-        if (pwalletMain->GetCScript(scriptID, subscript)) {\n+        if (pwalletMain && pwalletMain->GetCScript(scriptID, subscript)) {\n             std::vector<CTxDestination> addresses;\n             txnouttype whichType;\n             int nRequired;"
      }
    ]
  },
  {
    "sha": "6176e9bf3d553862c67720d218a30553d771aa63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTc2ZTliZjNkNTUzODYyYzY3NzIwZDIxOGEzMDU1M2Q3NzFhYTYz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T11:09:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T11:09:33Z"
      },
      "message": "Merge pull request #6962\n\n6dd3a44 translations: Don't translate markdown or force English grammar (MarcoFalke)",
      "tree": {
        "sha": "d57157ca69353e3e22e9692d1a3de340f28a3fc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d57157ca69353e3e22e9692d1a3de340f28a3fc8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6176e9bf3d553862c67720d218a30553d771aa63",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQH7tAAoJEHSBCwEjRsmmRGAH/2ikRXq0S5wibl8ZtvHAYh/G\ndEQYgZM6EmW92yfRrPYm5R0MxOUdFca/hDGe2A6uITlfDcVKf+DkeIVlo3Y/IH6K\nArtDNmQFs6W4jyXG0K6X3AtUyOF2GeJ+0icNvoH7VKfPi4ePp8+y9bPpZgYyuiYN\n182ehWKBuIfMiOf4SzU3XSDeHyliVf7p5OmZmH2bM3Mc/uuLwxZxRscB2UN+EOOX\nBS0AO1RyRPD0//9iA/DK13jFC5W9eg/Vgn0CbAqMeInd0KBZ6/2eCTYMRJMKQmD0\n+TsjKTxl75gdyoFzppaKLlmT2sup6Eda2XIkGhwOpM1KP/27PyNsBy62UXz7D0c=\n=gzHg\n-----END PGP SIGNATURE-----",
        "payload": "tree d57157ca69353e3e22e9692d1a3de340f28a3fc8\nparent 92701b3b891884706390c2bfff3209310656aa1e\nparent 6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447067357 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447067373 +0100\n\nMerge pull request #6962\n\n6dd3a44 translations: Don't translate markdown or force English grammar (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6176e9bf3d553862c67720d218a30553d771aa63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6176e9bf3d553862c67720d218a30553d771aa63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6176e9bf3d553862c67720d218a30553d771aa63/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "92701b3b891884706390c2bfff3209310656aa1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92701b3b891884706390c2bfff3209310656aa1e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92701b3b891884706390c2bfff3209310656aa1e"
      },
      {
        "sha": "6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6dd3a44ce2cb4480054ae0ca0960f588a9ad8d25"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "8fdafa392ab967bb22026ad63a8f746f177fdfaa",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6176e9bf3d553862c67720d218a30553d771aa63/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6176e9bf3d553862c67720d218a30553d771aa63/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6176e9bf3d553862c67720d218a30553d771aa63",
        "patch": "@@ -317,7 +317,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     }\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n     strUsage += HelpMessageOpt(\"-dbcache=<n>\", strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache));\n-    strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file on startup\"));\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n@@ -379,14 +379,14 @@ std::string HelpMessage(HelpMessageMode mode)\n             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(payTxFee.GetFeePerK())));\n-    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n-    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat on startup\"));\n     strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n     strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(maxTxFee)));\n-    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n     strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n     strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n@@ -499,6 +499,7 @@ std::string HelpMessage(HelpMessageMode mode)\n \n std::string LicenseInfo()\n {\n+    // todo: remove urls from translations on next change\n     return FormatParagraph(strprintf(_(\"Copyright (C) 2009-%i The Bitcoin Core Developers\"), COPYRIGHT_YEAR)) + \"\\n\" +\n            \"\\n\" +\n            FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +"
      },
      {
        "sha": "0ee08a1b0c6090393c22a6967a8cd67bf25dbe9b",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6176e9bf3d553862c67720d218a30553d771aa63/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6176e9bf3d553862c67720d218a30553d771aa63/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=6176e9bf3d553862c67720d218a30553d771aa63",
        "patch": "@@ -312,8 +312,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n         if(u != model->getOptionsModel()->getDisplayUnit())\n             alternativeUnits.append(BitcoinUnits::formatHtmlWithUnit(u, totalAmount));\n     }\n-    questionString.append(tr(\"Total Amount %1<span style='font-size:10pt;font-weight:normal;'><br />(=%2)</span>\")\n-        .arg(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount))\n+    questionString.append(tr(\"Total Amount %1\")\n+        .arg(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount)));\n+    questionString.append(QString(\"<span style='font-size:10pt;font-weight:normal;'><br />(=%2)</span>\")\n         .arg(alternativeUnits.join(\" \" + tr(\"or\") + \"<br />\")));\n \n     QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm send coins\"),"
      }
    ]
  },
  {
    "sha": "f24880b13213d729c415b21e3e32854be3f66e1e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjQ4ODBiMTMyMTNkNzI5YzQxNWIyMWUzZTMyODU0YmUzZjY2ZTFl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T13:15:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T13:19:05Z"
      },
      "message": "Merge pull request #6908\n\nc53d48a BIP70: Chainparams: DRY: Make qt/guiutil.cpp fit BIP70 chain name strings (Jorge Tim\u00f3n)",
      "tree": {
        "sha": "8a33a3414b99dcced0c2561e8f3f0f07c25aefd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a33a3414b99dcced0c2561e8f3f0f07c25aefd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f24880b13213d729c415b21e3e32854be3f66e1e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQJ1JAAoJEHSBCwEjRsmmyEAH/39B/H+gWPYWwlQiA6HbiPbZ\ne1mlwxjj2YJCf03DJkkHeTuWDLQKezEnaw/05obZ2OShPcndccn4jvD5qmmGQc8j\nfojtxUrj92gUoESfz3UZMNa7JfB89C/inVUs+n3AVV2nNZiEZ+FnMFnuLC1pySPc\nRetu47KcHU7KKXfoAZ3Hj1sMeYf0L6g5SSSdCBlAw5IAMHwAtOV0JEnmCKTbaRap\nKGTjGHO+tPZOuclIkAaR4pHjm/Giu8S+RWSO50Ag/qZ5r6qKRYE1Gdtgqtrn3iZY\nxi6hytI3y8AwborqIGnBQt4dXkkN7xDzmRXZlUYfwlb7UL4kfFmDOokNCpgwVwE=\n=/dDA\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a33a3414b99dcced0c2561e8f3f0f07c25aefd3\nparent 6176e9bf3d553862c67720d218a30553d771aa63\nparent c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447074922 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447075145 +0100\n\nMerge pull request #6908\n\nc53d48a BIP70: Chainparams: DRY: Make qt/guiutil.cpp fit BIP70 chain name strings (Jorge Tim\u00f3n)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f24880b13213d729c415b21e3e32854be3f66e1e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f24880b13213d729c415b21e3e32854be3f66e1e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f24880b13213d729c415b21e3e32854be3f66e1e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6176e9bf3d553862c67720d218a30553d771aa63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6176e9bf3d553862c67720d218a30553d771aa63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6176e9bf3d553862c67720d218a30553d771aa63"
      },
      {
        "sha": "c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 9,
      "deletions": 10
    },
    "files": [
      {
        "sha": "845459b76a332f2c234f7e6866512801b5eeb083",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f24880b13213d729c415b21e3e32854be3f66e1e/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f24880b13213d729c415b21e3e32854be3f66e1e/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=f24880b13213d729c415b21e3e32854be3f66e1e",
        "patch": "@@ -581,12 +581,12 @@ TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(QTableView* t\n #ifdef WIN32\n boost::filesystem::path static StartupShortcutPath()\n {\n-    if (GetBoolArg(\"-testnet\", false))\n+    std::string chain = ChainNameFromCommandLine();\n+    if (chain == CBaseChainParams::MAIN)\n+        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+    if (chain == CBaseChainParams::TESTNET) // Remove this special case when CBaseChainParams::TESTNET = \"testnet4\"\n         return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (testnet).lnk\";\n-    else if (GetBoolArg(\"-regtest\", false))\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (regtest).lnk\";\n-\n-    return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf(\"Bitcoin (%s).lnk\", chain);\n }\n \n bool GetStartOnSystemStartup()\n@@ -719,15 +719,14 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         boost::filesystem::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n+        std::string chain = ChainNameFromCommandLine();\n         // Write a bitcoin.desktop file to the autostart directory:\n         optionFile << \"[Desktop Entry]\\n\";\n         optionFile << \"Type=Application\\n\";\n-        if (GetBoolArg(\"-testnet\", false))\n-            optionFile << \"Name=Bitcoin (testnet)\\n\";\n-        else if (GetBoolArg(\"-regtest\", false))\n-            optionFile << \"Name=Bitcoin (regtest)\\n\";\n-        else\n+        if (chain == CBaseChainParams::MAIN)\n             optionFile << \"Name=Bitcoin\\n\";\n+        else\n+            optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n         optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false));\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";"
      }
    ]
  },
  {
    "sha": "40b77d450dff6879c50a33d4e7f795c385fb0002",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGI3N2Q0NTBkZmY2ODc5YzUwYTMzZDRlN2Y3OTVjMzg1ZmIwMDAy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T13:27:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T13:28:49Z"
      },
      "message": "Always allow getheaders from whitelisted peers\n\nProcess `getheaders` messages from whitelisted peers even if we are in\ninitial block download. Whitelisted peers can always use a node as a\nblock source.\n\nAlso log a debug message when the request is ignored, for\ntroubleshooting.\n\nFixes #6971.",
      "tree": {
        "sha": "ae7a9e869f271f26edd1b9c2e54d4055e93cf684",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae7a9e869f271f26edd1b9c2e54d4055e93cf684"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40b77d450dff6879c50a33d4e7f795c385fb0002",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40b77d450dff6879c50a33d4e7f795c385fb0002",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40b77d450dff6879c50a33d4e7f795c385fb0002",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40b77d450dff6879c50a33d4e7f795c385fb0002/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ee149a6db25cde31432f83369b40c92be13021c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee149a6db25cde31432f83369b40c92be13021c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee149a6db25cde31432f83369b40c92be13021c"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c5c5e40ee8024d5890d4f9fd12126536d9dc72ce",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40b77d450dff6879c50a33d4e7f795c385fb0002/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40b77d450dff6879c50a33d4e7f795c385fb0002/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=40b77d450dff6879c50a33d4e7f795c385fb0002",
        "patch": "@@ -4303,10 +4303,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         vRecv >> locator >> hashStop;\n \n         LOCK(cs_main);\n-\n-        if (IsInitialBlockDownload())\n+        if (IsInitialBlockDownload() && !pfrom->fWhitelisted) {\n+            LogPrint(\"net\", \"Ignoring getheaders from peer=%d because node is in initial block download\\n\", pfrom->id);\n             return true;\n-\n+        }\n         CBlockIndex* pindex = NULL;\n         if (locator.IsNull())\n         {"
      }
    ]
  },
  {
    "sha": "503ff6e1ae6932b63892099b4c63e92a9263fed6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDNmZjZlMWFlNjkzMmI2Mzg5MjA5OWI0YzYzZTkyYTkyNjNmZWQ2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T14:43:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-09T14:47:51Z"
      },
      "message": "Merge pull request #6967\n\n9ea7762 Use Pieter's signing subkey instead of his primary key (Matt Corallo)",
      "tree": {
        "sha": "d40b4234ab8ecdda45f57b64890a0167470ca2c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d40b4234ab8ecdda45f57b64890a0167470ca2c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/503ff6e1ae6932b63892099b4c63e92a9263fed6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQLIXAAoJEHSBCwEjRsmmsOsH/jVVCA3c2MF1PQwwv0STSiHo\n50UA5TzdSjXfrxcToFyHwobmOb1PjBhNz9ca0P6UJ3LwNW2J5MQ+7vL6PglE1d6N\nOH/ZCP4MBBqFfD6ADpLtzOpK/Kj//tqd0knAc9gCjgx9BydetjpX7DKalp2Ss3Z1\nhy5MRgZ7zdUsnyV1gmLatH30WG8ruJZeqplgHU3tAdApzY6ieRS9lnoX0LQQD5F5\nC7YlZiAhBVVuueQ97yXH64k0ywi3ZCF/fJ/228/uZhnuDI9YMsY3GlcfXQ4Rqu8g\nJNISjH8SXQJqPU8PTZUzkcNwy/tCfP1NYHXCAMUj6RCGi6jYZ/5I/ZZuD4C8Rm8=\n=4HHD\n-----END PGP SIGNATURE-----",
        "payload": "tree d40b4234ab8ecdda45f57b64890a0167470ca2c6\nparent f24880b13213d729c415b21e3e32854be3f66e1e\nparent 9ea7762e2c5422a66698371b563526d443299f0a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447080180 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447080471 +0100\n\nMerge pull request #6967\n\n9ea7762 Use Pieter's signing subkey instead of his primary key (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/503ff6e1ae6932b63892099b4c63e92a9263fed6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/503ff6e1ae6932b63892099b4c63e92a9263fed6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/503ff6e1ae6932b63892099b4c63e92a9263fed6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f24880b13213d729c415b21e3e32854be3f66e1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f24880b13213d729c415b21e3e32854be3f66e1e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f24880b13213d729c415b21e3e32854be3f66e1e"
      },
      {
        "sha": "9ea7762e2c5422a66698371b563526d443299f0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ea7762e2c5422a66698371b563526d443299f0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ea7762e2c5422a66698371b563526d443299f0a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "fcf2b98e7798c74ef830795528254c2779462b3f",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/503ff6e1ae6932b63892099b4c63e92a9263fed6/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/503ff6e1ae6932b63892099b4c63e92a9263fed6/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=503ff6e1ae6932b63892099b4c63e92a9263fed6",
        "patch": "@@ -3,4 +3,4 @@\n 01CDF4627A3B88AAE4A571C87588242FBE38D3A8\n AF8BE07C7049F3A26B239D5325B3083201782B2F\n 81291FA67D2C379A006A053FEAB5AF94D9E9ABE7\n-133EAC179436F14A5CF1B794860FEB804E669320\n+3F1888C6DCA92A6499C4911FDBA1A67379A1A931"
      }
    ]
  },
  {
    "sha": "5f46a7d0689ff1457b016fdf0de89e5153058864",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjQ2YTdkMDY4OWZmMTQ1N2IwMTZmZGYwZGU4OWU1MTUzMDU4ODY0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-13T17:23:11Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-09T20:00:16Z"
      },
      "message": "transaction_tests: Be more strict checking dust\n\n* Don't allow off-by-one or more\n* Make clear dust is coupled with minRelayTxFee\n* Check rounding for odd values",
      "tree": {
        "sha": "2dc4685628cd5f641156ce4a17bc047704e8898d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2dc4685628cd5f641156ce4a17bc047704e8898d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f46a7d0689ff1457b016fdf0de89e5153058864",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f46a7d0689ff1457b016fdf0de89e5153058864",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f46a7d0689ff1457b016fdf0de89e5153058864",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f46a7d0689ff1457b016fdf0de89e5153058864/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "503ff6e1ae6932b63892099b4c63e92a9263fed6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/503ff6e1ae6932b63892099b4c63e92a9263fed6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/503ff6e1ae6932b63892099b4c63e92a9263fed6"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 19,
      "deletions": 4
    },
    "files": [
      {
        "sha": "98882d315e8bc426404a73c79f0fc87b9c6a8333",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f46a7d0689ff1457b016fdf0de89e5153058864/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f46a7d0689ff1457b016fdf0de89e5153058864/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=5f46a7d0689ff1457b016fdf0de89e5153058864",
        "patch": "@@ -143,8 +143,8 @@ class CTxOut\n         // to spend something, then we consider it dust.\n         // A typical spendable txout is 34 bytes big, and will\n         // need a CTxIn of at least 148 bytes to spend:\n-        // so dust is a spendable txout less than 546 satoshis\n-        // with default minRelayTxFee.\n+        // so dust is a spendable txout less than\n+        // 546*minRelayTxFee/1000 (in satoshis)\n         if (scriptPubKey.IsUnspendable())\n             return 0;\n "
      },
      {
        "sha": "c840f4c9fd14f5f80be6f7763721daf439b2961e",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f46a7d0689ff1457b016fdf0de89e5153058864/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f46a7d0689ff1457b016fdf0de89e5153058864/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=5f46a7d0689ff1457b016fdf0de89e5153058864",
        "patch": "@@ -342,11 +342,26 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     string reason;\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n-    t.vout[0].nValue = 501; // dust\n+    // Check dust with default relay fee:\n+    CAmount nDustThreshold = 182 * minRelayTxFee.GetFeePerK()/1000 * 3;\n+    BOOST_CHECK_EQUAL(nDustThreshold, 546);\n+    // dust:\n+    t.vout[0].nValue = nDustThreshold - 1;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n+    // not dust:\n+    t.vout[0].nValue = nDustThreshold;\n+    BOOST_CHECK(IsStandardTx(t, reason));\n \n-    t.vout[0].nValue = 2730; // not dust\n+    // Check dust with odd relay fee to verify rounding:\n+    // nDustThreshold = 182 * 1234 / 1000 * 3\n+    minRelayTxFee = CFeeRate(1234);\n+    // dust:\n+    t.vout[0].nValue = 672 - 1;\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n+    // not dust:\n+    t.vout[0].nValue = 672;\n     BOOST_CHECK(IsStandardTx(t, reason));\n+    minRelayTxFee = CFeeRate(1000);\n \n     t.vout[0].scriptPubKey = CScript() << OP_1;\n     BOOST_CHECK(!IsStandardTx(t, reason));"
      }
    ]
  },
  {
    "sha": "536766c903c8dc84e6709e4bd387aad5acf8e433",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzY3NjZjOTAzYzhkYzg0ZTY3MDllNGJkMzg3YWFkNWFjZjhlNDMz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-10-27T16:21:43Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-09T20:00:16Z"
      },
      "message": "[trivial] New DEFAULT_MIN_RELAY_TX_FEE = 1000",
      "tree": {
        "sha": "4534cad8d5959d8791f1ed016f9717e787e7ab7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4534cad8d5959d8791f1ed016f9717e787e7ab7e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/536766c903c8dc84e6709e4bd387aad5acf8e433",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536766c903c8dc84e6709e4bd387aad5acf8e433",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/536766c903c8dc84e6709e4bd387aad5acf8e433",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536766c903c8dc84e6709e4bd387aad5acf8e433/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f46a7d0689ff1457b016fdf0de89e5153058864",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f46a7d0689ff1457b016fdf0de89e5153058864",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f46a7d0689ff1457b016fdf0de89e5153058864"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9212b309dadd08b3fa9841ba762739138e809157",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/536766c903c8dc84e6709e4bd387aad5acf8e433/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/536766c903c8dc84e6709e4bd387aad5acf8e433/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=536766c903c8dc84e6709e4bd387aad5acf8e433",
        "patch": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying, mining and transaction creation) */\n-CFeeRate minRelayTxFee = CFeeRate(1000);\n+CFeeRate minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);\n \n CTxMemPool mempool(::minRelayTxFee);\n "
      },
      {
        "sha": "0a7944092ac37ddb58c24c36e62013ecaadcd76a",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/536766c903c8dc84e6709e4bd387aad5acf8e433/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/536766c903c8dc84e6709e4bd387aad5acf8e433/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=536766c903c8dc84e6709e4bd387aad5acf8e433",
        "patch": "@@ -41,6 +41,8 @@ struct CNodeStateStats;\n \n /** Default for accepting alerts from the P2P network. */\n static const bool DEFAULT_ALERTS = true;\n+/** Default for -minrelaytxfee, minimum relay fee for transactions */\n+static const unsigned int DEFAULT_MIN_RELAY_TX_FEE = 1000;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n /** Default for -limitancestorcount, max number of in-mempool ancestors */"
      },
      {
        "sha": "fb0df1aff431d793dd37a5c9ec5300af7831ca0d",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/536766c903c8dc84e6709e4bd387aad5acf8e433/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/536766c903c8dc84e6709e4bd387aad5acf8e433/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=536766c903c8dc84e6709e4bd387aad5acf8e433",
        "patch": "@@ -361,7 +361,7 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     // not dust:\n     t.vout[0].nValue = 672;\n     BOOST_CHECK(IsStandardTx(t, reason));\n-    minRelayTxFee = CFeeRate(1000);\n+    minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);\n \n     t.vout[0].scriptPubKey = CScript() << OP_1;\n     BOOST_CHECK(!IsStandardTx(t, reason));"
      }
    ]
  },
  {
    "sha": "e20d9245e58bafdab51105c985478ccb3e0c9095",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjBkOTI0NWU1OGJhZmRhYjUxMTA1Yzk4NTQ3OGNjYjNlMGM5MDk1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-06T07:33:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-09T20:12:55Z"
      },
      "message": "[trivial] init: Use defaults MIN_RELAY_TX_FEE & TRANSACTION_MAXFEE",
      "tree": {
        "sha": "e0c3e7ade73dea07725461013113495f14785c69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0c3e7ade73dea07725461013113495f14785c69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e20d9245e58bafdab51105c985478ccb3e0c9095",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20d9245e58bafdab51105c985478ccb3e0c9095",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e20d9245e58bafdab51105c985478ccb3e0c9095",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20d9245e58bafdab51105c985478ccb3e0c9095/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536766c903c8dc84e6709e4bd387aad5acf8e433",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536766c903c8dc84e6709e4bd387aad5acf8e433",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536766c903c8dc84e6709e4bd387aad5acf8e433"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5f2dc8bf2fce153631626d87f09587b3cb8641e1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20d9245e58bafdab51105c985478ccb3e0c9095/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20d9245e58bafdab51105c985478ccb3e0c9095/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e20d9245e58bafdab51105c985478ccb3e0c9095",
        "patch": "@@ -385,7 +385,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n     strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n-        CURRENCY_UNIT, FormatMoney(maxTxFee)));\n+        CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n     strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n@@ -440,7 +440,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n     }\n     strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n-        CURRENCY_UNIT, FormatMoney(::minRelayTxFee.GetFeePerK())));\n+        CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)));\n     strUsage += HelpMessageOpt(\"-printtoconsole\", _(\"Send trace/debug info to console instead of debug.log file\"));\n     if (showDebug)\n     {"
      }
    ]
  },
  {
    "sha": "17c4d9d1647bbac4b0557136b1c3d98c951feb79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2M0ZDlkMTY0N2JiYWM0YjA1NTcxMzZiMWMzZDk4Yzk1MWZlYjc5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-11-10T01:50:25Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-11-10T03:50:31Z"
      },
      "message": "build: Split hardening/fPIE options out\n\nThis allows for fPIE to be used selectively.",
      "tree": {
        "sha": "52d40429bc8a781199595ee2a8cac6472163cb57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52d40429bc8a781199595ee2a8cac6472163cb57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17c4d9d1647bbac4b0557136b1c3d98c951feb79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17c4d9d1647bbac4b0557136b1c3d98c951feb79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17c4d9d1647bbac4b0557136b1c3d98c951feb79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17c4d9d1647bbac4b0557136b1c3d98c951feb79/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "503ff6e1ae6932b63892099b4c63e92a9263fed6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/503ff6e1ae6932b63892099b4c63e92a9263fed6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/503ff6e1ae6932b63892099b4c63e92a9263fed6"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 55,
      "deletions": 27
    },
    "files": [
      {
        "sha": "6f9c0ae218f7b3f30a1ba719831c30177fa2d92e",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c4d9d1647bbac4b0557136b1c3d98c951feb79/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c4d9d1647bbac4b0557136b1c3d98c951feb79/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "patch": "@@ -106,7 +106,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   dnl results to QT_LIBS.\n   BITCOIN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n+  TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   if test x$bitcoin_qt_got_major_vers = x5; then\n     _BITCOIN_QT_IS_STATIC\n     if test x$bitcoin_cv_static_qt = xyes; then\n@@ -149,6 +151,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n+  CXXFLAGS=$TEMP_CXXFLAGS\n   ])\n \n   if test x$use_pkgconfig$qt_bin_path = xyes; then\n@@ -373,6 +376,8 @@ dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n     if test x$qt_include_path != x; then\n@@ -442,6 +447,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n     fi\n   ])\n   CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n   LIBS=\"$TEMP_LIBS\"\n ])\n "
      },
      {
        "sha": "e8aea902ae088efddf7a5590a8aa544e9c3f69b1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c4d9d1647bbac4b0557136b1c3d98c951feb79/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c4d9d1647bbac4b0557136b1c3d98c951feb79/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "patch": "@@ -326,6 +326,7 @@ case $host in\n \n      AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n    *linux*)\n      TARGET_OS=linux\n@@ -424,6 +425,11 @@ if test x$use_glibc_compat != xno; then\n \n fi\n \n+if test x$TARGET_OS != xwindows; then\n+  # All windows code is PIC, forcing it on just adds useless compile warnings\n+  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n+fi\n+\n if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n@@ -441,8 +447,7 @@ if test x$use_hardening != xno; then\n   AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n \n   if test x$TARGET_OS != xwindows; then\n-    # All windows code is PIC, forcing it on just adds useless compile warnings\n-    AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n     AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n   fi\n \n@@ -451,11 +456,6 @@ if test x$use_hardening != xno; then\n        AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n     ;;\n   esac\n-\n-  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n-  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n-  OBJCXXFLAGS=\"$CXXFLAGS\"\n fi\n \n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n@@ -915,6 +915,11 @@ AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n \n AC_SUBST(RELDFLAGS)\n+AC_SUBST(HARDENED_CXXFLAGS)\n+AC_SUBST(HARDENED_CPPFLAGS)\n+AC_SUBST(HARDENED_LDFLAGS)\n+AC_SUBST(PIC_FLAGS)\n+AC_SUBST(PIE_FLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)"
      },
      {
        "sha": "c8d674686c18e9ccb37ed9c25d34179e70a84a6d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 27,
        "deletions": 14,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "patch": "@@ -1,6 +1,8 @@\n DIST_SUBDIRS = secp256k1 univalue\n-AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS)\n \n+AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS)\n+AM_CXXFLAGS = $(HARDENED_CXXFLAGS)\n+AM_CPPFLAGS = $(HARDENED_CPPFLAGS)\n \n if EMBEDDED_LEVELDB\n LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/include\n@@ -14,7 +16,7 @@ $(LIBLEVELDB): $(LIBMEMENV)\n $(LIBLEVELDB) $(LIBMEMENV):\n \t@echo \"Building LevelDB ...\" && $(MAKE) -C $(@D) $(@F) CXX=\"$(CXX)\" \\\n \t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n-          OPT=\"$(CXXFLAGS) $(CPPFLAGS) -D__STDC_LIMIT_MACROS\"\n+          OPT=\"$(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) $(AM_CPPFLAGS) $(CPPFLAGS) -D__STDC_LIMIT_MACROS\"\n endif\n \n BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n@@ -178,7 +180,8 @@ obj/build.h: FORCE\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n # server: shared between bitcoind and bitcoin-qt\n-libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   alert.cpp \\\n@@ -215,6 +218,7 @@ if ENABLE_ZMQ\n LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n \n libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)\n+libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_zmq_a_SOURCES = \\\n   zmq/zmqabstractnotifier.cpp \\\n   zmq/zmqnotificationinterface.cpp \\\n@@ -224,7 +228,8 @@ endif\n \n # wallet: shared between bitcoind and bitcoin-qt, but only linked\n # when wallet enabled\n-libbitcoin_wallet_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n@@ -236,7 +241,8 @@ libbitcoin_wallet_a_SOURCES = \\\n   $(BITCOIN_CORE_H)\n \n # crypto primitives library\n-crypto_libbitcoin_crypto_a_CPPFLAGS = $(BITCOIN_CONFIG_INCLUDES)\n+crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_CONFIG_INCLUDES)\n+crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/common.h \\\n   crypto/hmac_sha256.cpp \\\n@@ -253,7 +259,8 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.h\n \n # common: shared between bitcoind, and bitcoin-qt and non-server tools\n-libbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_common_a_SOURCES = \\\n   amount.cpp \\\n   arith_uint256.cpp \\\n@@ -284,7 +291,8 @@ libbitcoin_common_a_SOURCES = \\\n # util: shared between all executables.\n # This library *must* be included to make sure that the glibc\n # backward-compatibility objects and their sanity checks are linked.\n-libbitcoin_util_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_util_a_SOURCES = \\\n   support/pagelocker.cpp \\\n   chainparamsbase.cpp \\\n@@ -308,7 +316,8 @@ libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\n endif\n \n # cli: shared between bitcoin-cli and bitcoin-qt\n-libbitcoin_cli_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_cli_a_SOURCES = \\\n   rpcclient.cpp \\\n   $(BITCOIN_CORE_H)\n@@ -318,7 +327,8 @@ nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n \n # bitcoind binary #\n bitcoind_SOURCES = bitcoind.cpp\n-bitcoind_CPPFLAGS = $(BITCOIN_INCLUDES)\n+bitcoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n@@ -347,7 +357,8 @@ bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPN\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n+bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n+bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n@@ -364,7 +375,8 @@ bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n \n # bitcoin-tx binary #\n bitcoin_tx_SOURCES = bitcoin-tx.cpp\n-bitcoin_tx_CPPFLAGS = $(BITCOIN_INCLUDES)\n+bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n@@ -405,9 +417,10 @@ if GLIBC_BACK_COMPAT\n   libbitcoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n endif\n \n-libbitcoinconsensus_la_LDFLAGS = -no-undefined $(RELDFLAGS)\n+libbitcoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n libbitcoinconsensus_la_LIBADD = $(CRYPTO_LIBS)\n-libbitcoinconsensus_la_CPPFLAGS = $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BITCOIN_INTERNAL\n+libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BITCOIN_INTERNAL\n+libbitcoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n endif\n #\n@@ -443,7 +456,7 @@ clean-local:\n \n .mm.o:\n \t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n-\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n+\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) -c -o $@ $<\n \n %.pb.cc %.pb.h: %.proto\n \t@test -f $(PROTOC)"
      },
      {
        "sha": "d660a3a7473a6a91de93f2e5b4ee595d08fea666",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "patch": "@@ -9,7 +9,8 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/bench.h \\\n   bench/Examples.cpp\n \n-bench_bench_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n@@ -31,7 +32,6 @@ endif\n bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-\n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno\n \n CLEANFILES += $(CLEAN_BITCOIN_BENCH)"
      },
      {
        "sha": "bc2ead65d8e4b68f0879b907a3085c121d7cf6bd",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "patch": "@@ -327,8 +327,9 @@ BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n   -I$(builddir)/qt/forms -DQT_NO_KEYWORDS\n \n-qt_libbitcoinqt_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n   $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n@@ -350,8 +351,9 @@ $(QT_MOC): $(PROTOBUF_H)\n $(QT_MOC_CPP): $(PROTOBUF_H)\n \n # bitcoin-qt binary #\n-qt_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n if TARGET_DARWIN"
      },
      {
        "sha": "69f89941d1815adfde7794cb81203791bee630f1",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "patch": "@@ -12,7 +12,7 @@ TEST_QT_H = \\\n   qt/test/paymentrequestdata.h \\\n   qt/test/paymentservertests.h\n \n-qt_test_test_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n \n qt_test_test_bitcoin_qt_SOURCES = \\\n@@ -38,6 +38,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBIT\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n "
      },
      {
        "sha": "2328d0b4ccc78a4f3429955a7bf7a1092050a889",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17c4d9d1647bbac4b0557136b1c3d98c951feb79/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "patch": "@@ -93,9 +93,10 @@ BITCOIN_TESTS += \\\n endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-test_test_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n+test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n+test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif"
      }
    ]
  },
  {
    "sha": "69d05134367da9a897ad14562a1d266750db450a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWQwNTEzNDM2N2RhOWE4OTdhZDE0NTYyYTFkMjY2NzUwZGI0NTBh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-11-10T01:52:37Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-11-10T03:50:31Z"
      },
      "message": "build: Use fPIC rather than fPIE for qt objects.\n\nBut only if qt was built with reduced relocations.",
      "tree": {
        "sha": "8f17551c2e799aa25596c0c5aa9427275a1c3d26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f17551c2e799aa25596c0c5aa9427275a1c3d26"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69d05134367da9a897ad14562a1d266750db450a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69d05134367da9a897ad14562a1d266750db450a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69d05134367da9a897ad14562a1d266750db450a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69d05134367da9a897ad14562a1d266750db450a/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17c4d9d1647bbac4b0557136b1c3d98c951feb79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17c4d9d1647bbac4b0557136b1c3d98c951feb79"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 41,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2480267dc17ef5575ea6c22b8adddd535a6f9de6",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69d05134367da9a897ad14562a1d266750db450a/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69d05134367da9a897ad14562a1d266750db450a/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=69d05134367da9a897ad14562a1d266750db450a",
        "patch": "@@ -160,6 +160,43 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     fi\n   fi\n \n+  if test x$use_hardening != xno; then\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    TEMP_CXXFLAGS=$CXXFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n+      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    CXXFLAGS=$TEMP_CXXFLAGS\n+    ])\n+  else\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(no)],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    ])\n+  fi\n+\n   BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n@@ -205,6 +242,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ])\n   AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n \n+  AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n   AC_SUBST(QT_LIBS)\n   AC_SUBST(QT_LDFLAGS)"
      },
      {
        "sha": "e62003a513bad708db82000dce703a7be122be17",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69d05134367da9a897ad14562a1d266750db450a/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69d05134367da9a897ad14562a1d266750db450a/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=69d05134367da9a897ad14562a1d266750db450a",
        "patch": "@@ -329,7 +329,7 @@ BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n \n qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n   $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n@@ -353,7 +353,7 @@ $(QT_MOC_CPP): $(PROTOBUF_H)\n # bitcoin-qt binary #\n qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n if TARGET_DARWIN"
      },
      {
        "sha": "ede3fac4c31d53ad19ca789f55fbd51ff3475efc",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69d05134367da9a897ad14562a1d266750db450a/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69d05134367da9a897ad14562a1d266750db450a/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=69d05134367da9a897ad14562a1d266750db450a",
        "patch": "@@ -38,7 +38,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBIT\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n "
      }
    ]
  },
  {
    "sha": "77beab70deae8ad821cc069c1ce80fc809c89c33",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2JlYWI3MGRlYWU4YWQ4MjFjYzA2OWMxY2U4MGZjODA5Yzg5YzMz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T14:23:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T14:32:03Z"
      },
      "message": "Merge pull request #6163\n\n87cbdb8 Globals: Explicit Consensus::Params arg for main: (Jorge Tim\u00f3n)",
      "tree": {
        "sha": "d2d9aa3be7959400c2176d0d6c2e75a4f3925d6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2d9aa3be7959400c2176d0d6c2e75a4f3925d6f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77beab70deae8ad821cc069c1ce80fc809c89c33",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQf/jAAoJEHSBCwEjRsmm+RIIAMMQfBp1PNql84DL6jeISTWI\nRAtohpAqF9lott6XdvOfHY+X/j6UCYewJb4e1qgmQwiC8/U45Lcu0jxvtA/yBHxj\nySU2rCYgxpVi5VMdkEVxp9Qyo0V3At0qw3RXL92PEVWLgQucVX0XVoagzUGB+jvx\n3yHxhjKq54prINZ0w5mMAjIjJMMIugsOcAqyWkMUTXhZqvcTt+Rbt2yRdU/YkmBa\nw2FShJJSkYdsRqQVVKbP8i82zZZPrg4UR0N/dtKrGRZPDnl3dzwjiU/Z5qC0iXt6\nou1rPSCuIr2DKbHMs4fF7rHbuAOVxvwNuJL5wzP8azr30teoGXtuRDMkZ51/Xlo=\n=ODGq\n-----END PGP SIGNATURE-----",
        "payload": "tree d2d9aa3be7959400c2176d0d6c2e75a4f3925d6f\nparent 503ff6e1ae6932b63892099b4c63e92a9263fed6\nparent 87cbdb8b41eee4067023cfa0d9d68722da74a5eb\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447165421 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447165923 +0100\n\nMerge pull request #6163\n\n87cbdb8 Globals: Explicit Consensus::Params arg for main: (Jorge Tim\u00f3n)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77beab70deae8ad821cc069c1ce80fc809c89c33",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77beab70deae8ad821cc069c1ce80fc809c89c33",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77beab70deae8ad821cc069c1ce80fc809c89c33/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "503ff6e1ae6932b63892099b4c63e92a9263fed6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/503ff6e1ae6932b63892099b4c63e92a9263fed6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/503ff6e1ae6932b63892099b4c63e92a9263fed6"
      },
      {
        "sha": "87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87cbdb8b41eee4067023cfa0d9d68722da74a5eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87cbdb8b41eee4067023cfa0d9d68722da74a5eb"
      }
    ],
    "stats": {
      "total": 97,
      "additions": 52,
      "deletions": 45
    },
    "files": [
      {
        "sha": "bc49d09fe75aa943cf3f945d32652b5100ebbbfc",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 29,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77beab70deae8ad821cc069c1ce80fc809c89c33/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77beab70deae8ad821cc069c1ce80fc809c89c33/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=77beab70deae8ad821cc069c1ce80fc809c89c33",
        "patch": "@@ -92,7 +92,7 @@ void EraseOrphansFor(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n  * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n  */\n static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams);\n-static void CheckBlockIndex();\n+static void CheckBlockIndex(const Consensus::Params& consensusParams);\n \n /** Constant stuff for coinbase transactions we create: */\n CScript COINBASE_FLAGS;\n@@ -998,7 +998,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n /** Return transaction in tx, and if it was found inside a block, its hash is placed in hashBlock */\n-bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock, bool fAllowSlow)\n+bool GetTransaction(const uint256 &hash, CTransaction &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n {\n     CBlockIndex *pindexSlow = NULL;\n \n@@ -1044,7 +1044,7 @@ bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock\n \n     if (pindexSlow) {\n         CBlock block;\n-        if (ReadBlockFromDisk(block, pindexSlow)) {\n+        if (ReadBlockFromDisk(block, pindexSlow, consensusParams)) {\n             BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n                 if (tx.GetHash() == hash) {\n                     txOut = tx;\n@@ -1089,7 +1089,7 @@ bool WriteBlockToDisk(const CBlock& block, CDiskBlockPos& pos, const CMessageHea\n     return true;\n }\n \n-bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n+bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos, const Consensus::Params& consensusParams)\n {\n     block.SetNull();\n \n@@ -1107,15 +1107,15 @@ bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n     }\n \n     // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits, Params().GetConsensus()))\n+    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n     return true;\n }\n \n-bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex)\n+bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n {\n-    if (!ReadBlockFromDisk(block, pindex->GetBlockPos()))\n+    if (!ReadBlockFromDisk(block, pindex->GetBlockPos(), consensusParams))\n         return false;\n     if (block.GetHash() != pindex->GetBlockHash())\n         return error(\"ReadBlockFromDisk(CBlock&, CBlockIndex*): GetHash() doesn't match index for %s at %s\",\n@@ -2064,13 +2064,14 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n }\n \n /** Disconnect chainActive's tip. You want to manually re-limit mempool size after this */\n-bool static DisconnectTip(CValidationState &state) {\n+bool static DisconnectTip(CValidationState& state, const Consensus::Params& consensusParams)\n+{\n     CBlockIndex *pindexDelete = chainActive.Tip();\n     assert(pindexDelete);\n     mempool.check(pcoinsTip);\n     // Read block from disk.\n     CBlock block;\n-    if (!ReadBlockFromDisk(block, pindexDelete))\n+    if (!ReadBlockFromDisk(block, pindexDelete, consensusParams))\n         return AbortNode(state, \"Failed to read block\");\n     // Apply the block atomically to the chain state.\n     int64_t nStart = GetTimeMicros();\n@@ -2125,13 +2126,14 @@ static int64_t nTimePostConnect = 0;\n  * corresponding to pindexNew, to bypass loading it again from disk.\n  */\n bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, const CBlock *pblock) {\n+    const CChainParams& chainparams = Params();\n     assert(pindexNew->pprev == chainActive.Tip());\n     mempool.check(pcoinsTip);\n     // Read block from disk.\n     int64_t nTime1 = GetTimeMicros();\n     CBlock block;\n     if (!pblock) {\n-        if (!ReadBlockFromDisk(block, pindexNew))\n+        if (!ReadBlockFromDisk(block, pindexNew, chainparams.GetConsensus()))\n             return AbortNode(state, \"Failed to read block\");\n         pblock = &block;\n     }\n@@ -2257,6 +2259,7 @@ static void PruneBlockIndexCandidates() {\n  * pblock is either NULL or a pointer to a CBlock corresponding to pindexMostWork.\n  */\n static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork, const CBlock *pblock) {\n+    const CChainParams& chainparams = Params();\n     AssertLockHeld(cs_main);\n     bool fInvalidFound = false;\n     const CBlockIndex *pindexOldTip = chainActive.Tip();\n@@ -2265,7 +2268,7 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n     // Disconnect active blocks which are no longer in the best chain.\n     bool fBlocksDisconnected = false;\n     while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n-        if (!DisconnectTip(state))\n+        if (!DisconnectTip(state, chainparams.GetConsensus()))\n             return false;\n         fBlocksDisconnected = true;\n     }\n@@ -2333,7 +2336,7 @@ static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMo\n bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n     CBlockIndex *pindexNewTip = NULL;\n     CBlockIndex *pindexMostWork = NULL;\n-    const CChainParams& chainParams = Params();\n+    const CChainParams& chainparams = Params();\n     do {\n         boost::this_thread::interruption_point();\n \n@@ -2360,7 +2363,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n             // Relay inventory, but don't relay old inventory during initial block download.\n             int nBlockEstimate = 0;\n             if (fCheckpointsEnabled)\n-                nBlockEstimate = Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints());\n+                nBlockEstimate = Checkpoints::GetTotalBlocksEstimate(chainparams.Checkpoints());\n             {\n                 LOCK(cs_vNodes);\n                 BOOST_FOREACH(CNode* pnode, vNodes)\n@@ -2372,7 +2375,7 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n             uiInterface.NotifyBlockTip(hashNewTip);\n         }\n     } while(pindexMostWork != chainActive.Tip());\n-    CheckBlockIndex();\n+    CheckBlockIndex(chainparams.GetConsensus());\n \n     // Write changes periodically to disk, after relay.\n     if (!FlushStateToDisk(state, FLUSH_STATE_PERIODIC)) {\n@@ -2382,7 +2385,8 @@ bool ActivateBestChain(CValidationState &state, const CBlock *pblock) {\n     return true;\n }\n \n-bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n+bool InvalidateBlock(CValidationState& state, const Consensus::Params& consensusParams, CBlockIndex *pindex)\n+{\n     AssertLockHeld(cs_main);\n \n     // Mark the block itself as invalid.\n@@ -2397,7 +2401,7 @@ bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n         setBlockIndexCandidates.erase(pindexWalk);\n         // ActivateBestChain considers blocks already in chainActive\n         // unconditionally valid already, so force disconnect away from it.\n-        if (!DisconnectTip(state)) {\n+        if (!DisconnectTip(state, consensusParams)) {\n             return false;\n         }\n     }\n@@ -2904,6 +2908,7 @@ static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned\n \n bool ProcessNewBlock(CValidationState &state, const CNode* pfrom, const CBlock* pblock, bool fForceProcessing, CDiskBlockPos *dbp)\n {\n+    const CChainParams& chainparams = Params();\n     // Preliminary checks\n     bool checked = CheckBlock(*pblock, state);\n \n@@ -2921,7 +2926,7 @@ bool ProcessNewBlock(CValidationState &state, const CNode* pfrom, const CBlock*\n         if (pindex && pfrom) {\n             mapBlockSource[pindex->GetBlockHash()] = pfrom->GetId();\n         }\n-        CheckBlockIndex();\n+        CheckBlockIndex(chainparams.GetConsensus());\n         if (!ret)\n             return error(\"%s: AcceptBlock FAILED\", __func__);\n     }\n@@ -3253,6 +3258,7 @@ CVerifyDB::~CVerifyDB()\n \n bool CVerifyDB::VerifyDB(CCoinsView *coinsview, int nCheckLevel, int nCheckDepth)\n {\n+    const CChainParams& chainparams = Params();\n     LOCK(cs_main);\n     if (chainActive.Tip() == NULL || chainActive.Tip()->pprev == NULL)\n         return true;\n@@ -3277,7 +3283,7 @@ bool CVerifyDB::VerifyDB(CCoinsView *coinsview, int nCheckLevel, int nCheckDepth\n             break;\n         CBlock block;\n         // check level 0: read from disk\n-        if (!ReadBlockFromDisk(block, pindex))\n+        if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n             return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n         // check level 1: verify block validity\n         if (nCheckLevel >= 1 && !CheckBlock(block, state))\n@@ -3317,7 +3323,7 @@ bool CVerifyDB::VerifyDB(CCoinsView *coinsview, int nCheckLevel, int nCheckDepth\n             uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, 100 - (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * 50))));\n             pindex = chainActive.Next(pindex);\n             CBlock block;\n-            if (!ReadBlockFromDisk(block, pindex))\n+            if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n                 return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n             if (!ConnectBlock(block, state, pindex, coins))\n                 return error(\"VerifyDB(): *** found unconnectable block at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n@@ -3490,7 +3496,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                     std::pair<std::multimap<uint256, CDiskBlockPos>::iterator, std::multimap<uint256, CDiskBlockPos>::iterator> range = mapBlocksUnknownParent.equal_range(head);\n                     while (range.first != range.second) {\n                         std::multimap<uint256, CDiskBlockPos>::iterator it = range.first;\n-                        if (ReadBlockFromDisk(block, it->second))\n+                        if (ReadBlockFromDisk(block, it->second, chainparams.GetConsensus()))\n                         {\n                             LogPrintf(\"%s: Processing out of order child %s of %s\\n\", __func__, block.GetHash().ToString(),\n                                     head.ToString());\n@@ -3517,9 +3523,8 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n     return nLoaded > 0;\n }\n \n-void static CheckBlockIndex()\n+void static CheckBlockIndex(const Consensus::Params& consensusParams)\n {\n-    const Consensus::Params& consensusParams = Params().GetConsensus();\n     if (!fCheckBlockIndex) {\n         return;\n     }\n@@ -3801,7 +3806,7 @@ bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n     return true;\n }\n \n-void static ProcessGetData(CNode* pfrom)\n+void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParams)\n {\n     std::deque<CInv>::iterator it = pfrom->vRecvGetData.begin();\n \n@@ -3856,7 +3861,7 @@ void static ProcessGetData(CNode* pfrom)\n                 {\n                     // Send block from disk\n                     CBlock block;\n-                    if (!ReadBlockFromDisk(block, (*mi).second))\n+                    if (!ReadBlockFromDisk(block, (*mi).second, consensusParams))\n                         assert(!\"cannot load block from disk\");\n                     if (inv.type == MSG_BLOCK)\n                         pfrom->PushMessage(\"block\", block);\n@@ -4248,7 +4253,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             LogPrint(\"net\", \"received getdata for: %s peer=%d\\n\", vInv[0].ToString(), pfrom->id);\n \n         pfrom->vRecvGetData.insert(pfrom->vRecvGetData.end(), vInv.begin(), vInv.end());\n-        ProcessGetData(pfrom);\n+        ProcessGetData(pfrom, chainparams.GetConsensus());\n     }\n \n \n@@ -4514,7 +4519,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             pfrom->PushMessage(\"getheaders\", chainActive.GetLocator(pindexLast), uint256());\n         }\n \n-        CheckBlockIndex();\n+        CheckBlockIndex(chainparams.GetConsensus());\n     }\n \n     else if (strCommand == \"block\" && !fImporting && !fReindex) // Ignore blocks received while importing\n@@ -4798,6 +4803,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n // requires LOCK(cs_vRecvMsg)\n bool ProcessMessages(CNode* pfrom)\n {\n+    const CChainParams& chainparams = Params();\n     //if (fDebug)\n     //    LogPrintf(\"%s(%u messages)\\n\", __func__, pfrom->vRecvMsg.size());\n \n@@ -4812,7 +4818,7 @@ bool ProcessMessages(CNode* pfrom)\n     bool fOk = true;\n \n     if (!pfrom->vRecvGetData.empty())\n-        ProcessGetData(pfrom);\n+        ProcessGetData(pfrom, chainparams.GetConsensus());\n \n     // this maintains the order of responses\n     if (!pfrom->vRecvGetData.empty()) return fOk;\n@@ -4839,15 +4845,15 @@ bool ProcessMessages(CNode* pfrom)\n         it++;\n \n         // Scan for message start\n-        if (memcmp(msg.hdr.pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE) != 0) {\n+        if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), MESSAGE_START_SIZE) != 0) {\n             LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);\n             fOk = false;\n             break;\n         }\n \n         // Read header\n         CMessageHeader& hdr = msg.hdr;\n-        if (!hdr.IsValid(Params().MessageStart()))\n+        if (!hdr.IsValid(chainparams.MessageStart()))\n         {\n             LogPrintf(\"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->id);\n             continue;"
      },
      {
        "sha": "c7dad10ca383a3e27a3e09656fcd463895dc4ca4",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77beab70deae8ad821cc069c1ce80fc809c89c33/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77beab70deae8ad821cc069c1ce80fc809c89c33/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=77beab70deae8ad821cc069c1ce80fc809c89c33",
        "patch": "@@ -192,7 +192,7 @@ bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */\n std::string GetWarnings(const std::string& strFor);\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */\n-bool GetTransaction(const uint256 &hash, CTransaction &tx, uint256 &hashBlock, bool fAllowSlow = false);\n+bool GetTransaction(const uint256 &hash, CTransaction &tx, const Consensus::Params& params, uint256 &hashBlock, bool fAllowSlow = false);\n /** Find the best known block, and make it the tip of the block chain */\n bool ActivateBestChain(CValidationState &state, const CBlock *pblock = NULL);\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n@@ -353,9 +353,8 @@ class CScriptCheck\n \n /** Functions for disk access for blocks */\n bool WriteBlockToDisk(const CBlock& block, CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart);\n-bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos);\n-bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex);\n-\n+bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos, const Consensus::Params& consensusParams);\n+bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n \n /** Functions for validating blocks and updating the block tree */\n \n@@ -381,8 +380,7 @@ bool TestBlockValidity(CValidationState &state, const CBlock& block, CBlockIndex\n \n /** Store block on disk. If dbp is non-NULL, the file is known to already reside on disk */\n bool AcceptBlock(const CBlock& block, CValidationState& state, CBlockIndex **pindex, bool fRequested, CDiskBlockPos* dbp);\n-bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBlockIndex **ppindex= NULL);\n-\n+bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, CBlockIndex **ppindex= NULL);\n \n \n class CBlockFileInfo\n@@ -451,7 +449,7 @@ class CVerifyDB {\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator);\n \n /** Mark a block as invalid. */\n-bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex);\n+bool InvalidateBlock(CValidationState& state, const Consensus::Params& consensusParams, CBlockIndex *pindex);\n \n /** Remove invalidity status from a block and its descendants. */\n bool ReconsiderBlock(CValidationState& state, CBlockIndex *pindex);"
      },
      {
        "sha": "5d69542a913b5d62c2ff94d65a95970c361d2e3b",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77beab70deae8ad821cc069c1ce80fc809c89c33/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77beab70deae8ad821cc069c1ce80fc809c89c33/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=77beab70deae8ad821cc069c1ce80fc809c89c33",
        "patch": "@@ -4,6 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"chain.h\"\n+#include \"chainparams.h\"\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n #include \"main.h\"\n@@ -223,7 +224,7 @@ static bool rest_block(HTTPRequest* req,\n         if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\n             return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not available (pruned data)\");\n \n-        if (!ReadBlockFromDisk(block, pblockindex))\n+        if (!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n             return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n     }\n \n@@ -360,7 +361,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n \n     CTransaction tx;\n     uint256 hashBlock = uint256();\n-    if (!GetTransaction(hash, tx, hashBlock, true))\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n         return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "9c0e78f77218b9158bd274bfd459c6859472902d",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77beab70deae8ad821cc069c1ce80fc809c89c33/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77beab70deae8ad821cc069c1ce80fc809c89c33/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=77beab70deae8ad821cc069c1ce80fc809c89c33",
        "patch": "@@ -405,7 +405,7 @@ UniValue getblock(const UniValue& params, bool fHelp)\n     if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Block not available (pruned data)\");\n \n-    if(!ReadBlockFromDisk(block, pblockindex))\n+    if(!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n \n     if (!fVerbose)\n@@ -824,7 +824,7 @@ UniValue invalidateblock(const UniValue& params, bool fHelp)\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n \n         CBlockIndex* pblockindex = mapBlockIndex[hash];\n-        InvalidateBlock(state, pblockindex);\n+        InvalidateBlock(state, Params().GetConsensus(), pblockindex);\n     }\n \n     if (state.IsValid()) {"
      },
      {
        "sha": "11d9a6f2bbd2824b20245663e03b6dd8a3f8cacb",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77beab70deae8ad821cc069c1ce80fc809c89c33/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77beab70deae8ad821cc069c1ce80fc809c89c33/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=77beab70deae8ad821cc069c1ce80fc809c89c33",
        "patch": "@@ -186,7 +186,7 @@ UniValue getrawtransaction(const UniValue& params, bool fHelp)\n \n     CTransaction tx;\n     uint256 hashBlock;\n-    if (!GetTransaction(hash, tx, hashBlock, true))\n+    if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No information available about transaction\");\n \n     string strHex = EncodeHexTx(tx);\n@@ -256,15 +256,15 @@ UniValue gettxoutproof(const UniValue& params, bool fHelp)\n     if (pblockindex == NULL)\n     {\n         CTransaction tx;\n-        if (!GetTransaction(oneTxid, tx, hashBlock, false) || hashBlock.IsNull())\n+        if (!GetTransaction(oneTxid, tx, Params().GetConsensus(), hashBlock, false) || hashBlock.IsNull())\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction not yet in block\");\n         if (!mapBlockIndex.count(hashBlock))\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Transaction index corrupt\");\n         pblockindex = mapBlockIndex[hashBlock];\n     }\n \n     CBlock block;\n-    if(!ReadBlockFromDisk(block, pblockindex))\n+    if(!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n \n     unsigned int ntxFound = 0;"
      },
      {
        "sha": "d51b8ddaef62793f5ea6b516b050ede47c65fec0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77beab70deae8ad821cc069c1ce80fc809c89c33/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77beab70deae8ad821cc069c1ce80fc809c89c33/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=77beab70deae8ad821cc069c1ce80fc809c89c33",
        "patch": "@@ -1078,7 +1078,7 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((Checkpoints::GuessVerificationProgress(chainParams.Checkpoints(), pindex, false) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n \n             CBlock block;\n-            ReadBlockFromDisk(block, pindex);\n+            ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n             BOOST_FOREACH(CTransaction& tx, block.vtx)\n             {\n                 if (AddToWalletIfInvolvingMe(tx, &block, fUpdate))"
      },
      {
        "sha": "ac788843ebdeda99d5160ccf7cf6584ffe873ec4",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77beab70deae8ad821cc069c1ce80fc809c89c33/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77beab70deae8ad821cc069c1ce80fc809c89c33/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=77beab70deae8ad821cc069c1ce80fc809c89c33",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"chainparams.h\"\n #include \"zmqpublishnotifier.h\"\n #include \"main.h\"\n #include \"util.h\"\n@@ -142,11 +143,12 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n     LogPrint(\"zmq\", \"Publish raw block %s\\n\", pindex->GetBlockHash().GetHex());\n \n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     {\n         LOCK(cs_main);\n         CBlock block;\n-        if(!ReadBlockFromDisk(block, pindex))\n+        if(!ReadBlockFromDisk(block, pindex, consensusParams))\n         {\n             zmqError(\"Can't read block from disk\");\n             return false;"
      }
    ]
  },
  {
    "sha": "755b4ba848bc61c6c0a858aba042739f34fe37ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTViNGJhODQ4YmM2MWM2YzBhODU4YWJhMDQyNzM5ZjM0ZmUzN2Zm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T14:33:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T14:48:23Z"
      },
      "message": "Merge pull request #5574\n\nfd55571 wallet: Expose GUI labels in RPC (Luke Dashjr)",
      "tree": {
        "sha": "e2fe886364b5dc2db9c7a60840c0c90ac9a58e8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2fe886364b5dc2db9c7a60840c0c90ac9a58e8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/755b4ba848bc61c6c0a858aba042739f34fe37ff",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQgO3AAoJEHSBCwEjRsmmpUoH/0TMjJyf00Zd31GW+oap7yd2\ntz4w/LbMDDFxD5SOXL55XQQiPxJ7yvgutb1KEz56Ux7ekIVElZCt2pemMBFmrbGS\nRjNpZJr5fU5R+YKSWB+9y6iykVyEWZ0UHMkfnmFRHh22PxLj5OtawWM8+G+K/VxS\nS9JgyuCuJvPHcdpaSl436HCMkY4wr6oDYJ10IXmSCegxA5KflzztFsqAhO/SH5wX\nBmtrHCNTorGlYTv32nJol7KpDZcXc0an48wy6c1LhHEXL2PgZPAPtUl73TYcTS4k\n7Zd35qfuKAbirN5utpZS6P6SrUX2syZbHL9/GCudkgRhMtx3NMGABGFMa+lzUWo=\n=CBK2\n-----END PGP SIGNATURE-----",
        "payload": "tree e2fe886364b5dc2db9c7a60840c0c90ac9a58e8a\nparent 77beab70deae8ad821cc069c1ce80fc809c89c33\nparent fd55571f069640fc2733410061e82b8dd2ed9280\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447166024 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447166903 +0100\n\nMerge pull request #5574\n\nfd55571 wallet: Expose GUI labels in RPC (Luke Dashjr)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/755b4ba848bc61c6c0a858aba042739f34fe37ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/755b4ba848bc61c6c0a858aba042739f34fe37ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/755b4ba848bc61c6c0a858aba042739f34fe37ff/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77beab70deae8ad821cc069c1ce80fc809c89c33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77beab70deae8ad821cc069c1ce80fc809c89c33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77beab70deae8ad821cc069c1ce80fc809c89c33"
      },
      {
        "sha": "fd55571f069640fc2733410061e82b8dd2ed9280",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd55571f069640fc2733410061e82b8dd2ed9280",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd55571f069640fc2733410061e82b8dd2ed9280"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d93050d98c1dd260a3682995bd992f10f18db5b4",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/755b4ba848bc61c6c0a858aba042739f34fe37ff/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/755b4ba848bc61c6c0a858aba042739f34fe37ff/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=755b4ba848bc61c6c0a858aba042739f34fe37ff",
        "patch": "@@ -1182,6 +1182,8 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             obj.push_back(Pair(\"account\",       strAccount));\n             obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n             obj.push_back(Pair(\"confirmations\", (nConf == std::numeric_limits<int>::max() ? 0 : nConf)));\n+            if (!fByAccounts)\n+                obj.push_back(Pair(\"label\", strAccount));\n             UniValue transactions(UniValue::VARR);\n             if (it != mapTally.end())\n             {\n@@ -1235,7 +1237,8 @@ UniValue listreceivedbyaddress(const UniValue& params, bool fHelp)\n             \"    \\\"address\\\" : \\\"receivingaddress\\\",  (string) The receiving address\\n\"\n             \"    \\\"account\\\" : \\\"accountname\\\",       (string) DEPRECATED. The account of the receiving address. The default account is \\\"\\\".\\n\"\n             \"    \\\"amount\\\" : x.xxx,                  (numeric) The total amount in \" + CURRENCY_UNIT + \" received by the address\\n\"\n-            \"    \\\"confirmations\\\" : n                (numeric) The number of confirmations of the most recent transaction included\\n\"\n+            \"    \\\"confirmations\\\" : n,               (numeric) The number of confirmations of the most recent transaction included\\n\"\n+            \"    \\\"label\\\" : \\\"label\\\"                (string) A comment for the address/transaction, if any\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -1271,7 +1274,8 @@ UniValue listreceivedbyaccount(const UniValue& params, bool fHelp)\n             \"    \\\"involvesWatchonly\\\" : true,   (bool) Only returned if imported addresses were involved in transaction\\n\"\n             \"    \\\"account\\\" : \\\"accountname\\\",  (string) The account name of the receiving account\\n\"\n             \"    \\\"amount\\\" : x.xxx,             (numeric) The total amount received by addresses with this account\\n\"\n-            \"    \\\"confirmations\\\" : n           (numeric) The number of confirmations of the most recent transaction included\\n\"\n+            \"    \\\"confirmations\\\" : n,          (numeric) The number of confirmations of the most recent transaction included\\n\"\n+            \"    \\\"label\\\" : \\\"label\\\"           (string) A comment for the address/transaction, if any\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -1318,6 +1322,8 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n             MaybePushAddress(entry, s.destination);\n             entry.push_back(Pair(\"category\", \"send\"));\n             entry.push_back(Pair(\"amount\", ValueFromAmount(-s.amount)));\n+            if (pwalletMain->mapAddressBook.count(s.destination))\n+                entry.push_back(Pair(\"label\", pwalletMain->mapAddressBook[s.destination].name));\n             entry.push_back(Pair(\"vout\", s.vout));\n             entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee)));\n             if (fLong)\n@@ -1355,6 +1361,8 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n                     entry.push_back(Pair(\"category\", \"receive\"));\n                 }\n                 entry.push_back(Pair(\"amount\", ValueFromAmount(r.amount)));\n+                if (pwalletMain->mapAddressBook.count(r.destination))\n+                    entry.push_back(Pair(\"label\", account));\n                 entry.push_back(Pair(\"vout\", r.vout));\n                 if (fLong)\n                     WalletTxToJSON(wtx, entry);\n@@ -1423,6 +1431,7 @@ UniValue listtransactions(const UniValue& params, bool fHelp)\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (midnight Jan 1 1970 GMT). Available \\n\"\n             \"                                          for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n+            \"    \\\"label\\\" : \\\"label\\\"       (string) A comment for the address/transaction, if any\\n\"\n             \"    \\\"otheraccount\\\": \\\"accountname\\\",  (string) For the 'move' category of transactions, the account the funds came \\n\"\n             \"                                          from (for receiving funds, positive amounts), or went to (for sending funds,\\n\"\n             \"                                          negative amounts).\\n\"\n@@ -1613,6 +1622,7 @@ UniValue listsinceblock(const UniValue& params, bool fHelp)\n             \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT).\\n\"\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n+            \"    \\\"label\\\" : \\\"label\\\"       (string) A comment for the address/transaction, if any\\n\"\n             \"    \\\"to\\\": \\\"...\\\",            (string) If a comment to is associated with the transaction.\\n\"\n              \"  ],\\n\"\n             \"  \\\"lastblock\\\": \\\"lastblockhash\\\"     (string) The hash of the last block\\n\"\n@@ -1700,7 +1710,8 @@ UniValue gettransaction(const UniValue& params, bool fHelp)\n             \"      \\\"account\\\" : \\\"accountname\\\",  (string) DEPRECATED. The account name involved in the transaction, can be \\\"\\\" for the default account.\\n\"\n             \"      \\\"address\\\" : \\\"bitcoinaddress\\\",   (string) The bitcoin address involved in the transaction\\n\"\n             \"      \\\"category\\\" : \\\"send|receive\\\",    (string) The category, either 'send' or 'receive'\\n\"\n-            \"      \\\"amount\\\" : x.xxx                  (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n+            \"      \\\"amount\\\" : x.xxx,                 (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n+            \"      \\\"label\\\" : \\\"label\\\",              (string) A comment for the address/transaction, if any\\n\"\n             \"      \\\"vout\\\" : n,                       (numeric) the vout value\\n\"\n             \"    }\\n\"\n             \"    ,...\\n\""
      }
    ]
  },
  {
    "sha": "9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmE1NGExYjBjMWFlMWIxMmMyOTJkNWNiMzE1OGM1OGM5NzVlYjI0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T14:57:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T14:58:00Z"
      },
      "message": "Merge pull request #6822\n\ne20d924 [trivial] init: Use defaults MIN_RELAY_TX_FEE & TRANSACTION_MAXFEE (MarcoFalke)\n536766c [trivial] New DEFAULT_MIN_RELAY_TX_FEE = 1000 (MarcoFalke)\n5f46a7d transaction_tests: Be more strict checking dust (MarcoFalke)",
      "tree": {
        "sha": "a6c750dc620b99c57d7b887da54c467a91218cb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6c750dc620b99c57d7b887da54c467a91218cb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQgX4AAoJEHSBCwEjRsmmL7AIAKUfRvKt2pmUClsf2TfINN+B\nIobJaWlkawp29j4v679GOyQgKfmDVI8IiCSDQHAE3Z8bp/IQYkDUg90jWmEsf9d6\nSMIitiKzLSiMALZRuttJUyby8mWqlpeZ6Rp8UAi2jIY9VTKYfbxgbU1VFFUZ+a3f\nT2KAzUOdZxFnTOfHC/W4MTLIfmvp56k9p8SSDNLZe5Yi8P2Pt/gX75PotI9eFPqX\n+7DFTwc8Omos1OR03DFIUs+xupGRcQEH3XVw8/Urg0mEU0A4A/6TwhJ8Lzp02V7P\naVXQe3PI0Bc4G0Eh0LKlYCKduQJnhFXJGc1YJp51bVXxuYxt51k0wXcNwzv876o=\n=BgYw\n-----END PGP SIGNATURE-----",
        "payload": "tree a6c750dc620b99c57d7b887da54c467a91218cb4\nparent 755b4ba848bc61c6c0a858aba042739f34fe37ff\nparent e20d9245e58bafdab51105c985478ccb3e0c9095\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447167478 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447167480 +0100\n\nMerge pull request #6822\n\ne20d924 [trivial] init: Use defaults MIN_RELAY_TX_FEE & TRANSACTION_MAXFEE (MarcoFalke)\n536766c [trivial] New DEFAULT_MIN_RELAY_TX_FEE = 1000 (MarcoFalke)\n5f46a7d transaction_tests: Be more strict checking dust (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "755b4ba848bc61c6c0a858aba042739f34fe37ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/755b4ba848bc61c6c0a858aba042739f34fe37ff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/755b4ba848bc61c6c0a858aba042739f34fe37ff"
      },
      {
        "sha": "e20d9245e58bafdab51105c985478ccb3e0c9095",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20d9245e58bafdab51105c985478ccb3e0c9095",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e20d9245e58bafdab51105c985478ccb3e0c9095"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 24,
      "deletions": 7
    },
    "files": [
      {
        "sha": "5f2dc8bf2fce153631626d87f09587b3cb8641e1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
        "patch": "@@ -385,7 +385,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n     strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\"),\n-        CURRENCY_UNIT, FormatMoney(maxTxFee)));\n+        CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), \"wallet.dat\"));\n     strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), true));\n@@ -440,7 +440,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n     }\n     strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n-        CURRENCY_UNIT, FormatMoney(::minRelayTxFee.GetFeePerK())));\n+        CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)));\n     strUsage += HelpMessageOpt(\"-printtoconsole\", _(\"Send trace/debug info to console instead of debug.log file\"));\n     if (showDebug)\n     {"
      },
      {
        "sha": "cd932b5d3a7b5ddc8c99697f80c21104dc9add24",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
        "patch": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying, mining and transaction creation) */\n-CFeeRate minRelayTxFee = CFeeRate(1000);\n+CFeeRate minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);\n \n CTxMemPool mempool(::minRelayTxFee);\n "
      },
      {
        "sha": "a82e3faa4549c4d330584174a9ab1eb67c932430",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
        "patch": "@@ -41,6 +41,8 @@ struct CNodeStateStats;\n \n /** Default for accepting alerts from the P2P network. */\n static const bool DEFAULT_ALERTS = true;\n+/** Default for -minrelaytxfee, minimum relay fee for transactions */\n+static const unsigned int DEFAULT_MIN_RELAY_TX_FEE = 1000;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n /** Default for -limitancestorcount, max number of in-mempool ancestors */"
      },
      {
        "sha": "98882d315e8bc426404a73c79f0fc87b9c6a8333",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
        "patch": "@@ -143,8 +143,8 @@ class CTxOut\n         // to spend something, then we consider it dust.\n         // A typical spendable txout is 34 bytes big, and will\n         // need a CTxIn of at least 148 bytes to spend:\n-        // so dust is a spendable txout less than 546 satoshis\n-        // with default minRelayTxFee.\n+        // so dust is a spendable txout less than\n+        // 546*minRelayTxFee/1000 (in satoshis)\n         if (scriptPubKey.IsUnspendable())\n             return 0;\n "
      },
      {
        "sha": "fb0df1aff431d793dd37a5c9ec5300af7831ca0d",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
        "patch": "@@ -342,11 +342,26 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     string reason;\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n-    t.vout[0].nValue = 501; // dust\n+    // Check dust with default relay fee:\n+    CAmount nDustThreshold = 182 * minRelayTxFee.GetFeePerK()/1000 * 3;\n+    BOOST_CHECK_EQUAL(nDustThreshold, 546);\n+    // dust:\n+    t.vout[0].nValue = nDustThreshold - 1;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n+    // not dust:\n+    t.vout[0].nValue = nDustThreshold;\n+    BOOST_CHECK(IsStandardTx(t, reason));\n \n-    t.vout[0].nValue = 2730; // not dust\n+    // Check dust with odd relay fee to verify rounding:\n+    // nDustThreshold = 182 * 1234 / 1000 * 3\n+    minRelayTxFee = CFeeRate(1234);\n+    // dust:\n+    t.vout[0].nValue = 672 - 1;\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n+    // not dust:\n+    t.vout[0].nValue = 672;\n     BOOST_CHECK(IsStandardTx(t, reason));\n+    minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);\n \n     t.vout[0].scriptPubKey = CScript() << OP_1;\n     BOOST_CHECK(!IsStandardTx(t, reason));"
      }
    ]
  },
  {
    "sha": "32d8b1570cb033bbefcbf7c4850b98fcf2740bfc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMmQ4YjE1NzBjYjAzM2JiZWZjYmY3YzQ4NTBiOThmY2YyNzQwYmZj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T15:39:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T15:39:12Z"
      },
      "message": "Merge pull request #6940\n\n7ca73dc Improving labels for Sent / Received \"Bytes\" (Jonathan Cross)",
      "tree": {
        "sha": "92209c85a3eb7680f2a6f0b7fda23720fb930142",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92209c85a3eb7680f2a6f0b7fda23720fb930142"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/32d8b1570cb033bbefcbf7c4850b98fcf2740bfc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQg+gAAoJEHSBCwEjRsmmChEH+wev1Yvvrqmb4ecnS++6kOpD\n1FhqffJvmmduBJ6wkGDj+tuz1fl8jcIRSqEeCHjMSusdMvsjrDFVZ1FqVyHVQO5c\ng/zKLw6NuElHF3Yx+pejOAjbJKs/M0jFYkiJgSpjxFvTzCJuKk0q8B/AGnLz68zw\nKgtAdcTSSqfWDqJoi0TKe+WkCe7EO6xFeBLhh+PVfHEa4LpmUqLwhDuiUCDNW/It\nMCbZTOyhz9O1DebZp0jYEPOMJD4cQBpkvq/bAsKTHBCrh2qeAl2DoOt6TQH4Tdpx\nfftyfAQcXZXrsForxGXxbtbivF1rv9uSqdQiYQxgyj20ByaFghYKZjqDXKnEqik=\n=6c2K\n-----END PGP SIGNATURE-----",
        "payload": "tree 92209c85a3eb7680f2a6f0b7fda23720fb930142\nparent 9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24\nparent 7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447169950 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447169952 +0100\n\nMerge pull request #6940\n\n7ca73dc Improving labels for Sent / Received \"Bytes\" (Jonathan Cross)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32d8b1570cb033bbefcbf7c4850b98fcf2740bfc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/32d8b1570cb033bbefcbf7c4850b98fcf2740bfc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32d8b1570cb033bbefcbf7c4850b98fcf2740bfc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fa54a1b0c1ae1b12c292d5cb3158c58c975eb24"
      },
      {
        "sha": "7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ca73dcf6b7e4c6b0fbe52718b55d6a0f6197d61"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "eb02dd80ff6458d235a610f73ec73ae4dec3beb3",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/32d8b1570cb033bbefcbf7c4850b98fcf2740bfc/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/32d8b1570cb033bbefcbf7c4850b98fcf2740bfc/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=32d8b1570cb033bbefcbf7c4850b98fcf2740bfc",
        "patch": "@@ -1117,7 +1117,7 @@\n           <item row=\"12\" column=\"0\">\n            <widget class=\"QLabel\" name=\"label_18\">\n             <property name=\"text\">\n-             <string>Bytes Sent</string>\n+             <string>Sent</string>\n             </property>\n            </widget>\n           </item>\n@@ -1140,7 +1140,7 @@\n           <item row=\"13\" column=\"0\">\n            <widget class=\"QLabel\" name=\"label_20\">\n             <property name=\"text\">\n-             <string>Bytes Received</string>\n+             <string>Received</string>\n             </property>\n            </widget>\n           </item>"
      }
    ]
  },
  {
    "sha": "b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTY5NTNlOWJiNWEzMmJjMzUzNjVkMWYwYzVkZTU1MjhjMDY1MGRk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T15:44:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T15:44:53Z"
      },
      "message": "qt: Periodic translations update",
      "tree": {
        "sha": "027a727759ac238bb275583df291351209638519",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/027a727759ac238bb275583df291351209638519"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQhD2AAoJEHSBCwEjRsmmPOwH/06kXyyEf+CWr2NQoLjTvmY4\nxLPpejYLIcntGJ1PjJeBSOUpE6kWxLQIzYX1tOP8gOE0C/hKI+mUtONj/3OhKX37\nJt8kk20KWNt5XCDHaQmg3DtyHq/kt5w+LKN49N2RZyIFhvn2uOWd+LkPaelT4GF2\nT5r4ZVjG14hJs2APTt0nB+dRdBX9xjczvdnH9+KD0oD25SIFKTb70b2xXnuVi/xq\nlrFPOGPIz99j3x5NF6dOVPiO48rOPRO3bVzJHX9rXrGnpWOyOjBYntrfCv/mucMP\nulJK1srwkpZDWA97vdAYm9sOEimDUFQ2gLLscDgnoyJpFPytmp5eiZeeiVMYGSI=\n=AKdW\n-----END PGP SIGNATURE-----",
        "payload": "tree 027a727759ac238bb275583df291351209638519\nparent 32d8b1570cb033bbefcbf7c4850b98fcf2740bfc\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447170272 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447170293 +0100\n\nqt: Periodic translations update\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "32d8b1570cb033bbefcbf7c4850b98fcf2740bfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32d8b1570cb033bbefcbf7c4850b98fcf2740bfc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/32d8b1570cb033bbefcbf7c4850b98fcf2740bfc"
      }
    ],
    "stats": {
      "total": 7309,
      "additions": 3275,
      "deletions": 4034
    },
    "files": [
      {
        "sha": "01e93d786a6fbfca149a377107e5fbcd04ea00de",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -64,8 +64,8 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when the best block changes (%s in cmd is replaced by block \"\n \"hash)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Fees (in %s/kB) smaller than this are considered zero fee for relaying \"\n-\"(default: %s)\"),\n+\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, \"\n+\"mining and transaction creation (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"How thorough the block verification of -checkblocks is (0-4, default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -188,7 +188,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Activating best chain...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Add a node to connect to and attempt to keep the connection open\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow DNS lookups for -addnode, -seednode and -connect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Always query for peer addresses via DNS lookup (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Attempt to recover private keys from a corrupt wallet.dat\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Attempt to recover private keys from a corrupt wallet.dat on startup\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Block creation options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n@@ -226,7 +226,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee (in %s/kB) to add to transactions you sen\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: %u, 0 = all)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Importing...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file on startup\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Include IP addresses in debug output (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Incorrect or no genesis block found. Wrong datadir for network?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Information\"),\n@@ -267,7 +267,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Receive and display P2P network alerts (defau\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Reducing -maxconnections from %d to %d, because of system limitations.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Relay and mine data carrier transactions (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Relay non-P2SH multisig (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions on startup\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n@@ -306,7 +306,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\")\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unsupported argument -benchmark ignored, use -debug=bench.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unsupported argument -debugnet ignored, use -debug=net.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unsupported argument -tor found, use -onion.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Upgrade wallet to latest format\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Upgrade wallet to latest format on startup\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"User Agent comment (%s) contains unsafe characters.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n@@ -320,6 +320,5 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete; upgrade re\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Zapping all transactions from wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"ZeroMQ notification options:\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"on startup\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"wallet.dat corrupt, salvage failed\"),\n };"
      },
      {
        "sha": "33655408539ebddda2f5cc45c8511d95177331be",
        "filename": "src/qt/locale/bitcoin_ach.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ach.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ach.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ach.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ach\" version=\"2.0\">\n+<TS language=\"ach\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     </context>\n@@ -8,6 +8,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     </context>"
      },
      {
        "sha": "d55d2f58acf80fce3b73712b1d2cfab0c20307a4",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"af_ZA\" version=\"2.0\">\n+<TS language=\"af_ZA\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -100,6 +100,9 @@\n         <translation>Beursie dekripsie het misluk</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -630,10 +633,6 @@\n         <source>Options:</source>\n         <translation>Opsies:</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Gebruik die toets netwerk</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Fout: Hardeskyf spasie is baie laag!</translation>"
      },
      {
        "sha": "f70196140c1a13be1d1c537689dc3efee5237232",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 13,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ar\" version=\"2.0\">\n+<TS language=\"ar\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -163,6 +163,10 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>\u0647\u0644 \u0623\u0646\u062a \u0645\u062a\u0623\u0643\u062f \u0645\u0646 \u0631\u063a\u0628\u062a\u0643 \u0641\u064a \u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u0641\u0638\u062a\u0643 \u061f</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u0628\u062a\u0643\u0648\u064a\u0646 \u0633\u0648\u0641 \u064a\u063a\u0644\u0642 \u0627\u0644\u0622\u0646 \u0644\u0625\u0646\u0647\u0627\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0634\u0641\u064a\u0631. \u062a\u0630\u0643\u0631 \u0623\u0646 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0644\u0627 \u064a\u0633\u062a\u0637\u064a\u0639 \u062d\u0645\u0627\u064a\u0629 \u0645\u062d\u0641\u0638\u062a\u0643 \u062a\u0645\u0627\u0645\u064b\u0627 \u0645\u0646 \u0627\u0644\u0633\u0631\u0642\u0629 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0627\u0644\u062e\u0628\u064a\u062b\u0629 \u0627\u0644\u062a\u064a \u062a\u0635\u064a\u0628 \u062c\u0647\u0627\u0632\u0643 </translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>\u0647\u0627\u0645: \u0623\u064a \u0646\u0633\u062e\u0629 \u0625\u062d\u062a\u064a\u0627\u0637\u064a\u0629 \u0633\u0627\u0628\u0642\u0629  \u0642\u0645\u062a \u0628\u0647\u0627 \u0644\u0645\u062d\u0641\u0638\u062a\u0643 \u064a\u062c\u0628 \u0627\u0633\u062a\u0628\u062f\u0627\u0644\u0647\u0627  \u0628\u0623\u062e\u0631\u0649 \u062d\u062f\u064a\u062b\u0629\u060c \u0645\u0634\u0641\u0631\u0629. \u0644\u0623\u0633\u0628\u0627\u0628 \u0623\u0645\u0646\u064a\u0629\u060c \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a\u0629 \u0627\u0644\u0633\u0627\u0628\u0642\u0629 \u0644\u0645\u0644\u0641\u0627\u062a \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0627\u0644\u063a\u064a\u0631 \u0645\u0634\u0641\u0631\u0629 \u062a\u0635\u0628\u062d \u0639\u062f\u064a\u0645\u0629 \u0627\u0644\u0641\u0627\u0626\u062f\u0629 \u0645\u0639 \u0628\u062f\u0627\u064a\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0627\u0644\u0645\u0634\u0641\u0631\u0629 \u0627\u0644\u062c\u062f\u064a\u062f\u0629.</translation>\n@@ -179,6 +183,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>\u0623\u062f\u062e\u0644 \u0639\u0628\u0627\u0631\u0629 \u0645\u0631\u0648\u0631 \u062c\u062f\u064a\u062f\u0629 \u0625\u0644\u0649 \u0627\u0644\u0645\u062d\u0641\u0638\u0629. \u0627\u0644\u0631\u062c\u0627\u0621 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0628\u0627\u0631\u0629 \u0645\u0631\u0648\u0631 \u062a\u062a\u0643\u0648\u0646 \u0645\u064610 \u062d\u0631\u0648\u0641 \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644, \u0623\u0648 \u0623\u0643\u062b\u0631 \u0645\u0646 7 \u0643\u0644\u0645\u0627\u062a</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u0623\u062f\u062e\u0644 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0642\u062f\u064a\u0645\u0629 \u0648\u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0644\u0644\u0645\u062d\u0641\u0638\u0629.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>\u0641\u0634\u0644 \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n@@ -208,6 +216,9 @@\n         <translation>\u0644\u0642\u062f \u062a\u0645 \u062a\u063a\u064a\u0631 \u0639\u0628\u0627\u0631\u0629 \u0645\u0631\u0648\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0628\u0646\u062c\u0627\u062d</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -897,12 +908,16 @@\n         <translation>\u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0633\u0647\u0645 \u0627\u0644\u0627\u0639\u0644\u0649 \u0648 \u0627\u0644\u0627\u0633\u0641\u0644 \u0644\u0644\u062a\u0646\u0642\u0644 \u0628\u064a\u0646 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0648 &lt;b&gt;Ctrl-L&lt;/b&gt;  \u0644\u0645\u0633\u062d \u0627\u0644\u0634\u0627\u0634\u0629</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>\u063a\u064a\u0631 \u0645\u0639\u0631\u0641</translation>\n+        <source>Yes</source>\n+        <translation>\u0646\u0639\u0645</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>\u062c\u0627\u0631\u064a \u0627\u0644\u062c\u0644\u0628...</translation>\n+        <source>No</source>\n+        <translation>\u0644\u0627</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>\u063a\u064a\u0631 \u0645\u0639\u0631\u0641</translation>\n     </message>\n </context>\n <context>\n@@ -1116,10 +1131,6 @@\n         <source>Copy change</source>\n         <translation>\u0646\u0633\u062e \u0627\u0644\u062a\u0639\u062f\u064a\u0644</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u0645\u062c\u0645\u0648\u0639 \u0627\u0644\u0645\u0628\u0644\u063a %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u0623\u0648</translation>\n@@ -1630,10 +1641,6 @@\n         <source>Specify data directory</source>\n         <translation>\u062d\u062f\u062f \u0645\u062c\u0644\u062f \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0634\u0628\u0643\u0647</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>\u0642\u0628\u0648\u0644 \u0627\u0644\u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0645\u0646 \u062e\u0627\u0631\u062c</translation>"
      },
      {
        "sha": "57dd9c36118546522a0b9ba49dacb9b2e424746f",
        "filename": "src/qt/locale/bitcoin_be_BY.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 13,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_be_BY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_be_BY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_be_BY.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"be_BY\" version=\"2.0\">\n+<TS language=\"be_BY\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>\u041f\u0430\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0444\u0440\u0430\u0437\u0430 \u0433\u0430\u043c\u0430\u043d\u0446\u0430 \u043f\u0430\u0441\u043f\u044f\u0445\u043e\u0432\u0430 \u0437\u043c\u0435\u043d\u0435\u043d\u0430.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1372,10 +1375,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u0417\u0430\u043f\u0443\u0441\u0446\u0456\u0446\u044c \u0443 \u0444\u043e\u043d\u0435 \u044f\u043a \u0434\u044d\u043c\u0430\u043d \u0456 \u043f\u0440\u044b\u043c\u0430\u0446\u044c \u043a\u0430\u043c\u0430\u043d\u0434\u044b</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u0423\u0436\u044b\u0432\u0430\u0446\u044c \u0442\u044d\u0441\u0442\u0430\u0432\u0430\u0435 \u0441\u0435\u0446\u0456\u0432\u0430</translation>\n-    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\u0426\u0456 \u0436\u0430\u0434\u0430\u0435\u0446\u0435 \u0432\u044b \u043f\u0435\u0440\u0430\u0431\u0443\u0434\u0430\u0432\u0430\u0446\u044c \u0437\u0430\u0440\u0430\u0437 \u0431\u0430\u0437\u0443 \u0437\u0432\u0435\u0441\u0442\u0430\u043a \u0431\u043b\u043e\u043a\u0430\u045e?</translation>\n@@ -1396,10 +1395,6 @@\n         <source>Error opening block database</source>\n         <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430 \u0430\u0434\u0447\u044b\u043d\u0435\u043d\u043d\u044f \u0431\u0430\u0437\u044b \u0437\u0432\u0435\u0441\u0442\u0430\u043a \u0431\u043b\u043e\u043a\u0430\u045e</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430: \u0437\u0434\u0430\u0440\u044b\u043b\u0430\u0441\u044f \u0424\u0430\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0443\u043d\u0443\u0442\u0440\u0430\u043d\u0430\u044f \u043f\u0430\u043c\u044b\u043b\u043a\u0430, \u0433\u043b\u044f\u0434\u0437\u0456 debug.log \u0434\u043b\u044f \u043f\u0430\u0434\u0440\u0430\u0431\u044f\u0437\u043d\u0430\u0441\u0446\u044f\u045e</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430: \u0417\u0430\u043c\u0430\u043b\u0430 \u0432\u043e\u043b\u044c\u043d\u0430\u0433\u0430 \u043c\u0435\u0441\u0446\u0430 \u043d\u0430 \u0434\u044b\u0441\u043a\u0443!</translation>\n@@ -1492,10 +1487,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u041f\u0435\u0440\u0430\u0441\u043a\u0430\u043d\u0430\u0432\u0430\u0446\u044c \u043b\u0430\u043d\u0446\u0443\u0433 \u0431\u043b\u043e\u043a\u0430\u045e \u0434\u0437\u0435\u043b\u044f \u043f\u043e\u0448\u0443\u043a\u0443 \u0430\u0434\u0441\u0443\u0442\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0439</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u0423\u0436\u044b\u0432\u0430\u0446\u044c OpenSSL (https) \u0434\u043b\u044f JSON-RPC \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u044f\u045e</translation>\n-    </message>\n     <message>\n         <source>Loading addresses...</source>\n         <translation>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0430\u0434\u0440\u0430\u0441\u044b...</translation>"
      },
      {
        "sha": "d2db8a196c0523088dde6f9528508520f21fa9b1",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 33,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"bg\" version=\"2.0\">\n+<TS language=\"bg\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -208,6 +208,9 @@\n         <translation>\u041f\u0430\u0440\u043e\u043b\u0430\u0442\u0430 \u043d\u0430 \u043f\u043e\u0440\u0442\u0444\u0435\u0439\u043b\u0430 \u0431\u0435\u0448\u0435 \u043f\u0440\u043e\u043c\u0435\u043d\u0435\u043d\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1048,10 +1051,6 @@\n         <source>Refund from %1</source>\n         <translation>\u0412\u044a\u0437\u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0432\u0430\u043d\u0435 \u043d\u0430 \u0441\u0443\u043c\u0430 \u043e\u0442 %1</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>\u0414\u043e\u0441 \u0437\u0430\u0449\u0438\u0442\u0430 \u043d\u0430 \u0437\u0430\u044f\u0432\u043a\u0430\u0442\u0430 \u0437\u0430 \u043f\u043b\u0430\u0449\u0430\u043d\u0435</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u043a\u043e\u043c\u0443\u043d\u0438\u043a\u0430\u0446\u0438\u044f\u0442\u0430 \u0441 %1: %2</translation>\n@@ -1224,10 +1223,6 @@\n         <source>Services</source>\n         <translation>\u0423\u0441\u043b\u0443\u0433\u0438</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u0430 \u0432\u0438\u0441\u043e\u0447\u0438\u043d\u0430</translation>\n-    </message>\n     <message>\n         <source>Connection Time</source>\n         <translation>\u041f\u0440\u043e\u0434\u044a\u043b\u0436\u0438\u0442\u0435\u043b\u043d\u043e\u0441\u0442 \u043d\u0430 \u0432\u0440\u044a\u0437\u043a\u0430\u0442\u0430</translation>\n@@ -1340,10 +1335,6 @@\n         <source>Unknown</source>\n         <translation>\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u0435\u043d</translation>\n     </message>\n-    <message>\n-        <source>Fetching...</source>\n-        <translation>\u041f\u0440\u0438\u0445\u0432\u0430\u0449\u0430\u043d\u0435...</translation>\n-    </message>\n </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n@@ -1632,10 +1623,6 @@\n         <source>Copy change</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u0430\u0439 \u0440\u0435\u0441\u0442\u043e\u0442\u043e</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u041f\u044a\u043b\u043d\u0430 \u0441\u0443\u043c\u0430 %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u0438\u043b\u0438</translation>\n@@ -2326,18 +2313,10 @@\n         <source>Specify your own public address</source>\n         <translation>\u0412\u044a\u0432\u0435\u0434\u0435\u0442\u0435 \u0412\u0430\u0448 \u043f\u0443\u0431\u043b\u0438\u0447\u0435\u043d \u0430\u0434\u0440\u0435\u0441</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u0442\u0430 \u043c\u0440\u0435\u0436\u0430</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>\u041f\u0440\u0438\u0435\u043c\u0430\u0439\u0442\u0435 \u0432\u0440\u044a\u0437\u043a\u0438 \u043e\u0442\u0432\u044a\u043d.(\u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435:1 \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u0435\u043d \u0441\u043b\u0443\u0447\u0430\u0439 -proxy \u0438\u043b\u0438 -connect)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: -paytxfee \u0435 \u0441 \u043c\u043d\u043e\u0442\u043e \u0433\u043e\u043b\u044f\u043c\u0430 \u0437\u0430\u0434\u0430\u0434\u0435\u043d\u0430 \u0441\u0442\u043e\u0439\u043d\u043e\u0441\u0442! \u0422\u043e\u0432\u0430 \u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u0430\u0442\u0430 \u0442\u0430\u043a\u0441\u0430, \u043a\u043e\u044f\u0442\u043e \u0449\u0435 \u043f\u043b\u0430\u0442\u0438\u0442\u0435 \u0430\u043a\u043e \u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f.</translation>\n-    </message>\n     <message>\n         <source>Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.</source>\n         <translation>\u0421\u043b\u043e\u0436\u0435\u0442\u0435 \u0432 \u0431\u044f\u043b \u0441\u043f\u0438\u0441\u044a\u043a \u043f\u0438\u044a\u0440\u0438,\u0441\u0432\u044a\u0440\u0437\u0432\u0430\u0449\u0438 \u0441\u0435 \u043e\u0442 \u0434\u0430\u0434\u0435\u043d\u0430\u0442\u0430 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442 \u043c\u0430\u0441\u043a\u0430 \u0438\u043b\u0438 \u0430\u0439\u043f\u0438 \u0430\u0434\u0440\u0435\u0441.\u041c\u043e\u0436\u0435 \u0434\u0430 \u0431\u044a\u0434\u0435 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u043e \u043d\u0435\u043a\u043e\u043b\u043a\u043e\u043a\u0440\u0430\u0442\u043d\u043e.</translation>\n@@ -2390,10 +2369,6 @@\n         <source>Set the number of threads for coin generation if enabled (-1 = all cores, default: %d)</source>\n         <translation>\u0417\u0430\u043b\u043e\u0436\u0435\u0442\u0435 \u0431\u0440\u043e\u044f \u043d\u0430 \u043d\u0438\u0448\u043a\u0438 \u0437\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u043c\u043e\u043d\u0435\u0442\u0438 \u0430\u043a\u043e \u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043e(-1 = \u0432\u0441\u0438\u0447\u043a\u0438 \u044f\u0434\u0440\u0430, \u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435: %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: -maxtxfee \u0438\u043c\u0430 \u043c\u043d\u043e\u0433\u043e \u0432\u0438\u0441\u043e\u043a\u0430 \u0441\u0442\u043e\u0439\u043d\u043e\u0441\u0442! \u0422\u043e\u043b\u043a\u043e\u0432\u0430 \u0432\u0438\u0441\u043e\u043a\u0438 \u0442\u0430\u043a\u0441\u0438 \u043c\u043e\u0433\u0430\u0442 \u0434\u0430 \u0431\u044a\u0434\u0430\u0442 \u0437\u0430\u043f\u043b\u0430\u0442\u0435\u043d\u0438 \u043d\u0430 \u0435\u0434\u043d\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f.</translation>\n-    </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430.( \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435:0)</translation>\n@@ -2470,10 +2445,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0441\u043a\u0430\u043d\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0431\u043b\u043e\u043a-\u0432\u0440\u044a\u0437\u043a\u0430 \u0437\u0430 \u043b\u0438\u043f\u0441\u0432\u0430\u0449\u0438 \u043f\u043e\u0440\u0442\u0444\u0435\u0439\u043b\u043d\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u0439\u0442\u0435 OpenSSL (https) \u0437\u0430 JSON-RPC \u0432\u0440\u044a\u0437\u043a\u0438\u0442\u0435</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u0422\u043e\u0432\u0430 \u043f\u043e\u043c\u043e\u0449\u043d\u043e \u0441\u044a\u043e\u0431\u0449\u0435\u043d\u0438\u0435</translation>"
      },
      {
        "sha": "a186842201f02e8014979da3179dc3f3e8dcf18e",
        "filename": "src/qt/locale/bitcoin_bs.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_bs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_bs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bs.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"bs\" version=\"2.0\">\n+<TS language=\"bs\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     </context>\n@@ -8,6 +8,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>"
      },
      {
        "sha": "b9aa40a7e30a8476cd5437f1c44881f177580494",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 144,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ca\" version=\"2.0\">\n+<TS language=\"ca\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>La contrasenya del moneder ha estat modificada correctament.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1286,10 +1289,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>La sol\u00b7licitud de pagament %1 \u00e9s massa gran (%2 bytes, perm\u00e8s %3 bytes).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Protecci\u00f3 de DoS per a la sol\u00b7licitud de pagament</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Error en comunicar amb %1: %2</translation>\n@@ -1478,14 +1477,6 @@\n         <source>Services</source>\n         <translation>Serveis</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Al\u00e7ada inicial</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Sincronitza l'al\u00e7ada</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Puntuaci\u00f3 de bandeig</translation>\n@@ -1607,12 +1598,16 @@\n         <translation>Sortint</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Desconegut</translation>\n+        <source>Yes</source>\n+        <translation>S\u00ed</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>S'est\u00e0 obtenint...</translation>\n+        <source>No</source>\n+        <translation>No</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Desconegut</translation>\n     </message>\n </context>\n <context>\n@@ -1978,10 +1973,6 @@\n         <source>Copy change</source>\n         <translation>Copia el canvi</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Import total %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -2804,10 +2795,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Executa en segon pla com a programa dimoni i accepta ordres</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Utilitza la xarxa de prova</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accepta connexions de fora (per defecte: 1 si no -proxy o -connect)</translation>\n@@ -2828,14 +2815,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Executa una ordre quan una transacci\u00f3 del moneder canvi\u00ef (%s en cmd es canvia per TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Comissions totals m\u00e0ximes que s'utilitzaran en una \u00fanica transacci\u00f3 de moneder; si s'estableix un valor massa baix es poden interrompre transaccions grans (per defecte: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Redueix els requeriments d'emmagatzemament podant (suprimint) els blocs antics. Aquest mode inhabilita l'\u00fas de moneders i \u00e9s incompatible amb -tindex. Av\u00eds: Revertir aquesta configuraci\u00f3 comporta tornar a baixar la cadena de blocs sencera. (per defecte: 0 = inhabilita la poda de blocs, &gt;%u = mida objectiu en MiB per utilitzar els fitxers de blocs)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Defineix el nombre de fils de verificaci\u00f3 d'scripts (%u a %d, 0 = auto, &lt;0 = deixa tants nuclis lliures, per defecte: %d)</translation>\n@@ -2856,10 +2835,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>AV\u00cdS: comproveu la vostra connexi\u00f3 a la xarxa, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Av\u00eds: el -paytxfee \u00e9s molt elevat! Aquesta \u00e9s la comissi\u00f3 de transacci\u00f3 que pagareu si envieu una transacci\u00f3.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Av\u00eds: la xarxa no sembla que hi estigui plenament d'acord. Alguns miners sembla que estan experimentant problemes.</translation>\n@@ -2868,10 +2843,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Av\u00eds: sembla que no estem plenament d'acord amb els nostres iguals! Podria caler que actualitzar l'aplicaci\u00f3, o potser que ho facin altres nodes.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Av\u00eds: error en llegir el fitxer wallet.dat! Totes les claus es llegeixen correctament, per\u00f2 hi ha dades de transaccions o entrades de la llibreta d'adreces absents o b\u00e9 son incorrectes.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Av\u00eds: el fitxer wallet.dat \u00e9s corrupte, dades rescatades! L'arxiu wallet.dat original ha estat desat com wallet.{estampa_temporal}.bak al directori %s; si el teu balan\u00e7 o transaccions son incorrectes hauries de restaurar-lo de un backup.</translation>\n@@ -2936,10 +2907,6 @@\n         <source>Error opening block database</source>\n         <translation>Error en obrir la base de dades de blocs</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Error: s'ha produ\u00eft un error intern fatal. Consulteu debug.log per a m\u00e9s detalls</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Error: Espai al disc baix!</translation>\n@@ -2948,10 +2915,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Ha fallat escoltar a qualsevol port. Feu servir -listen=0 si voleu fer aix\u00f2.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Si no se subministra &lt;category&gt;, mostra tota la informaci\u00f3 de depuraci\u00f3.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>S'est\u00e0 important...</translation>\n@@ -3052,18 +3015,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: ha fallat escoltar les connexions entrants (l'escoltament ha retornat l'error %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Error: s'ha trobat un argument no perm\u00e8s de -socks. Ja no es pot definir m\u00e9s la versi\u00f3 de SOCKS, nom\u00e9s s'accepten els proxies de SOCKS5.\u00e7</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Executa l'ordre quan es rebi un av\u00eds rellevant o veiem una forquilla molt llarga (%s en cmd \u00e9s reempla\u00e7at per un missatge)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la transmissi\u00f3 (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si no s'especifica una paytxfee (comissi\u00f3 de transacci\u00f3 de pagament), inclogueu suficient comissi\u00f3 per tal que les transaccions comencin a confirmar-se en una mitja de n blocs (per defecte: %u)</translation>\n@@ -3076,10 +3031,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Mida m\u00e0xima de les dades en les transaccions de l'operador en qu\u00e8 confiem i en les meves (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Poda configurada per sota el m\u00ednim de %d MB. Feu servir un nombre superior.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Consulta a adreces d'iguals a trav\u00e9s de DNS, si es troba baix en adreces (per defecte: 1 a menys que -connect)</translation>\n@@ -3104,37 +3055,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Aquest producte inclou programari desenvolupat pel projecte OpenSSL per a \u00fas a l'OpenSSL Toolkit &lt;https://www.openssl.org/&gt; i programari criptogr\u00e0fic escrit per Eric Young i programari UPnP escrit per Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Per utilitzar bitcoind, o l'opci\u00f3 de serviddor de bitcoin-qt, heu de definir una rpcpassword en el fitxer de configuraci\u00f3:\n-%s\n-Es recomana que utilitzeu la contrasenya aleat\u00f2ria seg\u00fcent:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(no cal que recordeu la contrasenya)\n-El nom d'usuari i la contrasenya NO han de ser els mateixos.\n-Si el fitxer no existeix, creeu-ne un amb permisos de lectura nom\u00e9s per al seu propietari.\n-Es recomana definir alertnotify per tal de ser notificat de qualsevol problema;\n-per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Av\u00eds: s'ha especificat un -maxtxfee molt alt! Comissions tan grans podrien pagar-se en una \u00fanica transacci\u00f3.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Av\u00eds: comproveu que la data i hora del vostre ordinador siguin correctes! Si el vostre rellotge no \u00e9s correcte, el Bitcoin Core no funcionar\u00e0 correctament.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Els iguals en la llista blanca no poden ser bandejats per DoS i es transmetran sempre llurs transaccions, fins i tot si ja s\u00f3n a la mempool. Aix\u00f2 \u00e9s \u00fatil, p. ex., per a una passarel\u00b7la</translation>\n@@ -3155,10 +3075,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Activating best chain...</source>\n         <translation>S'est\u00e0 activant la millor cadena...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>No es pot executar amb un moneder en mode poda.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n@@ -3175,10 +3091,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i Els desenvolupadors del Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>No s'ha pogut analitzar el valor -rpcbind %s com una adre\u00e7a de xarxa</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Error en carregar wallet.dat: el moneder requereix una versi\u00f3 m\u00e9s nova del Bitcoin core</translation>\n@@ -3187,14 +3099,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Error reading from database, shutting down.</source>\n         <translation>Error en llegir la base de dades, tancant.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Error: s'ha trobat un argument -tor no acceptat. Feu servir -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Comissi\u00f3 en (BTC/kB) per afegir a les transaccions que envieu (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>&amp;Informaci\u00f3</translation>\n@@ -3235,18 +3139,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Node relay options:</source>\n         <translation>Opcions de transmissi\u00f3 del node:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Opcions RPC SSL: (veieu el wiki del Bitcoin per a instruccions de configuraci\u00f3 de l'SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Opcions del servidor RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Suport RPC per a connexions HTTP persistents (per defecte: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Reconstrueix l'\u00edndex de la cadena de blocs dels fitxers blk000??.dat actuals a l'inici.</translation>\n@@ -3323,10 +3219,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en aquest ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Utilitza UPnP per a mapejar els ports d'escolta (per defecte: 1 quan s'escolta)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nom d'usuari per a connexions JSON-RPC</translation>\n@@ -3339,14 +3231,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Warning</source>\n         <translation>Av\u00eds</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Av\u00eds: s'ha ignorat l'argument no acceptat de -benchmark. Feu servir -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Av\u00eds: s'ha ignorat l'argument no acceptat de -debugnet. Feu servir -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Se suprimeixen totes les transaccions del moneder...</translation>\n@@ -3375,10 +3259,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Reescaneja la cadena de blocs en les transaccions de moneder perdudes</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Utilitza OpenSSL (https) per a connexions JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Aquest misatge d'ajuda</translation>\n@@ -3423,10 +3303,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>(default: %s)</source>\n         <translation>(per defecte: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Xifrats acceptables (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Demana sempre les adreces dels iguals a trav\u00e9s de consultes DNS (per defecte: %u)</translation>\n@@ -3487,14 +3363,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Retransmet multisig no P2SH (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Fitxer de certificat del servidor (per defecte: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Clau privada del servidor (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Defineix la mida clau disponible a &lt;n&gt; (per defecte: %u)</translation>"
      },
      {
        "sha": "edb14dedbad7485ee3c27b6831d17c2ee4de87a0",
        "filename": "src/qt/locale/bitcoin_ca@valencia.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 144,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ca@valencia.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ca@valencia.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca@valencia.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ca@valencia\" version=\"2.0\">\n+<TS language=\"ca@valencia\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>La contrasenya del moneder ha estat modificada correctament.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1282,10 +1285,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>La sol\u00b7licitud de pagament %1 \u00e9s massa gran (%2 bytes, perm\u00e9s %3 bytes).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Protecci\u00f3 de DoS per a la sol\u00b7licitud de pagament</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Error en comunicar amb %1: %2</translation>\n@@ -1474,14 +1473,6 @@\n         <source>Services</source>\n         <translation>Serveis</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Al\u00e7ada inicial</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Sincronitza l'al\u00e7ada</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Puntuaci\u00f3 de bandeig</translation>\n@@ -1603,12 +1594,16 @@\n         <translation>Eixint</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Desconegut</translation>\n+        <source>Yes</source>\n+        <translation>S\u00ed</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>S'est\u00e0 obtenint...</translation>\n+        <source>No</source>\n+        <translation>No</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Desconegut</translation>\n     </message>\n </context>\n <context>\n@@ -1974,10 +1969,6 @@\n         <source>Copy change</source>\n         <translation>Copia el canvi</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Import total %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -2800,10 +2791,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Executa en segon pla com a programa dimoni i accepta ordes</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Utilitza la xarxa de prova</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accepta connexions de fora (per defecte: 1 si no -proxy o -connect)</translation>\n@@ -2824,14 +2811,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Executa una orde quan una transacci\u00f3 del moneder canvie (%s en cmd es canvia per TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Comissions totals m\u00e0ximes que s'utilitzaran en una \u00fanica transacci\u00f3 de moneder; si s'estableix un valor massa baix es poden interrompre transaccions grans (per defecte: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Redueix els requeriments d'emmagatzemament podant (suprimint) els blocs antics. Este mode inhabilita l'\u00fas de moneders i \u00e9s incompatible amb -tindex. Av\u00eds: Revertir esta configuraci\u00f3 comporta tornar a baixar la cadena de blocs sencera. (per defecte: 0 = inhabilita la poda de blocs, &gt;%u = mida objectiu en MiB per utilitzar els fitxers de blocs)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Defineix el nombre de fils de verificaci\u00f3 d'scripts (%u a %d, 0 = auto, &lt;0 = deixa tants nuclis lliures, per defecte: %d)</translation>\n@@ -2852,10 +2831,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>AV\u00cdS: comproveu la vostra connexi\u00f3 a la xarxa, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Av\u00eds: el -paytxfee \u00e9s molt elevat! Esta \u00e9s la comissi\u00f3 de transacci\u00f3 que pagareu si envieu una transacci\u00f3.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Av\u00eds: la xarxa no pareix que hi estiga plenament d'acord. Alguns miners pareix que estan experimentant problemes.</translation>\n@@ -2864,10 +2839,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Av\u00eds: pareix que no estem plenament d'acord amb els nostres iguals! Podria caldre que actualitzar l'aplicaci\u00f3, o potser que ho facen altres nodes.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Av\u00eds: error en llegir el fitxer wallet.dat! Totes les claus es lligen correctament, per\u00f2 hi ha dades de transaccions o entrades de la llibreta d'adreces absents o b\u00e9 son incorrectes.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Av\u00eds: el fitxer wallet.dat \u00e9s corrupte, dades rescatades! L'arxiu wallet.dat original ha estat guardat com wallet.{estampa_temporal}.bak al directori %s; si el teu balan\u00e7 o transaccions son incorrectes hauries de restaurar-lo de un backup.</translation>\n@@ -2932,10 +2903,6 @@\n         <source>Error opening block database</source>\n         <translation>Error en obrir la base de dades de blocs</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Error: s'ha produ\u00eft un error intern fatal. Consulteu debug.log per a m\u00e9s detalls</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Error: Espai al disc baix!</translation>\n@@ -2944,10 +2911,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Ha fallat escoltar a qualsevol port. Feu servir -listen=0 si voleu fer aix\u00f2.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Si no se subministra &lt;category&gt;, mostra tota la informaci\u00f3 de depuraci\u00f3.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>S'est\u00e0 important...</translation>\n@@ -3048,18 +3011,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: ha fallat escoltar les connexions entrants (l'escoltament ha retornat l'error %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Error: s'ha trobat un argument no perm\u00e9s de -socks. Ja no es pot definir m\u00e9s la versi\u00f3 de SOCKS, nom\u00e9s s'accepten els proxies de SOCKS5.\u00e7</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Executa l'orde quan es reba un av\u00eds rellevant o veiem una forquilla molt llarga (%s en cmd \u00e9s reempla\u00e7at per un missatge)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la transmissi\u00f3 (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si no s'especifica una paytxfee (comissi\u00f3 de transacci\u00f3 de pagament), inclogueu suficient comissi\u00f3 per tal que les transaccions comencen a confirmar-se en una mitja de n blocs (per defecte: %u)</translation>\n@@ -3072,10 +3027,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Mida m\u00e0xima de les dades en les transaccions de l'operador en qu\u00e8 confiem i en les meues (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Poda configurada per sota el m\u00ednim de %d MB. Feu servir un nombre superior.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Consulta a adreces d'iguals a trav\u00e9s de DNS, si es troba baix en adreces (per defecte: 1 a menys que -connect)</translation>\n@@ -3100,37 +3051,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Este producte inclou programari desenvolupat pel projecte OpenSSL per a \u00fas a l'OpenSSL Toolkit &lt;https://www.openssl.org/&gt; i programari criptogr\u00e0fic escrit per Eric Young i programari UPnP escrit per Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Per utilitzar bitcoind, o l'opci\u00f3 de serviddor de bitcoin-qt, heu de definir una rpcpassword en el fitxer de configuraci\u00f3:\n-%s\n-Es recomana que utilitzeu la contrasenya aleat\u00f2ria seg\u00fcent:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(no cal que recordeu la contrasenya)\n-El nom d'usuari i la contrasenya NO han de ser els mateixos.\n-Si el fitxer no existeix, creeu-ne un amb permisos de lectura nom\u00e9s per al seu propietari.\n-Es recomana definir alertnotify per tal de ser notificat de qualsevol problema;\n-per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Av\u00eds: s'ha especificat un -maxtxfee molt alt! Comissions tan grans podrien pagar-se en una \u00fanica transacci\u00f3.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Av\u00eds: comproveu que la data i hora del vostre ordinador siguen correctes! Si el vostre rellotge no \u00e9s correcte, el Bitcoin Core no funcionar\u00e0 correctament.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Els iguals en la llista blanca no poden ser bandejats per DoS i es transmetran sempre llurs transaccions, fins i tot si ja s\u00f3n a la mempool. Aix\u00f2 \u00e9s \u00fatil, p. ex., per a una passarel\u00b7la</translation>\n@@ -3151,10 +3071,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Activating best chain...</source>\n         <translation>S'est\u00e0 activant la millor cadena...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>No es pot executar amb un moneder en mode poda.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n@@ -3171,10 +3087,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i Els desenvolupadors del Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>No s'ha pogut analitzar el valor -rpcbind %s com una adre\u00e7a de xarxa</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Error en carregar wallet.dat: el moneder requereix una versi\u00f3 m\u00e9s nova del Bitcoin core</translation>\n@@ -3183,14 +3095,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Error reading from database, shutting down.</source>\n         <translation>Error en llegir la base de dades, tancant.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Error: s'ha trobat un argument -tor no acceptat. Feu servir -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Comissi\u00f3 en (BTC/kB) per afegir a les transaccions que envieu (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>&amp;Informaci\u00f3</translation>\n@@ -3231,18 +3135,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Node relay options:</source>\n         <translation>Opcions de transmissi\u00f3 del node:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Opcions RPC SSL: (veieu el wiki del Bitcoin per a instruccions de configuraci\u00f3 de l'SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Opcions del servidor RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Suport RPC per a connexions HTTP persistents (per defecte: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Reconstrueix l'\u00edndex de la cadena de blocs dels fitxers blk000??.dat actuals a l'inici.</translation>\n@@ -3319,10 +3215,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en este ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Utilitza UPnP per a mapejar els ports d'escolta (per defecte: 1 quan s'escolta)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nom d'usuari per a connexions JSON-RPC</translation>\n@@ -3335,14 +3227,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Warning</source>\n         <translation>Av\u00eds</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Av\u00eds: s'ha ignorat l'argument no acceptat de -benchmark. Feu servir -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Av\u00eds: s'ha ignorat l'argument no acceptat de -debugnet. Feu servir -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Se suprimeixen totes les transaccions del moneder...</translation>\n@@ -3371,10 +3255,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Reescaneja la cadena de blocs en les transaccions de moneder perdudes</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Utilitza OpenSSL (https) per a connexions JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Este misatge d'ajuda</translation>\n@@ -3419,10 +3299,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>(default: %s)</source>\n         <translation>(per defecte: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Xifrats acceptables (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Demana sempre les adreces dels iguals a trav\u00e9s de consultes DNS (per defecte: %u)</translation>\n@@ -3483,14 +3359,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Retransmet multisig no P2SH (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Fitxer de certificat del servidor (per defecte: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Clau privada del servidor (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Defineix la mida clau disponible a &lt;n&gt; (per defecte: %u)</translation>"
      },
      {
        "sha": "f10a41163e3060dd03ebfba1253efd40529bffce",
        "filename": "src/qt/locale/bitcoin_ca_ES.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 144,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ca_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ca_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca_ES.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ca_ES\" version=\"2.0\">\n+<TS language=\"ca_ES\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>La contrasenya del moneder ha estat modificada correctament.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1286,10 +1289,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>La sol\u00b7licitud de pagament %1 \u00e9s massa gran (%2 bytes, perm\u00e8s %3 bytes).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Protecci\u00f3 de DoS per a la sol\u00b7licitud de pagament</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Error en comunicar amb %1: %2</translation>\n@@ -1478,14 +1477,6 @@\n         <source>Services</source>\n         <translation>Serveis</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Al\u00e7ada inicial</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Sincronitza l'al\u00e7ada</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Puntuaci\u00f3 de bandeig</translation>\n@@ -1607,12 +1598,16 @@\n         <translation>Sortint</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Desconegut</translation>\n+        <source>Yes</source>\n+        <translation>S\u00ed</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>S'est\u00e0 obtenint...</translation>\n+        <source>No</source>\n+        <translation>No</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Desconegut</translation>\n     </message>\n </context>\n <context>\n@@ -1978,10 +1973,6 @@\n         <source>Copy change</source>\n         <translation>Copia el canvi</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Import total %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -2804,10 +2795,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Executa en segon pla com a programa dimoni i accepta ordres</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Utilitza la xarxa de prova</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accepta connexions de fora (per defecte: 1 si no -proxy o -connect)</translation>\n@@ -2828,14 +2815,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Executa una ordre quan una transacci\u00f3 del moneder canvi\u00ef (%s en cmd es canvia per TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Comissions totals m\u00e0ximes que s'utilitzaran en una \u00fanica transacci\u00f3 de moneder; si s'estableix un valor massa baix es poden interrompre transaccions grans (per defecte: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Redueix els requeriments d'emmagatzemament podant (suprimint) els blocs antics. Aquest mode inhabilita l'\u00fas de moneders i \u00e9s incompatible amb -tindex. Av\u00eds: Revertir aquesta configuraci\u00f3 comporta tornar a baixar la cadena de blocs sencera. (per defecte: 0 = inhabilita la poda de blocs, &gt;%u = mida objectiu en MiB per utilitzar els fitxers de blocs)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Defineix el nombre de fils de verificaci\u00f3 d'scripts (%u a %d, 0 = auto, &lt;0 = deixa tants nuclis lliures, per defecte: %d)</translation>\n@@ -2856,10 +2835,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>AV\u00cdS: comproveu la vostra connexi\u00f3 a la xarxa, %d blocs rebuts en les darreres %d hores (se n'esperaven %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Av\u00eds: el -paytxfee \u00e9s molt elevat! Aquesta \u00e9s la comissi\u00f3 de transacci\u00f3 que pagareu si envieu una transacci\u00f3.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Av\u00eds: la xarxa no sembla que hi estigui plenament d'acord. Alguns miners sembla que estan experimentant problemes.</translation>\n@@ -2868,10 +2843,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Av\u00eds: sembla que no estem plenament d'acord amb els nostres iguals! Podria caler que actualitzar l'aplicaci\u00f3, o potser que ho facin altres nodes.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Av\u00eds: error en llegir el fitxer wallet.dat! Totes les claus es llegeixen correctament, per\u00f2 hi ha dades de transaccions o entrades de la llibreta d'adreces absents o b\u00e9 son incorrectes.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Av\u00eds: el fitxer wallet.dat \u00e9s corrupte, dades rescatades! L'arxiu wallet.dat original ha estat desat com wallet.{estampa_temporal}.bak al directori %s; si el teu balan\u00e7 o transaccions son incorrectes hauries de restaurar-lo de un backup.</translation>\n@@ -2936,10 +2907,6 @@\n         <source>Error opening block database</source>\n         <translation>Error en obrir la base de dades de blocs</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Error: s'ha produ\u00eft un error intern fatal. Consulteu debug.log per a m\u00e9s detalls</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Error: Espai al disc baix!</translation>\n@@ -2948,10 +2915,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Ha fallat escoltar a qualsevol port. Feu servir -listen=0 si voleu fer aix\u00f2.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Si no se subministra &lt;category&gt;, mostra tota la informaci\u00f3 de depuraci\u00f3.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>S'est\u00e0 important...</translation>\n@@ -3052,18 +3015,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: ha fallat escoltar les connexions entrants (l'escoltament ha retornat l'error %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Error: s'ha trobat un argument no perm\u00e8s de -socks. Ja no es pot definir m\u00e9s la versi\u00f3 de SOCKS, nom\u00e9s s'accepten els proxies de SOCKS5.\u00e7</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Executa l'ordre quan es rebi un av\u00eds rellevant o veiem una forquilla molt llarga (%s en cmd \u00e9s reempla\u00e7at per un missatge)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Comissions (en BTC/Kb) inferiors a aix\u00f2 es consideren de comissi\u00f3 zero per a la transmissi\u00f3 (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si no s'especifica una paytxfee (comissi\u00f3 de transacci\u00f3 de pagament), inclogueu suficient comissi\u00f3 per tal que les transaccions comencin a confirmar-se en una mitja de n blocs (per defecte: %u)</translation>\n@@ -3076,10 +3031,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Mida m\u00e0xima de les dades en les transaccions de l'operador en qu\u00e8 confiem i en les meves (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Poda configurada per sota el m\u00ednim de %d MB. Feu servir un nombre superior.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Consulta a adreces d'iguals a trav\u00e9s de DNS, si es troba baix en adreces (per defecte: 1 a menys que -connect)</translation>\n@@ -3104,37 +3055,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Aquest producte inclou programari desenvolupat pel projecte OpenSSL per a \u00fas a l'OpenSSL Toolkit &lt;https://www.openssl.org/&gt; i programari criptogr\u00e0fic escrit per Eric Young i programari UPnP escrit per Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Per utilitzar bitcoind, o l'opci\u00f3 de serviddor de bitcoin-qt, heu de definir una rpcpassword en el fitxer de configuraci\u00f3:\n-%s\n-Es recomana que utilitzeu la contrasenya aleat\u00f2ria seg\u00fcent:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(no cal que recordeu la contrasenya)\n-El nom d'usuari i la contrasenya NO han de ser els mateixos.\n-Si el fitxer no existeix, creeu-ne un amb permisos de lectura nom\u00e9s per al seu propietari.\n-Es recomana definir alertnotify per tal de ser notificat de qualsevol problema;\n-per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Av\u00eds: s'ha especificat un -maxtxfee molt alt! Comissions tan grans podrien pagar-se en una \u00fanica transacci\u00f3.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Av\u00eds: comproveu que la data i hora del vostre ordinador siguin correctes! Si el vostre rellotge no \u00e9s correcte, el Bitcoin Core no funcionar\u00e0 correctament.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Els iguals en la llista blanca no poden ser bandejats per DoS i es transmetran sempre llurs transaccions, fins i tot si ja s\u00f3n a la mempool. Aix\u00f2 \u00e9s \u00fatil, p. ex., per a una passarel\u00b7la</translation>\n@@ -3155,10 +3075,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Activating best chain...</source>\n         <translation>S'est\u00e0 activant la millor cadena...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>No es pot executar amb un moneder en mode poda.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No es pot resoldre l'adre\u00e7a -whitebind: \u00ab%s\u00bb</translation>\n@@ -3175,10 +3091,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i Els desenvolupadors del Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>No s'ha pogut analitzar el valor -rpcbind %s com una adre\u00e7a de xarxa</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Error en carregar wallet.dat: el moneder requereix una versi\u00f3 m\u00e9s nova del Bitcoin core</translation>\n@@ -3187,14 +3099,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Error reading from database, shutting down.</source>\n         <translation>Error en llegir la base de dades, tancant.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Error: s'ha trobat un argument -tor no acceptat. Feu servir -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Comissi\u00f3 en (BTC/kB) per afegir a les transaccions que envieu (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>&amp;Informaci\u00f3</translation>\n@@ -3235,18 +3139,10 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Node relay options:</source>\n         <translation>Opcions de transmissi\u00f3 del node:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Opcions RPC SSL: (veieu el wiki del Bitcoin per a instruccions de configuraci\u00f3 de l'SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Opcions del servidor RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Suport RPC per a connexions HTTP persistents (per defecte: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Reconstrueix l'\u00edndex de la cadena de blocs dels fitxers blk000??.dat actuals a l'inici.</translation>\n@@ -3323,10 +3219,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en aquest ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Utilitza UPnP per a mapejar els ports d'escolta (per defecte: 1 quan s'escolta)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nom d'usuari per a connexions JSON-RPC</translation>\n@@ -3339,14 +3231,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Warning</source>\n         <translation>Av\u00eds</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Av\u00eds: s'ha ignorat l'argument no acceptat de -benchmark. Feu servir -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Av\u00eds: s'ha ignorat l'argument no acceptat de -debugnet. Feu servir -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Se suprimeixen totes les transaccions del moneder...</translation>\n@@ -3375,10 +3259,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Reescaneja la cadena de blocs en les transaccions de moneder perdudes</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Utilitza OpenSSL (https) per a connexions JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Aquest misatge d'ajuda</translation>\n@@ -3423,10 +3303,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>(default: %s)</source>\n         <translation>(per defecte: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Xifrats acceptables (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Demana sempre les adreces dels iguals a trav\u00e9s de consultes DNS (per defecte: %u)</translation>\n@@ -3487,14 +3363,6 @@ per exemple: alertnotify=echo %%s | mail -s \"Av\u00eds de Bitcoin\" admin@foo.com</tr\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Retransmet multisig no P2SH (per defecte: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Fitxer de certificat del servidor (per defecte: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Clau privada del servidor (per defecte: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Defineix la mida clau disponible a &lt;n&gt; (per defecte: %u)</translation>"
      },
      {
        "sha": "a6444867c28079acd61ba95cfd8d542d17eb4d31",
        "filename": "src/qt/locale/bitcoin_cmn.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_cmn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_cmn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cmn.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"cmn\" version=\"2.0\">\n+<TS language=\"cmn\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -12,6 +12,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     </context>"
      },
      {
        "sha": "c8c33685438ad84ce9d40c255e0fb3e79b15c8af",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 149,
        "changes": 161,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"cs\" version=\"2.0\">\n+<TS language=\"cs\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>Heslo k pen\u011b\u017eence bylo v po\u0159\u00e1dku zm\u011bn\u011bno.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1286,10 +1289,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Platebn\u00ed po\u017eadavek %1 je moc velk\u00fd (%2 bajt\u016f, povoleno %3 bajt\u016f).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>DoS ochrana platebn\u00edho po\u017eadavku</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Chyba p\u0159i komunikaci s %1: %2</translation>\n@@ -1478,14 +1477,6 @@\n         <source>Services</source>\n         <translation>Slu\u017eby</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Prvotn\u00ed v\u00fd\u0161ka</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Aktu\u00e1ln\u00ed v\u00fd\u0161ka</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Sk\u00f3re pro klatbu</translation>\n@@ -1607,12 +1598,16 @@\n         <translation>Ven</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Nezn\u00e1m\u00e1</translation>\n+        <source>Yes</source>\n+        <translation>Ano</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Stahuji...</translation>\n+        <source>No</source>\n+        <translation>Ne</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Nezn\u00e1m\u00e1</translation>\n     </message>\n </context>\n <context>\n@@ -1978,10 +1973,6 @@\n         <source>Copy change</source>\n         <translation>Kop\u00edruj drobn\u00e9</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Celkov\u00e1 \u010d\u00e1stka %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>nebo</translation>\n@@ -2804,10 +2795,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>B\u011b\u017eet na pozad\u00ed jako d\u00e9mon a akceptovat p\u0159\u00edkazy</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Pou\u017e\u00edt testovac\u00ed s\u00ed\u0165 (testnet)</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>P\u0159ij\u00edmat spojen\u00ed zven\u010d\u00ed (v\u00fdchoz\u00ed: 1, pokud nen\u00ed zad\u00e1no -proxy nebo -connect)</translation>\n@@ -2828,14 +2815,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Spustit p\u0159\u00edkaz, kdy\u017e se objev\u00ed transakce t\u00fdkaj\u00edc\u00ed se pen\u011b\u017eenky (%s se v p\u0159\u00edkazu nahrad\u00ed za TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Horn\u00ed hranice pro celkov\u00fd poplatek za jednu transakci z pen\u011b\u017eenky; p\u0159\u00edli\u0161 n\u00edzk\u00e1 hodnota m\u016f\u017ee zma\u0159it velk\u00e9 transakce (v\u00fdchoz\u00ed: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Omezit n\u00e1roky na \u00falo\u017en\u00fd prostor pro\u0159ez\u00e1v\u00e1n\u00edm (maz\u00e1n\u00edm) star\u00fdch blok\u016f. V tomto re\u017eimu chyb\u00ed pen\u011b\u017eenka a rovn\u011b\u017e tento re\u017eim nen\u00ed slu\u010diteln\u00fd s -txindex. Upozorn\u011bn\u00ed: op\u011btovn\u00e1 zm\u011bna tohoto nastaven\u00ed bude vy\u017eadovat nov\u00e9 sta\u017een\u00ed cel\u00e9ho \u0159et\u011bzce blok\u016f. (v\u00fdchoz\u00ed: 0 = bloky nepro\u0159ez\u00e1vat, &gt;%u = c\u00edlov\u00e1 velikost soubor\u016f s bloky, v MiB)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Nastaven\u00ed po\u010dtu vl\u00e1ken pro verifikaci skript\u016f (%u a\u017e %d, 0 = automaticky, &lt;0 = nechat dan\u00fd po\u010det jader voln\u00fd, v\u00fdchoz\u00ed: %d)</translation>\n@@ -2856,10 +2835,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>UPOZORN\u011aN\u00cd: zkontroluj sv\u00e9 spojen\u00ed do s\u00edt\u011b \u2013 bylo p\u0159ijato %d blok\u016f za posledn\u00edch %d hodin (o\u010dek\u00e1v\u00e1no %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Upozorn\u011bn\u00ed: -paytxfee je nastaveno velmi vysoko! Toto je transak\u010dn\u00ed poplatek, kter\u00fd zaplat\u00ed\u0161 za ka\u017edou poslanou transakci.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Upozorn\u011bn\u00ed: S\u00ed\u0165 podle v\u0161eho nen\u00ed v konzistentn\u00edm stavu. N\u011bkte\u0159\u00ed t\u011b\u017ea\u0159i jsou z\u0159ejm\u011b v pot\u00ed\u017e\u00edch.</translation>\n@@ -2868,10 +2843,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Upozorn\u011bn\u00ed: Nesouhlas\u00edm zcela se sv\u00fdmi prot\u011bj\u0161ky! Mo\u017en\u00e1 pot\u0159ebuji aktualizovat nebo ostatn\u00ed uzly pot\u0159ebuj\u00ed aktualizovat.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Upozorn\u011bn\u00ed: nastala chyba p\u0159i \u010dten\u00ed souboru wallet.dat! V\u0161echny kl\u00ed\u010de se p\u0159e\u010detly spr\u00e1vn\u011b, ale data o transakc\u00edch nebo z\u00e1znamy v adres\u00e1\u0159i mohou chyb\u011bt \u010di b\u00fdt nespr\u00e1vn\u00e9.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Upozorn\u011bn\u00ed: soubor wallet.dat je po\u0161kozen\u00fd, data jsou v\u0161ak zachr\u00e1n\u011bna! P\u016fvodn\u00ed soubor wallet.dat je ulo\u017een\u00fd jako wallet.{timestamp}.bak v %s. Pokud je stav tv\u00e9ho \u00fa\u010dtu nebo transakce nespr\u00e1vn\u00e9, z\u0159ejm\u011b bys m\u011bl obnovit z\u00e1lohu.</translation>\n@@ -2936,10 +2907,6 @@\n         <source>Error opening block database</source>\n         <translation>Chyba p\u0159i otev\u00edr\u00e1n\u00ed datab\u00e1ze blok\u016f</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Chyba: Stala se fat\u00e1ln\u00ed vnit\u0159n\u00ed chyba. detaily viz v debug.log</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Probl\u00e9m: Na disku je m\u00e1lo m\u00edsta!</translation>\n@@ -2948,10 +2915,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Nepoda\u0159ilo se naslouchat na \u017e\u00e1dn\u00e9m portu. Pou\u017eij -listen=0, pokud to byl tv\u016fj z\u00e1m\u011br.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Pokud nen\u00ed &lt;category&gt; zad\u00e1na, bude tisknout ve\u0161ker\u00e9 ladic\u00ed informace.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importuji...</translation>\n@@ -3028,10 +2991,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Povolit JSON-RPC spojen\u00ed ze specifikovan\u00e9ho zdroje. Platnou hodnotou &lt;ip&gt; je jednotliv\u00e1 IP adresa (nap\u0159. 1.2.3.4), s\u00ed\u0165/maska (nap\u0159. 1.2.3.4/255.255.255.0) nebo s\u00ed\u0165/CIDR (nap\u0159. 1.2.3.4/24). Tuto volbu lze pou\u017e\u00edt i v\u00edcekr\u00e1t</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>P\u0159i nastavov\u00e1n\u00ed naslouchac\u00ed RPC adresy %s a portu %u nastala chyba: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Obsadit zadanou adresu a prot\u011bj\u0161ky, kter\u00e9 se na n\u00ed p\u0159ipoj\u00ed, um\u00edstit na b\u00edlou listinu. Pro z\u00e1pis IPv6 adresy pou\u017eij notaci [adresa]:port</translation>\n@@ -3056,18 +3015,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Chyba: Nelze naslouchat p\u0159\u00edchoz\u00ed spojen\u00ed (listen vr\u00e1til chybu %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Chyba: Byl pou\u017eit nepodporovan\u00fd argument -socks. Nastaven\u00ed verze SOCKS u\u017e nen\u00ed mo\u017en\u00e9, podporov\u00e1ny jsou pouze SOCKS5 proxy.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Spustit p\u0159\u00edkaz, kdy\u017e p\u0159ijde relevantn\u00ed upozorn\u011bn\u00ed nebo kdy\u017e dojde k opravdu dlouh\u00e9mu roz\u0161t\u011bpen\u00ed \u0159etezce blok\u016f (%s se v p\u0159\u00edkazu nahrad\u00ed zpr\u00e1vou)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Poplatky (v BTC/kB) men\u0161\u00ed ne\u017e tato hodnota jsou pova\u017eov\u00e1ny za nulov\u00e9 pro \u00fa\u010dely p\u0159epos\u00edl\u00e1n\u00ed transakc\u00ed (v\u00fdchoz\u00ed: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Pokud paytxfee nen\u00ed nastaveno, platit dostate\u010dn\u00fd poplatek na to, aby za\u010daly b\u00fdt transakce potvrzov\u00e1ny v pr\u016fm\u011bru b\u011bhem n blok\u016f (v\u00fdchoz\u00ed: %u)</translation>\n@@ -3080,10 +3031,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Maxim\u00e1ln\u00ed velikost dat v transakc\u00edch nesouc\u00edch data, se kterou jsme ochotni je je\u0161t\u011b p\u0159epos\u00edlat a t\u011b\u017eit (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Pro\u0159ez\u00e1v\u00e1n\u00ed je nastaveno pod minimum %d MB.  Pou\u017eij pros\u00edm n\u011bjak\u00e9 vy\u0161\u0161\u00ed \u010d\u00edslo.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>P\u0159i nedostatku adres z\u00edskat dal\u0161\u00ed prot\u011bj\u0161ky z DNS (v\u00fdchoz\u00ed: 1, pokud nen\u00ed pou\u017eito -connect)</translation>\n@@ -3108,38 +3055,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Tento produkt zahrnuje programy vyvinut\u00e9 OpenSSL Projektem pro pou\u017eit\u00ed v OpenSSL Toolkitu &lt;https://www.openssl.org/&gt; a kryptografick\u00fd program od Erika Younga a program UPnP od Thomase Bernarda.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>K pou\u017e\u00edv\u00e1n\u00ed bitcoind nebo volby -server u bitcoin-qt mus\u00ed\u0161 nastavit rpcpassword v konfigura\u010dn\u00edm souboru:\n-%s\n-Je vhodn\u00e9 pou\u017e\u00edt n\u00e1sleduj\u00edc\u00ed n\u00e1hodn\u00e9 heslo:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(nen\u00ed pot\u0159eba si ho pamatovat)\n-rpcuser a rpcpassword NESM\u00cd b\u00fdt stejn\u00e9.\n-Pokud konfigura\u010dn\u00ed soubor je\u0161t\u011b neexistuje, vytvo\u0159 ho tak, aby ho mohl \u010d\u00edst pouze vlastn\u00edk.\n-Je tak\u00e9 doporu\u010deno si nastavit alertnotify, abys byl upozorn\u011bn na p\u0159\u00edpadn\u00e9 probl\u00e9my;\n-nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Upozorn\u011bn\u00ed: -maxtxfee je nastaveno velmi vysoko! Takto vysok\u00fd poplatek m\u016f\u017ee b\u00fdt zaplacen v jednotliv\u00e9 transakci.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Upozorn\u011bn\u00ed: Zkontroluj, \u017ee m\u00e1\u0161 v po\u010d\u00edta\u010di spr\u00e1vn\u011b nastaven\u00fd datum a \u010das! Pokud jsou nastaveny \u0161patn\u011b, Bitcoin Core nebude fungovat spr\u00e1vn\u011b.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Na prot\u011bj\u0161ky na b\u00edl\u00e9 listin\u011b se nevztahuje DoS klatba a jejich transakce jsou v\u017edy p\u0159epos\u00edl\u00e1ny, i kdy\u017e u\u017e t\u0159eba jsou v mempoolu, co\u017e je u\u017eite\u010dn\u00e9 nap\u0159. pro br\u00e1nu</translation>\n@@ -3160,10 +3075,6 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktivuji nejlep\u0161\u00ed \u0159et\u011bzec...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>V pro\u0159ez\u00e1vac\u00edm re\u017eimu se s p\u011bn\u011b\u017eenkou nem\u016f\u017eu spustit.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Nemohu p\u0159elo\u017eit -whitebind adresu: '%s'</translation>\n@@ -3180,10 +3091,6 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i V\u00fdvoj\u00e1\u0159i Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Nejde mi p\u0159e\u010d\u00edst hodnotu -rpcbind %s jako s\u00ed\u0165ovou adresu</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Chyba p\u0159i na\u010d\u00edt\u00e1n\u00ed wallet.dat: pen\u011b\u017eenka vy\u017eaduje nov\u011bj\u0161\u00ed verzi Bitcoin Core</translation>\n@@ -3192,14 +3099,6 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>Chyba p\u0159i \u010dten\u00ed z datab\u00e1ze, ukon\u010duji se.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Chyba: Argument -tor ji\u017e nen\u00ed podporovan\u00fd, pou\u017eij -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Poplatek (v BTC/kB), kter\u00fd se p\u0159id\u00e1 ke ka\u017ed\u00e9 odeslan\u00e9 transakci (v\u00fdchoz\u00ed: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informace</translation>\n@@ -3240,18 +3139,10 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Node relay options:</source>\n         <translation>Mo\u017enosti p\u0159epos\u00edl\u00e1n\u00ed:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Mo\u017enosti SSL pro RPC: (viz instrukce nastaven\u00ed SSL na Bitcoin Wiki)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Mo\u017enosti RPC serveru:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Podpora RPC pro perzistentn\u00ed HTTP spojen\u00ed (v\u00fdchoz\u00ed: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>P\u0159i startu znovu vytvo\u0159it index \u0159et\u011bzce blok\u016f z aktu\u00e1ln\u00edch blk000??.dat soubor\u016f</translation>\n@@ -3328,10 +3219,6 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Neda\u0159\u00ed se mi p\u0159ipojit na %s na tomhle po\u010d\u00edta\u010di (operace bind vr\u00e1tila chybu %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Pou\u017e\u00edt UPnP k namapov\u00e1n\u00ed naslouchac\u00edho portu (v\u00fdchoz\u00ed: 1, pokud naslouch\u00e1)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>U\u017eivatelsk\u00e9 jm\u00e9no pro JSON-RPC spojen\u00ed</translation>\n@@ -3344,14 +3231,6 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Warning</source>\n         <translation>Upozorn\u011bn\u00ed</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Upozorn\u011bn\u00ed: Nepodporovan\u00fd argument -benchmark se ignoruje, pou\u017eij -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Upozorn\u011bn\u00ed: Nepodporovan\u00fd argument -debugnet se ignoruje, pou\u017eij -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Vymazat v\u0161echny transakce z pen\u011b\u017eenky...</translation>\n@@ -3380,10 +3259,6 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>P\u0159eskenovat \u0159et\u011bzec blok\u016f na chyb\u011bj\u00edc\u00ed transakce tv\u00e9 p\u011bn\u011b\u017eenky</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Pou\u017e\u00edt OpenSSL (https) pro JSON-RPC spojen\u00ed</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Tato n\u00e1pov\u011bda</translation>\n@@ -3428,10 +3303,6 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(v\u00fdchoz\u00ed: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Akceptovateln\u00e9 \u0161ifry (v\u00fdchoz\u00ed: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>V\u017edy z\u00edsk\u00e1vat adresy dal\u0161\u00edch prot\u011bj\u0161k\u016f p\u0159es DNS (v\u00fdchoz\u00ed: %u)</translation>\n@@ -3492,14 +3363,6 @@ nap\u0159\u00edklad: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>P\u0159epos\u00edlat ne-P2SH multisig (v\u00fdchoz\u00ed: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Soubor se serverov\u00fdm certifik\u00e1tem (v\u00fdchoz\u00ed: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Soubor se serverov\u00fdm soukrom\u00fdm kl\u00ed\u010dem (v\u00fdchoz\u00ed: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Nastavit z\u00e1sobn\u00edk kl\u00ed\u010d\u016f na velikost &lt;n&gt; (v\u00fdchoz\u00ed: %u)</translation>"
      },
      {
        "sha": "eba03633342d5ef44e26cdee5be093e60ce40ffa",
        "filename": "src/qt/locale/bitcoin_cy.ts",
        "status": "modified",
        "additions": 273,
        "deletions": 2,
        "changes": 275,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_cy.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_cy.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cy.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,18 +1,66 @@\n-<TS language=\"cy\" version=\"2.0\">\n+<TS language=\"cy\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n         <source>Create a new address</source>\n         <translation>Creu cyfeiriad newydd</translation>\n     </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>&amp;Newydd</translation>\n+    </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>Copio'r cyfeiriad sydd wedi'i ddewis i'r clipfwrdd system</translation>\n     </message>\n+    <message>\n+        <source>&amp;Copy</source>\n+        <translation>&amp;Cop\u00efo</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>C&amp;au</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Cyfeiriad Copi</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Allforio</translation>\n+    </message>\n     <message>\n         <source>&amp;Delete</source>\n         <translation>&amp;Dileu</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;Dewis</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Cyfeiriadau anfon</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Cyfeiriadau derbyn</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Cop\u00efo &amp;Label</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Golygu</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Allforio Rhestr Cyfeiriad</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Methodd Allfor</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n@@ -71,6 +119,10 @@\n         <source>Confirm wallet encryption</source>\n         <translation>Cadarnau amgryptiad y waled</translation>\n     </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>Ydych chi'n siwr eich bod chi eisiau amgryptio dy waled di?</translation>\n+    </message>\n     <message>\n         <source>Wallet encrypted</source>\n         <translation>Waled wedi'i amgryptio</translation>\n@@ -96,6 +148,9 @@\n         <translation>Methodd dadgryptiad y waled</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -118,18 +173,70 @@\n         <source>Browse transaction history</source>\n         <translation>Pori hanes trafodion</translation>\n     </message>\n+    <message>\n+        <source>E&amp;xit</source>\n+        <translation>A&amp;llanfa</translation>\n+    </message>\n     <message>\n         <source>Quit application</source>\n         <translation>Gadael rhaglen</translation>\n     </message>\n+    <message>\n+        <source>About &amp;Qt</source>\n+        <translation>Ynghylch &amp;Qt</translation>\n+    </message>\n     <message>\n         <source>&amp;Options...</source>\n         <translation>&amp;Opsiynau</translation>\n     </message>\n+    <message>\n+        <source>&amp;Encrypt Wallet...</source>\n+        <translation>&amp;Amgryptio'r waled...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Change Passphrase...</source>\n+        <translation>&amp;Newid cyfrinymadrodd...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Sending addresses...</source>\n+        <translation>&amp;Cyfeiriadau anfon...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receiving addresses...</source>\n+        <translation>&amp;Cyfeiriadau derbyn...</translation>\n+    </message>\n+    <message>\n+        <source>Open &amp;URI...</source>\n+        <translation>Agor &amp;URI...</translation>\n+    </message>\n     <message>\n         <source>Change the passphrase used for wallet encryption</source>\n         <translation>Newid y cyfrinymadrodd a ddefnyddiwyd ar gyfer amgryptio'r waled</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin</source>\n+        <translation>Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>Wallet</source>\n+        <translation>Waled</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Send</source>\n+        <translation>&amp;Anfon</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receive</source>\n+        <translation>&amp;Derbyn</translation>\n+    </message>\n+    <message>\n+        <source>Show information about Bitcoin Core</source>\n+        <translation>Dangos gwybodaeth am Graidd Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Show / Hide</source>\n+        <translation>&amp;Dangos / Cuddio</translation>\n+    </message>\n     <message>\n         <source>&amp;File</source>\n         <translation>&amp;Ffeil</translation>\n@@ -146,6 +253,34 @@\n         <source>Tabs toolbar</source>\n         <translation>Bar offer tabiau</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core</source>\n+        <translation>Craidd Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation>&amp;Ynghylch Craidd Bitcoin</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n awr</numerusform><numerusform>%n awr</numerusform><numerusform>%n awr</numerusform><numerusform>%n awr</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n dydd</numerusform><numerusform>%n dydd</numerusform><numerusform>%n dydd</numerusform><numerusform>%n dydd</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n wythnos</numerusform><numerusform>%n wythnos</numerusform><numerusform>%n wythnos</numerusform><numerusform>%n wythnos</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>%1 and %2</source>\n+        <translation>%1 a %2</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n blwydd</numerusform><numerusform>%n blwydd</numerusform><numerusform>%n blwydd</numerusform><numerusform>%n blwydd</numerusform></translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>Gwall</translation>\n@@ -166,6 +301,30 @@\n         <source>Catching up...</source>\n         <translation>Dal i fyny</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Dyddiad: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>Math: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>Label: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>Cyfeiriad: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Trafodiad a anfonwyd</translation>\n@@ -192,11 +351,23 @@\n         <source>Date</source>\n         <translation>Dyddiad</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Cyfeiriad copi</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Cop\u00efo label</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(heb label)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(change)</source>\n+        <translation>(newid)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -242,26 +413,90 @@\n </context>\n <context>\n     <name>FreespaceChecker</name>\n+    <message>\n+        <source>name</source>\n+        <translation>enw</translation>\n+    </message>\n     </context>\n <context>\n     <name>HelpMessageDialog</name>\n+    <message>\n+        <source>Bitcoin Core</source>\n+        <translation>Craidd Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>About Bitcoin Core</source>\n+        <translation>Ynghylch Craidd Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>Usage:</source>\n+        <translation>Cynefod:</translation>\n+    </message>\n     </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Welcome</source>\n+        <translation>Croeso</translation>\n+    </message>\n+    <message>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation>Croeso i Graidd Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>Bitcoin Core</source>\n+        <translation>Craidd Bitcoin</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>Gwall</translation>\n     </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open URI</source>\n+        <translation>Agor URI</translation>\n+    </message>\n+    <message>\n+        <source>URI:</source>\n+        <translation>URI:</translation>\n+    </message>\n     </context>\n <context>\n     <name>OptionsDialog</name>\n     <message>\n         <source>Options</source>\n         <translation>Opsiynau</translation>\n     </message>\n+    <message>\n+        <source>&amp;Network</source>\n+        <translation>&amp;Rhwydwaith</translation>\n+    </message>\n+    <message>\n+        <source>W&amp;allet</source>\n+        <translation>W&amp;aled</translation>\n+    </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Window</source>\n+        <translation>&amp;Ffenestr</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Display</source>\n+        <translation>&amp;Dangos</translation>\n+    </message>\n     </context>\n <context>\n     <name>OverviewPage</name>\n@@ -288,13 +523,25 @@\n         <source>&amp;Information</source>\n         <translation>Gwybodaeth</translation>\n     </message>\n+    <message>\n+        <source>Network</source>\n+        <translation>Rhwydwaith</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Open</source>\n+        <translation>&amp;Agor</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n         <source>&amp;Label:</source>\n         <translation>&amp;Label:</translation>\n     </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Cop\u00efo label</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -400,6 +647,14 @@\n     </context>\n <context>\n     <name>SplashScreen</name>\n+    <message>\n+        <source>Bitcoin Core</source>\n+        <translation>Craidd Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>The Bitcoin Core developers</source>\n+        <translation>Datblygwyr Graidd Bitcoin</translation>\n+    </message>\n     <message>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n@@ -455,6 +710,18 @@\n         <source>This year</source>\n         <translation>Eleni</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Cyfeiriad copi</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Cop\u00efo label</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Methodd Allfor</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Dyddiad</translation>\n@@ -487,6 +754,10 @@\n </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Allforio</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "46d98260451db3935963b719e4860723e3a0654f",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 271,
        "deletions": 177,
        "changes": 448,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"da\" version=\"2.0\">\n+<TS language=\"da\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,15 +220,26 @@\n         <translation>Tegnebogens adgangskode blev \u00e6ndret.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/Netmaske</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Bandlyst indtil</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n         <source>Sign &amp;message...</source>\n-        <translation>Underskriv &amp;besked \u2026</translation>\n+        <translation>Underskriv &amp;besked\u2026</translation>\n     </message>\n     <message>\n         <source>Synchronizing with network...</source>\n-        <translation>Synkroniserer med netv\u00e6rk \u2026</translation>\n+        <translation>Synkroniserer med netv\u00e6rk\u2026</translation>\n     </message>\n     <message>\n         <source>&amp;Overview</source>\n@@ -268,43 +279,43 @@\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n-        <translation>&amp;Indstillinger \u2026</translation>\n+        <translation>&amp;Indstillinger\u2026</translation>\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n-        <translation>&amp;Krypt\u00e9r tegnebog \u2026</translation>\n+        <translation>&amp;Krypt\u00e9r tegnebog\u2026</translation>\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>&amp;Sikkerhedskopi\u00e9r tegnebog \u2026</translation>\n+        <translation>&amp;Sikkerhedskopi\u00e9r tegnebog\u2026</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n-        <translation>&amp;Skift adgangskode \u2026</translation>\n+        <translation>&amp;Skift adgangskode\u2026</translation>\n     </message>\n     <message>\n         <source>&amp;Sending addresses...</source>\n-        <translation>&amp;Afsendelsesadresser \u2026</translation>\n+        <translation>&amp;Afsendelsesadresser\u2026</translation>\n     </message>\n     <message>\n         <source>&amp;Receiving addresses...</source>\n-        <translation>&amp;Modtagelsesadresser \u2026</translation>\n+        <translation>&amp;Modtagelsesadresser\u2026</translation>\n     </message>\n     <message>\n         <source>Open &amp;URI...</source>\n-        <translation>&amp;\u00c5bn URI \u2026</translation>\n+        <translation>&amp;\u00c5bn URI\u2026</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core client</source>\n         <translation>Bitcoin Core-klient</translation>\n     </message>\n     <message>\n         <source>Importing blocks from disk...</source>\n-        <translation>Importerer blokke fra disken \u2026</translation>\n+        <translation>Importerer blokke fra disken\u2026</translation>\n     </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n-        <translation>Genindekserer blokke p\u00e5 disken \u2026</translation>\n+        <translation>Genindekserer blokke p\u00e5 disken\u2026</translation>\n     </message>\n     <message>\n         <source>Send coins to a Bitcoin address</source>\n@@ -328,7 +339,7 @@\n     </message>\n     <message>\n         <source>&amp;Verify message...</source>\n-        <translation>&amp;Verific\u00e9r besked \u2026</translation>\n+        <translation>&amp;Verific\u00e9r besked\u2026</translation>\n     </message>\n     <message>\n         <source>Bitcoin</source>\n@@ -428,7 +439,7 @@\n     </message>\n     <message>\n         <source>No block source available...</source>\n-        <translation>Ingen blokkilde tilg\u00e6ngelig \u2026</translation>\n+        <translation>Ingen blokkilde tilg\u00e6ngelig\u2026</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>Processed %n block(s) of transaction history.</source>\n@@ -484,7 +495,7 @@\n     </message>\n     <message>\n         <source>Catching up...</source>\n-        <translation>Indhenter \u2026</translation>\n+        <translation>Indhenter\u2026</translation>\n     </message>\n     <message>\n         <source>Date: %1\n@@ -1064,6 +1075,34 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port for proxyen (fx 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>Bruges til at n\u00e5 knuder via:</translation>\n+    </message>\n+    <message>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>Viser om den angivne standard-SOCKS5-proxy bruges til at n\u00e5 knuder via denne netv\u00e6rkstype.</translation>\n+    </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n+        <translation>Forbind til Bitcoin-netv\u00e6rket gennem en separat SOCKS5-proxy for skjulte tjenester via Tor.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Brug separat SOCKS5-proxy for at n\u00e5 knuder via skjulte Tor-tjenester.</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Vindue</translation>\n@@ -1282,10 +1321,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Betalingsanmodning %1 er for stor (%2 byte, %3 byte tilladt).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Beskyttelse mod DoS-angreb via betalingsanmodninger</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Fejl under kommunikation med %1: %2</translation>\n@@ -1365,7 +1400,7 @@\n     <name>QRImageWidget</name>\n     <message>\n         <source>&amp;Save Image...</source>\n-        <translation>&amp;Gem billede \u2026</translation>\n+        <translation>&amp;Gem billede\u2026</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Image</source>\n@@ -1454,10 +1489,18 @@\n         <source>&amp;Peers</source>\n         <translation>Andre &amp;knuder</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>Bandlyste knuder</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>V\u00e6lg en anden knude for at se detaljeret information.</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>P\u00e5 hvidliste</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>Retning</translation>\n@@ -1467,20 +1510,24 @@\n         <translation>Version</translation>\n     </message>\n     <message>\n-        <source>User Agent</source>\n-        <translation>Brugeragent</translation>\n+        <source>Starting Block</source>\n+        <translation>Startblok</translation>\n     </message>\n     <message>\n-        <source>Services</source>\n-        <translation>Tjenester</translation>\n+        <source>Synced Headers</source>\n+        <translation>Synkroniserede headers</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>Starth\u00f8jde</translation>\n+        <source>Synced Blocks</source>\n+        <translation>Synkroniserede blokke</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>Synkroniseringsh\u00f8jde</translation>\n+        <source>User Agent</source>\n+        <translation>Brugeragent</translation>\n+    </message>\n+    <message>\n+        <source>Services</source>\n+        <translation>Tjenester</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1510,6 +1557,14 @@\n         <source>Ping Time</source>\n         <translation>Ping-tid</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>Varigheden af den aktuelt igangv\u00e6rende ping.</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>Ping-ventetid</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>Tidsforskydning</translation>\n@@ -1558,6 +1613,34 @@\n         <source>Clear console</source>\n         <translation>Ryd konsol</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>&amp;Afbryd forbindelse til knude</translation>\n+    </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>Bandlys knude i</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 &amp;time</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 &amp;dag</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 &amp;uge</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 &amp;\u00e5r</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>&amp;Fjern bandlysning af knude</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>Velkommen til Bitcoin Cores RPC-konsol.</translation>\n@@ -1586,6 +1669,10 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(knude-id: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>via %1</translation>\n@@ -1603,12 +1690,16 @@\n         <translation>Udg\u00e5ende</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Ukendt</translation>\n+        <source>Yes</source>\n+        <translation>Ja</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Henter \u2026</translation>\n+        <source>No</source>\n+        <translation>Nej</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Ukendt</translation>\n     </message>\n </context>\n <context>\n@@ -1710,7 +1801,7 @@\n     </message>\n     <message>\n         <source>&amp;Save Image...</source>\n-        <translation>&amp;Gem billede \u2026</translation>\n+        <translation>&amp;Gem billede\u2026</translation>\n     </message>\n     <message>\n         <source>Request payment to %1</source>\n@@ -1792,7 +1883,7 @@\n     </message>\n     <message>\n         <source>Inputs...</source>\n-        <translation>Inputs \u2026</translation>\n+        <translation>Inputs\u2026</translation>\n     </message>\n     <message>\n         <source>automatically selected</source>\n@@ -1844,7 +1935,7 @@\n     </message>\n     <message>\n         <source>Choose...</source>\n-        <translation>V\u00e6lg \u2026</translation>\n+        <translation>V\u00e6lg\u2026</translation>\n     </message>\n     <message>\n         <source>collapse fee-settings</source>\n@@ -1884,7 +1975,7 @@\n     </message>\n     <message>\n         <source>(Smart fee not initialized yet. This usually takes a few blocks...)</source>\n-        <translation>(Smart-gebyr er ikke initialiseret endnu. Dette tager typisk nogle f\u00e5 blokke \u2026)</translation>\n+        <translation>(Smart-gebyr er ikke initialiseret endnu. Dette tager typisk nogle f\u00e5 blokke\u2026)</translation>\n     </message>\n     <message>\n         <source>Confirmation time:</source>\n@@ -1974,10 +2065,6 @@\n         <source>Copy change</source>\n         <translation>Kopi\u00e9r byttepenge</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Totalbel\u00f8b %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>eller</translation>\n@@ -2018,6 +2105,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Betal kun det minimale gebyr p\u00e5 %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>Totalbel\u00f8b %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Modtageradressen er ikke gyldig. Tjek venligst igen.</translation>\n@@ -2138,7 +2229,7 @@\n     <name>ShutdownWindow</name>\n     <message>\n         <source>Bitcoin Core is shutting down...</source>\n-        <translation>Bitcoin Core lukker ned \u2026</translation>\n+        <translation>Bitcoin Core lukker ned\u2026</translation>\n     </message>\n     <message>\n         <source>Do not shut down the computer until this window disappears.</source>\n@@ -2603,7 +2694,7 @@\n     </message>\n     <message>\n         <source>Range...</source>\n-        <translation>Interval \u2026</translation>\n+        <translation>Interval\u2026</translation>\n     </message>\n     <message>\n         <source>Received with</source>\n@@ -2796,13 +2887,57 @@\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Accept\u00e9r kommandolinje- og JSON-RPC-kommandoer</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n+        <translation>Gebyrer (i %s/kB) mindre end dette opfattes som nul-gebyr under videresendelse (standard: %s)</translation>\n+    </message>\n+    <message>\n+        <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n+        <translation>Hvis &lt;category&gt; ikke angives eller hvis &lt;category&gt; = 1, udskriv al fejlretningsinformation.</translation>\n+    </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Maksimalt totalgebyr (i %s) for brug i en enkelt tegnebogstransaktion; ved at s\u00e6tte dette for lavt, kan store transaktioner afbrydes (standard: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>Kontroll\u00e9r venligst, at din computers dato og tid er korrekt! Hvis uret ikke passer, vil Bitcoin Core ikke fungere korrekt.</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>Besk\u00e6ring er sat under minimumsgr\u00e6nsen p\u00e5 %d MiB. Brug venligst et st\u00f8rre tal.</translation>\n+    </message>\n+    <message>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation>Besk\u00e6ring: Seneste synkronisering r\u00e6kker udover besk\u00e5rne data. Du er n\u00f8dt til at bruge -reindex (downloade hele blokk\u00e6den igen i fald af besk\u00e5ret knude)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Reduc\u00e9r lagringskravene ved at besk\u00e6re (slette) gamle blokke. Denne tilstand er ikke kompatibel med -txindex og -rescan. Advarsel: Fortrydelse af denne indstilling kr\u00e6ver gendownload af hele blokk\u00e6den. (standard: 0 = sl\u00e5 besk\u00e6ring af blokke fra, &gt;%u = m\u00e5lst\u00f8rrelse i MiB der skal bruges p\u00e5 blokfiler)</translation>\n+    </message>\n+    <message>\n+        <source>Rescans are not possible in pruned mode. You will need to use -reindex which will download the whole blockchain again.</source>\n+        <translation>Genindl\u00e6sninger er ikke mulige i besk\u00e5ret tilstand. Du er n\u00f8dt til at bruge -reindex, hvilket vil downloade hele blokk\u00e6den igen.</translation>\n+    </message>\n+    <message>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Fejl: En alvorlig intern fejl er opst\u00e5et. Se debug.log for detaljer</translation>\n+    </message>\n+    <message>\n+        <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n+        <translation>Gebyr (i %s/kB) der skal l\u00e6gges til de transaktioner du sender (standard: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>Besk\u00e6rer bloklager\u2026</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>K\u00f8r i baggrunden som en service, og accept\u00e9r kommandoer</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Brug testnetv\u00e6rket</translation>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>Kunne ikke starte HTTP-server. Se fejlretningslog for detaljer.</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2824,18 +2959,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Udf\u00f8r kommando, n\u00e5r en transaktion i tegnebogen \u00e6ndres (%s i kommandoen erstattes med TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Maksimalt totalt gebyr der kan bruges i en enkelt tegnebogstransaktion. For lav en v\u00e6rdi kan afbryde store transaktioner (standard: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Reduc\u00e9r pladskravene ved at besk\u00e6re (slette, \"prune\") gamle blokke. Denne tilstand sl\u00e5r underst\u00f8ttelse af tegnebogen fra og er ikke kompatibel med -txindex. Advarsel: Fortrydelse af denne indstilling kr\u00e6ver download af hele blokk\u00e6den igen. (standard: 0 = sl\u00e5 besk\u00e6ring af blokke fra, &gt;%u = m\u00e5lst\u00f8rrelse i MiB der skal bruges til blokfiler)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>S\u00e6t antallet af scriptverificeringstr\u00e5de (%u til %d, 0 = auto, &lt;0 = efterlad det antal kernet fri, standard: %d)</translation>\n     </message>\n+    <message>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n+        <translation>Blokdatabasen indeholder en blok, som ser ud til at v\u00e6re fra fremtiden. Dette kan skyldes, at din computers dato og tid ikke er sat korrekt. Genopbyg kun blokdatabasen, hvis du er sikker p\u00e5, at din computers dato og tid er korrekt</translation>\n+    </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Dette er en forel\u00f8big testudgivelse - brug p\u00e5 eget ansvar - brug ikke til udvinding eller handelsprogrammer</translation>\n@@ -2844,6 +2975,10 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Ikke i stand til at tildele til %s p\u00e5 denne computer. Bitcoin Core k\u00f8rer sansynligvis allerede.</translation>\n     </message>\n+    <message>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n+        <translation>Brug UPnP for at konfigurere den lyttende port (standard: 1 under lytning og ingen -proxy)</translation>\n+    </message>\n     <message>\n         <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>ADVARSEL: unormalt mange blokke er genereret; %d blokke er modtaget i l\u00f8bet af de seneste %d timer (%d forventet)</translation>\n@@ -2852,10 +2987,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>ADVARSEL: tjek din netv\u00e6rksforbindelse; %d blokke er modtaget i l\u00f8bet af de seneste %d timer (%d forventet)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Advarsel: -paytxfee er sat meget h\u00f8jt! Dette er det gebyr du vil betale, hvis du sender en transaktion.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Advarsel: Netv\u00e6rket ser ikke ud til at v\u00e6re fuldt ud enige! Enkelte minere ser ud til at opleve problemer.</translation>\n@@ -2864,10 +2995,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Advarsel: Vi ser ikke ud til at v\u00e6re fuldt ud enige med andre knuder! Du kan v\u00e6re n\u00f8dt til at opgradere, eller andre knuder kan v\u00e6re n\u00f8dt til at opgradere.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Advarsel: fejl under l\u00e6sning af wallet.dat! Alle n\u00f8gler blev l\u00e6st korrekt, men transaktionsdata eller adressebogsposter kan mangle eller v\u00e6re forkerte.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Advarsel: wallet.dat \u00f8delagt, data reddet! Oprindelig wallet.dat gemt som wallet.{timestamp}.bak i %s; hvis din saldo eller dine transaktioner er forkert, b\u00f8r du genskabe fra en sikkerhedskopi.</translation>\n@@ -2880,6 +3007,10 @@\n         <source>(default: 1)</source>\n         <translation>(standard: 1)</translation>\n     </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>-maxmempool skal v\u00e6re mindst %d MB</translation>\n+    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;kategori&gt; kan v\u00e6re:</translation>\n@@ -2916,6 +3047,22 @@\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\u00d8nsker du at genopbygge blokdatabasen nu?</translation>\n     </message>\n+    <message>\n+        <source>Enable publish hash block in &lt;address&gt;</source>\n+        <translation>Aktiv\u00e9r offentligg\u00f8relse af hash-blok i &lt;address&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish hash transaction in &lt;address&gt;</source>\n+        <translation>Aktiv\u00e9r offentligg\u00f8relse af hash-transaktion i &lt;address&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw block in &lt;address&gt;</source>\n+        <translation>Aktiv\u00e9r offentligg\u00f8relse af r\u00e5 blok i &lt;address&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw transaction in &lt;address&gt;</source>\n+        <translation>Aktiv\u00e9r offentligg\u00f8relse af r\u00e5 transaktion i &lt;address&gt;</translation>\n+    </message>\n     <message>\n         <source>Error initializing block database</source>\n         <translation>Klarg\u00f8ring af blokdatabase mislykkedes</translation>\n@@ -2932,10 +3079,6 @@\n         <source>Error opening block database</source>\n         <translation>\u00c5bning af blokdatabase mislykkedes</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Fejl: En fatal intern fejl opstod; se debug.log for detaljer</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Fejl: Mangel p\u00e5 ledig diskplads!</translation>\n@@ -2944,13 +3087,9 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Lytning p\u00e5 enhver port mislykkedes. Brug -listen=0, hvis du \u00f8nsker dette.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Hvis &lt;kategori&gt; ikke angives, udskriv al fejls\u00f8gningsinformation.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n-        <translation>Importerer \u2026</translation>\n+        <translation>Importerer\u2026</translation>\n     </message>\n     <message>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2960,6 +3099,10 @@\n         <source>Invalid -onion address: '%s'</source>\n         <translation>Ugyldig -onion adresse: \"%s\"</translation>\n     </message>\n+    <message>\n+        <source>Keep the transaction memory pool below &lt;n&gt; megabytes (default: %u)</source>\n+        <translation>Hold hukommelsespuljen med transaktioner under &lt;n&gt; megabyte (standard: %u)</translation>\n+    </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n         <translation>For f\u00e5 tilg\u00e6ngelige fildeskriptorer.</translation>\n@@ -2988,17 +3131,33 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Angiv tegnebogsfil (inden for datamappe)</translation>\n     </message>\n+    <message>\n+        <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation>Argument -benchmark underst\u00f8ttes ikke og ignoreres; brug -debug=bench.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation>Argument -debugnet underst\u00f8ttes ikke og ignoreres; brug -debug=net.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -tor found, use -onion.</source>\n+        <translation>Argument -tor underst\u00f8ttes ikke; brug -onion.</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Brug UPnP til at konfigurere den lyttende port (standard: %u)</translation>\n     </message>\n+    <message>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation>Brugeragent-kommentar (%s) indeholder usikre tegn.</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n-        <translation>Verificerer blokke \u2026</translation>\n+        <translation>Verificerer blokke\u2026</translation>\n     </message>\n     <message>\n         <source>Verifying wallet...</source>\n-        <translation>Verificerer tegnebog \u2026</translation>\n+        <translation>Verificerer tegnebog\u2026</translation>\n     </message>\n     <message>\n         <source>Wallet %s resides outside data directory %s</source>\n@@ -3024,10 +3183,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Tillad JSON-RPC-forbindelser fra angivet kilde. Gyldig for &lt;ip&gt; er en enkelt IP (fx 1.2.3.4), et netv\u00e6rk/netmaske (fx 1.2.3.4/255.255.255.0) eller et netv\u00e6rk/CIDR (fx 1.2.3.4/24). Dette tilvalg kan angives flere gange</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Der opstod en fejl under ops\u00e6tning af RPC-adresse %s port %u for lytning: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Tildel given adresse og s\u00e6t andre knuder, der forbinder til den, p\u00e5 hvidliste. Brug [v\u00e6rt]:port notation for IPv6</translation>\n@@ -3052,18 +3207,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Fejl: Lytning efter indkommende forbindelser mislykkedes (lytning resultarede i fejl %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Fejl: Ikke underst\u00f8ttet argument -socks blev fundet. Det er ikke muligt at angive SOCKS-version l\u00e6ngere, da kun SOCKS5-proxier er underst\u00f8ttet.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Udf\u00f8r kommando, n\u00e5r en relevant alarm modtages eller vi ser en virkelig lang udsplitning (%s i cmd erstattes af besked)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Gebyrer (i BTC/Kb) mindre end dette opfattes som nulgebyr for videresendelse (standard: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Hvis paytxfee ikke er sat, inkluderes nok gebyr til at transaktioner begynder at blive bekr\u00e6ftet ingen for gennemsnitligt n blokke (standard: %u)</translation>\n@@ -3076,10 +3223,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Maksimal st\u00f8rrelse p\u00e5 data i transaktioner til dataoverf\u00f8rsel, som vi videresender og miner (standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Besk\u00e6ring opsat under minimumsv\u00e6rdien %d MB. Brug venligst en h\u00f8jere v\u00e6rdi.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Foresp\u00f8rgsel</translation>\n@@ -3104,38 +3247,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Dette produkt indeholder software, der er udviklet af OpenSSL-projektet for brug i OpenSSL-v\u00e6rkt\u00f8jskassen &lt;https://www.openssl.org/&gt;, samt kryptografisk software, der er skrevet af Eric Young, samt UPnP-software, der er skrevet af Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>For at bruge bitcoind eller valgmuligheden -server i bitcoin-qt skal du oprette et rpcpassword i konfigurationsfilen:\n-%s\n-Det anbefales, at du bruger f\u00f8lgende tilf\u00e6ldige adgangskode:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(du beh\u00f8ver ikke at huske adgangskoden)\n-Brugernavnet og adgangskoden M\u00c5 IKKE v\u00e6re det samme.\n-Hvis filen ikke eksisterer, opret den da s\u00e5 kun ejeren har l\u00e6serettigheder.\n-Det anbefales ogs\u00e5 at s\u00e6tte alertnotify, s\u00e5 du f\u00e5r besked omkring problemer;\n-for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Advarsel: -maxtxfee er sat meget h\u00f8jt! S\u00e5 store gebyrer kan betales p\u00e5 en enkelt transaktion.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Advarsel: Unders\u00f8g venligst at din computers dato og klokkeslet er korrekt indstillet! Hvis der er fejl i disse vil Bitcoin Core ikke fungere korrekt.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Andre knuder p\u00e5 hvidliste kan ikke DoS-bandlyses, og deres transaktioner videresendes altid, selv hvis de allerede er i mempool'en. Brugbart til fx et adgangspunkt</translation>\n@@ -3154,11 +3265,7 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n     </message>\n     <message>\n         <source>Activating best chain...</source>\n-        <translation>Aktiverer bedste k\u00e6de \u2026</translation>\n-    </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>Kan ikke k\u00f8re med en tegnebog i besk\u00e5ret tilstand.</translation>\n+        <translation>Aktiverer bedste k\u00e6de\u2026</translation>\n     </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n@@ -3176,10 +3283,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Ophavsret \u00a9 2009-%i Udviklerne af Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Kunne ikke tolke -rpcbind-v\u00e6rdi %s som en netv\u00e6rksadresse</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Fejl ved indl\u00e6sning af wallet.dat: Tegnebog kr\u00e6ver en nyere version af Bitcoin Core</translation>\n@@ -3188,14 +3291,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>Fejl under l\u00e6sning fra database; lukker ned.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Fejl: Ikke underst\u00f8ttet argument -tor fundet, brug -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Gebyr (i BTC/kB) som skal f\u00f8jes til transaktioner, du sender (standard: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Information</translation>\n@@ -3236,18 +3331,10 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Node relay options:</source>\n         <translation>Videresendelsesvalgmuligheder for knude:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Tilvalg for RPC SSL: (se Bitcoin Wiki for instruktioner i SSL-opstart)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Tilvalg for RPC-server:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC-underst\u00f8ttelse for HTTP-persistente forbindelser (standard: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Genopbyg blokk\u00e6deindeks fra nuv\u00e6rende blk000??.dat-filer ved opstart</translation>\n@@ -3256,6 +3343,10 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation>Modtag og vis P2P-netv\u00e6rksadvarsler (standard: %u)</translation>\n     </message>\n+    <message>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n+        <translation>Reducerer -maxconnections fra %d til %d p\u00e5 grund af systembegr\u00e6nsninger.</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send sporings-/fejls\u00f8gningsinformation til konsollen i stedet for debug.log filen</translation>\n@@ -3324,10 +3415,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Ikke i stand til at tildele til %s p\u00e5 denne computer (bind returnerede fejl %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Brug UPnP til at konfigurere den lyttende port (standard: 1 under lytning)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Brugernavn til JSON-RPC-forbindelser</translation>\n@@ -3341,16 +3428,12 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <translation>Advarsel</translation>\n     </message>\n     <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Advarsel: Ikke underst\u00f8ttet argument -benchmark ignoreret, brug -debug=bench.</translation>\n+        <source>Zapping all transactions from wallet...</source>\n+        <translation>Zapper alle transaktioner fra tegnebog\u2026</translation>\n     </message>\n     <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Advarsel: Ikke underst\u00f8ttet argument -debugnet ignoreret, brug -debug=net.</translation>\n-    </message>\n-    <message>\n-        <source>Zapping all transactions from wallet...</source>\n-        <translation>Zapper alle transaktioner fra tegnebog \u2026</translation>\n+        <source>ZeroMQ notification options:</source>\n+        <translation>ZeroMQ-notifikationsindstillinger:</translation>\n     </message>\n     <message>\n         <source>on startup</source>\n@@ -3376,10 +3459,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Gennems\u00f8g blokk\u00e6den for manglende tegnebogstransaktioner</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Brug OpenSSL (https) for JSON-RPC-forbindelser</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Denne hj\u00e6lpebesked</translation>\n@@ -3390,7 +3469,7 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n     </message>\n     <message>\n         <source>Loading addresses...</source>\n-        <translation>Indl\u00e6ser adresser \u2026</translation>\n+        <translation>Indl\u00e6ser adresser\u2026</translation>\n     </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n@@ -3400,6 +3479,22 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = behold metadata for transaktion, fx kontoindehaver og information om betalingsanmodning, 2 = drop metadata for transaktion)</translation>\n     </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>-maxtxfee er sat meget h\u00f8jt! Gebyrer s\u00e5 store risikeres betalt p\u00e5 en enkelt transaktion.</translation>\n+    </message>\n+    <message>\n+        <source>-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>-paytxfee er sat meget h\u00f8jt! Dette er transaktionsgebyret, som du betaler, hvis du sender en transaktion.</translation>\n+    </message>\n+    <message>\n+        <source>Do not keep transactions in the mempool longer than &lt;n&gt; hours (default: %u)</source>\n+        <translation>Behold ikke transaktioner i hukommelsespuljen i mere end &lt;n&gt; timer (default: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>Fejl under l\u00e6sning af wallet.dat! Alle n\u00f8gler blev l\u00e6st korrekt, men transaktionsdata eller indgange i adressebogen kan mangle eller v\u00e6re ukorrekte.</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Hvor gennemarbejdet blokverificeringen for -checkblocks er (0-4; standard: %u)</translation>\n@@ -3416,6 +3511,18 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Udskriv fejls\u00f8gningsinformation (standard: %u, angivelse af &lt;kategori&gt; er valgfri)</translation>\n     </message>\n+    <message>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation>Den totale l\u00e6ngde p\u00e5 netv\u00e6rksversionsstrengen (%i) overstiger maksimall\u00e6ngden (%i). Reduc\u00e9r antaller af eller st\u00f8rrelsen p\u00e5 uacomments.</translation>\n+    </message>\n+    <message>\n+        <source>Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)</source>\n+        <translation>Pr\u00f8ver at holde udadg\u00e5ende traffik under det givne m\u00e5l (i MiB pr. 24 timer), 0 = ingen gr\u00e6nse (standard: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation>Argument -socks underst\u00f8ttes ikke. Det er ikke l\u00e6ngere muligt at s\u00e6tte SOCKS-version; kun SOCKS5-proxier underst\u00f8ttes.</translation>\n+    </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation>Brug separat SOCS5-proxy for at n\u00e5 andre knuder via Tor skjulte tjenester (standard: %s)</translation>\n@@ -3424,10 +3531,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(standard: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Accepterede kodninger (standard: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Foresp\u00f8rg altid adresser p\u00e5 andre knuder via DNS-opslag (default: %u)</translation>\n@@ -3488,15 +3591,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Videresend ikke-P2SH multisig (standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Servercertifikat-fil (standard: %s)\n-</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Serverens private n\u00f8gle (standard: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>S\u00e6t n\u00f8glepuljest\u00f8rrelse til &lt;n&gt; (standard: %u)\n@@ -3552,15 +3646,15 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n     </message>\n     <message>\n         <source>Loading block index...</source>\n-        <translation>Indl\u00e6ser blokindeks \u2026</translation>\n+        <translation>Indl\u00e6ser blokindeks\u2026</translation>\n     </message>\n     <message>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>Tilf\u00f8j en knude til at forbinde til og fors\u00f8g at holde forbindelsen \u00e5ben</translation>\n     </message>\n     <message>\n         <source>Loading wallet...</source>\n-        <translation>Indl\u00e6ser tegnebog \u2026</translation>\n+        <translation>Indl\u00e6ser tegnebog\u2026</translation>\n     </message>\n     <message>\n         <source>Cannot downgrade wallet</source>\n@@ -3572,7 +3666,7 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n     </message>\n     <message>\n         <source>Rescanning...</source>\n-        <translation>Genindl\u00e6ser \u2026</translation>\n+        <translation>Genindl\u00e6ser\u2026</translation>\n     </message>\n     <message>\n         <source>Done loading</source>"
      },
      {
        "sha": "a25fb7458d90aee113ac23b8a7b6337479502931",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 80,
        "deletions": 149,
        "changes": 229,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"de\" version=\"2.0\">\n+<TS language=\"de\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,13 @@\n         <translation>Die Wallet-Passphrase wurde erfolgreich ge\u00e4ndert.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/Netzmaske</translation>\n+    </message>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1068,6 +1075,18 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port des Proxies (z.B. 9050)</translation>\n     </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Programmfenster</translation>\n@@ -1286,10 +1305,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Zahlungsanforderung %1 ist zu gro\u00df (%2 Byte, erlaubt sind %3 Byte).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Zahlungsanforderungs-DoS-Schutz</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Kommunikationsfehler mit %1: %2</translation>\n@@ -1471,20 +1486,20 @@\n         <translation>Version</translation>\n     </message>\n     <message>\n-        <source>User Agent</source>\n-        <translation>User-Agent</translation>\n+        <source>Synced Headers</source>\n+        <translation>Synchronisierte Kopfdaten</translation>\n     </message>\n     <message>\n-        <source>Services</source>\n-        <translation>Dienste</translation>\n+        <source>Synced Blocks</source>\n+        <translation>Synchronisierte Bl\u00f6cke</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>Start-H\u00f6he</translation>\n+        <source>User Agent</source>\n+        <translation>User-Agent</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>Sync-H\u00f6he</translation>\n+        <source>Services</source>\n+        <translation>Dienste</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1562,6 +1577,26 @@\n         <source>Clear console</source>\n         <translation>Konsole zur\u00fccksetzen</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>Knoten &amp;trennen</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 &amp;Stunde</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 &amp;Tag</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 &amp;Woche</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 &amp;Jahr</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>Willkommen in der \"Bitcoin Core\"-RPC-Konsole.</translation>\n@@ -1590,6 +1625,10 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(Knotenkennung: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>\u00fcber %1</translation>\n@@ -1607,12 +1646,16 @@\n         <translation>ausgehend</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Unbekannt</translation>\n+        <source>Yes</source>\n+        <translation>Ja</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Aktualisiere...</translation>\n+        <source>No</source>\n+        <translation>Nein</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Unbekannt</translation>\n     </message>\n </context>\n <context>\n@@ -1978,10 +2021,6 @@\n         <source>Copy change</source>\n         <translation>Wechselgeld kopieren</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Gesamtbetrag %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>oder</translation>\n@@ -2022,6 +2061,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Nur die minimale Geb\u00fchr in H\u00f6he von %1 zahlen</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>Gesamtbetrag %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Die Zahlungsadresse ist ung\u00fcltig, bitte nochmals \u00fcberpr\u00fcfen.</translation>\n@@ -2801,12 +2844,16 @@\n         <translation>Kommandozeilen- und JSON-RPC-Befehle annehmen</translation>\n     </message>\n     <message>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Als Hintergrunddienst ausf\u00fchren und Befehle annehmen</translation>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Fehler: Ein schwerer interner Fehler ist aufgetreten, siehe debug.log f\u00fcr Details.</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Das Testnetz verwenden</translation>\n+        <source>Pruning blockstore...</source>\n+        <translation>K\u00fcrze Blockspeicher...</translation>\n+    </message>\n+    <message>\n+        <source>Run in the background as a daemon and accept commands</source>\n+        <translation>Als Hintergrunddienst ausf\u00fchren und Befehle annehmen</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2828,14 +2875,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Befehl ausf\u00fchren wenn sich eine Wallet-Transaktion ver\u00e4ndert (%s im Befehl wird durch die Transaktions-ID ersetzt)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Maximale Gesamtgeb\u00fchren je Wallet-Transaktion, ein zu niedriger Wert kann gro\u00dfe Transaktionen abbrechen (Standard: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Speicherplatzanforderung durch k\u00fcrzen (l\u00f6schen) alter Bl\u00f6cke reduzieren. Dieser Modus deaktiviert die Wallet-Unterst\u00fctzung und ist nicht mit -txindex kompatibel. Warnung: Die Umkehr dieser Einstellung erfordert das erneute Herunterladen der gesamten Blockkette. (Standard: 0 = deaktiviert das K\u00fcrzen von Bl\u00f6cken, &gt;%u = Zielgr\u00f6\u00dfe in MiB, die f\u00fcr Blockdateien verwendet werden darf)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Maximale Anzahl an Skript-Verifizierungs-Threads festlegen (%u bis %d, 0 = automatisch, &lt;0 = so viele Kerne frei lassen, Standard: %d)</translation>\n@@ -2856,10 +2895,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>Warnung: \u00dcberpr\u00fcpfen Sie ihre Netzwerkverbindung, %d Bl\u00f6cke wurden in den letzten %d Stunden empfangen (%d wurden erwartet).</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Warnung: -paytxfee ist auf einen sehr hohen Wert festgelegt! Dies ist die Geb\u00fchr die beim Senden einer Transaktion f\u00e4llig wird.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Warnung: Das Netzwerk scheint nicht vollst\u00e4ndig \u00fcbereinzustimmen! Einige Miner scheinen Probleme zu haben.</translation>\n@@ -2868,10 +2903,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Warnung: Wir scheinen nicht vollst\u00e4ndig mit unseren Gegenstellen \u00fcbereinzustimmen! Sie oder die anderen Knoten m\u00fcssen unter Umst\u00e4nden Ihre Client-Software aktualisieren.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Warnung: Lesen von wallet.dat fehlgeschlagen! Alle Schl\u00fcssel wurden korrekt gelesen, Transaktionsdaten bzw. Adressbucheintr\u00e4ge fehlen aber m\u00f6glicherweise oder sind inkorrekt.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Warnung: wallet.dat besch\u00e4digt, Datenrettung erfolgreich! Original wallet.dat wurde als wallet.{Zeitstempel}.dat in %s gespeichert. Falls Ihr Kontostand oder Transaktionen nicht korrekt sind, sollten Sie von einer Datensicherung wiederherstellen.</translation>\n@@ -2884,6 +2915,10 @@\n         <source>(default: 1)</source>\n         <translation>(Standard: 1)</translation>\n     </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>-maxmempool muss mindestens %d MB betragen</translation>\n+    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; kann sein:</translation>\n@@ -2936,10 +2971,6 @@\n         <source>Error opening block database</source>\n         <translation>Fehler beim \u00d6ffnen der Blockdatenbank</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Fehler: Ein schwerer Fehler ist aufgetreten, f\u00fcr Details debug.log ansehen.</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Fehler: Zu wenig freier Speicherplatz auf dem Datentr\u00e4ger!</translation>\n@@ -2948,10 +2979,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Fehler, es konnte kein Port abgeh\u00f6rt werden. Wenn dies so gew\u00fcnscht wird -listen=0 verwenden.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Wenn &lt;category&gt; nicht angegeben wird, jegliche Debugginginformationen ausgeben.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importiere...</translation>\n@@ -3028,10 +3055,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>JSON-RPC-Verbindungen von der angegeben Quelle erlauben. G\u00fcltig f\u00fcr &lt;ip&gt; ist eine einzelne IP-Adresse (z.B. 1.2.3.4), ein Netzwerk bzw. eine Netzmaske (z.B. 1.2.3.4/255.255.255.0), oder die CIDR-Notation (z.B. 1.2.3.4/24). Kann mehrmals angegeben werden.</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Beim Einrichten der abzuh\u00f6renden RPC-Adresse %s auf Port %u ist ein Fehler aufgetreten: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>An die angegebene Adresse binden und Gegenstellen, die sich dorthin verbinden, immer zulassen. F\u00fcr IPv6 \"[Host]:Port\"-Notation verwenden</translation>\n@@ -3056,18 +3079,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Fehler: Abh\u00f6ren nach eingehenden Verbindungen fehlgeschlagen (listen meldete Fehler %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Fehler: Nicht unterst\u00fctztes Argument -socks gefunden. Das Festlegen der SOCKS-Version ist nicht mehr m\u00f6glich, nur noch SOCKS5-Proxies werden unterst\u00fctzt.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Befehl ausf\u00fchren wenn ein relevanter Alarm empfangen wird oder wir einen wirklich langen Fork entdecken (%s im Befehl wird durch die Nachricht ersetzt)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Niedrigere Geb\u00fchren (in BTC/Kb) als diese werden bei der Weiterleitung als geb\u00fchrenfrei angesehen (Standard: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Wenn -paytxfee nicht festgelegt wurde Geb\u00fchren einschlie\u00dfen, so dass mit der Best\u00e4tigung von Transaktionen im Schnitt innerhalb von n Bl\u00f6cken begonnen wird (Standard: %u)</translation>\n@@ -3080,10 +3095,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Maximale Datengr\u00f6\u00dfe in \"Data Carrier\"-Transaktionen die weitergeleitet und erarbeitet werden (Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>K\u00fcrzungsmodus wurde kleiner als das Minimum in H\u00f6he von %d MiB konfiguriert. Bitte verwenden Sie einen gr\u00f6\u00dferen Wert.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Adressen von Gegenstellen via DNS-Namensaufl\u00f6sung finden, falls zu wenige Adressen verf\u00fcgbar sind (Standard: 1, au\u00dfer bei -connect)</translation>\n@@ -3108,38 +3119,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Dieses Produkt enth\u00e4lt Software, die vom OpenSSL-Projekt zur Verwendung im OpenSSL-Toolkit &lt;https://www.openssl.org/&gt; entwickelt wird, sowie von Eric Young geschriebene kryptographische Software und von Thomas Bernard geschriebene UPnP-Software.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Um bitcoind oder die Option -server mit bitcoin-qt verwenden zu k\u00f6nnen, m\u00fcssen Sie rpcpassword in der Konfigurationsdatei angeben:\n-%s\n-Es wird empfohlen das folgende Zufallspasswort zu verwenden.\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(Sie m\u00fcssen sich dieses Passwort nicht merken!)\n-Der Benutzername und das Passwort d\u00fcrfen NICHT identisch sein.\n-Falls die Konfigurationsdatei nicht existiert, erzeugen Sie diese bitte mit Leserechten nur f\u00fcr den Dateibesitzer.\n-Es wird ebenfalls empfohlen alertnotify anzugeben, um im Problemfall benachrichtigt zu werden.\n-Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Warnung: -maxtxfee ist auf einen sehr hohen Wert festgelegt! Geb\u00fchren dieser H\u00f6he k\u00f6nnten f\u00fcr eine einzelne Transaktion bezahlt werden.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Warnung: Bitte korrigieren Sie die Datums- und Uhrzeiteinstellungen Ihres Computers, da Bitcoin Core ansonsten nicht ordnungsgem\u00e4\u00df funktionieren wird.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Erlaubte Gegenstellen werden nicht f\u00fcr DoS-Attacken gesperrt und ihre Transkationen werden immer weitergeleitet, auch wenn sie sich bereits im Speicherpool befinden, was z.B. f\u00fcr Gateways sinnvoll ist.</translation>\n@@ -3160,10 +3139,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktiviere beste Blockkette...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>Eine Wallet kann im K\u00fcrzungsmodus nicht verwendet werden.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Kann Adresse in -whitebind nicht aufl\u00f6sen: '%s'</translation>\n@@ -3180,10 +3155,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Urheberrecht (C) 2009-%i Die \"Bitcoin Core\"-Entwickler</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Der Wert %s von -rpcbind wurde nicht als Netzwerkadresse erkannt</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Fehler beim Laden von wallet.dat: Wallet ben\u00f6tigt neuere Version von Bitcoin Core</translation>\n@@ -3192,14 +3163,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>Fehler beim lesen der Datenbank, Ausf\u00fchrung wird beendet.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Fehler: Nicht unterst\u00fctztes Argument -tor gefunden, bitte -onion verwenden.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Geb\u00fchr (in BTC/kB), die von Ihnen gesendeten Transaktionen hinzugef\u00fcgt wird (Standard: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Hinweis</translation>\n@@ -3240,18 +3203,10 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Node relay options:</source>\n         <translation>Knoten-Weiterleitungsoptionen:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC-SSL-Optionen (siehe Bitcoin-Wiki f\u00fcr SSL-Einrichtung):</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC-Serveroptionen:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Unterst\u00fctzung f\u00fcr persistente HTTP-Verbindungen bei RPC (Standard: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Blockkettenindex aus aktuellen Dateien blk000??.dat beim Starten wiederaufbauen</translation>\n@@ -3328,10 +3283,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Kann auf diesem Computer nicht an %s binden (bind meldete Fehler %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>UPnP verwenden, um eine Portweiterleitung einzurichten (Standard: 1, wenn abgeh\u00f6rt wird)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Benutzername f\u00fcr JSON-RPC-Verbindungen</translation>\n@@ -3344,18 +3295,14 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Warning</source>\n         <translation>Warnung</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Warnung: Nicht unterst\u00fctztes Argument -benchmark wurde ignoriert, bitte -debug=bench verwenden.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Warnung: Nicht unterst\u00fctztes Argument -debugnet wurde ignoriert, bitte -debug=net verwenden.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>L\u00f6sche alle Transaktionen aus Wallet...</translation>\n     </message>\n+    <message>\n+        <source>ZeroMQ notification options:</source>\n+        <translation>ZeroMQ-Benachrichtigungsoptionen:</translation>\n+    </message>\n     <message>\n         <source>on startup</source>\n         <translation>beim Starten</translation>\n@@ -3380,10 +3327,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Blockkette erneut nach fehlenden Wallet-Transaktionen durchsuchen</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>OpenSSL (https) f\u00fcr JSON-RPC-Verbindungen verwenden</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Dieser Hilfetext</translation>\n@@ -3428,10 +3371,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(Standard: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Zul\u00e4ssige Chiffren (Standard: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Adressen von Gegenstellen immer \u00fcber DNS-Namensaufl\u00f6sung abfragen (Standard: %u)</translation>\n@@ -3488,14 +3427,6 @@ Beispiel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Nicht-\"P2SH-Multisig\" weiterleiten (Standard: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Serverzertifikat (Standard: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Privater Serverschl\u00fcssel (Standard: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Gr\u00f6\u00dfe des Schl\u00fcsselpools festlegen auf &lt;n&gt; (Standard: %u)</translation>"
      },
      {
        "sha": "1f33a497ee794361d85f3db586e5e60be33f7145",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 67,
        "deletions": 62,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"el_GR\" version=\"2.0\">\n+<TS language=\"el_GR\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -213,6 +213,9 @@\n         <translation>\u039f \u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd \u03ac\u03bb\u03bb\u03b1\u03be\u03b5 \u03bc\u03b5 \u03b5\u03c0\u03b9\u03c4\u03c5\u03c7\u03af\u03b1.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -451,6 +454,36 @@\n         <source>Catching up...</source>\n         <translation>\u0395\u03bd\u03b7\u03bc\u03ad\u03c1\u03c9\u03c3\u03b7...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\u03a0\u03bf\u03c3\u03cc: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>\u03a4\u03cd\u03c0\u03bf\u03c2: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>\u0397 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03b1\u03c0\u03b5\u03c3\u03c4\u03ac\u03bb\u03b7</translation>\n@@ -649,6 +682,18 @@\n         <source>none</source>\n         <translation>\u03ba\u03b1\u03bd\u03ad\u03bd\u03b1</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>\u0391\u03c5\u03c4\u03ae \u03b7 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03cc\u03ba\u03ba\u03b9\u03bd\u03b7 \u03b1\u03bd \u03c4\u03bf \u03bc\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc 1000 bytes.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>\u0391\u03c5\u03c4\u03ae \u03b7 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03cc\u03ba\u03ba\u03b9\u03bd\u03b7 \u03b1\u03bd \u03b7 \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc \"\u03bc\u03b5\u03c3\u03b1\u03af\u03b1\".</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>\u0391\u03c5\u03c4\u03ae \u03b7 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03cc\u03ba\u03ba\u03b9\u03bd\u03b7 \u03b1\u03bd \u03bf\u03c0\u03bf\u03b9\u03bf\u03c3\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c0\u03b1\u03c1\u03b1\u03bb\u03ae\u03c0\u03c4\u03b7\u03c2 \u03bb\u03ac\u03b2\u03b5\u03b9 \u03c0\u03bf\u03c3\u03cc \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc %1.</translation>\n+    </message>\n     <message>\n         <source>yes</source>\n         <translation>\u03bd\u03b1\u03b9</translation>\n@@ -826,7 +871,15 @@\n         <source>Error</source>\n         <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1</translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>%n GB of free space available</source>\n+        <translation><numerusform>%n GB \u03b5\u03bb\u03b5\u03cd\u03b8\u03b5\u03c1\u03bf\u03c5 \u03c7\u03ce\u03c1\u03bf\u03c5 \u03b4\u03b9\u03b1\u03b8\u03ad\u03c3\u03b9\u03bc\u03b1</numerusform><numerusform>%n GB \u03b5\u03bb\u03b5\u03cd\u03b8\u03b5\u03c1\u03bf\u03c5 \u03c7\u03ce\u03c1\u03bf\u03c5 \u03b4\u03b9\u03b1\u03b8\u03ad\u03c3\u03b9\u03bc\u03b1</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>(of %n GB needed)</source>\n+        <translation><numerusform>(\u03b1\u03c0\u03cc \u03c4\u03bf %n GB \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03b5\u03af\u03c4\u03b1\u03b9)</numerusform><numerusform>(\u03b1\u03c0\u03cc \u03c4\u03b1 %n GB \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9)</numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n@@ -884,6 +937,10 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 IP \u03c4\u03bf\u03c5 \u03b4\u03b9\u03b1\u03bc\u03b5\u03c3\u03bf\u03bb\u03b1\u03b2\u03b7\u03c4\u03ae (\u03c0.\u03c7. 127.0.0.1  / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>\u0395\u03bb\u03b1\u03c7\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b1\u03bd\u03c4\u03af \u03b3\u03b9\u03b1 \u03ad\u03be\u03bf\u03b4\u03bf \u03ba\u03b1\u03c4\u03ac \u03c4\u03bf \u03ba\u03bb\u03b5\u03af\u03c3\u03b9\u03bc\u03bf \u03c4\u03bf\u03c5 \u03c0\u03b1\u03c1\u03b1\u03b8\u03cd\u03c1\u03bf\u03c5. \u038c\u03c4\u03b1\u03bd \u03b1\u03c5\u03c4\u03ae \u03b7 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b7, \u03b7 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u03b8\u03b1 \u03ba\u03bb\u03b5\u03af\u03bd\u03b5\u03b9 \u03bc\u03cc\u03bd\u03bf \u03b1\u03bd \u03b5\u03c0\u03b9\u03bb\u03b5\u03c7\u03b8\u03b5\u03af \u03b7 \u0388\u03be\u03bf\u03b4\u03bf\u03c2 \u03c3\u03c4\u03bf \u03bc\u03b5\u03bd\u03bf\u03cd.</translation>\n+    </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>URLs \u03b1\u03c0\u03cc \u03c4\u03c1\u03af\u03c4\u03bf\u03c5\u03c2 (\u03c0.\u03c7. \u03ad\u03bd\u03b1\u03c2 \u03b5\u03be\u03b5\u03c1\u03b5\u03c5\u03bd\u03b7\u03c4\u03ae\u03c2 \u03bc\u03c0\u03bb\u03bf\u03ba) \u03c4\u03b1 \u03bf\u03c0\u03bf\u03af\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03ba\u03b1\u03c1\u03c4\u03ad\u03bb\u03b1 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ce\u03bd \u03c9\u03c2 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03bc\u03b5\u03bd\u03bf\u03cd. \u03a4\u03bf %s \u03c3\u03c4\u03b1 URL \u03b1\u03bd\u03c4\u03b9\u03ba\u03b1\u03b8\u03b9\u03c3\u03c4\u03ac\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 \u03ba\u03b1\u03c4\u03b1\u03c4\u03b5\u03bc\u03b1\u03c7\u03b9\u03c3\u03bc\u03ad\u03bd\u03b7\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2.</translation>\n@@ -1315,14 +1372,6 @@\n         <source>Services</source>\n         <translation>\u03a5\u03c0\u03b7\u03c1\u03b5\u03c3\u03af\u03b5\u03c2</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>\u0391\u03c1\u03c7\u03b9\u03ba\u03cc \u03cd\u03c8\u03bf\u03c2</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>\u038e\u03c8\u03bf\u03c2 \u03c3\u03c5\u03b3\u03c7\u03bf\u03bd\u03b9\u03c3\u03bc\u03bf\u03cd</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>\u03a3\u03ba\u03bf\u03c1 \u03b1\u03c0\u03bf\u03ba\u03bb\u03b7\u03c3\u03bc\u03bf\u03cd</translation>\n@@ -1439,10 +1488,6 @@\n         <source>Unknown</source>\n         <translation>\u0386\u03b3\u03bd\u03c9\u03c3\u03c4\u03bf(\u03b1)</translation>\n     </message>\n-    <message>\n-        <source>Fetching...</source>\n-        <translation>\u0391\u03bd\u03ac\u03ba\u03c4\u03b7\u03c3\u03b7...</translation>\n-    </message>\n </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n@@ -1655,6 +1700,14 @@\n         <source>per kilobyte</source>\n         <translation>\u03b1\u03bd\u03ac kilobyte</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>\u0391\u03c0\u03cc\u03ba\u03c1\u03c5\u03c8\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>total at least</source>\n+        <translation>\u03c3\u03c5\u03bd\u03bf\u03bb\u03b9\u03ba\u03ac \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd</translation>\n+    </message>\n     <message>\n         <source>Recommended:</source>\n         <translation>\u03a0\u03c1\u03bf\u03c4\u03b5\u03b9\u03bd\u03cc\u03bc\u03b5\u03bd\u03bf: </translation>\n@@ -1747,10 +1800,6 @@\n         <source>Copy change</source>\n         <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd \u03c1\u03ad\u03c3\u03c4\u03c9\u03bd</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u039f\u03bb\u03b9\u03ba\u03cc \u03a0\u03bf\u03c3\u03cc %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u03ae</translation>\n@@ -2481,10 +2530,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u0395\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c3\u03c4\u03bf \u03c0\u03b1\u03c1\u03b1\u03c3\u03ba\u03ae\u03bd\u03b9\u03bf \u03ba\u03b9 \u03b1\u03c0\u03bf\u03b4\u03bf\u03c7\u03ae \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u03a7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b4\u03bf\u03ba\u03b9\u03bc\u03b1\u03c3\u03c4\u03b9\u03ba\u03bf\u03cd \u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>\u039d\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c3\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c0\u03cc \u03ad\u03be\u03c9(\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae:1)</translation>\n@@ -2501,14 +2546,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u0391\u03c5\u03c4\u03cc \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03bf-\u03c4\u03b5\u03c3\u03c4 \u03ba\u03c5\u03ba\u03bb\u03bf\u03c6\u03bf\u03c1\u03af\u03b1\u03c2 - \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03bc\u03b5 \u03b4\u03b9\u03ba\u03ae \u03c3\u03b1\u03c2 \u03b5\u03c5\u03b8\u03cd\u03bd\u03b7 - \u03b4\u03b5\u03bd \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b5 \u03b3\u03b9\u03b1 \u03b5\u03be\u03cc\u03c1\u03c5\u03be\u03b7 \u03ae \u03b3\u03b9\u03b1 \u03b1\u03bb\u03bb\u03b5\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u03a0\u03c1\u03bf\u03b5\u03b9\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7: \u0397 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 -paytxfee \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03c5\u03c8\u03b7\u03bb\u03ae. \u03a0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03bc\u03bf\u03b9\u03b2\u03ae \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03c0\u03bb\u03b7\u03c1\u03ce\u03bd\u03b5\u03c4\u03b5 \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03c3\u03c4\u03ad\u03bb\u03bd\u03b5\u03c4\u03b5.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\u03a0\u03c1\u03bf\u03b5\u03b9\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 : \u03a3\u03c6\u03ac\u03bb\u03bc\u03b1 wallet.dat \u03ba\u03b1\u03c4\u03b1 \u03c4\u03b7\u03bd \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7 ! \u038c\u03bb\u03b1 \u03c4\u03b1 \u03ba\u03bb\u03b5\u03b9\u03b4\u03b9\u03ac \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c1\u03b9\u03c3\u03b8\u03b7\u03ba\u03b1\u03bd \u03c3\u03c9\u03c3\u03c4\u03ac, \u03b1\u03bb\u03bb\u03ac \u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ce\u03bd \u03ae \u03ba\u03b1\u03c4\u03b1\u03c7\u03c9\u03c1\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03bf \u03b2\u03b9\u03b2\u03bb\u03af\u03bf \u03b4\u03b9\u03b5\u03c5\u03b8\u03cd\u03bd\u03c3\u03b5\u03c9\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03bb\u03bb\u03b9\u03c0\u03b5\u03af\u03c2 \u03ae \u03bb\u03b1\u03bd\u03b8\u03b1\u03c3\u03bc\u03ad\u03bd\u03b1. </translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u03a0\u03c1\u03bf\u03b5\u03b9\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 : \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03b9\u03bf wallet.dat \u03b5\u03b9\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b5\u03c6\u03b8\u03b1\u03c1\u03bc\u03ad\u03bd\u03bf, \u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c3\u03ce\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 ! Original wallet.dat \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c9\u03c2 wallet.{timestamp}.bak \u03c3\u03c4\u03bf %s . \u0391\u03bd \u03c4\u03bf \u03c5\u03c0\u03cc\u03bb\u03bf\u03b9\u03c0\u03bf \u03c4\u03bf\u03c5 \u03ae \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03c3\u03b1\u03c2, \u03b5\u03af\u03bd\u03b1\u03b9 \u03bb\u03ac\u03b8\u03bf\u03c2 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03c4\u03b5 \u03b1\u03c0\u03cc \u03ad\u03bd\u03b1 \u03b1\u03bd\u03c4\u03af\u03b3\u03c1\u03b1\u03c6\u03bf \u03b1\u03c3\u03c6\u03b1\u03bb\u03b5\u03af\u03b1\u03c2</translation>\n@@ -2557,10 +2594,6 @@\n         <source>Error opening block database</source>\n         <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03c6\u03bf\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03b2\u03b1\u03c3\u03b7\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03b5\u03bd\u03c9\u03bd \u03c4\u03c9\u03bd \u03bc\u03c0\u03bb\u03bf\u03ba</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1: \u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03c3\u03c4\u03b7\u03ba\u03b5 \u03b1\u03bd\u03b5\u03c0\u03b1\u03bd\u03cc\u03c1\u03b8\u03c9\u03c4\u03bf \u03b5\u03c3\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03cc \u03c3\u03c6\u03ac\u03bb\u03bc\u03b1, \u03b4\u03b5\u03af\u03c4\u03b5 debug.log \u03b3\u03b9\u03b1 \u03bb\u03b5\u03c0\u03c4\u03bf\u03bc\u03ad\u03c1\u03b5\u03b9\u03b5\u03c2</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>\u03a0\u03c1\u03bf\u03b5\u03b9\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7: \u03a7\u03b1\u03bc\u03b7\u03bb\u03cc\u03c2 \u03c7\u03ce\u03c1\u03bf\u03c2 \u03c3\u03c4\u03bf \u03b4\u03af\u03c3\u03ba\u03bf  </translation>\n@@ -2613,10 +2646,6 @@\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n         <translation>\u0391\u03b4\u03c5\u03bd\u03b1\u03bc\u03af\u03b1 \u03ba\u03bb\u03b5\u03b9\u03b4\u03ce\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03c6\u03b1\u03ba\u03ad\u03bb\u03bf\u03c5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd %s. \u03a0\u03b9\u03b8\u03b1\u03bd\u03ce\u03c2 \u03c4\u03bf Bitcoin \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ae\u03b4\u03b7 \u03b5\u03bd\u03b5\u03c1\u03b3\u03cc.</translation>\n     </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>\u03a0\u03c1\u03bf\u03b5\u03b9\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7: \u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03ce \u03b5\u03bb\u03ad\u03b3\u03be\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03b7 \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1 \u03ba\u03b1\u03b9 \u03ce\u03c1\u03b1 \u03c4\u03bf\u03c5 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ae \u03c3\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03c9\u03c3\u03c4\u03ac \u03c1\u03c5\u03b8\u03bc\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2! \u0395\u03ac\u03bd \u03c4\u03bf \u03c1\u03bf\u03bb\u03cc\u03b9 \u03c3\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bb\u03ac\u03b8\u03bf\u03c2 \u03c4\u03bf Bitcoin Core \u03b4\u03b5\u03bd \u03b8\u03b1 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03b5\u03b9 \u03c3\u03c9\u03c3\u03c4\u03ac. </translation>\n-    </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>\u0395\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae \u03c6\u03b1\u03ba\u03ad\u03bb\u03bf\u03c5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03c4\u03b7\u03bd \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7 (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03bf: 0)</translation>\n@@ -2625,10 +2654,6 @@\n         <source>Connect through SOCKS5 proxy</source>\n         <translation>\u03a3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 \u03bc\u03ad\u03c3\u03c9 \u03b4\u03b9\u03b1\u03bc\u03b5\u03c3\u03bf\u03bb\u03b1\u03b2\u03b7\u03c4\u03ae SOCKS5</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>\u0394\u03b5\u03bd \u03bc\u03c0\u03cc\u03c1\u03b5\u03c3\u03b5 \u03bd\u03b1 \u03b1\u03bd\u03b1\u03bb\u03c5\u03b8\u03b5\u03af \u03b7 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 -rpcbind value %s \u03c9\u03c2 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 wallet.dat: \u03a4\u03bf \u03a0\u03bf\u03c1\u03c4\u03bf\u03c6\u03cc\u03bb\u03b9 \u03b1\u03c0\u03b1\u03b9\u03c4\u03b5\u03af \u03bc\u03b9\u03b1 \u03bd\u03b5\u03cc\u03c4\u03b5\u03c1\u03b7 \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7 \u03c4\u03bf\u03c5 Bitcoin</translation>\n@@ -2637,10 +2662,6 @@\n         <source>Error reading from database, shutting down.</source>\n         <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7\u03c2 \u03b1\u03c0\u03cc \u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd, \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1: \u039c\u03b7 \u03c3\u03c5\u03bc\u03b2\u03b1\u03c4\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 -tor. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b5 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf -onion</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>\u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b1</translation>\n@@ -2661,10 +2682,6 @@\n         <source>Node relay options:</source>\n         <translation>\u0395\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2 \u03b1\u03bd\u03b1\u03bc\u03b5\u03c4\u03ac\u03b4\u03bf\u03c3\u03b7\u03c2 \u03ba\u03cc\u03bc\u03b2\u03bf\u03c5: </translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>\u03a1\u03c5\u03b8\u03bc\u03af\u03c3\u03b5\u03b9\u03c2 SSL: (\u03b1\u03bd\u03b1\u03c4\u03c1\u03ad\u03be\u03c4\u03b5 \u03c3\u03c4\u03bf Bitcoin Wiki \u03b3\u03b9\u03b1 \u03bf\u03b4\u03b7\u03b3\u03af\u03b5\u03c2 \u03c1\u03c5\u03b8\u03bc\u03af\u03c3\u03b5\u03c9\u03bd SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>\u0395\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2 \u03b4\u03b9\u03b1\u03ba\u03bf\u03bc\u03b9\u03c3\u03c4\u03ae RPC:</translation>\n@@ -2717,10 +2734,6 @@\n         <source>Transaction too large</source>\n         <translation>\u0397 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03b5\u03b9\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03bc\u03b5\u03b3\u03ac\u03bb\u03b7 </translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5  UPnP \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c0\u03cc\u03c1\u03c4\u03b1\u03c2 \u03b1\u03bd\u03b1\u03bc\u03bf\u03bd\u03ae\u03c2 (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae:1)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u038c\u03bd\u03bf\u03bc\u03b1 \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 JSON-RPC</translation>\n@@ -2757,10 +2770,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u0395\u03c0\u03b1\u03bd\u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03b1\u03c2 \u03bc\u03c0\u03bb\u03bf\u03ba \u03b3\u03b9\u03b1 \u03b1\u03c0\u03bf\u03cd\u03c3\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u03a7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 OpenSSL (https) \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bd\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u0391\u03c5\u03c4\u03cc \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03b2\u03bf\u03ae\u03b8\u03b5\u03b9\u03b1\u03c2</translation>\n@@ -2809,10 +2818,6 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>\u0394\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03b7 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03b4\u03b9\u03b1\u03bc\u03b5\u03c3\u03bf\u03bb\u03b1\u03b2\u03b7\u03c4\u03ae: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>\u0391\u03c1\u03c7\u03b5\u03af\u03bf \u03c0\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03b9\u03b7\u03c4\u03b9\u03ba\u03bf\u03cd \u03c4\u03bf\u03c5 \u03b4\u03b9\u03b1\u03ba\u03bf\u03bc\u03b9\u03c3\u03c4\u03ae  (\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: %s)</translation>\n-    </message>\n     <message>\n         <source>Specify connection timeout in milliseconds (minimum: 1, default: %d)</source>\n         <translation>\u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bb\u03ae\u03be\u03b7\u03c2 \u03c7\u03c1\u03bf\u03bd\u03b9\u03ba\u03bf\u03cd \u03bf\u03c1\u03af\u03bf\u03c5 \u03c3\u03b5 \u03c7\u03b9\u03bb\u03b9\u03bf\u03c3\u03c4\u03ac \u03c4\u03bf\u03c5 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03bf\u03bb\u03ad\u03c0\u03c4\u03bf\u03c5(\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: %d)</translation>"
      },
      {
        "sha": "1a607a2233951c2fcfc3a6a90a36ff32c7242ef7",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 60,
        "deletions": 73,
        "changes": 133,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1756,7 +1756,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+761\"/>\n+        <location line=\"+760\"/>\n         <source>%1 d</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1921,16 +1921,18 @@\n     </message>\n     <message>\n         <location line=\"+231\"/>\n+        <location line=\"+552\"/>\n         <source>Received</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+80\"/>\n+        <location line=\"-472\"/>\n+        <location line=\"+449\"/>\n         <source>Sent</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+41\"/>\n+        <location line=\"-408\"/>\n         <source>&amp;Peers</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1942,7 +1944,7 @@\n     <message>\n         <location line=\"+57\"/>\n         <location filename=\"../rpcconsole.cpp\" line=\"+281\"/>\n-        <location line=\"+560\"/>\n+        <location line=\"+566\"/>\n         <source>Select a peer to view detailed information.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2008,17 +2010,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n-        <source>Bytes Sent</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+23\"/>\n-        <source>Bytes Received</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+23\"/>\n+        <location line=\"+69\"/>\n         <source>Ping Time</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2093,7 +2085,7 @@\n         <translation>Clear console</translation>\n     </message>\n     <message>\n-        <location filename=\"../rpcconsole.cpp\" line=\"-150\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"-156\"/>\n         <source>&amp;Disconnect Node</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2131,7 +2123,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+64\"/>\n+        <location line=\"+70\"/>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2424,7 +2416,7 @@\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+545\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+546\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n@@ -2626,7 +2618,7 @@\n         <translation>Confirm send coins</translation>\n     </message>\n     <message>\n-        <location line=\"-48\"/>\n+        <location line=\"-49\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n         <location line=\"+4\"/>\n@@ -2669,7 +2661,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+246\"/>\n+        <location line=\"+244\"/>\n+        <source>Total Amount %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>or</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2708,26 +2705,21 @@\n         <source>Payment request expired.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+88\"/>\n+        <source>Pay only the required fee of %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message numerus=\"yes\">\n-        <location line=\"+110\"/>\n+        <location line=\"+22\"/>\n         <source>Estimated to begin confirmation within %n block(s).</source>\n         <translation type=\"unfinished\">\n             <numerusform>Estimated to begin confirmation within %n block.</numerusform>\n             <numerusform>Estimated to begin confirmation within %n blocks.</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location line=\"-22\"/>\n-        <source>Pay only the minimum fee of %1</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"-309\"/>\n-        <source>Total Amount %1&lt;span style=&apos;font-size:10pt;font-weight:normal;&apos;&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+195\"/>\n+        <location line=\"-136\"/>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2752,7 +2744,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-691\"/>\n+        <location line=\"-692\"/>\n         <source>Copy dust</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3731,12 +3723,7 @@\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n-        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"-113\"/>\n         <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3891,12 +3878,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n-        <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n-        <translation>Attempt to recover private keys from a corrupt wallet.dat</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+9\"/>\n         <source>Block creation options:</source>\n         <translation>Block creation options:</translation>\n     </message>\n@@ -4091,12 +4073,7 @@\n         <translation>You need to rebuild the database using -reindex to change -txindex</translation>\n     </message>\n     <message>\n-        <location line=\"-91\"/>\n-        <source>Imports blocks from external blk000??.dat file</source>\n-        <translation>Imports blocks from external blk000??.dat file</translation>\n-    </message>\n-    <message>\n-        <location line=\"-208\"/>\n+        <location line=\"-299\"/>\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4136,7 +4113,12 @@\n         <translation>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+9\"/>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4206,7 +4188,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+4\"/>\n+        <source>Attempt to recover private keys from a corrupt wallet.dat on startup</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n         <source>Cannot resolve -whitebind address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4236,7 +4223,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+12\"/>\n+        <location line=\"+9\"/>\n+        <source>Imports blocks from external blk000??.dat file on startup</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Information</source>\n         <translation>Information</translation>\n     </message>\n@@ -4306,7 +4298,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+3\"/>\n+        <source>Rescan the block chain for missing wallet transactions on startup</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send trace/debug info to console instead of debug.log file</translation>\n     </message>\n@@ -4391,7 +4388,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+6\"/>\n+        <source>Upgrade wallet to latest format on startup</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Username for JSON-RPC connections</translation>\n     </message>\n@@ -4415,18 +4417,13 @@\n         <source>ZeroMQ notification options:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>on startup</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location line=\"-65\"/>\n+        <location line=\"-64\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n@@ -4436,17 +4433,7 @@\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+246\"/>\n-        <source>Upgrade wallet to latest format</source>\n-        <translation>Upgrade wallet to latest format</translation>\n-    </message>\n-    <message>\n-        <location line=\"-39\"/>\n-        <source>Rescan the block chain for missing wallet transactions</source>\n-        <translation>Rescan the block chain for missing wallet transactions</translation>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+232\"/>\n         <source>This help message</source>\n         <translation>This help message</translation>\n     </message>"
      },
      {
        "sha": "b969075e0aa39c724200e9668a414aa63729d6d2",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 25,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"eo\" version=\"2.0\">\n+<TS language=\"eo\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -208,6 +208,9 @@\n         <translation>Vi sukcese s\u0302ang\u0302is la pasfrazon de la monujo.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1444,10 +1447,6 @@\n         <source>Copy change</source>\n         <translation>Kopii restmonon</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Totala Sumo %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>a\u016d</translation>\n@@ -2102,10 +2101,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Ruli fone kiel demono kaj akcepti komandojn</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Uzi la test-reton</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Akcepti konektojn el ekstere (defau\u0306lte: 1 se ne estas -proxy nek -connect)</translation>\n@@ -2122,10 +2117,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Tiu c\u0302i estas antau\u0306eldona testa versio - uzu la\u016d via propra risko - ne uzu por minado au\u0306 por aplikaj\u0302oj por vendistoj</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Averto: -paytxfee estas agordita per tre alta valoro! Tio estas la krompago, kion vi pagos se vi sendas la transakcion.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Averto: La reto ne tute konsentas! Kelkaj minantoj \u015dajne spertas problemojn aktuale.</translation>\n@@ -2134,10 +2125,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Averto: \u015dajne ni ne tute konsentas kun niaj samtavolanoj! Eble vi devas \u011disdatigi vian klienton, a\u016d eble aliaj nodoj faru same.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Averto: okazis eraro dum lego de wallet.dat! C\u0302iuj s\u0302losiloj sukcese legig\u0302is, sed la transakciaj datumoj au\u0306 la adresaro eble mankas au\u0306 malg\u0302ustas.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Averto: via wallet.dat estas difektita, sed la datumoj sukcese savig\u0302is! La originala wallet.dat estas nun konservita kiel wallet.{timestamp}.bak en %s; se via saldo au\u0306 transakcioj estas malg\u0302ustaj vi devus restau\u0306ri per alia sekurkopio.</translation>\n@@ -2290,10 +2277,6 @@\n         <source>Transaction too large</source>\n         <translation>Transakcio estas tro granda</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Uzi UPnP por mapi la au\u0306skultan pordon (defau\u0306lte: 1 dum au\u0306skultado)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Salutnomo por konektoj JSON-RPC</translation>\n@@ -2322,10 +2305,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Reskani la blokc\u0302enon por mankantaj monujaj transakcioj</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Uzi OpenSSL (https) por konektoj JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Tiu c\u0302i helpmesag\u0302o</translation>"
      },
      {
        "sha": "91b0d79e30fab6313c26f23cfcddef3b36148261",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 24,
        "deletions": 151,
        "changes": 175,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es\" version=\"2.0\">\n+<TS language=\"es\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -216,6 +216,9 @@\n         <translation>Se ha cambiado correctamente la contrase\u00f1a del monedero.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1282,10 +1285,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>La petici\u00f3n de pago %1 es demasiado grande (%2 bytes, permitidos %3 bytes).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation> Solicitud pago de protecci\u00f3n DoS</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Error en la comunicaci\u00f3n con %1: %2</translation>\n@@ -1474,14 +1473,6 @@\n         <source>Services</source>\n         <translation>Servicios</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Altura de comienzo</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Altura de sincronizaci\u00f3n</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Puntuaci\u00f3n de bloqueo</translation>\n@@ -1603,12 +1594,16 @@\n         <translation>Saliente</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Desconocido</translation>\n+        <source>Yes</source>\n+        <translation>S\u00ed</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Adquiriendo....</translation>\n+        <source>No</source>\n+        <translation>No</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Desconocido</translation>\n     </message>\n </context>\n <context>\n@@ -1974,10 +1969,6 @@\n         <source>Copy change</source>\n         <translation>Copiar Cambio</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Cuant\u00eda Total %1 (=%2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -2014,6 +2005,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Paga s\u00f3lo la cuota m\u00ednima de %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>Monto Total %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>La direcci\u00f3n del destinatario no es v\u00e1lida. Por favor, compru\u00e9bela de nuevo.</translation>\n@@ -2795,13 +2790,16 @@\n </translation>\n     </message>\n     <message>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Ejecutar en segundo plano como daemon y aceptar comandos\n-</translation>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Un error interno fatal ocurri\u00f3, ver debug.log para detalles</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>Poda blockstore ...</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Usar la red de pruebas\n+        <source>Run in the background as a daemon and accept commands</source>\n+        <translation>Ejecutar en segundo plano como daemon y aceptar comandos\n </translation>\n     </message>\n     <message>\n@@ -2824,14 +2822,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Ejecutar comando cuando una transacci\u00f3n del monedero cambia (%s en cmd se remplazar\u00e1 por TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Maximo Comisi\u00f3n totales para usar en una sola transacci\u00f3n billetera; establecer esta demasiado bajo puede abortar transacciones grandes (por defecto: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Reducir los requerimientos de almacenamiento mediante la poda (borrado) bloquea viejos. Este modo desactiva el apoyo cartera y es incompatible con -txindex. Advertencia: Revertir esta configuraci\u00f3n requiere volver a descargar toda la blockchain. (por defecto: 0 = desactivar bloques de poda, &gt;%u = tama\u00f1o de destino en MiB de usar para los archivos de bloques)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Establecer el n\u00famero de hilos (threads) de verificaci\u00f3n de scripts (entre %u y %d, 0 = autom\u00e1tico, &lt;0 = dejar libres ese n\u00famero de n\u00facleos; predeterminado: %d)</translation>\n@@ -2852,10 +2842,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>ADVERTENCIA: comprueba tu conexi\u00f3n de red, %d bloques recibidos en las \u00faltimas %d horas (%d esperados)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Aviso: \u00a1-paytxfee tiene un valor muy alto! Esta es la comisi\u00f3n que pagar\u00e1 si env\u00eda una transacci\u00f3n.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Atenci\u00f3n: \u00a1Parece que la red no est\u00e1 totalmente de acuerdo! Algunos mineros est\u00e1n presentando inconvenientes.</translation>\n@@ -2864,10 +2850,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Atenci\u00f3n: \u00a1Parece que no estamos completamente de acuerdo con nuestros pares! Podr\u00eda necesitar una actualizaci\u00f3n, u otros nodos podr\u00edan necesitarla.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Aviso: \u00a1Error al leer wallet.dat! Todas las claves se han le\u00eddo correctamente, pero podr\u00edan faltar o ser incorrectos los datos de transacciones o las entradas de la libreta de direcciones.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aviso: \u00a1Recuperados datos de wallet.dat corrupto! El wallet.dat original se ha guardado como wallet.{timestamp}.bak en %s; si hubiera errores en su saldo o transacciones, deber\u00e1 restaurar una copia de seguridad.</translation>\n@@ -2932,10 +2914,6 @@\n         <source>Error opening block database</source>\n         <translation>Error al abrir base de datos de bloques.</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Error: un error grave interno ocurri\u00f3, sea debug.log para m\u00e1s detalles.</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Error: \u00a1Espacio en disco bajo!</translation>\n@@ -2944,10 +2922,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Ha fallado la escucha en todos los puertos. Use -listen=0 si desea esto.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Si no se proporciona &lt;category&gt;, mostrar toda la depuraci\u00f3n</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importando...</translation>\n@@ -3024,10 +2998,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Permitir conexiones JSON-RPC de origen especificado. V\u00e1lido para son una sola IP (por ejemplo 1.2.3.4), una red/m\u00e1scara de red (por ejemplo 1.2.3.4/255.255.255.0) o una red/CIDR (e.g. 1.2.3.4/24). Esta opci\u00f3n se puede especificar varias veces</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Ocurri\u00f3 un error al configurar la direcci\u00f3n de RPC %s puerto %u para escuchar en: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Ligar a las direcciones especificadas y poner en lista blanca a los equipos conectados a ellas. Usar la notaci\u00f3n para IPv6 [host]:puerto.</translation>\n@@ -3052,18 +3022,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Error: la escucha para conexiones entrantes fall\u00f3 (la escucha regres\u00f3 el error %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Error: Unsupported argumento -socks encontrados. SOCKS versi\u00f3n ajuste ya no es posible, s\u00f3lo SOCKS5 proxies son compatibles.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Ejecutar un comando cuando se reciba una alerta importante o cuando veamos un fork demasiado largo (%s en cmd se reemplazar\u00e1 por el mensaje)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Tarifas (en BTC/Kb) m\u00e1s peque\u00f1os que esto se consideran cero cuota de reinstalaci\u00f3n (por defecto: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si el pago de comisi\u00f3n no est\u00e1 establecido, incluir la cuota suficiente para que las transacciones comiencen la confirmaci\u00f3n en una media de n bloques ( por defecto :%u)</translation>\n@@ -3072,10 +3034,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>El tama\u00f1o m\u00e1ximo de los datos en las operaciones de transporte de datos que transmitimos y el mio (default: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Pode configurado por debajo del m\u00ednimo de %d MB. Por favor, use un n\u00famero m\u00e1s alto.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Consulta de direcciones pares mediante b\u00fasqueda de DNS, si bajo en direcciones (por defecto: 1 a menos que - conectar)</translation>\n@@ -3100,38 +3058,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Este producto incluye software desarrollado por el OpenSSL Project para su uso en OpenSSL Toolkit &lt;https://www.openssl.org/&gt;, software de cifrado escrito por Eric Young y software UPnP escrito por Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Para utilizar bitcoind, o la -opci\u00f3n servidor a bitcoin-qt, debes establecer una rpcpassword en el fichero de configuraci\u00f3n:\n-%s\n-Se recomienda utilizar la siguiente contrase\u00f1a aleatoria:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(no es necesario que recuerdes esta contrase\u00f1a)\n-El nombre de usuario y contrase\u00f1a NO DEBEN ser la misma.\n-Si no existe el archivo, crearlo con los permisos de archivos de propietarios de -s\u00f3lo lectura-.\n-Tambi\u00e9n se recomienda establecer una notificaci\u00f3n de alerta para ser notificado de problemas;\n-por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Advertencia: \u00a1-maxtxfee se establece muy alta! Esta gran tarifa podr\u00eda ser pagada en una sola transacci\u00f3n .</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Aviso: \u00a1Comprueba la fecha y hora de tu ordenador y verifica si es correcta! Si no es correcta Bitcoin Core no funcionar\u00e1 adecuadamente.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>A los equipos en lista blanca no se les pueden prohibir los ataques DoS y sus transacciones siempre son retransmitidas, incluso si ya est\u00e1n en el mempool, es \u00fatil por ejemplo para un gateway.</translation>\n@@ -3152,10 +3078,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Activando la mejor cadena...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>No se puede ejecutar con un monedero en modo recorte.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>No se puede resolver -whitebind address: '%s'</translation>\n@@ -3172,10 +3094,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i The Bitcoin Core Developers</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>No se pudo analizar -rpcbind valor%s como direcci\u00f3n de red</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Error al cargar wallet.dat: El monedero requiere una versi\u00f3n m\u00e1s reciente de Bitcoin Core</translation>\n@@ -3184,14 +3102,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>Error al leer la base de datos, cerrando.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Error: Argumento encontrado -tor no soportado, utilice -onion</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Cuota (in BTC/kB) para a\u00f1adir a las transacciones que env\u00edes (por defecto: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informaci\u00f3n</translation>\n@@ -3232,18 +3142,10 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Node relay options:</source>\n         <translation>Opciones de nodos de retransmisi\u00f3n:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Opciones SSL de RPC: (v\u00e9ase la wiki de Bitcoin para las instrucciones de instalaci\u00f3n de SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Opciones de servidor RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Soporte RPC para conexiones HTTP persistentes (por defecto: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Reconstruir el \u00edndice de la cadena de bloques en el arranque desde los actuales ficheros blk000??.dat</translation>\n@@ -3320,10 +3222,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No es posible conectar con %s en este sistema (bind ha dado el error %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Usar UPnP para asignar el puerto de escucha (predeterminado: 1 al escuchar)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nombre de usuario para las conexiones JSON-RPC\n@@ -3337,14 +3235,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Warning</source>\n         <translation>Aviso</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Advertencia: Argumento no soportado -benchmark ignored, use -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Aviso: Argumento no sportado -debugnet anticuado, utilice -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Eliminando todas las transacciones del monedero...</translation>\n@@ -3374,11 +3264,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Volver a examinar la cadena de bloques en busca de transacciones del monedero perdidas</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Usar OpenSSL (https) para las conexiones JSON-RPC\n-</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Este mensaje de ayuda\n@@ -3424,10 +3309,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(predeterminado: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Aceptar cifrado (por defecto: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Siempre consultar direcciones de otros equipos por medio de DNS lookup (por defecto: %u)</translation>\n@@ -3488,14 +3369,6 @@ por ejemplo: alertnotify=echo %% s | correo -s \"Alerta Bitcoin\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Archivo de certificado del servidor (por defecto: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Llave privada del servidor (por defecto: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Ajustar el n\u00famero de claves en reserva &lt;n&gt; (predeterminado: %u)</translation>"
      },
      {
        "sha": "e388b5a0cfe5b1b566238c40aa97972a28b415e3",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 19,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es_CL\" version=\"2.0\">\n+<TS language=\"es_CL\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -164,6 +164,9 @@\n         <translation>La contrase\u00f1a de billetera ha sido cambiada con \u00e9xito.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1288,15 +1291,6 @@\n         <translation>Correr como demonio y acepta comandos\n </translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Usa la red de pruebas\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Precauci\u00f3n: -paytxfee es muy alta. Esta es la comisi\u00f3n que pagar\u00e1s si envias una transacci\u00f3n.</translation>\n-    </message>\n     <message>\n         <source>Connect only to the specified node(s)</source>\n         <translation>Conecta solo al nodo especificado\n@@ -1327,10 +1321,6 @@\n         <translation>Arranca minimizado\n </translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Intenta usar UPnP para mapear el puerto de escucha (default: 1 when listening)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Usuario para las conexiones JSON-RPC\n@@ -1356,11 +1346,6 @@\n     <message>\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Rescanea la cadena de bloques para transacciones perdidas de la cartera\n-</translation>\n-    </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Usa OpenSSL (https) para las conexiones JSON-RPC\n </translation>\n     </message>\n     <message>"
      },
      {
        "sha": "7a7a6e33f5c1994f40dbae11da1150c989ddbbb8",
        "filename": "src/qt/locale/bitcoin_es_DO.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 35,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es_DO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es_DO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_DO.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es_DO\" version=\"2.0\">\n+<TS language=\"es_DO\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -200,6 +200,9 @@\n         <translation>Se ha cambiado correctamente la contrase\u00f1a del monedero.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1428,10 +1431,6 @@\n         <source>Copy change</source>\n         <translation>Copiar Cambio</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Cuant\u00eda Total %1 (=%2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -2103,11 +2102,6 @@\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Ejecutar en segundo plano como daemon y aceptar comandos\n-</translation>\n-    </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Usar la red de pruebas\n </translation>\n     </message>\n     <message>\n@@ -2126,10 +2120,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Esta es una versi\u00f3n de pre-prueba - util\u00edcela bajo su propio riesgo. No la utilice para usos comerciales o de miner\u00eda.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Aviso: \u00a1-paytxfee tiene un valor muy alto! Esta es la comisi\u00f3n que pagar\u00e1 si env\u00eda una transacci\u00f3n.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Atenci\u00f3n: \u00a1Parece que la red no est\u00e1 totalmente de acuerdo! Algunos mineros est\u00e1n presentando inconvenientes.</translation>\n@@ -2138,10 +2128,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Atenci\u00f3n: \u00a1Parece que no estamos completamente de acuerdo con nuestros pares! Podr\u00eda necesitar una actualizaci\u00f3n, u otros nodos podr\u00edan necesitarla.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Aviso: \u00a1Error al leer wallet.dat! Todas las claves se han le\u00eddo correctamente, pero podr\u00edan faltar o ser incorrectos los datos de transacciones o las entradas de la libreta de direcciones.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aviso: \u00a1Recuperados datos de wallet.dat corrupto! El wallet.dat original se ha guardado como wallet.{timestamp}.bak en %s; si hubiera errores en su saldo o transacciones, deber\u00e1 restaurar una copia de seguridad.</translation>\n@@ -2194,10 +2180,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Ha fallado la escucha en todos los puertos. Use -listen=0 si desea esto.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Si no se proporciona &lt;category&gt;, mostrar toda la depuraci\u00f3n</translation>\n-    </message>\n     <message>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n         <translation>Incorrecto o bloque de g\u00e9nesis no encontrado. Datadir equivocada para la red?</translation>\n@@ -2262,10 +2244,6 @@\n         <source>Invalid amount for -mintxfee=&lt;amount&gt;: '%s'</source>\n         <translation>Inv\u00e1lido por el monto -mintxfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Opciones RPC SSL: (Vea la Wiki de Bitcoin para las instrucciones de la configuraci\u00f3n de SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Opciones del sservidor RPC:</translation>\n@@ -2310,10 +2288,6 @@\n         <source>Transaction too large</source>\n         <translation>Transacci\u00f3n demasiado grande</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Usar UPnP para asignar el puerto de escucha (predeterminado: 1 al escuchar)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nombre de usuario para las conexiones JSON-RPC\n@@ -2348,11 +2322,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Volver a examinar la cadena de bloques en busca de transacciones del monedero perdidas</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Usar OpenSSL (https) para las conexiones JSON-RPC\n-</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Este mensaje de ayuda"
      },
      {
        "sha": "1075fb08bb3695b13f207ee7ca8d70f41645c06c",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es_MX\" version=\"2.0\">\n+<TS language=\"es_MX\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -192,6 +192,9 @@\n         <translation>La contrase\u00f1a de la cartera ha sido exitosamente cambiada.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -672,10 +675,6 @@\n         <source>Copy change</source>\n         <translation>copiar cambio</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Monto total %1(=%2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>"
      },
      {
        "sha": "5029333b5be4a4331ca8b2529950306b9ac49d30",
        "filename": "src/qt/locale/bitcoin_es_UY.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es_UY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_es_UY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_UY.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"es_UY\" version=\"2.0\">\n+<TS language=\"es_UY\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -104,6 +104,9 @@\n         <translation>Fallo en el descifrado del monedero</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>"
      },
      {
        "sha": "d2f98a987625f5aaadc413ccc678fbc976099e3e",
        "filename": "src/qt/locale/bitcoin_et.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 21,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_et.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_et.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"et\" version=\"2.0\">\n+<TS language=\"et\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -176,6 +176,9 @@\n         <translation>Rahakoti salafraasi muutmine \u00f5nnestus.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1656,10 +1659,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>T\u00f6\u00f6ta taustal ning aktsepteeri k\u00e4sklusi</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Testv\u00f5rgu kasutamine</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Luba v\u00e4lis\u00fchendusi (vaikev\u00e4\u00e4rtus: 1 kui puudub -proxy v\u00f5i -connect)</translation>\n@@ -1676,14 +1675,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>See on test-versioon - kasutamine omal riisikol - \u00e4ra kasuta mining'uks ega kaupmeeste programmides</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Hoiatus: -paytxfee on seatud v\u00e4ga k\u00f5rgeks! See on sinu poolt makstav tehingu lisatasu.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Hoiatus: ilmnes t\u00f5rge wallet.dat faili lugemisel! V\u00f5tmed on terved, kuid tehingu andmed v\u00f5i aadressiraamatu kirjed v\u00f5ivad olla kadunud v\u00f5i vigased.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Hoiatus: toimus wallet.dat faili andmete p\u00e4\u00e4stmine! Originaal wallet.dat nimetati kaustas %s \u00fcmber wallet.{ajatempel}.bak'iks, j\u00e4\u00e4gi v\u00f5i tehingute ebak\u00f5lade puhul tuleks teha backup'ist taastamine.</translation>\n@@ -1796,10 +1787,6 @@\n         <source>UI Options:</source>\n         <translation>UI Valikud:</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Kasuta kuulatava pordi m\u00e4\u00e4ramiseks UPnP \u00fchendust (vaikev\u00e4\u00e4rtus: 1, kui kuulatakse)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>JSON-RPC \u00fchenduste kasutajatunnus</translation>\n@@ -1832,10 +1819,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Otsi ploki jadast rahakoti kadunud tehinguid</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Kasuta JSON-RPC \u00fchenduste jaoks OpenSSL'i (https)</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>K\u00e4esolev abitekst</translation>"
      },
      {
        "sha": "4da6cc0dce9a624be4c822a9195e363f807a0d77",
        "filename": "src/qt/locale/bitcoin_eu_ES.ts",
        "status": "modified",
        "additions": 117,
        "deletions": 2,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_eu_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_eu_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eu_ES.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,23 +1,103 @@\n-<TS language=\"eu_ES\" version=\"2.0\">\n+<TS language=\"eu_ES\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>Eskuin-klika helbidea edo etiketa editatzeko</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Sortu helbide berria</translation>\n     </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>&amp;Berria</translation>\n+    </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>Kopiatu hautatutako helbidea sistemaren arbelera</translation>\n     </message>\n+    <message>\n+        <source>&amp;Copy</source>\n+        <translation>&amp;Kopiatu</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>&amp;Itxi</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopiatu helbidea</translation>\n+    </message>\n+    <message>\n+        <source>Delete the currently selected address from the list</source>\n+        <translation>Ezabatu aukeratutako helbideak listatik</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Esportatu datuak uneko fitxategian</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Esportatu</translation>\n+    </message>\n     <message>\n         <source>&amp;Delete</source>\n         <translation>&amp;Ezabatu</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Aukeratu helbidea txanponak bidaltzeko</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Aukeratu helbidea txanponak jasotzeko</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;Aukeratu</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Helbideak bidaltzen</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Helbideak jasotzen</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Hauek dira zure Bitcoin helbideak dirua bidaltzeko. Beti egiaztatu diru-kantitatea eta jasotzeko helbidea bidali baino lehen.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Hauek dira zure Bitcoin helbideak dirua jasotzeko. Gomendagarria da erabiltzea jasotzeko helbide berri bat operazio bakoitzeko.</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopiatu &amp;Etiketa</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Editatu</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Esportatu helbide lista</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Komaz bereizitako artxiboa (*.csv)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Esportatua okerra</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Errakuntza bat egon da gordetzen %1 helbide listan. Mesedez, saiatu berriro.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -35,6 +115,10 @@\n </context>\n <context>\n     <name>AskPassphraseDialog</name>\n+    <message>\n+        <source>Passphrase Dialog</source>\n+        <translation>Pasahitza dialogoa</translation>\n+    </message>\n     <message>\n         <source>Enter passphrase</source>\n         <translation>Sartu pasahitza</translation>\n@@ -75,6 +159,22 @@\n         <source>Confirm wallet encryption</source>\n         <translation>Berretsi zorroaren enkriptazioa</translation>\n     </message>\n+    <message>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <translation>Abisua: Zuk enkriptatzen baduzu zure diruzorroa eta zure pasahitza galtzen baduzu, &lt;b&gt;BITCOIN GUZTIAK GALDUKO DITUZU&lt;/b&gt;!</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>Seguru zaude nahi duzula zure diruzorroa enkriptatu?</translation>\n+    </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Bitcoin Core orain itxiko da enkriptazio prozezua amaitzeko. Gogoratu enkriptatzean zure diruzorroa ez duzula guztiz babesten zure Bitcoinak lapurretatik infektatzen zure ordenagailua Malwareekin.</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>GARRANTZITSUA: Aurreko seguritate-kopiak ordeztuko dire berriekin, enkriptatutak. Segurtasun arrazoigaitik, aurreko kopiak ezin dira erabili hasiko zarenean zure diruzorro enkriptatu berriarekin.</translation>\n+    </message>\n     <message>\n         <source>Wallet encrypted</source>\n         <translation>Zorroa enkriptatuta</translation>\n@@ -104,6 +204,9 @@\n         <translation>Zorroaren desenkriptazioak huts egin du</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -627,6 +730,10 @@\n         <source>Copy label</source>\n         <translation>Kopiatu etiketa</translation>\n     </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Esportatua okerra</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Komaz bereizitako artxiboa (*.csv)</translation>\n@@ -663,6 +770,14 @@\n </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Esportatu</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Esportatu datuak uneko fitxategian</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "05f8fc6251ea02eba8504072bf9354a15dc34719",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 5,
        "deletions": 26,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fa\" version=\"2.0\">\n+<TS language=\"fa\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -216,6 +216,9 @@\n         <translation>\u06af\u0630\u0631\u0648\u0627\u0698\u0647\u0654 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u0639\u0648\u0636 \u0634\u062f.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1060,7 +1063,7 @@\n         <source>Unknown</source>\n         <translation>\u0646\u0627\u0634\u0646\u0627\u062e\u062a\u0647</translation>\n     </message>\n-    </context>\n+</context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n@@ -1850,10 +1853,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u0627\u062c\u0631\u0627 \u062f\u0631 \u067e\u0634\u062a \u0632\u0645\u06cc\u0646\u0647 \u0628\u0647\u200c\u0635\u0648\u0631\u062a \u06cc\u06a9 \u0633\u0631\u0648\u06cc\u0633 \u0648 \u067e\u0630\u06cc\u0631\u0634 \u062f\u0633\u062a\u0648\u0631\u0627\u062a</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0634\u0628\u06a9\u0647\u0654 \u0622\u0632\u0645\u0627\u06cc\u0634</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>\u067e\u0630\u06cc\u0631\u0634 \u0627\u062a\u0635\u0627\u0644\u0627\u062a \u0627\u0632 \u0628\u06cc\u0631\u0648\u0646 (\u067e\u06cc\u0634 \u0641\u0631\u0636:1 \u0628\u062f\u0648\u0646 \u067e\u0631\u0627\u06a9\u0633\u06cc \u06cc\u0627 \u0627\u062a\u0635\u0627\u0644)</translation>\n@@ -1870,10 +1869,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u0627\u06cc\u0646 \u06cc\u06a9 \u0646\u0633\u062e\u0647 \u06cc \u0622\u0632\u0645\u0627\u06cc\u0634\u06cc \u0627\u0633\u062a - \u0628\u0627 \u0645\u0633\u0626\u0648\u0644\u06cc\u062a \u062e\u0648\u062f\u062a\u0627\u0646 \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f -  \u0622\u0646 \u0631\u0627 \u062f\u0631 \u0645\u0639\u062f\u0646 \u0648 \u0628\u0627\u0632\u0631\u06af\u0627\u0646\u06cc \u0628\u06a9\u0627\u0631 \u0646\u06af\u06cc\u0631\u06cc\u062f.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u0647\u0634\u062f\u0627\u0631: \u0645\u0628\u0644\u063a paytxfee \u0628\u0633\u06cc\u0627\u0631 \u0628\u0627\u0644\u0627\u06cc\u06cc \u062a\u0646\u0638\u06cc\u0645 \u0634\u062f\u0647 \u0627\u0633\u062a! \u0627\u06cc\u0646 \u0645\u0628\u0644\u063a \u0647\u0632\u06cc\u0646\u0647\u200c\u0627\u06cc \u0627\u0633\u062a \u06a9\u0647 \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u067e\u0631\u062f\u0627\u062e\u062a \u0645\u06cc\u200c\u06a9\u0646\u06cc\u062f.</translation>\n-    </message>\n     <message>\n         <source>Block creation options:</source>\n         <translation>\u0628\u0633\u062a\u0646 \u06af\u0632\u06cc\u0646\u0647 \u0627\u06cc\u062c\u0627\u062f</translation>\n@@ -1902,10 +1897,6 @@\n         <source>Error opening block database</source>\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u0628\u0627\u0632\u06af\u0634\u0627\u06cc\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647 \u062f\u0627\u062f\u0647 \u06cc \u0628\u0644\u0648\u06a9</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>\u062e\u0637\u0627: \u06cc\u06a9 \u062e\u0637\u0627\u06cc \u062f\u0627\u062e\u0644\u06cc \u0645\u0647\u0644\u06a9 \u0631\u0648\u06cc \u062f\u0627\u062f\u060c debug.log \u0631\u0627 \u0628\u0631\u0627\u06cc \u062c\u0632\u0626\u06cc\u0627\u062a \u0628\u0628\u06cc\u0646\u06cc\u062f</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>\u062e\u0637\u0627: \u0641\u0636\u0627\u06cc \u062f\u06cc\u0633\u06a9 \u06a9\u0645 \u0627\u0633\u062a!</translation>\n@@ -1926,10 +1917,6 @@\n         <source>Verifying wallet...</source>\n         <translation>\u062f\u0631 \u062d\u0627\u0644 \u0628\u0627\u0632\u0628\u06cc\u0646\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644...</translation>\n     </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>\u0647\u0634\u062f\u0627\u0631: \u062a\u0627\u0631\u06cc\u062e \u0648 \u0633\u0627\u0639\u062a \u06a9\u0627\u0645\u067e\u06cc\u0648\u062a\u0631 \u062e\u0648\u062f \u0631\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f. \u0627\u06af\u0631 \u0633\u0627\u0639\u062a \u062f\u0631\u0633\u062a \u0646\u0628\u0627\u0634\u062f \u0647\u0633\u062a\u0647 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646 \u0628\u0647 \u062f\u0631\u0633\u062a\u06cc \u06a9\u0627\u0631 \u0646\u062e\u0648\u0627\u0647\u062f \u06a9\u0631\u062f.</translation>\n-    </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n         <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u0645\u0633\u06cc\u0631 \u062f\u0627\u062f\u0647\u200c\u0647\u0627 \u062f\u0631 \u0627\u0628\u062a\u062f\u0627\u06cc \u0627\u062c\u0631\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647 (\u067e\u06cc\u0634\u200c\u0641\u0631\u0636: 0)</translation>\n@@ -1962,10 +1949,6 @@\n         <source>UI Options:</source>\n         <translation>\u06af\u0632\u06cc\u0646\u0647\u200c\u0647\u0627\u06cc \u0631\u0627\u0628\u0637 \u06a9\u0627\u0631\u0628\u0631\u06cc:</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u0627\u0632 UPnP  \u0628\u0631\u0627\u06cc \u0634\u0646\u0627\u0633\u0627\u06cc\u06cc \u062f\u0631\u06af\u0627\u0647 \u0634\u0646\u06cc\u062f\u0627\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636:1 \u062f\u0631 \u0632\u0645\u0627\u0646 \u0634\u0646\u06cc\u062f\u0646)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>JSON-RPC \u0634\u0646\u0627\u0633\u0647 \u0628\u0631\u0627\u06cc \u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a</translation>\n@@ -1990,10 +1973,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u0627\u0633\u06a9\u0627\u0646 \u0645\u062c\u062f\u062f \u0632\u0646\u062c\u06cc\u0631 \u0628\u0644\u0648\u06a9\u0647\u0627 \u0628\u0631\u0627\u06cc \u06af\u0645 \u0648\u0627\u0644\u062a \u0645\u0639\u0627\u0645\u0644\u0647</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>JSON-RPC\u0628\u0631\u0627\u06cc \u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a   \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f OpenSSL (https)</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u067e\u06cc\u0627\u0645 \u06a9\u0645\u06a9\u06cc</translation>"
      },
      {
        "sha": "6c16fc6f1fca90d3353be046255b58809d15357d",
        "filename": "src/qt/locale/bitcoin_fa_IR.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fa_IR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fa_IR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa_IR.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fa_IR\" version=\"2.0\">\n+<TS language=\"fa_IR\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -188,6 +188,9 @@\n         <translation>\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u062a\u063a\u06cc\u06cc\u0631 \u06a9\u0631\u062f.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -992,10 +995,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u0628\u0647 \u0639\u0646\u0648\u0627\u0646 daemon \u0628\u06a9 \u06af\u0631\u0627\u0646\u062f \u0631\u0627 \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0648 \u062f\u0633\u062a\u0648\u0631\u0627\u062a \u0631\u0627 \u0642\u0628\u0648\u0644 \u0646\u0645\u0627\u06cc\u06cc\u062f</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u0627\u0632 \u062a\u0633\u062a\u0650 \u0634\u0628\u06a9\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u0645\u0627\u06cc\u06cc\u062f</translation>\n-    </message>\n     <message>\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation>\u0645\u0628\u0644\u063a \u062a\u0631\u0627\u06a9\u0646\u0634 \u06a9\u0645\u062a\u0631 \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a \u06a9\u0647 \u067e\u0633 \u0627\u0632 \u06a9\u0633\u0631 \u0647\u0632\u06cc\u0646\u0647  \u062a\u0631\u0627\u06a9\u0646\u0634 \u0642\u0627\u0628\u0644 \u0627\u0631\u0633\u0627\u0644 \u0628\u0627\u0634\u062f</translation>\n@@ -1032,10 +1031,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u0632\u0646\u062c\u06cc\u0631\u0647 \u0628\u0644\u0627\u06a9 \u0631\u0627 \u0628\u0631\u0627\u06cc \u062a\u0631\u0627\u06a9\u0646\u0634 \u062c\u0627 \u0627\u0641\u062a\u0627\u062f\u0647 \u062f\u0631 WALLET \u062f\u0648\u0628\u0627\u0631\u0647 \u0627\u0633\u06a9\u0646 \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u0628\u0631\u0627\u06cc \u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a\u0650 JSON-RPC  \u0627\u0632 OpenSSL (https) \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u0627\u06cc\u0646 \u067e\u06cc\u0627\u0645 \u0631\u0627\u0647\u0646\u0645\u0627</translation>"
      },
      {
        "sha": "8cf6d01653ee90abd2d67862768dabfd869a8701",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 73,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fi\" version=\"2.0\">\n+<TS language=\"fi\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>Lompakon tunnuslause vaihdettiin onnistuneesti.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1278,10 +1281,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Maksupyynt\u00f6 %1 on liian suuri (%2 tavua, sallittu %3 tavua).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Maksupyynn\u00f6n DoS-suojaus</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Virhe kommunikoidessa %1n kanssa: %2</translation>\n@@ -1466,14 +1465,6 @@\n         <source>Services</source>\n         <translation>Palvelut</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Aloituskorkeus</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Synkronointikorkeus</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Panna-pisteytys</translation>\n@@ -1595,12 +1586,16 @@\n         <translation>Ulosmenev\u00e4</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Tuntematon</translation>\n+        <source>Yes</source>\n+        <translation>Kyll\u00e4</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Hankitaan...</translation>\n+        <source>No</source>\n+        <translation>Ei</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Tuntematon</translation>\n     </message>\n </context>\n <context>\n@@ -1954,10 +1949,6 @@\n         <source>Copy change</source>\n         <translation>Kopioi vaihtoraha</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Yhteens\u00e4 %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>tai</translation>\n@@ -2756,10 +2747,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Aja taustalla daemonina ja hyv\u00e4ksy komennot</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>K\u00e4yt\u00e4 test -verkkoa</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Hyv\u00e4ksy yhteyksi\u00e4 ulkopuolelta (vakioasetus: 1 jos -proxy tai -connect ei m\u00e4\u00e4ritelty)</translation>\n@@ -2784,10 +2771,6 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Ei voida yhdist\u00e4\u00e4 %s t\u00e4ss\u00e4 tietokoneessa. Bitcoin Core on luultavasti jo k\u00e4ynniss\u00e4.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Varoitus: -paytxfee on asetettu eritt\u00e4in korkeaksi! T\u00e4m\u00e4 on maksukulu jonka tulet maksamaan kun l\u00e4het\u00e4t siirron.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Varoitus: Tietoverkko ei ole sovussa! Luohijat n\u00e4ytt\u00e4v\u00e4t kokevan virhetilanteita.</translation>\n@@ -2796,10 +2779,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Varoitus: Olemme vertaisverkon kanssa ristiriidassa! Sinun tulee p\u00e4ivitt\u00e4\u00e4 tai toisten solmujen tulee p\u00e4ivit\u00e4\u00e4.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Varoitus: virhe luettaessa wallet.dat-lompakkotiedostoa. Kaikki avaimet luettiin onnistuneesti, mutta siirtohistoria tai osoitekirja saattavat olla kadonneet tai virheellisi\u00e4.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Varoitus: wallet.dat -lompakkotiedosto on korruptoitunut, tiedot pelastettu. Alkuper\u00e4inen wallet.dat -lompakkotiedosto on tallennettu wallet.{timestamp}.bak kansioon %s; jos balanssisi tai siirtohistoria on virheellinen, sinun tulisi palauttaa lompakkotiedosto varmuuskopiosta.</translation>\n@@ -2860,10 +2839,6 @@\n         <source>Error opening block database</source>\n         <translation>Virhe avattaessa lohkoindeksi\u00e4</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Virhe: Sis\u00e4inen kriittinen virhe kohdattiin, katso debug.log:sta lis\u00e4tietoja</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Varoitus: Levytila on v\u00e4hiss\u00e4!</translation>\n@@ -2872,10 +2847,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Ei onnistuttu kuuntelemaan miss\u00e4\u00e4n portissa. K\u00e4yt\u00e4 -listen=0 jos haluat t\u00e4t\u00e4.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Jos &lt;kategoria&gt; ei annettu, tulosta kaikki debuggaustieto.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Tuodaan...</translation>\n@@ -2972,10 +2943,6 @@\n         <source>Activating best chain...</source>\n         <translation>Aktivoidaan parhainta ketjua...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>Lompakkoa ei voida ajaa karsitussa tilassa.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>-whitebind -osoitetta '%s' ei voida j\u00e4sent\u00e4\u00e4</translation>\n@@ -3016,18 +2983,10 @@\n         <source>Node relay options:</source>\n         <translation>V\u00e4lityssolmukohdan asetukset:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL valinnat: (katso Bitcoin Wikist\u00e4 SSL-asennuksen ohjeet)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC-palvelimen valinnat:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC-tuki pysyville HTTP-yhteyksille (oletus: %d)</translation>\n-    </message>\n     <message>\n         <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation>Vastaanota ja n\u00e4yt\u00e4 P2P-verkon h\u00e4lytyksi\u00e4 (oletus: %u)</translation>\n@@ -3084,10 +3043,6 @@\n         <source>UI Options:</source>\n         <translation>Ulkoasun asetukset:</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>K\u00e4yt\u00e4 UPnP:t\u00e4 kuunneltavan portin avaamiseen (vakioasetus: 1 kun kuuntelemassa)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>K\u00e4ytt\u00e4j\u00e4tunnus JSON-RPC-yhteyksille</translation>\n@@ -3128,10 +3083,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Skannaa uudelleen lohkoketju lompakon puuttuvien rahasiirtojen vuoksi</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>K\u00e4yt\u00e4 OpenSSL:\u00e4\u00e4 (https) JSON-RPC-yhteyksille</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>T\u00e4m\u00e4 ohjeviesti</translation>\n@@ -3156,10 +3107,6 @@\n         <source>(default: %s)</source>\n         <translation>(oletus: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Hyv\u00e4ksytt\u00e4v\u00e4t salaukset (oletus: %s)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Virhe ladattaessa wallet.dat-tiedostoa</translation>\n@@ -3192,14 +3139,6 @@\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>V\u00e4lit\u00e4 ei-P2SH-multisig (oletus: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Palvelimen sertifikaattitiedosto (oletus: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Palvelimen private key (oletus: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Aseta avainaltaan kooksi &lt;n&gt; (oletus: %u)</translation>"
      },
      {
        "sha": "a2799f99fc61a06e62e29355e503b2111cd991bb",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 141,
        "changes": 161,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fr\" version=\"2.0\">\n+<TS language=\"fr\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>La phrase de passe du portefeuille a \u00e9t\u00e9 modifi\u00e9e avec succ\u00e8s.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1278,10 +1281,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>La demande de paiement %1 est trop grande (%2 octets, %3 octets permis).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Protection DdS des demandes de paiement</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Erreur de communication avec %1 : %2</translation>\n@@ -1470,14 +1469,6 @@\n         <source>Services</source>\n         <translation>Services</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Hauteur de d\u00e9marrage</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Hauteur de synchro</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Pointage des bannissements</translation>\n@@ -1599,12 +1590,16 @@\n         <translation>Sortant</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Inconnu</translation>\n+        <source>Yes</source>\n+        <translation>Oui</translation>\n+    </message>\n+    <message>\n+        <source>No</source>\n+        <translation>Non</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>R\u00e9cup\u00e9ration...</translation>\n+        <source>Unknown</source>\n+        <translation>Inconnu</translation>\n     </message>\n </context>\n <context>\n@@ -1970,10 +1965,6 @@\n         <source>Copy change</source>\n         <translation>Copier la monnaie</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Montant total %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>ou</translation>\n@@ -2014,6 +2005,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Payer seulement les frais minimum de %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>Montant total %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>L'adresse du destinataire est invalide. Veuillez la v\u00e9rifier.</translation>\n@@ -2793,12 +2788,12 @@\n         <translation>Accepter les commandes de JSON-RPC et de la ligne de commande</translation>\n     </message>\n     <message>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Fonctionner en arri\u00e8re-plan en tant que d\u00e9mon et accepter les commandes</translation>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Erreur : une erreur interne fatale s'est produite. Voir debug.log pour plus de d\u00e9tails</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Utiliser le r\u00e9seau de test</translation>\n+        <source>Run in the background as a daemon and accept commands</source>\n+        <translation>Fonctionner en arri\u00e8re-plan en tant que d\u00e9mon et accepter les commandes</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2820,14 +2815,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Ex\u00e9cuter la commande lorsqu'une transaction de portefeuille change (%s dans la commande est remplac\u00e9e par TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Total maximal des frais \u00e0 utiliser en une seule transaction de portefeuille. Le d\u00e9finir trop bas pourrait interrompre les grosses transactions (par d\u00e9faut : %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>R\u00e9duire les exigences de stockage en \u00e9laguant (supprimant) les anciens blocs. Ce mode d\u00e9sactive la prise en charge de portefeuilles et n'est pas compatible avec -txindex. Avertissement : configurer ce param\u00e8tre \u00e0 sa valeur ant\u00e9rieure ret\u00e9l\u00e9chargera compl\u00e8tement la cha\u00eene de blocs (par d\u00e9faut : 0 = d\u00e9sactiver l'\u00e9lagage des blocs, &gt;%u = taille cible en Mo \u00e0 utiliser pour les fichiers de blocs).</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>D\u00e9finir le nombre d'ex\u00e9trons de v\u00e9rification des scripts (%u \u00e0 %d, 0 = auto, &lt; 0 = laisser ce nombre de c\u0153urs inutilis\u00e9s, par d\u00e9faut : %d)</translation>\n@@ -2848,10 +2835,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>AVERTISSEMENT : v\u00e9rifiez votre connexion r\u00e9seau, %d blocs re\u00e7us durant les %d derni\u00e8res heures (%d attendus)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Avertissement : -paytxfee est r\u00e9gl\u00e9 sur un montant tr\u00e8s \u00e9lev\u00e9 ! Il s'agit des frais de transaction que vous payerez si vous envoyez une transaction.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Avertissement : le r\u00e9seau ne semble pas totalement d'accord ! Quelques mineurs semblent \u00e9prouver des difficult\u00e9s.</translation>\n@@ -2860,10 +2843,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Avertissement : nous ne semblons pas \u00eatre en accord complet avec nos pairs ! Vous pourriez avoir besoin d'effectuer une mise \u00e0 niveau, ou d'autres n\u0153uds du r\u00e9seau pourraient avoir besoin d'effectuer une mise \u00e0 niveau.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Avertissement : une erreur est survenue lors de la lecture de wallet.dat ! Toutes les clefs ont \u00e9t\u00e9 lues correctement mais les donn\u00e9es de transaction ou les entr\u00e9es du carnet d'adresses sont peut-\u00eatre incorrectes ou manquantes.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Avertissement : wallet.dat corrompu, donn\u00e9es r\u00e9cup\u00e9r\u00e9es ! Le fichier wallet.dat original a \u00e9t\u00e9 enregistr\u00e9 en tant que wallet.{timestamp}.bak dans %s ; si votre solde ou transactions sont incorrects vous devriez effectuer une restauration depuis une sauvegarde.</translation>\n@@ -2928,10 +2907,6 @@\n         <source>Error opening block database</source>\n         <translation>Erreur lors de l'ouverture de la base de donn\u00e9es des blocs</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Erreur : une erreur interne fatale s'est produite. Voir debug.log pour des d\u00e9tails</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Erreur : l'espace disque est faible !</translation>\n@@ -2940,10 +2915,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u00c9chec de l'\u00e9coute sur un port quelconque. Utilisez -listen=0 si vous voulez ceci.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Si &lt;category&gt; n'est pas indiqu\u00e9, extraire toutes les donn\u00e9es de d\u00e9bogage.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importation...</translation>\n@@ -3020,10 +2991,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Permettre les connexions JSON-RPC de sources sp\u00e9cifiques. Valide pour &lt;ip&gt; qui sont une IP simple (p. ex. 1.2.3.4), un r\u00e9seau/masque r\u00e9seau (p. ex. 1.2.3.4/255.255.255.0) ou un r\u00e9seau/CIDR (p. ex. 1.2.3.4/24). Cette option peut \u00eatre \u00eatre sp\u00e9cifi\u00e9e plusieurs fois</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Une erreur est survenue lors de la mise en place de l'adresse %s port %u d'\u00e9coute RPC  : %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Se lier \u00e0 l'adresse donn\u00e9e et aux pairs s'y connectant. Utiliser la notation [host]:port pour l'IPv6</translation>\n@@ -3048,18 +3015,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Erreur : l'\u00e9coute des connexions entrantes a \u00e9chou\u00e9 (l'\u00e9coute a retourn\u00e9 l'erreur %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Erreur : l'argument non pris en charge -socks a \u00e9t\u00e9 trouv\u00e9. Il n'est plus possible de d\u00e9finir la version de SOCKS, seuls les serveurs mandataires SOCKS5 sont pris en charge.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Ex\u00e9cuter une commande lorsqu'une alerte pertinente est re\u00e7ue ou si nous voyons une bifurcation vraiment \u00e9tendue (%s dans la commande est remplac\u00e9 par le message)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Les frais (en BTC/Ko) inf\u00e9rieurs \u00e0 ce seuil sont consid\u00e9r\u00e9s comme \u00e9tant nuls pour le relayage (par d\u00e9faut : %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Si paytxfee n'est pas d\u00e9fini, inclure suffisamment de frais afin que les transactions commencent la confirmation en moyenne avant n blocs (par d\u00e9faut : %u)</translation>\n@@ -3072,10 +3031,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Quantit\u00e9 maximale de donn\u00e9es dans les transactions du porteur de donn\u00e9es que nous relayons et minons (par d\u00e9faut : %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>L'\u00e9lagage est configur\u00e9 au-dessous du minimum de %d Mo. Veuillez utiliser un nombre plus \u00e9lev\u00e9.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Demander les adresses des pairs par recherche DNS si l'on manque d'adresses (par d\u00e9faut : 1 sauf si -connect)</translation>\n@@ -3100,38 +3055,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Ce produit comprend des logiciels d\u00e9velopp\u00e9s par le projet OpenSSL pour \u00eatre utilis\u00e9s dans la bo\u00eete \u00e0 outils OpenSSL &lt;https://www.openssl.org/&gt; et un logiciel cryptographique \u00e9crit par Eric Young, ainsi qu'un logiciel UPnP \u00e9crit par Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Pour utiliser bitcoind, ou l'option -server de bitcoin-qt, vous devez d\u00e9finir un mot de passe rpc dans le fichier de configuration :\n-%s\n-Il est recommand\u00e9 d'utiliser le mot de passe al\u00e9atoire suivant :\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(vous n'avez pas \u00e0 m\u00e9moriser ce mot de passe)\n-Le nom d'utilisateur et le mot de passe NE DOIVENT PAS \u00eatre identiques.\n-Si le fichier n'existe pas, cr\u00e9ez-le avec la permission lecture-seule-par-le-propri\u00e9taire.\n-Il est aussi recommand\u00e9 de d\u00e9finir alertnotify afin que les probl\u00e8mes vous soient signal\u00e9s ;\n-par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Avertissement :-maxtxfee est d\u00e9fini tr\u00e8s haut ! Des frais aussi \u00e9lev\u00e9s pourraient \u00eatre pay\u00e9s sur une seule transaction.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Avertissement : veuillez v\u00e9rifier que l'heure et la date de votre ordinateur sont correctes ! Si votre horloge n'est pas \u00e0 l'heure, Bitcoin Core ne fonctionnera pas correctement.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Les pairs de la liste blanche ne peuvent pas \u00eatre bannis DoS et leurs transactions sont toujours relay\u00e9es, m\u00eame si elles sont d\u00e9j\u00e0 dans le mempool, utile p. ex. pour une passerelle</translation>\n@@ -3152,10 +3075,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Activation de la meilleure cha\u00eene...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>L'ex\u00e9cution est impossible quand le portefeuille est en mode \u00e9lagage.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Impossible de r\u00e9soudre l'adresse -whitebind : \u00ab\u00a0%s\u00a0\u00bb</translation>\n@@ -3172,10 +3091,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright \u00a9 2009-%i Les d\u00e9veloppeurs de Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Impossible d'analyser la valeur -rpcbind %s comme adresse r\u00e9seau</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Erreur lors du chargement de wallet.dat : le portefeuille exige une version plus r\u00e9cente de Bitcoin Core</translation>\n@@ -3184,14 +3099,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>Erreur de lecture de la base de donn\u00e9es, fermeture en cours.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Erreur : argument non pris en charge -tor trouv\u00e9, utiliser -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Les frais (en BTC/ko) \u00e0 ajouter aux transactions que vous envoyez (par d\u00e9faut : %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informations</translation>\n@@ -3232,18 +3139,10 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Node relay options:</source>\n         <translation>Options de relais du n\u0153ud :</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Options RPC SSL : (voir le wiki Bitcoin pour les instructions de configuration de SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Options du serveur RPC :</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Prise en charge de RPC pour les connexions persistantes HTTP (par d\u00e9faut : %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Reconstruire au d\u00e9marrage l'index de la cha\u00eene de blocs \u00e0 partir des fichiers blk000??.dat actuels</translation>\n@@ -3320,10 +3219,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Impossible de se lier \u00e0 %s sur cet ordinateur (bind a retourn\u00e9 l'erreur %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Utiliser l'UPnP pour mapper le port d'\u00e9coute (par d\u00e9faut\u00a0: 1 lors de l'\u00e9coute)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nom d'utilisateur pour les connexions JSON-RPC</translation>\n@@ -3336,14 +3231,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Warning</source>\n         <translation>Avertissement</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Avertissement : l'argument -benchmark non pris en charge a \u00e9t\u00e9 ignor\u00e9, utiliser -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Avertissement : l'argument -debugnet non pris en charge a \u00e9t\u00e9 ignor\u00e9, utiliser -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Supprimer toutes les transactions du portefeuille...</translation>\n@@ -3372,10 +3259,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>R\u00e9analyser la cha\u00eene de blocs pour les transactions de portefeuille manquantes</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Utiliser OpenSSL (https) pour les connexions JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Ce message d'aide</translation>\n@@ -3420,10 +3303,6 @@ par exemple : alertnotify=echo %%s | mail -s \"Alerte Bitcoin\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(par d\u00e9faut : %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Chiffrements acceptables (par d\u00e9faut : %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Toujours demander les adresses des pairs par recherche DNS (par d\u00e9faut : %u)</translation>"
      },
      {
        "sha": "75f970f554c7e7a1d8cb55a0c4950b17490597bf",
        "filename": "src/qt/locale/bitcoin_fr_CA.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fr_CA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_fr_CA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_CA.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"fr_CA\" version=\"2.0\">\n+<TS language=\"fr_CA\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -64,6 +64,9 @@\n         <translation>Cette op\u00e9ration n\u00e9cessite le mot de passe de votre porte-feuille pour le d\u00e9crypter.</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     </context>"
      },
      {
        "sha": "3edaef7e16c71135e7c0e50e4a2f4507a64df677",
        "filename": "src/qt/locale/bitcoin_gl.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 21,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_gl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_gl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gl.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"gl\" version=\"2.0\">\n+<TS language=\"gl\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -200,6 +200,9 @@\n         <translation>Cambiouse con \u00e9xito o contrasinal do moedeiro.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1930,10 +1933,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Executar no fondo como un demo e aceptar comandos</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Empregar a rede de proba</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Aceptar conexi\u00f3ns de f\u00f3ra (por defecto: 1 se non -proxy ou -connect)</translation>\n@@ -1950,10 +1949,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Esta \u00e9 unha build de test pre-lanzamento - empr\u00e9gaa baixo o teu propio risco - non empregar para minado ou aplicaci\u00f3ns de comerciantes</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Precauci\u00f3n: -paytxfee est\u00e1 posto moi algo! Esta \u00e9 a tarifa de transacci\u00f3n que ti pagar\u00e1s se env\u00edas unha transacci\u00f3n.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Precauci\u00f3n: A rede non parece estar totalmente de acordo! Alg\u00fans mineitos parecen estar experimentando problemas.</translation>\n@@ -1962,10 +1957,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Precauci\u00f3n: Non parece que esteamos totalmente de acordo cos nosos pares! Pode que precises actualizar, ou outros nodos poden precisar actualizarse.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Precauci\u00f3n: erro lendo wallet.dat! T\u00f3dalas claves lidas correctamente, pero os datos de transacci\u00f3n ou as entradas do libro de direcci\u00f3ns podr\u00edan estar ausentes ou incorrectos.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Precauci\u00f3n: wallet.dat corrupto, datos salvagardados! O wallet.dat orixinal foi gardado como wallet.{timestamp}.bak en %s; se o teu balance ou transacci\u00f3ns son incorrectas deber\u00edas restauralas dende unha copia de seguridade.</translation>\n@@ -2110,10 +2101,6 @@\n         <source>Transaction too large</source>\n         <translation>A transacci\u00f3n \u00e9 demasiado grande</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Usar UPnP para mapear o porto de escoita (por defecto: 1 se \u00e1 escoita)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nome de usuario para conexi\u00f3ns JSON-RPC</translation>\n@@ -2142,10 +2129,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Rescanear transacci\u00f3ns ausentes na cadea de bloques</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Empregar OpenSSL (https) para conexi\u00f3ns JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Esta mensaxe de axuda</translation>"
      },
      {
        "sha": "5de6a6109aaa950e8e8ba021086c732c66084032",
        "filename": "src/qt/locale/bitcoin_gu_IN.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_gu_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_gu_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gu_IN.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"gu_IN\" version=\"2.0\">\n+<TS language=\"gu_IN\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     </context>\n@@ -8,6 +8,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     </context>"
      },
      {
        "sha": "8e985e9f16f0d337bcc07e322b0542a9b83f7c77",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 69,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"he\" version=\"2.0\">\n+<TS language=\"he\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -208,6 +208,9 @@\n         <translation>\u05de\u05d9\u05dc\u05ea \u05d4\u05e6\u05d5\u05e4\u05df \u05e9\u05dc \u05d4\u05d0\u05e8\u05e0\u05e7 \u05e9\u05d5\u05e0\u05ea\u05d4 \u05d1\u05d4\u05e6\u05dc\u05d7\u05d4.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1312,14 +1315,6 @@\n         <source>Services</source>\n         <translation>\u05e9\u05d9\u05e8\u05d5\u05ea\u05d9\u05dd</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>\u05d2\u05d5\u05d1\u05d4 \u05d4\u05ea\u05d7\u05dc\u05ea\u05d9</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>\u05d2\u05d5\u05d1\u05d4 \u05d4\u05e1\u05e0\u05db\u05e8\u05d5\u05df</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>\u05d3\u05d9\u05e8\u05d5\u05d2 \u05d7\u05e1\u05d9\u05de\u05d4</translation>\n@@ -1433,12 +1428,16 @@\n         <translation>\u05ea\u05e2\u05d1\u05d5\u05e8\u05d4 \u05d9\u05d5\u05e6\u05d0\u05ea</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>\u05dc\u05d0 \u05d9\u05d3\u05d5\u05e2</translation>\n+        <source>Yes</source>\n+        <translation>\u05db\u05df</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>\u05de\u05ea\u05e7\u05d1\u05dc\u2026</translation>\n+        <source>No</source>\n+        <translation>\u05dc\u05d0</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>\u05dc\u05d0 \u05d9\u05d3\u05d5\u05e2</translation>\n     </message>\n </context>\n <context>\n@@ -1736,10 +1735,6 @@\n         <source>Copy change</source>\n         <translation>\u05d4\u05e2\u05ea\u05e7\u05ea \u05e2\u05d5\u05d3\u05e3</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u05d4\u05e1\u05db\u05d5\u05dd \u05d4\u05db\u05d5\u05dc\u05dc %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u05d0\u05d5</translation>\n@@ -2494,10 +2489,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u05e8\u05d9\u05e6\u05d4 \u05db\u05e1\u05d5\u05db\u05df \u05d1\u05e8\u05e7\u05e2 \u05d5\u05e7\u05d1\u05dc\u05ea \u05e4\u05e7\u05d5\u05d3\u05d5\u05ea</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u05e9\u05d9\u05de\u05d5\u05e9 \u05d1\u05e8\u05e9\u05ea \u05d4\u05d1\u05d3\u05d9\u05e7\u05d4</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>\u05e7\u05d1\u05dc\u05ea \u05d7\u05d9\u05d1\u05d5\u05e8\u05d9\u05dd \u05de\u05d1\u05d7\u05d5\u05e5 (\u05d1\u05e8\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 1 \u05dc\u05dc\u05d0 \u200e-proxy \u05d0\u05d5 \u200e-connect)</translation>\n@@ -2522,10 +2513,6 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05d4\u05ea\u05d0\u05d2\u05d3 \u05d0\u05dc %s \u05d1\u05de\u05d7\u05e9\u05d1 \u05d6\u05d4. \u05db\u05e0\u05e8\u05d0\u05d4 \u05e9\u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05db\u05d1\u05e8 \u05e4\u05d5\u05e2\u05dc\u05ea.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u200e-paytxfee \u05e0\u05e7\u05d1\u05e2 \u05dc\u05e2\u05e8\u05da \u05de\u05d0\u05d3 \u05d2\u05d1\u05d5\u05d4! \u05d6\u05d5\u05d4\u05d9 \u05e2\u05de\u05dc\u05ea \u05d4\u05e4\u05e2\u05d5\u05dc\u05d4 \u05e9\u05ea\u05e9\u05d5\u05dc\u05dd \u05d1\u05e2\u05ea \u05d4\u05e2\u05d1\u05e8\u05ea \u05e9\u05dc\u05d9\u05d7\u05d4.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05e0\u05e8\u05d0\u05d4 \u05e9\u05dc\u05d0 \u05db\u05dc \u05d4\u05e8\u05e9\u05ea \u05de\u05e1\u05db\u05d9\u05de\u05d4! \u05e0\u05e8\u05d0\u05d4 \u05e9\u05d9\u05e9\u05e0\u05dd \u05db\u05d5\u05e8\u05d9\u05dd \u05e9\u05e0\u05ea\u05e7\u05dc\u05d9\u05dd \u05d1\u05d1\u05e2\u05d9\u05d5\u05ea.</translation>\n@@ -2534,10 +2521,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05e0\u05e8\u05d0\u05d4 \u05e9\u05d9\u05e9\u05e0\u05d4 \u05d0\u05d9\u05be\u05d4\u05e1\u05db\u05de\u05d4 \u05d1\u05d9\u05e0\u05d9\u05e0\u05d5 \u05dc\u05d1\u05d9\u05df \u05e9\u05d0\u05e8 \u05d4\u05e2\u05de\u05d9\u05ea\u05d9\u05dd \u05e9\u05dc\u05e0\u05d5! \u05d9\u05ea\u05db\u05df \u05e9\u05e2\u05d3\u05d9\u05e3 \u05dc\u05e9\u05d3\u05e8\u05d2 \u05d0\u05d5 \u05e9\u05db\u05dc \u05e9\u05d0\u05e8 \u05d4\u05e2\u05de\u05d9\u05ea\u05d9\u05dd \u05e6\u05e8\u05d9\u05db\u05d9\u05dd \u05dc\u05e9\u05d3\u05e8\u05d2.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05e7\u05e8\u05d9\u05d0\u05ea wallet.dat! \u05db\u05dc \u05d4\u05de\u05e4\u05ea\u05d7\u05d5\u05ea \u05e0\u05e7\u05e8\u05d0\u05d5 \u05d1\u05d0\u05d5\u05e4\u05df \u05ea\u05e7\u05d9\u05df, \u05d0\u05da \u05e0\u05ea\u05d5\u05e0\u05d9 \u05d4\u05d4\u05e2\u05d1\u05e8\u05d5\u05ea \u05d0\u05d5 \u05e1\u05e4\u05e8 \u05d4\u05db\u05ea\u05d5\u05d1\u05d5\u05ea \u05e2\u05dc\u05d5\u05dc\u05d9\u05dd \u05dc\u05d4\u05d9\u05d5\u05ea \u05d7\u05e1\u05e8\u05d9\u05dd \u05d0\u05d5 \u05e9\u05d2\u05d5\u05d9\u05d9\u05dd.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05d4\u05e7\u05d5\u05d1\u05e5 wallet.dat \u05d4\u05d5\u05e9\u05d7\u05ea, \u05d4\u05de\u05d9\u05d3\u05e2 \u05d7\u05d5\u05dc\u05e5! \u05e7\u05d5\u05d1\u05e5 \u05d4\u05bewallet.dat \u05d4\u05de\u05e7\u05d5\u05e8\u05d9 \u05e0\u05e9\u05de\u05e8 \u05d1\u05e9\u05dd wallet.{timestamp}.bak \u05d1\u05de\u05d9\u05e7\u05d5\u05dd %s; \u05d0\u05dd \u05d4\u05de\u05d0\u05d6\u05df \u05d0\u05d5 \u05d4\u05d4\u05e2\u05d1\u05e8\u05d5\u05ea \u05e9\u05d2\u05d5\u05d9\u05d9\u05dd \u05e2\u05dc\u05d9\u05da \u05dc\u05e9\u05d7\u05d6\u05e8 \u05d2\u05d9\u05d1\u05d5\u05d9.</translation>\n@@ -2606,10 +2589,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u05d4\u05d0\u05d6\u05e0\u05d4 \u05e0\u05db\u05e9\u05dc\u05d4 \u05d1\u05db\u05dc \u05e4\u05d5\u05e8\u05d8. \u05d4\u05e9\u05ea\u05de\u05e9 \u05d1- -listen=0 \u05d0\u05dd \u05d1\u05e8\u05e6\u05d5\u05e0\u05da \u05d1\u05db\u05da.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>\u05d0\u05dd \u05dc\u05d0 \u05e1\u05d5\u05e4\u05e7\u05d4 &lt;\u05e7\u05d8\u05d2\u05d5\u05e8\u05d9\u05d4&gt; \u05d9\u05e9 \u05dc\u05d9\u05d9\u05e6\u05d0 \u05d0\u05ea \u05db\u05dc \u05e4\u05e8\u05d8\u05d9 \u05d4\u05e0\u05d9\u05e4\u05d5\u05d9.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u05de\u05ea\u05d1\u05e6\u05e2 \u05d9\u05d1\u05d5\u05d0\u2026</translation>\n@@ -2670,10 +2649,6 @@\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>\u05d4\u05e8\u05e5 \u05e4\u05e7\u05d5\u05d3\u05d4 \u05db\u05d0\u05e9\u05e8 \u05d4\u05d4\u05ea\u05e8\u05d0\u05d4 \u05d4\u05e8\u05dc\u05d5\u05d5\u05e0\u05d8\u05d9\u05ea \u05de\u05ea\u05e7\u05d1\u05dc\u05ea \u05d0\u05d5 \u05db\u05e9\u05d0\u05e0\u05d7\u05e0\u05d5 \u05e2\u05d3\u05d9\u05dd \u05dc\u05e4\u05d9\u05e6\u05d5\u05dc \u05d0\u05e8\u05d5\u05da \u05de\u05d0\u05d5\u05d3 (%s \u05d1\u05e9\u05d5\u05e8\u05ea \u05d4\u05e4\u05e7\u05d5\u05d3\u05d4 \u05d9\u05d5\u05d7\u05dc\u05e3 \u05e2\"\u05d9 \u05d4\u05d4\u05d5\u05d3\u05e2\u05d4)</translation>\n     </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05e0\u05d0 \u05dc\u05d1\u05d3\u05d5\u05e7 \u05e9\u05d4\u05ea\u05d0\u05e8\u05d9\u05da \u05d5\u05d4\u05e9\u05e2\u05d4 \u05e9\u05dc \u05d4\u05de\u05d7\u05e9\u05d1 \u05e9\u05dc\u05da \u05e0\u05db\u05d5\u05e0\u05d9\u05dd! \u05d0\u05dd \u05d4\u05e9\u05e2\u05d5\u05df \u05e9\u05dc\u05da \u05e9\u05d2\u05d5\u05d9 \u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05dc\u05d0 \u05ea\u05e2\u05d1\u05d5\u05d3 \u05db\u05e8\u05d0\u05d5\u05d9.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e4\u05ea\u05d5\u05e8 \u05d0\u05ea \u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u200e-whitebind:\u200f '%s'</translation>\n@@ -2690,22 +2665,10 @@\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>\u05db\u05dc \u05d4\u05d6\u05db\u05d5\u05d9\u05d5\u05ea \u05e9\u05de\u05d5\u05e8\u05d5\u05ea (C)\u200f 2009\u200f-%i \u05de\u05ea\u05db\u05e0\u05ea\u05d9 \u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e0\u05ea\u05d7 \u05d0\u05ea \u05d4\u05e2\u05e8\u05da \u05e9\u05dc \u200e-rpcbind \u05e9\u05e6\u05d5\u05d9\u05df \u05d1\u05ea\u05d5\u05e8 %s \u05db\u05db\u05ea\u05d5\u05d1\u05ea \u05e8\u05e9\u05ea</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>\u05d0\u05d9\u05e8\u05e2\u05d4 \u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05d8\u05e2\u05d9\u05e0\u05ea wallet.dat: \u05d4\u05d0\u05e8\u05e0\u05e7 \u05d3\u05d5\u05e8\u05e9 \u05d2\u05e8\u05e1\u05d4 \u05d7\u05d3\u05e9\u05d4 \u05d9\u05d5\u05ea\u05e8 \u05e9\u05dc \u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>\u05e9\u05d2\u05d9\u05d0\u05d4: \u05e0\u05de\u05e6\u05d0 \u05d0\u05e8\u05d2\u05d5\u05de\u05e0\u05d8 \u05d1\u05dc\u05ea\u05d9 \u05e0\u05ea\u05de\u05da \u200e-tor, \u05d9\u05e9 \u05dc\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05be\u200e-onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>\u05e2\u05de\u05dc\u05d4 (\u05d1\u05beBTC/\u05e7\u05f4\u05d1) \u05dc\u05d4\u05d5\u05e1\u05e4\u05d4 \u05dc\u05d4\u05e2\u05d1\u05e8\u05d5\u05ea \u05e9\u05e0\u05e9\u05dc\u05d7\u05d5\u05ea \u05de\u05de\u05da (\u05d1\u05e8\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>\u05de\u05d9\u05d3\u05e2</translation>\n@@ -2738,10 +2701,6 @@\n         <source>Node relay options:</source>\n         <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05de\u05de\u05e1\u05e8 \u05de\u05e4\u05e8\u05e7:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea RPC SSL: (\u05e0\u05d0 \u05dc\u05e2\u05d9\u05d9\u05df \u05d1\u05d5\u05d5\u05d9\u05e7\u05d9 \u05e9\u05dc \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05dc\u05e7\u05d1\u05dc\u05ea \u05d4\u05e0\u05d7\u05d9\u05d5\u05ea \u05e2\u05dc \u05d4\u05d2\u05d3\u05e8\u05ea SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>\u05d4\u05d2\u05d3\u05e8\u05d5\u05ea \u05e9\u05e8\u05ea RPC</translation>\n@@ -2798,10 +2757,6 @@\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05d4\u05ea\u05d0\u05d2\u05d3 \u05e2\u05dd \u05d4\u05e4\u05ea\u05d7\u05d4 %s \u05d1\u05de\u05d7\u05e9\u05d1 \u05d6\u05d4 (\u05e4\u05e2\u05d5\u05dc\u05ea \u05d4\u05d0\u05d9\u05d2\u05d5\u05d3 \u05d4\u05d7\u05d6\u05d9\u05e8\u05d4 \u05d0\u05ea \u05d4\u05e9\u05d2\u05d9\u05d0\u05d4 %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u05d9\u05e9 \u05dc\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05beUPnP \u05db\u05d3\u05d9 \u05dc\u05de\u05e4\u05d5\u05ea \u05d0\u05ea \u05d4\u05e4\u05ea\u05d7\u05d4 \u05dc\u05d4\u05d0\u05d6\u05e0\u05d4 (\u05d1\u05e8\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 1 \u05d1\u05e2\u05ea \u05d4\u05d0\u05d6\u05e0\u05d4)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u05e9\u05dd \u05de\u05e9\u05ea\u05de\u05e9 \u05dc\u05d7\u05d9\u05d1\u05d5\u05e8\u05d9 JSON-RPC</translation>\n@@ -2814,14 +2769,6 @@\n         <source>Warning</source>\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05d4\u05d0\u05e8\u05d2\u05d5\u05de\u05e0\u05d8 \u05e9\u05d0\u05d9\u05e0\u05d5 \u05e0\u05ea\u05de\u05da \u05e2\u05d5\u05d3 \u200e-benchmark \u05dc\u05d0 \u05d4\u05d5\u05e4\u05e2\u05dc, \u05e0\u05d0 \u05dc\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05be\u200e-debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05d4\u05d0\u05e8\u05d2\u05d5\u05de\u05e0\u05d8 \u05e9\u05d0\u05d9\u05e0\u05d5 \u05e0\u05ea\u05de\u05da \u05e2\u05d5\u05d3 \u200e-debugnet \u05dc\u05d0 \u05d4\u05d5\u05e4\u05e2\u05dc, \u05e0\u05d0 \u05dc\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05be\u200e-debug=net.</translation>\n-    </message>\n     <message>\n         <source>on startup</source>\n         <translation>\u05e2\u05dd \u05d4\u05d4\u05e4\u05e2\u05dc\u05d4</translation>\n@@ -2846,10 +2793,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u05d9\u05e9 \u05dc\u05e1\u05e8\u05d5\u05e7 \u05de\u05d7\u05d3\u05e9 \u05d0\u05ea \u05e9\u05e8\u05e9\u05e8\u05ea \u05d4\u05de\u05e7\u05d8\u05e2\u05d9\u05dd \u05dc\u05de\u05e6\u05d9\u05d0\u05ea \u05d4\u05e2\u05d1\u05e8\u05d5\u05ea \u05d7\u05e1\u05e8\u05d5\u05ea \u05d1\u05d0\u05e8\u05e0\u05e7</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u05e9\u05d9\u05de\u05d5\u05e9 \u05d1\u05beOpenSSL (https)\u200e \u05e2\u05d1\u05d5\u05e8 \u05d7\u05d9\u05d1\u05d5\u05e8\u05d9 JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u05d4\u05d5\u05d3\u05e2\u05ea \u05d4\u05e2\u05d6\u05e8\u05d4 \u05d4\u05d6\u05d5</translation>"
      },
      {
        "sha": "fbdaf1ba7c5a73fdf80109350cdcea15067b656b",
        "filename": "src/qt/locale/bitcoin_hi_IN.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_hi_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_hi_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hi_IN.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"hi_IN\" version=\"2.0\">\n+<TS language=\"hi_IN\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -116,6 +116,9 @@\n         <translation>\u0935\u0949\u0932\u0947\u091f \u0915\u093e \u0921\u0940\u0915\u094d\u0930\u093f\u092a\u094d\u091f-\u0937\u094d\u0923 \u0905\u0938\u092b\u0932 !</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -813,10 +816,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u092c\u0948\u0915\u0917\u094d\u0930\u093e\u0909\u0902\u0921 \u092e\u0947\u0902 \u0921\u0947\u092e\u0949\u0928 \u092c\u0928 \u0915\u0930 \u0930\u0928 \u0915\u0930\u0947 \u0924\u0925\u093e \u0915\u092e\u093e\u0902\u0921\u094d\u0938 \u0938\u094d\u0935\u0940\u0915\u093e\u0930 \u0915\u0930\u0947\u0902 </translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u091f\u0947\u0938\u094d\u091f \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0915\u093e \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u0930\u0947 </translation>\n-    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u092c\u094d\u0932\u0949\u0915\u094d\u0938 \u091c\u093e\u0901\u091a\u0947 \u091c\u093e \u0930\u0939\u093e \u0939\u0948...</translation>"
      },
      {
        "sha": "80371dfaf70c7d0ae7d6e94effbc83b3632ac10d",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 5,
        "deletions": 18,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"hr\" version=\"2.0\">\n+<TS language=\"hr\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -216,6 +216,9 @@\n         <translation>Lozinka nov\u010danika je uspje\u0161no promijenjena.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1098,7 +1101,7 @@\n         <source>Unknown</source>\n         <translation>Nepoznato</translation>\n     </message>\n-    </context>\n+</context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n@@ -1768,14 +1771,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Izvr\u0161avaj u pozadini kao uslu\u017enik i prihva\u0107aj komande</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Koristi test mre\u017eu</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Upozorenje: -paytxfee je pode\u0161en na preveliki iznos.  To je iznos koji \u0107ete platiti za obradu transakcije.</translation>\n-    </message>\n     <message>\n         <source>Block creation options:</source>\n         <translation>Opcije za kreiranje bloka:</translation>\n@@ -1804,10 +1799,6 @@\n         <source>Start minimized</source>\n         <translation>Pokreni minimiziran</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Poku\u0161aj koristiti UPnP da otvori\u0161 port za uslugu (default: 1 when listening)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Korisni\u010dko ime za JSON-RPC veze</translation>\n@@ -1832,10 +1823,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Ponovno pretra\u017ei lanac blokova za transakcije koje nedostaju</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Koristi OpenSSL (https) za JSON-RPC povezivanje</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Ova poruka za pomo\u0107</translation>"
      },
      {
        "sha": "6722854589d40f80ea0aa230305460b83eb45355",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 254,
        "deletions": 23,
        "changes": 277,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"hu\" version=\"2.0\">\n+<TS language=\"hu\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -183,6 +183,10 @@\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Add meg a t\u00e1rca \u00faj jelszav\u00e1t.&lt;br/&gt;Olyan jelsz\u00f3t v\u00e1lassz, ami &lt;b&gt;legal\u00e1bb t\u00edz v\u00e9letlenszer\u0171 karakterb\u0151l&lt;/b&gt; vagy &lt;b&gt;legal\u00e1bb 8 v\u00e9letlenszer\u0171 sz\u00f3b\u00f3l&lt;/b&gt; \u00e1ll.</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Add meg a t\u00e1rc\u00e1hoz a r\u00e9gi jelszavad \u00e9s az \u00faj jelszavad.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>A t\u00e1rca titkos\u00edt\u00e1sa sikertelen.</translation>\n@@ -212,6 +216,9 @@\n         <translation>Jelsz\u00f3 megv\u00e1ltoztatva.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -390,6 +397,10 @@\n         <source>&amp;About Bitcoin Core</source>\n         <translation>&amp;A Bitcoin Core-r\u00f3l</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for Bitcoin Core</source>\n+        <translation>Konfigur\u00e1ci\u00f3s opci\u00f3k m\u00f3dos\u00edt\u00e1sa a Bitcoin Core-hoz</translation>\n+    </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation>A haszn\u00e1lt k\u00fcld\u00e9si c\u00edmek \u00e9s c\u00edmk\u00e9k megtekint\u00e9se</translation>\n@@ -410,18 +421,38 @@\n         <source>Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options</source>\n         <translation>A Bitcoin Core s\u00fag\u00f3\u00fczenet megjelen\u00edt\u00e9se a Bitcoin lehets\u00e9ges parancssori kapcsol\u00f3ival.</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n active connection(s) to Bitcoin network</source>\n+        <translation><numerusform>%n akt\u00edv kapcsolat a Bitcoin h\u00e1l\u00f3zathoz</numerusform><numerusform>%n akt\u00edv kapcsolat a Bitcoin h\u00e1l\u00f3zathoz</numerusform></translation>\n+    </message>\n     <message>\n         <source>No block source available...</source>\n         <translation>Blokk forr\u00e1sa ismeretlen...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>%n blokk feldolgozva a tranzakci\u00f3 el\u0151zm\u00e9nyb\u0151l.</numerusform><numerusform>%n blokk feldolgozva a tranzakci\u00f3 el\u0151zm\u00e9nyb\u0151l.</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n         <translation><numerusform>%n \u00f3ra</numerusform><numerusform>%n \u00f3ra</numerusform></translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n nap</numerusform><numerusform>%n nap</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n h\u00e9t</numerusform><numerusform>%n h\u00e9t</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 \u00e9s %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n \u00e9v</numerusform><numerusform>%n \u00e9v</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 lemarad\u00e1s</translation>\n@@ -458,12 +489,30 @@\n         <source>Date: %1\n </source>\n         <translation>D\u00e1tum:  %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\u00d6sszeg: %1\n </translation>\n     </message>\n     <message>\n         <source>Type: %1\n </source>\n         <translation>T\u00edpus: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>C\u00edmke: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>C\u00edm: %1\n </translation>\n     </message>\n     <message>\n@@ -492,6 +541,10 @@\n </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>\u00c9rme V\u00e1laszt\u00e1s</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>Mennyis\u00e9g:</translation>\n@@ -510,7 +563,7 @@\n     </message>\n     <message>\n         <source>Fee:</source>\n-        <translation>D\u00edjak:</translation>\n+        <translation>D\u00edj:</translation>\n     </message>\n     <message>\n         <source>Dust:</source>\n@@ -540,6 +593,14 @@\n         <source>Amount</source>\n         <translation>\u00d6sszeg</translation>\n     </message>\n+    <message>\n+        <source>Received with label</source>\n+        <translation>C\u00edmk\u00e9vel \u00e9rkezett</translation>\n+    </message>\n+    <message>\n+        <source>Received with address</source>\n+        <translation>C\u00edmmel \u00e9rkezett</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>D\u00e1tum</translation>\n@@ -652,6 +713,18 @@\n         <source>none</source>\n         <translation>semmi</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Ez a c\u00edmke pirosra v\u00e1ltozik, ha a tranzakci\u00f3 m\u00e9rete nagyobb mint 1000 b\u00e1jt.</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if the priority is smaller than \"medium\".</source>\n+        <translation>Ez a c\u00edmke pirosra v\u00e1ltozik, ha a priorit\u00e1s kisebb mint \"k\u00f6zepes\".</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than %1.</source>\n+        <translation>Ez a c\u00edmke pirosra v\u00e1ltozik, ha b\u00e1rmely fogad\u00f3nak %1-n\u00e1l kevesebb \u00f6sszeg \u00e9rkezik.</translation>\n+    </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation>Bemenetenk\u00e9nt  +/- %1 satoshi-val v\u00e1ltozhat</translation>\n@@ -828,6 +901,10 @@\n         <source>Error</source>\n         <translation>Hiba</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n GB of free space available</source>\n+        <translation><numerusform>%n GB el\u00e9rhet\u0151 szabad hely</numerusform><numerusform>%n GB el\u00e9rhet\u0151 szabad hely</numerusform></translation>\n+    </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n@@ -862,6 +939,10 @@\n         <source>&amp;Main</source>\n         <translation>&amp;F\u0151</translation>\n     </message>\n+    <message>\n+        <source>Size of &amp;database cache</source>\n+        <translation>A&amp;datb\u00e1zis gyors\u00edt\u00f3t\u00e1r m\u00e9rete</translation>\n+    </message>\n     <message>\n         <source>MB</source>\n         <translation>MB</translation>\n@@ -878,6 +959,10 @@\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>A proxy IP c\u00edme (pl.: IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin Core.</source>\n+        <translation>Itt be\u00e1ll\u00edthatod a kezel\u0151fel\u00fclet nyelv\u00e9t. A be\u00e1ll\u00edt\u00e1s a Bitcoin \u00fajraind\u00edt\u00e1sa ut\u00e1n l\u00e9p \u00e9rv\u00e9nybe.</translation>\n+    </message>\n     <message>\n         <source>Reset all client options to default.</source>\n         <translation>Minden kliensbe\u00e1ll\u00edt\u00e1s alap\u00e9rtelmezettre \u00e1ll\u00edt\u00e1sa.</translation>\n@@ -894,9 +979,13 @@\n         <source>&amp;Start Bitcoin Core on system login</source>\n         <translation>A Bitcoin elind\u00edt\u00e1sa bejelentkez\u00e9skor</translation>\n     </message>\n+    <message>\n+        <source>W&amp;allet</source>\n+        <translation>T&amp;\u00e1rca</translation>\n+    </message>\n     <message>\n         <source>Expert</source>\n-        <translation>szak\u00e9rt\u0151</translation>\n+        <translation>Szak\u00e9rt\u0151</translation>\n     </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n@@ -993,6 +1082,10 @@\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>A kijelzett inform\u00e1ci\u00f3 lehet, hogy elavult. A p\u00e9nzt\u00e1rc\u00e1ja automatikusan szinkroniz\u00e1lja mag\u00e1t a Bitcoin h\u00e1l\u00f3zattal miut\u00e1n a kapcsolat l\u00e9trej\u00f6n, de ez e folyamat m\u00e9g nem fejez\u0151d\u00f6tt be.</translation>\n     </message>\n+    <message>\n+        <source>Watch-only:</source>\n+        <translation>Csak megfigyel\u00e9s</translation>\n+    </message>\n     <message>\n         <source>Available:</source>\n         <translation>El\u00e9rhet\u0151:</translation>\n@@ -1017,6 +1110,10 @@\n         <source>Mined balance that has not yet matured</source>\n         <translation>B\u00e1ny\u00e1szott egyenleg amely m\u00e9g nem \u00e9rett be.</translation>\n     </message>\n+    <message>\n+        <source>Balances</source>\n+        <translation>Egyenlegek</translation>\n+    </message>\n     <message>\n         <source>Total:</source>\n         <translation>\u00d6sszesen:</translation>\n@@ -1044,6 +1141,14 @@\n         <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation>A bitcoint nem lehet elind\u00edtani: click-to-pay handler</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>A fizet\u00e9si k\u00e9relem lej\u00e1rt</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>\u00c9rv\u00e9nytelen fizet\u00e9si k\u00e9relem</translation>\n+    </message>\n     </context>\n <context>\n     <name>PeerTableModel</name>\n@@ -1062,6 +1167,10 @@\n         <source>Amount</source>\n         <translation>\u00d6sszeg</translation>\n     </message>\n+    <message>\n+        <source>Enter a Bitcoin address (e.g. %1)</source>\n+        <translation>Ad meg egy Bitcoin c\u00edmet (pl: %1)</translation>\n+    </message>\n     <message>\n         <source>%1 d</source>\n         <translation>%1 n</translation>\n@@ -1078,11 +1187,19 @@\n         <source>%1 s</source>\n         <translation>%1 mp</translation>\n     </message>\n+    <message>\n+        <source>None</source>\n+        <translation>Semmi</translation>\n+    </message>\n     <message>\n         <source>N/A</source>\n         <translation>Nem el\u00e9rhet\u0151</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>%1 ms</source>\n+        <translation>%1 ms</translation>\n+    </message>\n+</context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n@@ -1132,6 +1249,10 @@\n         <source>Using OpenSSL version</source>\n         <translation>Haszn\u00e1lt OpenSSL verzi\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Using BerkeleyDB version</source>\n+        <translation>Haszn\u00e1lt BerkeleyDB verzi\u00f3</translation>\n+    </message>\n     <message>\n         <source>Startup time</source>\n         <translation>Bekapcsol\u00e1s ideje</translation>\n@@ -1168,6 +1289,10 @@\n         <source>&amp;Peers</source>\n         <translation>&amp;Peerek</translation>\n     </message>\n+    <message>\n+        <source>Select a peer to view detailed information.</source>\n+        <translation>Peer kijel\u00f6l\u00e9se a r\u00e9szletes inform\u00e1ci\u00f3k\u00e9rt</translation>\n+    </message>\n     <message>\n         <source>Version</source>\n         <translation>Verzi\u00f3</translation>\n@@ -1180,6 +1305,10 @@\n         <source>Services</source>\n         <translation>Szolg\u00e1ltat\u00e1sok</translation>\n     </message>\n+    <message>\n+        <source>Connection Time</source>\n+        <translation>Csatlakoz\u00e1s ideje</translation>\n+    </message>\n     <message>\n         <source>Last Send</source>\n         <translation>Legut\u00f3bbi k\u00fcld\u00e9s</translation>\n@@ -1216,6 +1345,10 @@\n         <source>&amp;Network Traffic</source>\n         <translation>&amp;H\u00e1l\u00f3zati forgalom</translation>\n     </message>\n+    <message>\n+        <source>&amp;Clear</source>\n+        <translation>&amp;T\u00f6rl\u00e9s</translation>\n+    </message>\n     <message>\n         <source>Totals</source>\n         <translation>\u00d6sszesen:</translation>\n@@ -1264,17 +1397,41 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>via %1</source>\n+        <translation>%1 \u00e1ltal</translation>\n+    </message>\n     <message>\n         <source>never</source>\n         <translation>soha</translation>\n     </message>\n+    <message>\n+        <source>Inbound</source>\n+        <translation>Bej\u00f6v\u0151</translation>\n+    </message>\n+    <message>\n+        <source>Outbound</source>\n+        <translation>Kimen\u0151</translation>\n+    </message>\n+    <message>\n+        <source>Yes</source>\n+        <translation>Igen</translation>\n+    </message>\n+    <message>\n+        <source>No</source>\n+        <translation>Nem</translation>\n+    </message>\n     <message>\n         <source>Unknown</source>\n         <translation>Ismeretlen</translation>\n     </message>\n-    </context>\n+</context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n+    <message>\n+        <source>&amp;Amount:</source>\n+        <translation>&amp;\u00d6sszeg:</translation>\n+    </message>\n     <message>\n         <source>&amp;Label:</source>\n         <translation>C\u00edmke:</translation>\n@@ -1283,14 +1440,30 @@\n         <source>&amp;Message:</source>\n         <translation>&amp;\u00dczenet:</translation>\n     </message>\n+    <message>\n+        <source>Clear all fields of the form.</source>\n+        <translation>Minden mez\u0151 t\u00f6rl\u00e9se</translation>\n+    </message>\n     <message>\n         <source>Clear</source>\n         <translation>T\u00f6rl\u00e9s</translation>\n     </message>\n+    <message>\n+        <source>Requested payments history</source>\n+        <translation>A k\u00e9rt kifizet\u00e9sek t\u00f6rt\u00e9nete</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Request payment</source>\n+        <translation>&amp;Fizet\u00e9s k\u00e9r\u00e9se</translation>\n+    </message>\n     <message>\n         <source>Show</source>\n         <translation>Mutat</translation>\n     </message>\n+    <message>\n+        <source>Remove the selected entries from the list</source>\n+        <translation>A kijel\u00f6lt elemek t\u00f6rl\u00e9se a list\u00e1r\u00f3l</translation>\n+    </message>\n     <message>\n         <source>Remove</source>\n         <translation>Elt\u00e1vol\u00edt\u00e1s</translation>\n@@ -1326,6 +1499,14 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;K\u00e9p ment\u00e9se</translation>\n     </message>\n+    <message>\n+        <source>Request payment to %1</source>\n+        <translation>Fizet\u00e9s k\u00e9r\u00e9se a %1-hez</translation>\n+    </message>\n+    <message>\n+        <source>Payment information</source>\n+        <translation>Kifizet\u00e9s inform\u00e1ci\u00f3</translation>\n+    </message>\n     <message>\n         <source>URI</source>\n         <translation>URI:</translation>\n@@ -1377,7 +1558,15 @@\n         <source>(no label)</source>\n         <translation>(nincs c\u00edmke)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no message)</source>\n+        <translation>(nincs \u00fczenet)</translation>\n+    </message>\n+    <message>\n+        <source>(no amount)</source>\n+        <translation>(nincs \u00f6sszeg)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n@@ -1388,6 +1577,14 @@\n         <source>Inputs...</source>\n         <translation>Bemenetek...</translation>\n     </message>\n+    <message>\n+        <source>automatically selected</source>\n+        <translation>automatikusan kiv\u00e1lasztva</translation>\n+    </message>\n+    <message>\n+        <source>Insufficient funds!</source>\n+        <translation>Fedezethi\u00e1ny!</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>Mennyis\u00e9g:</translation>\n@@ -1420,10 +1617,26 @@\n         <source>Transaction Fee:</source>\n         <translation>Tranzakci\u00f3s d\u00edj</translation>\n     </message>\n+    <message>\n+        <source>Choose...</source>\n+        <translation>V\u00e1lassz...</translation>\n+    </message>\n+    <message>\n+        <source>per kilobyte</source>\n+        <translation>kilob\u00e1jtonk\u00e9nt</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>Elrejt\u00e9s</translation>\n     </message>\n+    <message>\n+        <source>normal</source>\n+        <translation>norm\u00e1l</translation>\n+    </message>\n+    <message>\n+        <source>fast</source>\n+        <translation>gyors</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>K\u00fcld\u00e9s t\u00f6bb c\u00edmzettnek egyszerre</translation>\n@@ -1432,6 +1645,10 @@\n         <source>Add &amp;Recipient</source>\n         <translation>&amp;C\u00edmzett hozz\u00e1ad\u00e1sa</translation>\n     </message>\n+    <message>\n+        <source>Clear all fields of the form.</source>\n+        <translation>Minden mez\u0151 t\u00f6rl\u00e9se</translation>\n+    </message>\n     <message>\n         <source>Dust:</source>\n         <translation>Por-hat\u00e1r:</translation>\n@@ -1500,6 +1717,14 @@\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>A k\u00fcldeni k\u00edv\u00e1nt \u00f6sszeg \u00e9s a %1 tranzakci\u00f3s d\u00edj egy\u00fctt meghaladja az egyenlegeden rendelkez\u00e9sedre \u00e1ll\u00f3 \u00f6sszeget.</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>A fizet\u00e9si k\u00e9relem lej\u00e1rt</translation>\n+    </message>\n+    <message>\n+        <source>Warning: Invalid Bitcoin address</source>\n+        <translation>Figyelmeztet\u00e9s: \u00c9rv\u00e9nytelen Bitcoin c\u00edm</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nincs c\u00edmke)</translation>\n@@ -1508,6 +1733,10 @@\n         <source>Copy dust</source>\n         <translation>Visszaj\u00e1r\u00f3 m\u00e1sol\u00e1sa</translation>\n     </message>\n+    <message>\n+        <source>Are you sure you want to send?</source>\n+        <translation>Biztos, hogy el akarod k\u00fcldeni?</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsEntry</name>\n@@ -1528,6 +1757,10 @@\n         <source>&amp;Label:</source>\n         <translation>C\u00edmke:</translation>\n     </message>\n+    <message>\n+        <source>Choose previously used address</source>\n+        <translation>V\u00e1lassz egy kor\u00e1bban m\u00e1r haszn\u00e1lt c\u00edmet</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -1540,6 +1773,10 @@\n         <source>Alt+P</source>\n         <translation>Alt+P</translation>\n     </message>\n+    <message>\n+        <source>Remove this entry</source>\n+        <translation>Ez a bejegyz\u00e9s elt\u00e1vol\u00edt\u00e1sa</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>\u00dczenet:</translation>\n@@ -1555,7 +1792,11 @@\n         <source>Bitcoin Core is shutting down...</source>\n         <translation>A Bitcoin Core le\u00e1ll...</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Do not shut down the computer until this window disappears.</source>\n+        <translation>Ne \u00e1ll\u00edtsd le a sz\u00e1m\u00edt\u00f3g\u00e9pet am\u00edg ez az ablak el nem t\u0171nik.</translation>\n+    </message>\n+</context>\n <context>\n     <name>SignVerifyMessageDialog</name>\n     <message>\n@@ -1566,6 +1807,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>\u00dczenet al\u00e1\u00edr\u00e1sa...</translation>\n     </message>\n+    <message>\n+        <source>Choose previously used address</source>\n+        <translation>V\u00e1lassz egy kor\u00e1bban m\u00e1r haszn\u00e1lt c\u00edmet</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -2061,11 +2306,6 @@\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>H\u00e1tt\u00e9rben futtat\u00e1s daemonk\u00e9nt \u00e9s parancsok elfogad\u00e1sa\n-</translation>\n-    </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Teszth\u00e1l\u00f3zat haszn\u00e1lata\n </translation>\n     </message>\n     <message>\n@@ -2076,10 +2316,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Parancs, amit akkor hajt v\u00e9gre, amikor egy t\u00e1rca-tranzakci\u00f3 megv\u00e1ltozik  (%s a parancsban lecser\u00e9l\u0151dik a blokk TxID-re)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Figyelem: a -paytxfee nagyon magas.  Ennyi tranzakci\u00f3s d\u00edjat fogsz fizetni, ha elk\u00fcld\u00f6d a tranzakci\u00f3t.</translation>\n-    </message>\n     <message>\n         <source>Connect only to the specified node(s)</source>\n         <translation>Csatlakoz\u00e1s csak a megadott csom\u00f3ponthoz</translation>\n@@ -2210,8 +2446,8 @@\n         <translation>T\u00fal nagy tranzakci\u00f3</translation>\n     </message>\n     <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>UPnP-haszn\u00e1lat enged\u00e9lyez\u00e9se a figyel\u0151 port felt\u00e9rk\u00e9pez\u00e9s\u00e9n\u00e9l (default: 1 when listening)</translation>\n+        <source>UI Options:</source>\n+        <translation>Kezel\u0151fel\u00fclet be\u00e1ll\u00edt\u00e1sai:</translation>\n     </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n@@ -2238,11 +2474,6 @@\n     <message>\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Blokkl\u00e1nc \u00fajraszkennel\u00e9se hi\u00e1nyz\u00f3 t\u00e1rca-tranzakci\u00f3k ut\u00e1n\n-</translation>\n-    </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>OpenSSL (https) haszn\u00e1lata JSON-RPC csatalkoz\u00e1sokhoz\n </translation>\n     </message>\n     <message>"
      },
      {
        "sha": "e2caa6d867d336a40dd689c8a131d397eecfde36",
        "filename": "src/qt/locale/bitcoin_id_ID.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 21,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_id_ID.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_id_ID.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id_ID.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"id_ID\" version=\"2.0\">\n+<TS language=\"id_ID\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -196,6 +196,9 @@\n         <translation>Kata kunci untuk dompet berubah berhasil.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1488,10 +1491,6 @@\n         <source>Copy change</source>\n         <translation>Salin uang kembali</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Jumlah Nilai %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>atau</translation>\n@@ -2190,10 +2189,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Berjalan dibelakang sebagai daemin dan menerima perintah</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Gunakan jaringan uji</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Terima hubungan dari luar (standar: 1 kalau -proxy atau -connect tidak dipilih)</translation>\n@@ -2206,10 +2201,6 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Tidak bisa mengikat dengan %s di computer ini. Kemungkinan Bitcoin Core sudah mulai.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Peringatan: -paytxfee sangat besar! Ini adalah biaya pengiriman yang akan dibayar oleh Anda jika transaksi terkirim.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Peringatan: Jaringan tidak semua bersetuju! Beberapa penambang dapat persoalan.</translation>\n@@ -2218,10 +2209,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Peringatan: Kami tidak bersetujuh dengan peer-peer kami! Kemungkinan Anda harus upgrade, atau node-node lain yang harus diupgrade.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Awas: wallet.dat tidak bisa dibaca! Berhasil periksakan kunci-kunci dalam arsipnya, tetapi ada kemungkinan informasi tentang transaksi atau isi-isi buku alamat salah atau terhilang.</translation>\n-    </message>\n     <message>\n         <source>(default: 1)</source>\n         <translation>(pengaturan awal: 1)</translation>\n@@ -2410,10 +2397,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Pindai ulang rantai-blok untuk transaksi dompet yang hilang</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Gunakan OpenSSL (https) untuk hubungan JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Pesan bantuan ini</translation>"
      },
      {
        "sha": "b613bc888e9395c8ce9443c7b4f44cc4027666c4",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 144,
        "changes": 160,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"it\" version=\"2.0\">\n+<TS language=\"it\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>Passphrase del portamonete modificata con successo.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1279,10 +1282,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>La richiesta di pagamento %1 (%2 byte) supera la dimensione massima di %3 byte.</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Protezione DoS per la richiesta di pagamento</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Errore di comunicazione con %1: %2</translation>\n@@ -1471,14 +1470,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Services</source>\n         <translation>Servizi</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Nr. Blocco Iniziale</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Nr. Blocco Sincronizzato</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Punteggio di Ban</translation>\n@@ -1600,12 +1591,16 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <translation>In uscita</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Sconosciuto</translation>\n+        <source>Yes</source>\n+        <translation>Si</translation>\n+    </message>\n+    <message>\n+        <source>No</source>\n+        <translation>No</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Recuperando...</translation>\n+        <source>Unknown</source>\n+        <translation>Sconosciuto</translation>\n     </message>\n </context>\n <context>\n@@ -1971,10 +1966,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Copy change</source>\n         <translation>Copia resto</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Importo Totale %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -2790,12 +2781,12 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <translation>Accetta comandi da riga di comando e JSON-RPC</translation>\n     </message>\n     <message>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Esegui in background come demone ed accetta i comandi</translation>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Errore: si \u00e8 presentato un errore interno fatale, consulta il file debug.log per maggiori dettagli</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Utilizza la rete di prova</translation>\n+        <source>Run in the background as a daemon and accept commands</source>\n+        <translation>Esegui in background come demone ed accetta i comandi</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2817,14 +2808,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Esegue un comando quando lo stato di una transazione del portamonete cambia (%s in cmd \u00e8 sostituito da TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Commissioni massime totali da includere in una singola transazione dal portamonete. Un'impostazione troppo bassa potrebbe provocare l'annullamento di transazioni di grosse dimensioni (predefinito: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Riduce i requisiti di spazio di archiviazione attraverso la rimozione dei vecchi blocchi (pruning). Questa modalit\u00e0 disabilita le funzionalit\u00e0 di portamonete ed \u00e8 incompatibile con l'opzione -txindex. Attenzione: il ripristinando questa opzione l'intera blockchain dovr\u00e0 essere riscaricata. (predefinito: 0 = disabilita il pruning, &gt;%u = dimensione desiderata in MiB per i file dei blocchi)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Imposta il numero di thread per la verifica degli script (da %u a %d, 0 = automatico, &lt;0 = lascia questo numero di core liberi, predefinito: %d)</translation>\n@@ -2845,10 +2828,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>ATTENZIONE, si consiglia di verificare la connessione di rete: %d blocchi ricevuti nelle ultime %d ore (%d previsti)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Attenzione: -paytxfee \u00e8 impostato su un valore molto elevato. Questa \u00e8 la commissione che si paga quando si invia una transazione.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Attenzione: La rete non sembra trovarsi in pieno consenso! Alcuni minatori sembrano riscontrare problemi.</translation>\n@@ -2857,10 +2836,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Attenzione: Sembra che non vi sia pieno consenso con i nostri peer! Un aggiornamento da parte tua o degli altri nodi potrebbe essere necessario.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Attenzione: errore di lettura di wallet.dat! Tutte le chiavi sono state lette correttamente, ma i dati delle transazioni o della rubrica potrebbero essere mancanti o non corretti.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Attenzione: wallet.dat corrotto, dati recuperati! Il wallet.dat originale \u00e8 stato salvato come wallet.{timestamp}.bak in %s. Se i dati relativi a saldo o transazioni non dovessero risultare corretti si consiglia di procedere al ripristino da un backup.</translation>\n@@ -2925,10 +2900,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Error opening block database</source>\n         <translation>Errore durante l'apertura del database blocchi</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Errore: si \u00e8 verificato un errore interno fatale. Consulta il file debug.log for maggiori dettagli.</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Errore: la spazio libero sul disco \u00e8 insufficiente!</translation>\n@@ -2937,10 +2908,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Nessuna porta disponibile per l'ascolto. Usa -listen=0 se vuoi procedere comunque.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Se &lt;category&gt; non \u00e8 specificata, mostra tutte le informazioni di debug.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importazione...</translation>\n@@ -3041,18 +3008,10 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Errore: attesa per connessioni in arrivo fallita (errore riportato %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Errore: individuato argomento -socks non supportato. Non \u00e8 pi\u00f9 possibile impostare la versione SOCKS, solamente i proxy SOCKS5 sono supportati.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Esegue un comando in caso di ricezione di un allarme pertinente o se si rileva un fork molto lungo (%s in cmd \u00e8 sostituito dal messaggio)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Le commissioni (in BTC/kB) inferiori a questo valore sono considerate pari a zero relativamente alla trasmissione (predefinito: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Nel caso in cui paytxfee non sia impostato, include una commissione tale da ottenere un avvio delle conferme entro una media di n blocchi (predefinito: %u)</translation>\n@@ -3065,10 +3024,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Dimensione massima dei dati in transazioni di trasporto dati che saranno trasmesse ed incluse nei blocchi (predefinito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>La modalit\u00e0 prune \u00e8 configurata al di sotto del minimo di %d MB. Si prega di utilizzare un valore pi\u00f9 elevato.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Ottiene gli indirizzi dei peer attraverso interrogazioni DNS, in caso di scarsa disponibilit\u00e0 (predefinito: 1 a meno che -connect non sia specificato)</translation>\n@@ -3093,37 +3048,6 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Questo prodotto include software sviluppato dal progetto OpenSSL per l'uso del Toolkit OpenSSL &lt;https://www.openssl.org/&gt;, software crittografico scritto da Eric Young e software UPnP scritto da Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Per utilizzare bitcoind o l'opzione -server in Bitcoin Core \u00e8 necessario specificare una rpcpassword nel file di configurazione:\n-%s\n-Si raccomanda di utilizzare la seguente password casuale:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(non \u00e8 necessario ricordare questa password)\n-Il nome utente e la password NON DEVONO corrispondere.\n-Se il file non esiste si raccomanda di crearlo con permessi di lettura per il solo proprietario.\n-Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche di eventuali problemi, ad es. alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Attenzione: -maxtxfee \u00e8 impostato su un valore molto elevato. Tali commissioni potrebbero essere pagate anche in una singola transazione.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Attenzione: Si prega di verificare che data ed ora del computer siano corrette! Una configurazione errata dell'orologio di sistema potrebbe impedire a Bitcoin Core di funzionare regolarmente.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>I peer inclusi in whitelist non possono subire ban per DoS e le loro transazioni saranno sempre trasmesse, anche nel caso in cui si trovino gi\u00e0 nel mempool. Ci\u00f2 \u00e8 utile ad es. per i gateway</translation>\n@@ -3144,10 +3068,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Activating best chain...</source>\n         <translation>Attivazione della blockchain migliore...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>Impossibile operare con un portamonete in modalit\u00e0 prune.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Impossibile risolvere indirizzo -whitebind: '%s'</translation>\n@@ -3164,10 +3084,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i Gli sviluppatori di Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Non \u00e8 stato possibile riconoscere il valore %s di -rpcbind come indirizzo di rete</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Errore durante il caricamento del file wallet.dat: il portamonete richiede una versione di Bitcoin Core pi\u00f9 recente</translation>\n@@ -3176,14 +3092,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Error reading from database, shutting down.</source>\n         <translation>Errore durante lalettura del database. Arresto in corso.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Errore: Rilevato argomento -tor non supportato, utilizzare -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Commissione (in BTC/kB) da aggiungere alle transazioni che invii (predefinito: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informazioni</translation>\n@@ -3224,18 +3132,10 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Node relay options:</source>\n         <translation>Opzioni trasmissione nodo:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Opzioni RPC SSL: (consulta la Bitcoin Wiki per le istruzioni relative alla configurazione SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Opzioni server RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Supporto RPC per le connessioni HTTP persistenti (predefinito: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Ricostruzione dell'indice della block chain dai file blk000??.dat correnti all'avvio</translation>\n@@ -3312,10 +3212,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Impossibile associarsi a %s su questo computer (l'associazione ha restituito l'errore %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Usa UPnP per mappare la porta in ascolto (predefinito: 1 quando in ascolto)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nome utente per connessioni JSON-RPC</translation>\n@@ -3328,14 +3224,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Warning</source>\n         <translation>Attenzione</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Attenzione: Argomento -benchmark ignorato in quanto non supportato, usare -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Attenzione: Argomento -debugnet ignorato in quanto non supportato, usare -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Eliminazione dal portamonete di tutte le transazioni...</translation>\n@@ -3364,10 +3252,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Ripete la scansione della block chain per individuare le transazioni che mancano dal portamonete</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Utilizza OpenSSL (https) per le connessioni JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Questo messaggio di aiuto</translation>\n@@ -3412,10 +3296,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>(default: %s)</source>\n         <translation>(predefinito: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Cifrari accettabili (predefinito: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Interroga sempre i DNS per ottenere gli indirizzi dei peer (predefinito: %u)</translation>\n@@ -3476,14 +3356,6 @@ Si raccomanda inoltre di configurare alertnotify in modo da ricevere notifiche d\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Trasmette transazioni non-P2SH multisig (predefinito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>File del certificato del server (predefinito: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Chiave privata del server (predefinito: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Imposta la dimensione del pool di chiavi a &lt;n&gt; (predefinito: %u)</translation>"
      },
      {
        "sha": "5770fe9a02b66bc0b74d0c64cfc72cf9324ecbe4",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 248,
        "deletions": 153,
        "changes": 401,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ja\" version=\"2.0\">\n+<TS language=\"ja\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,17 @@\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u306e\u5909\u66f4\u304c\u6210\u529f\u3057\u307e\u3057\u305f\u3002</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP\u30a2\u30c9\u30ec\u30b9/\u30cd\u30c3\u30c8\u30de\u30b9\u30af</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>\u4ee5\u4e0b\u306e\u6642\u9593\u307e\u3067ban\u3059\u308b:</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -340,11 +351,11 @@\n     </message>\n     <message>\n         <source>&amp;Send</source>\n-        <translation>\u9001\u308b (&amp;S)</translation>\n+        <translation>\u9001\u91d1 (&amp;S)</translation>\n     </message>\n     <message>\n         <source>&amp;Receive</source>\n-        <translation>\u53d7\u4fe1 (&amp;R)</translation>\n+        <translation>\u5165\u91d1 (&amp;R)</translation>\n     </message>\n     <message>\n         <source>Show information about Bitcoin Core</source>\n@@ -787,15 +798,15 @@\n     </message>\n     <message>\n         <source>New receiving address</source>\n-        <translation>\u65b0\u3057\u3044\u53d7\u4fe1\u30a2\u30c9\u30ec\u30b9</translation>\n+        <translation>\u65b0\u3057\u3044\u5165\u91d1\u30a2\u30c9\u30ec\u30b9</translation>\n     </message>\n     <message>\n         <source>New sending address</source>\n         <translation>\u65b0\u3057\u3044\u9001\u4fe1\u30a2\u30c9\u30ec\u30b9</translation>\n     </message>\n     <message>\n         <source>Edit receiving address</source>\n-        <translation>\u53d7\u4fe1\u30a2\u30c9\u30ec\u30b9\u3092\u7de8\u96c6</translation>\n+        <translation>\u5165\u91d1\u30a2\u30c9\u30ec\u30b9\u3092\u7de8\u96c6</translation>\n     </message>\n     <message>\n         <source>Edit sending address</source>\n@@ -1068,6 +1079,34 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>\u30d7\u30ed\u30ad\u30b7\u306e\u30dd\u30fc\u30c8\u756a\u53f7 (\u4f8b 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>\u30d4\u30a2\u3078\u5230\u9054\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u305f\u65b9\u6cd5:</translation>\n+    </message>\n+    <message>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>\u3053\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30bf\u30a4\u30d7\u7d4c\u7531\u3067\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u306eSOCKS5\u30d7\u30ed\u30ad\u30b7\u3092\u4f7f\u7528\u3057\u3066\u30d4\u30a2\u306b\u5230\u9054\u3057\u305f\u5834\u5408\u306b\u8868\u793a\u3059\u308b\u3002</translation>\n+    </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n+        <translation>Tor\u79d8\u533f\u30b5\u30fc\u30d3\u30b9\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u3001\u72ec\u7acb\u306aSOCKS5\u30d7\u30ed\u30ad\u30b7\u7d4c\u7531\u3067Bitcoin\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u63a5\u7d9a\u3059\u308b</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Tor\u79d8\u533f\u30b5\u30fc\u30d3\u30b9\u7d4c\u7531\u3067\u30d4\u30a2\u306b\u5230\u9054\u3059\u308b\u305f\u3081\u3001\u72ec\u7acb\u306aSOCKS5\u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3059\u308b:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>\u30a6\u30a4\u30f3\u30c9\u30a6 (&amp;W)</translation>\n@@ -1286,10 +1325,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>\u652f\u6255\u30ea\u30af\u30a8\u30b9\u30c8 %1 \u306f\u5927\u304d\u3059\u304e\u307e\u3059\uff08%2\u30d0\u30a4\u30c8\u3067\u3059\u304c\u3001%3\u30d0\u30a4\u30c8\u307e\u3067\u304c\u8a31\u3055\u308c\u3066\u3044\u307e\u3059\uff09\u3002</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>\u652f\u6255\u30ea\u30af\u30a8\u30b9\u30c8DoS\u4fdd\u8b77</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>%1: %2\u3068\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30a8\u30e9\u30fc\u3067\u3059</translation>\n@@ -1458,10 +1493,18 @@\n         <source>&amp;Peers</source>\n         <translation>\u30d4\u30a2 (&amp;P)</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>Ban\u3055\u308c\u305f\u30d4\u30a2</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>\u8a73\u3057\u3044\u60c5\u5831\u3092\u898b\u305f\u3044\u30d4\u30a2\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>\u65b9\u5411</translation>\n@@ -1471,20 +1514,24 @@\n         <translation>\u30d0\u30fc\u30b8\u30e7\u30f3</translation>\n     </message>\n     <message>\n-        <source>User Agent</source>\n-        <translation>\u30e6\u30fc\u30b6\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8</translation>\n+        <source>Starting Block</source>\n+        <translation>\u958b\u59cb\u30d6\u30ed\u30c3\u30af</translation>\n     </message>\n     <message>\n-        <source>Services</source>\n-        <translation>\u30b5\u30fc\u30d3\u30b9</translation>\n+        <source>Synced Headers</source>\n+        <translation>\u540c\u671f\u6e08\u307f\u30d8\u30c3\u30c0</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>\u958b\u59cb\u6642\u306e\u30d6\u30ed\u30c3\u30af\u9ad8</translation>\n+        <source>Synced Blocks</source>\n+        <translation>\u540c\u671f\u6e08\u307f\u30d6\u30ed\u30c3\u30af</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>\u540c\u671f\u6e08\u307f\u30d6\u30ed\u30c3\u30af\u9ad8</translation>\n+        <source>User Agent</source>\n+        <translation>\u30e6\u30fc\u30b6\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8</translation>\n+    </message>\n+    <message>\n+        <source>Services</source>\n+        <translation>\u30b5\u30fc\u30d3\u30b9</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1514,6 +1561,14 @@\n         <source>Ping Time</source>\n         <translation>Ping\u6642\u9593</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>\u73fe\u5728\u5b9f\u884c\u4e2d\u306eping\u306b\u304b\u304b\u3063\u3066\u3044\u308b\u6642\u9593\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>Ping\u5f85\u3061</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>\u6642\u9593\u30aa\u30d5\u30bb\u30c3\u30c8</translation>\n@@ -1562,6 +1617,34 @@\n         <source>Clear console</source>\n         <translation>\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u30af\u30ea\u30a2</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>\u30ce\u30fc\u30c9\u3092\u5207\u65ad\u3059\u308b (&amp;D)</translation>\n+    </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>\u30ce\u30fc\u30c9\u3092ban\u3059\u308b:</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1\u6642\u9593 (&amp;H)</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1\u65e5 (&amp;D)</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1\u9031\u9593 (&amp;W)</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1\u5e74 (&amp;Y)</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>\u30ce\u30fc\u30c9\u306eban\u3092\u89e3\u9664\u3059\u308b (&amp;U)</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>Bitcoin Core\u306eRPC\u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u3088\u3046\u3053\u305d\u3002</translation>\n@@ -1590,6 +1673,10 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(\u30ce\u30fc\u30c9ID: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>%1\u7d4c\u7531</translation>\n@@ -1607,12 +1694,16 @@\n         <translation>\u5916\u5411\u304d</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>\u672a\u77e5</translation>\n+        <source>Yes</source>\n+        <translation>\u306f\u3044</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>\u53d6\u5f97\u4e2d\u2026\u2026</translation>\n+        <source>No</source>\n+        <translation>\u3044\u3044\u3048</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>\u672a\u77e5</translation>\n     </message>\n </context>\n <context>\n@@ -1940,7 +2031,7 @@\n     </message>\n     <message>\n         <source>S&amp;end</source>\n-        <translation>\u9001\u308b (&amp;e)</translation>\n+        <translation>\u9001\u91d1 (&amp;E)</translation>\n     </message>\n     <message>\n         <source>Confirm send coins</source>\n@@ -1978,10 +2069,6 @@\n         <source>Copy change</source>\n         <translation>\u91e3\u308a\u92ad\u3092\u30b3\u30d4\u30fc</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u7dcf\u9001\u91d1\u984d %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u307e\u305f\u306f</translation>\n@@ -2022,6 +2109,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>\u6700\u5c0f\u624b\u6570\u6599 %1 \u306e\u307f\u3092\u652f\u6255\u3046</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>\u7dcf\u984d %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u53d7\u53d6\u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002\u518d\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n@@ -2528,7 +2619,7 @@\n     </message>\n     <message>\n         <source>Received with</source>\n-        <translation>\u53d7\u4fe1\u5143</translation>\n+        <translation>\u53d7\u3051\u53d6\u308a</translation>\n     </message>\n     <message>\n         <source>Received from</source>\n@@ -2800,13 +2891,57 @@\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3068 JSON-RPC \u30b3\u30de\u30f3\u30c9\u3092\u8a31\u53ef</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n+        <translation>\u4e2d\u7d99\u306e\u969b\u3001\u3053\u306e\u5024\u672a\u6e80\u306e\u624b\u6570\u6599 (%s/kB\u5358\u4f4d) \u306f\u30bc\u30ed\u3067\u3042\u308b\u3068\u307f\u306a\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8: %s)</translation>\n+    </message>\n+    <message>\n+        <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n+        <translation>&lt;category&gt; \u304c\u4e0e\u3048\u3089\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u3084 &lt;category&gt; = 1 \u306e\u5834\u5408\u306b\u306f\u3001\u3059\u3079\u3066\u306e\u30c7\u30d0\u30c3\u30b0\u60c5\u5831\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>\u3072\u3068\u3064\u306e\u30a6\u30a9\u30ec\u30c3\u30c8\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u5408\u8a08\u624b\u6570\u6599 (%s \u5358\u4f4d) \u306e\u6700\u5927\u5024\u3002\u4f4e\u3059\u304e\u308b\u5024\u3092\u6307\u5b9a\u3059\u308b\u3068\u5de8\u5927\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059 (\u898f\u5b9a\u5024: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>\u3042\u306a\u305f\u306ePC\u306e\u65e5\u4ed8\u3068\u6642\u523b\u304c\u6b63\u3057\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\uff01 \u3082\u3057\u3042\u306a\u305f\u306e\u6642\u8a08\u304c\u6b63\u3057\u304f\u306a\u3051\u308c\u3070Bitcoin Core\u304c\u6b63\u78ba\u306b\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>\u526a\u5b9a\u304c\u6700\u5c0f\u5024\u306e %d MiB\u4ee5\u4e0b\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3063\u3068\u5927\u304d\u306a\u5024\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation>\u526a\u5b9a: \u6700\u5f8c\u306e\u30a6\u30a9\u30ec\u30c3\u30c8\u540c\u671f\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u9078\u5b9a\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3088\u308a\u3082\u904e\u53bb\u306e\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002-reindex\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 (\u526a\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9\u306e\u5834\u5408\u3001\u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30a4\u30f3\u5168\u4f53\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>\u53e4\u3044\u30d6\u30ed\u30c3\u30af\u3092\u526a\u5b9a\u3059\u308b (\u524a\u9664\u3059\u308b) \u3053\u3068\u3067\u8a18\u61b6\u5bb9\u91cf\u306e\u5fc5\u8981\u91cf\u3092\u524a\u6e1b\u3059\u308b\u3002\u3053\u306e\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b\u3068-txindex\u3084-rescan\u3068\u4e92\u63db\u6027\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u8b66\u544a: \u3053\u306e\u8a2d\u5b9a\u306e\u518d\u6709\u52b9\u5316\u306b\u306f\u5168\u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30a4\u30f3\u306e\u518d\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002(\u898f\u5b9a\u5024: 0 = \u30d6\u30ed\u30c3\u30af\u306e\u526a\u5b9a\u7121\u52b9\u3001&gt;%u = \u30d6\u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\u306b\u4f7f\u7528\u3059\u308bMiB\u5358\u4f4d\u306e\u76ee\u6a19\u30b5\u30a4\u30ba)</translation>\n+    </message>\n+    <message>\n+        <source>Rescans are not possible in pruned mode. You will need to use -reindex which will download the whole blockchain again.</source>\n+        <translation>\u526a\u5b9a\u30e2\u30fc\u30c9\u3067\u306f\u518d\u30b9\u30ad\u30e3\u30f3\u3092\u884c\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002-reindex\u3092\u6307\u5b9a\u3057\u3001\u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30a4\u30f3\u5168\u4f53\u3092\u518d\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>\u30a8\u30e9\u30fc\uff1a\u81f4\u547d\u7684\u306a\u5185\u90e8\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u8a73\u7d30\u306fdebug.log\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</translation>\n+    </message>\n+    <message>\n+        <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n+        <translation>\u9001\u4fe1\u3059\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u4ed8\u52a0\u3059\u308b\u624b\u6570\u6599 (%s/kB\u5358\u4f4d) (\u521d\u671f\u5024: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>\u30d6\u30ed\u30c3\u30af\u30c7\u30fc\u30bf\u3092\u526a\u5b9a\u3057\u3066\u3044\u307e\u3059\u2026\u2026</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u30c7\u30fc\u30e2\u30f3\u3068\u3057\u3066\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u5b9f\u884c\u3057\u30b3\u30de\u30f3\u30c9\u3092\u8a31\u53ef</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u7528</translation>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>HTTP\u30b5\u30fc\u30d0\u3092\u958b\u59cb\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u8a73\u7d30\u306f\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2828,18 +2963,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u53d6\u5f15\u3092\u5909\u66f4\u3059\u308b\u969b\u306b\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c (cmd \u306e %s \u306f TxID \u306b\u7f6e\u63db\u3055\u308c\u308b)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>\u3072\u3068\u3064\u306e\u30a6\u30a9\u30ec\u30c3\u30c8\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u5408\u8a08\u624b\u6570\u6599\u306e\u6700\u5927\u5024\u3002\u4f4e\u3059\u304e\u308b\u5024\u3092\u6307\u5b9a\u3059\u308b\u3068\u5de8\u5927\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059 (\u898f\u5b9a\u5024: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>\u53e4\u3044\u30d6\u30ed\u30c3\u30af\u3092\u526a\u5b9a\u3059\u308b\uff08\u524a\u9664\u3059\u308b\uff09\u3053\u3068\u3067\u8a18\u61b6\u5bb9\u91cf\u306e\u5fc5\u8981\u91cf\u3092\u524a\u6e1b\u3059\u308b\u3002\u3053\u306e\u30e2\u30fc\u30c9\u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u30a6\u30a9\u30ec\u30c3\u30c8\u6a5f\u80fd\u306e\u30b5\u30dd\u30fc\u30c8\u306f\u7121\u52b9\u306b\u306a\u308a\u3001-txindex\u3068\u3082\u4e92\u63db\u6027\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u8b66\u544a: \u3053\u306e\u8a2d\u5b9a\u306e\u518d\u6709\u52b9\u5316\u306b\u306f\u5168\u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30a4\u30f3\u306e\u518d\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002(\u898f\u5b9a\u5024: 0 = \u30d6\u30ed\u30c3\u30af\u306e\u526a\u5b9a\u7121\u52b9\u3001&gt;%u = \u30d6\u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\u306b\u4f7f\u7528\u3059\u308bMiB\u5358\u4f4d\u306e\u76ee\u6a19\u30b5\u30a4\u30ba)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>\u30b9\u30af\u30ea\u30d7\u30c8\u691c\u8a3c\u30b9\u30ec\u30c3\u30c9\u3092\u8a2d\u5b9a (%u\u304b\u3089%d\u306e\u9593, 0 = \u81ea\u52d5, &lt;0 = \u305f\u304f\u3055\u3093\u306e\u30b3\u30a2\u3092\u81ea\u7531\u306b\u3057\u3066\u304a\u304f, \u521d\u671f\u5024: %d)</translation>\n     </message>\n+    <message>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n+        <translation>\u30d6\u30ed\u30c3\u30af\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u672a\u6765\u306e\u6642\u523b\u306e\u30d6\u30ed\u30c3\u30af\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u304a\u305d\u3089\u304f\u304a\u4f7f\u3044\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u65e5\u6642\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u304a\u4f7f\u3044\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u65e5\u6642\u304c\u672c\u5f53\u306b\u6b63\u3057\u3044\u5834\u5408\u306b\u306e\u307f\u3001\u30d6\u30ed\u30c3\u30af\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u518d\u69cb\u7bc9\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n+    </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u3053\u308c\u306f\u30ea\u30ea\u30fc\u30b9\u524d\u306e\u30c6\u30b9\u30c8\u30d3\u30eb\u30c9\u3067\u3059 - \u5404\u81ea\u306e\u8cac\u4efb\u3067\u5229\u7528\u3059\u308b\u3053\u3068 - \u63a1\u6398\u3084\u5546\u53d6\u5f15\u306b\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044</translation>\n@@ -2848,6 +2979,10 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u3053\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e %s \u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u304a\u305d\u3089\u304f Bitcoin Core \u306f\u65e2\u306b\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002</translation>\n     </message>\n+    <message>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n+        <translation>\u30ea\u30b9\u30f3 \u30dd\u30fc\u30c8\u306e\u5272\u5f53\u306b UPnP \u3092\u4f7f\u7528 (\u521d\u671f\u5024: \u30ea\u30b9\u30f3\u4e2d\u304a\u3088\u3073-proxy\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f1)</translation>\n+    </message>\n     <message>\n         <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u8b66\u544a\uff1a\u7570\u5e38\u306b\u591a\u304f\u306e\u6570\u306e\u30d6\u30ed\u30c3\u30af\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002%d \u30d6\u30ed\u30c3\u30af\u304c\u6700\u8fd1 %d \u6642\u9593\u4ee5\u5185\u306b\u53d7\u3051\u53d6\u3089\u308c\u307e\u3057\u305f\u3002(\u671f\u5f85\u5024: %d)</translation>\n@@ -2856,10 +2991,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u8b66\u544a\uff1a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002%d \u30d6\u30ed\u30c3\u30af\u304c\u6700\u8fd1 %d \u6642\u9593\u4ee5\u5185\u306b\u306b\u53d7\u3051\u53d6\u3089\u308c\u307e\u3057\u305f\u3002(\u671f\u5f85\u5024: %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u8b66\u544a: -paytxfee \u304c\u975e\u5e38\u306b\u9ad8\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059! \u3053\u308c\u306f\u53d6\u5f15\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306b\u652f\u6255\u3046\u53d6\u5f15\u624b\u6570\u6599\u3067\u3059\u3002</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>\u8b66\u544a\uff1a \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u5b8c\u5168\u306b\u540c\u610f\u3057\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u3002\u30de\u30a4\u30ca\u30fc\u306f\u4f55\u304b\u306e\u554f\u984c\u3092\u7d4c\u9a13\u3057\u3066\u308b\u307f\u305f\u3044\u306a\u3093\u3067\u3059\u3002</translation>\n@@ -2868,10 +2999,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>\u8b66\u544a\uff1a \u30d4\u30a2\u30fc\u3068\u5b8c\u5168\u306b\u540c\u610f\u3057\u306a\u3044\u307f\u305f\u3044\u3067\u3059\uff01\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u5fc5\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3001\u305d\u308c\u3068\u3082\u4ed6\u306e\u30ce\u30fc\u30c9\u306f\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u5fc5\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\u8b66\u544a: wallet.dat \u306e\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc! \u3059\u3079\u3066\u306e\u30ad\u30fc\u306f\u6b63\u3057\u304f\u8aad\u307f\u53d6\u308c\u307e\u3059\u304c\u3001\u53d6\u5f15\u30c7\u30fc\u30bf\u3084\u30a2\u30c9\u30ec\u30b9\u5e33\u306e\u30a8\u30f3\u30c8\u30ea\u304c\u5931\u308f\u308c\u305f\u304b\u3001\u6b63\u3057\u304f\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u8b66\u544a: wallet.dat \u304c\u58ca\u308c\u305f\u306e\u3067\u30c7\u30fc\u30bf\u3092\u5fa9\u65e7\u3057\u307e\u3057\u305f! \u30aa\u30ea\u30b8\u30ca\u30eb\u306e wallet.dat \u306f wallet.{timestamp}.bak \u3068\u3057\u3066 %s \u306b\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f; \u3082\u3057\u3082\u3042\u306a\u305f\u306e\u6b8b\u9ad8\u3084\u53d6\u5f15\u304c\u6b63\u3057\u304f\u306a\u3044\u306a\u3089\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u304b\u3089\u5fa9\u5143\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n@@ -2884,6 +3011,10 @@\n         <source>(default: 1)</source>\n         <translation>(\u30c7\u30d5\u30a9\u30eb\u30c8: 1)</translation>\n     </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>-maxmempool\u306f\u6700\u4f4e\u3067\u3082 %d MB\u5fc5\u8981\u3067\u3059</translation>\n+    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt;\u306f\u4ee5\u4e0b\u306e\u5024\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff1a</translation>\n@@ -2921,6 +3052,22 @@\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\u30d6\u30ed\u30c3\u30af \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4eca\u3059\u3050\u518d\u69cb\u7bc9\u3057\u307e\u3059\u304b?</translation>\n     </message>\n+    <message>\n+        <source>Enable publish hash block in &lt;address&gt;</source>\n+        <translation>&lt;address&gt;\u306b\u5bfe\u3057\u3001\u30cf\u30c3\u30b7\u30e5\u30d6\u30ed\u30c3\u30af\u306e\u516c\u958b\u3092\u6709\u52b9\u306b\u3059\u308b</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish hash transaction in &lt;address&gt;</source>\n+        <translation>&lt;address&gt; \u306b\u5bfe\u3057\u3001\u30cf\u30c3\u30b7\u30e5\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u516c\u958b\u3092\u6709\u52b9\u306b\u3059\u308b</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw block in &lt;address&gt;</source>\n+        <translation>&lt;address&gt; \u306b\u5bfe\u3057\u3001\u751f\u30d6\u30ed\u30c3\u30af\u306e\u516c\u958b\u3092\u6709\u52b9\u306b\u3059\u308b</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw transaction in &lt;address&gt;</source>\n+        <translation>&lt;address&gt; \u306b\u5bfe\u3057\u3001\u751f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u516c\u958b\u3092\u6709\u52b9\u306b\u3059\u308b</translation>\n+    </message>\n     <message>\n         <source>Error initializing block database</source>\n         <translation>\u30d6\u30ed\u30c3\u30af \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u521d\u671f\u5316\u4e2d\u306b\u30a8\u30e9\u30fc</translation>\n@@ -2937,10 +3084,6 @@\n         <source>Error opening block database</source>\n         <translation>\u30d6\u30ed\u30c3\u30af \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u958b\u59cb\u30a8\u30e9\u30fc</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>\u30a8\u30e9\u30fc\uff1a\u81f4\u547d\u7684\u306a\u5185\u90e8\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u8a73\u7d30\u306fdebug.log\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>\u30a8\u30e9\u30fc: \u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u4e0d\u8db3!</translation>\n@@ -2949,10 +3092,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u30dd\u30fc\u30c8\u306e\u30ea\u30b9\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u5fc5\u8981\u3067\u3042\u308c\u3070 -listen=0 \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>&lt;category&gt; \u304c\u4e0e\u3048\u3089\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u3059\u3079\u3066\u306e\u30c7\u30d0\u30c3\u30b0\u60c5\u5831\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u2026\u2026</translation>\n@@ -2965,6 +3104,10 @@\n         <source>Invalid -onion address: '%s'</source>\n         <translation>\u7121\u52b9\u306a -onion \u30a2\u30c9\u30ec\u30b9\uff1a'%s'</translation>\n     </message>\n+    <message>\n+        <source>Keep the transaction memory pool below &lt;n&gt; megabytes (default: %u)</source>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30e1\u30e2\u30ea\u30fb\u30d7\u30fc\u30eb\u306e\u7dcf\u91cf\u3092 &lt;n&gt; \u30e1\u30ac\u30d0\u30a4\u30c8\u4ee5\u4e0b\u306b\u7dad\u6301\u3059\u308b (\u521d\u671f\u5024: %u)</translation>\n+    </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n         <translation>\u4f7f\u7528\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002</translation>\n@@ -2993,10 +3136,26 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3000(\u30c7\u30fc\u30bf\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b)</translation>\n     </message>\n+    <message>\n+        <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation>\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5f15\u6570 -benchmark \u306f\u7121\u8996\u3055\u308c\u307e\u3057\u305f\u3002-debug=bench \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation>\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5f15\u6570 -debugnet \u306f\u7121\u8996\u3055\u308c\u307e\u3057\u305f\u3002-debug=net \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -tor found, use -onion.</source>\n+        <translation>\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5f15\u6570 -tor \u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002-onion \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>\u30ea\u30c3\u30b9\u30f3\u30dd\u30fc\u30c8\u306e\u5272\u5f53\u306b UPnP \u3092\u4f7f\u7528 (\u521d\u671f\u5024: %u)</translation>\n     </message>\n+    <message>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation>\u30e6\u30fc\u30b6\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u30b3\u30e1\u30f3\u30c8 (%s) \u306b\u306f\u5b89\u5168\u3067\u306a\u3044\u6587\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u30d6\u30ed\u30c3\u30af\u306e\u691c\u8a3c\u4e2d...</translation>\n@@ -3029,10 +3188,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>\u6307\u5b9a\u3057\u305f\u30a2\u30af\u30bb\u30b9\u5143\u304b\u3089\u306eJSON-RPC\u63a5\u7d9a\u3092\u8a31\u53ef\u3059\u308b\u3002\u6709\u52b9\u306a&lt;ip&gt;\u306f\u3001\u5358\u4e00\u306eIP (\u4f8b 1.2.3.4)\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af/\u30cd\u30c3\u30c8\u30de\u30b9\u30af (1.2.3.4/255.255.255.0)\u3001\u307e\u305f\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af/CIDR (1.2.3.4/24)\u3067\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u8907\u6570\u56de\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>\u30ea\u30c3\u30b9\u30f3\u3059\u308b RPC \u30a2\u30c9\u30ec\u30b9 %s\u3001\u30dd\u30fc\u30c8 %u \u306e\u8a2d\u5b9a\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30c9\u30ec\u30b9\u304a\u3088\u3073\u3001\u305d\u3053\u306b\u63a5\u7d9a\u3092\u884c\u3063\u3066\u304d\u305f\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8\u306e\u30d4\u30a2\u306b\u5bfe\u3057\u3066\u30d0\u30a4\u30f3\u30c9\u3092\u884c\u3044\u307e\u3059\u3002IPv6\u306e\u5834\u5408\u306b\u306f [host]:port \u8868\u8a18\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044</translation>\n@@ -3057,18 +3212,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\u30a8\u30e9\u30fc: \u5185\u5411\u304d\u306e\u63a5\u7d9a\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u306e\u306b\u5931\u6557\u3057\u307e\u3057\u305f (\u30a8\u30e9\u30fc %s \u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>\u30a8\u30e9\u30fc: \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5f15\u6570 -socks \u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002SOCKS\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u8a2d\u5b9a\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002SOCKS5\u30d7\u30ed\u30ad\u30b7\u306e\u307f\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>\u95a2\u9023\u306e\u30a2\u30e9\u30fc\u30c8\u3092\u3082\u3089\u3063\u3066\u3082\u3059\u3054\u304f\u9577\u3044\u306e\u30d5\u30a9\u30fc\u30af\u3092\u898b\u3066\u3082\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c (\u30b3\u30de\u30f3\u30c9\u306e\u4e2d\u306b\u3042\u308b\u306e%s\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u7f6e\u304d\u63db\u3048\u3055\u305b\u308b)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>\u4e2d\u7d99\u306e\u969b\u3001\u3053\u306e\u5024\u672a\u6e80\u306e\u624b\u6570\u6599 (BTC/Kb\u5358\u4f4d) \u306f\u30bc\u30ed\u3067\u3042\u308b\u3068\u307f\u306a\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>paytxfee \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u5e73\u5747\u3057\u3066 n \u30d6\u30ed\u30c3\u30af\u4ee5\u5185\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u691c\u8a3c\u3055\u308c\u59cb\u3081\u308b\u306e\u306b\u5341\u5206\u306a\u624b\u6570\u6599\u3092\u542b\u3081\u308b (\u521d\u671f\u5024: %u)</translation>\n@@ -3081,10 +3228,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>\u4e2d\u7d99\u304a\u3088\u3073\u63a1\u6398\u3092\u884c\u3046\u969b\u306e\u3001\u30c7\u30fc\u30bf\u904b\u9001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u306e\u30c7\u30fc\u30bf\u306e\u6700\u5927\u30b5\u30a4\u30ba (\u521d\u671f\u5024: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>\u526a\u5b9a\u304c\u6700\u5c0f\u5024\u306e %d MB\u4ee5\u4e0b\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3063\u3068\u5927\u304d\u306a\u5024\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>\u4fdd\u6709\u3059\u308b\u30d4\u30a2\u30a2\u30c9\u30ec\u30b9\u304c\u5c11\u306a\u3044\u5834\u5408\u3001DNS \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u306b\u3088\u308a\u30d4\u30a2\u30a2\u30c9\u30ec\u30b9\u3092\u554f\u3044\u5408\u308f\u305b\u308b (-connect \u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u521d\u671f\u5024: 1)</translation>\n@@ -3109,38 +3252,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>\u3053\u306e\u88fd\u54c1\u306fOpenSSL\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3088\u308a\u958b\u767a\u3055\u308c\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092OpenSSL\u30c4\u30fc\u30eb\u30ad\u30c3\u30c8\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u307e\u3059 &lt;https://www.openssl.org/&gt;\u3002\u307e\u305f\u3001Eric Young\u6c0f\u306b\u3088\u308a\u958b\u767a\u3055\u308c\u305f\u6697\u53f7\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3001Thomas Bernard\u6c0f\u306b\u3088\u308a\u66f8\u304b\u308c\u305fUPnP\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u7528\u3044\u3066\u3044\u307e\u3059\u3002</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>bitcoind\u3092\u7528\u3044\u308b\u5834\u5408\u3084\u3001-server \u30aa\u30d7\u30b7\u30e7\u30f3\u3092bitcoin-qt\u306b\u6307\u5b9a\u3059\u308b\u5834\u5408\u306b\u306f\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306brpcpassword\u3092\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093:\n-%s\n-\u4ee5\u4e0b\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(\u3053\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6697\u8a18\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093)\n-\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u4e00\u81f4\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n-\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u6240\u6709\u8005\u306e\u307f\u8aad\u307f\u8fbc\u307f\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30eb\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n-\u307e\u305falertnotify\u3092\u8a2d\u5b9a\u3057\u3001\u554f\u984c\u767a\u751f\u6642\u306b\u901a\u77e5\u304c\u884c\u304f\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059;\n-\u4f8b: alertnotify=echo %%s | mail -s \"Bitcoin\u30a2\u30e9\u30fc\u30c8\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>\u8b66\u544a: -maxtxfee \u304c\u975e\u5e38\u306b\u9ad8\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff01\u3072\u3068\u3064\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u3053\u306e\u91cf\u306e\u624b\u6570\u6599\u304c\u652f\u6255\u308f\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>\u8b66\u544a\uff1a \u3042\u306a\u305f\u306ePC\u306e\u65e5\u4ed8\u3068\u6642\u523b\u304c\u6b63\u3057\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\uff01 \u3082\u3057\u3042\u306a\u305f\u306e\u6642\u8a08\u304c\u6b63\u3057\u304f\u306a\u3051\u308c\u3070Bitcoin Core\u304c\u6b63\u78ba\u306b\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>\u30db\u30ef\u30a4\u30c8\u30ea\u30b9\u30c8\u306e\u30d4\u30a2\u306fDoS\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\u7981\u6b62\u51e6\u7406\u304c\u7121\u52b9\u5316\u3055\u308c\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u4f8b\u3048mempool\u5185\u306b\u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u305f\u3068\u3057\u3066\u3082\u5e38\u306b\u30ea\u30ec\u30fc\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u4f8b\u3048\u3070\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306b\u5bfe\u3057\u3066\u6709\u7528\u3067\u3059</translation>\n@@ -3161,10 +3272,6 @@ rpcpassword=%s\n         <source>Activating best chain...</source>\n         <translation>\u6700\u512a\u826f\u306e\u30c1\u30a7\u30a4\u30f3\u3092\u6709\u52b9\u5316\u3057\u3066\u3044\u307e\u3059...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>\u526a\u5b9a\u30e2\u30fc\u30c9\u3067\u306f\u30a6\u30a9\u30ec\u30c3\u30c8\u6a5f\u80fd\u4ed8\u304d\u3067\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3002</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>-whitebind \u30a2\u30c9\u30ec\u30b9 '%s' \u3092\u89e3\u6c7a\u3067\u304d\u307e\u305b\u3093</translation>\n@@ -3181,10 +3288,6 @@ rpcpassword=%s\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i Bitcoin Core \u958b\u767a\u8005</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>-rpcbind \u306e\u5024 %s \u3092\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30c9\u30ec\u30b9\u3068\u3057\u3066\u89e3\u91c8\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>wallet.dat \u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u307e\u3057\u305f: \u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\u306b\u306f\u3088\u308a\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Bitcoin Core \u304c\u5fc5\u8981\u3067\u3059</translation>\n@@ -3193,14 +3296,6 @@ rpcpassword=%s\n         <source>Error reading from database, shutting down.</source>\n         <translation>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc\u3002\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>\u30a8\u30e9\u30fc: \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5f15\u6570 -tor \u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002-onion \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>\u9001\u4fe1\u3059\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u4ed8\u52a0\u3059\u308b\u624b\u6570\u6599 (BTC/kB\u5358\u4f4d) (\u521d\u671f\u5024: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>\u60c5\u5831</translation>\n@@ -3241,18 +3336,10 @@ rpcpassword=%s\n         <source>Node relay options:</source>\n         <translation>\u30ce\u30fc\u30c9\u4e2d\u7d99\u30aa\u30d7\u30b7\u30e7\u30f3:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL \u30aa\u30d7\u30b7\u30e7\u30f3: (SSL\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u306f\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3Wiki\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC\u30b5\u30fc\u30d0\u306e\u30aa\u30d7\u30b7\u30e7\u30f3:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC\u306b\u304a\u3051\u308bHTTP\u306e\u6301\u7d9a\u7684\u63a5\u7d9a\u306e\u30b5\u30dd\u30fc\u30c8 (\u521d\u671f\u5024: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>\u8d77\u52d5\u6642\u306b\u73fe\u5728\u306e blk000??.dat \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d6\u30ed\u30c3\u30af \u30c1\u30a7\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u518d\u69cb\u7bc9</translation>\n@@ -3261,6 +3348,10 @@ rpcpassword=%s\n         <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation>P2P\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30a2\u30e9\u30fc\u30c8\u306e\u53d7\u3051\u53d6\u308a\u3068\u8868\u793a\u3092\u884c\u3046 (\u30c7\u30d5\u30a9\u30eb\u30c8: %u)</translation>\n     </message>\n+    <message>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n+        <translation>\u30b7\u30b9\u30c6\u30e0\u4e0a\u306e\u5236\u7d04\u304b\u3089\u3001-maxconnections \u3092 %d \u304b\u3089 %d \u306b\u524a\u6e1b\u3057\u307e\u3057\u305f\u3002</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u30c8\u30ec\u30fc\u30b9/\u30c7\u30d0\u30c3\u30b0\u60c5\u5831\u3092 debug.log \u30d5\u30a1\u30a4\u30eb\u306e\u4ee3\u308f\u308a\u306b\u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u9001\u308b</translation>\n@@ -3329,10 +3420,6 @@ rpcpassword=%s\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u3053\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e %s \u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093 (\u30d0\u30a4\u30f3\u30c9\u304c\u8fd4\u3057\u305f\u30a8\u30e9\u30fc\u306f %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u30ea\u30b9\u30f3 \u30dd\u30fc\u30c8\u306e\u5272\u5f53\u306b UPnP \u3092\u4f7f\u7528 (\u521d\u671f\u5024: \u30ea\u30b9\u30f3\u4e2d\u306f1)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>JSON-RPC \u63a5\u7d9a\u306e\u30e6\u30fc\u30b6\u30fc\u540d</translation>\n@@ -3345,18 +3432,14 @@ rpcpassword=%s\n         <source>Warning</source>\n         <translation>\u8b66\u544a</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>\u8b66\u544a: \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5f15\u6570 -benchmark \u306f\u7121\u8996\u3055\u308c\u307e\u3057\u305f\u3002-debug=bench \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>\u8b66\u544a: \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5f15\u6570 -debugnet \u306f\u7121\u8996\u3055\u308c\u307e\u3057\u305f\u3002-debug=net \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u304b\u3089\u3059\u3079\u3066\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6d88\u53bb\u3057\u3066\u3044\u307e\u3059...</translation>\n     </message>\n+    <message>\n+        <source>ZeroMQ notification options:</source>\n+        <translation>ZeroMQ\u901a\u77e5\u30aa\u30d7\u30b7\u30e7\u30f3:</translation>\n+    </message>\n     <message>\n         <source>on startup</source>\n         <translation>\u8d77\u52d5\u6642</translation>\n@@ -3381,10 +3464,6 @@ rpcpassword=%s\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u5931\u3063\u305f\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u53d6\u5f15\u306e\u30d6\u30ed\u30c3\u30af \u30c1\u30a7\u30fc\u30f3\u3092\u518d\u30b9\u30ad\u30e3\u30f3</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>JSON-RPC \u63a5\u7d9a\u306b OpenSSL (https) \u3092\u4f7f\u7528</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u3053\u306e\u30d8\u30eb\u30d7 \u30e1\u30c3\u30bb\u30fc\u30b8</translation>\n@@ -3405,6 +3484,22 @@ rpcpassword=%s\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3001\u4f8b\u3048\u3070\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u6240\u6709\u8005\u3084\u652f\u6255\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5185\u5bb9\u3092\u4fdd\u6301\u3059\u308b, 2 = \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u7834\u68c4\u3059\u308b)</translation>\n     </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>-maxtxfee \u304c\u975e\u5e38\u306b\u9ad8\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff01\u3072\u3068\u3064\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u3053\u306e\u91cf\u306e\u624b\u6570\u6599\u304c\u652f\u6255\u308f\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</translation>\n+    </message>\n+    <message>\n+        <source>-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>-paytxfee \u304c\u975e\u5e38\u306b\u9ad8\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059! \u3053\u308c\u306f\u53d6\u5f15\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306b\u652f\u6255\u3046\u53d6\u5f15\u624b\u6570\u6599\u3067\u3059\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Do not keep transactions in the mempool longer than &lt;n&gt; hours (default: %u)</source>\n+        <translation>mempool\u5185\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092 &lt;n&gt; \u6642\u9593\u4ee5\u4e0a\u4fdd\u6301\u3057\u306a\u3044 (\u521d\u671f\u5024: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>wallet.dat \u306e\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc! \u3059\u3079\u3066\u306e\u30ad\u30fc\u306f\u6b63\u3057\u304f\u8aad\u307f\u53d6\u308c\u307e\u3059\u304c\u3001\u53d6\u5f15\u30c7\u30fc\u30bf\u3084\u30a2\u30c9\u30ec\u30b9\u5e33\u306e\u30a8\u30f3\u30c8\u30ea\u304c\u5931\u308f\u308c\u305f\u304b\u3001\u6b63\u3057\u304f\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>-checkblocks \u306e\u30d6\u30ed\u30c3\u30af\u306e\u691c\u8a3c\u30ec\u30d9\u30eb (0-4, \u521d\u671f\u5024: %u)</translation>\n@@ -3421,6 +3516,18 @@ rpcpassword=%s\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>\u30c7\u30d0\u30c3\u30b0\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b (\u521d\u671f\u5024: %u, &lt;category&gt; \u306e\u6307\u5b9a\u306f\u4efb\u610f\u3067\u3059)</translation>\n     </message>\n+    <message>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation>\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d0\u30fc\u30b8\u30e7\u30f3\u6587\u5b57 (%i) \u306e\u9577\u3055\u304c\u6700\u5927\u306e\u9577\u3055 (%i) \u3092\u8d85\u3048\u3066\u3044\u307e\u3059\u3002UA\u30b3\u30e1\u30f3\u30c8\u306e\u6570\u3084\u9577\u3055\u3092\u524a\u6e1b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)</source>\n+        <translation>\u9001\u4fe1\u8ee2\u9001\u91cf\u3092\u4e0e\u3048\u3089\u308c\u305f\u76ee\u6a19\u5024\u4ee5\u4e0b\u306b\u7dad\u6301\u3059\u308b\u3088\u3046\u306b\u3059\u308b (24\u6642\u9593\u3042\u305f\u308a\u4f55MiB\u304b\u3067\u6307\u5b9a)\u30020 \u306e\u5834\u5408\u306f\u7121\u5236\u9650 (\u521d\u671f\u5024: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation>\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5f15\u6570 -socks \u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002SOCKS\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u8a2d\u5b9a\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002SOCKS5\u30d7\u30ed\u30ad\u30b7\u306e\u307f\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002</translation>\n+    </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation>Tor \u79d8\u533f\u30b5\u30fc\u30d3\u30b9\u3092\u901a\u3057\u3001\u5225\u3005\u306e SOCKS5 \u30d7\u30ed\u30ad\u30b7\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30d4\u30a2\u306b\u5230\u9054\u3059\u308b (\u521d\u671f\u5024: %s)</translation>\n@@ -3429,10 +3536,6 @@ rpcpassword=%s\n         <source>(default: %s)</source>\n         <translation>(\u30c7\u30d5\u30a9\u30eb\u30c8: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>\u53d7\u4ed8\u53ef\u80fd\u306a\u6697\u53f7\u5316\u65b9\u5f0f (\u521d\u671f\u5024: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>DNS \u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u901a\u3057\u3066\u30d4\u30a2\u30a2\u30c9\u30ec\u30b9\u3092\u5e38\u306b\u554f\u3044\u5408\u308f\u305b\u308b (\u521d\u671f\u5024: %u)</translation>\n@@ -3493,14 +3596,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>P2SH\u3067\u306a\u3044\u30de\u30eb\u30c1\u30b7\u30b0\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u30ea\u30ec\u30fc\u3059\u308b (\u521d\u671f\u5024: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>\u30b5\u30fc\u30d0\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb (\u521d\u671f\u5024: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>\u30b5\u30fc\u30d0\u306e\u79d8\u5bc6\u9375 (\u521d\u671f\u5024: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>key pool \u306e\u30b5\u30a4\u30ba\u3092 &lt;n&gt; (\u521d\u671f\u5024: %u) \u306b\u30bb\u30c3\u30c8</translation>"
      },
      {
        "sha": "6e5db7858976a1c712cacfc37d8cd651a016caf2",
        "filename": "src/qt/locale/bitcoin_ka.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 29,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ka.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ka.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ka.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ka\" version=\"2.0\">\n+<TS language=\"ka\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -200,6 +200,9 @@\n         <translation>\u10e1\u10d0\u10e4\u10e3\u10da\u10d8\u10e1 \u10e4\u10e0\u10d0\u10d6\u10d0-\u10de\u10d0\u10e0\u10dd\u10da\u10d8 \u10e8\u10d4\u10ea\u10d5\u10da\u10d8\u10da\u10d8\u10d0.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1492,10 +1495,6 @@\n         <source>Copy change</source>\n         <translation>\u10ee\u10e3\u10e0\u10d3\u10d8\u10e1 \u10d9\u10dd\u10de\u10d8\u10e0\u10d4\u10d1\u10d0</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u10ef\u10d0\u10db\u10e3\u10e0\u10d8 \u10d7\u10d0\u10dc\u10ee\u10d0 %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u10d0\u10dc</translation>\n@@ -2202,10 +2201,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u10e0\u10d4\u10d6\u10d8\u10d3\u10d4\u10dc\u10e2\u10e3\u10da\u10d0\u10d3 \u10d2\u10d0\u10e8\u10d5\u10d4\u10d1\u10d0 \u10d3\u10d0 \u10d9\u10dd\u10db\u10d0\u10dc\u10d3\u10d4\u10d1\u10d8\u10e1 \u10db\u10d8\u10e6\u10d4\u10d1\u10d0</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u10e1\u10d0\u10e2\u10d4\u10e1\u10e2\u10dd \u10e5\u10e1\u10d4\u10da\u10d8\u10e1 \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d0</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>\u10d2\u10d0\u10e0\u10d4\u10d3\u10d0\u10dc \u10e8\u10d4\u10d4\u10e0\u10d7\u10d4\u10d1\u10d4\u10d1\u10d8\u10e1 \u10d3\u10d0\u10e8\u10d5\u10d4\u10d1\u10d0 (\u10dc\u10d0\u10d2\u10e3\u10da\u10d8\u10e1\u10ee\u10db\u10d4\u10d5\u10d8: 1 \u10d7\u10e3 \u10d0\u10e0 \u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10d4\u10d1\u10d0 -proxy \u10d0\u10dc -connect)</translation>\n@@ -2222,10 +2217,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u10d4\u10e1 \u10d0\u10e0\u10d8\u10e1 \u10ec\u10d8\u10dc\u10d0\u10e1\u10ec\u10d0\u10e0\u10d8 \u10e1\u10d0\u10e2\u10d4\u10e1\u10e2\u10dd \u10d5\u10d4\u10e0\u10e1\u10d8\u10d0 - \u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10d4\u10d7 \u10e1\u10d0\u10d9\u10e3\u10d7\u10d0\u10e0\u10d8 \u10e0\u10d8\u10e1\u10d9\u10d8\u10d7 - \u10d0\u10e0 \u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10dd\u10d7 \u10db\u10dd\u10de\u10dd\u10d5\u10d4\u10d1\u10d8\u10e1\u10d0 \u10d0\u10dc \u10d9\u10dd\u10db\u10d4\u10e0\u10ea\u10d8\u10e3\u10da\u10d8 \u10db\u10d8\u10d6\u10dc\u10d4\u10d1\u10d8\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u10e7\u10e3\u10e0\u10d0\u10d3\u10e6\u10d4\u10d1\u10d0:  \u10eb\u10d0\u10da\u10d8\u10d0\u10dc \u10db\u10d0\u10e6\u10d0\u10da\u10d8\u10d0 -paytxfee - \u10e1\u10d0\u10d9\u10dd\u10db\u10d8\u10e1\u10dd, \u10e0\u10dd\u10db\u10d4\u10da\u10e1\u10d0\u10ea \u10d7\u10e5\u10d5\u10d4\u10dc \u10d2\u10d0\u10d3\u10d0\u10d8\u10ee\u10d3\u10d8\u10d7 \u10d0\u10db \u10e2\u10e0\u10d0\u10dc\u10e1\u10d0\u10e5\u10ea\u10d8\u10d8\u10e1 \u10d2\u10d0\u10d2\u10d6\u10d0\u10d5\u10dc\u10d8\u10e1 \u10e1\u10d0\u10e4\u10d0\u10e1\u10e3\u10e0\u10d0\u10d3.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>\u10e7\u10e3\u10e0\u10d0\u10d3\u10e6\u10d4\u10d1\u10d0: \u10e5\u10e1\u10d4\u10da\u10e8\u10d8 \u10e8\u10d4\u10e3\u10d7\u10d0\u10dc\u10ee\u10db\u10d4\u10d1\u10da\u10dd\u10d1\u10d0\u10d0. \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10dd\u10d0 \u10ea\u10d0\u10da\u10d9\u10d4\u10e3\u10da \u10db\u10dd\u10db\u10de\u10dd\u10d5\u10d4\u10d1\u10da\u10d4\u10d1\u10e1 \u10de\u10e0\u10dd\u10d1\u10da\u10d4\u10db\u10d4\u10d1\u10d8 \u10d4\u10e5\u10db\u10dc\u10d4\u10d1\u10d0\u10d7!</translation>\n@@ -2234,10 +2225,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>\u10e7\u10e3\u10e0\u10d0\u10d3\u10e6\u10d4\u10d1\u10d0: \u10e9\u10d5\u10d4\u10dc \u10d0\u10e0 \u10d5\u10d4\u10d7\u10d0\u10dc\u10ee\u10db\u10d4\u10d1\u10d8\u10d7 \u10e7\u10d5\u10d4\u10da\u10d0 \u10de\u10d8\u10e0\u10e1. \u10e8\u10d4\u10e1\u10d0\u10eb\u10da\u10dd\u10d0 \u10d7\u10e5\u10d5\u10d4\u10dc \u10d0\u10dc \u10e1\u10ee\u10d5\u10d0 \u10d9\u10d5\u10d0\u10dc\u10eb\u10d4\u10d1\u10e1 \u10d2\u10d0\u10dc\u10d0\u10ee\u10da\u10d4\u10d1\u10d0 \u10d2\u10ed\u10d8\u10e0\u10d3\u10d4\u10d1\u10d0\u10d7.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\u10e7\u10e3\u10e0\u10d0\u10d3\u10e6\u10d4\u10d1\u10d0: \u10d0\u10e0 \u10d8\u10d9\u10d8\u10d7\u10ee\u10d4\u10d1\u10d0 wallet.dat! \u10e7\u10d5\u10d4\u10da\u10d0 \u10d2\u10d0\u10e1\u10d0\u10e6\u10d4\u10d1\u10d8 \u10ec\u10d0\u10d9\u10d8\u10d7\u10ee\u10e3\u10da\u10d8\u10d0, \u10db\u10d0\u10d2\u10e0\u10d0\u10db \u10d2\u10d0\u10db\u10dd\u10e0\u10e9\u10d4\u10dc\u10d8\u10da\u10d8 \u10d0\u10dc \u10d0\u10e0\u10d0\u10e1\u10ec\u10dd\u10e0\u10d8\u10d0 \u10e2\u10e0\u10d0\u10dc\u10e1\u10d0\u10e5\u10ea\u10d8\u10d8\u10e1 \u10d7\u10d0\u10e0\u10d8\u10e6\u10d8 \u10d0\u10dc \u10e9\u10d0\u10dc\u10d0\u10ec\u10d4\u10e0\u10d4\u10d1\u10d8 \u10db\u10d8\u10e1\u10d0\u10db\u10d0\u10e0\u10d7\u10d4\u10d1\u10d8\u10e1 \u10ec\u10d8\u10d2\u10dc\u10e8\u10d8.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u10e7\u10e3\u10e0\u10d0\u10d3\u10e6\u10d4\u10d1\u10d0: wallet.dat \u10d3\u10d0\u10d6\u10d8\u10d0\u10dc\u10d4\u10d1\u10e3\u10da\u10d8\u10d0! \u10dd\u10e0\u10d8\u10d2\u10d8\u10dc\u10d0\u10da\u10e3\u10e0\u10d8 wallet.dat \u10e8\u10d4\u10dc\u10d0\u10ee\u10e3\u10da\u10d8\u10d0 \u10e0\u10dd\u10d2\u10dd\u10e0\u10ea wallet.{timestamp}.bak %s-\u10e8\u10d8; \u10d7\u10e3 \u10e8\u10d4\u10d0\u10db\u10e9\u10dc\u10d8\u10d4\u10d7 \u10e3\u10d6\u10e3\u10e1\u10e2\u10dd\u10d1\u10d0 \u10dc\u10d0\u10e8\u10d7\u10e8\u10d8 \u10d0\u10dc \u10e2\u10e0\u10d0\u10dc\u10e1\u10d0\u10e5\u10ea\u10d8\u10d4\u10d1\u10e8\u10d8, \u10d0\u10e6\u10d0\u10d3\u10d2\u10d8\u10dc\u10d4\u10d7 \u10d0\u10e0\u10e5\u10d8\u10d5\u10d8\u10d3\u10d0\u10dc.</translation>\n@@ -2294,10 +2281,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u10d5\u10d4\u10e0 \u10ee\u10d4\u10e0\u10ee\u10d3\u10d4\u10d1\u10d0 \u10de\u10dd\u10e0\u10e2\u10d4\u10d1\u10d8\u10e1 \u10db\u10d8\u10e7\u10e3\u10e0\u10d0\u10d3\u10d4\u10d1\u10d0. \u10d7\u10e3 \u10d2\u10e1\u10e3\u10e0\u10d7, \u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10d4\u10d7 -listen=0.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>\u10d7\u10e3 &lt;category&gt; \u10d0\u10e0 \u10d0\u10e0\u10d8\u10e1 \u10db\u10d8\u10d7\u10d8\u10d7\u10d4\u10d1\u10e3\u10da\u10d8, \u10dc\u10d0\u10e9\u10d5\u10d4\u10dc\u10d4\u10d1\u10d8 \u10d8\u10e5\u10dc\u10d4\u10d1\u10d0 \u10e1\u10e0\u10e3\u10da\u10d8 \u10d3\u10d0\u10ee\u10d5\u10d4\u10ec\u10d8\u10e1 \u10d8\u10dc\u10e4\u10dd\u10e0\u10db\u10d0\u10ea\u10d8\u10d0.</translation>\n-    </message>\n     <message>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n         <translation>\u10e1\u10d0\u10ec\u10e7\u10d8\u10e1\u10d8 \u10d1\u10da\u10dd\u10d9\u10d8 \u10d0\u10e0 \u10d0\u10e0\u10e1\u10d4\u10d1\u10dd\u10d1\u10e1 \u10d0\u10dc \u10d0\u10e0\u10d0\u10e1\u10ec\u10dd\u10e0\u10d8\u10d0. \u10e5\u10e1\u10d4\u10da\u10d8\u10e1 \u10db\u10dd\u10dc\u10d0\u10ea\u10d4\u10db\u10d7\u10d0 \u10d9\u10d0\u10e2\u10d0\u10da\u10dd\u10d2\u10d8 datadir \u10ee\u10dd\u10db \u10d0\u10e0\u10d8\u10e1 \u10d0\u10e0\u10d0\u10e1\u10ec\u10dd\u10e0\u10d8?</translation>\n@@ -2402,10 +2385,6 @@\n         <source>Transaction too large</source>\n         <translation>\u10e2\u10e0\u10d0\u10dc\u10e1\u10d0\u10e5\u10ea\u10d8\u10d0 \u10eb\u10d0\u10da\u10d8\u10d0\u10dc \u10d3\u10d8\u10d3\u10d8\u10d0</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u10d2\u10d0\u10db\u10dd\u10d8\u10e7\u10d4\u10dc\u10d4\u10d7 UPnP \u10db\u10d8\u10e1\u10d0\u10e7\u10e3\u10e0\u10d0\u10d3\u10d4\u10d1\u10d4\u10da\u10d8 \u10de\u10dd\u10e0\u10e2\u10d8\u10e1 \u10d2\u10d0\u10d3\u10d0\u10e1\u10d0\u10db\u10d8\u10e1\u10d0\u10db\u10d0\u10e0\u10d7\u10d4\u10d1\u10da\u10d0\u10d3 (\u10dc\u10d0\u10d2\u10e3\u10da\u10d8\u10e1\u10ee\u10db\u10d4\u10d5\u10d8: 1 \u10e0\u10dd\u10ea\u10d0 \u10e9\u10d0\u10e0\u10d7\u10e3\u10da\u10d8\u10d0 \u10db\u10d8\u10e7\u10e3\u10e0\u10d0\u10d3\u10d4\u10d1\u10d0)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u10db\u10dd\u10db\u10ee\u10db\u10d0\u10e0\u10d4\u10d1\u10da\u10d8\u10e1 \u10e1\u10d0\u10ee\u10d4\u10da\u10d8 JSON-RPC-\u10e8\u10d4\u10d4\u10e0\u10d7\u10d4\u10d1\u10d8\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1</translation>\n@@ -2438,10 +2417,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u10d1\u10da\u10dd\u10d9\u10d4\u10d1\u10d8\u10e1 \u10ef\u10d0\u10ed\u10d5\u10d8\u10e1 \u10d2\u10d0\u10d3\u10d0\u10db\u10dd\u10ec\u10db\u10d4\u10d1\u10d0 \u10e1\u10d0\u10e4\u10e3\u10da\u10d4\u10e8\u10d8 \u10d2\u10d0\u10db\u10dd\u10e0\u10e9\u10d4\u10dc\u10d8\u10da \u10e2\u10e0\u10d0\u10dc\u10e1\u10d0\u10e5\u10ea\u10d8\u10d4\u10d1\u10d6\u10d4</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>OpenSSL-\u10d8\u10e1 (https) \u10d2\u10d0\u10db\u10dd\u10e7\u10d4\u10dc\u10d4\u10d1\u10d0 JSON-RPC-\u10e8\u10d4\u10d4\u10e0\u10d7\u10d4\u10d1\u10d4\u10d1\u10d8\u10e1\u10d0\u10d7\u10d5\u10d8\u10e1</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u10d4\u10e1 \u10e2\u10d4\u10e5\u10e1\u10e2\u10d8</translation>"
      },
      {
        "sha": "4de8f1b57e300d04cdbab423287c9d876df0c66a",
        "filename": "src/qt/locale/bitcoin_kk_KZ.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_kk_KZ.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_kk_KZ.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_kk_KZ.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"kk_KZ\" version=\"2.0\">\n+<TS language=\"kk_KZ\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -84,6 +84,9 @@\n         <translation>\u049a\u04b1\u043f\u0438\u044f \u0441\u04e9\u0437\u0434\u0456 \u04e9\u0437\u0433\u0435\u0440\u0442\u0443</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>"
      },
      {
        "sha": "653ea4088239aa414d2c9eb7f566455a88b1d48c",
        "filename": "src/qt/locale/bitcoin_ko_KR.ts",
        "status": "modified",
        "additions": 42,
        "deletions": 37,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ko_KR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ko_KR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko_KR.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ko_KR\" version=\"2.0\">\n+<TS language=\"ko_KR\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -208,6 +208,9 @@\n         <translation>\uc9c0\uac11 \ube44\ubc00\ubc88\ud638\uac00 \uc131\uacf5\uc801\uc73c\ub85c \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -344,11 +347,11 @@\n     </message>\n     <message>\n         <source>Show or hide the main Window</source>\n-        <translation>\uc8fc \ucc3d \ubcf4\uc774\uae30 \ub610\ub294 \uc228\uae30\uae30</translation>\n+        <translation>\uba54\uc778\ucc3d \ubcf4\uc774\uae30 \ub610\ub294 \uc228\uae30\uae30</translation>\n     </message>\n     <message>\n         <source>Encrypt the private keys that belong to your wallet</source>\n-        <translation>\uc18c\uc720 \uc9c0\uac11 \uac1c\uc778\ud0a4 \uc554\ud638\ud654</translation>\n+        <translation>\uc9c0\uac11\uc5d0 \ud3ec\ud568\ub41c \uac1c\uc778\ud0a4 \uc554\ud638\ud654\ud558\uae30</translation>\n     </message>\n     <message>\n         <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n@@ -396,7 +399,7 @@\n     </message>\n     <message>\n         <source>Open a bitcoin: URI or payment request</source>\n-        <translation>\ube44\ud2b8\ucf54\uc778: URI \ub610\ub294 \uc9c0\ubd88\uc694\uccad \uc5f4\uae30</translation>\n+        <translation>bitcoin: URI \ub610\ub294 \uc9c0\ubd88\uc694\uccad \uc5f4\uae30</translation>\n     </message>\n     <message>\n         <source>&amp;Command-line options</source>\n@@ -426,6 +429,10 @@\n         <source>%1 and %2</source>\n         <translation>%1 \uadf8\ub9ac\uace0 %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n\ub144</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 \ub4a4\uc5d0</translation>\n@@ -458,6 +465,36 @@\n         <source>Catching up...</source>\n         <translation>\ube14\ub85d \ub530\ub77c\uc7a1\uae30...</translation>\n     </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\ub0a0\uc9dc: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\uae08\uc561: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Type: %1\n+</source>\n+        <translation>\uc885\ub958: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>\ub77c\ubca8: %1\n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>\uc8fc\uc18c: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>\uac70\ub798 \ubcf4\ub0b4\uae30</translation>\n@@ -498,7 +535,7 @@\n     </message>\n     <message>\n         <source>Amount:</source>\n-        <translation>\uac70\ub798\ub7c9:</translation>\n+        <translation>\uae08\uc561:</translation>\n     </message>\n     <message>\n         <source>Priority:</source>\n@@ -1524,10 +1561,6 @@\n         <source>Copy priority</source>\n         <translation>\uc6b0\uc120\ub3c4 \ubcf5\uc0ac</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\ucd1d \uc561\uc218 %1(=%2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\ub610\ub294</translation>\n@@ -2238,10 +2271,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\ub370\ubaac\uc73c\ub85c \ubc31\uadf8\ub77c\uc6b4\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud558\uace0 \uba85\ub839\uc744 \ud5c8\uc6a9</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\ud14c\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud06c \uc0ac\uc6a9</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>\uc678\ubd80 \uc811\uc18d\uc744 \uc2b9\uc778\ud569\ub2c8\ub2e4</translation>\n@@ -2258,10 +2287,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\uc774 \ube4c\ub4dc \ubc84\uc804\uc740 \uc815\uc2dd \ucd9c\uc2dc \uc804 \ud14c\uc2a4\ud2b8\uc758 \ubaa9\uc801\uc774\uba70, \uc608\uae30\uce58 \uc54a\uc740 \uc704\ud5d8\uacfc \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc44\uad74\uacfc \uc0c1\uc810\uc6a9 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub85c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uad8c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\uacbd\uace0: -paytxfee\uac12\uc774 \ub108\ubb34 \ud07d\ub2c8\ub2e4! \uc774 \uac12\uc740 \uc1a1\uae08\ud560\ub54c \uc9c0\ubd88\ud560 \uc1a1\uae08 \uc218\uc218\ub8cc\uc785\ub2c8\ub2e4.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>\uacbd\uace0 : \ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c\uac00 \ub3d9\uc758\ud574\uc57c \ud558\ub098, \uc77c\ubd80 \ucc44\uad74\uc790\ub4e4\uc5d0\uac8c \ubb38\uc81c\uac00 \uc788\ub294 \uac83\uc73c\ub85c \ubcf4\uc785\ub2c8\ub2e4. </translation>\n@@ -2270,10 +2295,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>\uacbd\uace0: \ud604\uc7ac \ube44\ud2b8\ucf54\uc778 \ubc84\uc804\uc774 \ub2e4\ub978 \ub124\ud2b8\uc6cc\ud06c \ucc38\uc5ec\uc790\ub4e4\uacfc \ub3d9\uc77c\ud558\uc9c0 \uc54a\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \ub2f9\uc2e0 \ub610\ub294 \ub2e4\ub978 \ucc38\uc5ec\uc790\ub4e4\uc774 \ub3d9\uc77c\ud55c \ube44\ud2b8\ucf54\uc778 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\uacbd\uace0 : wallet.dat \ud30c\uc77c\uc744 \uc77d\ub294 \uc911 \uc5d0\ub7ec\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \uc8fc\uc18c \ud0a4\ub294 \ubaa8\ub450 \uc815\ud655\ud558\uac8c \ub85c\ub529\ub418\uc5c8\uc73c\ub098 \uac70\ub798 \ub370\uc774\ud130\uc640 \uc8fc\uc18c\ub85d \ud544\ub4dc\uc5d0\uc11c \ub204\ub77d\uc774\ub098 \uc624\ub958\uac00 \uc874\uc7ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. </translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\uacbd\uace0 : wallet.dat\uac00 \uc190\uc0c1\ub418\uc5b4 \ub370\uc774\ud130\uac00 \ubcf5\uad6c\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc6d0\ub798\uc758 wallet.dat \ud30c\uc77c\uc740 %s \ud6c4\uc5d0 wallet.{timestamp}.bak \uc774\ub984\uc73c\ub85c \uc800\uc7a5\ub429\ub2c8\ub2e4. \uc794\uc561\uacfc \uac70\ub798 \ub0b4\uc5ed\uc774 \uc815\ud655\ud558\uc9c0 \uc54a\ub2e4\uba74 \ubc31\uc5c5 \ud30c\uc77c\ub85c \ubd80\ud130 \ubcf5\uc6d0\ud574\uc57c \ud569\ub2c8\ub2e4. </translation>\n@@ -2334,10 +2355,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\uc5b4\ub5a4 \ud3ec\ud2b8\ub3c4 \ubc18\uc751\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \ubc18\uc751=0 \ub9cc\uc57d \uc6d0\ud55c\ub2e4\uba74</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>&lt;\uce74\ud14c\uace0\ub9ac&gt;\uac00 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc744 \uacbd\uc6b0, \ubaa8\ub4e0 \ub514\ubc84\uae45 \uc815\ubcf4\ub97c \ucd9c\ub825</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\ub4e4\uc5ec\uc624\uae30 \uc911...</translation>\n@@ -2418,10 +2435,6 @@\n         <source>Invalid amount for -mintxfee=&lt;amount&gt;: '%s'</source>\n         <translation>\ucd5c\uc800 \uac70\ub798 \uc218\uc218\ub8cc\uac00 \ubd80\uc871\ud569\ub2c8\ub2e4. -mintxfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL \uc635\uc158: (\ube44\ud2b8\ucf54\uc778 \uc704\ud0a4\uc758 SSL \uc124\uc815 \uc124\uba85\uc11c \ucc38\uace0)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC \uc11c\ubc84 \uc124\uc815</translation>\n@@ -2470,10 +2483,6 @@\n         <source>Transaction too large</source>\n         <translation>\ub108\ubb34 \ud070 \uac70\ub798</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>UPnP\uc0ac\uc6a9\ud558\uc5ec \uc9c0\ub3c4\uc5d0\uc11c \ud3ec\ud2b8 \ubc18\uc751\uae30\ub2e4\ub9ac\ub294 \uc911  (\uae30\ubcf8\uac12: 1 \ubc18\uc751\uc774 \uc0dd\uae30\uba74)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>JSON-RPC \uc5f0\uacb0\uc5d0 \uc0ac\uc6a9\ud560 \uc0ac\uc6a9\uc790 \uc774\ub984</translation>\n@@ -2510,10 +2519,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\ub204\ub77d\ub41c \uc9c0\uac11 \uc1a1\uae08\uc5d0 \ub300\ud55c \ube14\ub85d \uccb4\uc778 \ub2e4\uc2dc \uac80\uc0c9</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>JSON-RPC \uc5f0\uacb0\uc5d0 OpenSSL(https) \uc0ac\uc6a9</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\ub3c4\uc6c0\ub9d0 \uba54\uc2dc\uc9c0\uc785\ub2c8\ub2e4</translation>"
      },
      {
        "sha": "495f11b1f4489b61016337f9ff5400753fcba115",
        "filename": "src/qt/locale/bitcoin_ky.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ky.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ky.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ky.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ky\" version=\"2.0\">\n+<TS language=\"ky\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -24,6 +24,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>"
      },
      {
        "sha": "b1e14fb8598843e52c7541d574e4e48a1512b0f9",
        "filename": "src/qt/locale/bitcoin_la.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 21,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_la.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_la.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_la.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"la\" version=\"2.0\">\n+<TS language=\"la\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -156,6 +156,9 @@\n         <translation>Tessera cassidilis successa est in mutando.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1386,10 +1389,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Operare infere sicut daemon et mandata accipe</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Utere rete experimentale</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accipe conexiones externas (praedefinitum: 1 nisi -proxy neque -connect)</translation>\n@@ -1406,14 +1405,6 @@\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Hoc est prae-dimittum experimentala aedes - utere eo periculo tuo proprio - nolite utere fodendo vel applicationibus mercatoriis</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Monitio: -paytxfee constitutum valde magnum!  Hoc est merces transactionis solves si mittis transactionem.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Monitio: error legendo wallet.dat!  Omnes claves recte lectae, sed data transactionum vel libri inscriptionum fortasse desint vel prava sint.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Monitio: wallet.data corrupta, data salvata!  Originalis wallet.dat salvata ut wallet.{timestamp}.bak in %s; si pendendum tuum vel transactiones pravae sunt, oportet ab conservato restituere.</translation>\n@@ -1526,10 +1517,6 @@\n         <source>Transaction too large</source>\n         <translation>Transactio nimis magna</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Utere UPnP designare portam auscultandi (praedefinitum: 1 quando auscultans)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nomen utentis pro conexionibus JSON-RPC</translation>\n@@ -1558,10 +1545,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Iterum perlege catenam frustorum propter absentes cassidilis transactiones</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Utere OpenSSL (https) pro conexionibus JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Hic nuntius auxilii</translation>"
      },
      {
        "sha": "d91c1838840fa37017094f378cc9357874e6cb0e",
        "filename": "src/qt/locale/bitcoin_lt.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 17,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_lt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_lt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lt.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"lt\" version=\"2.0\">\n+<TS language=\"lt\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -188,6 +188,9 @@\n         <translation>Pinigin\u0117s slapta\u017eodis s\u0117kmingai pakeistas.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1614,14 +1617,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Dirbti fone kaip \u0161e\u0161\u0117lyje ir priimti komandas</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Naudoti testavimo tinkl\u0105</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u012esp\u0117jimas: -paytxfee yra nustatytas per didelis. Tai sandorio mokestis, kur\u012f tur\u0117site mok\u0117ti, jei si\u0173site sandor\u012f.</translation>\n-    </message>\n     <message>\n         <source>Connect only to the specified node(s)</source>\n         <translation>Prisijungti tik prie nurodyto mazgo</translation>\n@@ -1654,10 +1649,6 @@\n         <source>Start minimized</source>\n         <translation>Paleisti suma\u017eint\u0105</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Bandymas naudoti UPnP strukt\u016bra klausymosi prievadui (default: 1 when listening)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Vartotojo vardas JSON-RPC jungimuisi</translation>\n@@ -1678,10 +1669,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Ie\u0161koti  prarast\u0173 pinigin\u0117s sandori\u0173 blok\u0173 grandin\u0117je</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Naudoti OpenSSL (https) jungimuisi JSON-RPC </translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Pagelbos \u017einut\u0117</translation>"
      },
      {
        "sha": "db2eabaf7826cb05826162c98b5cd0c6d340e4b0",
        "filename": "src/qt/locale/bitcoin_lv_LV.ts",
        "status": "modified",
        "additions": 45,
        "deletions": 18,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_lv_LV.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_lv_LV.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lv_LV.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"lv_LV\" version=\"2.0\">\n+<TS language=\"lv_LV\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -61,6 +61,14 @@\n         <source>Receiving addresses</source>\n         <translation>Sa\u0146em\u0161anas adreses</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0160\u012bs ir j\u016bsu Bitcoin adreses maks\u0101jumu s\u016bt\u012b\u0161anai. Vienm\u0113r  p\u0101rbaudiet summu un sa\u0146\u0113m\u0113ja adresi pirms mon\u0113tu s\u016bt\u012b\u0161anas.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>\u0160\u012bs ir j\u016bsu Bitcoin adreses maks\u0101jumu sa\u0146em\u0161anai. Ir ieteicams katram dar\u012bjumam izmantot jaunu sa\u0146em\u0161anas adresi.</translation>\n+    </message>\n     <message>\n         <source>Copy &amp;Label</source>\n         <translation>Kop\u0113t &amp;Nosaukumu</translation>\n@@ -81,7 +89,11 @@\n         <source>Exporting Failed</source>\n         <translation>Eksport\u0113\u0161ana Neizdev\u0101s</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Rad\u0101s k\u013c\u016bda, saglab\u0101jot adre\u0161u sarakstu %1. L\u016bdzu, m\u0113\u0123iniet v\u0113lreiz!</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -151,6 +163,14 @@\n         <source>Are you sure you wish to encrypt your wallet?</source>\n         <translation>Vai tu tie\u0161\u0101m v\u0113lies \u0161ifr\u0113t savu maci\u0146u?</translation>\n     </message>\n+    <message>\n+        <source>Bitcoin Core will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Bitcoin Core tiks aizv\u0113rts, lai pabeigtu \u0161ifr\u0113\u0161ansa procesu. Atcerieties, ka j\u016bsu maka \u0161ifr\u0113\u0161ana nevar piln\u012bb\u0101 pasarg\u0101t j\u016bsu mon\u0113tas no to nozaga\u0161anas, infic\u0113jot datoru ar \u013caunpr\u0101t\u012bg\u0101m programm\u0101m.</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>SVAR\u012aGI: Iepriek\u0161\u0113jie maka faila dubl\u0113jumi ir j\u0101aizvieto ar jauno, \u0161ifr\u0113to maka failu. Dro\u0161\u012bbas apsv\u0113rumu d\u0113\u013c iepriek\u0161\u0113jie ne\u0161ifr\u0113t\u0101 maka dubl\u0113jumi vairs neb\u016bs der\u012bgi, tikl\u012bdz s\u0101ksiet izmantot jauno, \u0161ifr\u0113to maku.</translation>\n+    </message>\n     <message>\n         <source>Warning: The Caps Lock key is on!</source>\n         <translation>Br\u012bdin\u0101jums: Caps Lock ir iesl\u0113gts!</translation>\n@@ -159,6 +179,10 @@\n         <source>Wallet encrypted</source>\n         <translation>Maci\u0146\u0161 no\u0161ifr\u0113ts</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Ievadiet veco un jauno maka paroli.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>Maci\u0146a \u0161ifr\u0113\u0161ana neizdev\u0101s</translation>\n@@ -188,6 +212,9 @@\n         <translation>Maci\u0146a parole tika veiksm\u012bgi nomain\u012bta.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -774,10 +801,18 @@\n         <source>Number of script &amp;verification threads</source>\n         <translation>Skriptu &amp;p\u0101rbaudes pavedienu skaits</translation>\n     </message>\n+    <message>\n+        <source>Allow incoming connections</source>\n+        <translation>At\u013caut ien\u0101ko\u0161os savienojumus</translation>\n+    </message>\n     <message>\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation>Starpniekservera IP adrese (piem. IPv4: 127.0.0.1 / IPv6: ::1)</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimiz\u0113t nevis aizv\u0113rt aplik\u0101ciju, kad logs tiek aizv\u0113rts. Kad \u0161\u012b iesp\u0113ja ir iesl\u0113gta, aplik\u0101cija tiks aizv\u0113rta, izv\u0113loties Aizv\u0113rt izv\u0113ln\u0113.</translation>\n+    </message>\n     <message>\n         <source>Third party transaction URLs</source>\n         <translation>Tre\u0161o personu transakciju URLs</translation>\n@@ -944,6 +979,14 @@\n         <source>Invalid payment address %1</source>\n         <translation>Neder\u012bga maks\u0101juma adrese %1</translation>\n     </message>\n+    <message>\n+        <source>Payment request rejected</source>\n+        <translation>Maks\u0101juma piepras\u012bjums noraid\u012bts</translation>\n+    </message>\n+    <message>\n+        <source>Payment request network doesn't match client network.</source>\n+        <translation>Maks\u0101juma piepras\u012bjuma t\u012bkls neatbilst klienta t\u012bklam.</translation>\n+    </message>\n     <message>\n         <source>Payment request error</source>\n         <translation>Maks\u0101jumu piepras\u012bjuma k\u013c\u016bda</translation>\n@@ -1396,10 +1439,6 @@\n         <source>Copy change</source>\n         <translation>Kop\u0113t atlikumu</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Kop\u0113j\u0101 Summa %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>vai</translation>\n@@ -2074,10 +2113,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Darbin\u0101t fon\u0101 k\u0101 servisu un pie\u0146emt komandas</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Izmantot testa t\u012bklu</translation>\n-    </message>\n     <message>\n         <source>(default: 1)</source>\n         <translation>(noklus\u0113jums: 1)</translation>\n@@ -2114,10 +2149,6 @@\n         <source>Error: Disk space is low!</source>\n         <translation>K\u013c\u016bda: Zema diska vieta!</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Ja &lt;category&gt; nav nor\u0101d\u012bta, izvad\u012bt visu atk\u013c\u016bdo\u0161anas inform\u0101ciju.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Import\u0113...</translation>\n@@ -2210,10 +2241,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Atk\u0101rtoti skan\u0113t bloku virkni, mekl\u0113jot tr\u016bksto\u0161\u0101s maci\u0146a transakcijas</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>JSON-RPC savienojumiem izmantot OpenSSL (https)</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u0160is pal\u012bdz\u012bbas pazi\u0146ojums</translation>"
      },
      {
        "sha": "a44d3b6fb3156553300934d9db352e83e7d2a813",
        "filename": "src/qt/locale/bitcoin_mn.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_mn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_mn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_mn.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"mn\" version=\"2.0\">\n+<TS language=\"mn\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -49,6 +49,10 @@\n         <source>Choose the address to receive coins with</source>\n         <translation>\u0417\u043e\u043e\u0441\u043d\u0443\u0443\u0434\u044b\u0433 \u0445\u04af\u043b\u044d\u044d\u043d \u0430\u0432\u0430\u0445 \u0445\u0430\u044f\u0433\u0438\u0439\u0433 \u0441\u043e\u043d\u0433\u043e\u043d\u043e \u0443\u0443</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>\u0421&amp;\u043e\u043d\u0433\u043e</translation>\n+    </message>\n     <message>\n         <source>Sending addresses</source>\n         <translation>\u0418\u043b\u0433\u044d\u044d\u0445 \u0445\u0430\u044f\u0433\u0443\u0443\u0434</translation>\n@@ -172,6 +176,9 @@\n         <translation>\u0422\u04af\u0440\u04af\u0439\u0432\u0447\u0438\u0439\u043d \u043d\u0443\u0443\u0446 \u04af\u0433 \u0430\u043c\u0436\u0438\u043b\u0442\u0442\u0430\u0439 \u0473\u0473\u0440</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -648,10 +655,6 @@\n         <source>Copy change</source>\n         <translation>\u0472\u0473\u0440\u0447\u043b\u0473\u043b\u0442\u0438\u0439\u0433 \u0441\u0430\u043d\u0430\u0445</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u041d\u0438\u0439\u0442 \u0434\u04af\u043d %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u044d\u0441\u0432\u044d\u043b</translation>"
      },
      {
        "sha": "8f6676e4845b3e100816a44fb3160952acb4001b",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ms_MY\" version=\"2.0\">\n+<TS language=\"ms_MY\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -56,6 +56,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>"
      },
      {
        "sha": "9f5344ecab1ff1c445cdd591743bcaf08a7f6de1",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 238,
        "deletions": 147,
        "changes": 385,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"nb\" version=\"2.0\">\n+<TS language=\"nb\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,17 @@\n         <translation>Adgangsfrase for lommebok endret.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/Nettmaske</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Utestengt til</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1068,6 +1079,34 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Proxyens port (f.eks. 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>Brukt for \u00e5 n\u00e5 noder via:</translation>\n+    </message>\n+    <message>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>Viser om angitt SOCKS5 mellomtjener blir brukt for \u00e5 n\u00e5 noder via denne nettverkstypen.</translation>\n+    </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n+        <translation>Koble til Bitcoin-nettverket gjennom en separat SOCKS5 mellomtjener for Tor skjulte tjenester.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Bruk separat SOCKS5 mellomtjener for \u00e5 n\u00e5 noder via Tor skjulte tjenester:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Vindu</translation>\n@@ -1286,10 +1325,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Betalingsforesp\u00f8rsel %1 er for stor (%2 bytes, tillatt %3 bytes).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Betalingsforesp\u00f8rsel DoS-beskyttelse</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Feil i kommunikasjonen med %1: %2</translation>\n@@ -1458,10 +1493,18 @@\n         <source>&amp;Peers</source>\n         <translation>&amp;Noder</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>Utestengte noder</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>Velg en node for \u00e5 vise detaljert informasjon.</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>Hvitelistet</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>Retning</translation>\n@@ -1471,20 +1514,24 @@\n         <translation>Versjon</translation>\n     </message>\n     <message>\n-        <source>User Agent</source>\n-        <translation>Brukeragent</translation>\n+        <source>Starting Block</source>\n+        <translation>Startblokk</translation>\n     </message>\n     <message>\n-        <source>Services</source>\n-        <translation>Tjenester</translation>\n+        <source>Synced Headers</source>\n+        <translation>Synkroniserte Blokkhoder</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>Starth\u00f8yde</translation>\n+        <source>Synced Blocks</source>\n+        <translation>Synkroniserte Blokker</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>Synkroniseringsh\u00f8yde</translation>\n+        <source>User Agent</source>\n+        <translation>Brukeragent</translation>\n+    </message>\n+    <message>\n+        <source>Services</source>\n+        <translation>Tjenester</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1514,6 +1561,14 @@\n         <source>Ping Time</source>\n         <translation>Ping-tid</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>Tidsforl\u00f8p for utest\u00e5ende ping.</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>Ping Tid</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>Tidsforskyvning</translation>\n@@ -1562,6 +1617,34 @@\n         <source>Clear console</source>\n         <translation>T\u00f8m konsoll</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>&amp;Koble fra node</translation>\n+    </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>Steng node ute for</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 &amp;time</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 &amp;dag</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 &amp;uke</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 &amp;\u00e5r</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>Fjern &amp;Utestengning av Node</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>Velkommen til Bitcoin Core sin RPC-konsoll.</translation>\n@@ -1590,6 +1673,10 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(node id: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>via %1</translation>\n@@ -1607,12 +1694,16 @@\n         <translation>Utg\u00e5ende</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Ukjent</translation>\n+        <source>Yes</source>\n+        <translation>Ja</translation>\n+    </message>\n+    <message>\n+        <source>No</source>\n+        <translation>Nei</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Henter \u2026</translation>\n+        <source>Unknown</source>\n+        <translation>Ukjent</translation>\n     </message>\n </context>\n <context>\n@@ -1978,10 +2069,6 @@\n         <source>Copy change</source>\n         <translation>Kopier veksel</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Totalt Bel\u00f8p %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>eller</translation>\n@@ -2022,6 +2109,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Betal kun minimumsgebyret p\u00e5 %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>Totalt Bel\u00f8p %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Mottakeradressen er ikke gyldig. Vennligst kontroller p\u00e5 nytt.</translation>\n@@ -2800,13 +2891,53 @@\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Ta imot kommandolinje- og JSON-RPC-kommandoer</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n+        <translation>Gebyrer (i %s/kB) mindre enn dette vil anses som gebyrfrie (for videresending) (standard: %s)</translation>\n+    </message>\n+    <message>\n+        <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n+        <translation>Hvis &lt;category&gt; ikke er oppgitt eller hvis &lt;category&gt; = 1, ta ut all informasjon for feils\u00f8king.</translation>\n+    </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Maksimalt samlede gebyrer (i %s) til \u00e5 bruke i en enkelt lommeboktransaksjon; settes dette for lavt kan store transaksjoner kanskje avbrytes (standardverdi: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>Vennligst unders\u00f8k at din datamaskin har riktig dato og klokkeslett! Hvis klokken er stilt feil vil ikke Bitcoin Core fungere riktig.</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>Beskj\u00e6ringsmodus er konfigurert under minimum p\u00e5 %d MiB. Vennligst bruk et h\u00f8yere nummer.</translation>\n+    </message>\n+    <message>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation>Beskj\u00e6ring: siste lommeboksynkronisering g\u00e5r utenfor beskj\u00e6rte data. Du m\u00e5 bruke -reindex (laster ned hele blokkjeden igjen for beskj\u00e6rte noder)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Reduser lagringsbehovet ved beskj\u00e6ring (sletting) av gamle blokker. Denne modusen er ikke kompatibel med -txindex og -rescan. Advarsel: Tilbakestilling av denne innstillingen krever at hele blokkjeden m\u00e5 lastes ned p\u00e5 nytt. (Standardverdi: 0 = deaktiver beskj\u00e6ring av blokker, &gt;%u = m\u00e5l for st\u00f8rrelse i MiB \u00e5 bruke for blokkfiler)</translation>\n+    </message>\n+    <message>\n+        <source>Rescans are not possible in pruned mode. You will need to use -reindex which will download the whole blockchain again.</source>\n+        <translation>Oms\u00f8k er ikke mulig i beskj\u00e6rt modus. Du vil m\u00e5tte bruke -reindex som vil laste nede hele blokkjeden p\u00e5 nytt.</translation>\n+    </message>\n+    <message>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Feil: En fatal intern feil oppstod, se debug.log for detaljer</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>Beskj\u00e6rer blokklageret...</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Kj\u00f8r i bakgrunnen som daemon og ta imot kommandoer</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Bruk testnettverket</translation>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>Kunne ikke starte HTTP server. Se debug logg for detaljer.</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2828,18 +2959,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Kj\u00f8r kommando n\u00e5r en lommeboktransaksjon endres (%s i kommando er erstattet med TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Maksimalt samlede gebyrer til \u00e5 bruke i en enkelt lommeboktransaksjon; settes dette for lavt kan store transaksjoner kanskje avbrytes (standardverdi: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Reduser lagringsbehovet ved beskj\u00e6ring (slette) gamle blokker. Denne modusen deaktiverer st\u00f8tte for lommebok og er ikke kompatibel med -txindex. Advarsel: Tilbakestilling av denne innstillingen krever at hele blokkjeden m\u00e5 lastes ned p\u00e5 nytt. (Standardverdi: 0 = deaktiver beskj\u00e6ringsblokker, &gt;%u = m\u00e5l for st\u00f8rrelse i MiB \u00e5 bruke for blokkfiler)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Angi antall tr\u00e5der for skriptverifisering (%u til %d, 0 = auto, &lt;0 = la det antallet kjerner v\u00e6re ledig, standard: %d)</translation>\n     </message>\n+    <message>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n+        <translation>Blokkdatabasen inneholder en blokk som ser ut til \u00e5 v\u00e6re fra fremtiden. Dette kan v\u00e6re fordi dato og tid p\u00e5 din datamaskin er satt feil. Gjenopprett kun blokkdatabasen n\u00e5r du er sikker p\u00e5 at dato og tid er satt riktig.</translation>\n+    </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Dette er en forh\u00e5ndssluppet testversjon - bruk p\u00e5 egen risiko - ikke for bruk til blokkutvinning eller bedriftsapplikasjoner</translation>\n@@ -2848,6 +2975,10 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Ute av stand til \u00e5 binde til %s p\u00e5 denne datamaskinen. Bitcoin Core kj\u00f8rer sannsynligvis allerede.</translation>\n     </message>\n+    <message>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n+        <translation>Bruk UPnP for lytteport (standardverdi: 1 ved lytting og uten -proxy)</translation>\n+    </message>\n     <message>\n         <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>ADVARSEL: unormalt h\u00f8yt antall blokker generert, %d blokker mottatt de siste %d timene (%d forventet)</translation>\n@@ -2856,10 +2987,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>ADVARSEL: kontroller nettverkstilkoblingen, mottok %d blokker i de siste %d timene (%d forventet)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Advarsel: -paytxfee er satt veldig h\u00f8yt! Dette er transaksjonsgebyret du betaler n\u00e5r du sender transaksjoner.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Advarsel: Nettverket ser ikke ut til \u00e5 v\u00e6re enig! Noen minere ser ut til \u00e5 ha problemer.</translation>\n@@ -2868,10 +2995,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Advarsel: Vi ser ikke ut til \u00e5 v\u00e6re enige med v\u00e5re noder! Du m\u00e5 oppgradere, eller andre noder m\u00e5 oppgradere.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Advarsel: Feil ved lesing av wallet.dat! Alle n\u00f8kler lest riktig, men transaksjonsdataene eller oppf\u00f8ringer i adresseboken mangler kanskje eller er feil.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Advarsel: wallet.dat korrupt, data reddet! Original wallet.dat lagret som wallet.{timestamp}.bak i %s; hvis din saldo eller dine transaksjoner ikke er korrekte b\u00f8r du gjenopprette fra en backup.</translation>\n@@ -2884,6 +3007,10 @@\n         <source>(default: 1)</source>\n         <translation>(standardverdi: 1)</translation>\n     </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>-maxmempool m\u00e5 v\u00e6re minst %d MB</translation>\n+    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; kan v\u00e6re:</translation>\n@@ -2920,6 +3047,22 @@\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\u00d8nsker du \u00e5 gjenopprette blokkdatabasen n\u00e5?</translation>\n     </message>\n+    <message>\n+        <source>Enable publish hash block in &lt;address&gt;</source>\n+        <translation>Sl\u00e5 p\u00e5 publish hash block i &lt;address&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish hash transaction in &lt;address&gt;</source>\n+        <translation>Sl\u00e5 p\u00e5 publish hash transaction i &lt;address&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw block in &lt;address&gt;</source>\n+        <translation>Sl\u00e5 p\u00e5 publish raw block i &lt;address&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw transaction in &lt;address&gt;</source>\n+        <translation>Sl\u00e5 p\u00e5 publish raw transaction i &lt;address&gt;</translation>\n+    </message>\n     <message>\n         <source>Error initializing block database</source>\n         <translation>Feil under initialisering av blokkdatabase</translation>\n@@ -2936,10 +3079,6 @@\n         <source>Error opening block database</source>\n         <translation>Feil under \u00e5pning av blokkdatabase</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Feil: En fatal intern feil oppstod, se debug.log for detaljer</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Feil: Lite ledig lagringsplass!</translation>\n@@ -2948,10 +3087,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Kunne ikke lytte p\u00e5 noen port. Bruk -listen=0 hvis det er dette du vil.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Hvis &lt;category&gt; ikke er oppgitt, ta ut all informasjon om feils\u00f8king.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importerer...</translation>\n@@ -2964,6 +3099,10 @@\n         <source>Invalid -onion address: '%s'</source>\n         <translation>Ugyldig -onion adresse: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Keep the transaction memory pool below &lt;n&gt; megabytes (default: %u)</source>\n+        <translation>Hold transaksjonsminnet under &lt;n&gt; megabytes (standard: %u)</translation>\n+    </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n         <translation>For f\u00e5 fildeskriptorer tilgjengelig.</translation>\n@@ -2992,10 +3131,26 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Angi lommebokfil (inne i datamappe)</translation>\n     </message>\n+    <message>\n+        <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation>Ust\u00f8ttet argument -benchmark ble ignorert, bruk -debug=bench.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation>Advarsel: Argumentet -debugnet er ikke st\u00f8ttet og ble ignorert, bruk -debug=net.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -tor found, use -onion.</source>\n+        <translation>Feil: Argumentet -tor er ikke st\u00f8ttet, bruk -onion.</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Bruk UPnP for \u00e5 sette opp lytteport (standardverdi: %u)</translation>\n     </message>\n+    <message>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation>User Agent kommentar (%s) inneholder utrygge tegn.</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>Verifiserer blokker...</translation>\n@@ -3028,10 +3183,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Tillat JSON-RPC-tilkoblinger fra angitt kilde. Gyldig for &lt;ip&gt; er en enkelt IP (f. eks. 1.2.3.4), et nettverk/nettmaske (f. eks. 1.2.3.4/255.255.255.0) eller et nettverk/CIDR (f. eks. 1.2.3.4/24). Dette alternativet kan angis flere ganger</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>En feil oppstod under oppsett av RPC-adressen %s port %u for lytting: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Bind til gitt adresse og hvitlist peers som kobler seg til den. Bruk [host]:port notasjon for IPv6</translation>\n@@ -3056,18 +3207,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Feil: Lytting etter innkommende tilkoblinger feilet (lytting returnerte feil %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Feil: Argumentet -socks er ikke st\u00f8ttet. Det er ikke lenger mulig \u00e5 sette SOCKS-versjon; bare SOCKS5-proxyer er st\u00f8ttet.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Utf\u00f8r kommando n\u00e5r et relevant varsel er mottatt eller vi ser en veldig lang gaffel (%s i kommando er erstattet med melding)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Gebyrer (i BTC/Kb) mindre enn dette anses som null gebyr for videresending (standardverdi: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Hvis paytxfee ikke er angitt, inkluderer da nok i gebyr til at transaksjoner gjennomsnittligt bekreftes innen n blokker (standardverdi: %u)</translation>\n@@ -3080,10 +3223,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Maksimal st\u00f8rrelse p\u00e5 data i datab\u00e6rende transaksjoner vi videresender og uf\u00f8rer graving p\u00e5 (standardverdi: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Beskj\u00e6ringsmodus er konfigurert under minimum p\u00e5 %d MB. Vennligst bruk et h\u00f8yere nummer.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>S\u00f8k etter nodeadresser via DNS-oppslag, hvis vi har f\u00e5 adresser \u00e5 koble til (standard: 1 med mindre -connect)</translation>\n@@ -3108,38 +3247,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Dette produktet inneholder programvare utviklet av OpenSSL Project for bruk i OpenSSL Toolkit &lt;https://www.openssl.org/&gt; og kryptografisk programvare skrevet av Eric Young og UPnP-programvare skrevet av Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>For \u00e5 bruke bitcoind, eller -server valget til bitcoin-qt, m\u00e5 du angi et rpcpassord i konfigurasjonsfilen:\n-%s\n-Det anbefales at du bruker det f\u00f8lgende tilfeldige passordet:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(du beh\u00f8ver ikke \u00e5 huske passordet)\n-Brukernavnet og passordet M\u00c5 IKKE v\u00e6re like.\n-Om filen ikke eksisterer, opprett den med eier-kun-les filrettigheter.\n-Det er ogs\u00e5 anbefalt at \u00e5 sette varselsmelding slik du f\u00e5r melding om problemer;\n-for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Advarsel: -paytxfee er satt veldig h\u00f8yt! S\u00e5 stort gebyr kan bli betalt ved en enkelt transaksjon.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Advarsel: Vennligst unders\u00f8k at din datamaskin har riktig dato og klokkeslett! Hvis klokken er stilt feil vil ikke Bitcoin Core fungere riktig.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Hvitlistede noder kan ikke DoS-blokkeres, og deres transaksjoner videresendes alltid, selv om de allerede er i minnelageret. Nyttig f.eks. for en gateway.</translation>\n@@ -3160,10 +3267,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktiverer beste kjede...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>Kan ikke kj\u00f8re med en lommebok i beskj\u00e6ringsmodus.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Kan ikke l\u00f8se -whitebind-adresse: '%s'</translation>\n@@ -3180,10 +3283,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i utviklerne av Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Kunne ikke tolke -rpcbind-verdi %s som en nettverksadresse</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Feil ved lasting av wallet.dat: Lommeboken krever en nyere versjon av Bitcoin Core</translation>\n@@ -3192,14 +3291,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>Feil ved lesing fra database, stenger ned.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Feil: Argumentet -tor er ikke st\u00f8ttet, bruk -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Gebyr (i BTC/kB) for \u00e5 legge til i transaksjoner du sender (standardverdi: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informasjon</translation>\n@@ -3240,18 +3331,10 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Node relay options:</source>\n         <translation>Node alternativer for videresending:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL-valg: (se Bitcoin Wiki for oppsettsinstruksjoner for SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Innstillinger for RPC-server:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC-st\u00f8tte for persistente HTTP-forbindelser (standardverdi: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Gjenopprett blokkjedeindeks fra gjeldende blk000??.dat filer ved oppstart</translation>\n@@ -3260,6 +3343,10 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation>Motta og vis P2P nettverksvarsler (standardvalg: %u)</translation>\n     </message>\n+    <message>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n+        <translation>Reduserer -maxconnections fra %d til %d, pga. systembegrensninger.</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send spor-/feils\u00f8kingsinformasjon til konsollen istedenfor filen debug.log</translation>\n@@ -3328,10 +3415,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Kan ikke binde til %s p\u00e5 denne datamaskinen (binding returnerte feilen %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Bruk UPnP for lytteport (standardverdi: 1 ved lytting)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Brukernavn for JSON-RPC forbindelser</translation>\n@@ -3344,18 +3427,14 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Warning</source>\n         <translation>Advarsel</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Advarsel: Argumentet -benchmark er ikke st\u00f8ttet og ble ignorert, bruk -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Advarsel: Argumentet -debugnet er ikke st\u00f8ttet og ble ignorert, bruk -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Zapper alle transaksjoner fra lommeboken...</translation>\n     </message>\n+    <message>\n+        <source>ZeroMQ notification options:</source>\n+        <translation>Valg for ZeroMQ-meldinger:</translation>\n+    </message>\n     <message>\n         <source>on startup</source>\n         <translation>ved oppstart</translation>\n@@ -3380,10 +3459,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Se gjennom blokkjeden etter manglende lommeboktransaksjoner</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Bruk OpenSSL (https) for JSON-RPC forbindelser</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Denne hjelpemeldingen</translation>\n@@ -3404,6 +3479,22 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = behold metadata for transaksjon som f. eks. kontoeier og informasjon om betalingsanmodning, 2 = dropp metadata for transaksjon)</translation>\n     </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>-maxtxfee er satt veldig h\u00f8yt! S\u00e5 stort gebyr kan bli betalt ved en enkelt transaksjon.</translation>\n+    </message>\n+    <message>\n+        <source>-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>-paytxfee er satt veldig h\u00f8yt! Dette er transaksjonsgebyret du betaler n\u00e5r du sender transaksjoner.</translation>\n+    </message>\n+    <message>\n+        <source>Do not keep transactions in the mempool longer than &lt;n&gt; hours (default: %u)</source>\n+        <translation>Ikke hold transaksjoner i minnet lenger enn &lt;n&gt; timer (standard: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>Feil ved lesing av wallet.dat! Alle n\u00f8kler lest riktig, men transaksjonsdataene eller oppf\u00f8ringer i adresseboken mangler kanskje eller er feil.</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Hvor grundig blokkverifiseringen til -checkblocks er (0-4, standardverdi: %u)</translation>\n@@ -3420,6 +3511,18 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Ta ut feils\u00f8kingsinformasjon (standardverdi: %u, bruk av &lt;category&gt; er valgfritt)</translation>\n     </message>\n+    <message>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation>Total lengde av nettverks-versionstreng (%i) er over maks lengde (%i). Reduser tallet eller st\u00f8rrelsen av uacomments.</translation>\n+    </message>\n+    <message>\n+        <source>Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)</source>\n+        <translation>Pr\u00f8v \u00e5 holde utg\u00e5ende trafikk under angitt m\u00e5l (i MB per 24t), 0 = ingen grense (standard: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation>Argumentet -socks er ikke st\u00f8ttet. Det er ikke lenger mulig \u00e5 sette SOCKS-versjon; bare SOCKS5-proxyer er st\u00f8ttet.</translation>\n+    </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation>Bruk separate SOCKS5 proxyer for \u00e5 n\u00e5 noder via Tor skjulte tjenester (standardverdi: %s)</translation>\n@@ -3428,10 +3531,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(standardverdi: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Akseptable sifre (standardverdi: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Alltid s\u00f8k etter nodeadresser via DNS-oppslag (standardverdi: %u)</translation>\n@@ -3492,14 +3591,6 @@ for eksempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Videresend ikke-P2SH multisig (standardverdi: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Fil for tjenersertifikat (standardverdi: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Privat n\u00f8kkel for tjener (standardverdi: %s) </translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Angi st\u00f8rrelse p\u00e5 n\u00f8kkel-lager til &lt;n&gt; (standardverdi: %u)</translation>"
      },
      {
        "sha": "cbb1dc0fe31c342d59e5b9150296dc8c23e9ff53",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 28,
        "deletions": 132,
        "changes": 160,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"nl\" version=\"2.0\">\n+<TS language=\"nl\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>Portemonneewachtwoord is met succes gewijzigd.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1286,10 +1289,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Betalingsverzoek %1 is te groot (%2 bytes, toegestaan \u200b\u200b%3 bytes).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Betalingsaanvraag DoS bescherming</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Fout bij communiceren met %1: %2</translation>\n@@ -1474,14 +1473,6 @@\n         <source>Services</source>\n         <translation>Services</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Aanvangshoogte</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Synchronisatiehoogte</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Ban score</translation>\n@@ -1599,12 +1590,16 @@\n         <translation>Uitgaand</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Onbekend</translation>\n+        <source>Yes</source>\n+        <translation>Ja</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Ophalen...</translation>\n+        <source>No</source>\n+        <translation>Nee</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Onbekend</translation>\n     </message>\n </context>\n <context>\n@@ -1970,10 +1965,6 @@\n         <source>Copy change</source>\n         <translation>Kopieer wijziging</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Totaal bedrag %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>of</translation>\n@@ -2085,6 +2076,14 @@\n         <source>Remove this entry</source>\n         <translation>Verwijder deze toevoeging</translation>\n     </message>\n+    <message>\n+        <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n+        <translation>De vergoeding zal worden afgetrokken van het bedrag dat verzonden wordt. De ontvangers zullen minder bitcoins ontvangen dan ingevoerd is in het hoeveelheids veld. Als er meerdere ontvangers geselecteerd zijn, dan wordt de vergoeding gelijk verdeeld.</translation>\n+    </message>\n+    <message>\n+        <source>S&amp;ubtract fee from amount</source>\n+        <translation>Trek de vergoeding af van het bedrag.</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Bericht:</translation>\n@@ -2191,6 +2190,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;Verifi\u00eber Bericht</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Voer het adres van de ontvanger in, bericht (zorg ervoor dat de regeleinden, spaties, tabs etc. precies kloppen) en onderteken onderaan om het bericht te verifi\u00ebren. Wees voorzicht om niet meer in de ondertekening te lezen dan in het getekende bericht zelf, om te voorkomen dat je wordt aangevallen met een man-in-the-middle attack. Houd er mee rekening dat dit alleen de ondertekende partij bewijst met het ontvangen adres, er kan niet bewezen worden dat er een transactie heeft plaatsgevonden!</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Het Bitcoin adres waarmee het bericht ondertekend is</translation>\n@@ -2769,12 +2772,12 @@\n         <translation>Aanvaard commandoregel- en JSON-RPC-commando's</translation>\n     </message>\n     <message>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Draai in de achtergrond als daemon en aanvaard commando's</translation>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Fout: er is een fout opgetreden,  zie debug.log voor details</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Gebruik het testnetwerk</translation>\n+        <source>Run in the background as a daemon and accept commands</source>\n+        <translation>Draai in de achtergrond als daemon en aanvaard commando's</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2812,10 +2815,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>WAARSCHUWING: controleer uw netwerkverbinding, %d blokken ontvangen in de laatste %d uren (%d verwacht)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Waarschuwing: -paytxfee is zeer hoog ingesteld.  Dit zijn de transactiekosten die u betaalt bij het versturen van een transactie.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Waarschuwing: Het lijkt erop dat het netwerk geen consensus kan vinden! Sommige delvers lijken problemen te ondervinden.</translation>\n@@ -2824,10 +2823,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Waarschuwing: Het lijkt erop dat we geen consensus kunnen vinden met onze peers! Mogelijk dient u te upgraden, of andere nodes moeten wellicht upgraden.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Waarschuwing: Fout bij het lezen van wallet.dat! Alle sleutels zijn in goede orde uitgelezen, maar transactiedata of adresboeklemma's zouden kunnen ontbreken of fouten bevatten.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Waarschuwing: wallet.dat is corrupt, data is veiliggesteld! Originele wallet.dat is opgeslagen als wallet.{tijdstip}.bak in %s; als uw balans of transacties incorrect zijn dient u een backup terug te zetten.</translation>\n@@ -2892,10 +2887,6 @@\n         <source>Error opening block database</source>\n         <translation>Fout bij openen blokkendatabase</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Fout: Een fatale interne fout is opgetreden, zie debug.log voor details</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Fout: Weinig vrije diskruimte!</translation>\n@@ -2904,10 +2895,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Mislukt om op welke poort dan ook te luisteren. Gebruik -listen=0 as u dit wilt.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Als er geen &lt;category&gt; is opgegeven, laat dan alle debugging informatie zien.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importeren...</translation>\n@@ -2976,10 +2963,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Sta JSON-RPC verbindingen toe vanuit een gespecificeerde bron. Geldig voor &lt;ip&gt; zijn een enkel IP (bijv. 1.2.3.4), een netwerk/netmask (bijv. 1.2.3.4/255.255.255.0) of een netwerk/CIDR (bijv. 1.2.3.4/24). Deze optie kan meerdere keren gespecificeerd worden.</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Er is een fout opgetreden tijdens het opzetten van het RPC adres %s poort %u voor luisteren: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Bind aan opgegeven adres en keur peers die ermee verbinden goed. Gebruik [host]:poort notatie voor IPv6</translation>\n@@ -3000,18 +2983,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Fout: luisteren naar binnenkomende verbindingen mislukt (luisteren gaf foutmelding %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Fout: er is een niet-ondersteund argument -socks aangetroffen. Het instellen van de SOCKS-versie is niet langer mogelijk. Alleen SOCKS5-proxy's worden ondersteund.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Voer commando uit zodra een waarschuwing is ontvangen of wanneer we een erg lange fork detecteren (%s in commando wordt vervangen door bericht)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Toeslagen (in BTC/Kb) kleiner dan dit worden beschouwd als geen vergoeding (voor doorgeven) (standaard: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Als paytxfee niet is ingesteld, het pakket voldoende vergoeding zodat transacties beginnen bevestiging gemiddeld binnen in blokken (default: %u)</translation>\n@@ -3045,37 +3020,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Dit product bevat software dat ontwikkeld is door het OpenSSL Project voor gebruik in de OpenSSL Toolkit &lt;https://www.openssl.org/&gt; en cryptografische software geschreven door Eric Young en UPnP software geschreven door Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Om bitcoind of de -server optie naar bitcoin-gt te gebruiken, dient u een rpcwachtwoord in te stellen in het configuratiebestand:\n- %s\n-Wij raden u aan om het volgende wachtwoord willekeurig te gebruiken: \n-rpcuser=bitcoinrpc \n-rpcpassword=%s \n-(u hoeft dit wachtwoord niet te onthouden)\n-De gebruikersnaam en het wachtwoorden moeten NIET hetzelfde zijn. \n-Indien het bestand niet bestaat, maak het bestand aan met bestandsrechten: alleen lezen voor eigenaar.\n-Het is ook aan te raden om een alarmnotificatie in te stellen, zodat u op de hoogte bent van de problemen;\n-Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Let op: -maxtxfee is erg hoog ingesteld! Transactiekosten van dergelijke groottes kunnen in een enkele transactie worden betaald.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Waarschuwing: Controleer dat de datum en tijd van uw computer correct zijn ingesteld! Bij een onjuist ingestelde klok zal Bitcoin Core niet goed werken.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Goedgekeurde peers kunnen niet ge-DoS-banned worden en hun transacties worden altijd doorgestuurd, zelfs als ze reeds in de mempool aanwezig zijn, nuttig voor bijv. een gateway</translation>\n@@ -3108,10 +3052,6 @@ Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</transla\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Auteursrecht (C) 2009-%i De Bitcoin Core Ontwikkelaars</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Niet mogelijk om -rpcbind waarde %s te verwerken als netwerk adres</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Fout bij laden wallet.dat: Portemonnee vereist een nieuwere versie van Bitcoin Core</translation>\n@@ -3120,14 +3060,6 @@ Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</transla\n         <source>Error reading from database, shutting down.</source>\n         <translation>Fout bij het lezen van de database, afsluiten. </translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Fout: Niet ondersteund argument -tor gevonden, gebruik -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Transactiekosten (in BTC/kB) om toe te voegen aan transacties die u verstuurd (standaard: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informatie</translation>\n@@ -3168,18 +3100,10 @@ Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</transla\n         <source>Node relay options:</source>\n         <translation>Node relay opties:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL opties: (zie de Bitcoin Wiki voor SSL installatie-instructies)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC server opties:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC ondersteuning voor HTTP persisten verbindingen (default: %d)</translation>\n-    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Stuur trace/debug-info naar de console in plaats van het debug.log bestand</translation>\n@@ -3248,10 +3172,6 @@ Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</transla\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Niet in staat om aan %s te binden op deze computer (bind gaf error %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Gebruik UPnP om de luisterende poort te mappen (standaard: 1 als er wordt geluisterd)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Gebruikersnaam voor JSON-RPC-verbindingen</translation>\n@@ -3264,14 +3184,6 @@ Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</transla\n         <source>Warning</source>\n         <translation>Waarschuwing</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Waarschuwing: Niet ondersteund argument -benchmark genegeerd, gebruik -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Waarschuwing: Niet ondersteund argument -debugnet genegeerd, gebruik -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Bezig met het zappen van alle transacties van de portemonnee...</translation>\n@@ -3300,10 +3212,6 @@ Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</transla\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Doorzoek de blokketen op ontbrekende portemonnee-transacties</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Gebruik OpenSSL (https) voor JSON-RPC-verbindingen</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Dit helpbericht</translation>\n@@ -3344,10 +3252,6 @@ Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</transla\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation>Gebruik een aparte SOCKS5 proxy om 'Tor hidden services' te bereiken (standaard: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Geaccepteerde versleutelingen (standaard: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Vind anderen door middel van een DNS-naslag (standaard: %u)</translation>\n@@ -3408,14 +3312,6 @@ Voorbeeld: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com</transla\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Certificaat-bestand voor server (standaard: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Geheime sleutel voor server (standaard: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Stel sleutelpoelgrootte in op &lt;&amp;&gt; (standaard: %u)</translation>"
      },
      {
        "sha": "f5e74261f05c49329a25749b169e3ae5c0e4f72c",
        "filename": "src/qt/locale/bitcoin_pam.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 13,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_pam.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_pam.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pam.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"pam\" version=\"2.0\">\n+<TS language=\"pam\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -188,6 +188,9 @@\n         <translation>Mi-alilan ne ing passphrase na ning wallet.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1326,18 +1329,10 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Gumana king gulut bilang daemon at tumanggap commands</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Gamitan ing test network</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Tumanggap koneksion menibat king kilwal (default: 1 if no -proxy or -connect)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Kapabaluan: Sobra ya katas ing makalage king -paytxfee. Ini ing maging bayad mu para king bayad na ning transaksion istung pepadala me ing transaksion a ini.</translation>\n-    </message>\n     <message>\n         <source>Block creation options:</source>\n         <translation>Pipamilian king pamag-gawang block:</translation>\n@@ -1418,10 +1413,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>I-scan pasibayu ing block chain para kareng mauaualang transaksion</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Gumamit OpenSSL(https) para king JSON-RPC koneksion</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Ining saup a mensayi</translation>"
      },
      {
        "sha": "ed828539ee647c44572e5ee035943909a384bfcd",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 30,
        "deletions": 135,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"pl\" version=\"2.0\">\n+<TS language=\"pl\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>Has\u0142o portfela zosta\u0142o pomy\u015blnie zmienione.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1282,10 +1285,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>\u017b\u0105danie p\u0142atno\u015bci %1 jest zbyt du\u017ce (%2 bajt\u00f3w, dozwolone %3 bajt\u00f3w).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Zabezpieczenie \u017c\u0105dania p\u0142atno\u015bci przed atakiem DoS</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>B\u0142\u0105d komunikacji z %1 : %2</translation>\n@@ -1474,14 +1473,6 @@\n         <source>Services</source>\n         <translation>Us\u0142ugi</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Pocz\u0105tkowa wysoko\u015b\u0107</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Zsynchronizowana wysoko\u015b\u0107</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Punkty karne</translation>\n@@ -1606,10 +1597,6 @@\n         <source>Unknown</source>\n         <translation>Nieznany</translation>\n     </message>\n-    <message>\n-        <source>Fetching...</source>\n-        <translation>Pobieram...</translation>\n-    </message>\n </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n@@ -1970,10 +1957,6 @@\n         <source>Copy change</source>\n         <translation>Skopiuj reszt\u0119</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u0141\u0105czna kwota %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>lub</translation>\n@@ -2014,6 +1997,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>P\u0142ac tylko minimalna op\u0142at\u0119 %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>Ca\u0142kowita kwota %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Adres odbiorcy jest nieprawid\u0142owy, prosz\u0119 sprawi\u0107 ponownie.</translation>\n@@ -2789,12 +2776,16 @@\n         <translation>Akceptuj lini\u0119 polece\u0144 oraz polecenia JSON-RPC</translation>\n     </message>\n     <message>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Uruchom w tle jako daemon i przyjmuj polecenia</translation>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>B\u0142\u0105d: Wyst\u0105pi\u0142 fatalny b\u0142\u0105d wewn\u0119trzny, sprawd\u017a szczeg\u00f3\u0142y w debug.log</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>Przycinanie zapisu blok\u00f3w...</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>U\u017cyj sieci testowej</translation>\n+        <source>Run in the background as a daemon and accept commands</source>\n+        <translation>Uruchom w tle jako daemon i przyjmuj polecenia</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2829,8 +2820,12 @@\n         <translation>Nie mo\u017cna przywi\u0105za\u0107 z portem %s na tym komputerze. Bitcoin Core prawdopodobnie ju\u017c dzia\u0142a.</translation>\n     </message>\n     <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Ostrze\u017cenie: -paytxfee jest bardzo du\u017ce! Jest to prowizja za transakcje, kt\u00f3r\u0105 p\u0142acisz, gdy wysy\u0142asz monety.</translation>\n+        <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>UWAGA: nienaturalnie du\u017ca liczba wygenerowanych blok\u00f3w, %d blok\u00f3w otrzymano w ostatnich %d godzinach (%d oczekiwanych)</translation>\n+    </message>\n+    <message>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>UWAGA: sprawd\u017a swoje po\u0142\u0105czenie sieciowe, %d blok\u00f3w otrzymano w ostatnich %d godzinach (%d oczekiwanych)</translation>\n     </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n@@ -2840,10 +2835,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Uwaga: Wygl\u0105da na to, \u017ce nie ma pe\u0142nej zgodno\u015bci z naszymi peerami! Mo\u017cliwe, \u017ce potrzebujesz aktualizacji b\u0105d\u017a inne w\u0119z\u0142y jej potrzebuj\u0105</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Ostrze\u017cenie: b\u0142\u0105d odczytu wallet.dat! Wszystkie klucze zosta\u0142y odczytane, ale mo\u017ce brakowa\u0107 pewnych danych transakcji lub wpis\u00f3w w ksi\u0105\u017cce adresowej lub mog\u0105 one by\u0107 nieprawid\u0142owe.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Ostrze\u017cenie: Odtworzono dane z uszkodzonego pliku wallet.dat! Oryginalny wallet.dat zosta\u0142 zapisany jako wallet.{timestamp}.bak w %s; je\u015bli twoje saldo lub transakcje s\u0105 niepoprawne powiniene\u015b odtworzy\u0107 kopi\u0119 zapasow\u0105.</translation>\n@@ -2908,10 +2899,6 @@\n         <source>Error opening block database</source>\n         <translation>B\u0142\u0105d otwierania bazy blok\u00f3w</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>B\u0142\u0105d: Wyst\u0105pi\u0142 krytyczny b\u0142\u0105d wewn\u0119trzny, sprawd\u017a w debug.log</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>B\u0142\u0105d: Ma\u0142o miejsca na dysku!</translation>\n@@ -2920,10 +2907,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Pr\u00f3ba nas\u0142uchiwania na jakimkolwiek porcie nie powiod\u0142a si\u0119. U\u017cyj -listen=0 je\u015bli tego chcesz.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Je\u017celi &lt;category&gt; nie zostanie okre\u015blona, wy\u015bwietl wszystkie informacje debugowania.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importowanie\u2026</translation>\n@@ -2944,6 +2927,10 @@\n         <source>Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)</source>\n         <translation>\u0141\u0105cz z w\u0119z\u0142ami tylko w sieci &lt;net&gt; (ipv4, piv6 lub onion)</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>Przycinanie nie mo\u017ce by\u0107 skonfigurowane z negatywn\u0105 warto\u015bci\u0105.</translation>\n+    </message>\n     <message>\n         <source>Prune mode is incompatible with -txindex.</source>\n         <translation>Tryb ograniczony jest niekompatybilny z -txindex.</translation>\n@@ -2996,10 +2983,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Pozw\u00f3l na po\u0142\u0105czenia JSON-RPC z podanego \u017ar\u00f3d\u0142a. Jako &lt;ip&gt; prawid\u0142owe jest pojedyncze IP (np. 1.2.3.4), podsie\u0107/maska (np. 1.2.3.4/255.255.255.0) lub sie\u0107/CIDR (np. 1.2.3.4/24). Opcja ta mo\u017ce by\u0107 u\u017cyta wiele razy.</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Napotkano b\u0142\u0105d podczas ustawiania adres RPC %s port %u dla nas\u0142uchiwania: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Podepnij si\u0119 do podanego adresu i dodawaj do bia\u0142ej listy w\u0119z\u0142y \u0142\u0105cz\u0105ce si\u0119 z nim. U\u017cyj notacji [host]:port dla IPv6</translation>\n@@ -3017,21 +3000,17 @@\n         <translation>Tw\u00f3rz nowe pliki z domy\u015blnymi dla systemu uprawnieniami, zamiast umask 077 (skuteczne tylko przy wy\u0142\u0105czonej funkcjonalno\u015bci portfela)</translation>\n     </message>\n     <message>\n-        <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n-        <translation>B\u0142\u0105d: Nas\u0142uchiwanie po\u0142\u0105cze\u0144 przychodz\u0105cych nie powiod\u0142o si\u0119 (nas\u0142uch zwr\u00f3ci\u0142 b\u0142\u0105d %s)</translation>\n+        <source>Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)</source>\n+        <translation>Odkryj w\u0142asny adres IP (domy\u015blnie: 1 kiedy w trybie nas\u0142uchu i brak -externalip lub -proxy)</translation>\n     </message>\n     <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>B\u0142\u0105d: Znaleziono niewspierany argument -socks . Ustawienie wersji SOCKS nie jest ju\u017c mo\u017cliwe, tylko serwery proxy SOCKS5 s\u0105 wspierane.</translation>\n+        <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n+        <translation>B\u0142\u0105d: Nas\u0142uchiwanie po\u0142\u0105cze\u0144 przychodz\u0105cych nie powiod\u0142o si\u0119 (nas\u0142uch zwr\u00f3ci\u0142 b\u0142\u0105d %s)</translation>\n     </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Uruchom polecenie przy otrzymaniu odpowiedniego powiadomienia lub gdy zobaczymy naprawd\u0119 d\u0142ugie rozga\u0142\u0119zienie (%s w poleceniu jest podstawiane za komunikat)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Op\u0142aty (w BTC/Kb) mniejsze ni\u017c ta b\u0119d\u0105 traktowane jako bez op\u0142aty przy propagowaniu (domy\u015blnie: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Je\u017celi nie ustawiono paytxfee, do\u0142\u0105cz wystarczaj\u0105ca op\u0142at\u0119, aby transakcja mog\u0142a zosta\u0107 zatwierdzona w ci\u0105gu \u015bredniej ilo\u015bci n blok\u00f3w (domy\u015blnie: %u)</translation>\n@@ -3064,38 +3043,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Program ten zawiera oprogramowanie stworzone przez OpenSSL Project do u\u017cycia w OpensSSL Toolkit &lt;https://www.openssl.org/&gt;, oprogramowanie kryptograficzne napisane przez Eric Young oraz oprogramowanie UPnP napisane przez Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Aby korzysta\u0107 z bitcoind, lub opcji -server w bitcoin-qt, musisz ustawi\u0107 opcj\u0119 rpcpassword w pliku konfiguracyjnym:\n-%s\n-Zalecane jest u\u017cycie poni\u017cszego losowego has\u0142a:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(nie musisz pami\u0119ta\u0107 tego has\u0142a)\n-Nazwa u\u017cytkownika i has\u0142o NIE MOG\u0104 by\u0107 takie same.\n-Je\u017celi ten plik nie istnieje, utw\u00f3rz go z uprawnieniami tylko-do-odczytu przez w\u0142a\u015bciciela.\n-Zalecane jest tak\u017ce ustawienie opcji alertnotify, dzi\u0119ki kt\u00f3rej b\u0119dziesz powiadamiany o problemach;\n-na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Ostrze\u017cenie: -matxfee jest ustawione bardzo wysokie! Tak wysokie op\u0142aty mog\u0105 by\u0107 zap\u0142acone w jednej transakcji.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Ostrze\u017cenie: Prosz\u0119 sprawdzi\u0107 czy data i czas na Twoim komputerze s\u0105 poprawne! Je\u017celi ustawienia zegara b\u0119d\u0105 z\u0142e, Bitcoin Core nie b\u0119dzie dzia\u0142a\u0142 prawid\u0142owo.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>W\u0119z\u0142y z bia\u0142ej listy nie mog\u0105 zosta\u0107 zbanowane za ataki DoS, a ich transakcje b\u0119d\u0105 zawsze przekazywane, nawet je\u017celi b\u0119d\u0105 znajdywa\u0107 si\u0119 ju\u017c w pami\u0119ci, przydatne np. dla bramek p\u0142atniczych</translation>\n@@ -3112,10 +3059,6 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktywuje najlepszy \u0142a\u0144cuch</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>Nie mo\u017cna uruchomi\u0107 z portfela w trybie ograniczonym.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Nie mo\u017cna rozwi\u0105za\u0107 adresu -whitebind: '%s'</translation>\n@@ -3132,10 +3075,6 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i The Bitcoin Core Developers</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Nie mo\u017cna przetworzy\u0107 warto\u015bci -rpcbind %s jako adresu sieciowego</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>B\u0142\u0105d \u0142adowania wallet.dat: Portfel wymaga nowszej wersji Bitcoin Core</translation>\n@@ -3144,14 +3083,6 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>B\u0142\u0105d odczytu z bazy danych, wy\u0142\u0105czam si\u0119.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>B\u0142\u0105d: Znaleziono nieprawid\u0142owy argument -tor, u\u017cyj -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Prowizja (w BTC za kB) dodawana do wysy\u0142anej transakcji (domy\u015blnie: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informacja</translation>\n@@ -3188,18 +3119,10 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>Node relay options:</source>\n         <translation>Opcje przeka\u017anikowe w\u0119z\u0142a:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Opcje RPC SSL: (odwied\u017a Bitcoin Wiki w celu uzyskania instrukcji)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Opcje serwera RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Wsparcie RPC dla ci\u0105g\u0142ych po\u0142\u0105cze\u0144 HTTP  (domy\u015blnie: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Odbuduj indeks \u0142a\u0144cucha blok\u00f3w z obecnych plik\u00f3w blk000??.dat podczas ponownego uruchomienia</translation>\n@@ -3276,10 +3199,6 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Nie mo\u017cna przywi\u0105za\u0107 do %s na tym komputerze (bind zwr\u00f3ci\u0142 b\u0142\u0105d %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>U\u017cywaj UPnP do mapowania portu nas\u0142uchu (domy\u015blnie: 1 gdy nas\u0142uchuje)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nazwa u\u017cytkownika dla po\u0142\u0105cze\u0144 JSON-RPC</translation>\n@@ -3292,14 +3211,6 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>Warning</source>\n         <translation>Ostrze\u017cenie</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Uwaga: Zignorowano nieprawid\u0142owy argument -benchmark, u\u017cyj -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Uwaga: Zignorowano nieprawid\u0142owy argument -debugnet , u\u017cyj -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Usuwam wszystkie transakcje z portfela...</translation>\n@@ -3328,10 +3239,6 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Przeskanuj \u0142a\u0144cuch blok\u00f3w w poszukiwaniu zaginionych transakcji portfela</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>U\u017cyj OpenSSL (https) do po\u0142\u0105cze\u0144 JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Ta wiadomo\u015b\u0107 pomocy</translation>\n@@ -3376,10 +3283,6 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(domy\u015blnie: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Akceptowane szyfry (domy\u015blne: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>Zawsze wypytuj o adresy w\u0119z\u0142\u00f3w poprzez podejrzenie DNS (domy\u015blnie: %u)</translation>\n@@ -3440,14 +3343,6 @@ na przyk\u0142ad: alertnotify=echo %%s | mail -s \"Alarm Bitcoin\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Przekazuj transakcje multisig inne ni\u017c P2SH (domy\u015blnie: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Plik certyfikatu serwera (domy\u015blnie: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Klucz prywatny serwera (domy\u015blnie: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Ustaw rozmiar puli kluczy na &lt;n&gt; (domy\u015blnie: %u)</translation>"
      },
      {
        "sha": "da28365de0c7138344e938a72fb5ee3c3acb7205",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 56,
        "deletions": 117,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"pt_BR\" version=\"2.0\">\n+<TS language=\"pt_BR\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -67,7 +67,7 @@\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>Esses s\u00e3o seus endere\u00e7os Bitcoin para enviar pagamentos. Certifique-se sempre da quantia e do destinat\u00e1rio antes de enviar moedas.</translation>\n+        <translation>Esses s\u00e3o seus endere\u00e7os Bitcoin para enviar pagamentos. Confira sempre a quantia e o destinat\u00e1rio antes de enviar moedas.</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n@@ -220,6 +220,9 @@\n         <translation>A frase de seguran\u00e7a da carteira foi alterada com \u00eaxito.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1226,6 +1229,10 @@\n         <source>Payment request rejected</source>\n         <translation>Solicita\u00e7\u00e3o de pagamento rejeitada</translation>\n     </message>\n+    <message>\n+        <source>Payment request network doesn't match client network.</source>\n+        <translation>Rede de pedido de pagamento n\u00e3o corresponde rede do cliente.</translation>\n+    </message>\n     <message>\n         <source>Payment request is not initialized.</source>\n         <translation>Pedido de pagamento n\u00e3o \u00e9 inicializado.</translation>\n@@ -1246,10 +1253,18 @@\n         <source>Payment request fetch URL is invalid: %1</source>\n         <translation>URL de cobran\u00e7a \u00e9 inv\u00e1lida: %1</translation>\n     </message>\n+    <message>\n+        <source>URI cannot be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n+        <translation>URI n\u00e3o pode ser analisado ! Isto pode ser causado por um endere\u00e7o Bitcoin inv\u00e1lido ou par\u00e2metros URI informados incorretamente.</translation>\n+    </message>\n     <message>\n         <source>Payment request file handling</source>\n         <translation>Manipula\u00e7\u00e3o de arquivo de cobran\u00e7a</translation>\n     </message>\n+    <message>\n+        <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n+        <translation>Arquivo de pedido de pagamento n\u00e3o pode ser lido ! Isto pode ser causado por uma requisi\u00e7\u00e3o de pagamento inv\u00e1lida.</translation>\n+    </message>\n     <message>\n         <source>Payment request expired.</source>\n         <translation>Pedido de pagamento expirado.</translation>\n@@ -1270,10 +1285,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Pedido de pagamento %1 \u00e9 muito grande (%2 bytes, permitido %3 bytes).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Pagamento requer prote\u00e7\u00e3o DoS</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Erro na comunica\u00e7\u00e3o com %1: %2</translation>\n@@ -1462,14 +1473,6 @@\n         <source>Services</source>\n         <translation>Servi\u00e7os</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Altura inicial</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Altura sincronizada</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Banir pontua\u00e7\u00e3o</translation>\n@@ -1587,12 +1590,16 @@\n         <translation>Sa\u00edda</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Desconhecido</translation>\n+        <source>Yes</source>\n+        <translation>Sim</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Buscando...</translation>\n+        <source>No</source>\n+        <translation>N\u00e3o</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Desconhecido</translation>\n     </message>\n </context>\n <context>\n@@ -1816,7 +1823,7 @@\n     </message>\n     <message>\n         <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n-        <translation>Se isso estiver ativo e o endere\u00e7o de troco estiver vazio ou inv\u00e1lido, o troco ser\u00e1 enviado a um novo endere\u00e7o gerado na hora.</translation>\n+        <translation>Se essa op\u00e7\u00e3o for ativada e o endere\u00e7o de troco estiver vazio ou inv\u00e1lido, o troco ser\u00e1 enviado a um novo endere\u00e7o gerado na hora.</translation>\n     </message>\n     <message>\n         <source>Custom change address</source>\n@@ -1958,10 +1965,6 @@\n         <source>Copy change</source>\n         <translation>Copia altera\u00e7\u00e3o</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Quantidade Total %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>ou</translation>\n@@ -2083,7 +2086,7 @@\n     </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n-        <translation>A taxa ser\u00e1 deduzida da quantia sendo enviada. O beneficiario receber\u00e1 menos bitcoins do que voc\u00ea colocou no campo de quantidade. Se varios beneficiarios est\u00e3o selecionados, a taxa \u00e9 dividida igualmente.</translation>\n+        <translation>A taxa ser\u00e1 deduzida da quantia sendo enviada. O destinat\u00e1rio receber\u00e1 menos bitcoins do que voc\u00ea colocou no campo de quantidade. Se varios destinat\u00e1rios est\u00e3o selecionados, a taxa \u00e9 dividida igualmente.</translation>\n     </message>\n     <message>\n         <source>S&amp;ubtract fee from amount</source>\n@@ -2122,7 +2125,7 @@\n     <name>ShutdownWindow</name>\n     <message>\n         <source>Bitcoin Core is shutting down...</source>\n-        <translation>Bitcoin est\u00e1 desligando...</translation>\n+        <translation>Bitcoin est\u00e1 sendo encerrado...</translation>\n     </message>\n     <message>\n         <source>Do not shut down the computer until this window disappears.</source>\n@@ -2139,6 +2142,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;Assinar mensagem</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>Voc\u00ea pode assinar mensagens com seus endere\u00e7os para provar que voc\u00ea pode receber bitcoins enviados por algu\u00e9m. Cuidado para n\u00e3o assinar nada vago ou aleat\u00f3rio, pois ataques phishing podem tentar te enganar para assinar coisas para eles como se fosse voc\u00ea. Somente assine termos bem detalhados que voc\u00ea concorde.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>O enderesso Bitcoin que assinar\u00e1 a mensagem</translation>\n@@ -2191,6 +2198,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>&amp;Verificar mensagem</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Coloque o endere\u00e7o do destinat\u00e1rio, a mensagem (certifique-se de copiar toda a mensagem, incluindo quebras de linha, espa\u00e7os, tabula\u00e7\u00f5es, etc.) e a assinatura embaixo para verificar a mensagem. Cuidado para n\u00e3o ler mais da assinatura do que est\u00e1 assinado na mensagem, para evitar ser enganado pelo ataque man-in-the-middle. Note que isso somente prova a propriedade de um endere\u00e7o, e n\u00e3o o remetende de qualquer transa\u00e7\u00e3o.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>O enderesso Bitcoin que assionou a mesnagem</translation>\n@@ -2769,12 +2780,12 @@\n         <translation>Aceitar linha de comando e comandos JSON-RPC</translation>\n     </message>\n     <message>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Rodar em segundo plano como servi\u00e7o e aceitar comandos</translation>\n+        <source>Pruning blockstore...</source>\n+        <translation>Prunando os blocos existentes...</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Usar rede de teste</translation>\n+        <source>Run in the background as a daemon and accept commands</source>\n+        <translation>Rodar em segundo plano como servi\u00e7o e aceitar comandos</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2796,10 +2807,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Executa um comando quando uma transa\u00e7\u00e3o da carteira mudar (%s no comando ser\u00e1 substitu\u00eddo por TxID)</translation>\n     </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Reduz o armazenamento requerido prunando (apagando) blocos antigos. Este modo desativa o suporte a carteira e \u00e9 incompat\u00edvel com -txindex. Aviso: Reverter essa op\u00e7\u00e3o requer re-baixar o blockchain inteiro. (padr\u00e3o: 0 = disativado, &gt;%u = Tamanho em mega para os arquivos de bloco)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Define o n\u00famero de threads de verifica\u00e7\u00e3o de script (%u a %d, 0 = autom\u00e1tico, &lt;0 = n\u00famero de cores deixados livres, padr\u00e3o: %d)</translation>\n@@ -2813,8 +2820,8 @@\n         <translation>Imposs\u00edvel ouvir em %s neste computador. Provavelmente o Bitcoin j\u00e1 est\u00e1 sendo executado.</translation>\n     </message>\n     <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Aten\u00e7\u00e3o: valor de -paytxfee escolhido \u00e9 muito alto! Este \u00e9 o valor da taxa de transa\u00e7\u00e3o que voc\u00ea ir\u00e1 pagar se enviar a transa\u00e7\u00e3o.</translation>\n+        <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n+        <translation>ATEN\u00c7\u00c3O: verifique sua conex\u00e3o %d blocos recebidos nas \u00faltimas %d horas (%d tempo estimado)</translation>\n     </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n@@ -2824,10 +2831,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Aten\u00e7\u00e3o: N\u00f3s n\u00e3o parecemos concordar plenamente com nossos colegas! Voc\u00ea pode precisar atualizar ou outros n\u00f3s podem precisar atualizar.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Aten\u00e7\u00e3o: erro ao ler arquivo wallet.dat! Todas as chaves foram lidas corretamente, mas dados de transa\u00e7\u00f5es e do cat\u00e1logo de endere\u00e7os podem estar faltando ou incorretos.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aten\u00e7\u00e3o: wallet.dat corrompido, dados recuperados! Arquivo wallet.dat original salvo como wallet.{timestamp}.bak em %s; se seu saldo ou transa\u00e7\u00f5es estiverem incorretos, voc\u00ea deve restaurar o backup.</translation>\n@@ -2892,10 +2895,6 @@\n         <source>Error opening block database</source>\n         <translation>Erro ao abrir banco de dados de blocos</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Erro: Um erro interno fatal ocorreu, ver o debug.log para detalhes</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Erro: Espa\u00e7o em disco insuficiente!</translation>\n@@ -2904,10 +2903,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Falha ao escutar em qualquer porta. Use -listen=0 se voc\u00ea quiser isso.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Se &lt;category&gt; n\u00e3o for informada, registrar toda informa\u00e7\u00e3o de depura\u00e7\u00e3o.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importando...</translation>\n@@ -2984,10 +2979,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Permitir conex\u00f5es JSON-RPC de uma fonte espec\u00edfica. V\u00e1lido para um \u00fanico ip (ex. 1.2.3.4), at\u00e9 uma rede/m\u00e1scara (ex. 1.2.3.4/255.255.255.0) ou uma rede/CIDR (ex. 1.2.3.4/24). Esta op\u00e7\u00e3o pode ser usada m\u00faltiplas vezes</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Um erro ocorreu enquanto configurando o endere\u00e7o RPC %s porta %u para escuta: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Vincular ao endere\u00e7o fornecido e sempre escutar nele. Use a nota\u00e7\u00e3o [host]:port para IPv6</translation>\n@@ -3008,41 +2999,13 @@\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Executa um comando quando um alerta relevante \u00e9 recebido ou vemos uma longa segrega\u00e7\u00e3o (%s em cmd \u00e9 substitu\u00eddo pela mensagem)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Taxas (em BTC/Kb) menores do que este valor s\u00e3o consideradas inexistentes para divulga\u00e7\u00e3o (padr\u00e3o: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Prunagem configurada abaixo do m\u00ednimo de %d MB.  Use um n\u00famero maior.</translation>\n-    </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Define o tamanho m\u00e1ximo de alta-prioridade por taxa baixa nas transa\u00e7\u00f5es em bytes (padr\u00e3o: %d)</translation>\n     </message>\n     <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>Para usar o bitcoind, ou a op\u00e7\u00e3o -server do bitcoin-qt, voc\u00ea deve definir rpcpassword no arquivo de configura\u00e7\u00e3o:\n-%s\n-\u00c9 recomendado que use a seguinte senha rand\u00f4mica:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(voc\u00ea n\u00e3o precisa lembrar esta senha)\n-O usu\u00e1rio e senha N\u00c3O DEVEM ser os mesmos.\n-Se o arquivo n\u00e3o existir, crie com permiss\u00e3o de propriet\u00e1rio criador somente.\n-\u00c9 tamb\u00e9m recomendado definir a op\u00e7\u00e3o alertnotify se deseja ser notificado de problemas;\n-por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n-</translation>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>A quantia da transa\u00e7\u00e3o \u00e9 muito pequena para mandar </translation>\n     </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n@@ -3072,10 +3035,6 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i Desenvolvedores Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Imposs\u00edvel interpretar o valor -rpcbind %s como um endere\u00e7o da rede</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Erro ao carregar wallet.dat: A carteira requer a nova vers\u00e3o do Bitcoin</translation>\n@@ -3084,14 +3043,6 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Error reading from database, shutting down.</source>\n         <translation>Erro ao ler o banco de dados. Finalizando.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Erro: Argumento n\u00e3o suportado -tor, use -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Taxa (em BTC/kB) a adicionar nas transa\u00e7\u00f5es que voc\u00ea envia (padr\u00e3o: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informa\u00e7\u00e3o</translation>\n@@ -3124,14 +3075,14 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Node relay options:</source>\n         <translation>Op\u00e7\u00f5es de rel\u00e9 n\u00f3 :</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Op\u00e7\u00f5es RPC SSL: (veja o Bitcoin Wiki para instru\u00e7\u00f5es de configura\u00e7\u00e3o SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Op\u00e7\u00f5es do servidor RPC:</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>Receba e mostre P2P alerta de rede (default: %u)</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Mandar informa\u00e7\u00e3o de trace/debug para o console em vez de para o arquivo debug.log</translation>\n@@ -3168,6 +3119,10 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Start minimized</source>\n         <translation>Inicializar minimizado</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>A quantidade da transa\u00e7\u00e3o \u00e9 pequena demais para  pagar a taxa</translation>\n+    </message>\n     <message>\n         <source>This is experimental software.</source>\n         <translation>Este \u00e9 um software experimental.</translation>\n@@ -3196,10 +3151,6 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Imposs\u00edvel se ligar a %s neste computador (bind retornou erro %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Usar UPnP para mapear porta de escuta (padr\u00e3o: 1 quando estiver escutando)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nome de usu\u00e1rio para conex\u00f5es JSON-RPC</translation>\n@@ -3240,10 +3191,6 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Re-escanear blocos procurando por transa\u00e7\u00f5es perdidas da carteira</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Usar OpenSSL (https) para conex\u00f5es JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Exibe esta mensagem de ajuda</translation>\n@@ -3264,10 +3211,6 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>(default: %s)</source>\n         <translation>(padr\u00e3o: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>C\u00edfras aceitas (padr\u00e3o: %s)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Erro ao carregar wallet.dat</translation>\n@@ -3300,18 +3243,14 @@ por exemplo: alertnotify=echo %%s | mail -s \"Alerta do Bitcoin\" admin@foo.com.br\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Retransmitir P2SH n\u00e3o multisig (default: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Arquivo de certificado do servidor (padr\u00e3o: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Chave privada do servidor (padr\u00e3o: %s)</translation>\n-    </message>\n     <message>\n         <source>Set minimum block size in bytes (default: %u)</source>\n         <translation>Definir tamanho m\u00ednimo do bloco, em bytes (padr\u00e3o: %u)</translation>\n     </message>\n+    <message>\n+        <source>Set the number of threads to service RPC calls (default: %d)</source>\n+        <translation>Defina o n\u00famero de threads para chamadas do servi\u00e7o RPC (padr\u00e3o: %d)</translation>\n+    </message>\n     <message>\n         <source>Specify configuration file (default: %s)</source>\n         <translation>Especificar arquivo de configura\u00e7\u00e3o (padr\u00e3o: %s)</translation>"
      },
      {
        "sha": "8d1d3649357aa5b1fe6df70bc63fa279d23774c9",
        "filename": "src/qt/locale/bitcoin_pt_PT.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 65,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_pt_PT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_pt_PT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_PT.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"pt_PT\" version=\"2.0\">\n+<TS language=\"pt_PT\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>A frase de seguran\u00e7a da carteira foi alterada com \u00eaxito.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1287,10 +1290,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Pedido de pagamento %1 excede o tamanho (%2 bytes, permitido %3 bytes).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Pedido de pagamento prote\u00e7\u00e3o DdS</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Erro ao comunicar com %1: %2</translation>\n@@ -1475,14 +1474,6 @@\n         <source>Services</source>\n         <translation>Servi\u00e7os</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Iniciando Altura</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Sincroniza\u00e7\u00e3o da Altura</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Resultado da Suspens\u00e3o</translation>\n@@ -1603,10 +1594,6 @@\n         <source>Unknown</source>\n         <translation>Desconhecido</translation>\n     </message>\n-    <message>\n-        <source>Fetching...</source>\n-        <translation>Em busca...</translation>\n-    </message>\n </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n@@ -1971,10 +1958,6 @@\n         <source>Copy change</source>\n         <translation>Copiar altera\u00e7\u00e3o</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Quantia Total %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>ou</translation>\n@@ -2753,10 +2736,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Correr o processo em segundo plano e aceitar comandos</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Utilizar a rede de testes</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Aceitar liga\u00e7\u00f5es externas (padr\u00e3o: 1 sem -proxy ou -connect)</translation>\n@@ -2789,10 +2768,6 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Incapaz de vincular \u00e0 porta %s neste computador. O Bitcoin Core provavelmente j\u00e1 est\u00e1 a correr.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Aten\u00e7\u00e3o: -paytxfee est\u00e1 definida com um valor muito alto! Esta \u00e9 a taxa que ir\u00e1 pagar se enviar uma transa\u00e7\u00e3o.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Aviso: A rede n\u00e3o parece estar completamente de acordo! Parece que alguns mineiros est\u00e3o com dificuldades t\u00e9cnicas.</translation>\n@@ -2801,10 +2776,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Aten\u00e7\u00e3o: Parecemos n\u00e3o estar de acordo com os nossos pares! Poder\u00e1 ter que atualizar o seu cliente, ou outros n\u00f3s poder\u00e3o ter que atualizar os seus clientes.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Aten\u00e7\u00e3o: erro ao ler wallet.dat! Todas as chaves foram lidas correctamente, mas dados de transa\u00e7\u00e3o ou do livro de endere\u00e7os podem estar em falta ou incorrectos.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aten\u00e7\u00e3o: wallet.dat corrompido, dados recuperados! wallet.dat original salvo como wallet.{timestamp}.bak em %s; se o seu saldo ou transa\u00e7\u00f5es estiverem incorrectos dever\u00e1 recuperar uma c\u00f3pia de seguran\u00e7a.</translation>\n@@ -2869,10 +2840,6 @@\n         <source>Error opening block database</source>\n         <translation>Erro ao abrir a base de dados de blocos</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Erro: Um erro fatal interno ocorreu, verificar debug.log para mais informa\u00e7\u00e3o</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Erro: Pouco espa\u00e7o em disco!</translation>\n@@ -2881,10 +2848,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Falhou a escutar em qualquer porta. Use -listen=0 se quiser isto.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Se uma &lt;categoria&gt; n\u00e3o \u00e9 fornecida, imprimir toda a informa\u00e7\u00e3o de depura\u00e7\u00e3o.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>A importar...</translation>\n@@ -2953,14 +2916,14 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Permitir conex\u00e7\u00f5es JSON-RPC de fontes especificas. Valido para &lt;ip&gt; um unico IP (ex. 1.2.3.4), uma rede/netmask (ex. 1.2.3.4/255.255.255.0) ou uma rede/CIDR (ex. 1.2.3.4/24). Esta op\u00e7\u00e3o pode ser especificada varias vezes</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Um erro ocorreu durante a defini\u00e7\u00e3o do endere\u00e7o RPC %s porto %u para escutar: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Vincualar o endere\u00e7o dado e listar as liga\u00e7\u00f5es conectadas ao mesmo na lista branca. Use a nota\u00e7\u00e3o [anfitri\u00e3o]:porta para IPv6</translation>\n     </message>\n+    <message>\n+        <source>Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)</source>\n+        <translation>Vinculado para dar o endere\u00e7o para atender as liga\u00e7\u00f5es JSON-RPC. Use [host]: Nota\u00e7\u00e3o de porta para IPv6. Esta op\u00e7\u00e3o pode ser especificada v\u00e1rias vezes (padr\u00e3o: ligam-se a todas as interfaces)</translation>\n+    </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n         <translation>Imposs\u00edvel trancar a pasta de dados %s. Provavelmente o Bitcoin Core j\u00e1 est\u00e1 a ser executado.</translation>\n@@ -2973,10 +2936,6 @@\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n         <translation>Definir tamanho m\u00e1ximo de transa\u00e7\u00f5es com alta-prioridade/baixa-taxa em bytes (por defeito: %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Aten\u00e7\u00e3o: Por favor verifique que a data e hora do seu computador est\u00e3o correctas! Se o seu rel\u00f3gio n\u00e3o estiver certo o Bitcoin Core n\u00e3o ir\u00e1 funcionar correctamente.</translation>\n-    </message>\n     <message>\n         <source>(default: %u)</source>\n         <translation>(por defeito: %u)</translation>\n@@ -3045,10 +3004,6 @@\n         <source>Transaction too large</source>\n         <translation>Transa\u00e7\u00e3o grande demais</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Usar UPnP para mapear a porta de escuta (padr\u00e3o: 1 ao escutar)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nome de utilizador para liga\u00e7\u00f5es JSON-RPC</translation>\n@@ -3085,10 +3040,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Procurar transa\u00e7\u00f5es em falta na cadeia de blocos</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Usar OpenSSL (https) para liga\u00e7\u00f5es JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Esta mensagem de ajuda</translation>\n@@ -3137,14 +3088,6 @@\n         <source>Prepend debug output with timestamp (default: %u)</source>\n         <translation>Adicionar data e hora \u00e0 informa\u00e7\u00e3o de depura\u00e7\u00e3o (por defeito: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Ficheiro de certificado do servidor (por defeito: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Chave privada do servidor (por defeito: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Definir o tamanho da mem\u00f3ria de chaves para &lt;n&gt; (por defeito: %u)</translation>"
      },
      {
        "sha": "76171508295477e7398d67ff4d0832a2ba379234",
        "filename": "src/qt/locale/bitcoin_ro_RO.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 77,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ro_RO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ro_RO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro_RO.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ro_RO\" version=\"2.0\">\n+<TS language=\"ro_RO\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>Parola portofelului electronic a fost schimbat\u0103.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1270,10 +1273,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Cererea de plat\u0103 %1 este prea mare (%2 octe\u0163i, permis %3 octe\u0163i).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Protec\u0163ie DoS cerere de plat\u0103</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Eroare la comunicarea cu %1: %2</translation>\n@@ -1570,10 +1569,6 @@\n         <source>Unknown</source>\n         <translation>Necunoscut</translation>\n     </message>\n-    <message>\n-        <source>Fetching...</source>\n-        <translation>Preluare...</translation>\n-    </message>\n </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n@@ -1918,10 +1913,6 @@\n         <source>Copy change</source>\n         <translation>Copiaz\u0103 rest</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Suma total\u0103 %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>sau</translation>\n@@ -2696,10 +2687,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Ruleaz\u0103 \u00een fundal ca un demon \u015fi accept\u0103 comenzi</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Utilizeaz\u0103 re\u0163eaua de test</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accept\u0103 conexiuni din afar\u0103 (implicit: 1 dac\u0103 nu se folose\u015fte -proxy sau -connect)</translation>\n@@ -2728,10 +2715,6 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Nu se poate lega la %s pe acest calculator. Nucleul Bitcoin probabil deja ruleaz\u0103.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Aten\u0163ie: setarea -paytxfee este foarte mare! Aceasta este taxa tranzac\u0163iei pe care o ve\u0163i pl\u0103ti dac\u0103 trimite\u0163i o tranzac\u0163ie.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Aten\u0163ie: Re\u0163eaua nu pare s\u0103 fie de acord \u00een totalitate! Aparent ni\u015fte mineri au probleme.</translation>\n@@ -2740,10 +2723,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Aten\u0163ie: Aparent, nu s\u00eentem de acord cu to\u0163i partenerii no\u015ftri! Va trebui s\u0103 face\u0163i o actualizare, sau alte noduri necesit\u0103 actualizare.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Aten\u0163ie: eroare la citirea fi\u015fierului wallet.dat! Toate cheile s\u00eent citite corect, dar datele tranzactiei sau anumite intr\u0103ri din agenda s\u00eent incorecte sau lipsesc.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aten\u0163ie: fi\u015fierul wallet.dat este corupt, date salvate! Fi\u015fierul original wallet.dat a fost salvat ca wallet.{timestamp}.bak in %s; dac\u0103 balansul sau tranzactiile s\u00eent incorecte ar trebui s\u0103 restaura\u0163i dintr-o copie de siguran\u0163\u0103.</translation>\n@@ -2812,10 +2791,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Nu s-a reu\u015fit ascultarea pe orice port. Folosi\u0163i -listen=0 dac\u0103 vre\u0163i asta.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Dac\u0103 &lt;category&gt; nu este furnizat, produce toate informa\u0163iile de depanare.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Import...</translation>\n@@ -2880,10 +2855,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Permite conexiunile JSON-RPC din sursa specificat\u0103. Valid pentru &lt;ip&gt; s\u00eent IP singulare (ex. 1.2.3.4), o re\u0163ea/masc\u0103-re\u0163ea (ex. 1.2.3.4/255.255.255.0) sau o re\u0163ea/CIDR (ex. 1.2.3.4/24). Aceast\u0103 op\u0163iune poate fi specificat\u0103 de mai multe ori</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>A ap\u0103rut o eroare la setarea adresei RPC %s portul %u pentru ascultare: %s</translation>\n-    </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n         <translation>Nu se poate ob\u0163ine blocarea folderului cu date %s. Nucleul Bitcoin probabil deja ruleaz\u0103.</translation>\n@@ -2920,14 +2891,6 @@\n         <source>Error reading from database, shutting down.</source>\n         <translation>Eroare la citirea bazei de date. Oprire.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Eroare: Argument nesuportat -tor g\u0103sit, folosi\u0163i -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Taxa (\u00een BTC/kB) de ad\u0103ugat la tranzac\u0163iile pe care le trimite\u0163i(implicit: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informa\u0163ie</translation>\n@@ -2960,18 +2923,10 @@\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>Trebuie s\u0103 specifica\u0163i un port cu -whitebind: '%s'</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Op\u0163iuni RPC SSL: (vede\u0163i Wiki Bitcoin pentru intruc\u0163iunile de setare SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Op\u0163iuni server RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC suport\u0103 pentru HTTP conexiuni persistente (implicit: %d)</translation>\n-    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Trimite informa\u0163iile trace/debug la consol\u0103 \u00een locul fi\u015fierului debug.log</translation>\n@@ -3032,10 +2987,6 @@\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Nu se poate lega la %s pe acest calculator. (Legarea a \u00eentors eroarea %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Folose\u015fte UPnP pentru a vedea porturile (implicit: 1 c\u00eend ascult\u0103)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Utilizator pentru conexiunile JSON-RPC</translation>\n@@ -3048,14 +2999,6 @@\n         <source>Warning</source>\n         <translation>Avertisment</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Avertisment: Argument nesuportat -benchmark ignorat, folosi\u0163i -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Avertisment: Argument nesuportat -debugnet ignorat, folosi\u0163i -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>\u015eterge toate tranzac\u0163iile din portofel...</translation>\n@@ -3084,10 +3027,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Rescaneaz\u0103 lan\u0163ul de bloc pentru tranzac\u0163iile portofel lips\u0103</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Folose\u015fte OpenSSL (https) pentru conexiunile JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Acest mesaj de ajutor</translation>\n@@ -3112,10 +3051,6 @@\n         <source>(default: %s)</source>\n         <translation>(implicit: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Cifruri acceptabile (implicit: %s)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Eroare la \u00eenc\u0103rcarea wallet.dat</translation>\n@@ -3132,14 +3067,6 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Adresa -proxy nevalid\u0103: '%s'</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Fi\u015fierul certificat al serverului (implicit: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Cheia privat\u0103 a serverului (implicit: %s)</translation>\n-    </message>\n     <message>\n         <source>Set minimum block size in bytes (default: %u)</source>\n         <translation>Setare m\u0103rime minim\u0103 bloc \u00een octe\u0163i (implicit: %u)</translation>"
      },
      {
        "sha": "d4f37479eef65401a3abd2d2e9d2fb03fd245bf0",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 28,
        "deletions": 149,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ru\" version=\"2.0\">\n+<TS language=\"ru\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -216,6 +216,9 @@\n         <translation>\u041f\u0430\u0440\u043e\u043b\u044c \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0451\u043d.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -426,6 +429,10 @@\n         <source>Processed %n block(s) of transaction history.</source>\n         <translation><numerusform>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d %n \u0431\u043b\u043e\u043a \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</numerusform><numerusform>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e %n \u0431\u043b\u043e\u043a\u0430 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</numerusform><numerusform>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e %n \u0431\u043b\u043e\u043a\u043e\u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</numerusform><numerusform>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e %n \u0431\u043b\u043e\u043a\u043e\u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</numerusform></translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n \u0447\u0430\u0441</numerusform><numerusform>%n \u0447\u0430\u0441\u0430</numerusform><numerusform>%n \u0447\u0430\u0441\u043e\u0432</numerusform><numerusform>%n \u0447\u0430\u0441\u043e\u0432</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 \u0438 %2</translation>\n@@ -1254,10 +1261,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u0430 %1 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0431\u043e\u043b\u044c\u0448\u043e\u0439 (%2 \u0431\u0430\u0439\u0442\u043e\u0432, \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e %3 \u0431\u0430\u0439\u0442\u043e\u0432).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>DoS-\u0437\u0430\u0449\u0438\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u0430</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u0432\u044f\u0437\u0438 \u0441 %1: %2</translation>\n@@ -1446,14 +1449,6 @@\n         <source>Services</source>\n         <translation>\u0421\u0435\u0440\u0432\u0438\u0441\u044b</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u044b\u0441\u043e\u0442\u0430</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>\u0412\u044b\u0441\u043e\u0442\u0430 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0438</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>\u041e\u0447\u043a\u043e\u0432 \u0431\u0430\u043d\u0430</translation>\n@@ -1575,12 +1570,16 @@\n         <translation>\u0418\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0435</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e</translation>\n+        <source>Yes</source>\n+        <translation>\u0414\u0430</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435...</translation>\n+        <source>No</source>\n+        <translation>\u041d\u0435\u0442</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e</translation>\n     </message>\n </context>\n <context>\n@@ -1946,10 +1945,6 @@\n         <source>Copy change</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u043d</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u041e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u0438\u043b\u0438</translation>\n@@ -1982,6 +1977,10 @@\n         <source>Payment request expired.</source>\n         <translation>\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u0430 \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d.</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>\u0412\u0441\u0435\u0433\u043e %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435.</translation>\n@@ -2741,12 +2740,16 @@\n         <translation>\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b JSON-RPC</translation>\n     </message>\n     <message>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c\u0441\u044f \u0432 \u0444\u043e\u043d\u0435 \u043a\u0430\u043a \u0434\u0435\u043c\u043e\u043d \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b</translation>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043d\u0435\u0443\u0441\u0442\u0440\u0430\u043d\u0438\u043c\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430, \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u0432 debug.log</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0441\u0435\u0442\u044c</translation>\n+        <source>Pruning blockstore...</source>\n+        <translation>\u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0431\u043b\u043e\u043a\u043e\u0432...</translation>\n+    </message>\n+    <message>\n+        <source>Run in the background as a daemon and accept commands</source>\n+        <translation>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c\u0441\u044f \u0432 \u0444\u043e\u043d\u0435 \u043a\u0430\u043a \u0434\u0435\u043c\u043e\u043d \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2768,14 +2771,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u0433\u0434\u0430 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0432 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0435 (%s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0439 \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0432 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0435; \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043d\u0438\u0437\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0440\u044b\u0432\u0430\u043d\u0438\u0435 \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0437\u0430 \u0441\u0447\u0451\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f (\u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f) \u0441\u0442\u0430\u0440\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432. \u042d\u0442\u043e\u0442 \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 \u0438 \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c \u0441 -txindex. \u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u043e\u043f\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0446\u0435\u043f\u0438 \u0431\u043b\u043e\u043a\u043e\u0432. (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 0 = \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u043e\u0432, &gt;%u = \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0432 \u041c\u0431 \u0434\u043b\u044f \u0444\u0430\u0439\u043b\u043e\u0432 \u0431\u043b\u043e\u043a\u043e\u0432)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>\u0417\u0430\u0434\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 (\u043e\u0442 %u \u0434\u043e %d, 0=\u0430\u0432\u0442\u043e, &lt;0 = \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u044c\u043a\u043e \u044f\u0434\u0435\u0440 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u043c\u0438, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>\n@@ -2796,10 +2791,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u0412\u041d\u0418\u041c\u0410\u041d\u0418\u0415: \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u0435\u0442\u0435\u0432\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e %d \u0431\u043b\u043e\u043a\u043e\u0432 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 %d \u0447\u0430\u0441\u043e\u0432 (\u043e\u0436\u0438\u0434\u0430\u043b\u043e\u0441\u044c %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 -paytxfee. \u042d\u0442\u043e \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u0437\u0430\u043f\u043b\u0430\u0442\u0438\u0442\u0435 \u043f\u0440\u0438 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043f\u043e\u0445\u043e\u0436\u0435, \u0432 \u0441\u0435\u0442\u0438 \u043d\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0441\u043e\u0433\u043b\u0430\u0441\u0438\u044f! \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u0430\u0439\u043d\u0435\u0440\u044b, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u044e\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b.</translation>\n@@ -2808,10 +2799,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043c\u044b \u043d\u0435 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u044b \u0441 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430\u043c\u0438! \u0412\u0430\u043c \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u043c \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430\u043c, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u044f.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f wallet.dat! \u0412\u0441\u0435 \u043a\u043b\u044e\u0447\u0438 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u044b \u0432\u0435\u0440\u043d\u043e, \u043d\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0438\u043b\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0430\u0434\u0440\u0435\u0441\u043d\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u0431\u044b\u0442\u044c \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c\u0438.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: wallet.dat \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0451\u043d, \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u043f\u0430\u0441\u0435\u043d\u044b! \u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 wallet.dat \u0441\u043e\u0445\u0440\u0430\u043d\u0451\u043d \u043a\u0430\u043a wallet.{timestamp}.bak \u0432 %s; \u0435\u0441\u043b\u0438 \u0432\u0430\u0448 \u0431\u0430\u043b\u0430\u043d\u0441 \u0438\u043b\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0444\u0430\u0439\u043b \u0438\u0437 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0439 \u043a\u043e\u043f\u0438\u0438.</translation>\n@@ -2876,10 +2863,6 @@\n         <source>Error opening block database</source>\n         <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0411\u0414 \u0431\u043b\u043e\u043a\u043e\u0432</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043d\u0435\u0443\u0441\u0442\u0440\u0430\u043d\u0438\u043c\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430, \u0434\u0435\u0442\u0430\u043b\u0438 \u0432 debug.log</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u043c\u0430\u043b\u043e \u043c\u0435\u0441\u0442\u0430 \u043d\u0430 \u0434\u0438\u0441\u043a\u0435!</translation>\n@@ -2888,10 +2871,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 -listen=0 \u0435\u0441\u043b\u0438 \u0432\u0430\u0441 \u044d\u0442\u043e \u0443\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>\u0415\u0441\u043b\u0438 &lt;category&gt; \u043d\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430, \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0432\u0441\u044e \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u0418\u043c\u043f\u043e\u0440\u0442 ...</translation>\n@@ -2968,10 +2947,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>\u0420\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f JSON-RPC \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430. \u0420\u0430\u0437\u0440\u0435\u0448\u0451\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f &lt;ip&gt; \u2014 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 IP (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 1.2.3.4), \u0441\u0435\u0442\u044c/\u043c\u0430\u0441\u043a\u0430 \u0441\u0435\u0442\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 1.2.3.4/255.255.255.0) \u0438\u043b\u0438 \u0441\u0435\u0442\u044c/CIDR (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 1.2.3.4/24). \u042d\u0442\u0443 \u043e\u043f\u0446\u0438\u044e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043a\u0440\u0430\u0442\u043d\u043e</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f RPC \u0430\u0434\u0440\u0435\u0441\u0430 %s \u043f\u043e\u0440\u0442\u0430 %u \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u044f: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>\u041f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u0432\u043d\u0435\u0441\u0442\u0438 \u0432 \u0431\u0435\u043b\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0438\u0445\u0441\u044f \u043a \u043d\u0435\u043c\u0443 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 [\u0445\u043e\u0441\u0442]:\u043f\u043e\u0440\u0442 \u0434\u043b\u044f IPv6</translation>\n@@ -2996,18 +2971,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 (\u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0432\u0435\u0440\u043d\u0443\u043b\u043e \u043e\u0448\u0438\u0431\u043a\u0443 %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d \u043d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 -socks. \u0412\u044b\u0431\u043e\u0440 \u0432\u0435\u0440\u0441\u0438\u0438 SOCKS \u0431\u043e\u043b\u0435\u0435 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS5.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e \u0442\u0440\u0435\u0432\u043e\u0433\u0435 \u0438\u043b\u0438 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0447\u0435\u043d\u044c \u0434\u043b\u0438\u043d\u043d\u043e\u0435 \u0440\u0430\u0441\u0449\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043f\u0438 (%s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 (\u0432 BTC/\u041a\u0431) \u043c\u0435\u043d\u044c\u0448\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0443\u043b\u0435\u0432\u044b\u043c\u0438 \u0434\u043b\u044f \u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0438\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u0415\u0441\u043b\u0438 paytxfee \u043d\u0435 \u0437\u0430\u0434\u0430\u043d, \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u0443\u044e \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e \u0434\u043b\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0437\u0430 n \u0431\u043b\u043e\u043a\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n@@ -3020,10 +2987,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u043e\u0432 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u043d\u0438\u0436\u0435, \u0447\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0432 %d \u041c\u0431. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0430 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e DNS, \u0435\u0441\u043b\u0438 \u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u043c\u0430\u043b\u043e (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d -connect)</translation>\n@@ -3048,38 +3011,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>\u042d\u0442\u043e\u0442 \u043f\u0440\u043e\u0434\u0443\u043a\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u041f\u041e, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0435 OpenSSL Project \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 OpenSSL Toolkit &lt;https://www.openssl.org/&gt; \u0438 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u041f\u041e, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435 Eric Young \u0438 \u041f\u041e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 UPnP, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435 Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f bitcoind \u0438\u043b\u0438 \u043e\u043f\u0446\u0438\u0438 bitcoin-qt -server, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u043f\u0446\u0438\u044e rpcpassword \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u043c \u0444\u0430\u0439\u043b\u0435:\n- %s\n-\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(\u0432\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u043f\u0430\u0440\u043e\u043b\u044c)\n-\u0418\u043c\u044f \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0414\u041e\u041b\u0416\u041d\u042b \u0440\u0430\u0437\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f.\n-\u0415\u0441\u043b\u0438 \u0444\u0430\u0439\u043b \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442, \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0435\u0433\u043e \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043f\u0440\u0430\u0432\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430.\n-\u0422\u0430\u043a\u0436\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c alertnotify \u0434\u043b\u044f \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u044f \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430\u0445;\n-\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 -paytxfee. \u0422\u0430\u043a\u0438\u0435 \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0443\u043f\u043b\u0430\u0447\u0435\u043d\u044b \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043d\u0430 \u0412\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0435\u0440\u043d\u043e. \u0415\u0441\u043b\u0438 \u0412\u0430\u0448\u0438 \u0447\u0430\u0441\u044b \u0438\u0434\u0443\u0442 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, Bitcoin Core \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>\u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0438 \u0438\u0437 \u0431\u0435\u043b\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442\u044c \u0431\u044b\u0442\u044c \u0437\u0430\u0431\u0430\u043d\u0435\u043d\u044b \u0437\u0430 DoS, \u0438 \u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u0442\u0440\u0430\u043d\u0441\u043b\u0438\u0440\u0443\u044e\u0442\u0441\u044f, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0443\u0436\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0432 \u043f\u0430\u043c\u044f\u0442\u0438. \u041f\u043e\u043b\u0435\u0437\u043d\u043e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u0448\u043b\u044e\u0437\u0430.</translation>\n@@ -3100,10 +3031,6 @@ rpcpassword=%s\n         <source>Activating best chain...</source>\n         <translation>\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043b\u0443\u0447\u0448\u0430\u044f \u0446\u0435\u043f\u044c...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>\u041d\u0435\u043b\u044c\u0437\u044f \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u043e\u043c \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0441 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u043c \u0431\u043b\u043e\u043a\u043e\u0432.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>\u041d\u0435 \u0443\u0434\u0430\u0451\u0442\u0441\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0430\u0434\u0440\u0435\u0441 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 -whitebind: '%s'</translation>\n@@ -3120,10 +3047,6 @@ rpcpassword=%s\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2009-%i \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 %s \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 -rpcbind \u043a\u0430\u043a \u0441\u0435\u0442\u0435\u0432\u043e\u0439 \u0430\u0434\u0440\u0435\u0441</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 wallet.dat: \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u043d\u043e\u0432\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e Bitcoin Core</translation>\n@@ -3132,14 +3055,6 @@ rpcpassword=%s\n         <source>Error reading from database, shutting down.</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u0440\u0430\u0431\u043e\u0442\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d \u043d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -tor, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f (\u0432 BTC/\u041a\u0431) \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a \u0432\u0430\u0448\u0438\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f</translation>\n@@ -3180,18 +3095,10 @@ rpcpassword=%s\n         <source>Node relay options:</source>\n         <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0438\u0438 \u0443\u0437\u043b\u0430:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b RPC SSL: (\u0441\u043c. Bitcoin \u0432\u0438\u043a\u0438 \u0434\u043b\u044f \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u043f\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0435 SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u0435\u0440\u0432\u0435\u0440\u0430 RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 RPC \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0445 HTTP \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>\u041f\u0435\u0440\u0435\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0438\u043d\u0434\u0435\u043a\u0441 \u0446\u0435\u043f\u0438 \u0431\u043b\u043e\u043a\u043e\u0432 \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 blk000??.dat</translation>\n@@ -3268,10 +3175,6 @@ rpcpassword=%s\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u043a %s \u043d\u0430 \u044d\u0442\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 (bind \u0432\u0435\u0440\u043d\u0443\u043b \u043e\u0448\u0438\u0431\u043a\u0443 %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c UPnP \u0434\u043b\u044f \u043f\u0440\u043e\u0431\u0440\u043e\u0441\u0430 \u043f\u043e\u0440\u0442\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1, \u0435\u0441\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u0418\u043c\u044f \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 JSON-RPC</translation>\n@@ -3284,14 +3187,6 @@ rpcpassword=%s\n         <source>Warning</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 -benchmark \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043d\u0435\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 -debugnet \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>\u0421\u0442\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0438\u0437 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430...</translation>\n@@ -3320,10 +3215,6 @@ rpcpassword=%s\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u041f\u0435\u0440\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0446\u0435\u043f\u044c \u0431\u043b\u043e\u043a\u043e\u0432 \u043d\u0430 \u043f\u0440\u0435\u0434\u043c\u0435\u0442 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0432 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c OpenSSL (https) \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u042d\u0442\u0430 \u0441\u043f\u0440\u0430\u0432\u043a\u0430</translation>\n@@ -3368,10 +3259,6 @@ rpcpassword=%s\n         <source>(default: %s)</source>\n         <translation>(\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0448\u0438\u0444\u0440\u044b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>\u0412\u0441\u0435\u0433\u0434\u0430 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0430 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e DNS (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n@@ -3432,14 +3319,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>\u0422\u0440\u0430\u043d\u0441\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0435-P2SH \u043c\u0443\u043b\u044c\u0442\u0438\u043f\u043e\u0434\u043f\u0438\u0441\u044c (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>\u0424\u0430\u0439\u043b \u0441\u0435\u0440\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>\u0417\u0430\u043a\u0440\u044b\u0442\u044b\u0439 \u043a\u043b\u044e\u0447 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u043f\u0443\u043b\u0430 \u043a\u043b\u044e\u0447\u0435\u0439 \u0432 &lt;n&gt; (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>"
      },
      {
        "sha": "8af88a87d57f2c5b65f59879d82e39ff36b0492b",
        "filename": "src/qt/locale/bitcoin_sah.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sah.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sah.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sah.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sah\" version=\"2.0\">\n+<TS language=\"sah\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     </context>\n@@ -8,6 +8,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     </context>"
      },
      {
        "sha": "f8ae90612876a98ef6feb1c6e8b3792402c9441a",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 105,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sk\" version=\"2.0\">\n+<TS language=\"sk\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>Heslo k pe\u0148a\u017eenke bolo \u00faspe\u0161ne zmenen\u00e9.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1286,10 +1289,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Po\u017eiadavka na platbu %1 je pr\u00edli\u0161 ve\u013ek\u00e1 (%2 bajtov, povolen\u00e9 je %3 bajtov).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Ochrana pred zahlten\u00edm po\u017eiadavkami na platbu</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Chyba komunik\u00e1cie s %1: %2 </translation>\n@@ -1478,14 +1477,6 @@\n         <source>Services</source>\n         <translation>Slu\u017eby</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Po\u010diato\u010dn\u00e1 v\u00fd\u0161ka</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Synchronizovan\u00e1 v\u00fd\u0161ka</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Sk\u00f3re z\u00e1kazu</translation>\n@@ -1610,10 +1601,6 @@\n         <source>Unknown</source>\n         <translation>nezn\u00e1my</translation>\n     </message>\n-    <message>\n-        <source>Fetching...</source>\n-        <translation>Z\u00edskava sa...</translation>\n-    </message>\n </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n@@ -1978,10 +1965,6 @@\n         <source>Copy change</source>\n         <translation>Kop\u00edrova\u0165 zmenu</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Celkov\u00e1 suma %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>alebo</translation>\n@@ -2776,10 +2759,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Be\u017ea\u0165 na pozad\u00ed ako d\u00e9mon a prij\u00edma\u0165 pr\u00edkazy</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Pou\u017ei\u0165 testovaciu sie\u0165</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Prija\u0165 spojenia zvonku (predvolen\u00e9: 1 ak \u017eiadne -proxy alebo -connect)</translation>\n@@ -2812,10 +2791,6 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Nepodarilo sa pripoji\u0165 na %s na tomto po\u010d\u00edta\u010di. Bitcoin Jadro je u\u017e pravdepodobne spusten\u00e9.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Varovanie: -paytxfee je nastaven\u00e9 ve\u013emi vysoko. Toto s\u00fa transak\u010dn\u00e9 poplatky ktor\u00e9 zaplat\u00edte ak odo\u0161lete transakciu.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Varovanie: Jav\u00ed sa \u017ee sie\u0165 sie\u0165 \u00faplne nes\u00fahlas\u00ed! Niektor\u00ed mineri zjavne maj\u00fa \u0165a\u017ekosti.\n@@ -2826,10 +2801,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Varovanie: Zjavne sa \u00faplne nezhodujeme s na\u0161imi peer-mi! Mo\u017eno potrebujete prejs\u0165 na nov\u0161iu verziu alebo ostatn\u00e9 uzly potrebuj\u00fa vy\u0161\u0161iu verziu.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Varovanie: chyba pri \u010d\u00edtan\u00ed wallet.dad! V\u0161etky k\u013e\u00fa\u010de s\u00fa \u010ditate\u013en\u00e9 ale transak\u010dn\u00e9 d\u00e1ta alebo z\u00e1znamy v adres\u00e1ri m\u00f4\u017eu by\u0165 nespr\u00e1vne.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Varovanie: wallet.dat je po\u0161koden\u00fd, \u00fadaje \u00faspe\u0161ne z\u00edskan\u00e9! P\u00f4vodn\u00fd wallet.dat ulo\u017een\u00fd ako wallet.{timestamp}.bak v %s; ak v\u00e1\u0161 zostatok alebo transakcie niesu spr\u00e1vne, mali by ste s\u00fabor obnovi\u0165 zo z\u00e1lohy.</translation>\n@@ -2894,10 +2865,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Error opening block database</source>\n         <translation>Chyba otv\u00e1rania datab\u00e1zy blokov</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Chyba: Nastala fat\u00e1lna intern\u00e1 chyba. Pre podrobnosti pozrite debug.log</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Chyba: M\u00e1lo miesta na disku!</translation>\n@@ -2906,10 +2873,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Chyba po\u010d\u00favania na ktoromko\u013evek porte. Pou\u017ei -listen=0 ak toto chcete.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Ak nie je uveden\u00e1 &lt;category&gt;, na v\u00fdstupe zobrazuj v\u0161etky inform\u00e1cie pre ladenie.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Prebieha import ...</translation>\n@@ -2974,10 +2937,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Povoli\u0165 JSON-RPC pripojenia zo zadan\u00e9ho zdroja. Pre &lt;ip&gt; s\u00fa platn\u00e9 jednoduch\u00e9 IP (napr. 1.2.3.4), sie\u0165/netmask (napr. 1.2.3.4/255.255.255.0) alebo sie\u0165/CIDR (napr. 1.2.3.4/24). T\u00e1to mo\u017enos\u0165 m\u00f4\u017ee by\u0165 zadan\u00e1 nieko\u013eko kr\u00e1t</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Pri nastavovan\u00ed RPC adresy %s na porte %u pre po\u010d\u00favanie do\u0161lo k chybe: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Spoji\u0165 s danou adresou a povolen\u00fdmi partnersk\u00fdmi zariadeniami ktor\u00e9 sa tam prip\u00e1jaj\u00fa. Pou\u017eite z\u00e1pis [host]:port pre IPv6</translation>\n@@ -2998,18 +2957,10 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Chyba: Po\u010d\u00favanie prich\u00e1dzaj\u00facich spojen\u00ed zlyhalo (vr\u00e1ten\u00e1 chyba je %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Chyba: N\u00e1jden\u00fd nepodporovan\u00fd argument -socks. Nastavenie SOCKS verzie nie je u\u017e mo\u017en\u00e9, podporovan\u00e9 s\u00fa u\u017e iba proxy SOCKS5.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Vykona\u0165 pr\u00edkaz po prijat\u00ed patri\u010dn\u00e9ho varovania alebo uvid\u00edme ve\u013emi dlh\u00e9 rozdvojenie siete (%s v cmd je nahraden\u00e9 spr\u00e1vou)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Poplatky (v BTC/Kb) ni\u017e\u0161ie ako to\u013ekoto sa pova\u017euj\u00fa za nulov\u00e9 pri postupovan\u00ed transakci\u00ed (predvolen\u00e9: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Ak nie je nastaven\u00e9 paytxfee, prida\u0165 dostato\u010dn\u00fd poplatok aby sa transakcia za\u010dala potvrdzova\u0165 priemerne v r\u00e1mci bloku (predvolen\u00e9: %u)</translation>\n@@ -3038,10 +2989,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Tento produkt obsahuje softv\u00e9r vyvinut\u00fd projektom OpenSSL pre pou\u017eitie sady n\u00e1strojov OpenSSL &lt;https://www.openssl.org/&gt; a kryptografick\u00e9ho softv\u00e9ru nap\u00edsan\u00e9ho Eric Young a UPnP softv\u00e9r nap\u00edsan\u00fd Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Upozornenie: -maxtxfee je nastaven\u00e9 pr\u00edli\u0161 vysoko! Takto vysok\u00e9 poplatky by mali by\u0165 zaplaten\u00e9 za jednu transakciu.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Uzle na zoznam povolen\u00fdch nem\u00f4\u017eu by\u0165 DoS zak\u00e1zan\u00e9 a ich transakcie v\u017edy post\u00fapen\u00e9 \u010falej, aj v pr\u00edpade, ak s\u00fa u\u017e pam\u00e4\u0165ovej fronte. U\u017eito\u010dn\u00e9 napr. pre br\u00e1ny</translation>\n@@ -3070,10 +3017,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Autorsk\u00e9 pr\u00e1va (C) 2009-%i V\u00fdvoj\u00e1ri jadra Bitcoin</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Ned\u00e1 sa analyzova\u0165 -rpcbind hodnota %s ako sie\u0165ov\u00e1 adresa</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Chyba pri \u010d\u00edtan\u00ed wallet.dat: Pe\u0148a\u017eenka vy\u017eaduje vy\u0161\u0161iu verziu Jadra Bitcoin</translation>\n@@ -3082,14 +3025,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Error reading from database, shutting down.</source>\n         <translation>Chyba pri na\u010d\u00edtan\u00ed z datab\u00e1zy, ukon\u010duje sa.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Chyba: n\u00e1jden\u00fd nepodporovan\u00fd argument -tor, pou\u017eite -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Poplatok (v BTC/kB), ktor\u00fd sa prid\u00e1 k transakci\u00e1m, ktor\u00e9 odosielate (predvolen\u00fd: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Inform\u00e1cia</translation>\n@@ -3126,18 +3061,10 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Node relay options:</source>\n         <translation>Prenosov\u00e9 mo\u017enosti uzla:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>Mo\u017enosti RPC SSL: (Pozri v Bitcoin Wiki pokyny pre SSL nastavenie)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>Mo\u017enosti servra RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Podpora RPC pre trval\u00e9 HTTP spojenia (predvolen\u00e9: %d)</translation>\n-    </message>\n     <message>\n         <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation>Obdr\u017ea\u0165 a zobrazi\u0165 sie\u0165ov\u00e9 P2P varovania (predvolen\u00e9: %u)</translation>\n@@ -3206,10 +3133,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Na tomto po\u010d\u00edta\u010di sa ned\u00e1 vytvori\u0165 v\u00e4zba %s (vytvorenie v\u00e4zby vr\u00e1tilo chybu %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Sk\u00fasi\u0165 pou\u017ei\u0165 UPnP pre mapovanie po\u010d\u00favaj\u00faceho portu (default: 1 when listening)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>U\u017e\u00edvate\u013esk\u00e9 meno pre JSON-RPC spojenia</translation>\n@@ -3218,14 +3141,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Warning</source>\n         <translation>Upozornenie</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Upozornenie: Nepodporovan\u00fd argument -benchmark bol ignorovan\u00fd, pou\u017eite -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Upozornenie: Nepodporovan\u00fd argument -debugnet bol ignorovan\u00fd, pou\u017eite -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Zmaza\u0165 v\u0161etky transakcie z pe\u0148a\u017eenky...</translation>\n@@ -3254,10 +3169,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Znovu skenova\u0165 re\u0165az blokov pre ch\u00fdbaj\u00face transakcie</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Pou\u017ei\u0165 OpenSSL (https) pre JSON-RPC spojenia</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>T\u00e1to pomocn\u00e1 spr\u00e1va</translation>\n@@ -3302,10 +3213,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>(default: %s)</source>\n         <translation>(predvolen\u00e9: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Prijate\u013en\u00e9 \u0161ifry (predvolen\u00e9: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>V\u017edy sa dotazova\u0165 adresy partnersk\u00fdch uzlov cez vyh\u013ead\u00e1vanie DNS (predvolen\u00e9: %u)</translation>\n@@ -3358,14 +3265,6 @@ The network does not appear to fully agree! Some miners appear to be experiencin\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Pren\u00e1\u0161a\u0165 non-P2SH multi-podpis (predvolen\u00e9: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Certifika\u010dn\u00fd s\u00fabor servera (predvolen\u00e9: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Priv\u00e1tny k\u013e\u00fa\u010d servera (predvolen\u00e9: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Nastavi\u0165 ve\u013ekos\u0165 k\u013e\u00fa\u010da fronty na &lt;n&gt; (predvolen\u00e9: %u)</translation>"
      },
      {
        "sha": "4378c74cd8b1adb566d341e1a8f1bd7c4f4ced5c",
        "filename": "src/qt/locale/bitcoin_sl_SI.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 81,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sl_SI.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sl_SI.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl_SI.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sl_SI\" version=\"2.0\">\n+<TS language=\"sl_SI\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>Geslo za dostop do denarnice je bilo uspe\u0161no zamenjano.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1282,10 +1285,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Zahtevek za pla\u010dilo %1 je prevelik (%2 bajtov, dovoljenih je %3 bajtov.)</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Za\u0161\u010dita pred napadom denial-of-service zahtevka za pla\u010dilo</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Napaka pri povezavi z  %1: %2</translation>\n@@ -1474,14 +1473,6 @@\n         <source>Services</source>\n         <translation>Storitve</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Za\u010detna vi\u0161ina</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>Trenutna vi\u0161ina</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Kazenske to\u010dke</translation>\n@@ -1603,12 +1594,16 @@\n         <translation>Odhodna</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Neznano</translation>\n+        <source>Yes</source>\n+        <translation>Da</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Pridobivam ...</translation>\n+        <source>No</source>\n+        <translation>Ne</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Neznano</translation>\n     </message>\n </context>\n <context>\n@@ -1974,10 +1969,6 @@\n         <source>Copy change</source>\n         <translation>Kopiraj vra\u010dilo</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Skupni znesek %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>ali</translation>\n@@ -2800,10 +2791,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Teci v ozadju in sprejemaj ukaze</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Uporabi testno omre\u017eje</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Sprejemaj zunanje povezave (privzeto: 1, razen \u010de ste vklopili opciji -proxy ali -connect)</translation>\n@@ -2820,14 +2807,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Izvedi ukaz, ko bo transakcija denarnice se spremenila (V cmd je bil TxID zamenjan za %s)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Najve\u010dji \u0161e veljavni skupni znesek provizij pri transakcijah z uporabo ene denarnice. Prenizka nastavitev lahko povzro\u010di izlo\u010ditev ve\u010djih transakcij (privzeto %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Omogo\u010di obrezovanje (brisanje) starej\u0161ih blokov in s tem prihrani pri prostoru za shranjevanje. Ta na\u010din delovanja onemogo\u010di uporabo denarnice in ni zdru\u017eljivo z opcijo -txindex. Opozorilo: \u010ce kasneje to opcijo povrnete na privzeto vrednost, boste morali ponovno prenesti celotno verigo. (privzeto: 0 = onemogo\u010di obrezovanje, &gt;%u = ciljna velikost datotek blokov v MiB)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Nastavi \u0161tevilo niti za preverjanje skript (%u do %d, 0 = samodejno, &lt;0 toliko procesorskih jeder naj ostane prostih, privzeto: %d)</translation>\n@@ -2848,10 +2827,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>OPOZORILO: Preverite va\u0161o omre\u017eno povezavo. \u0160t. prejetih blokov: %d v \u0161t. ur: %d (pri\u010dakovanih je %d blokov)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Opozorilo: Vrednost opcije -paytxfee je zelo visoka. To je provizija, ki jo boste pla\u010dali, \u010de izvedete pla\u010dilo.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Opozorilo: Trenutno na omre\u017eju ni videti konsenza! Videti je, kot da bi imeli nekateri rudarji te\u017eave.</translation>\n@@ -2860,10 +2835,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Opozorilo: Trenutno se s sole\u017eniki ne strinjam v popolnosti! Mogo\u010de bi morali vi ali drugi udele\u017eenci posodobiti odjemalce.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Opozorilo: napaka pri branju datoteke wallet.dat! Vsi klju\u010di so bili pravilno prebrani, podatki o transakciji ali imenik vne\u0161enih naslovov so morda izgubljeni ali nepravilni.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Opozorilo: Datoteka wallet.dat je bila okvarjena, podatki pa so bili kljub temu re\u0161eni! Originalna datoteka je bila shranjena kot wallet.{\u010das.oznaka}.bak v mapo %s. \u010ce sta skupno stanje ali seznam transakcij napa\u010dna, morate datoteko restavrirati iz varnostne kopije.</translation>\n@@ -2928,10 +2899,6 @@\n         <source>Error opening block database</source>\n         <translation>Napaka pri odpiranju podatkovne baze blokov</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Napaka: Med izvajanjem je pri\u0161lo do nepopravljive napake. Podrobnosti so v datoteki debug.log</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Opozorilo: Premalo prostora na disku!</translation>\n@@ -2940,10 +2907,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Ni mogo\u010de poslu\u0161ati na nobenih vratih. \u010ce to zares \u017eelite, uporabite opcijo -listen=0.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>\u010ce element &lt;category&gt; ni naveden, izpisuje vse informacije za razhro\u0161\u010devanje.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Uva\u017eam ...</translation>\n@@ -3020,10 +2983,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Iz navedenega vira dovoli povezave na JSON-RPC. Veljavne oblike vrednosti parametra &lt;ip&gt; so: edinstven naslov IP (npr.: 1.2.3.4), kombinacija omre\u017eje/netmask (npr.: 1.2.3.4/255.255.255.0), ali pa kombinacija omre\u017eje/CIDR (1.2.3.4/24). To opcijo lahko navedete ve\u010dkrat.</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Pri\u0161lo je do napake med zagonom poslu\u0161alca RPC na naslovu %s in vratih %u: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Ve\u017ei dani naslov in sprejemaj povezave samo od navedenih sole\u017enikov. Za naslove protokola IPv6 uporabite zapis [gostitelj]:vrata.</translation>\n@@ -3048,18 +3007,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Napaka: Ni mogo\u010de sprejemati dohodnih povezav (vrnjena napaka: %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Napaka: Navedli ste nepodprto vrednost opcije -socks. Razli\u010dice protokola SOCKS ni ve\u010d mogo\u010de navesti, podprti so samo posredni\u0161ki stre\u017eniki tipa SOCKS5.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Ko bo prejeto ustrezno opozorilo, ali ko bo opa\u017eena zelo dolga razvejitev, izvedi navedeni ukazni niz. (Niz %s bo nadome\u0161\u010den z vsebino sporo\u010dila.)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Provizije (v BTC/KiB), ki so manj\u0161e od te vrednosti, se pri posredovanju smatrajo za ni\u010dne (privzeto: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u010ce opcija -paytxfee ni nastavljena, nastavi znesek provizije tako visoko, da bodo transakcije potrjene v povpre\u010dno n blokih. (privzeto: %u)</translation>\n@@ -3068,10 +3019,6 @@\n         <source>Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)</source>\n         <translation>Na vsak posredni\u0161ki stre\u017enik se prijavi z drugimi naklju\u010dnimi podatki. Tako je omogo\u010dena osamitev tokov v omre\u017eju Tor (privzeto: %u)</translation>\n     </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Opozorilo: Preverite, \u010de sta datum in ura na va\u0161em ra\u010dunalniku to\u010dna! Bitcoin Core ne bo dobro deloval, \u010de je nastavljeni \u010das nepravilen.</translation>\n-    </message>\n     <message>\n         <source>(default: %u)</source>\n         <translation>(privzeto: %u)</translation>\n@@ -3080,10 +3027,6 @@\n         <source>Activating best chain...</source>\n         <translation>Preklapljam na najbolj\u0161o verigo ...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>\u010ce je omogo\u010dena funkcija obrezovanja, ni mogo\u010de uporabljati denarnice.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Naslova %s, podanega pri opciji -whitebind ni mogo\u010de razre\u0161iti.</translation>\n@@ -3100,10 +3043,6 @@\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i The Bitcoin Core Developers</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Vrednost %s opcije -rpcbind ni prepoznaven omre\u017eni naslov</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Informacije</translation>\n@@ -3200,10 +3139,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>S ponovnim pregledom verige blokov poi\u0161\u010di manjkajo\u010de transakcije iz denarnice</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Uporabi OpenSSL (https) za povezave na JSON-RPC</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>To sporo\u010dilo pomo\u010di</translation>\n@@ -3228,10 +3163,6 @@\n         <source>(default: %s)</source>\n         <translation>(privzeto: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Sprejemljivi tipi \u0161ifriranja (privzeto: %s)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>Napaka pri nalaganju wallet.dat</translation>"
      },
      {
        "sha": "769b45b562c683c6391a79b1294191e840d99cb6",
        "filename": "src/qt/locale/bitcoin_sq.ts",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sq.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sq.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sq.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sq\" version=\"2.0\">\n+<TS language=\"sq\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -168,6 +168,9 @@\n         <translation>Dekriptimi i portofolit d\u00ebshtoi</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -460,7 +463,7 @@\n         <source>Unknown</source>\n         <translation>i/e panjohur</translation>\n     </message>\n-    </context>\n+</context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>"
      },
      {
        "sha": "bb8583fc09e3cc20283880d5b3caf0d2155e92b6",
        "filename": "src/qt/locale/bitcoin_sr.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sr\" version=\"2.0\">\n+<TS language=\"sr\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -132,6 +132,9 @@\n         <translation>\u041b\u043e\u0437\u0438\u043d\u043a\u0430 \u0437\u0430 \u043f\u0440\u0438\u0441\u0442\u0443\u043f \u043d\u043e\u0432\u0447\u0430\u043d\u0438\u043a\u0443 \u0458\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u043c\u0435\u045a\u0435\u043d\u0430.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -750,10 +753,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Radi u pozadini kao daemon servis i prihvati komande</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Koristi testnu mre\u017eu</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Korisni\u010dko ime za JSON-RPC konekcije</translation>\n@@ -766,10 +765,6 @@\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Ponovo skeniraj lanac blokova za nedostaju\u0107e transakcije iz nov\u010danika</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Koristi OpenSSL (https) za  JSON-RPC konekcije</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Ova poruka Pomo\u0107i</translation>"
      },
      {
        "sha": "4691d7d204de020bcef30b3e09b6739adc171364",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 251,
        "deletions": 156,
        "changes": 407,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"sv\" version=\"2.0\">\n+<TS language=\"sv\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -221,6 +221,17 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <translation>Pl\u00e5nbokens l\u00f6senord har \u00e4ndrats.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/n\u00e4tmask</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Bannad tills</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1065,6 +1076,34 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Proxyns port (t.ex. 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>Anv\u00e4nds f\u00f6r att n\u00e5 noder via:</translation>\n+    </message>\n+    <message>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>Visas, om den angivna standard-SOCKS5-proxyn anv\u00e4nds f\u00f6r att n\u00e5 noder via den h\u00e4r n\u00e4tverkstypen.</translation>\n+    </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n+        <translation>Anslut till Bitcoin-n\u00e4tverket genom en separat SOCKS5-proxy f\u00f6r dolda tj\u00e4nster i Tor.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>Anv\u00e4nd separat SOCKS5-proxy f\u00f6r att n\u00e5 noder via dolda tj\u00e4nster i Tor:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;F\u00f6nster</translation>\n@@ -1283,10 +1322,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Betalningsbeg\u00e4ran %1 \u00e4r f\u00f6r stor (%2 bytes, till\u00e5ten %3 bytes)</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>Betalningsbeg\u00e4ran beg\u00e4r DoS-skydd</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>Kommunikationsfel med %1: %2</translation>\n@@ -1455,10 +1490,18 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>&amp;Peers</source>\n         <translation>&amp;Klienter</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>Bannade noder</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>V\u00e4lj en klient f\u00f6r att se detaljerad information.</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>Vitlistad</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>Riktning</translation>\n@@ -1468,20 +1511,24 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <translation>Version</translation>\n     </message>\n     <message>\n-        <source>User Agent</source>\n-        <translation>Anv\u00e4ndaragent</translation>\n+        <source>Starting Block</source>\n+        <translation>Startblock</translation>\n     </message>\n     <message>\n-        <source>Services</source>\n-        <translation>Tj\u00e4nster</translation>\n+        <source>Synced Headers</source>\n+        <translation>Synkade huvuden</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>Starth\u00f6jd</translation>\n+        <source>Synced Blocks</source>\n+        <translation>Synkade block</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>Synch\u00f6jd</translation>\n+        <source>User Agent</source>\n+        <translation>Anv\u00e4ndaragent</translation>\n+    </message>\n+    <message>\n+        <source>Services</source>\n+        <translation>Tj\u00e4nster</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1511,6 +1558,14 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Ping Time</source>\n         <translation>Pingtid</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>Tids\u00e5tg\u00e5ngen f\u00f6r en nuvarande utest\u00e5ende ping.</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>Pingv\u00e4ntetid</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>Tidsf\u00f6rskjutning</translation>\n@@ -1559,6 +1614,34 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Clear console</source>\n         <translation>Rensa konsollen</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>&amp;Koppla fr\u00e5n nod</translation>\n+    </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>Banna nod i</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 &amp;timme</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 &amp;dag</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 &amp;vecka</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 &amp;\u00e5r</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>&amp;Ta bort ban fr\u00e5n nod</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>V\u00e4lkommen till RPC-konsolen f\u00f6r Bitcoin Core.</translation>\n@@ -1587,6 +1670,10 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(nod-id: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>via %1</translation>\n@@ -1604,12 +1691,16 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <translation>Utg\u00e5ende</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Ok\u00e4nd</translation>\n+        <source>Yes</source>\n+        <translation>Ja</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>H\u00e4mtar...</translation>\n+        <source>No</source>\n+        <translation>Nej</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Ok\u00e4nd</translation>\n     </message>\n </context>\n <context>\n@@ -1971,10 +2062,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Copy change</source>\n         <translation>Kopiera v\u00e4xel</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Totalt %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>eller</translation>\n@@ -2015,6 +2102,10 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Pay only the minimum fee of %1</source>\n         <translation>Betala endast den minimala avgiften p\u00e5 %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>Total summa %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Mottagarens adress \u00e4r ogiltig. Kontrollera igen.</translation>\n@@ -2789,13 +2880,57 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Till\u00e5t kommandon fr\u00e5n kommandotolken och JSON-RPC-kommandon</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n+        <translation>Avgift (i %s/kB) mindre \u00e4n detta betraktas som nollavgift f\u00f6r vidarebefordran(standard: %s)</translation>\n+    </message>\n+    <message>\n+        <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n+        <translation>Om &lt;kategori&gt; inte anges eller om &lt;category&gt; = 1, visa all avlusningsinformation.</translation>\n+    </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>Maximal total avgift (i %s) att anv\u00e4nda i en pl\u00e5nbokstransaktion. S\u00e4tts denna f\u00f6r l\u00e5gtkan stora transaktioner komma att avbrytas (f\u00f6rvalt: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>V\u00e4nligen kontrollera att din dators datum och tid \u00e4r korrekt! Om din klocka g\u00e5r fel kommer Bitcoin Core inte att fungera ordentligt.</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>Besk\u00e4rning konfigurerad under miniminiv\u00e5n %d MiB. V\u00e4nligen anv\u00e4nd ett h\u00f6gre v\u00e4rde.</translation>\n+    </message>\n+    <message>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation>Besk\u00e4rning: sista pl\u00e5nbokssynkroniseringen ligger utanf\u00f6r beskuren data. Du m\u00e5ste anv\u00e4nda -reindex (ladda ner hela blockkedjan igen eftersom noden beskurits)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>Minska lagringsbehovet genom att besk\u00e4ra (ta bort) gamla block. Detta l\u00e4ge \u00e4r inkompatibelt med -txindex och -rescan. Varning: \u00c4ndras denna inst\u00e4llning m\u00e5ste hela blockkedjan laddas ner igen. (f\u00f6rvalt: 0 = inaktivera besk\u00e4rning av block, &gt;%u = m\u00e5lstorlek i MiB att anv\u00e4nda f\u00f6r blockfiler)</translation>\n+    </message>\n+    <message>\n+        <source>Rescans are not possible in pruned mode. You will need to use -reindex which will download the whole blockchain again.</source>\n+        <translation>Omskanningar kan inte g\u00f6ras i beskuret l\u00e4ge. Du m\u00e5ste anv\u00e4nda -reindex vilket kommer ladda ner hela blockkedjan igen.</translation>\n+    </message>\n+    <message>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Fel: Ett kritiskt internt fel uppstod, se debug.log f\u00f6r detaljer</translation>\n+    </message>\n+    <message>\n+        <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n+        <translation>Avgift (i %s/kB) att l\u00e4gga till p\u00e5 transaktioner du skickar (f\u00f6rvalt: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>Rensar blockstore...</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>K\u00f6r i bakgrunden som tj\u00e4nst och acceptera kommandon</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>Anv\u00e4nd testn\u00e4tverket</translation>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>Kunde inte starta HTTP-server. Se avlusningsloggen f\u00f6r detaljer.</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2817,18 +2952,14 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Exekvera kommando n\u00e4r en pl\u00e5nbokstransaktion \u00e4ndras (%s i cmd \u00e4r ersatt av TxID)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Maximal total avgift att anv\u00e4nda i en pl\u00e5nbokstransaktion. S\u00e4tts denna f\u00f6r l\u00e5gt kommer stora transaktioner att avbrytas (f\u00f6rvalt: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Reducera lagringsbehovet genom att besk\u00e4ra (ta bort) gamla block. Detta l\u00e4ge avaktiverar pl\u00e5nbokssupport och \u00e4r inkompatibel med -txindex. Varning: \u00c4ndras denna inst\u00e4llning m\u00e5ste hela blockkedjan laddas ner igen. 0 = avaktivera besk\u00e4rning av blocks, &gt;%u = m\u00e5lstorlek i MiB att anv\u00e4nda f\u00f6r blockfiler)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Ange antalet skriptkontrolltr\u00e5dar (%u till %d, 0 = auto, &lt;0 = l\u00e4mna s\u00e5 m\u00e5nga k\u00e4rnor lediga, f\u00f6rval: %d)</translation>\n     </message>\n+    <message>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n+        <translation>Blockdatabasen inneh\u00e5ller ett block som verkar vara fr\u00e5n framtiden. Detta kan vara p\u00e5 grund av att din dators datum och tid \u00e4r felaktiga. Bygg bara om blockdatabasen om du \u00e4r s\u00e4ker p\u00e5 att datorns datum och tid \u00e4r korrekt</translation>\n+    </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Detta \u00e4r ett f\u00f6rhands testbygge - anv\u00e4nd p\u00e5 egen risk - anv\u00e4nd inte f\u00f6r mining eller handels applikationer</translation>\n@@ -2837,6 +2968,10 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>Det g\u00e5r inte att binda till %s p\u00e5 den h\u00e4r datorn. Bitcoin Core \u00e4r f\u00f6rmodligen redan ig\u00e5ng.</translation>\n     </message>\n+    <message>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n+        <translation>Anv\u00e4nd UPnP f\u00f6r att mappa den lyssnande porten (f\u00f6rvalt: 1 n\u00e4r lyssning aktiverat och utan -proxy)</translation>\n+    </message>\n     <message>\n         <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>Varning: Onormalt antal block block genererade. %d block mottagna senaste %d timmarna (%d f\u00f6rv\u00e4ntade)</translation>\n@@ -2845,10 +2980,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>Varning: Kontrollera din n\u00e4rverksanslutning. %d block mottagna senaste %d timmarna, (%d f\u00f6rv\u00e4ntade)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Varning: -paytxfee \u00e4r satt v\u00e4ldigt h\u00f6g! Detta \u00e4r avgiften du kommer betala f\u00f6r varje transaktion.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Varning: N\u00e4tverket verkar inte vara helt \u00f6verens! N\u00e5gra miners verkar ha problem.</translation>\n@@ -2857,10 +2988,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Varning: Vi verkar inte helt \u00f6verens med v\u00e5ra peers! Du kan beh\u00f6va uppgradera, eller andra noder kan beh\u00f6va uppgradera.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Varning: fel vid l\u00e4sning av wallet.dat! Alla nycklar l\u00e4stes korrekt, men transaktionsdatan eller adressbokens poster kanske saknas eller \u00e4r felaktiga.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Varning: wallet.dat korrupt, datan har r\u00e4ddats! Den ursprungliga wallet.dat har sparas som wallet.{timestamp}.bak i %s; om ditt saldo eller transaktioner \u00e4r felaktiga ska du \u00e5terst\u00e4lla fr\u00e5n en s\u00e4kerhetskopia.</translation>\n@@ -2873,6 +3000,10 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>(default: 1)</source>\n         <translation>(f\u00f6rvalt: 1)</translation>\n     </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>-maxmempool m\u00e5ste vara minst %d MB</translation>\n+    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; Kan vara:</translation>\n@@ -2891,15 +3022,15 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Connection options:</source>\n-        <translation>Anslutningsoptioner:</translation>\n+        <translation>Anslutningsalternativ:</translation>\n     </message>\n     <message>\n         <source>Corrupted block database detected</source>\n         <translation>Korrupt blockdatabas har uppt\u00e4ckts</translation>\n     </message>\n     <message>\n         <source>Debugging/Testing options:</source>\n-        <translation>Avlusnings/Testnings optioner:</translation>\n+        <translation>Avlusnings/Test-alternativ:</translation>\n     </message>\n     <message>\n         <source>Do not load the wallet and disable wallet RPC calls</source>\n@@ -2909,6 +3040,22 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>Vill du bygga om blockdatabasen nu?</translation>\n     </message>\n+    <message>\n+        <source>Enable publish hash block in &lt;address&gt;</source>\n+        <translation>Aktivera publicering av hashblock i &lt;adress&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish hash transaction in &lt;address&gt;</source>\n+        <translation>Aktivera publicering av hashtransaktion i &lt;adress&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw block in &lt;address&gt;</source>\n+        <translation>Aktivera publicering av r\u00e5a block i &lt;adress&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw transaction in &lt;address&gt;</source>\n+        <translation>Aktivera publicering av r\u00e5a transaktioner i &lt;adress&gt;</translation>\n+    </message>\n     <message>\n         <source>Error initializing block database</source>\n         <translation>Fel vid initiering av blockdatabasen</translation>\n@@ -2925,10 +3072,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Error opening block database</source>\n         <translation>Fel vid \u00f6ppning av blockdatabasen</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Fel: Ett fatalt internt fel intr\u00e4ffade. Se debug.log f\u00f6r detaljer</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Fel: H\u00e5rddiskutrymme \u00e4r l\u00e5gt!</translation>\n@@ -2937,10 +3080,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Misslyckades att lyssna p\u00e5 n\u00e5gon port. Anv\u00e4nd -listen=0 om du vill detta.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>Om &lt;category&gt; inte anges, skrivs all avlusningsinformation ut.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>Importerar...</translation>\n@@ -2953,6 +3092,10 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Invalid -onion address: '%s'</source>\n         <translation>Ogiltig -onion adress:'%s'</translation>\n     </message>\n+    <message>\n+        <source>Keep the transaction memory pool below &lt;n&gt; megabytes (default: %u)</source>\n+        <translation>H\u00e5ll minnespoolen \u00f6ver transaktioner under &lt;n&gt; megabyte (f\u00f6rvalt: %u)</translation>\n+    </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n         <translation>Inte tillr\u00e4ckligt med filbeskrivningar tillg\u00e4ngliga.</translation>\n@@ -2981,10 +3124,26 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Ange pl\u00e5nboksfil (inom datakatalogen)</translation>\n     </message>\n+    <message>\n+        <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation>Argumentet -benchmark st\u00f6ds inte och ignoreras, anv\u00e4nd -debug=bench.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation>Argumentet -debugnet st\u00f6ds inte och ignoreras, anv\u00e4nd -debug=net.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -tor found, use -onion.</source>\n+        <translation>Argumentet -tor hittades men st\u00f6ds inte, anv\u00e4nd -onion.</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Anv\u00e4nd UPnP f\u00f6r att mappa den lyssnande porten (f\u00f6rvalt: %u)</translation>\n     </message>\n+    <message>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation>Kommentaren i anv\u00e4ndaragent (%s) inneh\u00e5ller os\u00e4kra tecken.</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>Verifierar block...</translation>\n@@ -3015,19 +3174,15 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n-        <translation>Till\u00e5t JSON-RPC anslutningar fr\u00e5n specifik kalla. Till\u00e5tet f\u00f6r &lt;ip&gt; \u00e4r enkel IP (t.ex 1.2.3.4), en n\u00e4tverk/n\u00e4tmask (t.ex. 1.2.3.4/255.255.255.0) eller ett n\u00e4tverk/CIDR (t.ex. 1.2.3.4/24). Denna option kan specificeras flera g\u00e5nger</translation>\n-    </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Ett fel uppstod vid uppr\u00e4ttandet av RPC adress %s port %u f\u00f6r att lyssna: %s</translation>\n+        <translation>Till\u00e5t JSON-RPC-anslutningar fr\u00e5n specifik k\u00e4lla. Till\u00e5tna &lt;ip&gt; \u00e4r enkel IP (t.ex 1.2.3.4), en n\u00e4tverk/n\u00e4tmask (t.ex. 1.2.3.4/255.255.255.0) eller ett n\u00e4tverk/CIDR (t.ex. 1.2.3.4/24). Detta alternativ anges flera g\u00e5nger</translation>\n     </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Bind till given adress och vitlista klienter som ansluter till den. Anv\u00e4nd [v\u00e4rd]:port notation f\u00f6r IPv6</translation>\n     </message>\n     <message>\n         <source>Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)</source>\n-        <translation>Bind till angiven adress f\u00f6r att lyssna p\u00e5 JSON-RPC anslutningar. Anv\u00e4nd [v\u00e4rd]:port notation for IPv6. Denna option kan specificeras flera g\u00e5nger (f\u00f6rvalt: bind till alla gr\u00e4nssnitt)</translation>\n+        <translation>Bind till angiven adress f\u00f6r att lyssna p\u00e5 JSON-RPC-anslutningar. Anv\u00e4nd [v\u00e4rd]:port-format for IPv6. Detta alternativ kan anges flera g\u00e5nger (f\u00f6rvalt: bind till alla gr\u00e4nssnitt)</translation>\n     </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n@@ -3045,18 +3200,10 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Fel: Avlyssning av inkommande anslutningar misslyckades (Avlyssningen returnerade felkod %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Fel: Argumentet -socks st\u00f6ds inte. Att s\u00e4tta SOCKS version \u00e4r inte m\u00f6jligt l\u00e4ngre. Endast SOCKS5 proxy st\u00f6ds.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Exekvera kommando n\u00e4r ett relevant meddelande \u00e4r mottagen eller n\u00e4r vi ser en v\u00e4ldigt l\u00e5ng f\u00f6rgrening (%s i cmd \u00e4r utbytt med ett meddelande)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Avgifter (i BTC/Kb) mindre \u00e4n detta betraktas som nollavgift f\u00f6r vidarebefodran (f\u00f6rvalt: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Om paytxfee inte \u00e4r satt, inkludera tillr\u00e4cklig avgift s\u00e5 att transaktionen b\u00f6rjar att konfirmeras inom n blocks (f\u00f6rvalt: %u)</translation>\n@@ -3069,10 +3216,6 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Maximal storlek p\u00e5 data i datab\u00e4rartransaktioner som vi rel\u00e4ar och bryter (f\u00f6rvalt: %u) </translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Besk\u00e4rning konfigurerad under miniminiv\u00e5n %d MB. Var v\u00e4nlig anv\u00e4nd ett h\u00f6gre v\u00e4rde.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>S\u00f6k efter klientadresser med DNS s\u00f6kningen, om det finns otillr\u00e4ckligt med adresser (f\u00f6rvalt: 1 om inte -connect)</translation>\n@@ -3093,41 +3236,9 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Denna produkten inneh\u00e5ller mjukvara utvecklad av OpenSSL Project f\u00f6r anv\u00e4ndning i OpenSSL Toolkit &lt;https://www.openssl.org/&gt; och kryptografisk mjukvara utvecklad av Eric Young samt UPnP-mjukvara skriven av Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>F\u00f6r att anv\u00e4nda bitconid,eller -server optionen till bitcoin-qt s\u00e5 m\u00e4ste du s\u00e4tta ett rpcl\u00f6sensord i konfigurationsfilen:\n-%s\n-Det \u00e4r rekommenderat att anv\u00e4nda f\u00f6ljande slumpade l\u00f6senord:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(du beh\u00f6ver inte komma ih\u00e5g l\u00f6senordet)\n-Anv\u00e4ndarnamnet och l\u00f6senordet F\u00c5R INTE vara detsamma.\n-Om filen inte existerar, skapa den med enbart \u00e4garl\u00e4sbara filr\u00e4ttigheter.\n-Det \u00e4r ocks\u00e5 rekommenderat att s\u00e4tta alertnotify s\u00e5 du meddelas om problem;\n-till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>Varning: -maxtxfee \u00e4r satt v\u00e4ldigt h\u00f6g! S\u00e5 h\u00f6ga avgifter kan betalas f\u00f6r en enstaka transaktion.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Varning: V\u00e4nligen kolla s\u00e5 att din dators datum och tid \u00e4r korrekt! Om din klocka g\u00e5r fel kommer Bitcoin Core inte att fungera korrekt.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n-        <translation>Vitlistade klienter kan inte bli DoS bannade och deras transaktioner rel\u00e4as alltid, \u00e4ven om dom redan \u00e4r i mempoolen, anv\u00e4ndbart f\u00f6r t.ex en gateway  </translation>\n+        <translation>Vitlistade klienter kan inte bli DoS-bannade och deras transaktioner rel\u00e4as alltid, \u00e4ven om dom redan \u00e4r i mempoolen, anv\u00e4ndbart f\u00f6r t.ex en gateway  </translation>\n     </message>\n     <message>\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n@@ -3145,10 +3256,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>Aktiverar b\u00e4sta kedjan...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>Kan inte k\u00f6ra med en pl\u00e5nbok i besk\u00e4rningsl\u00e4ge.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>Kan inte matcha -whitebind adress: '%s'</translation>\n@@ -3165,10 +3272,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Copyright (C) 2009-%i Bitcoin Core Utvecklarna</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>Kunde inte tolka -rpcbind v\u00e4rdet %s som en n\u00e4tverksadress</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>Fel vid inl\u00e4sningen av wallet.dat: Kontofilen kr\u00e4ver en senare version av Bitcoin Core</translation>\n@@ -3177,14 +3280,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>Fel vid l\u00e4sning fr\u00e5n databas, avslutar.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Fel: Argumentet -tor st\u00f6ds inte, anv\u00e4nd -onion.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Avgift (i BTC/Kb) att l\u00e4gga till p\u00e5 transaktioner du skickar (f\u00f6rvalt: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Information</translation>\n@@ -3223,19 +3318,11 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n     </message>\n     <message>\n         <source>Node relay options:</source>\n-        <translation>Nodrel\u00e4optioner:</translation>\n-    </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL optioner: (se Bitcoin Wiki f\u00f6r SSL inst\u00e4llningsinstruktioner)</translation>\n+        <translation>Nodrel\u00e4alternativ:</translation>\n     </message>\n     <message>\n         <source>RPC server options:</source>\n-        <translation>RPC serveroptioner:</translation>\n-    </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC support f\u00f6r HTTP permanent anslutning (f\u00f6rvalt: %d)</translation>\n+        <translation>RPC-serveralternativ:</translation>\n     </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n@@ -3245,6 +3332,10 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation>Mottag och visa P2P n\u00e4tverksvarningar (f\u00f6rvalt: %u)</translation>\n     </message>\n+    <message>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n+        <translation>Minskar -maxconnections fr\u00e5n %d till %d, p\u00e5 grund av systembegr\u00e4nsningar.</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Skicka trace-/debuginformation till terminalen ist\u00e4llet f\u00f6r till debug.log</translation>\n@@ -3263,7 +3354,7 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n     </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n-        <translation>Visa alla avlusningsoptioner (anv\u00e4nd: --help -help-debug)</translation>\n+        <translation>Visa alla avlusningsalternativ (anv\u00e4nd: --help -help-debug)</translation>\n     </message>\n     <message>\n         <source>Show splash screen on startup (default: 1)</source>\n@@ -3313,10 +3404,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Det g\u00e5r inte att binda till %s p\u00e5 den h\u00e4r datorn (bind returnerade felmeddelande %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Anv\u00e4nd UPnP f\u00f6r att mappa den lyssnande porten (f\u00f6rvalt: 1 under lyssning)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Anv\u00e4ndarnamn f\u00f6r JSON-RPC-anslutningar</translation>\n@@ -3329,18 +3416,14 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Warning</source>\n         <translation>Varning</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Varning:  Argument -benchmark st\u00f6ds inte och ignoreras, anv\u00e4nd -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Varning: Argument -debugnet st\u00f6ds inte och ignorerad, anv\u00e4nd -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>T\u00f6m pl\u00e5nboken p\u00e5 alla transaktioner...</translation>\n     </message>\n+    <message>\n+        <source>ZeroMQ notification options:</source>\n+        <translation>ZeroMQ-alternativ f\u00f6r notiser:</translation>\n+    </message>\n     <message>\n         <source>on startup</source>\n         <translation>under uppstarten</translation>\n@@ -3365,10 +3448,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>S\u00f6k i blockkedjan efter saknade pl\u00e5nboks transaktioner</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Anv\u00e4nd OpenSSL (https) f\u00f6r JSON-RPC-anslutningar</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Det h\u00e4r hj\u00e4lp medelandet</translation>\n@@ -3389,6 +3468,22 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = spara tx metadata t.ex. konto\u00e4gare och betalningsbeg\u00e4ransinformation, 2 = sl\u00e4ng tx metadata)</translation>\n     </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>-maxtxfee \u00e4r v\u00e4ldigt h\u00f6gt satt! S\u00e5 h\u00f6ga avgifter kan komma att betalas f\u00f6r en enstaka transaktion.</translation>\n+    </message>\n+    <message>\n+        <source>-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>-paytxfee \u00e4r v\u00e4ldigt h\u00f6gt satt! Det h\u00e4r \u00e4r avgiften du kommer betala om du skickar en transaktion.</translation>\n+    </message>\n+    <message>\n+        <source>Do not keep transactions in the mempool longer than &lt;n&gt; hours (default: %u)</source>\n+        <translation>H\u00e5ll inte transaktioner i minnespoolen l\u00e4ngre \u00e4n &lt;n&gt; timmar (f\u00f6rvalt: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>Fel vid l\u00e4sning av wallet.dat! Alla nycklar l\u00e4stes korrekt, men transaktionsdata eller adressbokens poster kanske saknas eller \u00e4r felaktiga.</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Hur grundlig blockverifikationen vid -checkblocks \u00e4r (0-4, f\u00f6rvalt: %u)</translation>\n@@ -3405,6 +3500,18 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Skriv ut avlusningsinformation (f\u00f6rvalt: %u, att ange &lt;category&gt; \u00e4r frivilligt)</translation>\n     </message>\n+    <message>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation>Total l\u00e4ngd p\u00e5 str\u00e4ngen f\u00f6r n\u00e4tverksversion (%i) \u00f6verskrider maxl\u00e4ngden (%i). Minska numret eller storleken p\u00e5 uacomments.</translation>\n+    </message>\n+    <message>\n+        <source>Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)</source>\n+        <translation>F\u00f6rs\u00f6ker h\u00e5lla utg\u00e5ende trafik under givet m\u00e5l (i MiB per 24 timmar), 0 = ingen gr\u00e4ns (f\u00f6rvalt: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation>Argumentet -socks hittades och st\u00f6ds inte. Det \u00e4r inte l\u00e4ngre m\u00f6jligt att s\u00e4tta SOCKS-version l\u00e4ngre, bara SOCKS5-proxy st\u00f6ds.</translation>\n+    </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation>Anv\u00e4nd separat SOCKS5 proxy f\u00f6r att n\u00e5 kollegor via dolda tj\u00e4nster i Tor (f\u00f6rvalt: -%s)</translation>\n@@ -3413,10 +3520,6 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(f\u00f6rvalt: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Accepterbara chiffer (f\u00f6rvalt: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>S\u00f6k alltid efter klientadresser med DNS s\u00f6kningen (f\u00f6rvalt: %u)</translation>\n@@ -3475,15 +3578,7 @@ till exempel: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n     </message>\n     <message>\n         <source>Relay non-P2SH multisig (default: %u)</source>\n-        <translation>Rel\u00e4a icke P2SH multisig (f\u00f6rvalt: %u)</translation>\n-    </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Serverns certifikatfil (f\u00f6rvalt: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Serverns privata nyckel (f\u00f6rvalt: %s)</translation>\n+        <translation>Rel\u00e4a icke-P2SH multisig (f\u00f6rvalt: %u)</translation>\n     </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>"
      },
      {
        "sha": "75fdfc5bdfb66451cd64626d48f5334050b74aaf",
        "filename": "src/qt/locale/bitcoin_th_TH.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_th_TH.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_th_TH.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_th_TH.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"th_TH\" version=\"2.0\">\n+<TS language=\"th_TH\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -104,6 +104,9 @@\n         <translation>\u0e16\u0e2d\u0e14\u0e23\u0e2b\u0e31\u0e2a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e25\u0e49\u0e21\u0e40\u0e2b\u0e25\u0e27</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>"
      },
      {
        "sha": "8d2945fba75fdf726e5cd4e2ac7a4018e2ff529c",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 149,
        "changes": 161,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"tr\" version=\"2.0\">\n+<TS language=\"tr\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,9 @@\n         <translation>C\u00fczdan parolas\u0131 ba\u015far\u0131l\u0131 bir \u015fekilde de\u011fi\u015ftirildi.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1286,10 +1289,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>%1 \u00f6deme talebi \u00e7ok b\u00fcy\u00fck (%2 bayt, m\u00fcsaade edilen %3 bayt).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>\u00d6deme talebi DoS korumas\u0131</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>%1 ile ileti\u015fimde hata: %2</translation>\n@@ -1478,14 +1477,6 @@\n         <source>Services</source>\n         <translation>Servisler</translation>\n     </message>\n-    <message>\n-        <source>Starting Height</source>\n-        <translation>Ba\u015flama Y\u00fcksekli\u011fi</translation>\n-    </message>\n-    <message>\n-        <source>Sync Height</source>\n-        <translation>E\u015fle\u015fme Y\u00fcksekli\u011fi</translation>\n-    </message>\n     <message>\n         <source>Ban Score</source>\n         <translation>Yasaklama Skoru</translation>\n@@ -1607,12 +1598,16 @@\n         <translation>Giden</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>Bilinmiyor</translation>\n+        <source>Yes</source>\n+        <translation>Evet</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>Al\u0131n\u0131yor...</translation>\n+        <source>No</source>\n+        <translation>Hay\u0131r</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Bilinmiyor</translation>\n     </message>\n </context>\n <context>\n@@ -1978,10 +1973,6 @@\n         <source>Copy change</source>\n         <translation>Para \u00fcst\u00fcn\u00fc kopyala</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>Toplam mebla\u011f %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>veya</translation>\n@@ -2800,10 +2791,6 @@\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Arka planda daemon (servis) olarak \u00e7al\u0131\u015f ve komutlar\u0131 kabul et</translation>\n     </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>Deneme \u015febekesini kullan</translation>\n-    </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>D\u0131\u015far\u0131dan gelen ba\u011flant\u0131lar\u0131 kabul et (varsay\u0131lan: -proxy veya -connect yoksa 1)</translation>\n@@ -2824,14 +2811,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Bir c\u00fczdan muamelesi de\u011fi\u015fti\u011finde komutu \u00e7al\u0131\u015ft\u0131r (komuttaki %s muamele kimli\u011fi ile de\u011fi\u015ftirilecektir)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>Tek c\u00fczdan muamelesinde kullan\u0131lacak azami toplam \u00fccret; bunu \u00e7ok d\u00fc\u015f\u00fck olarak ayarlamak b\u00fcy\u00fck muameleleri iptal edebilir (varsay\u0131lan: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>Depolama gereklili\u011fini eski bloklar\u0131 silerek d\u00fc\u015f\u00fcr. Bu kip c\u00fczdan deste\u011fini devre d\u0131\u015f\u0131 b\u0131rak\u0131r ve -txindex ile uyumsuzdur. \u0130kaz: Bu ayar\u0131 geri almak t\u00fcm blok zincirini yeniden indirmeyi gerektirir. (varsay\u0131lan: 0 = bloklar\u0131 silmeyi devre d\u0131\u015f\u0131 b\u0131rak, &gt;%u = MB olarak blok dosyalar\u0131 i\u00e7in kullan\u0131lacak hedef boyut)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Betik kontrol\u00fc i\u015f par\u00e7ac\u0131klar\u0131n\u0131n say\u0131s\u0131n\u0131 belirler (%u il\u00e2 %d, 0 = otomatik, &lt;0 = bu say\u0131da \u00e7ekirde\u011fi kullanma, varsay\u0131lan: %d)</translation>\n@@ -2852,10 +2831,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u0130KAZ: a\u011f ba\u011flant\u0131n\u0131z\u0131 kontrol ediniz, %d blok son %d saat i\u00e7inde al\u0131nm\u0131\u015ft\u0131r (%d bekleniyordu)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Uyar\u0131: -paytxfee \u00e7ok y\u00fcksek bir de\u011fere ayarlanm\u0131\u015f! Bu, muamele g\u00f6nderirseniz \u00f6deyece\u011finiz muamele \u00fccretidir.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Uyar\u0131: \u015febeke tamamen mutab\u0131k de\u011fil gibi g\u00f6r\u00fcn\u00fcyor! Baz\u0131 madenciler sorun ya\u015f\u0131yor gibi g\u00f6r\u00fcn\u00fcyor.</translation>\n@@ -2864,10 +2839,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>Uyar\u0131: e\u015flerimizle tamamen mutab\u0131k de\u011filiz gibi g\u00f6r\u00fcn\u00fcyor! G\u00fcncelleme yapman\u0131z gerekebilir ya da di\u011fer d\u00fc\u011f\u00fcmlerin g\u00fcncelleme yapmalar\u0131 gerekebilir.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>Uyar\u0131: wallet.dat dosyas\u0131n\u0131n okunmas\u0131 s\u0131ras\u0131nda bir hata meydana geldi! T\u00fcm anahtarlar do\u011fru bir \u015fekilde okundu, ancak muamele verileri ya da adres defteri unsurlar\u0131 hatal\u0131 veya eksik olabilir.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Uyar\u0131: wallet.dat bozuk, veriler geri kazan\u0131ld\u0131! \u00d6zg\u00fcn wallet.dat, wallet.{zamandamgas\u0131}.bak olarak %s klas\u00f6r\u00fcne kaydedildi; bakiyeniz ya da muameleleriniz yanl\u0131\u015fsa bir yedeklemeden tekrar y\u00fcklemeniz gerekir.</translation>\n@@ -2932,10 +2903,6 @@\n         <source>Error opening block database</source>\n         <translation>Blok veritaban\u0131n\u0131n a\u00e7\u0131l\u0131\u015f\u0131 s\u0131ras\u0131nda hata</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>Hata: \u00d6l\u00fcmc\u00fcl dahili bir hata meydana geldi, ayr\u0131nt\u0131lar i\u00e7in debug.log dosyas\u0131na bak\u0131n\u0131z</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>Hata: Disk alan\u0131 d\u00fc\u015f\u00fck!</translation>\n@@ -2944,10 +2911,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Herhangi bir portun dinlenmesi ba\u015far\u0131s\u0131z oldu. Bunu istiyorsan\u0131z -listen=0 se\u00e7ene\u011fini kullan\u0131n\u0131z.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>&lt;kategori&gt; sa\u011flanmam\u0131\u015fsa t\u00fcm hata ay\u0131klama verilerini d\u00f6k.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u0130\u00e7e aktar\u0131l\u0131yor...</translation>\n@@ -3024,10 +2987,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>Belirtilen kaynaktan JSON-RPC ba\u011flant\u0131lar\u0131n\u0131 kabul et. Bir &lt;ip&gt; i\u00e7in ge\u00e7erli olanlar \u015funlard\u0131r: salt IP adresi (mesela 1.2.3.4), bir \u015febeke/a\u011f maskesi (\u00f6rne\u011fin 1.2.3.4/255.255.255.0) ya da bir \u015febeke/CIDR (mesela 1.2.3.4/24). Bu se\u00e7enek birden fazla kez belirtilebilir</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>Dinleme i\u00e7in RPC adresi %s port %u kurulurken bir hata meydana geldi: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>Belirtilen adrese ba\u011flan ve ona ba\u011flanan e\u015fleri beyaz listeye al. IPv6 i\u00e7in [makine]:port imlas\u0131n\u0131 kullan\u0131n\u0131z</translation>\n@@ -3052,18 +3011,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Hata: \u0130\u00e7eri gelen ba\u011flant\u0131lar\u0131n dinlenmesi ba\u015far\u0131s\u0131z oldu (dinleme %s hatas\u0131n\u0131 verdi)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>Hata: Desteklenmeyen -socks arg\u00fcman\u0131 bulundu. SOCKS s\u00fcr\u00fcm\u00fcn\u00fcn ayarlanmas\u0131 art\u0131k m\u00fcmk\u00fcn de\u011fildir, sadece SOCKS5 vekilleri desteklenmektedir.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>\u0130lgili bir uyar\u0131 al\u0131nd\u0131\u011f\u0131nda ya da ger\u00e7ekten uzun bir \u00e7atallama g\u00f6rd\u00fc\u011f\u00fcm\u00fczde komutu \u00e7al\u0131\u015ft\u0131r (komuttaki %s mesaj ile de\u011fi\u015ftirilir)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>Kb ba\u015f\u0131na BTC olarak bundan d\u00fc\u015f\u00fck \u00fccretler aktar\u0131m i\u00e7in s\u0131f\u0131r de\u011ferinde \u00fccret olarak kabul edilir (varsay\u0131lan: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>E\u011fer paytxfee ayarlanmad\u0131ysa kafi derecede \u00fccret ekleyin ki muameleler teyite vasati n blok i\u00e7inde ba\u015flas\u0131n (varsay\u0131lan: %u)</translation>\n@@ -3076,10 +3027,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Aktard\u0131\u011f\u0131m\u0131z ve olu\u015fturdu\u011fumuz veri ta\u015f\u0131y\u0131c\u0131 muamelelerindeki azami veri boyutu (varsay\u0131lan: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>Prune, asgari de\u011fer olan %d MB'den d\u00fc\u015f\u00fck olarak ayarlanm\u0131\u015ft\u0131r. L\u00fctfen daha y\u00fcksek bir say\u0131 kullan\u0131n\u0131z.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>Adres say\u0131s\u0131 azald\u0131ysa DNS sorgulamas\u0131yla e\u015f adresleri ara (varsay\u0131lan: 1 -connect kullan\u0131lmad\u0131ysa)</translation>\n@@ -3104,38 +3051,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>Bu \u00fcr\u00fcn OpenSSL projesi taraf\u0131ndan OpenSSL ara\u00e7 tak\u0131m\u0131 (http://www.openssl.org/) i\u00e7in geli\u015ftirilen yaz\u0131l\u0131mlar, Eric Young (eay@cryptsoft.com) taraf\u0131ndan haz\u0131rlanm\u0131\u015f \u015fifreleme yaz\u0131l\u0131mlar\u0131 ve Thomas Bernard taraf\u0131ndan programlanm\u0131\u015f UPnP yaz\u0131l\u0131m\u0131 i\u00e7erir.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>bitcoind ya da bitcoin-qt ile -server se\u00e7ene\u011fini kullanmak i\u00e7in yap\u0131land\u0131rma dosyas\u0131nda bir rpc parolas\u0131 belirtmeniz gerekir:\n-%s\n-A\u015fa\u011f\u0131daki rastgele olu\u015fturulan parolay\u0131 kullanman\u0131z tavsiye edilir:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(bu parolay\u0131 hat\u0131rlaman\u0131z gerekli de\u011fildir)\n-Kullan\u0131c\u0131 ismi ile parolan\u0131n FARKLI olmalar\u0131 gerekir.\n-Dosya mevcut de\u011filse, sadece sahibi i\u00e7in okumayla s\u0131n\u0131rl\u0131 izin ile olu\u015fturunuz.\n-Sorunlar hakk\u0131nda bildiri almak i\u00e7in alertnotify unsurunu ayarlaman\u0131z tavsiye edilir;\n-mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>\u0130kaz: -maxtxfee \u00e7ok y\u00fcksek bir de\u011fere ayarlanm\u0131\u015f! Bu denli y\u00fcksek \u00fccretler tek bir muamelede \u00f6denebilir.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>Uyar\u0131: L\u00fctfen bilgisayar\u0131n\u0131z\u0131n saat ve tarihinin do\u011fru oldu\u011funu kontol ediniz! Saatinizde gecikme varsa Bitcoin \u00c7ekirde\u011fi do\u011fru \u015fekilde \u00e7al\u0131\u015famaz.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>Beyaz listeye al\u0131nan e\u015fler DoS yasaklamas\u0131na u\u011framazlar ve muameleleri zaten mempool'da olsalar da daima aktar\u0131l\u0131r, bu mesela bir ge\u00e7it i\u00e7in kullan\u0131\u015fl\u0131d\u0131r</translation>\n@@ -3156,10 +3071,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Activating best chain...</source>\n         <translation>En iyi zincir etkinle\u015ftiriliyor...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>Prune kipindeki bir c\u00fczdan ile \u00e7al\u0131\u015famaz.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>-whitebind adresi \u00e7\u00f6z\u00fcmlenemedi: '%s'</translation>\n@@ -3176,10 +3087,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>Telif hakk\u0131 2009-%i Bitcoin \u00c7ekirde\u011fi Geli\u015ftiricileri</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>-rpcbind de\u011feri %s \u015febeke adresi olarak ayr\u0131\u015ft\u0131r\u0131lamad\u0131</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>wallet.dat dosyas\u0131n\u0131n y\u00fcklenmesinde hata: C\u00fczdan Bitcoin \u00c7ekirde\u011finin daha yeni bir s\u00fcr\u00fcm\u00fcn\u00fc gerektirmektedir</translation>\n@@ -3188,14 +3095,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Error reading from database, shutting down.</source>\n         <translation>Veritaban\u0131ndan okumada hata, kapat\u0131l\u0131yor.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>Hata: Deskteklenmeyen -tor arg\u00fcman\u0131 bulundu, -onion kullan\u0131n\u0131z.</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>Yollad\u0131\u011f\u0131n\u0131z muamelelere kB ba\u015f\u0131na BTC olarak eklenecek \u00fccret (varsay\u0131lan: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>Bilgi</translation>\n@@ -3236,18 +3135,10 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Node relay options:</source>\n         <translation>D\u00fc\u011f\u00fcm r\u00f6le se\u00e7enekleri:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL se\u00e7enekleri: (SSL kurulumu y\u00f6nergeleri i\u00e7in Bitcoin vikisine bak\u0131n\u0131z)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC sunucu se\u00e7enekleri:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>Kal\u0131c\u0131 HTTP ba\u011flant\u0131lar\u0131 i\u00e7in RPC deste\u011fi (varsay\u0131lan: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>Ba\u015flang\u0131\u00e7ta blok zinciri indeksini g\u00fcncel blk000??.dat dosyalar\u0131ndan tekrar in\u015fa et</translation>\n@@ -3324,10 +3215,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>Bu bilgisayarda %s unsuruna ba\u011flan\u0131lamad\u0131 (ba\u011flanma %s hatas\u0131n\u0131 verdi)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>Dinlenecek portu haritalamak i\u00e7in UPnP kullan (varsay\u0131lan: dinlenildi\u011finde 1)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>JSON-RPC ba\u011flant\u0131lar\u0131 i\u00e7in kullan\u0131c\u0131 ismi</translation>\n@@ -3340,14 +3227,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Warning</source>\n         <translation>Uyar\u0131</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>Uyar\u0131: Deskteklenmeyen -benchmark arg\u00fcman\u0131 g\u00f6rmezden gelindi, -debug=bench kullan\u0131n\u0131z.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>Uyar\u0131: Desteklenmeyen -debugnet arg\u00fcman\u0131 g\u00f6rmezden gelindi, debug=net kullan\u0131n\u0131z.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>C\u00fczdandaki t\u00fcm muameleler kald\u0131r\u0131l\u0131yor...</translation>\n@@ -3376,10 +3255,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Blok zincirini eksik c\u00fczdan muameleleri i\u00e7in tekrar tara</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>JSON-RPC ba\u011flant\u0131lar\u0131 i\u00e7in OpenSSL (https) kullan</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>Bu yard\u0131m mesaj\u0131</translation>\n@@ -3424,10 +3299,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>(default: %s)</source>\n         <translation>(varsay\u0131lan: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>Kabul edilebilir \u015fifreler (varsay\u0131lan: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>E\u015f adresleri sorgulamas\u0131 i\u00e7in daima DNS aramas\u0131n\u0131 kullan (varsay\u0131lan: %u)</translation>\n@@ -3488,14 +3359,6 @@ mesela: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>P2SH olmayan \u00e7oklu imzalar\u0131 aktar (varsay\u0131lan: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>Sunucu sertifika dosyas\u0131 (varsay\u0131lan: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>Sunucu \u00f6zel anahtar\u0131 (varsay\u0131lan: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Anahtar alan boyutunu &lt;n&gt; de\u011ferine ayarla (varsay\u0131lan: %u)</translation>"
      },
      {
        "sha": "4ab318425c33734e3a613ab7bfd025ced65a08d2",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 215,
        "deletions": 148,
        "changes": 363,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"uk\" version=\"2.0\">\n+<TS language=\"uk\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,17 @@\n         <translation>\u041f\u0430\u0440\u043e\u043b\u044c \u0431\u0443\u043b\u043e \u0443\u0441\u043f\u0456\u0448\u043d\u043e \u0437\u043c\u0456\u043d\u0435\u043d\u043e.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/\u041c\u0430\u0441\u043a\u0430 \u043f\u0456\u0434\u043c\u0435\u0440\u0435\u0436\u0456</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>\u0417\u0430\u0431\u043b\u043e\u043a\u043e\u0432\u0430\u043d\u043e \u0414\u043e</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1068,6 +1079,30 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>\u041f\u043e\u0440\u0442 \u043f\u0440\u043e\u043a\u0441\u0456-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>\u041f\u0440\u0438\u0454\u0434\u043d\u0443\u0432\u0430\u0442\u0438\u0441\u044f \u0434\u043e \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0456\u0432 \u0447\u0435\u0440\u0435\u0437:</translation>\n+    </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n+        <translation>\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u0438\u0441\u044f \u0434\u043e \u043c\u0435\u0440\u0435\u0436\u0456 Bitcoin \u0447\u0435\u0440\u0435\u0437 \u043e\u043a\u0440\u0435\u043c\u0438\u0439 SOCKS5 \u043f\u0440\u043e\u043a\u0441\u0456 \u0434\u043b\u044f \u043f\u0440\u0438\u0445\u043e\u0432\u0430\u043d\u0438\u0445 \u0441\u0435\u0440\u0432\u0456\u0441\u0456\u0432 Tor.</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043e\u043a\u0440\u0435\u043c\u0438\u0439 SOCKS5-\u043f\u0440\u043e\u043a\u0441\u0456 \u0434\u043b\u044f \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u0438\u0445\u043e\u0432\u0430\u043d\u0456 \u0441\u0435\u0440\u0432\u0456\u0441\u0438 Tor:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;\u0412\u0456\u043a\u043d\u043e</translation>\n@@ -1286,10 +1321,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>\u0417\u0430\u043f\u0438\u0442 \u043f\u043b\u0430\u0442\u0435\u0436\u0443 %1 \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0438\u0439 (%2 \u0431\u0430\u0439\u0442, \u0434\u043e\u0437\u0432\u043e\u043b\u0435\u043d\u043e %3 \u0431\u0430\u0439\u0442).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>\u041e\u043f\u043b\u0430\u0442\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0454 \u0437\u0430\u0445\u0438\u0441\u0442\u0443 DoS</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0437\u0432'\u044f\u0437\u043a\u0443 \u0437 %1: %2</translation>\n@@ -1458,10 +1489,18 @@\n         <source>&amp;Peers</source>\n         <translation>&amp;\u0423\u0447\u0430\u0441\u043d\u0438\u043a\u0438</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>\u0417\u0430\u0431\u043b\u043e\u043a\u043e\u0432\u0430\u043d\u0456 \u0432\u0443\u0437\u043b\u0438</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0430 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0433\u043b\u044f\u0434\u0443 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0456\u0448\u043e\u0457 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u0457</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>\u0412 \u0431\u0456\u043b\u043e\u043c\u0443 \u0441\u043f\u0438\u0441\u043a\u0443</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>\u041d\u0430\u043f\u0440\u044f\u043c\u043e\u043a</translation>\n@@ -1471,20 +1510,24 @@\n         <translation>\u0412\u0435\u0440\u0441\u0456\u044f</translation>\n     </message>\n     <message>\n-        <source>User Agent</source>\n-        <translation>\u041a\u043b\u0456\u0454\u043d\u0442 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430</translation>\n+        <source>Starting Block</source>\n+        <translation>\u041f\u043e\u0447\u0430\u0442\u043a\u043e\u0432\u0438\u0439 \u0411\u043b\u043e\u043a</translation>\n     </message>\n     <message>\n-        <source>Services</source>\n-        <translation>\u0421\u0435\u0440\u0432\u0456\u0441\u0438</translation>\n+        <source>Synced Headers</source>\n+        <translation>\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0456\u0437\u043e\u0432\u0430\u043d\u0456 \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>\u041f\u043e\u0447\u0430\u0442\u043a\u043e\u0432\u0430 \u0432\u0438\u0441\u043e\u0442\u0430</translation>\n+        <source>Synced Blocks</source>\n+        <translation>\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0456\u0437\u043e\u0432\u0430\u043d\u0456 \u0411\u043b\u043e\u043a\u0438</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>\u0412\u0438\u0441\u043e\u0442\u0430 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0456\u0437\u0430\u0446\u0456\u0457</translation>\n+        <source>User Agent</source>\n+        <translation>\u041a\u043b\u0456\u0454\u043d\u0442 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430</translation>\n+    </message>\n+    <message>\n+        <source>Services</source>\n+        <translation>\u0421\u0435\u0440\u0432\u0456\u0441\u0438</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1514,6 +1557,14 @@\n         <source>Ping Time</source>\n         <translation>\u0417\u0430\u0442\u0440\u0438\u043c\u043a\u0430</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>\u0422\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0457 \u0437\u0430\u0442\u0440\u0438\u043c\u043a\u0438.</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>\u041f\u043e\u0442\u043e\u0447\u043d\u0430 \u0417\u0430\u0442\u0440\u0438\u043c\u043a\u0430</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>\u0420\u0456\u0437\u043d\u0438\u0446\u044f \u0447\u0430\u0441\u0443</translation>\n@@ -1562,6 +1613,34 @@\n         <source>Clear console</source>\n         <translation>\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u0438 \u043a\u043e\u043d\u0441\u043e\u043b\u044c</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>&amp;\u0412\u0456\u0434'\u0454\u0434\u043d\u0430\u0442\u0438 \u0412\u0443\u0437\u043e\u043b</translation>\n+    </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>\u0417\u0430\u0431\u043b\u043e\u043a\u0443\u0432\u0430\u0442\u0438 \u0412\u0443\u0437\u043e\u043b \u043d\u0430</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 &amp;\u0433\u043e\u0434\u0438\u043d\u0443</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 &amp;\u0434\u0435\u043d\u044c</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 &amp;\u0442\u0438\u0436\u0434\u0435\u043d\u044c</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 &amp;\u0440\u0456\u043a</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>&amp;\u0420\u043e\u0437\u0431\u043b\u043e\u043a\u0443\u0432\u0430\u0442\u0438 \u0412\u0443\u0437\u043e\u043b</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>\u0412\u0456\u0442\u0430\u0454\u043c\u043e \u0443 RPC-\u043a\u043e\u043d\u0441\u043e\u043b\u0456 Bitcoin Core.</translation>\n@@ -1590,6 +1669,10 @@\n         <source>%1 GB</source>\n         <translation>%1 \u0413\u0411</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(\u0406\u0414 \u0432\u0443\u0437\u043b\u0430: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>\u0447\u0435\u0440\u0435\u0437 %1</translation>\n@@ -1607,12 +1690,16 @@\n         <translation>\u0412\u0438\u0445\u0456\u0434\u043d\u0438\u0439</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>\u041d\u0435\u0432\u0456\u0434\u043e\u043c\u0430</translation>\n+        <source>Yes</source>\n+        <translation>\u0422\u0430\u043a</translation>\n+    </message>\n+    <message>\n+        <source>No</source>\n+        <translation>\u041d\u0456</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>\u041e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f...</translation>\n+        <source>Unknown</source>\n+        <translation>\u041d\u0435\u0432\u0456\u0434\u043e\u043c\u0430</translation>\n     </message>\n </context>\n <context>\n@@ -1978,10 +2065,6 @@\n         <source>Copy change</source>\n         <translation>\u041a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0440\u0435\u0448\u0442\u0443</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u0412\u0441\u044c\u043e\u0433\u043e %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u0430\u0431\u043e</translation>\n@@ -2022,6 +2105,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>\u041f\u043b\u0430\u0442\u0438\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 \u043c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u0443 \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0443 \u0440\u043e\u0437\u043c\u0456\u0440\u0456 %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>\u0412\u0441\u044c\u043e\u0433\u043e %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441\u0430 \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0447\u0430 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430. \u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u0457\u0457.</translation>\n@@ -2800,13 +2887,53 @@\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>\u041f\u0440\u0438\u0439\u043c\u0430\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0438 \u0456\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0433\u043e \u0440\u044f\u0434\u043a\u0430 \u0442\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0438 JSON-RPC</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n+        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u0457 (\u0432 %s/\u041a\u0411), \u0449\u043e \u043c\u0435\u043d\u0448\u0456 \u0437\u0430 \u0432\u043a\u0430\u0437\u0430\u043d\u0443, \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u043c\u0443\u0442\u044c\u0441\u044f \u043d\u0443\u043b\u044c\u043e\u0432\u0438\u043c\u0438 (\u0434\u043b\u044f \u0440\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0456\u0457) (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n+    </message>\n+    <message>\n+        <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n+        <translation>\u042f\u043a\u0449\u043e &lt;category&gt; \u043d\u0435 \u0437\u0430\u0434\u0430\u043d\u043e, \u0430\u0431\u043e \u0436 \u044f\u043a\u0449\u043e &lt;category&gt; = 1, \u0432\u0438\u0432\u043e\u0434\u0438\u0442\u044c \u0432\u0441\u044e \u043d\u0430\u043b\u0430\u0433\u043e\u0434\u0436\u0443\u0432\u0430\u043b\u044c\u043d\u0443 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e.</translation>\n+    </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f (\u0432 %s) \u0437\u0430 \u043e\u0434\u043d\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e; \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043d\u0438\u0437\u044c\u043a\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u043e\u0436\u0435 \u0441\u043a\u0430\u0441\u0443\u0432\u0430\u0442\u0438 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043a\u0443 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>\u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u0456\u0441\u0442\u044c \u0434\u0430\u0442\u0438 \u0456 \u0447\u0430\u0441\u0443 \u043d\u0430 \u0441\u0432\u043e\u0454\u043c\u0443 \u043a\u043e\u043c\u043f'\u044e\u0442\u0435\u0440\u0456! \u0417\u0430 \u043d\u0430\u044f\u0432\u043d\u043e\u0441\u0442\u0456 \u0437\u043d\u0430\u0447\u043d\u043e\u0457 \u043f\u043e\u0445\u0438\u0431\u043a\u0438 Bitcoin Core \u0431\u0443\u0434\u0435 \u043f\u0440\u0430\u0446\u044e\u0432\u0430\u0442\u0438 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e.</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432 \u0454 \u0437\u0430\u043c\u0430\u043b\u0438\u043c (\u043c\u0435\u043d\u0448\u0438\u043c \u0437\u0430 %d \u041c\u0456\u0411). \u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0431\u0456\u043b\u044c\u0448\u0435 \u0447\u0438\u0441\u043b\u043e.</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>\u0417\u043c\u0435\u043d\u0448\u0438\u0442\u0438 \u0432\u0438\u043c\u043e\u0433\u0438 \u0434\u043e \u043d\u0430\u044f\u0432\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0440\u0443 \u043d\u0430 \u043d\u043e\u0441\u0456\u0457 \u0434\u0430\u043d\u0438\u0445 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044f \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 (\u0432\u0438\u0434\u0430\u043b\u0435\u043d\u043d\u044f \u0441\u0442\u0430\u0440\u0438\u0445 \u0431\u043b\u043e\u043a\u0456\u0432). \u0426\u0435\u0439 \u0440\u0435\u0436\u0438\u043c \u043d\u0435\u0441\u0443\u043c\u0456\u0441\u043d\u0438\u0439 \u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 -txindex \u0442\u0430 -rescan. \u0423\u0432\u0430\u0433\u0430: \u043f\u0440\u0438 \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u0456 \u0434\u043e \u0442\u0438\u043f\u043e\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u0438\u0434\u0430\u043b\u0435\u043d\u0456 \u0447\u0430\u0441\u0442\u0438\u043d\u0438 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u0443\u0434\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043e. (\u0442\u0438\u043f\u043e\u0432\u043e: 0 = \u0432\u0438\u043c\u043a\u043d\u0443\u0442\u0438 \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044f \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430, &gt;%u = \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0444\u0430\u0439\u043b\u0456\u0432 \u0431\u043b\u043e\u043a\u0456\u0432 \u0432 \u041c\u0456\u0411)</translation>\n+    </message>\n+    <message>\n+        <source>Rescans are not possible in pruned mode. You will need to use -reindex which will download the whole blockchain again.</source>\n+        <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u0435 \u0441\u043a\u0430\u043d\u0443\u0432\u0430\u043d\u043d\u044f \u0437\u0456 \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u0438\u043c \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u043e\u043c. \u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 -reindex \u0434\u043b\u044f \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u043d\u043e\u0433\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432.</translation>\n+    </message>\n+    <message>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u0421\u0442\u0430\u043b\u0430\u0441\u044f \u0444\u0430\u0442\u0430\u043b\u044c\u043d\u0430 \u043f\u043e\u043c\u0438\u043b\u043a\u0430 (\u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0456\u0448\u0438\u0439 \u043e\u043f\u0438\u0441 \u043d\u0430\u0432\u0435\u0434\u0435\u043d\u043e \u0432 debug.log)</translation>\n+    </message>\n+    <message>\n+        <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n+        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u044f (\u0432 %s/\u041a\u0411), \u0449\u043e \u0434\u043e\u0434\u0430\u0432\u0430\u0442\u0438\u043c\u0435\u0442\u044c\u0441\u044f \u0434\u043e \u0432\u0438\u0445\u0456\u0434\u043d\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>\u0421\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044f \u043a\u0456\u043b\u044c\u043a\u043e\u0441\u0442\u0456 \u0431\u043b\u043e\u043a\u0456\u0432...</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0438 \u0432 \u0444\u043e\u043d\u043e\u0432\u043e\u043c\u0443 \u0440\u0435\u0436\u0438\u043c\u0456 (\u044f\u043a \u0434\u0435\u043c\u043e\u043d) \u0442\u0430 \u043f\u0440\u0438\u0439\u043c\u0430\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0438</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0443 \u043c\u0435\u0440\u0435\u0436\u0443</translation>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0438 HTTP-\u0441\u0435\u0440\u0432\u0435\u0440. \u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0456\u0448\u0438\u0439 \u043e\u043f\u0438\u0441 \u043d\u0430\u0432\u0435\u0434\u0435\u043d\u043e \u0432 \u0436\u0443\u0440\u043d\u0430\u043b\u0456 \u0437\u043d\u0435\u0432\u0430\u0434\u0436\u0435\u043d\u043d\u044f.</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2828,18 +2955,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0412\u0438\u043a\u043e\u043d\u0430\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u043b\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0437\u043c\u0456\u043d\u0438\u0442\u044c\u0441\u044f (\u0437\u0430\u043c\u0456\u0441\u0442\u044c %s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0456 \u0431\u0443\u0434\u0435 \u043f\u0456\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u0430 \u043e\u0434\u043d\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e; \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u043d\u0438\u0437\u044c\u043a\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043c\u043e\u0436\u0435 \u0441\u043a\u0430\u0441\u0443\u0432\u0430\u0442\u0438 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043a\u0443 \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>\u0417\u043c\u0435\u043d\u0448\u0438\u0442\u0438 \u0432\u0438\u043c\u043e\u0433\u0438 \u0434\u043e \u043d\u0430\u044f\u0432\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0440\u0443 \u043d\u0430 \u043d\u043e\u0441\u0456\u0457 \u0434\u0430\u043d\u0438\u0445 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044f \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 (\u0432\u0438\u0434\u0430\u043b\u0435\u043d\u043d\u044f \u0441\u0442\u0430\u0440\u0438\u0445 \u0431\u043b\u043e\u043a\u0456\u0432). \u0426\u0435\u0439 \u0440\u0435\u0436\u0438\u043c \u0432\u0438\u043c\u0438\u043a\u0430\u0454 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u043a\u0443 \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0442\u0430 \u0454 \u043d\u0435\u0441\u0443\u043c\u0456\u0441\u043d\u0438\u043c \u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c -txindex. \u0423\u0432\u0430\u0433\u0430: \u043f\u0440\u0438 \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u0456 \u0434\u043e \u0442\u0438\u043f\u043e\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u0438\u0434\u0430\u043b\u0435\u043d\u0456 \u0447\u0430\u0441\u0442\u0438\u043d\u0438 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u0443\u0434\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043e. (\u0442\u0438\u043f\u043e\u0432\u043e: 0 = \u0432\u0438\u043c\u043a\u043d\u0443\u0442\u0438 \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044f \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430, &gt;%u = \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0444\u0430\u0439\u043b\u0456\u0432 \u0431\u043b\u043e\u043a\u0456\u0432 \u0432 \u041c\u0456\u0411)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u043f\u043e\u0442\u043e\u043a\u0456\u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438 (\u0432\u0456\u0434 %u \u0434\u043e %d, 0 = \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e, &lt;0 = \u0432\u043a\u0430\u0437\u0443\u0454 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u043b\u044c\u043d\u0438\u0445 \u044f\u0434\u0435\u0440, \u0442\u0438\u043f\u043e\u0432\u043e: %d)</translation>\n     </message>\n+    <message>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n+        <translation>\u0421\u0445\u043e\u0436\u0435, \u0449\u043e \u0431\u0430\u0437\u0430 \u0434\u0430\u043d\u0438\u0445 \u0431\u043b\u043e\u043a\u0456\u0432 \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0431\u043b\u043e\u043a \u0437 \u043c\u0430\u0439\u0431\u0443\u0442\u043d\u044c\u043e\u0433\u043e. \u0426\u0435 \u043c\u043e\u0436\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u044f \u0456\u0437-\u0437\u0430 \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e\u0457 \u0434\u0430\u0442\u0438 \u0442\u0430/\u0430\u0431\u043e \u0447\u0430\u0441\u0443. \u041f\u0435\u0440\u0435\u0431\u0443\u0434\u043e\u0432\u0443\u0439\u0442\u0435 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u0438\u0445 \u0431\u043b\u043e\u043a\u0456\u0432 \u043b\u0438\u0448\u0435 \u0442\u043e\u0434\u0456, \u043a\u043e\u043b\u0438 \u0432\u0438 \u043f\u0435\u0440\u0435\u043a\u043e\u043d\u0430\u043d\u0456, \u0449\u043e \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443 \u0434\u0430\u0442\u0443 \u0456 \u0447\u0430\u0441</translation>\n+    </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u0426\u0435 \u0442\u0435\u0441\u0442\u043e\u0432\u0430 \u0437\u0431\u0456\u0440\u043a\u0430 \u043f\u0440\u0435-\u0440\u0435\u043b\u0456\u0437\u043d\u043e\u0457 \u0432\u0435\u0440\u0441\u0456\u0457 - \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 \u043d\u0430 \u0441\u0432\u0456\u0439 \u0441\u0442\u0440\u0430\u0445 \u0456 \u0440\u0438\u0437\u0438\u043a - \u043d\u0435 \u0437\u0430\u0441\u0442\u043e\u0441\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u0434\u043b\u044f \u0434\u043e\u0431\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u043e\u043d\u0435\u0442 \u0430\u0431\u043e \u0442\u043e\u0440\u0433\u0456\u0432\u043b\u0456</translation>\n@@ -2848,6 +2971,10 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043f\u0440\u0438\u0432'\u044f\u0437\u0430\u0442\u0438\u0441\u044f \u0434\u043e %s \u043d\u0430 \u0446\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u043f'\u044e\u0442\u0435\u0440\u0456. \u041c\u043e\u0436\u043b\u0438\u0432\u043e, Bitcoin Core \u0432\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043e.</translation>\n     </message>\n+    <message>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n+        <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 UPnP \u0434\u043b\u044f \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u043f\u043e\u0440\u0442\u0443, \u0449\u043e \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f (\u0442\u0438\u043f\u043e\u0432\u043e: 1 \u043f\u0440\u0438 \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0432\u0430\u043d\u043d\u0456 \u0442\u0430 \u0437\u0430 \u0432\u0456\u0434\u0441\u0443\u0442\u043d\u043e\u0441\u0442\u0456 -proxy)</translation>\n+    </message>\n     <message>\n         <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u0423\u0412\u0410\u0413\u0410: \u0430\u043d\u043e\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u0438\u0441\u043e\u043a\u0430 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0438\u0445 \u0431\u043b\u043e\u043a\u0456\u0432, %d \u0431\u043b\u043e\u043a(\u0456\u0432) \u0431\u0443\u043b\u043e \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043e \u0437\u0430 \u043e\u0441\u0442\u0430\u043d\u043d\u0456 %d \u0433\u043e\u0434\u0438\u043d(\u0438) (\u043c\u0430\u0454 \u0431\u0443\u0442\u0438 %d)</translation>\n@@ -2856,10 +2983,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u0423\u0412\u0410\u0413\u0410: \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u0432\u0430\u0448\u0435 \u043c\u0435\u0440\u0435\u0436\u0435\u0432\u0435 \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f, %d \u0431\u043b\u043e\u043a(\u0456\u0432) \u0431\u0443\u043b\u043e \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043e \u0437\u0430 \u043e\u0441\u0442\u0430\u043d\u043d\u0456 %d \u0433\u043e\u0434\u0438\u043d(\u0438) (\u043c\u0430\u0454 \u0431\u0443\u0442\u0438 %d)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u0423\u0432\u0430\u0433\u0430: \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0437\u0430\u043d\u0430\u0434\u0442\u043e \u0432\u0435\u043b\u0438\u043a\u0443 \u043a\u043e\u043c\u0456\u0441\u0456\u044e (-paytxfee). \u041a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u043d\u0456\u043c\u0430\u0442\u0438\u043c\u0435\u0442\u044c\u0441\u044f \u043a\u043e\u0436\u0435\u043d \u0440\u0430\u0437 \u043a\u043e\u043b\u0438 \u0432\u0438 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u0438\u043c\u0435\u0442\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457.</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>\u0423\u0432\u0430\u0433\u0430: \u0427\u0430\u0441\u0442\u0438\u043d\u0430 \u043c\u0435\u0440\u0435\u0436\u0456 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454 \u0456\u043d\u0448\u0438\u0439 \u0433\u043e\u043b\u043e\u0432\u043d\u0438\u0439 \u043b\u0430\u043d\u0446\u044e\u0436\u043e\u043a! \u0414\u0435\u044f\u043a\u0456 \u0434\u043e\u0431\u0443\u0432\u0430\u0447\u0456, \u043c\u043e\u0436\u043b\u0438\u0432\u043e, \u0437\u0430\u0437\u043d\u0430\u044e\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c.</translation>\n@@ -2868,10 +2991,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>\u0423\u0432\u0430\u0433\u0430: \u041d\u0430\u0448 \u043b\u0430\u043d\u0446\u044e\u0436\u043e\u043a \u0431\u043b\u043e\u043a\u0456\u0432 \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0456\u0432 \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0445 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0456\u0432! \u041c\u043e\u0436\u043b\u0438\u0432\u043e, \u0432\u0430\u043c, \u0430\u0431\u043e \u0456\u043d\u0448\u0438\u043c \u0432\u0443\u0437\u043b\u0430\u043c, \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u043e\u043d\u043e\u0432\u0438\u0442\u0438\u0441\u044f.</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\u0423\u0432\u0430\u0433\u0430: \u043f\u043e\u043c\u0438\u043b\u043a\u0430 \u0447\u0438\u0442\u0430\u043d\u043d\u044f wallet.dat! \u0412\u0441\u0456 \u043a\u043b\u044e\u0447\u0456 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043e \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e, \u0430\u043b\u0435 \u0434\u0430\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0447\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0430\u0434\u0440\u0435\u0441\u043d\u043e\u0457 \u043a\u043d\u0438\u0433\u0438 \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u0456, \u0430\u0431\u043e \u043f\u043e\u0448\u043a\u043e\u0434\u0436\u0435\u043d\u0456.</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u0423\u0432\u0430\u0433\u0430: \u0444\u0430\u0439\u043b wallet.dat \u043f\u043e\u0448\u043a\u043e\u0434\u0436\u0435\u043d\u043e, \u0434\u0430\u043d\u0456 \u0432\u0440\u044f\u0442\u043e\u0432\u0430\u043d\u043e! \u041e\u0440\u0438\u0433\u0456\u043d\u0430\u043b\u044c\u043d\u0438\u0439 wallet.dat \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043d\u043e \u044f\u043a wallet.{timestamp}.bak \u0434\u043e %s; \u044f\u043a\u0449\u043e \u0412\u0430\u0448 \u0431\u0430\u043b\u0430\u043d\u0441 \u0447\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0456, \u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0456\u0434\u043d\u043e\u0432\u0438\u0442\u0438 \u0457\u0445 \u0437 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u043e\u0457 \u043a\u043e\u043f\u0456\u0457. </translation>\n@@ -2884,6 +3003,10 @@\n         <source>(default: 1)</source>\n         <translation>(\u0442\u0438\u043f\u043e\u0432\u043e: 1)</translation>\n     </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>-maxmempool \u043c\u0430\u0454 \u0431\u0443\u0442\u0438 \u043d\u0435 \u043c\u0435\u043d\u0448\u0435 %d \u041c\u0411</translation>\n+    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438:</translation>\n@@ -2936,10 +3059,6 @@\n         <source>Error opening block database</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0432\u0456\u0434\u043a\u0440\u0438\u0442\u0442\u044f \u0431\u043b\u043e\u043a\u0443 \u0431\u0430\u0437\u0438 \u0434\u0430\u043d\u0438\u0445 </translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u0421\u0442\u0430\u043b\u0430\u0441\u044f \u0444\u0430\u0442\u0430\u043b\u044c\u043d\u0430 \u043f\u043e\u043c\u0438\u043b\u043a\u0430 (\u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0456\u0448\u0438\u0439 \u043e\u043f\u0438\u0441 \u043d\u0430\u0432\u0435\u0434\u0435\u043d\u043e \u0432 debug.log)</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u041c\u0430\u043b\u043e \u0432\u0456\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0456\u0441\u0446\u044f \u043d\u0430 \u0434\u0438\u0441\u043a\u0443!</translation>\n@@ -2948,10 +3067,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u0441\u043b\u0443\u0445\u0430\u0442\u0438 \u043d\u0430 \u0436\u043e\u0434\u043d\u043e\u043c\u0443 \u043f\u043e\u0440\u0442\u0443. \u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 -listen=0, \u044f\u043a\u0449\u043e \u0432\u0438 \u0445\u043e\u0447\u0435\u0442\u0435 \u0446\u044c\u043e\u0433\u043e.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>\u042f\u043a\u0449\u043e &lt;category&gt; \u043d\u0435 \u0437\u0430\u0434\u0430\u043d\u043e, \u0432\u0438\u0432\u043e\u0434\u0438\u0442\u044c \u0432\u0441\u044e \u043d\u0430\u043b\u0430\u0433\u043e\u0434\u0436\u0443\u0432\u0430\u043b\u044c\u043d\u0443 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e.</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u0406\u043c\u043f\u043e\u0440\u0442...</translation>\n@@ -2964,6 +3079,10 @@\n         <source>Invalid -onion address: '%s'</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0432 \u0430\u0434\u0440\u0435\u0441\u0456 -onion: \u00ab%s\u00bb</translation>\n     </message>\n+    <message>\n+        <source>Keep the transaction memory pool below &lt;n&gt; megabytes (default: %u)</source>\n+        <translation>\u0423\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u0440\u043e\u0437\u043c\u0456\u0440 \u043f\u0430\u043c'\u044f\u0442\u0456 \u0434\u043b\u044f \u043f\u0443\u043b\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u043c\u0435\u043d\u0448\u0438\u043c \u0437\u0430 &lt;n&gt; \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0456\u0432 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n+    </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n         <translation>\u0411\u0440\u0430\u043a\u0443\u0454 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0438\u0445 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u0456\u0432 \u0444\u0430\u0439\u043b\u0456\u0432.</translation>\n@@ -2992,9 +3111,25 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u0412\u043a\u0430\u0436\u0456\u0442\u044c \u0444\u0430\u0439\u043b \u0433\u0430\u043c\u0430\u043d\u0446\u044f (\u0432 \u043c\u0435\u0436\u0430\u0445 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0434\u0430\u043d\u0438\u0445)</translation>\n     </message>\n+    <message>\n+        <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -benchmark \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u0442\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u0456\u0433\u043d\u043e\u0440\u043e\u0432\u0430\u043d\u043e; \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 -debug=bench.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -debugnet \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u0442\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u0456\u0433\u043d\u043e\u0440\u043e\u0432\u0430\u043d\u043e; \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 -debug=net.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -tor found, use -onion.</source>\n+        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -tor \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f; \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 -onion.</translation>\n+    </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: %u)</source>\n-        <translation>\u041d\u0430\u043c\u0430\u0433\u0430\u0442\u0438\u0441\u044c \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 UPnP \u0434\u043b\u044f \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u043f\u043e\u0440\u0442\u0443, \u0449\u043e \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f, \u043d\u0430 \u0440\u043e\u0443\u0442\u0435\u0440\u0456 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n+        <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 UPnP \u0434\u043b\u044f \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u043f\u043e\u0440\u0442\u0443, \u0449\u043e \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n+    </message>\n+    <message>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation>\u041a\u043e\u043c\u0435\u043d\u0442\u0430\u0440 \u0434\u043e \u041a\u043b\u0456\u0454\u043d\u0442\u0430 \u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 (%s) \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u043d\u0435\u0431\u0435\u0437\u043f\u0435\u0447\u043d\u0456 \u0441\u0438\u043c\u0432\u043e\u043b\u0438.</translation>\n     </message>\n     <message>\n         <source>Verifying blocks...</source>\n@@ -3028,10 +3163,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>\u0414\u043e\u0437\u0432\u043e\u043b\u0438\u0442\u0438 \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044f \u043f\u043e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0443 JSON-RPC \u0437\u0456 \u0432\u043a\u0430\u0437\u0430\u043d\u043e\u0433\u043e \u0434\u0436\u0435\u0440\u0435\u043b\u0430. \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u044e \u0434\u043b\u044f &lt;ip&gt; \u0454 \u043e\u043a\u0440\u0435\u043c\u0430 IP-\u0430\u0434\u0440\u0435\u0441\u0430 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, 1.2.3.4), IP-\u0430\u0434\u0440\u0435\u0441\u0430 \u0442\u0430 \u043c\u0430\u0441\u043a\u0430 \u043f\u0456\u0434\u043c\u0435\u0440\u0435\u0436\u0456 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, 1.2.3.4/255.255.255.0) \u0430\u0431\u043e CIDR-\u0430\u0434\u0440\u0435\u0441\u0430 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, 1.2.3.4/24). \u0426\u0435\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043c\u043e\u0436\u043d\u0430 \u0432\u043a\u0430\u0437\u0443\u0432\u0430\u0442\u0438 \u0434\u0435\u043a\u0456\u043b\u044c\u043a\u0430 \u0440\u0430\u0437\u0456\u0432.</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>\u0421\u0442\u0430\u043b\u0430\u0441\u044f \u043f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u0441\u043f\u0440\u043e\u0431\u0456 \u0432\u0456\u0434\u043a\u0440\u0438\u0442\u0438 \u043f\u043e\u0440\u0442 RPC-\u0430\u0434\u0440\u0435\u0441\u0438 %s:%u \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0432\u0430\u043d\u043d\u044f: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>\u041f\u0440\u0438\u0432'\u044f\u0437\u0430\u0442\u0438\u0441\u044f \u0434\u043e \u0434\u0430\u043d\u043e\u0457 \u0430\u0434\u0440\u0435\u0441\u0438 \u0442\u0430 \u0432\u043d\u043e\u0441\u0438\u0442\u0438 \u0434\u043e \u0431\u0456\u043b\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0443 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0456\u0432, \u0449\u043e \u043f\u0456\u0434'\u0454\u0434\u043d\u0443\u044e\u0442\u044c\u0441\u044f \u0434\u043e \u043d\u0435\u0457. \u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 \u0437\u0430\u043f\u0438\u0441 \u0432\u0438\u0434\u0443 [\u0445\u043e\u0441\u0442]:\u043f\u043e\u0440\u0442 \u0434\u043b\u044f IPv6</translation>\n@@ -3056,18 +3187,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u0442\u0438 \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0445\u0456\u0434\u043d\u0438\u0445 \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u044c (listen \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0432 \u043f\u043e\u043c\u0438\u043b\u043a\u0443: %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -socks \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f. \u041c\u043e\u0436\u043b\u0438\u0432\u0456\u0441\u0442\u044c \u0432\u043a\u0430\u0437\u0443\u0432\u0430\u0442\u0438 \u0432\u0435\u0440\u0441\u0456\u044e SOCKS \u0431\u0443\u043b\u043e \u0432\u0438\u0434\u0430\u043b\u0435\u043d\u043e, \u0442\u0430\u043a \u044f\u043a \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 SOCKS5.</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>\u0412\u0438\u043a\u043e\u043d\u0430\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043f\u0440\u0438 \u043d\u0430\u0434\u0445\u043e\u0434\u0436\u0435\u043d\u043d\u0456 \u0432\u0430\u0436\u043b\u0438\u0432\u043e\u0433\u043e \u0441\u043f\u043e\u0432\u0456\u0449\u0435\u043d\u043d\u044f \u0430\u0431\u043e \u043f\u0440\u0438 \u0441\u043f\u043e\u0441\u0442\u0435\u0440\u0435\u0436\u0435\u043d\u043d\u0456 \u0442\u0440\u0438\u0432\u0430\u043b\u043e\u0433\u043e \u0440\u043e\u0437\u0433\u0430\u043b\u0443\u0436\u0435\u043d\u043d\u044f \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 (\u0437\u0430\u043c\u0456\u0441\u0442\u044c %s \u0431\u0443\u0434\u0435 \u043f\u0456\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u0457 (\u0432 BTC/\u041a\u0411), \u0449\u043e \u043c\u0435\u043d\u0448\u0456 \u0437\u0430 \u0432\u043a\u0430\u0437\u0430\u043d\u0443, \u0432\u0432\u0430\u0436\u0430\u0442\u0438\u043c\u0443\u0442\u044c\u0441\u044f \u043d\u0443\u043b\u044c\u043e\u0432\u0438\u043c\u0438 (\u0434\u043b\u044f \u0440\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0456\u0457) (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u042f\u043a\u0449\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 paytxfee \u043d\u0435 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u043f\u0435\u0440\u0448\u0438\u0445 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u043f\u0440\u043e\u0442\u044f\u0433\u043e\u043c n \u0431\u043b\u043e\u043a\u0456\u0432 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n@@ -3080,10 +3203,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u0434\u0430\u043d\u0438\u0445 \u0432 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044f\u0445 \u043d\u043e\u0441\u0456\u0457\u0432 \u0434\u0430\u043d\u0438\u0445, \u0449\u043e \u043c\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0454\u043c\u043e \u0456 \u0434\u043e\u0431\u0443\u0432\u0430\u0454\u043c\u043e (\u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u0440\u043e\u0437\u043c\u0456\u0440 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432 \u0454 \u0437\u0430\u043c\u0430\u043b\u0438\u043c (\u043c\u0435\u043d\u0448\u0438\u0439 \u0437\u0430 %d \u041c\u0411). \u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0432\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0431\u0456\u043b\u044c\u0448\u0435 \u0447\u0438\u0441\u043b\u043e.</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>\u0414\u0456\u0437\u043d\u0430\u0432\u0430\u0442\u0438\u0441\u044f \u0430\u0434\u0440\u0435\u0441\u0438 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0456\u0432 \u0447\u0435\u0440\u0435\u0437 DNS \u043f\u0440\u0438 \u0437\u0430\u043c\u0430\u043b\u0456\u0439 \u043a\u0456\u043b\u044c\u043a\u043e\u0441\u0442\u0456 \u0432\u0456\u0434\u043e\u043c\u0438\u0445 \u0430\u0434\u0440\u0435\u0441 (\u0442\u0438\u043f\u043e\u0432\u043e: 1 \u0437\u0430 \u0432\u0456\u0434\u0441\u0443\u0442\u043d\u043e\u0441\u0442\u0456 -connect)</translation>\n@@ -3108,38 +3227,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>\u0426\u0435\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0454 \u0432 \u0441\u0435\u0431\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043d\u0435 \u0437\u0430\u0431\u0435\u0437\u043f\u0435\u0447\u0435\u043d\u043d\u044f, \u0440\u043e\u0437\u0440\u043e\u0431\u043b\u0435\u043d\u0435 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u0443 OpenSSL &lt;https://www.openssl.org/&gt;, \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0456\u0447\u043d\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043d\u0435 \u0437\u0430\u0431\u0435\u0437\u043f\u0435\u0447\u0435\u043d\u043d\u044f, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0435 \u0415\u0440\u0456\u043a\u043e\u043c \u042f\u043d\u0433\u043e\u043c, \u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0434\u043b\u044f \u0440\u043e\u0431\u043e\u0442\u0438 \u0437 UPnP, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0456 \u0422\u043e\u043c\u0430\u0441\u043e\u043c \u0411\u0435\u0440\u043d\u0430\u0440\u0434\u043e\u043c.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>\u0414\u043b\u044f \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f bitcoind, \u0430\u0431\u043e bitcoin-qt \u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c -server, \u0432\u0438 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 rpcpassword \u0432 \u0444\u0430\u0439\u043b\u0456 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457:\n-%s\n-\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0454\u0442\u044c\u0441\u044f \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0442\u0430\u043a\u0438\u0439 \u0432\u0438\u043f\u0430\u0434\u043a\u043e\u0432\u0438\u0439 \u043f\u0430\u0440\u043e\u043b\u044c:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(\u0432\u0430\u043c \u043d\u0435 \u0442\u0440\u0435\u0431\u0430 \u0437\u0430\u043f\u0430\u043c'\u044f\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u0446\u0435\u0439 \u043f\u0430\u0440\u043e\u043b\u044c)\n-\u0406\u043c'\u044f \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0442\u0430 \u043f\u0430\u0440\u043e\u043b\u044c \u041f\u041e\u0412\u0418\u041d\u041d\u0406 \u0431\u0443\u0442\u0438 \u0440\u0456\u0437\u043d\u0438\u043c\u0438.\n-\u042f\u043a\u0449\u043e \u0444\u0430\u0439\u043b\u0443 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454, \u0441\u0442\u0432\u043e\u0440\u0456\u0442\u044c \u0439\u043e\u0433\u043e, \u043e\u0431\u043c\u0435\u0436\u0438\u0432\u0448\u0438 \u0434\u043e\u0441\u0442\u0443\u043f \u043f\u0440\u0430\u0432\u043e\u043c \u0447\u0438\u0442\u0430\u043d\u043d\u044f \u0434\u043b\u044f \u0432\u043b\u0430\u0441\u043d\u0438\u043a\u0430.\n-\u0422\u0430\u043a\u043e\u0436 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0454\u0442\u044c\u0441\u044f \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 alertnotify \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u0441\u043f\u043e\u0432\u0456\u0449\u0435\u043d\u043d\u044f \u043f\u0440\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0438;\n-\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434: alertnotify=echo %%s | mail -s \"\u0421\u043f\u043e\u0432\u0456\u0449\u0435\u043d\u043d\u044f Bitcoin\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>\u0423\u0432\u0430\u0433\u0430: \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0434\u0443\u0436\u0435 \u0432\u0435\u043b\u0438\u043a\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f -maxtxfee! \u0422\u0430\u043a\u0456 \u0432\u0435\u043b\u0438\u043a\u0456 \u043a\u043e\u043c\u0456\u0441\u0456\u0457 \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u0441\u043f\u043b\u0430\u0447\u0435\u043d\u0456 \u0432 \u043e\u043a\u0440\u0435\u043c\u0456\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>\u0423\u0432\u0430\u0433\u0430: \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u0434\u0430\u0442\u0443 \u0456 \u0447\u0430\u0441 \u043d\u0430 \u0441\u0432\u043e\u0454\u043c\u0443 \u043a\u043e\u043c\u043f'\u044e\u0442\u0435\u0440\u0456! \u042f\u043a\u0449\u043e \u0432\u0430\u0448 \u0433\u043e\u0434\u0438\u043d\u043d\u0438\u043a \u0439\u0434\u0435 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, Bitcoin Core \u043c\u043e\u0436\u0435 \u043f\u0440\u0430\u0446\u044e\u0432\u0430\u0442\u0438 \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e.</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>\u0423\u0447\u0430\u0441\u043d\u0438\u043a\u0438, \u0449\u043e \u0437\u043d\u0430\u0445\u043e\u0434\u044f\u0442\u044c\u0441\u044f \u0432 \u0431\u0456\u043b\u043e\u043c\u0443 \u0441\u043f\u0438\u0441\u043a\u0443, \u043d\u0435 \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u0437\u0430\u0431\u043b\u043e\u043a\u043e\u0432\u0430\u043d\u0456 \u0437\u0430 DoS \u0442\u0430 \u0457\u0445\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0437\u0430\u0432\u0436\u0434\u0438 \u0440\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044e\u0432\u0430\u0442\u0438\u043c\u0443\u0442\u044c\u0441\u044f (\u043d\u0430\u0432\u0456\u0442\u044c \u044f\u043a\u0449\u043e \u0432\u043e\u043d\u0438 \u0454 \u0432 \u043f\u0430\u043c'\u044f\u0442\u0456), \u0449\u043e \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u043a\u043e\u0440\u0438\u0441\u043d\u0438\u043c, \u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u0434\u043b\u044f \u0448\u043b\u044e\u0437\u0443</translation>\n@@ -3160,10 +3247,6 @@ rpcpassword=%s\n         <source>Activating best chain...</source>\n         <translation>\u0410\u043a\u0442\u0438\u0432\u0430\u0446\u0456\u044f \u043d\u0430\u0439\u043a\u0440\u0430\u0449\u043e\u0433\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0437\u0456 \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u0438\u043c \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u043e\u043c \u0431\u043b\u043e\u043a\u0456\u0432 \u043d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u0435.</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>\u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u0440\u043e\u0437\u043f\u0456\u0437\u043d\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043b\u044f -whitebind: \u00ab%s\u00bb</translation>\n@@ -3180,10 +3263,6 @@ rpcpassword=%s\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>(C) 2009-%i \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 Bitcoin Core</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u0440\u043e\u0437\u043f\u0456\u0437\u043d\u0430\u0442\u0438 \u043c\u0435\u0440\u0435\u0436\u0435\u0432\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043b\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 -rpcbind (%s)</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u0456 wallet.dat: \u0413\u0430\u043c\u0430\u043d\u0435\u0446\u044c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0454 \u043d\u043e\u0432\u0456\u0448\u043e\u0457 \u0432\u0435\u0440\u0441\u0456\u0457 Bitcoin Core</translation>\n@@ -3192,14 +3271,6 @@ rpcpassword=%s\n         <source>Error reading from database, shutting down.</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0447\u0438\u0442\u0430\u043d\u043d\u044f \u0431\u0430\u0437\u0438 \u0434\u0430\u043d\u0438\u0445, \u043f\u0440\u0438\u043f\u0438\u043d\u044f\u044e \u0440\u043e\u0431\u043e\u0442\u0443.</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -tor \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 -onion</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u044f (\u0432 BTC/\u041a\u0411), \u0449\u043e \u0434\u043e\u0434\u0430\u0432\u0430\u0442\u0438\u043c\u0435\u0442\u044c\u0441\u044f \u0434\u043e \u0432\u0438\u0445\u0456\u0434\u043d\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>\u0406\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044f</translation>\n@@ -3240,18 +3311,10 @@ rpcpassword=%s\n         <source>Node relay options:</source>\n         <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u0432\u0443\u0437\u043b\u0430 \u0440\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0456\u0457:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 RPC SSL: (\u0434\u0438\u0432. Bitcoin Wiki \u0434\u043b\u044f \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f SSL)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 RPC:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>\u041f\u0456\u0434\u0442\u0440\u0438\u043c\u043a\u0430 RPC \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0456\u0439\u043d\u0438\u0445 HTTP-\u0437'\u0454\u0434\u043d\u0430\u043d\u044c (\u0442\u0438\u043f\u043e\u0432\u043e: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>\u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0443 \u043f\u0435\u0440\u0435\u0431\u0443\u0434\u0443\u0432\u0430\u0442\u0438 \u0456\u043d\u0434\u0435\u043a\u0441 \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432 \u0437 \u043f\u043e\u0442\u043e\u0447\u043d\u0438\u0445 \u0444\u0430\u0439\u043b\u0456\u0432 blk000??.dat</translation>\n@@ -3260,6 +3323,10 @@ rpcpassword=%s\n         <source>Receive and display P2P network alerts (default: %u)</source>\n         <translation>\u041e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u0442\u0430 \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0438 \u043f\u043e\u043f\u0435\u0440\u0435\u0434\u0436\u0435\u043d\u043d\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0456 (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n+    <message>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n+        <translation>\u0417\u043c\u0435\u043d\u0448\u0435\u043d\u043d\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f -maxconnections \u0437 %d \u0434\u043e %d \u0456\u0437-\u0437\u0430 \u043e\u0431\u043c\u0435\u0436\u0435\u043d\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0438.</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u0412\u0456\u0434\u0441\u0438\u043b\u0430\u0442\u0438 \u043d\u0430\u043b\u0430\u0433\u043e\u0434\u0436\u0443\u0432\u0430\u043b\u044c\u043d\u0443 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e \u043d\u0430 \u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u0430 \u043d\u0435 \u0443 \u0444\u0430\u0439\u043b debug.log</translation>\n@@ -3328,10 +3395,6 @@ rpcpassword=%s\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043f\u0440\u0438\u0432'\u044f\u0437\u0430\u0442\u0438\u0441\u044f \u0434\u043e %s \u043d\u0430 \u0446\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u043f'\u044e\u0442\u0435\u0440\u0456 (bind \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0432 \u043f\u043e\u043c\u0438\u043b\u043a\u0443: %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u041d\u0430\u043c\u0430\u0433\u0430\u0442\u0438\u0441\u044c \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 UPnP \u0434\u043b\u044f \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u043f\u043e\u0440\u0442\u0443, \u0449\u043e \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \u0440\u043e\u0443\u0442\u0435\u0440\u0456 (\u0442\u0438\u043f\u043e\u0432\u043e: 1 \u043a\u043e\u043b\u0438 \u043f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u0406\u043c'\u044f \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0434\u043b\u044f JSON-RPC-\u0437'\u0454\u0434\u043d\u0430\u043d\u044c</translation>\n@@ -3344,18 +3407,14 @@ rpcpassword=%s\n         <source>Warning</source>\n         <translation>\u041f\u043e\u043f\u0435\u0440\u0435\u0434\u0436\u0435\u043d\u043d\u044f</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>\u0423\u0432\u0430\u0433\u0430: \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -benchmark \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u0442\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u0456\u0433\u043d\u043e\u0440\u043e\u0432\u0430\u043d\u0438\u0439, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>\u0423\u0432\u0430\u0433\u0430: \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -debugnet \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u0442\u0430 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u0456\u0433\u043d\u043e\u0440\u043e\u0432\u0430\u043d\u0438\u0439, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>\u0412\u0438\u0434\u0430\u043b\u0435\u043d\u043d\u044f \u0432\u0441\u0456\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0437 \u0433\u0430\u043c\u0430\u043d\u0446\u044f...</translation>\n     </message>\n+    <message>\n+        <source>ZeroMQ notification options:</source>\n+        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u0441\u043f\u043e\u0432\u0456\u0449\u0435\u043d\u044c ZeroMQ:</translation>\n+    </message>\n     <message>\n         <source>on startup</source>\n         <translation>\u043f\u0456\u0434 \u0447\u0430\u0441 \u0437\u0430\u043f\u0443\u0441\u043a\u0443</translation>\n@@ -3380,10 +3439,6 @@ rpcpassword=%s\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u041f\u0435\u0440\u0435\u0441\u043a\u0430\u043d\u0443\u0432\u0430\u0442\u0438 \u043b\u0430\u043d\u0446\u044e\u0436\u043e\u043a \u0431\u043b\u043e\u043a\u0456\u0432, \u0432 \u043f\u043e\u0448\u0443\u043a\u0443 \u0432\u0442\u0440\u0430\u0447\u0435\u043d\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 OpenSSL (https) \u0434\u043b\u044f JSON-RPC-\u0437'\u0454\u0434\u043d\u0430\u043d\u044c</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u0414\u0430\u043d\u0430 \u0434\u043e\u0432\u0456\u0434\u043a\u0430</translation>\n@@ -3404,6 +3459,22 @@ rpcpassword=%s\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = \u0443\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 (\u0434\u043e \u044f\u043a\u0438\u0445 \u0432\u0456\u0434\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044f \u043f\u0440\u043e \u0432\u043b\u0430\u0441\u043d\u0438\u043a\u0430 \u0440\u0430\u0445\u0443\u043d\u043a\u0443 \u0442\u0430 \u0437\u0430\u043f\u0438\u0442\u0438 \u043f\u043b\u0430\u0442\u0435\u0436\u0456\u0432), 2 - \u0432\u0456\u0434\u043a\u0438\u043d\u0443\u0442\u0438)</translation>\n     </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0434\u0443\u0436\u0435 \u0432\u0435\u043b\u0438\u043a\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f -maxtxfee! \u0422\u0430\u043a\u0456 \u0432\u0435\u043b\u0438\u043a\u0456 \u043a\u043e\u043c\u0456\u0441\u0456\u0457 \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u0441\u043f\u043b\u0430\u0447\u0435\u043d\u0456 \u043e\u043a\u0440\u0435\u043c\u043e\u044e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0454\u044e.</translation>\n+    </message>\n+    <message>\n+        <source>-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0434\u0443\u0436\u0435 \u0432\u0435\u043b\u0438\u043a\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f -paytxfee! \u0426\u044e \u043a\u043e\u043c\u0456\u0441\u0456\u044e \u0431\u0443\u0434\u0435 \u0441\u043f\u043b\u0430\u0447\u0435\u043d\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u043d\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457.</translation>\n+    </message>\n+    <message>\n+        <source>Do not keep transactions in the mempool longer than &lt;n&gt; hours (default: %u)</source>\n+        <translation>\u041d\u0435 \u0442\u0440\u0438\u043c\u0430\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0432 \u043f\u0430\u043c'\u044f\u0442\u0456 \u0434\u043e\u0432\u0448\u0435 &lt;n&gt; \u0433\u043e\u0434\u0438\u043d (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u0447\u0438\u0442\u0430\u043d\u043d\u044f wallet.dat! \u0412\u0441\u0456 \u043a\u043b\u044e\u0447\u0456 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043e \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e, \u0430\u043b\u0435 \u0434\u0430\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0447\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0430\u0434\u0440\u0435\u0441\u043d\u043e\u0457 \u043a\u043d\u0438\u0433\u0438 \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u0456 \u0430\u0431\u043e \u043f\u043e\u0448\u043a\u043e\u0434\u0436\u0435\u043d\u0456.</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>\u0420\u0456\u0432\u0435\u043d\u044c \u0440\u0435\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438 \u0431\u043b\u043e\u043a\u0456\u0432 (0-4, \u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n@@ -3420,6 +3491,14 @@ rpcpassword=%s\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>\u0412\u0438\u0432\u043e\u0434\u0438\u0442\u0438 \u043d\u0430\u043b\u0430\u0433\u043e\u0434\u0436\u0443\u0432\u0430\u043b\u044c\u043d\u0443 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e (\u0442\u0438\u043f\u043e\u0432\u043e: %u, \u0432\u043a\u0430\u0437\u0430\u043d\u043d\u044f &lt;category&gt; \u043d\u0435\u043e\u0431\u043e\u0432'\u044f\u0437\u043a\u043e\u0432\u0435)</translation>\n     </message>\n+    <message>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation>\u0417\u0430\u0433\u0430\u043b\u044c\u043d\u0430 \u0434\u043e\u0432\u0436\u0438\u043d\u0430 \u0440\u044f\u0434\u043a\u0443 \u043c\u0435\u0440\u0435\u0436\u0435\u0432\u043e\u0457 \u0432\u0435\u0440\u0441\u0456\u0457 (%i) \u043f\u0435\u0440\u0435\u0432\u0438\u0449\u0443\u0454 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0443 (%i). \u0417\u043c\u0435\u043d\u0448\u0456\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u0447\u0438 \u0440\u043e\u0437\u043c\u0456\u0440 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456\u0432 \u043a\u043b\u0456\u0454\u043d\u0442\u0430 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430.</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 -socks \u043d\u0435 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f. \u041c\u043e\u0436\u043b\u0438\u0432\u0456\u0441\u0442\u044c \u0432\u043a\u0430\u0437\u0443\u0432\u0430\u0442\u0438 \u0432\u0435\u0440\u0441\u0456\u044e SOCKS \u0431\u0443\u043b\u043e \u0432\u0438\u0434\u0430\u043b\u0435\u043d\u043e, \u0442\u0430\u043a \u044f\u043a \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 SOCKS5.</translation>\n+    </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n         <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043e\u043a\u0440\u0435\u043c\u0438\u0439 SOCKS5-\u043f\u0440\u043e\u043a\u0441\u0456 \u0434\u043b\u044f \u0437'\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u0438\u0445\u043e\u0432\u0430\u043d\u0456 \u0441\u0435\u0440\u0432\u0456\u0441\u0438 Tor (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n@@ -3428,10 +3507,6 @@ rpcpassword=%s\n         <source>(default: %s)</source>\n         <translation>(\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0456 \u0448\u0438\u0444\u0440\u0438 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>\u0417\u0430\u0432\u0436\u0434\u0438 \u0434\u0456\u0437\u043d\u0430\u0432\u0430\u0442\u0438\u0441\u044f \u0430\u0434\u0440\u0435\u0441\u0438 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0456\u0432 \u0447\u0435\u0440\u0435\u0437 DNS (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n@@ -3492,14 +3567,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>\u0420\u0435\u0442\u0440\u0430\u043d\u0441\u043b\u044e\u0432\u0430\u0442\u0438 \u043d\u0435-P2SH \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0437 \u043c\u0443\u043b\u044c\u0442\u0438\u043f\u0456\u0434\u043f\u0438\u0441\u043e\u043c (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>\u0424\u0430\u0439\u043b \u0441\u0435\u0440\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>\u0417\u0430\u043a\u0440\u0438\u0442\u0438\u0439 \u043a\u043b\u044e\u0447 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0442\u0438\u043f\u043e\u0432\u043e: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u0440\u043e\u0437\u043c\u0456\u0440 \u043f\u0443\u043b\u0443 \u043a\u043b\u044e\u0447\u0456\u0432 &lt;n&gt; (\u0442\u0438\u043f\u043e\u0432\u043e: %u)</translation>"
      },
      {
        "sha": "db5cca3ccadbdad93d562570ebacf102fa581349",
        "filename": "src/qt/locale/bitcoin_ur_PK.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ur_PK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_ur_PK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ur_PK.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"ur_PK\" version=\"2.0\">\n+<TS language=\"ur_PK\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -108,6 +108,9 @@\n         <translation>\u067e\u0627\u0633 \u0641\u0631\u06cc\u0632 \u062a\u0628\u062f\u06cc\u0644 \u06a9\u0631\u06cc\u06ba</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>"
      },
      {
        "sha": "0b382ac6c05c77993a00b99e235b934b302a6470",
        "filename": "src/qt/locale/bitcoin_uz@Cyrl.ts",
        "status": "modified",
        "additions": 286,
        "deletions": 19,
        "changes": 305,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_uz@Cyrl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_uz@Cyrl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uz@Cyrl.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"uz@Cyrl\" version=\"2.0\">\n+<TS language=\"uz@Cyrl\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -212,6 +212,9 @@\n         <translation>\u04b2\u0430\u043c\u0451\u043d \u043f\u0430\u0440\u043e\u043b\u0438 \u043c\u0443\u0432\u0430\u0444\u0444\u0430\u049b\u0438\u044f\u0442\u043b\u0438 \u0430\u043b\u043c\u0430\u0448\u0442\u0438\u0440\u0438\u043b\u0434\u0438.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -898,6 +901,10 @@\n         <source>Third party transaction URLs</source>\n         <translation>\u0411\u0435\u0433\u043e\u043d\u0430 \u0442\u0430\u0440\u0430\u0444 \u045e\u0442\u043a\u0430\u0437\u043c\u0430\u043b\u0430\u0440\u0438 URL \u043c\u0430\u043d\u0437\u0438\u043b\u043b\u0430\u0440\u0438</translation>\n     </message>\n+    <message>\n+        <source>&amp;Network</source>\n+        <translation>\u0422\u0430\u0440\u043c\u043e\u049b</translation>\n+    </message>\n     <message>\n         <source>Proxy &amp;IP:</source>\n         <translation>\u041f\u0440\u043e\u043a\u0441\u0438 &amp;IP \u0440\u0430\u049b\u0430\u043c\u0438:</translation>\n@@ -1033,12 +1040,44 @@\n         <source>Recent transactions</source>\n         <translation>\u0421\u045e\u043d\u0433\u0433\u0438 \u043f\u0443\u043b \u045e\u0442\u043a\u0430\u0437\u043c\u0430\u043b\u0430\u0440\u0438</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Unconfirmed transactions to watch-only addresses</source>\n+        <translation>\u0422\u0430\u0441\u0434\u0438\u049b\u043b\u0430\u043d\u043c\u0430\u0433\u0430\u043d \u045e\u0442\u043a\u0430\u0437\u043c\u0430\u043b\u0430\u0440-\u0444\u0430\u049b\u0430\u0442 \u043c\u0430\u043d\u0437\u0438\u043b\u043b\u0430\u0440\u0438\u043d\u0438 \u043a\u045e\u0440\u0438\u0448</translation>\n+    </message>\n+    <message>\n+        <source>Current total balance in watch-only addresses</source>\n+        <translation>\u0416\u043e\u0440\u0438\u0439 \u0443\u043c\u0443\u043c\u0438\u0439 \u0431\u0430\u043b\u0430\u043d\u0441 \u0444\u0430\u049b\u0430\u0442 \u043a\u045e\u0440\u0438\u043d\u0430\u0434\u0438\u0433\u0430\u043d \u043c\u0430\u043d\u0437\u0438\u043b\u043b\u0430\u0440\u0434\u0430</translation>\n+    </message>\n+</context>\n <context>\n     <name>PaymentServer</name>\n+    <message>\n+        <source>URI handling</source>\n+        <translation>URI \u043e\u0441\u0438\u043b\u0438\u0431 \u049b\u043e\u043b\u043c\u043e\u049b\u0434\u0430</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment address %1</source>\n+        <translation>\u041d\u043e\u0442\u045e\u0493\u0440\u0438 \u0442\u045e\u043b\u043e\u0432 \u043c\u0430\u043d\u0437\u0438\u043b\u0438 %1</translation>\n+    </message>\n+    <message>\n+        <source>Payment request rejected</source>\n+        <translation>\u0422\u045e\u043b\u043e\u0432 \u0441\u045e\u0440\u043e\u0432\u0438 \u0438\u043d\u043a\u043e\u0440 \u044d\u0442\u0438\u043b\u0434\u0438</translation>\n+    </message>\n+    <message>\n+        <source>Payment request network doesn't match client network.</source>\n+        <translation>\u0422\u045e\u043b\u043e\u0432 \u0441\u045e\u0440\u043e\u0432\u0438 \u0442\u0430\u0440\u043c\u043e\u0493\u0438 \u043c\u0438\u0436\u043e\u0437 \u0442\u0430\u0440\u043c\u043e\u0493\u0438\u0433\u0430 \u043c\u043e\u0441 \u043a\u0435\u043b\u043c\u0430\u0439\u0434\u0438.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request error</source>\n+        <translation>\u0422\u045e\u043b\u043e\u0432 \u0441\u045e\u0440\u043e\u0432\u0438 \u0445\u0430\u0442\u043e</translation>\n+    </message>\n     </context>\n <context>\n     <name>PeerTableModel</name>\n+    <message>\n+        <source>User Agent</source>\n+        <translation>\u0424\u043e\u0439\u0434\u0430\u043b\u0430\u043d\u0443\u0432\u0447\u0438 \u0432\u0430\u043a\u0438\u043b</translation>\n+    </message>\n     <message>\n         <source>Ping Time</source>\n         <translation>Ping \u0432\u0430\u049b\u0442\u0438</translation>\n@@ -1050,6 +1089,10 @@\n         <source>Amount</source>\n         <translation>\u041c\u0438\u049b\u0434\u043e\u0440\u0438</translation>\n     </message>\n+    <message>\n+        <source>Enter a Bitcoin address (e.g. %1)</source>\n+        <translation>Bitcoin \u043c\u0430\u043d\u0437\u0438\u043b\u0438\u043d\u0438 \u043a\u0438\u0440\u0438\u0442\u0438\u043d\u0433 (\u043c\u0430\u0441\u0430\u043b\u0430\u043d.  %1)</translation>\n+    </message>\n     <message>\n         <source>%1 m</source>\n         <translation>%1 \u0434</translation>\n@@ -1145,12 +1188,20 @@\n         <translation>\u0411\u0430\u0442\u0430\u0444\u0441\u0438\u043b \u043c\u0430\u044a\u043b\u0443\u043c\u043e\u0442\u043b\u0430\u0440\u043d\u0438 \u043a\u045e\u0440\u0438\u0448 \u0443\u0447\u0443\u043d \u0443\u043b\u0430\u043c\u043d\u0438 \u0442\u0430\u043d\u043b\u0430\u043d\u0433.</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>\u0423\u0437\u0443\u043d\u043b\u0438\u043a\u043d\u0438\u043d\u0433 \u0431\u043e\u0448\u043b\u0430\u043d\u0438\u0448\u0438</translation>\n+        <source>Direction</source>\n+        <translation>\u0419\u045e\u043d\u0430\u043b\u0438\u0448</translation>\n+    </message>\n+    <message>\n+        <source>Version</source>\n+        <translation>\u0412\u0435\u0440\u0441\u0438\u044f</translation>\n+    </message>\n+    <message>\n+        <source>User Agent</source>\n+        <translation>\u0424\u043e\u0439\u0434\u0430\u043b\u0430\u043d\u0443\u0432\u0447\u0438 \u0432\u0430\u043a\u0438\u043b</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>\u0423\u0437\u0443\u043d\u043b\u0438\u043a\u043d\u0438 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043b\u0430\u0448</translation>\n+        <source>Services</source>\n+        <translation>\u0425\u0438\u0437\u043c\u0430\u0442\u043b\u0430\u0440</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1257,12 +1308,24 @@\n         <translation>\u04b3\u0435\u0447 \u049b\u0430\u0447\u043e\u043d</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>\u041d\u043e\u043c\u0430\u044a\u043b\u0443\u043c</translation>\n+        <source>Inbound</source>\n+        <translation>\u0418\u0447\u043a\u0438 \u0439\u045e\u043d\u0430\u043b\u0438\u0448</translation>\n+    </message>\n+    <message>\n+        <source>Outbound</source>\n+        <translation>\u0422\u0430\u0448\u049b\u0438 \u0439\u045e\u043d\u0430\u043b\u0438\u0448</translation>\n+    </message>\n+    <message>\n+        <source>Yes</source>\n+        <translation>\u04b2\u0430</translation>\n+    </message>\n+    <message>\n+        <source>No</source>\n+        <translation>\u0419\u045e\u049b</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>\u041e\u043b\u0438\u043d\u043c\u043e\u049b\u0434\u0430...</translation>\n+        <source>Unknown</source>\n+        <translation>\u041d\u043e\u043c\u0430\u044a\u043b\u0443\u043c</translation>\n     </message>\n </context>\n <context>\n@@ -1342,10 +1405,30 @@\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>QR Code</source>\n+        <translation>QR \u041a\u043e\u0434\u0438</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Address</source>\n+        <translation>\u041d\u0443\u0441\u04b3\u0430\u043b\u0430\u0448 &amp; \u041c\u0430\u043d\u0437\u0438\u043b</translation>\n+    </message>\n     <message>\n         <source>&amp;Save Image...</source>\n         <translation>\u0420\u0430\u0441\u043c\u043d\u0438 &amp;\u0441\u0430\u049b\u043b\u0430\u0448</translation>\n     </message>\n+    <message>\n+        <source>Request payment to %1</source>\n+        <translation> %1 \u0434\u0430\u043d \u0422\u045e\u043b\u043e\u0432\u043d\u0438 \u0441\u045e\u0440\u0430\u0448</translation>\n+    </message>\n+    <message>\n+        <source>Payment information</source>\n+        <translation>\u0422\u045e\u043b\u043e\u0432 \u043c\u0430\u044a\u043b\u0443\u043c\u043e\u0442\u0438</translation>\n+    </message>\n+    <message>\n+        <source>URI</source>\n+        <translation>URI</translation>\n+    </message>\n     <message>\n         <source>Address</source>\n         <translation>\u041c\u0430\u043d\u0437\u0438\u043b</translation>\n@@ -1358,6 +1441,10 @@\n         <source>Label</source>\n         <translation>\u0401\u0440\u043b\u0438\u043a</translation>\n     </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>\u0425\u0430\u0431\u0430\u0440</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n@@ -1369,6 +1456,10 @@\n         <source>Label</source>\n         <translation>\u0401\u0440\u043b\u0438\u043a</translation>\n     </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>\u0425\u0430\u0431\u0430\u0440</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>\u041c\u0438\u049b\u0434\u043e\u0440\u0438</translation>\n@@ -1377,13 +1468,33 @@\n         <source>(no label)</source>\n         <translation>(\u0401\u0440\u043b\u0438\u043a \u043c\u0430\u0432\u0436\u0443\u0434 \u044d\u043c\u0430\u0441)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no message)</source>\n+        <translation>(\u0425\u0430\u0431\u0430\u0440 \u0439\u045e\u049b)</translation>\n+    </message>\n+    <message>\n+        <source>(no amount)</source>\n+        <translation>(\u041c\u0438\u049b\u0434\u043e\u0440 \u043c\u0430\u0432\u0436\u0443\u0434 \u044d\u043c\u0430\u0441)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <source>Send Coins</source>\n         <translation>\u0422\u0430\u043d\u0433\u0430\u043b\u0430\u0440\u043d\u0438 \u0436\u0443\u043d\u0430\u0442</translation>\n     </message>\n+    <message>\n+        <source>Coin Control Features</source>\n+        <translation>\u0422\u0430\u043d\u0433\u0430 \u0431\u043e\u0448\u049b\u0430\u0440\u0443\u0432\u0438 \u04b3\u0443\u0441\u0443\u0441\u0438\u044f\u0442\u043b\u0430\u0440\u0438</translation>\n+    </message>\n+    <message>\n+        <source>automatically selected</source>\n+        <translation>\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u043a \u0442\u0430\u0440\u0437\u0434\u0430 \u0442\u0430\u043d\u043b\u0430\u043d\u0433\u0430\u043d</translation>\n+    </message>\n+    <message>\n+        <source>Insufficient funds!</source>\n+        <translation>\u041a\u0430\u043c \u043c\u0438\u049b\u0434\u043e\u0440</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>\u0421\u043e\u043d\u0438:</translation>\n@@ -1420,6 +1531,34 @@\n         <source>Custom change address</source>\n         <translation>\u0411\u043e\u0448\u049b\u0430 \u045e\u0437\u0433\u0430\u0440\u0442\u0438\u0440\u0438\u043b\u0433\u0430\u043d \u043c\u0430\u043d\u0437\u0438\u043b</translation>\n     </message>\n+    <message>\n+        <source>Transaction Fee:</source>\n+        <translation>\u040e\u0442\u043a\u0430\u0437\u043c\u0430 \u0442\u045e\u043b\u043e\u0432\u0438</translation>\n+    </message>\n+    <message>\n+        <source>Choose...</source>\n+        <translation>\u0422\u0430\u043d\u043b\u043e\u0432</translation>\n+    </message>\n+    <message>\n+        <source>per kilobyte</source>\n+        <translation>\u0425\u0430\u0440 \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\u0438\u0433\u0430</translation>\n+    </message>\n+    <message>\n+        <source>Recommended:</source>\n+        <translation>\u0422\u0430\u0432\u0441\u0438\u044f \u044d\u0442\u0438\u043b\u0433\u0430\u043d</translation>\n+    </message>\n+    <message>\n+        <source>Confirmation time:</source>\n+        <translation>\u0422\u0430\u0441\u0434\u0438\u049b \u0432\u0430\u049b\u0442\u0438</translation>\n+    </message>\n+    <message>\n+        <source>normal</source>\n+        <translation>\u041d\u043e\u0440\u043c\u0430\u043b</translation>\n+    </message>\n+    <message>\n+        <source>fast</source>\n+        <translation>\u0422\u0435\u0437\u043a\u043e\u0440</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>\u0411\u0438\u0440\u0434\u0430\u043d\u0438\u0433\u0430 \u0431\u0438\u0440 \u043d\u0435\u0447\u0442\u0430 \u049b\u0430\u0431\u0443\u043b \u049b\u0438\u043b\u0443\u0432\u0447\u0438\u043b\u0430\u0440\u0433\u0430 \u0436\u045e\u043d\u0430\u0442\u0438\u0448</translation>\n@@ -1432,6 +1571,10 @@\n         <source>Dust:</source>\n         <translation>\u0410\u0445\u043b\u0430\u0442 \u049b\u0443\u0442\u0438\u0441\u0438:</translation>\n     </message>\n+    <message>\n+        <source>Clear &amp;All</source>\n+        <translation>\u0411\u0430\u0440\u0447\u0430\u0441\u0438\u043d\u0438 &amp; \u0422\u043e\u0437\u0430\u043b\u0430\u0448</translation>\n+    </message>\n     <message>\n         <source>Balance:</source>\n         <translation>\u0411\u0430\u043b\u0430\u043d\u0441</translation>\n@@ -1440,10 +1583,18 @@\n         <source>Confirm the send action</source>\n         <translation>\u0416\u045e\u043d\u0430\u0442\u0438\u0448 \u0430\u043c\u0430\u043b\u0438\u043d\u0438 \u0442\u0430\u0441\u0434\u0438\u049b\u043b\u0430\u0448</translation>\n     </message>\n+    <message>\n+        <source>S&amp;end</source>\n+        <translation>\u0416\u045e&amp;\u043d\u0430\u0442\u0438\u0448</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>\u0422\u0430\u043d\u0433\u0430\u043b\u0430\u0440 \u0436\u045e\u043d\u0430\u0438\u0448\u043d\u0438 \u0442\u0430\u0441\u0434\u0438\u049b\u043b\u0430\u0448</translation>\n     </message>\n+    <message>\n+        <source>%1 to %2</source>\n+        <translation>%1 \u0434\u0430\u043d %2</translation>\n+    </message>\n     <message>\n         <source>Copy quantity</source>\n         <translation>\u041d\u0443\u0441\u0445\u0430 \u0441\u043e\u043d\u0438</translation>\n@@ -1472,6 +1623,10 @@\n         <source>Copy change</source>\n         <translation>\u041d\u0443\u0441\u0445\u0430 \u049b\u0430\u0439\u0442\u0438\u043c\u0438</translation>\n     </message>\n+    <message>\n+        <source>or</source>\n+        <translation>\u0451\u043a\u0438</translation>\n+    </message>\n     <message>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>\u0422\u045e\u043b\u043e\u0432 \u043c\u0438\u049b\u0434\u043e\u0440\u0438 0. \u0434\u0430\u043d \u043a\u0430\u0442\u0442\u0430 \u0431\u045e\u043b\u0438\u0448\u0438 \u043a\u0435\u0440\u0430\u043a. </translation>\n@@ -1519,6 +1674,14 @@\n         <source>&amp;Label:</source>\n         <translation>&amp;\u0401\u0440\u043b\u0438\u049b:</translation>\n     </message>\n+    <message>\n+        <source>Choose previously used address</source>\n+        <translation>\u041e\u043b\u0434\u0438\u043d \u0444\u043e\u0439\u0434\u0430\u043b\u0430\u043d\u0438\u043b\u0433\u0430\u043d \u043c\u0430\u043d\u0437\u0438\u043b\u043d\u0438 \u0442\u0430\u043d\u043b\u0430</translation>\n+    </message>\n+    <message>\n+        <source>This is a normal payment.</source>\n+        <translation>\u0411\u0443 \u043d\u043e\u0440\u043c\u0430\u043b \u0442\u045e\u043b\u043e\u0432.</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -1531,12 +1694,20 @@\n         <source>Alt+P</source>\n         <translation>Alt+P</translation>\n     </message>\n+    <message>\n+        <source>Message:</source>\n+        <translation>\u0425\u0430\u0431\u0430\u0440</translation>\n+    </message>\n     </context>\n <context>\n     <name>ShutdownWindow</name>\n     </context>\n <context>\n     <name>SignVerifyMessageDialog</name>\n+    <message>\n+        <source>Choose previously used address</source>\n+        <translation>\u041e\u043b\u0434\u0438\u043d \u0444\u043e\u0439\u0434\u0430\u043b\u0430\u043d\u0438\u043b\u0433\u0430\u043d \u043c\u0430\u043d\u0437\u0438\u043b\u043d\u0438 \u0442\u0430\u043d\u043b\u0430</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -1553,7 +1724,15 @@\n         <source>Signature</source>\n         <translation>\u0418\u043c\u0437\u043e</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Clear &amp;All</source>\n+        <translation>\u0411\u0430\u0440\u0447\u0430\u0441\u0438\u043d\u0438 &amp; \u0422\u043e\u0437\u0430\u043b\u0430\u0448</translation>\n+    </message>\n+    <message>\n+        <source>Message verified.</source>\n+        <translation>\u0425\u0430\u0431\u0430\u0440 \u0442\u0430\u0441\u0434\u0438\u049b\u043b\u0430\u043d\u0434\u0438.</translation>\n+    </message>\n+</context>\n <context>\n     <name>SplashScreen</name>\n     <message>\n@@ -1590,14 +1769,78 @@\n         <source>Date</source>\n         <translation>\u0421\u0430\u043d\u0430</translation>\n     </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>\u041c\u0430\u043d\u0431\u0430</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>\u042f\u0440\u0430\u0442\u0438\u043b\u0433\u0430\u043d</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>\u0414\u0430\u043d</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>\u0413\u0430</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>\u045e\u0437 \u043c\u0430\u043d\u0437\u0438\u043b\u0438</translation>\n+    </message>\n+    <message>\n+        <source>label</source>\n+        <translation>\u0451\u0440\u043b\u0438\u049b</translation>\n+    </message>\n+    <message>\n+        <source>Credit</source>\n+        <translation>\u041a\u0440\u0435\u0434\u0438\u0442 (\u049b\u0430\u0440\u0437)</translation>\n+    </message>\n+    <message>\n+        <source>not accepted</source>\n+        <translation>\u049b\u0430\u0431\u0443\u043b \u049b\u0438\u043b\u0438\u043d\u043c\u0430\u0434\u0438</translation>\n+    </message>\n+    <message>\n+        <source>Transaction fee</source>\n+        <translation>\u040e\u0442\u043a\u0430\u0437\u043c\u0430 \u0442\u045e\u043b\u043e\u0432\u0438</translation>\n+    </message>\n+    <message>\n+        <source>Net amount</source>\n+        <translation>\u0423\u043c\u0443\u043c\u0438\u0439 \u043c\u0438\u049b\u0434\u043e\u0440</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>\u0425\u0430\u0431\u0430\u0440</translation>\n+    </message>\n+    <message>\n+        <source>Comment</source>\n+        <translation>\u0428\u0430\u0440\u04b3</translation>\n+    </message>\n     <message>\n         <source>Transaction ID</source>\n         <translation>ID</translation>\n     </message>\n+    <message>\n+        <source>Merchant</source>\n+        <translation>\u0421\u0430\u0432\u0434\u043e</translation>\n+    </message>\n+    <message>\n+        <source>Transaction</source>\n+        <translation>\u040e\u0442\u043a\u0430\u0437\u043c\u0430</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>\u041c\u0438\u049b\u0434\u043e\u0440\u0438</translation>\n     </message>\n+    <message>\n+        <source>true</source>\n+        <translation>\u0440\u043e\u0441\u0442</translation>\n+    </message>\n+    <message>\n+        <source>false</source>\n+        <translation>\u0451\u043b\u0493\u043e\u043d</translation>\n+    </message>\n     <message>\n         <source>, has not been successfully broadcast yet</source>\n         <translation>, \u04b3\u0430\u043b\u0438\u0433\u0430\u0447\u0430 \u0442\u0440\u0430\u043d\u0441\u043b\u044f\u0446\u0438\u044f \u049b\u0438\u043b\u0438\u043d\u0433\u0430\u043d\u0438 \u0439\u045e\u049b</translation>\n@@ -1644,14 +1887,26 @@\n         <source>Generated but not accepted</source>\n         <translation>\u042f\u0440\u0430\u0442\u0438\u043b\u0434\u0438, \u0430\u043c\u043c\u043e \u049b\u0430\u0431\u0443\u043b \u049b\u0438\u043b\u0438\u043d\u043c\u0430\u0434\u0438</translation>\n     </message>\n+    <message>\n+        <source>Offline</source>\n+        <translation>\u041e\u0444\u0444\u043b\u0430\u0439\u043d</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>\u0401\u0440\u043b\u0438\u049b</translation>\n     </message>\n+    <message>\n+        <source>Unconfirmed</source>\n+        <translation>\u0422\u0430\u0441\u0434\u0438\u049b\u043b\u0430\u043d\u043c\u0430\u0433\u0430\u043d</translation>\n+    </message>\n     <message>\n         <source>Received with</source>\n         <translation>\u0401\u0440\u0434\u0430\u043c\u0438\u0434\u0430 \u049b\u0430\u0431\u0443\u043b \u049b\u0438\u043b\u0438\u0448</translation>\n     </message>\n+    <message>\n+        <source>Received from</source>\n+        <translation>\u0414\u0430\u043d \u049b\u0430\u0431\u0443\u043b \u049b\u0438\u043b\u0438\u0448</translation>\n+    </message>\n     <message>\n         <source>Sent to</source>\n         <translation>\u0416\u045e\u043d\u0430\u0442\u0438\u0448</translation>\n@@ -1763,10 +2018,22 @@\n         <source>Edit label</source>\n         <translation>\u0401\u0440\u043b\u0438\u043a\u043d\u0438 \u0442\u0430\u0445\u0440\u0438\u0440\u043b\u0430\u0448</translation>\n     </message>\n+    <message>\n+        <source>Show transaction details</source>\n+        <translation>\u040e\u0442\u043a\u0430\u0437\u043c\u0430 \u0442\u0430\u0444\u0441\u0438\u043b\u043e\u0442\u043b\u0430\u0440\u0438\u043d\u0438 \u043a\u045e\u0440\u0441\u0430\u0442\u0438\u0448 </translation>\n+    </message>\n+    <message>\n+        <source>Export Transaction History</source>\n+        <translation>\u040e\u0442\u043a\u0430\u0437\u043c\u0430\u043b\u0430\u0440 \u0442\u0430\u0440\u0438\u0445\u0438\u043d\u0438 \u044d\u043a\u0441\u043f\u043e\u0440\u0442 \u049b\u0438\u043b\u0438\u0448</translation>\n+    </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u049b\u0438\u043b\u0438\u0431 \u0431\u045e\u043b\u043c\u0430\u0434\u0438</translation>\n     </message>\n+    <message>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation>\u040e\u0442\u043a\u0430\u0437\u043c\u0430\u043b\u0430\u0440 \u0442\u0430\u0440\u0438\u0445\u0438 %1 \u0433\u0430 \u043c\u0443\u0432\u0430\u0444\u0444\u0430\u049b\u049b\u0438\u044f\u0442\u043b\u0438 \u0441\u0430\u049b\u043b\u0430\u043d\u0434\u0438.</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u0412\u0435\u0440\u0433\u0443\u043b \u0431\u0438\u043b\u0430\u043d \u0430\u0436\u0440\u0430\u0442\u0438\u043b\u0433\u0430\u043d \u0444\u0430\u0439\u043b (*.csv)</translation>\n@@ -1809,7 +2076,11 @@\n     </context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>No wallet has been loaded.</source>\n+        <translation>\u0425\u0430\u043b\u0438 \u0431\u0438\u0440\u043e\u0440\u0442\u0430 \u0445\u0430\u043c\u0451\u043d \u044e\u043a\u043b\u0430\u043d\u043c\u0430\u0434\u0438</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n@@ -1847,8 +2118,8 @@\n         <translation>\u0414\u0435\u043c\u043e\u043d \u0441\u0438\u0444\u0430\u0442\u0438\u0434\u0430 \u043e\u0440\u049b\u0430 \u0444\u043e\u043d\u0434\u0430 \u0438\u0448\u0433\u0430 \u0442\u0443\u0448\u0438\u0440\u0438\u043d\u0433 \u0432\u0430 \u0431\u0443\u0439\u0440\u0443\u049b\u043b\u0430\u0440\u0433\u0430 \u0440\u043e\u0437\u0438 \u0431\u045e\u043b\u0438\u043d\u0433</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>\u0421\u0438\u043d\u043e\u0432 \u0442\u0430\u0440\u043c\u043e\u0493\u0438\u0434\u0430\u043d \u0444\u043e\u0439\u0434\u0430\u043b\u0430\u043d\u0438\u043d\u0433</translation>\n+        <source>Connection options:</source>\n+        <translation>\u0423\u043b\u0430\u043d\u0438\u0448 \u043a\u045e\u0440\u0441\u0430\u0442\u043a\u0438\u0447\u043b\u0430\u0440\u0438:</translation>\n     </message>\n     <message>\n         <source>Choose data directory on startup (default: 0)</source>\n@@ -1878,10 +2149,6 @@\n         <source>Password for JSON-RPC connections</source>\n         <translation>JSON-RPC \u0443\u043b\u0430\u043d\u0438\u0448\u043b\u0430\u0440\u0438 \u0443\u0447\u0443\u043d \u043f\u0430\u0440\u043e\u043b</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>JSON-RPC \u0443\u043b\u0430\u043d\u0438\u0448\u043b\u0430\u0440\u0438 \u0443\u0447\u0443\u043d OpenSSL (https)\u0434\u0430\u043d \u0444\u043e\u0439\u0434\u0430\u043b\u0430\u043d\u0438\u0448</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u0411\u0443 \u0451\u0440\u0434\u0430\u043c \u0445\u0430\u0431\u0430\u0440\u0438</translation>"
      },
      {
        "sha": "7a7c68c4b3b26e15f898eb819cc49aa9ce18c0a6",
        "filename": "src/qt/locale/bitcoin_vi.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_vi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_vi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"vi\" version=\"2.0\">\n+<TS language=\"vi\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -48,6 +48,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     </context>"
      },
      {
        "sha": "1695f26ae7727e23b4bc68d7034f9110fea62188",
        "filename": "src/qt/locale/bitcoin_vi_VN.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_vi_VN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_vi_VN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi_VN.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"vi_VN\" version=\"2.0\">\n+<TS language=\"vi_VN\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -136,6 +136,9 @@\n         <translation>V\u00ed \u0111\u00e3 \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a</translation>\n     </message>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>"
      },
      {
        "sha": "ecb35b0c4f841cfcd08e992194c407fefa0cac57",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 83,
        "deletions": 157,
        "changes": 240,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"zh_CN\" version=\"2.0\">\n+<TS language=\"zh_CN\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -35,7 +35,7 @@\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n-        <translation>\u5bfc\u51fa\u5f53\u524d\u6570\u636e\u5230\u6587\u4ef6</translation>\n+        <translation>\u5bfc\u51fa\u5f53\u524d\u5206\u9875\u91cc\u7684\u6570\u636e\u5230\u6587\u4ef6</translation>\n     </message>\n     <message>\n         <source>&amp;Export</source>\n@@ -47,11 +47,11 @@\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>\u9009\u62e9\u53d1\u6b3e\u5730\u5740</translation>\n+        <translation>\u9009\u62e9\u53d1\u5e01\u5730\u5740</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n-        <translation>\u9009\u62e9\u6536\u6b3e\u5730\u5740</translation>\n+        <translation>\u9009\u62e9\u6536\u5e01\u5730\u5740</translation>\n     </message>\n     <message>\n         <source>C&amp;hoose</source>\n@@ -185,7 +185,7 @@\n     </message>\n     <message>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n-        <translation>\u8bf7\u8f93\u5165\u65b0\u7684\u94b1\u5305\u5bc6\u7801. &lt;br/&gt;\u5bc6\u7801\u987b\u5305\u542b&lt;b&gt;10\u4e2a\u4ee5\u4e0a\u5b57\u7b26&lt;/b&gt;,\u6216&lt;b&gt;8\u4e2a\u4ee5\u4e0a\u5355\u8bcd&lt;/b&gt;.</translation>\n+        <translation>\u8bf7\u8f93\u5165\u65b0\u7684\u94b1\u5305\u5bc6\u7801. &lt;br/&gt;\u5bc6\u7801\u987b\u5305\u542b&lt;b&gt;10\u4e2a\u4ee5\u4e0a\u968f\u673a\u5b57\u7b26&lt;/b&gt;,\u6216&lt;b&gt;8\u4e2a\u4ee5\u4e0a\u5355\u8bcd&lt;/b&gt;.</translation>\n     </message>\n     <message>\n         <source>Enter the old passphrase and new passphrase to the wallet.</source>\n@@ -220,6 +220,13 @@\n         <translation>\u4fee\u6539\u94b1\u5305\u5bc6\u7801\u6210\u529f\u3002</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/\u7f51\u7edc\u63a9\u7801</translation>\n+    </message>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -1034,7 +1041,7 @@\n     </message>\n     <message>\n         <source>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</source>\n-        <translation>\u5982\u679c\u7981\u7528\u672a\u786e\u8ba4\u7684\u96f6\u94b1\uff0c\u5219\u96f6\u94b1\u81f3\u5c11\u9700\u89811\u4e2a\u786e\u8ba4\u624d\u80fd\u4f7f\u7528\u3002\u540c\u65f6\u8d26\u6237\u4f59\u989d\u663e\u793a\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</translation>\n+        <translation>\u5982\u679c\u7981\u7528\u672a\u786e\u8ba4\u7684\u96f6\u94b1\uff0c\u5219\u96f6\u94b1\u81f3\u5c11\u9700\u89811\u4e2a\u786e\u8ba4\u624d\u80fd\u4f7f\u7528\u3002\u540c\u65f6\u8d26\u6237\u4f59\u989d\u8ba1\u7b97\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</translation>\n     </message>\n     <message>\n         <source>&amp;Spend unconfirmed change</source>\n@@ -1068,6 +1075,18 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>\u4ee3\u7406\u7aef\u53e3\uff08\u4f8b\u5982 9050\uff09</translation>\n     </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>\u7a97\u53e3(&amp;W)</translation>\n@@ -1286,10 +1305,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>\u652f\u4ed8\u8bf7\u6c42 %1 \u592a\u5927 (%2 \u5b57\u8282\u3002\u53ea\u5141\u8bb8 %3 \u5b57\u8282)\u3002</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>\u652f\u4ed8\u8bf7\u6c42\u9632\u6ee5\u7528\u4fdd\u62a4</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>%1: %2 \u901a\u8baf\u51fa\u9519</translation>\n@@ -1462,6 +1477,10 @@\n         <source>Select a peer to view detailed information.</source>\n         <translation>\u9009\u62e9\u8282\u70b9\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\u3002</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>\u767d\u540d\u5355</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>\u65b9\u5411</translation>\n@@ -1471,20 +1490,20 @@\n         <translation>\u7248\u672c</translation>\n     </message>\n     <message>\n-        <source>User Agent</source>\n-        <translation>\u7528\u6237\u4ee3\u7406</translation>\n+        <source>Synced Headers</source>\n+        <translation>\u540c\u6b65\u533a\u5757\u5934</translation>\n     </message>\n     <message>\n-        <source>Services</source>\n-        <translation>\u670d\u52a1</translation>\n+        <source>Synced Blocks</source>\n+        <translation>\u540c\u6b65\u533a\u5757\u94fe</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>\u5f00\u59cb\u9ad8\u5ea6</translation>\n+        <source>User Agent</source>\n+        <translation>\u7528\u6237\u4ee3\u7406</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>\u540c\u6b65\u9ad8\u5ea6</translation>\n+        <source>Services</source>\n+        <translation>\u670d\u52a1</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1562,6 +1581,22 @@\n         <source>Clear console</source>\n         <translation>\u6e05\u7a7a\u63a7\u5236\u53f0</translation>\n     </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 \u5c0f\u65f6(&amp;H)</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 \u5929(&amp;D)</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 \u5468(&amp;W)</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 \u5e74(&amp;Y)</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>\u6b22\u8fce\u4f7f\u7528 \u6bd4\u7279\u5e01\u6838\u5fc3 RPC \u63a7\u5236\u53f0\u3002</translation>\n@@ -1590,6 +1625,10 @@\n         <source>%1 GB</source>\n         <translation>%1 GB</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(\u8282\u70b9ID: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>\u901a\u8fc7 %1</translation>\n@@ -1607,12 +1646,16 @@\n         <translation>\u4f20\u51fa</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>\u672a\u77e5</translation>\n+        <source>Yes</source>\n+        <translation>\u662f</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>\u83b7\u53d6\u4e2d...</translation>\n+        <source>No</source>\n+        <translation>\u5426</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>\u672a\u77e5</translation>\n     </message>\n </context>\n <context>\n@@ -1872,7 +1915,7 @@\n     </message>\n     <message>\n         <source>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n-        <translation>\u4ea4\u6613\u91cf\u5c0f\u65f6\u53ea\u652f\u4ed8\u6700\u5c0f\u4ea4\u6613\u8d39\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u5f53\u4ea4\u6613\u91cf\u5927\u65f6\u60a8\u7684\u4ea4\u6613\u53ef\u80fd\u6c38\u8fdc\u65e0\u6cd5\u786e\u8ba4\u3002</translation>\n+        <translation>\u4ea4\u6613\u91cf\u5c0f\u65f6\u53ea\u652f\u4ed8\u6700\u5c0f\u4ea4\u6613\u8d39\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u5f53\u4ea4\u6613\u91cf\u5927\u5230\u8d85\u51fa\u7f51\u7edc\u53ef\u5904\u7406\u65f6\u60a8\u7684\u4ea4\u6613\u53ef\u80fd\u6c38\u8fdc\u65e0\u6cd5\u786e\u8ba4\u3002</translation>\n     </message>\n     <message>\n         <source>(read the tooltip)</source>\n@@ -1936,7 +1979,7 @@\n     </message>\n     <message>\n         <source>Confirm the send action</source>\n-        <translation>\u786e\u8ba4\u5e76\u53d1\u9001\u8d27\u5e01</translation>\n+        <translation>\u786e\u8ba4\u53d1\u9001\u8d27\u5e01</translation>\n     </message>\n     <message>\n         <source>S&amp;end</source>\n@@ -1978,10 +2021,6 @@\n         <source>Copy change</source>\n         <translation>\u590d\u5236\u96f6\u94b1</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u603b\u989d %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u6216</translation>\n@@ -2022,6 +2061,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>\u53ea\u652f\u4ed8\u6700\u5c0f\u8d39\u7528 %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>\u603b\u91d1\u989d %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u63a5\u6536\u4eba\u5730\u5740\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u3002</translation>\n@@ -2803,15 +2846,18 @@\n         <translation>\u63a5\u53d7\u547d\u4ee4\u884c\u548c JSON-RPC \u547d\u4ee4\n </translation>\n     </message>\n+    <message>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>\u9519\u8bef\uff1a\u53d1\u751f\u4e86\u81f4\u547d\u7684\u5185\u90e8\u9519\u8bef\uff0c\u8be6\u60c5\u89c1 debug.log \u6587\u4ef6</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>\u6b63\u5728\u4fee\u526a\u533a\u5757\u5b58\u50a8...</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u5728\u540e\u53f0\u8fd0\u884c\u5e76\u63a5\u53d7\u547d\u4ee4\n \n-</translation>\n-    </message>\n-    <message>\n-        <source>Use the test network</source>\n-        <translation>\u4f7f\u7528\u6d4b\u8bd5\u7f51\u7edc\n </translation>\n     </message>\n     <message>\n@@ -2834,14 +2880,6 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u5f53\u6700\u4f73\u533a\u5757\u53d8\u5316\u65f6\u6267\u884c\u547d\u4ee4 (\u547d\u4ee4\u884c\u4e2d\u7684 %s \u4f1a\u88ab\u66ff\u6362\u6210\u533a\u5757\u54c8\u5e0c\u503c)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>\u5355\u6b21\u4ea4\u6613\u6700\u591a\u4f7f\u7528\u4ea4\u6613\u8d39\uff1b\u8bbe\u7f6e\u592a\u4f4e\u53ef\u80fd\u5bfc\u81f4\u5927\u5b97\u4ea4\u6613\u4e2d\u6b62 (\u9ed8\u8ba4: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>\u901a\u8fc7\u4fee\u526a\uff08\u5220\u9664\uff09\u65e7\u6570\u636e\u5757\u51cf\u5c11\u5b58\u50a8\u9700\u6c42\u3002\u6b64\u6a21\u5f0f\u5c06\u7981\u7528\u94b1\u5305\u652f\u6301\uff0c\u5e76\u4e0e -txindex \u4e0d\u517c\u5bb9\u3002\u8b66\u544a\uff1a\u8fd8\u539f\u6b64\u8bbe\u7f6e\u9700\u8981\u91cd\u65b0\u4e0b\u8f7d\u6574\u4e2a\u6570\u636e\u94fe\u3002(\u9ed8\u8ba4: 0 = \u7981\u7528\u4fee\u526a\u6570\u636e\u5757\uff0c &gt;%u = \u6570\u636e\u5757\u6587\u4ef6\u76ee\u6807\u5927\u5c0f\uff0c\u5355\u4f4d MiB)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>\u8bbe\u7f6e\u811a\u672c\u9a8c\u8bc1\u7684\u7a0b\u5e8f (%u \u5230 %d, 0 = \u81ea\u52a8, &lt;0 = \u4fdd\u7559\u81ea\u7531\u7684\u6838\u5fc3, \u9ed8\u8ba4\u503c: %d)</translation>\n@@ -2862,10 +2900,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u8b66\u544a\uff1a\u8bf7\u68c0\u67e5\u60a8\u7684\u7f51\u7edc\u8fde\u63a5\uff0c\u6700\u8fd1 %d \u5c0f\u65f6\u6536\u5230\u4e86 %d \u4e2a\u6570\u636e\u5757\uff08\u9884\u671f\u4e3a %d \u4e2a\uff09</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u8b66\u544a\uff1a-paytxfee \u4ea4\u6613\u8d39\u8bbe\u7f6e\u5f97\u592a\u9ad8\u4e86\uff01\u6bcf\u7b14\u4ea4\u6613\u90fd\u5c06\u652f\u4ed8\u4ea4\u6613\u8d39\u3002</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>\u8b66\u544a\uff1a\u7f51\u7edc\u4f3c\u4e4e\u5e76\u4e0d\u5b8c\u5168\u540c\u610f\uff01\u6709\u4e9b\u77ff\u5de5\u4f3c\u4e4e\u9047\u5230\u4e86\u95ee\u9898\u3002</translation>\n@@ -2874,10 +2908,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>\u8b66\u544a\uff1a\u6211\u4eec\u7684\u540c\u884c\u4f3c\u4e4e\u4e0d\u5b8c\u5168\u540c\u610f\uff01\u60a8\u53ef\u80fd\u9700\u8981\u5347\u7ea7\uff0c\u6216\u8005\u5176\u4ed6\u8282\u70b9\u53ef\u80fd\u9700\u8981\u5347\u7ea7\u3002</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\u8b66\u544a\uff1a\u94b1\u5305\u6587\u4ef6wallet.dat\u8bfb\u53d6\u5931\u8d25\uff01\u6700\u91cd\u8981\u7684\u516c\u94a5\u3001\u79c1\u94a5\u6570\u636e\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u4ea4\u6613\u8bb0\u5f55\u6216\u5730\u5740\u7c3f\u6570\u636e\u4e0d\u6b63\u786e\uff0c\u6216\u8005\u5b58\u5728\u6570\u636e\u4e22\u5931\u3002</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u8b66\u544a\uff1a\u94b1\u5305\u6587\u4ef6wallet.dat\u635f\u574f! \u539f\u59cb\u7684\u94b1\u5305\u6587\u4ef6\u5df2\u7ecf\u5907\u4efd\u5230%s\u76ee\u5f55\u4e0b\u5e76\u91cd\u547d\u540d\u4e3a{timestamp}.bak \u3002\u5982\u679c\u60a8\u7684\u8d26\u6237\u4f59\u989d\u6216\u8005\u4ea4\u6613\u8bb0\u5f55\u4e0d\u6b63\u786e\uff0c\u8bf7\u4f7f\u7528\u60a8\u7684\u94b1\u5305\u5907\u4efd\u6587\u4ef6\u6062\u590d\u3002</translation>\n@@ -2942,10 +2972,6 @@\n         <source>Error opening block database</source>\n         <translation>\u5bfc\u5165\u6570\u636e\u5757\u6570\u636e\u5e93\u51fa\u9519</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>\u9519\u8bef\uff1a\u53d1\u751f\u4e86\u81f4\u547d\u7684\u5185\u90e8\u9519\u8bef\uff0c\u8bf7\u6253\u5f00debug.log\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f </translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>\u9519\u8bef\uff1a\u78c1\u76d8\u5269\u4f59\u7a7a\u95f4\u4f4e!</translation>\n@@ -2954,10 +2980,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u76d1\u542c\u7aef\u53e3\u5931\u8d25\u3002\u8bf7\u4f7f\u7528 -listen=0 \u53c2\u6570\u3002</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>\u5982\u679c&lt;category&gt;\u672a\u63d0\u4f9b\uff0c\u5c06\u8f93\u51fa\u6240\u6709\u8c03\u8bd5\u4fe1\u606f\u3002</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u5bfc\u5165\u4e2d...</translation>\n@@ -3034,10 +3056,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>\u5141\u8bb8\u6765\u81ea\u6307\u5b9a\u5730\u5740\u7684 JSON-RPC \u8fde\u63a5\u3002 &lt;ip&gt;\u4e3a\u5355\u4e00IP (\u5982: 1.2.3.4), \u7f51\u7edc/\u63a9\u7801 (\u5982: 1.2.3.4/255.255.255.0), \u7f51\u7edc/CIDR (\u5982:  1.2.3.4/24)\u3002\u8be5\u9009\u9879\u53ef\u591a\u6b21\u6307\u5b9a\u3002</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>\u8bbe\u7f6eRPC\u76d1\u542c\u7aef\u53e3 %s:%u \u65f6\u53d1\u751f\u9519\u8bef: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>\u7ed1\u5b9a\u5230\u6307\u5b9a\u5730\u5740\u548c\u8fde\u63a5\u7684\u767d\u540d\u5355\u8282\u70b9\u3002 IPv6\u4f7f\u7528  [\u4e3b\u673a]:\u7aef\u53e3 \u683c\u5f0f </translation>\n@@ -3062,18 +3080,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\u9519\u8bef\uff1a\u76d1\u542c\u5916\u90e8\u8fde\u63a5\u5931\u8d25 (\u76d1\u542c\u8fd4\u56de\u9519\u8bef %s) </translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>\u9519\u8bef\uff1a\u4e0d\u652f\u6301\u7684 -socks \u53c2\u6570\u3002\u4e0d\u518d\u652f\u6301\u8bbe\u7f6eSOCKS\u7248\u672c\uff0c\u73b0\u5728\u53ea\u652f\u6301 SOCKS5\u4ee3\u7406\u3002</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>\u5f53\u6536\u5230\u76f8\u5173\u63d0\u9192\u6216\u8005\u6211\u4eec\u770b\u5230\u4e00\u4e2a\u957f\u5206\u53c9\u65f6\u6267\u884c\u547d\u4ee4\uff08%s \u5c06\u66ff\u6362\u4e3a\u6d88\u606f\uff09</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>\u4ea4\u6613\u8d39(BTC/kb)\u6bd4\u8fd9\u66f4\u5c0f\u7684\u4ea4\u6613\u5728\u8f6c\u53d1\u65f6\u5c06\u88ab\u89c6\u4e3a\u96f6\u8d39\u4ea4\u6613 (\u9ed8\u8ba4: %s) </translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u5982\u679c\u672a\u8bbe\u7f6e\u4ea4\u6613\u8d39\u7528\uff0c\u81ea\u52a8\u6dfb\u52a0\u8db3\u591f\u7684\u4ea4\u6613\u8d39\u4ee5\u786e\u4fdd\u4ea4\u6613\u5728\u5e73\u5747n\u4e2a\u6570\u636e\u5757\u5185\u88ab\u786e\u8ba4 (\u9ed8\u8ba4: %u) </translation>\n@@ -3086,10 +3096,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>Maximum size of data in data carrier transactions we relay and mine (default: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>\u4fee\u526a\u88ab\u914d\u7f6e\u4e3a\u6bd4\u6700\u5c0f\u503c %d MB \u66f4\u4f4e\u3002\u8bf7\u4f7f\u7528\u66f4\u5927\u7684\u6570\u5b57\u3002</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>\u901a\u8fc7DNS\u67e5\u8be2\u6bcf\u4e2a\u5730\u5740\uff0c\u5982\u679c\u77ed\u5730\u5740 (\u9ed8\u8ba4\u503c: 1 \u9664\u975e -\u8fde\u63a5)</translation>\n@@ -3114,38 +3120,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>\u8981\u4f7f\u7528 bitcoind \u6216\u8005 bitcoin-qt \u4e2d\u7684 -server \u9009\u9879\uff0c\u60a8\u5fc5\u987b\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u7801\uff1a\n-%s\n-\u5efa\u8bae\u60a8\u4f7f\u7528\u4e0b\u5217\u968f\u673a\u5bc6\u7801\uff1a\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-\uff08\u60a8\u4e0d\u9700\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u5bc6\u7801\uff09\n-\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e0d\u80fd\u76f8\u540c\u3002\n-\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5e76\u8bbe\u7f6e\u6743\u9650\u4e3a\u4ec5\u521b\u5efa\u8005\u53ef\u8bfb\u3002\n-\u6b64\u5916\uff0c\u8fd8\u5efa\u8bae\u60a8\u8bbe\u7f6e alertnotify \u4ee5\u4fbf\u60a8\u80fd\u6ce8\u610f\u5230\u95ee\u9898\uff1a\n-\u4f8b\u5982 alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>\u8b66\u544a\uff1a-maxtxfee \u8bbe\u7f6e\u7684\u592a\u9ad8\u4e86\uff01\u6bcf\u8fdb\u884c\u4e00\u7b14\u4ea4\u6613\u65f6\u60a8\u90fd\u8981\u82b1\u8d39\u8fd9\u4e48\u591a\u8d39\u7528\u3002</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>\u8b66\u544a\uff1a\u8bf7\u68c0\u67e5\u7535\u8111\u7684\u65e5\u671f\u65f6\u95f4\u8bbe\u7f6e\u662f\u5426\u6b63\u786e\uff01\u65f6\u95f4\u9519\u8bef\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6bd4\u7279\u5e01\u5ba2\u6237\u7aef\u8fd0\u884c\u5f02\u5e38\u3002</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>\u767d\u540d\u5355\u8282\u70b9\u4e0d\u80fd\u88abDoS banned \uff0c\u4e14\u8f6c\u53d1\u6240\u6709\u6765\u81ea\u4ed6\u4eec\u7684\u4ea4\u6613(\u5373\u4fbf\u8fd9\u4e9b\u4ea4\u6613\u5df2\u7ecf\u5b58\u5728\u4e8emempool\u4e2d)\uff0c\u5e38\u7528\u4e8e\u7f51\u5173 </translation>\n@@ -3166,10 +3140,6 @@ rpcpassword=%s\n         <source>Activating best chain...</source>\n         <translation>\u6b63\u5728\u6fc0\u6d3b\u6700\u4f73\u6570\u636e\u94fe...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>\u4e0d\u80fd\u5728\u4fee\u526a\u6a21\u5f0f\u4e0b\u8fd0\u884c\u4e00\u4e2a\u94b1\u5305\u3002</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>\u65e0\u6cd5\u89e3\u6790 -whitebind \u5730\u5740: '%s'</translation>\n@@ -3186,10 +3156,6 @@ rpcpassword=%s\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>\u7248\u6743\u6240\u6709 (C) 2009-%i Bitcoin Core \u5f00\u53d1\u8005</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>\u65e0\u6cd5\u89e3\u6790 -rpcbind \u7684\u503c %s \u4e3a\u7f51\u7edc\u5730\u5740</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>\u52a0\u8f7dwallet.dat\u9519\u8bef\uff1a\u9700\u8981\u65b0\u7248\u7684\u6bd4\u7279\u5e01\u6838\u5fc3\u94b1\u5305</translation>\n@@ -3198,14 +3164,6 @@ rpcpassword=%s\n         <source>Error reading from database, shutting down.</source>\n         <translation>\u8bfb\u53d6\u6570\u636e\u5e93\u51fa\u9519\uff0c\u5173\u95ed\u4e2d\u3002</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>\u9519\u8bef\uff1a\u53d1\u73b0\u4e86\u4e0d\u652f\u6301\u7684\u53c2\u6570 -tor\uff0c\u8bf7\u4f7f\u7528 -onion\u3002</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>\u4e3a\u4ed8\u6b3e\u4ea4\u6613\u6dfb\u52a0\u4ea4\u6613\u8d39 (BTC/kb) (\u9ed8\u8ba4: %s) </translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>\u4fe1\u606f</translation>\n@@ -3242,18 +3200,10 @@ rpcpassword=%s\n         <source>Node relay options:</source>\n         <translation>\u8282\u70b9\u4e2d\u7ee7\u9009\u9879:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL\u9009\u9879\uff1a(\u89c1\u6709\u5173\u6bd4\u7279\u5e01\u8bbe\u7f6e\u7528\u4e8eSSL\u8bf4\u660e\u7684\u7ef4\u57fa\u767e\u79d1)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC \u670d\u52a1\u5668\u9009\u9879\uff1a</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC \u652f\u6301 HTTP \u6301\u4e45\u8fde\u63a5 (\u9ed8\u8ba4: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>\u542f\u52a8\u65f6\u91cd\u65b0\u4e3a\u5f53\u524d\u7684 blk000??.dat \u6587\u4ef6\u5efa\u7acb\u7d22\u5f15</translation>\n@@ -3331,10 +3281,6 @@ rpcpassword=%s\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u65e0\u6cd5\u5728\u6b64\u8ba1\u7b97\u673a\u4e0a\u7ed1\u5b9a %s (\u7ed1\u5b9a\u8fd4\u56de\u9519\u8bef %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u4f7f\u7528UPnp\u6620\u5c04\u76d1\u542c\u7aef\u53e3(\u7f3a\u7701: \u76d1\u542c\u72b6\u6001\u8bbe\u4e3a1)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>JSON-RPC \u8fde\u63a5\u7528\u6237\u540d</translation>\n@@ -3347,18 +3293,14 @@ rpcpassword=%s\n         <source>Warning</source>\n         <translation>\u8b66\u544a</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>\u8b66\u544a\uff1a\u4e0d\u652f\u6301\u7684\u53c2\u6570 -benchmark \u5df2\u5ffd\u7565\uff0c\u8bf7\u4f7f\u7528 -debug=bench\u3002</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>\u8b66\u544a\uff1a\u4e0d\u652f\u6301\u7684\u53c2\u6570 -debugnet \u5df2\u5ffd\u7565\uff0c\u8bf7\u4f7f\u7528 -debug=net\u3002</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Zapping all transactions from wallet...</translation>\n     </message>\n+    <message>\n+        <source>ZeroMQ notification options:</source>\n+        <translation>ZeroMQ \u901a\u77e5\u9009\u9879\uff1a</translation>\n+    </message>\n     <message>\n         <source>on startup</source>\n         <translation>\u542f\u52a8\u4e2d</translation>\n@@ -3384,10 +3326,6 @@ rpcpassword=%s\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u91cd\u65b0\u626b\u63cf\u533a\u5757\u94fe\u4ee5\u67e5\u627e\u9057\u6f0f\u7684\u94b1\u5305\u4ea4\u6613</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u4e3a JSON-RPC \u8fde\u63a5\u4f7f\u7528 OpenSSL (https) \u8fde\u63a5</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u672c\u5e2e\u52a9\u4fe1\u606f\n@@ -3433,10 +3371,6 @@ rpcpassword=%s\n         <source>(default: %s)</source>\n         <translation>(\u9ed8\u8ba4: %s) </translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>\u53ef\u63a5\u53d7\u7684\u5bc6\u7801\u7b97\u6cd5 (\u9ed8\u8ba4: %s) </translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat</source>\n         <translation>wallet.dat \u94b1\u5305\u6587\u4ef6\u52a0\u8f7d\u51fa\u9519</translation>\n@@ -3493,14 +3427,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>\u662f\u5426\u8f6c\u53d1 \u975eP2SH\u683c\u5f0f\u7684\u591a\u7b7e\u540d\u4ea4\u6613 (\u9ed8\u8ba4: %u) </translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>\u670d\u52a1\u5668\u8bc1\u4e66\u6587\u4ef6 (\u9ed8\u8ba4: %s) </translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>\u670d\u52a1\u5668\u79c1\u94a5 (\u9ed8\u8ba4: %s) </translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>\u8bbe\u7f6e\u79c1\u94a5\u6c60\u5927\u5c0f\u4e3a &lt;n&gt; (\u9ed8\u8ba4\uff1a%u) </translation>"
      },
      {
        "sha": "4b4c1c687dabbee3971a69bda9469d90cb3c6c4a",
        "filename": "src/qt/locale/bitcoin_zh_HK.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_zh_HK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_zh_HK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_HK.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"zh_HK\" version=\"2.0\">\n+<TS language=\"zh_HK\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     </context>\n@@ -8,6 +8,9 @@\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n+<context>\n+    <name>BanTableModel</name>\n+    </context>\n <context>\n     <name>BitcoinGUI</name>\n     </context>"
      },
      {
        "sha": "8a92be31b586c4cd971245886becd4413bf2baa7",
        "filename": "src/qt/locale/bitcoin_zh_TW.ts",
        "status": "modified",
        "additions": 254,
        "deletions": 155,
        "changes": 409,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_zh_TW.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56953e9bb5a32bc35365d1f0c5de5528c0650dd/src/qt/locale/bitcoin_zh_TW.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_TW.ts?ref=b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "patch": "@@ -1,4 +1,4 @@\n-<TS language=\"zh_TW\" version=\"2.0\">\n+<TS language=\"zh_TW\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n     <message>\n@@ -220,6 +220,17 @@\n         <translation>\u9322\u5305\u5bc6\u78bc\u6539\u6210\u529f\u4e86\u3002</translation>\n     </message>\n </context>\n+<context>\n+    <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>\u7db2\u8def\u4f4d\u5740/\u906e\u7f69</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>\u7981\u6b62\u671f\u9650</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -340,11 +351,11 @@\n     </message>\n     <message>\n         <source>&amp;Send</source>\n-        <translation>\u5df2\u50b3\u9001</translation>\n+        <translation>\u4ed8\u6b3e</translation>\n     </message>\n     <message>\n         <source>&amp;Receive</source>\n-        <translation>\u5df2\u63a5\u6536</translation>\n+        <translation>\u6536\u6b3e</translation>\n     </message>\n     <message>\n         <source>Show information about Bitcoin Core</source>\n@@ -1068,6 +1079,34 @@\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>\u4ee3\u7406\u4f3a\u670d\u5668\u7684\u901a\u8a0a\u57e0(\u50cf\u662f 9050)</translation>\n     </message>\n+    <message>\n+        <source>Used for reaching peers via:</source>\n+        <translation>\u7528\u4f86\u8ddf\u5176\u4ed6\u7bc0\u9ede\u806f\u7d61\u7684\u4e2d\u4ecb:</translation>\n+    </message>\n+    <message>\n+        <source>Shows, if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n+        <translation>\u5982\u679c\u5c0d\u9019\u7a2e\u7db2\u8def\u985e\u578b\uff0c\u6709\u6307\u5b9a\u7528\u4f86\u8ddf\u5176\u4ed6\u7bc0\u9ede\u806f\u7d61\u7684 SOCKS5 \u4ee3\u7406\u4f3a\u670d\u5668\u7684\u8a71\uff0c\u5c31\u6703\u986f\u793a\u5728\u9019\u88e1\u3002</translation>\n+    </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n+    <message>\n+        <source>IPv6</source>\n+        <translation>IPv6</translation>\n+    </message>\n+    <message>\n+        <source>Tor</source>\n+        <translation>Tor</translation>\n+    </message>\n+    <message>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n+        <translation>\u900f\u904e\u53e6\u5916\u7684 SOCKS5 \u4ee3\u7406\u4f3a\u670d\u5668\u4f86\u9023\u7dda\u5230\u4f4d\u5143\u5e63\u7db2\u8def\u4e2d\u7684 Tor \u96b1\u85cf\u670d\u52d9\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</source>\n+        <translation>\u7528\u53e6\u5916\u7684 SOCKS5 \u4ee3\u7406\u4f3a\u670d\u5668\uff0c\u4f86\u900f\u904e Tor \u96b1\u85cf\u670d\u52d9\u8ddf\u5176\u4ed6\u7bc0\u9ede\u806f\u7d61:</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>\u8996\u7a97</translation>\n@@ -1286,10 +1325,6 @@\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>\u4ed8\u6b3e\u8981\u6c42 %1 \u904e\u5927 (%2 \u4f4d\u5143\u7d44, \u4e0a\u9650 %3 \u4f4d\u5143\u7d44).</translation>\n     </message>\n-    <message>\n-        <source>Payment request DoS protection</source>\n-        <translation>\u652f\u4ed8\u8acb\u6c42\u7684\u5206\u4f48\u5f0f\u963b\u65b7\u670d\u52d9\u653b\u64caDoS\u4fdd\u8b77</translation>\n-    </message>\n     <message>\n         <source>Error communicating with %1: %2</source>\n         <translation>\u8ddf %1 \u901a\u8a0a\u6642\u767c\u751f\u932f\u8aa4: %2</translation>\n@@ -1448,20 +1483,28 @@\n     </message>\n     <message>\n         <source>Received</source>\n-        <translation>\u6536\u6b3e</translation>\n+        <translation>\u6536\u5230</translation>\n     </message>\n     <message>\n         <source>Sent</source>\n-        <translation>\u4ed8\u6b3e</translation>\n+        <translation>\u9001\u51fa</translation>\n     </message>\n     <message>\n         <source>&amp;Peers</source>\n         <translation>\u7bc0\u9ede</translation>\n     </message>\n+    <message>\n+        <source>Banned peers</source>\n+        <translation>\u88ab\u7981\u7bc0\u9ede</translation>\n+    </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n         <translation>\u9078\u4e00\u500b\u7bc0\u9ede\u4f86\u770b\u8a73\u7d30\u8cc7\u8a0a</translation>\n     </message>\n+    <message>\n+        <source>Whitelisted</source>\n+        <translation>\u5217\u5728\u767d\u540d\u55ae</translation>\n+    </message>\n     <message>\n         <source>Direction</source>\n         <translation>\u65b9\u5411</translation>\n@@ -1471,20 +1514,24 @@\n         <translation>\u7248\u672c</translation>\n     </message>\n     <message>\n-        <source>User Agent</source>\n-        <translation>\u4f7f\u7528\u8005\u4ee3\u7406</translation>\n+        <source>Starting Block</source>\n+        <translation>\u8d77\u59cb\u5340\u584a</translation>\n     </message>\n     <message>\n-        <source>Services</source>\n-        <translation>\u670d\u52d9</translation>\n+        <source>Synced Headers</source>\n+        <translation>\u5df2\u540c\u6b65\u524d\u5c0e\u8cc7\u6599</translation>\n+    </message>\n+    <message>\n+        <source>Synced Blocks</source>\n+        <translation>\u5df2\u540c\u6b65\u5340\u584a</translation>\n     </message>\n     <message>\n-        <source>Starting Height</source>\n-        <translation>\u8d77\u59cb\u9ad8\u5ea6</translation>\n+        <source>User Agent</source>\n+        <translation>\u4f7f\u7528\u8005\u4ee3\u7406</translation>\n     </message>\n     <message>\n-        <source>Sync Height</source>\n-        <translation>\u540c\u6b65\u9ad8\u5ea6</translation>\n+        <source>Services</source>\n+        <translation>\u670d\u52d9</translation>\n     </message>\n     <message>\n         <source>Ban Score</source>\n@@ -1514,6 +1561,14 @@\n         <source>Ping Time</source>\n         <translation>Ping \u6642\u9593</translation>\n     </message>\n+    <message>\n+        <source>The duration of a currently outstanding ping.</source>\n+        <translation>\u76ee\u524d\u9019\u4e00\u6b21 ping \u5df2\u7d93\u904e\u53bb\u7684\u6642\u9593\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Ping Wait</source>\n+        <translation>Ping \u7b49\u5f85\u6642\u9593</translation>\n+    </message>\n     <message>\n         <source>Time Offset</source>\n         <translation>\u6642\u9593\u5dee</translation>\n@@ -1544,11 +1599,11 @@\n     </message>\n     <message>\n         <source>In:</source>\n-        <translation>\u8f38\u5165:</translation>\n+        <translation>\u4f86:</translation>\n     </message>\n     <message>\n         <source>Out:</source>\n-        <translation>\u8f38\u51fa:</translation>\n+        <translation>\u53bb:</translation>\n     </message>\n     <message>\n         <source>Build date</source>\n@@ -1562,6 +1617,34 @@\n         <source>Clear console</source>\n         <translation>\u6e05\u4e3b\u63a7\u53f0</translation>\n     </message>\n+    <message>\n+        <source>&amp;Disconnect Node</source>\n+        <translation>\u8ddf\u7bc0\u9ede\u65b7\u7dda</translation>\n+    </message>\n+    <message>\n+        <source>Ban Node for</source>\n+        <translation>\u7981\u6b62\u7bc0\u9ede\u9023\u7dda:</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 \u5c0f\u6642</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 \u5929</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 \u661f\u671f</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 \u5e74</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Unban Node</source>\n+        <translation>\u89e3\u7981\u89e3\u9ede\u9023\u7dda</translation>\n+    </message>\n     <message>\n         <source>Welcome to the Bitcoin Core RPC console.</source>\n         <translation>\u6b61\u8fce\u4f7f\u7528\u4f4d\u5143\u5e63\u6838\u5fc3 RPC \u4e3b\u63a7\u53f0\u3002</translation>\n@@ -1590,6 +1673,10 @@\n         <source>%1 GB</source>\n         <translation>%1 GB (\u5341\u5104\u4f4d\u5143\u7d44)</translation>\n     </message>\n+    <message>\n+        <source>(node id: %1)</source>\n+        <translation>(\u7bc0\u9ede\u8b58\u5225\u78bc: %1)</translation>\n+    </message>\n     <message>\n         <source>via %1</source>\n         <translation>\u7d93\u7531 %1</translation>\n@@ -1607,12 +1694,16 @@\n         <translation>\u51fa\u53bb</translation>\n     </message>\n     <message>\n-        <source>Unknown</source>\n-        <translation>\u4e0d\u660e</translation>\n+        <source>Yes</source>\n+        <translation>\u662f</translation>\n+    </message>\n+    <message>\n+        <source>No</source>\n+        <translation>\u5426</translation>\n     </message>\n     <message>\n-        <source>Fetching...</source>\n-        <translation>\u6b63\u5728\u64f7\u53d6\u4e2d...</translation>\n+        <source>Unknown</source>\n+        <translation>\u4e0d\u660e</translation>\n     </message>\n </context>\n <context>\n@@ -1978,10 +2069,6 @@\n         <source>Copy change</source>\n         <translation>\u8907\u88fd\u627e\u96f6\u91d1\u984d</translation>\n     </message>\n-    <message>\n-        <source>Total Amount %1 (= %2)</source>\n-        <translation>\u7e3d\u91d1\u984d %1 (= %2)</translation>\n-    </message>\n     <message>\n         <source>or</source>\n         <translation>\u6216</translation>\n@@ -2018,6 +2105,10 @@\n         <source>Pay only the minimum fee of %1</source>\n         <translation>\u53ea\u4ed8\u6700\u4f4e\u624b\u7e8c\u8cbb %1</translation>\n     </message>\n+    <message>\n+        <source>Total Amount %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</source>\n+        <translation>\u7e3d\u91d1\u984d %1&lt;span style='font-size:10pt;font-weight:normal;'&gt;&lt;br /&gt;(=%2)&lt;/span&gt;</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u6536\u6b3e\u4f4d\u5740\u7121\u6548\u3002\u8acb\u518d\u6aa2\u67e5\u770b\u770b\u3002</translation>\n@@ -2138,7 +2229,7 @@\n     <name>ShutdownWindow</name>\n     <message>\n         <source>Bitcoin Core is shutting down...</source>\n-        <translation>\u4f4d\u5143\u5e63\u6838\u5fc3\u6b63\u5728\u95dc\u9589\u4e2d...</translation>\n+        <translation>\u6b63\u5728\u95dc\u9589\u4f4d\u5143\u5e63\u6838\u5fc3\u4e2d...</translation>\n     </message>\n     <message>\n         <source>Do not shut down the computer until this window disappears.</source>\n@@ -2797,13 +2888,57 @@\n         <translation>\u63a5\u53d7\u6307\u4ee4\u5217\u548c JSON-RPC \u6307\u4ee4\n </translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying (default: %s)</source>\n+        <translation>\u7576\u8655\u7406\u8f49\u767c\u7684\u4ea4\u6613\u6642\uff0c\u5982\u679c\u6bcf\u5343\u4f4d\u5143\u7d44(kB)\u7684\u624b\u7e8c\u8cbb\u6bd4\u9019\u500b\u503c(\u55ae\u4f4d\u662f %s)\u4f4e\uff0c\u5c31\u8996\u70ba\u6c92\u4ed8\u624b\u7e8c\u8cbb(\u9810\u8a2d\u503c: %s)</translation>\n+    </message>\n+    <message>\n+        <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n+        <translation>\u5982\u679c\u6c92\u6709\u63d0\u4f9b &lt;category&gt; \u6216\u662f\u503c\u70ba 1 \u5c31\u6703\u8f38\u51fa\u6240\u6709\u7684\u9664\u932f\u8cc7\u8a0a\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n+        <translation>\u4e00\u6b21\u9322\u5305\u4ea4\u6613\u5141\u8a31\u4ed8\u51fa\u6700\u9ad8\u7684\u7e3d\u624b\u7e8c\u8cbb(\u55ae\u4f4d\u662f %s)\uff1b\u8a2d\u5b9a\u592a\u4f4e\u7684\u8a71\uff0c\u53ef\u80fd\u6703\u7121\u6cd5\u9032\u884c\u8cc7\u6599\u91cf\u5927\u7684\u4ea4\u6613(\u9810\u8a2d\u503c: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n+        <translation>\u8acb\u6aa2\u67e5\u96fb\u8166\u65e5\u671f\u548c\u6642\u9593\u662f\u5426\u6b63\u78ba\uff01\u4f4d\u5143\u5e63\u6838\u5fc3\u6c92\u8fa6\u6cd5\u5728\u6642\u9418\u4e0d\u6e96\u7684\u60c5\u6cc1\u4e0b\u6b63\u5e38\u904b\u4f5c\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>\u8a2d\u5b9a\u7684\u4fee\u526a\u503c\u5c0f\u65bc\u6700\u5c0f\u9700\u6c42\u7684 %d \u767e\u842c\u4f4d\u5143\u7d44(MiB)\u3002\u8acb\u6307\u5b9a\u5927\u4e00\u9ede\u7684\u6578\u5b57\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation>\u4fee\u526a\u6a21\u5f0f\uff1a\u9322\u5305\u7684\u6700\u5f8c\u540c\u6b65\u72c0\u614b\u662f\u5728\u88ab\u4fee\u526a\u6389\u7684\u5340\u584a\u8cc7\u6599\u4e2d\u3002\u4f60\u9700\u8981\u7528 -reindex \u53c3\u6578\u57f7\u884c(\u6703\u91cd\u65b0\u4e0b\u8f09\u6574\u500b\u5340\u584a\u93c8)</translation>\n+    </message>\n+    <message>\n+        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n+        <translation>\u4fee\u526a(\u522a\u9664)\u6389\u8001\u820a\u5340\u584a\u4f86\u6e1b\u5c11\u9700\u8981\u7684\u5132\u5b58\u7a7a\u9593\u3002\u9019\u7a2e\u6a21\u5f0f\u6703\u95dc\u9589\u9322\u5305\u529f\u80fd\uff0c\u4e26\u4e14\u548c -txindex \u53ca -rescan \u53c3\u6578\u4e0d\u76f8\u5bb9\u3002\u8b66\u544a: \u5f9e\u9019\u7a2e\u6a21\u5f0f\u9084\u539f\u6703\u9700\u8981\u91cd\u65b0\u4e0b\u8f09\u4e00\u6574\u500b\u5340\u584a\u93c8\u3002(\u9810\u8a2d\u503c: 0 \u8868\u793a\u4e0d\u4fee\u526a\u5340\u584a\uff0c&gt;%u \u8868\u793a\u70ba\u5340\u584a\u6a94\u6848\u7684\u76ee\u6a19\u5927\u5c0f\uff0c\u55ae\u4f4d\u662f\u767e\u842c\u4f4d\u5143\u7d44 MiB)</translation>\n+    </message>\n+    <message>\n+        <source>Rescans are not possible in pruned mode. You will need to use -reindex which will download the whole blockchain again.</source>\n+        <translation>\u5728\u4fee\u526a\u6a21\u5f0f\u4e0b\u6c92\u8fa6\u6cd5\u91cd\u65b0\u6383\u63cf\u5340\u584a\u93c8\u3002\u4f60\u9700\u8981\u914d\u5408\u4f7f\u7528 -reindex \u53c3\u6578\u4f86\u91cd\u65b0\u4e0b\u8f09\u6574\u500b\u5340\u584a\u93c8\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>\u932f\u8aa4: \u767c\u751f\u4e86\u81f4\u547d\u7684\u5167\u90e8\u932f\u8aa4\uff0c\u8a73\u60c5\u8acb\u770b debug.log</translation>\n+    </message>\n+    <message>\n+        <source>Fee (in %s/kB) to add to transactions you send (default: %s)</source>\n+        <translation>\u4ea4\u6613\u4ed8\u6b3e\u6642\u6bcf\u5343\u4f4d\u5143\u7d44(kB)\u7684\u4ea4\u6613\u624b\u7e8c\u8cbb(\u55ae\u4f4d\u662f %s\uff0c\u9810\u8a2d\u503c: %s)</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>\u6b63\u5728\u4fee\u526a\u5340\u584a\u8cc7\u6599\u5eab\u4e2d...</translation>\n+    </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>\u7528\u8b77\u9748\u6a21\u5f0f\u5728\u80cc\u5f8c\u57f7\u884c\u4e26\u63a5\u53d7\u6307\u4ee4</translation>\n     </message>\n     <message>\n-        <source>Use the test network</source>\n-        <translation>\u4f7f\u7528\u6e2c\u8a66\u7db2\u8def</translation>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>\u7121\u6cd5\u555f\u52d5 HTTP \u4f3a\u670d\u5668\u3002\u8a73\u60c5\u8acb\u770b\u9664\u932f\u7d00\u9304\u3002</translation>\n     </message>\n     <message>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n@@ -2825,18 +2960,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u7576\u9322\u5305\u6709\u4ea4\u6613\u6539\u8b8a\u6642\u8981\u57f7\u884c\u7684\u6307\u4ee4(\u6307\u4ee4\u4e2d\u7684 %s \u6703\u88ab\u53d6\u4ee3\u6210\u4ea4\u6613\u8b58\u5225\u78bc)</translation>\n     </message>\n-    <message>\n-        <source>Maximum total fees to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)</source>\n-        <translation>\u4e00\u6b21\u9322\u5305\u4ea4\u6613\u5141\u8a31\u4ed8\u51fa\u6700\u9ad8\u7684\u7e3d\u624b\u7e8c\u8cbb\uff1b\u8a2d\u5b9a\u592a\u4f4e\u7684\u8a71\uff0c\u53ef\u80fd\u6703\u7121\u6cd5\u9032\u884c\u8cc7\u6599\u91cf\u5927\u7684\u4ea4\u6613(\u9810\u8a2d\u503c: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Reduce storage requirements by pruning (deleting) old blocks. This mode disables wallet support and is incompatible with -txindex. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, &gt;%u = target size in MiB to use for block files)</source>\n-        <translation>\u4fee\u526a(\u522a\u9664)\u6389\u8001\u820a\u5340\u584a\u4f86\u6e1b\u5c11\u5132\u5b58\u7a7a\u9593\u7684\u9700\u6c42\u3002\u9019\u7a2e\u6a21\u5f0f\u6703\u95dc\u9589\u9322\u5305\u529f\u80fd\uff0c\u4e26\u4e14\u548c -txindex \u53c3\u6578\u4e0d\u76f8\u5bb9\u3002\u8b66\u544a: \u5f9e\u9019\u7a2e\u6a21\u5f0f\u9084\u539f\u6703\u9700\u8981\u91cd\u65b0\u4e0b\u8f09\u4e00\u6574\u500b\u5340\u584a\u93c8\u3002(\u9810\u8a2d\u503c: 0 \u8868\u793a\u4e0d\u4fee\u526a\u5340\u584a\uff0c&gt;%u \u8868\u793a\u70ba\u5340\u584a\u6a94\u6848\u7684\u76ee\u6a19\u5927\u5c0f\uff0c\u55ae\u4f4d\u662f\u767e\u842c\u4f4d\u5143\u7d44 MiB)</translation>\n-    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>\u8a2d\u5b9a\u6307\u4ee4\u78bc\u9a57\u8b49\u7684\u57f7\u884c\u7dd2\u6578\u76ee (%u \u5230 %d\uff0c0 \u8868\u793a\u7a0b\u5f0f\u81ea\u52d5\u6c7a\u5b9a\uff0c\u5c0f\u65bc 0 \u8868\u793a\u4fdd\u7559\u8655\u7406\u5668\u6838\u5fc3\u4e0d\u7528\u7684\u6578\u76ee\uff0c\u9810\u8a2d\u503c: %d)</translation>\n     </message>\n+    <message>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n+        <translation>\u5340\u584a\u8cc7\u6599\u5eab\u4e2d\u6709\u4f86\u81ea\u672a\u4f86\u7684\u5340\u584a\u3002\u53ef\u80fd\u662f\u4f60\u96fb\u8166\u7684\u65e5\u671f\u6642\u9593\u4e0d\u5c0d\u3002\u5982\u679c\u78ba\u5b9a\u96fb\u8166\u65e5\u671f\u6642\u9593\u6c92\u932f\u7684\u8a71\uff0c\u5c31\u91cd\u5efa\u5340\u584a\u8cc7\u6599\u5eab\u770b\u770b\u3002</translation>\n+    </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u9019\u662f\u500b\u9084\u6c92\u767c\u8868\u7684\u6e2c\u8a66\u7248\u672c - \u4f7f\u7528\u8acb\u81ea\u8ca0\u98a8\u96aa - \u8acb\u4e0d\u8981\u7528\u4f86\u958b\u63a1\u6216\u5546\u696d\u61c9\u7528</translation>\n@@ -2845,6 +2976,10 @@\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n         <translation>\u6c92\u8fa6\u6cd5\u7e6b\u7d50\u5728\u9019\u53f0\u96fb\u8166\u4e0a\u7684 %s \u3002\u4f4d\u5143\u5e63\u6838\u5fc3\u53ef\u80fd\u5df2\u7d93\u5728\u57f7\u884c\u4e86\u3002</translation>\n     </message>\n+    <message>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n+        <translation>\u662f\u5426\u8981\u4f7f\u7528\u300c\u901a\u7528\u5373\u63d2\u5373\u7528\u300d\u5354\u5b9a(UPnP)\uff0c\u4f86\u8a2d\u5b9a\u807d\u5019\u9023\u7dda\u7684\u901a\u8a0a\u57e0\u7684\u5c0d\u61c9(\u9810\u8a2d\u503c: \u7576\u6709\u807d\u5019\u9023\u7dda\u4e14\u6c92\u6709\u6307\u5b9a -proxy \u53c3\u6578\u6642\u70ba 1)</translation>\n+    </message>\n     <message>\n         <source>WARNING: abnormally high number of blocks generated, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u8b66\u544a: \u6536\u5230\u4e86\u4e0d\u5c0b\u5e38\u5730\u591a\u7684 %d \u500b\u5340\u584a\u5728\u904e\u53bb %d \u5c0f\u6642\u5167\u751f\u7522\u51fa\u4f86(\u9810\u671f\u662f %d \u500b)</translation>\n@@ -2853,10 +2988,6 @@\n         <source>WARNING: check your network connection, %d blocks received in the last %d hours (%d expected)</source>\n         <translation>\u8b66\u544a: \u8acb\u6aa2\u67e5\u4f60\u7684\u7db2\u8def\u9023\u7dda\u72c0\u6cc1\uff0c\u6536\u5230\u4e86 %d \u500b\u5340\u584a\u662f\u5728\u904e\u53bb %d \u5c0f\u6642\u5167\u751f\u7522\u51fa\u4f86(\u9810\u671f\u662f %d \u500b)</translation>\n     </message>\n-    <message>\n-        <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>\u8b66\u544a: -paytxfee \u8a2d\u5b9a\u4e86\u5f88\u9ad8\u7684\u91d1\u984d\uff01\u9019\u53ef\u662f\u4f60\u4ea4\u6613\u4ed8\u6b3e\u6240\u8981\u4ed8\u7684\u624b\u7e8c\u8cbb\u3002</translation>\n-    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>\u8b66\u544a: \u4f4d\u5143\u5e63\u7db2\u8def\u5c0d\u65bc\u5340\u584a\u93c8\u7d50\u7684\u6c7a\u5b9a\u76ee\u524d\u6709\u5206\u6b67\uff01\u770b\u4f86\u6709\u4e9b\u7926\u5de5\u6703\u6709\u554f\u984c\u3002</translation>\n@@ -2865,10 +2996,6 @@\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation>\u8b66\u544a: \u6211\u5011\u548c\u67d0\u4e9b\u9023\u7dda\u7684\u7bc0\u9ede\u5c0d\u65bc\u5340\u584a\u93c8\u7d50\u7684\u6c7a\u5b9a\u4e0d\u540c\uff01\u4f60\u53ef\u80fd\u9700\u8981\u5347\u7d1a\uff0c\u6216\u662f\u9700\u8981\u7b49\u5176\u5b83\u7684\u7bc0\u9ede\u5347\u7d1a\u3002</translation>\n     </message>\n-    <message>\n-        <source>Warning: error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n-        <translation>\u8b66\u544a: \u8b80\u53d6\u9322\u5305\u6a94 wallet.dat \u6642\u767c\u751f\u932f\u8aa4\uff01\u6240\u6709\u7684\u5bc6\u9470\u90fd\u6b63\u78ba\u8b80\u53d6\u4e86\uff0c\u4f46\u662f\u4ea4\u6613\u8cc7\u6599\u6216\u4f4d\u5740\u7c3f\u8cc7\u6599\u53ef\u80fd\u6703\u7f3a\u5c11\u6216\u4e0d\u6b63\u78ba\u3002</translation>\n-    </message>\n     <message>\n         <source>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>\u8b66\u544a: \u9322\u5305\u6a94 wallet.dat \u58de\u6389\uff0c\u4f46\u8cc7\u6599\u88ab\u62ef\u6551\u56de\u4f86\u4e86\uff01\u539f\u4f86\u7684 wallet.dat \u6703\u6539\u5132\u5b58\u5728 %s, \u6a94\u540d\u662f wallet.{timestamp}.bak. \u5982\u679c\u9918\u984d\u6216\u4ea4\u6613\u8cc7\u6599\u6709\u8aa4\uff0c\u4f60\u61c9\u8a72\u8981\u7528\u5099\u4efd\u8cc7\u6599\u5fa9\u539f\u56de\u4f86\u3002</translation>\n@@ -2881,6 +3008,10 @@\n         <source>(default: 1)</source>\n         <translation>(\u9810\u8a2d\u503c: 1)</translation>\n     </message>\n+    <message>\n+        <source>-maxmempool must be at least %d MB</source>\n+        <translation>\u53c3\u6578 -maxmempool \u81f3\u5c11\u8981\u7d66 %d \u767e\u842c\u4f4d\u5143\u7d44(MB)</translation>\n+    </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n         <translation>&lt;category&gt; \u53ef\u4ee5\u662f:</translation>\n@@ -2917,6 +3048,22 @@\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\u4f60\u60f3\u8981\u73fe\u5728\u91cd\u5efa\u5340\u584a\u8cc7\u6599\u5eab\u55ce\uff1f</translation>\n     </message>\n+    <message>\n+        <source>Enable publish hash block in &lt;address&gt;</source>\n+        <translation>\u958b\u555f\u50b3\u9001\u5340\u584a\u96dc\u6e4a\u503c\u5230\u76ee\u6a19 ZeroMQ \u4f4d\u5740 &lt;address&gt; \u53bb</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish hash transaction in &lt;address&gt;</source>\n+        <translation>\u958b\u555f\u50b3\u9001\u4ea4\u6613\u96dc\u6e4a\u503c\u5230\u76ee\u6a19 ZeroMQ \u4f4d\u5740 &lt;address&gt; \u53bb</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw block in &lt;address&gt;</source>\n+        <translation>\u958b\u555f\u50b3\u9001\u5340\u584a\u539f\u59cb\u8cc7\u6599\u5230\u76ee\u6a19 ZeroMQ \u4f4d\u5740 &lt;address&gt; \u53bb</translation>\n+    </message>\n+    <message>\n+        <source>Enable publish raw transaction in &lt;address&gt;</source>\n+        <translation>\u958b\u555f\u50b3\u9001\u4ea4\u6613\u539f\u59cb\u8cc7\u6599\u5230\u76ee\u6a19 ZeroMQ \u4f4d\u5740 &lt;address&gt; \u53bb</translation>\n+    </message>\n     <message>\n         <source>Error initializing block database</source>\n         <translation>\u521d\u59cb\u5316\u5340\u584a\u8cc7\u6599\u5eab\u6642\u767c\u751f\u932f\u8aa4</translation>\n@@ -2933,10 +3080,6 @@\n         <source>Error opening block database</source>\n         <translation>\u6253\u958b\u5340\u584a\u8cc7\u6599\u5eab\u6642\u767c\u751f\u932f\u8aa4</translation>\n     </message>\n-    <message>\n-        <source>Error: A fatal internal error occured, see debug.log for details</source>\n-        <translation>\u932f\u8aa4:\u4e00\u500b\u81f4\u547d\u7684\u5167\u90e8\u932f\u8aa4,\u5230debug.log\u770b\u66f4\u591a\u7d30\u7bc0</translation>\n-    </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n         <translation>\u932f\u8aa4: \u78c1\u789f\u7a7a\u9593\u5f88\u5c11\uff01</translation>\n@@ -2945,10 +3088,6 @@\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>\u5728\u4efb\u610f\u7684\u901a\u8a0a\u57e0\u807d\u5019\u5931\u6557\u3002\u5982\u679c\u4f60\u5e0c\u671b\u9019\u6a23\u7684\u8a71\uff0c\u53ef\u4ee5\u8a2d\u5b9a -listen=0.</translation>\n     </message>\n-    <message>\n-        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n-        <translation>\u5982\u679c\u6c92\u6709\u63d0\u4f9b &lt;category&gt; \u5c31\u6703\u8f38\u51fa\u6240\u6709\u7684\u9664\u932f\u8cc7\u8a0a\u3002</translation>\n-    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>\u6b63\u5728\u532f\u5165\u4e2d...</translation>\n@@ -2961,6 +3100,10 @@\n         <source>Invalid -onion address: '%s'</source>\n         <translation>\u7121\u6548\u7684 -onion \u4f4d\u5740: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Keep the transaction memory pool below &lt;n&gt; megabytes (default: %u)</source>\n+        <translation>\u5728\u8a18\u61b6\u9ad4\u66ab\u5b58\u6c60\u4e2d\u4fdd\u6301\u6700\u591a &lt;n&gt; \u500b\u767e\u842c\u4f4d\u5143\u7d44\u7684\u4ea4\u6613(\u9810\u8a2d\u503c: %u)</translation>\n+    </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n         <translation>\u6a94\u6848\u63cf\u8ff0\u5143\u4e0d\u8db3\u3002</translation>\n@@ -2989,6 +3132,22 @@\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u6307\u5b9a\u9322\u5305\u6a94(\u6703\u5728\u8cc7\u6599\u76ee\u9304\u4e2d)</translation>\n     </message>\n+    <message>\n+        <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n+        <translation>\u5ffd\u7565\u4e86\u4e0d\u518d\u652f\u63f4\u7684 -benchmark \u53c3\u6578\uff0c\u8acb\u6539\u7528 -debug=bench</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -debugnet ignored, use -debug=net.</source>\n+        <translation>\u5ffd\u7565\u4e86\u4e0d\u518d\u652f\u63f4\u7684 -debugnet \u53c3\u6578\uff0c\u8acb\u6539\u7528 -debug=net</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -tor found, use -onion.</source>\n+        <translation>\u627e\u5230\u4e0d\u518d\u652f\u63f4\u7684 -tor \u53c3\u6578\uff0c\u8acb\u6539\u7528 -onion \u53c3\u6578\u3002</translation>\n+    </message>\n+    <message>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation>\u4f7f\u7528\u8005\u4ee3\u7406\u8a3b\u89e3(%s)\u4e2d\u542b\u6709\u4e0d\u5b89\u5168\u7684\u5b57\u5143\u3002</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u6b63\u5728\u9a57\u8b49\u5340\u584a\u8cc7\u6599...</translation>\n@@ -3021,10 +3180,6 @@\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation>\u5141\u8a31\u6307\u5b9a\u7684\u4f86\u6e90\u5efa\u7acb JSON-RPC \u9023\u7dda\u3002&lt;ip&gt; \u7684\u6709\u6548\u503c\u53ef\u4ee5\u662f\u4e00\u500b\u55ae\u7368\u4f4d\u5740(\u50cf\u662f 1.2.3.4)\uff0c\u4e00\u500b\u7db2\u6bb5/\u7db2\u6bb5\u7f69\u906e\u503c(\u50cf\u662f 1.2.3.4/255.255.255.0)\uff0c\u6216\u662f\u7db2\u6bb5/CIDR\u503c(\u50cf\u662f 1.2.3.4/24)\u3002\u9019\u500b\u9078\u9805\u53ef\u4ee5\u8a2d\u5b9a\u591a\u6b21\u3002</translation>\n     </message>\n-    <message>\n-        <source>An error occurred while setting up the RPC address %s port %u for listening: %s</source>\n-        <translation>\u8a2d\u5b9a\u5728\u7db2\u8def\u4e0a\u4ee5\u4f4d\u5740 %s \u548c\u901a\u8a0a\u57e0 %u \u807d\u5019 RPC \u9023\u7dda\u6642\u767c\u751f\u932f\u8aa4: %s</translation>\n-    </message>\n     <message>\n         <source>Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6</source>\n         <translation>\u548c\u6307\u5b9a\u7684\u4f4d\u5740\u7e6b\u7d50\uff0c\u4e26\u4e14\u628a\u9023\u7dda\u904e\u4f86\u7684\u7bc0\u9ede\u653e\u9032\u767d\u540d\u55ae\u3002IPv6 \u8acb\u7528 [\u4e3b\u6a5f]:\u901a\u8a0a\u57e0 \u9019\u7a2e\u683c\u5f0f</translation>\n@@ -3049,18 +3204,10 @@\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>\u932f\u8aa4: \u807d\u5019\u5916\u4f86\u9023\u7dda\u5931\u6557(\u56de\u50b3\u932f\u8aa4 %s)</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n-        <translation>\u932f\u8aa4: \u627e\u5230\u4e0d\u518d\u652f\u63f4\u7684 -socks \u53c3\u6578\u3002\u73fe\u5728\u53ea\u652f\u63f4 SOCKS5 \u5354\u5b9a\u7684\u4ee3\u7406\u4f3a\u670d\u5668\u4e86\uff0c\u56e0\u70ba\u4e0d\u518d\u80fd\u5920\u6307\u5b9a SOCKS \u5354\u5b9a\u7248\u672c\u3002</translation>\n-    </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>\u7576\u6536\u5230\u76f8\u95dc\u8b66\u793a\uff0c\u6216\u767c\u73fe\u76f8\u7576\u9577\u7684\u5206\u652f\u6642\uff0c\u6240\u8981\u57f7\u884c\u7684\u6307\u4ee4(\u6307\u4ee4\u4e2d\u7684 %s \u6703\u88ab\u53d6\u4ee3\u6210\u8b66\u793a\u8a0a\u606f)</translation>\n     </message>\n-    <message>\n-        <source>Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)</source>\n-        <translation>\u7576\u8655\u7406\u8f49\u767c\u7684\u4ea4\u6613\u6642\uff0c\u5982\u679c\u6bcf\u5343\u4f4d\u5143\u7d44(Kb)\u7684\u624b\u7e8c\u8cbb\u6bd4\u9019\u500b\u503c\u4f4e\uff0c\u5c31\u8996\u70ba\u6c92\u4ed8\u624b\u7e8c\u8cbb (\u9810\u8a2d\u503c: %s)</translation>\n-    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>\u7576\u6c92\u6709\u8a2d\u5b9a paytxfee \u6642\uff0c\u81ea\u52d5\u5305\u542b\u53ef\u4ee5\u8b93\u4ea4\u6613\u80fd\u5728\u5e73\u5747 n \u500b\u5340\u584a\u5167\u958b\u59cb\u78ba\u8a8d\u7684\u624b\u7e8c\u8cbb(\u9810\u8a2d\u503c: %u)</translation>\n@@ -3073,10 +3220,6 @@\n         <source>Maximum size of data in data carrier transactions we relay and mine (default: %u)</source>\n         <translation>\u8f49\u767c\u548c\u958b\u63a1\u6642\uff0c\u5c0d\u53ea\u5e36\u8cc7\u6599\u7684\u4ea4\u6613\u7684\u5927\u5c0f\u4e0a\u9650(\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n-    <message>\n-        <source>Prune configured below the minimum of %d MB.  Please use a higher number.</source>\n-        <translation>\u8a2d\u5b9a\u7684\u4fee\u526a\u503c\u5c0f\u65bc\u6700\u5c0f\u9700\u6c42\u7684 %d MB. \u8acb\u6307\u5b9a\u5927\u4e00\u9ede\u7684\u6578\u5b57\u3002</translation>\n-    </message>\n     <message>\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)</source>\n         <translation>\u662f\u5426\u5141\u8a31\u5728\u7bc0\u9ede\u4f4d\u5740\u6578\u76ee\u4e0d\u8db3\u6642\uff0c\u4f7f\u7528\u57df\u540d\u67e5\u8a62\u4f86\u641c\u5c0b\u7bc0\u9ede (\u9810\u8a2d\u503c: \u7576\u6c92\u7528 -connect \u6642\u70ba 1)</translation>\n@@ -3101,38 +3244,6 @@\n         <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit &lt;https://www.openssl.org/&gt; and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n         <translation>\u6b64\u7522\u54c1\u4e5f\u5305\u542b\u4e86\u7531 OpenSSL Project \u6240\u958b\u767c\u7684 OpenSSL Toolkit \u8edf\u9ad4 &lt;https://www.openssl.org/&gt;, \u548c\u7531 Eric Young \u64b0\u5beb\u7684\u52a0\u89e3\u5bc6\u8edf\u9ad4\uff0c\u4ee5\u53ca\u7531 Thomas Bernard \u6240\u64b0\u5beb\u7684 UPnP \u8edf\u9ad4\u3002</translation>\n     </message>\n-    <message>\n-        <source>To use bitcoind, or the -server option to bitcoin-qt, you must set an rpcpassword in the configuration file:\n-%s\n-It is recommended you use the following random password:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(you do not need to remember this password)\n-The username and password MUST NOT be the same.\n-If the file does not exist, create it with owner-readable-only file permissions.\n-It is also recommended to set alertnotify so you are notified of problems;\n-for example: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</source>\n-        <translation>\u8981\u4f7f\u7528 bitcoind, \u6216\u662f\u5c0d bitcoin-qt \u6307\u5b9a -server \u9078\u9805\uff0c\u4f60\u5fc5\u9808\u8981\u5728\u4ee5\u4e0b\u8a2d\u5b9a\u6a94\u4e2d\u8a2d\u5b9a RPC \u5bc6\u78bc(\u9078\u9805: rpcpassword):\n-%s\n-\u5efa\u8b70\u4f60\u4f7f\u7528\u4ee5\u4e0b\u96a8\u6a5f\u7522\u751f\u7684\u5bc6\u78bc:\n-rpcuser=bitcoinrpc\n-rpcpassword=%s\n-(\u4f60\u4e0d\u7528\u8a18\u4f4f\u9019\u500b\u5bc6\u78bc)\n-\u6ce8\u610f\u4f7f\u7528\u8005\u540d\u7a31(rpcuser)\u548c\u5bc6\u78bc(rpcpassword)\u4e0d\u53ef\u4ee5\u76f8\u540c\uff01\n-\u5982\u679c\u8a2d\u5b9a\u6a94\u9084\u4e0d\u5b58\u5728\uff0c\u8acb\u5728\u65b0\u589e\u6642\uff0c\u8a2d\u5b9a\u6a94\u6848\u6b0a\u9650\u70ba\"\u53ea\u6709\u4e3b\u4eba\u624d\u80fd\u8b80\u53d6\"\u3002\n-\u4e5f\u5efa\u8b70\u4f60\u8a2d\u5b9a\u8b66\u793a\u901a\u77e5\uff0c\u9019\u6a23\u767c\u751f\u554f\u984c\u6642\u4f60\u624d\u6703\u88ab\u901a\u77e5\u5230\uff1b\n-\u6bd4\u5982\u8aaa\u8a2d\u5b9a: alertnotify=echo %%s | mail -s \"Bitcoin Alert\" admin@foo.com\n-</translation>\n-    </message>\n-    <message>\n-        <source>Warning: -maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n-        <translation>\u8b66\u544a: -maxtxfee \u8a2d\u5b9a\u4e86\u5f88\u9ad8\u7684\u91d1\u984d\uff01\u9019\u53ef\u662f\u4e00\u6b21\u4ea4\u6613\u5c31\u6709\u53ef\u80fd\u4ed8\u51fa\u7684\u6700\u9ad8\u624b\u7e8c\u8cbb\u3002</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin Core will not work properly.</source>\n-        <translation>\u8b66\u544a: \u8acb\u6aa2\u67e5\u96fb\u8166\u65e5\u671f\u548c\u6642\u9593\u662f\u5426\u6b63\u78ba\uff01\u4f4d\u5143\u5e63\u6838\u5fc3\u6c92\u8fa6\u6cd5\u5728\u6642\u9418\u4e0d\u6e96\u7684\u60c5\u6cc1\u4e0b\u6b63\u5e38\u904b\u4f5c\u3002</translation>\n-    </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation>\u5728\u767d\u540d\u55ae\u4e2d\u7684\u7bc0\u9ede\u4e0d\u6703\u56e0\u70ba\u5075\u6e2c\u5230\u963b\u65b7\u670d\u52d9\u653b\u64ca\u800c\u88ab\u505c\u7528\u3002\u4f86\u81ea\u9019\u4e9b\u7bc0\u9ede\u7684\u4ea4\u6613\u4e5f\u4e00\u5b9a\u6703\u88ab\u8f49\u767c\uff0c\u5373\u4f7f\u8aaa\u4ea4\u6613\u672c\u4f86\u5c31\u5728\u8a18\u61b6\u6c60\u88e1\u4e86\u4e5f\u4e00\u6a23\u3002\u9069\u7528\u65bc\u50cf\u662f\u9598\u9053\u4f3a\u670d\u5668\u3002</translation>\n@@ -3153,10 +3264,6 @@ rpcpassword=%s\n         <source>Activating best chain...</source>\n         <translation>\u555f\u7528\u6700\u4f73\u93c8\u7d50...</translation>\n     </message>\n-    <message>\n-        <source>Can't run with a wallet in prune mode.</source>\n-        <translation>\u4e0d\u80fd\u5728\u6709\u9322\u5305\u6642\u57f7\u884c\u4fee\u526a\u6a21\u5f0f\u3002</translation>\n-    </message>\n     <message>\n         <source>Cannot resolve -whitebind address: '%s'</source>\n         <translation>\u6c92\u8fa6\u6cd5\u89e3\u6790 -whitebind \u6307\u5b9a\u7684\u4f4d\u5740: '%s'</translation>\n@@ -3173,10 +3280,6 @@ rpcpassword=%s\n         <source>Copyright (C) 2009-%i The Bitcoin Core Developers</source>\n         <translation>\u7248\u6b0a\u70ba\u4f4d\u5143\u5e63\u6838\u5fc3\u958b\u767c\u4eba\u54e1\u81ea\u897f\u5143 2009 \u81f3 %i \u5e74\u8d77\u6240\u6709</translation>\n     </message>\n-    <message>\n-        <source>Could not parse -rpcbind value %s as network address</source>\n-        <translation>\u6c92\u8fa6\u6cd5\u89e3\u6790 -rpcbind \u53c3\u6578\u503c %s \u70ba\u7db2\u8def\u4f4d\u5740</translation>\n-    </message>\n     <message>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin Core</source>\n         <translation>\u8f09\u5165 wallet.dat \u6a94\u6848\u6642\u767c\u751f\u932f\u8aa4: \u9019\u500b\u9322\u5305\u9700\u8981\u65b0\u7248\u7684\u4f4d\u5143\u5e63\u6838\u5fc3</translation>\n@@ -3185,14 +3288,6 @@ rpcpassword=%s\n         <source>Error reading from database, shutting down.</source>\n         <translation>\u8b80\u53d6\u8cc7\u6599\u5eab\u6642\u767c\u751f\u932f\u8aa4\uff0c\u8981\u95dc\u9589\u4e86\u3002</translation>\n     </message>\n-    <message>\n-        <source>Error: Unsupported argument -tor found, use -onion.</source>\n-        <translation>\u932f\u8aa4: \u627e\u5230\u4e0d\u518d\u652f\u63f4\u7684 -tor \u53c3\u6578\uff0c\u8acb\u6539\u7528 -onion \u53c3\u6578\u3002</translation>\n-    </message>\n-    <message>\n-        <source>Fee (in BTC/kB) to add to transactions you send (default: %s)</source>\n-        <translation>\u4ea4\u6613\u4ed8\u6b3e\u6642\u6bcf\u5343\u4f4d\u5143\u7d44(kB)\u7684\u4ea4\u6613\u624b\u7e8c\u8cbb (\u9810\u8a2d\u503c: %s)</translation>\n-    </message>\n     <message>\n         <source>Information</source>\n         <translation>\u8cc7\u8a0a</translation>\n@@ -3233,22 +3328,22 @@ rpcpassword=%s\n         <source>Node relay options:</source>\n         <translation>\u7bc0\u9ede\u8f49\u767c\u9078\u9805:</translation>\n     </message>\n-    <message>\n-        <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>RPC SSL \u9078\u9805: (SSL \u8a2d\u5b9a\u7a0b\u5e8f\u8acb\u898b Bitcoin Wiki)</translation>\n-    </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC \u4f3a\u670d\u5668\u9078\u9805:</translation>\n     </message>\n-    <message>\n-        <source>RPC support for HTTP persistent connections (default: %d)</source>\n-        <translation>RPC \u662f\u5426\u652f\u63f4 HTTP \u6301\u4e45\u9023\u7dda(\u9810\u8a2d\u503c: %d)</translation>\n-    </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n         <translation>\u555f\u52d5\u6642\u5f9e\u76ee\u524d\u7684\u5340\u584a\u6a94 blk000??.dat \u91cd\u5efa\u5340\u584a\u93c8\u7684\u7d22\u5f15</translation>\n     </message>\n+    <message>\n+        <source>Receive and display P2P network alerts (default: %u)</source>\n+        <translation>\u63a5\u6536\u4e26\u986f\u793a\u5c0d\u7b49\u7db2\u8def(P2P)\u8b66\u793a (\u9810\u8a2d\u503c: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n+        <translation>\u56e0\u70ba\u7cfb\u7d71\u7684\u9650\u5236\uff0c\u5c07 -maxconnections \u53c3\u6578\u5f9e %d \u964d\u5230\u4e86 %d</translation>\n+    </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u5728\u7d42\u7aef\u6a5f\u986f\u793a\u8ffd\u8e64\u6216\u9664\u932f\u8cc7\u8a0a\uff0c\u800c\u4e0d\u662f\u5beb\u5230\u6a94\u6848 debug.log \u4e2d</translation>\n@@ -3317,10 +3412,6 @@ rpcpassword=%s\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>\u7121\u6cd5\u548c\u9019\u53f0\u96fb\u8166\u4e0a\u7684 %s \u7e6b\u7d50(\u56de\u50b3\u932f\u8aa4 %s)</translation>\n     </message>\n-    <message>\n-        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n-        <translation>\u662f\u5426\u8981\u4f7f\u7528\u300c\u901a\u7528\u5373\u63d2\u5373\u7528\u300d\u5354\u5b9a(UPnP)\uff0c\u4f86\u8a2d\u5b9a\u807d\u5019\u9023\u7dda\u7684\u901a\u8a0a\u57e0\u7684\u5c0d\u61c9(\u9810\u8a2d\u503c: \u7576\u6709\u807d\u5019\u9023\u7dda\u6642\u70ba 1)</translation>\n-    </message>\n     <message>\n         <source>Username for JSON-RPC connections</source>\n         <translation>JSON-RPC \u9023\u7dda\u4f7f\u7528\u8005\u540d\u7a31</translation>\n@@ -3333,18 +3424,14 @@ rpcpassword=%s\n         <source>Warning</source>\n         <translation>\u8b66\u544a</translation>\n     </message>\n-    <message>\n-        <source>Warning: Unsupported argument -benchmark ignored, use -debug=bench.</source>\n-        <translation>\u8b66\u544a: \u5ffd\u7565\u4e86\u4e0d\u518d\u652f\u63f4\u7684 -benchmark \u53c3\u6578\uff0c\u8acb\u6539\u7528 -debug=bench.</translation>\n-    </message>\n-    <message>\n-        <source>Warning: Unsupported argument -debugnet ignored, use -debug=net.</source>\n-        <translation>\u8b66\u544a: \u5ffd\u7565\u4e86\u4e0d\u518d\u652f\u63f4\u7684 -debugnet \u53c3\u6578\uff0c\u8acb\u6539\u7528 -debug=net.</translation>\n-    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>\u6b63\u5728\u780d\u6389\u9322\u5305\u4e2d\u7684\u6240\u6709\u4ea4\u6613...</translation>\n     </message>\n+    <message>\n+        <source>ZeroMQ notification options:</source>\n+        <translation>ZeroMQ \u901a\u77e5\u9078\u9805:</translation>\n+    </message>\n     <message>\n         <source>on startup</source>\n         <translation>\u7576\u555f\u52d5\u6642</translation>\n@@ -3369,10 +3456,6 @@ rpcpassword=%s\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>\u91cd\u65b0\u6383\u63cf\u5340\u584a\u93c8\uff0c\u4f86\u5c0b\u627e\u9322\u5305\u53ef\u80fd\u6f0f\u6389\u7684\u4ea4\u6613\u3002</translation>\n     </message>\n-    <message>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>\u5728 JSON-RPC \u9023\u7dda\u4f7f\u7528 OpenSSL (https)</translation>\n-    </message>\n     <message>\n         <source>This help message</source>\n         <translation>\u9019\u4e9b\u8aaa\u660e\u8a0a\u606f</translation>\n@@ -3393,6 +3476,22 @@ rpcpassword=%s\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 \u8868\u793a\u4fdd\u7559\u4ea4\u6613\u63cf\u8ff0\u8cc7\u6599\uff0c\u50cf\u662f\u5e33\u6236\u4f7f\u7528\u8005\u548c\u4ed8\u6b3e\u8acb\u6c42\u8cc7\u8a0a\uff1b2 \u8868\u793a\u4e1f\u6389\u4ea4\u6613\u63cf\u8ff0\u8cc7\u6599)</translation>\n     </message>\n+    <message>\n+        <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n+        <translation>\u53c3\u6578 -maxtxfee \u8a2d\u5b9a\u4e86\u5f88\u9ad8\u7684\u91d1\u984d\uff01\u9019\u53ef\u662f\u4f60\u4e00\u6b21\u4ea4\u6613\u5c31\u6709\u53ef\u80fd\u4ed8\u51fa\u7684\u6700\u9ad8\u624b\u7e8c\u8cbb\u3002</translation>\n+    </message>\n+    <message>\n+        <source>-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>\u53c3\u6578 -paytxfee \u8a2d\u5b9a\u4e86\u5f88\u9ad8\u7684\u91d1\u984d\uff01\u9019\u53ef\u662f\u4f60\u4ea4\u6613\u4ed8\u6b3e\u6642\u6240\u8981\u4ed8\u7684\u624b\u7e8c\u8cbb\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Do not keep transactions in the mempool longer than &lt;n&gt; hours (default: %u)</source>\n+        <translation>\u4e0d\u8981\u8b93\u4ea4\u6613\u7559\u5728\u8a18\u61b6\u9ad4\u66ab\u5b58\u6c60\u4e2d\u8d85\u904e &lt;n&gt; \u500b\u5c0f\u6642(\u9810\u8a2d\u503c: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Error reading wallet.dat! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>\u8b80\u53d6\u9322\u5305\u6a94 wallet.dat \u6642\u767c\u751f\u932f\u8aa4\uff01\u6240\u6709\u7684\u5bc6\u9470\u90fd\u6b63\u78ba\u8b80\u53d6\u4e86\uff0c\u4f46\u662f\u4ea4\u6613\u8cc7\u6599\u6216\u4f4d\u5740\u7c3f\u8cc7\u6599\u53ef\u80fd\u6703\u7f3a\u5c11\u6216\u4e0d\u6b63\u78ba\u3002</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>\u4f7f\u7528 -checkblocks \u6aa2\u67e5\u5340\u584a\u7684\u4ed4\u7d30\u7a0b\u5ea6(0 \u5230 4\uff0c\u9810\u8a2d\u503c: %u)</translation>\n@@ -3409,18 +3508,26 @@ rpcpassword=%s\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>\u8f38\u51fa\u9664\u932f\u8cc7\u8a0a(\u9810\u8a2d\u503c: %u, \u4e0d\u4e00\u5b9a\u8981\u6307\u5b9a &lt;category&gt;)</translation>\n     </message>\n+    <message>\n+        <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n+        <translation>\u7db2\u8def\u7248\u672c\u5b57\u4e32\u7684\u7e3d\u9577\u5ea6(%i)\u8d85\u904e\u6700\u5927\u9577\u5ea6(%i)\u4e86\u3002\u8acb\u6e1b\u5c11 uacomment \u53c3\u6578\u7684\u6578\u76ee\u6216\u9577\u5ea6\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)</source>\n+        <translation>\u8a66\u8457\u4fdd\u6301\u8f38\u51fa\u6d41\u91cf\u5728\u76ee\u6a19\u503c\u4ee5\u4e0b\uff0c\u55ae\u4f4d\u662f\u6bcf 24 \u5c0f\u6642\u7684\u767e\u842c\u4f4d\u5143\u7d44(MiB)\u6578\uff0c0 \u8868\u793a\u6c92\u6709\u9650\u5236(\u9810\u8a2d\u503c: %d)</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.</source>\n+        <translation>\u627e\u5230\u4e0d\u518d\u652f\u63f4\u7684 -socks \u53c3\u6578\u3002\u73fe\u5728\u53ea\u652f\u63f4 SOCKS5 \u5354\u5b9a\u7684\u4ee3\u7406\u4f3a\u670d\u5668\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u6307\u5b9a SOCKS \u5354\u5b9a\u7248\u672c\u4e86\u3002</translation>\n+    </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: %s)</source>\n-        <translation>\u4f7f\u7528\u53e6\u5916\u7684 SOCK5 \u4ee3\u7406\u4f3a\u670d\u5668\uff0c\u4f86\u900f\u904e Tor \u96b1\u85cf\u670d\u52d9\u8ddf\u7bc0\u9ede\u806f\u7e6b(\u9810\u8a2d\u503c: %s)</translation>\n+        <translation>\u4f7f\u7528\u53e6\u5916\u7684 SOCK5 \u4ee3\u7406\u4f3a\u670d\u5668\uff0c\u4f86\u900f\u904e Tor \u96b1\u85cf\u670d\u52d9\u8ddf\u5176\u4ed6\u7bc0\u9ede\u806f\u7d61(\u9810\u8a2d\u503c: %s)</translation>\n     </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(\u9810\u8a2d\u503c: %s)</translation>\n     </message>\n-    <message>\n-        <source>Acceptable ciphers (default: %s)</source>\n-        <translation>\u53ef\u4ee5\u63a5\u53d7\u7684\u52a0\u5bc6\u6f14\u7b97\u6cd5(\u9810\u8a2d\u503c: %s)</translation>\n-    </message>\n     <message>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation>\u662f\u5426\u4e00\u5b9a\u8981\u7528\u57df\u540d\u67e5\u8a62\u4f86\u641c\u5c0b\u7bc0\u9ede(\u9810\u8a2d\u503c: %u)</translation>\n@@ -3481,14 +3588,6 @@ rpcpassword=%s\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>\u5141\u8a31\u8f49\u767c\u975e P2SH \u7684\u591a\u7c3d\u7ae0\u4ea4\u6613(\u9810\u8a2d\u503c: %u)</translation>\n     </message>\n-    <message>\n-        <source>Server certificate file (default: %s)</source>\n-        <translation>\u4f3a\u670d\u5668\u6191\u8b49\u6a94(\u9810\u8a2d\u503c: %s)</translation>\n-    </message>\n-    <message>\n-        <source>Server private key (default: %s)</source>\n-        <translation>\u4f3a\u670d\u5668\u5bc6\u9470\u6a94(\u9810\u8a2d\u503c: %s)</translation>\n-    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>\u8a2d\u5b9a\u5bc6\u9470\u6c60\u5927\u5c0f\u70ba &lt;n&gt; (\u9810\u8a2d\u503c: %u)</translation>"
      }
    ]
  },
  {
    "sha": "8f4e67f152a9625a1c66c20de00679286b2c187c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjRlNjdmMTUyYTk2MjVhMWM2NmMyMGRlMDA2NzkyODZiMmMxODdj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-25T18:12:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T16:29:56Z"
      },
      "message": "net: Automatically create hidden service, listen on Tor\n\nStarting with Tor version 0.2.7.1 it is possible, through Tor's control socket\nAPI, to create and destroy 'ephemeral' hidden services programmatically.\nhttps://stem.torproject.org/api/control.html#stem.control.Controller.create_ephemeral_hidden_service\n\nThis means that if Tor is running (and proper authorization is available),\nbitcoin automatically creates a hidden service to listen on, without user\nmanual configuration. This will positively affect the number of available\n.onion nodes.\n\n- When the node is started, connect to Tor through control socket\n- Send `ADD_ONION` command\n- First time:\n    - Make it create a hidden service key\n    - Save the key in the data directory for later usage\n- Make it redirect port 8333 to the local port 8333 (or whatever port we're listening on).\n- Keep control socket connection open for as long node is running. The hidden service will\n  (by default) automatically go away when the connection is closed.",
      "tree": {
        "sha": "69a6b3f08d8dc830139ed169858be5f75dd20206",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69a6b3f08d8dc830139ed169858be5f75dd20206"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f4e67f152a9625a1c66c20de00679286b2c187c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f4e67f152a9625a1c66c20de00679286b2c187c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f4e67f152a9625a1c66c20de00679286b2c187c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f4e67f152a9625a1c66c20de00679286b2c187c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b56953e9bb5a32bc35365d1f0c5de5528c0650dd"
      }
    ],
    "stats": {
      "total": 615,
      "additions": 611,
      "deletions": 4
    },
    "files": [
      {
        "sha": "c96541d22edb8c33ed2bc90c9a09fed51f54df00",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f4e67f152a9625a1c66c20de00679286b2c187c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f4e67f152a9625a1c66c20de00679286b2c187c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=8f4e67f152a9625a1c66c20de00679286b2c187c",
        "patch": "@@ -149,6 +149,7 @@ BITCOIN_CORE_H = \\\n   threadsafety.h \\\n   timedata.h \\\n   tinyformat.h \\\n+  torcontrol.h \\\n   txdb.h \\\n   txmempool.h \\\n   ui_interface.h \\\n@@ -206,6 +207,7 @@ libbitcoin_server_a_SOURCES = \\\n   rpcserver.cpp \\\n   script/sigcache.cpp \\\n   timedata.cpp \\\n+  torcontrol.cpp \\\n   txdb.cpp \\\n   txmempool.cpp \\\n   validationinterface.cpp \\"
      },
      {
        "sha": "77837f85c39d0cbf0b73dfab68c1011817b17764",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f4e67f152a9625a1c66c20de00679286b2c187c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f4e67f152a9625a1c66c20de00679286b2c187c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8f4e67f152a9625a1c66c20de00679286b2c187c",
        "patch": "@@ -28,6 +28,7 @@\n #include \"scheduler.h\"\n #include \"txdb.h\"\n #include \"txmempool.h\"\n+#include \"torcontrol.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n@@ -187,6 +188,7 @@ void Shutdown()\n #endif\n     GenerateBitcoins(false, 0, Params());\n     StopNode();\n+    StopTorControl();\n     UnregisterNodeSignals(GetNodeSignals());\n \n     if (fFeeEstimatesInitialized)\n@@ -347,6 +349,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-externalip=<ip>\", _(\"Specify your own public address\"));\n     strUsage += HelpMessageOpt(\"-forcednsseed\", strprintf(_(\"Always query for peer addresses via DNS lookup (default: %u)\"), 0));\n     strUsage += HelpMessageOpt(\"-listen\", _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\"));\n+    strUsage += HelpMessageOpt(\"-listenonion\", strprintf(_(\"Automatically create Tor hidden service (default: %d)\"), DEFAULT_LISTEN_ONION));\n     strUsage += HelpMessageOpt(\"-maxconnections=<n>\", strprintf(_(\"Maintain at most <n> connections to peers (default: %u)\"), DEFAULT_MAX_PEER_CONNECTIONS));\n     strUsage += HelpMessageOpt(\"-maxreceivebuffer=<n>\", strprintf(_(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\"), 5000));\n     strUsage += HelpMessageOpt(\"-maxsendbuffer=<n>\", strprintf(_(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\"), 1000));\n@@ -358,6 +361,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), 1));\n     strUsage += HelpMessageOpt(\"-seednode=<ip>\", _(\"Connect to a node to retrieve peer addresses, and disconnect\"));\n     strUsage += HelpMessageOpt(\"-timeout=<n>\", strprintf(_(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"), DEFAULT_CONNECT_TIMEOUT));\n+    strUsage += HelpMessageOpt(\"-torcontrol=<ip>:<port>\", strprintf(_(\"Tor control port to use if onion listening enabled (default: %s)\"), DEFAULT_TOR_CONTROL));\n #ifdef USE_UPNP\n #if USE_UPNP\n     strUsage += HelpMessageOpt(\"-upnp\", _(\"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\"));\n@@ -777,6 +781,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n         if (SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -discover=0\\n\", __func__);\n+        if (SoftSetBoolArg(\"-listenonion\", false))\n+            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -listenonion=0\\n\", __func__);\n     }\n \n     if (mapArgs.count(\"-externalip\")) {\n@@ -1567,6 +1573,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n #endif\n \n+    if (GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n+        StartTorControl(threadGroup, scheduler);\n+\n     StartNode(threadGroup, scheduler);\n \n     // Monitor the chain, and alert if we get blocks much quicker or slower than expected"
      },
      {
        "sha": "8afb7ddcddc83ca0f86dfb0e2d039f840907b27c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f4e67f152a9625a1c66c20de00679286b2c187c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f4e67f152a9625a1c66c20de00679286b2c187c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8f4e67f152a9625a1c66c20de00679286b2c187c",
        "patch": "@@ -4038,9 +4038,11 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 CAddress addr = GetLocalAddress(&pfrom->addr);\n                 if (addr.IsRoutable())\n                 {\n+                    LogPrintf(\"ProcessMessages: advertizing address %s\\n\", addr.ToString());\n                     pfrom->PushAddress(addr);\n                 } else if (IsPeerAddrLocalGood(pfrom)) {\n                     addr.SetIP(pfrom->addrLocal);\n+                    LogPrintf(\"ProcessMessages: advertizing address %s\\n\", addr.ToString());\n                     pfrom->PushAddress(addr);\n                 }\n             }"
      },
      {
        "sha": "9d01f2557edecb9ab5c111c21962069ab863f525",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f4e67f152a9625a1c66c20de00679286b2c187c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f4e67f152a9625a1c66c20de00679286b2c187c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=8f4e67f152a9625a1c66c20de00679286b2c187c",
        "patch": "@@ -216,6 +216,7 @@ void AdvertizeLocal(CNode *pnode)\n         }\n         if (addrLocal.IsRoutable())\n         {\n+            LogPrintf(\"AdvertizeLocal: advertizing address %s\\n\", addrLocal.ToString());\n             pnode->PushAddress(addrLocal);\n         }\n     }"
      },
      {
        "sha": "83cedfb620e1a4feeaaa20320f1a88e2d05f322f",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f4e67f152a9625a1c66c20de00679286b2c187c/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f4e67f152a9625a1c66c20de00679286b2c187c/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=8f4e67f152a9625a1c66c20de00679286b2c187c",
        "patch": "@@ -227,10 +227,7 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n-/**\n- * Convert milliseconds to a struct timeval for select.\n- */\n-struct timeval static MillisToTimeval(int64_t nTimeout)\n+struct timeval MillisToTimeval(int64_t nTimeout)\n {\n     struct timeval timeout;\n     timeout.tv_sec  = nTimeout / 1000;"
      },
      {
        "sha": "2a79f82d72eca6705210fb70deb406ae14bc8740",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f4e67f152a9625a1c66c20de00679286b2c187c/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f4e67f152a9625a1c66c20de00679286b2c187c/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=8f4e67f152a9625a1c66c20de00679286b2c187c",
        "patch": "@@ -215,5 +215,9 @@ std::string NetworkErrorString(int err);\n bool CloseSocket(SOCKET& hSocket);\n /** Disable or enable blocking-mode for a socket */\n bool SetSocketNonBlocking(SOCKET& hSocket, bool fNonBlocking);\n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);\n \n #endif // BITCOIN_NETBASE_H"
      },
      {
        "sha": "bb72315c8ed32b544323988f61139f97b3b2327f",
        "filename": "src/torcontrol.cpp",
        "status": "added",
        "additions": 573,
        "deletions": 0,
        "changes": 573,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f4e67f152a9625a1c66c20de00679286b2c187c/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f4e67f152a9625a1c66c20de00679286b2c187c/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=8f4e67f152a9625a1c66c20de00679286b2c187c",
        "patch": "@@ -0,0 +1,573 @@\n+#include \"torcontrol.h\"\n+#include \"utilstrencodings.h\"\n+#include \"net.h\"\n+#include \"util.h\"\n+#include \"init.h\" // Just for ShutdownRequested\n+\n+#include <vector>\n+#include <deque>\n+#include <set>\n+#include <stdlib.h>\n+\n+#include <boost/function.hpp>\n+#include <boost/bind.hpp>\n+#include <boost/signals2/signal.hpp>\n+#include <boost/foreach.hpp>\n+#include <boost/algorithm/string/predicate.hpp>\n+#include <boost/algorithm/string/split.hpp>\n+#include <boost/algorithm/string/classification.hpp>\n+\n+#include <event2/bufferevent.h>\n+#include <event2/buffer.h>\n+#include <event2/util.h>\n+#include <event2/event.h>\n+\n+const std::string DEFAULT_TOR_CONTROL = \"127.0.0.1:9051\";\n+\n+/****** Low-level TorControlConnection ********/\n+\n+/** Reply from Tor, can be single or multi-line */\n+class TorControlReply\n+{\n+public:\n+    TorControlReply() { Clear(); }\n+\n+    int code;\n+    std::vector<std::string> lines;\n+\n+    void Clear()\n+    {\n+        code = 0;\n+        lines.clear();\n+    }\n+};\n+\n+/** Low-level handling for Tor control connection.\n+ * Speaks the SMTP-like protocol as defined in torspec/control-spec.txt\n+ */\n+class TorControlConnection\n+{\n+public:\n+    typedef boost::function<void(TorControlConnection&)> ConnectionCB;\n+    typedef boost::function<void(TorControlConnection &,const TorControlReply &)> ReplyHandlerCB;\n+\n+    /** Create a new TorControlConnection.\n+     */\n+    TorControlConnection(struct event_base *base);\n+    ~TorControlConnection();\n+\n+    /**\n+     * Connect to a Tor control port.\n+     * target is address of the form host:port.\n+     * connected is the handler that is called when connection is succesfully established.\n+     * disconnected is a handler that is called when the connection is broken.\n+     * Return true on success.\n+     */\n+    bool Connect(const std::string &target, const ConnectionCB& connected, const ConnectionCB& disconnected);\n+\n+    /**\n+     * Disconnect from Tor control port.\n+     */\n+    bool Disconnect();\n+\n+    /** Send a command, register a handler for the reply.\n+     * A trailing CRLF is automatically added.\n+     * Return true on success.\n+     */\n+    bool Command(const std::string &cmd, const ReplyHandlerCB& reply_handler);\n+\n+    /** Response handlers for async replies */\n+    boost::signals2::signal<void(TorControlConnection &,const TorControlReply &)> async_handler;\n+private:\n+    /** Callback when ready for use */\n+    boost::function<void(TorControlConnection&)> connected;\n+    /** Callback when connection lost */\n+    boost::function<void(TorControlConnection&)> disconnected;\n+    /** Libevent event base */\n+    struct event_base *base;\n+    /** Connection to control socket */\n+    struct bufferevent *b_conn;\n+    /** Message being received */\n+    TorControlReply message;\n+    /** Response handlers */\n+    std::deque<ReplyHandlerCB> reply_handlers;\n+\n+    /** Libevent handlers: internal */\n+    static void readcb(struct bufferevent *bev, void *ctx);\n+    static void eventcb(struct bufferevent *bev, short what, void *ctx);\n+};\n+\n+TorControlConnection::TorControlConnection(struct event_base *base):\n+    base(base), b_conn(0)\n+{\n+}\n+\n+TorControlConnection::~TorControlConnection()\n+{\n+    if (b_conn)\n+        bufferevent_free(b_conn);\n+}\n+\n+void TorControlConnection::readcb(struct bufferevent *bev, void *ctx)\n+{\n+    TorControlConnection *self = (TorControlConnection*)ctx;\n+    struct evbuffer *input = bufferevent_get_input(bev);\n+    size_t n_read_out = 0;\n+    char *line;\n+    assert(input);\n+    //  If there is not a whole line to read, evbuffer_readln returns NULL\n+    while((line = evbuffer_readln(input, &n_read_out, EVBUFFER_EOL_CRLF)) != NULL)\n+    {\n+        std::string s(line, n_read_out);\n+        free(line);\n+        if (s.size() < 4) // Short line\n+            continue;\n+        // <status>(-|+| )<data><CRLF>\n+        self->message.code = atoi(s.substr(0,3).c_str());\n+        self->message.lines.push_back(s.substr(4));\n+        char ch = s[3]; // '-','+' or ' '\n+        if (ch == ' ') {\n+            // Final line, dispatch reply and clean up\n+            if (self->message.code >= 600) {\n+                // Dispatch async notifications to async handler\n+                // Synchronous and asynchronous messages are never interleaved\n+                self->async_handler(*self, self->message);\n+            } else {\n+                if (!self->reply_handlers.empty()) {\n+                    // Invoke reply handler with message\n+                    self->reply_handlers.front()(*self, self->message);\n+                    self->reply_handlers.pop_front();\n+                } else {\n+                    LogPrintf(\"[tor] Received unexpected sync reply %i\\n\", self->message.code);\n+                }\n+            }\n+            self->message.Clear();\n+        }\n+    }\n+}\n+\n+void TorControlConnection::eventcb(struct bufferevent *bev, short what, void *ctx)\n+{\n+    TorControlConnection *self = (TorControlConnection*)ctx;\n+    if (what & BEV_EVENT_CONNECTED) {\n+        LogPrintf(\"[tor] Succesfully connected!\\n\");\n+        self->connected(*self);\n+    } else if (what & (BEV_EVENT_EOF|BEV_EVENT_ERROR)) {\n+        if (what & BEV_EVENT_ERROR)\n+            LogPrintf(\"[tor] Error connecting to Tor control socket\\n\");\n+        else\n+            LogPrintf(\"[tor] End of stream\\n\");\n+        self->Disconnect();\n+        self->disconnected(*self);\n+    }\n+}\n+\n+bool TorControlConnection::Connect(const std::string &target, const ConnectionCB& connected, const ConnectionCB& disconnected)\n+{\n+    if (b_conn)\n+        Disconnect();\n+    // Parse target address:port\n+    struct sockaddr_storage connect_to_addr;\n+    int connect_to_addrlen = sizeof(connect_to_addr);\n+    if (evutil_parse_sockaddr_port(target.c_str(),\n+        (struct sockaddr*)&connect_to_addr, &connect_to_addrlen)<0) {\n+        perror(\"evutil_parse_sockaddr_port\\n\");\n+        return false;\n+    }\n+\n+    // Create a new socket, set up callbacks and enable notification bits\n+    b_conn = bufferevent_socket_new(base, -1, BEV_OPT_CLOSE_ON_FREE);\n+    if (!b_conn)\n+        return false;\n+    bufferevent_setcb(b_conn, TorControlConnection::readcb, NULL, TorControlConnection::eventcb, this);\n+    bufferevent_enable(b_conn, EV_READ|EV_WRITE);\n+    this->connected = connected;\n+    this->disconnected = disconnected;\n+\n+    // Finally, connect to target\n+    if (bufferevent_socket_connect(b_conn, (struct sockaddr*)&connect_to_addr, connect_to_addrlen) < 0) {\n+        perror(\"bufferevent_socket_connect\");\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool TorControlConnection::Disconnect()\n+{\n+    if (b_conn)\n+        bufferevent_free(b_conn);\n+    b_conn = 0;\n+    return true;\n+}\n+\n+bool TorControlConnection::Command(const std::string &cmd, const ReplyHandlerCB& reply_handler)\n+{\n+    if (!b_conn)\n+        return false;\n+    struct evbuffer *buf = bufferevent_get_output(b_conn);\n+    if (!buf)\n+        return false;\n+    evbuffer_add(buf, cmd.data(), cmd.size());\n+    evbuffer_add(buf, \"\\r\\n\", 2);\n+    reply_handlers.push_back(reply_handler);\n+    return true;\n+}\n+\n+/****** General parsing utilities ********/\n+\n+/* Split reply line in the form 'AUTH METHODS=...' into a type\n+ * 'AUTH' and arguments 'METHODS=...'.\n+ */\n+static std::pair<std::string,std::string> SplitTorReplyLine(const std::string &s)\n+{\n+    size_t ptr=0;\n+    std::string type;\n+    while (ptr < s.size() && s[ptr] != ' ') {\n+        type.push_back(s[ptr]);\n+        ++ptr;\n+    }\n+    if (ptr < s.size())\n+        ++ptr; // skip ' '\n+    return make_pair(type, s.substr(ptr));\n+}\n+\n+/** Parse reply arguments in the form 'METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\".../control_auth_cookie\"'.\n+ */\n+static std::map<std::string,std::string> ParseTorReplyMapping(const std::string &s)\n+{\n+    std::map<std::string,std::string> mapping;\n+    size_t ptr=0;\n+    while (ptr < s.size()) {\n+        std::string key, value;\n+        while (ptr < s.size() && s[ptr] != '=') {\n+            key.push_back(s[ptr]);\n+            ++ptr;\n+        }\n+        if (ptr == s.size()) // unexpected end of line\n+            return std::map<std::string,std::string>();\n+        ++ptr; // skip '='\n+        if (ptr < s.size() && s[ptr] == '\"') { // Quoted string\n+            ++ptr; // skip '='\n+            bool escape_next = false;\n+            while (ptr < s.size() && (!escape_next && s[ptr] != '\"')) {\n+                escape_next = (s[ptr] == '\\\\');\n+                value.push_back(s[ptr]);\n+                ++ptr;\n+            }\n+            if (ptr == s.size()) // unexpected end of line\n+                return std::map<std::string,std::string>();\n+            ++ptr; // skip closing '\"'\n+            /* TODO: unescape value - according to the spec this depends on the\n+             * context, some strings use C-LogPrintf style escape codes, some\n+             * don't. So may be better handled at the call site.\n+             */\n+        } else { // Unquoted value. Note that values can contain '=' at will, just no spaces\n+            while (ptr < s.size() && s[ptr] != ' ') {\n+                value.push_back(s[ptr]);\n+                ++ptr;\n+            }\n+        }\n+        if (ptr < s.size() && s[ptr] == ' ')\n+            ++ptr; // skip ' ' after key=value\n+        mapping[key] = value;\n+    }\n+    return mapping;\n+}\n+\n+/** Read full contents of a file and return them in a std::string. */\n+static std::pair<bool,std::string> ReadBinaryFile(const std::string &filename)\n+{\n+    FILE *f = fopen(filename.c_str(), \"rb\");\n+    if (f == NULL)\n+        return std::make_pair(false,\"\");\n+    std::string retval;\n+    char buffer[128];\n+    size_t n;\n+    while ((n=fread(buffer, 1, sizeof(buffer), f)) > 0)\n+        retval.append(buffer, buffer+n);\n+    fclose(f);\n+    return std::make_pair(true,retval);\n+}\n+\n+/** Write contents of std::string to a file.\n+ * @return true on success.\n+ */\n+static bool WriteBinaryFile(const std::string &filename, const std::string &data)\n+{\n+    FILE *f = fopen(filename.c_str(), \"wb\");\n+    if (f == NULL)\n+        return false;\n+    if (fwrite(data.data(), 1, data.size(), f) != data.size())\n+        return false;\n+    fclose(f);\n+    return true;\n+}\n+\n+/****** Bitcoin specific TorController implementation ********/\n+\n+/** Controller that connects to Tor control socket, authenticate, then create\n+ * and maintain a ephemeral hidden service.\n+ */\n+class TorController\n+{\n+public:\n+    TorController(struct event_base* base, const std::string& target);\n+    ~TorController();\n+\n+    /** Get name fo file to store private key in */\n+    std::string GetPrivateKeyFile();\n+\n+    /** Reconnect, after getting disconnected */\n+    void Reconnect();\n+private:\n+    struct event_base* base;\n+    std::string target;\n+    TorControlConnection conn;\n+    std::string private_key;\n+    std::string service_id;\n+    bool reconnect;\n+    struct event *shutdown_poll_ev;\n+    struct event *reconnect_ev;\n+    float reconnect_timeout;\n+\n+    /** Callback for ADD_ONION result */\n+    void add_onion_cb(TorControlConnection& conn, const TorControlReply& reply);\n+    /** Callback for AUTHENTICATE result */\n+    void auth_cb(TorControlConnection& conn, const TorControlReply& reply);\n+    /** Callback for PROTOCOLINFO result */\n+    void protocolinfo_cb(TorControlConnection& conn, const TorControlReply& reply);\n+    /** Callback after succesful connection */\n+    void connected_cb(TorControlConnection& conn);\n+    /** Callback after connection lost or failed connection attempt */\n+    void disconnected_cb(TorControlConnection& conn);\n+\n+    /** Callback for shutdown poll timer */\n+    static void shutdown_poll_cb(evutil_socket_t fd, short what, void *arg);\n+    /** Callback for reconnect timer */\n+    static void reconnect_cb(evutil_socket_t fd, short what, void *arg);\n+};\n+\n+/** Exponential backoff configuration - initial timeout in seconds */\n+static const float RECONNECT_TIMEOUT_START = 1.0;\n+/** Exponential backoff configuration - growth factor */\n+static const float RECONNECT_TIMEOUT_EXP = 1.5;\n+\n+TorController::TorController(struct event_base* base, const std::string& target):\n+    base(base),\n+    target(target), conn(base), reconnect(true), shutdown_poll_ev(0), reconnect_ev(0),\n+    reconnect_timeout(RECONNECT_TIMEOUT_START)\n+{\n+    // Start connection attempts immediately\n+    if (!conn.Connect(target, boost::bind(&TorController::connected_cb, this, _1),\n+         boost::bind(&TorController::disconnected_cb, this, _1) )) {\n+        LogPrintf(\"[tor] Initiating connection to Tor control port %s failed\\n\", target);\n+    }\n+    // Read service private key if cached\n+    std::pair<bool,std::string> pkf = ReadBinaryFile(GetPrivateKeyFile());\n+    if (pkf.first) {\n+        LogPrintf(\"[tor] Reading cached private key from %s\\n\", GetPrivateKeyFile());\n+        private_key = pkf.second;\n+    }\n+    // Periodic timer event to poll for shutdown\n+    // The same 200ms as in bitcoind. This is not the nicest solution, but we cannot exactly use\n+    // boost::interrupt here.\n+    struct timeval time;\n+    time.tv_usec = 200000;\n+    time.tv_sec = 0;\n+    shutdown_poll_ev = event_new(base, -1, EV_PERSIST, shutdown_poll_cb, this);\n+    event_add(shutdown_poll_ev, &time);\n+}\n+\n+TorController::~TorController()\n+{\n+    if (shutdown_poll_ev)\n+        event_del(shutdown_poll_ev);\n+    if (reconnect_ev)\n+        event_del(reconnect_ev);\n+}\n+\n+void TorController::add_onion_cb(TorControlConnection& conn, const TorControlReply& reply)\n+{\n+    if (reply.code == 250) {\n+        LogPrintf(\"[tor] ADD_ONION succesful\\n\");\n+        BOOST_FOREACH(const std::string &s, reply.lines) {\n+            std::map<std::string,std::string> m = ParseTorReplyMapping(s);\n+            std::map<std::string,std::string>::iterator i;\n+            if ((i = m.find(\"ServiceID\")) != m.end())\n+                service_id = i->second;\n+            if ((i = m.find(\"PrivateKey\")) != m.end())\n+                private_key = i->second;\n+        }\n+\n+        CService service(service_id+\".onion\", GetListenPort(), false);\n+        LogPrintf(\"[tor] Got service ID %s, advertizing service %s\\n\", service_id, service.ToString());\n+        if (WriteBinaryFile(GetPrivateKeyFile(), private_key)) {\n+            LogPrintf(\"[tor] Cached service private key to %s\\n\", GetPrivateKeyFile());\n+        } else {\n+            LogPrintf(\"[tor] Error writing service private key to %s\\n\", GetPrivateKeyFile());\n+        }\n+        AddLocal(service, LOCAL_MANUAL);\n+        // ... onion requested - keep connection open\n+    } else {\n+        LogPrintf(\"[tor] Add onion failed\\n\");\n+    }\n+}\n+\n+void TorController::auth_cb(TorControlConnection& conn, const TorControlReply& reply)\n+{\n+    if (reply.code == 250) {\n+        LogPrintf(\"[tor] Authentication succesful\\n\");\n+        // Finally - now create the service\n+        if (private_key.empty()) // No private key, generate one\n+            private_key = \"NEW:BEST\";\n+        // Request hidden service, redirect port.\n+        // Note that the 'virtual' port doesn't have to be the same as our internal port, but this is just a convenient\n+        // choice.  TODO; refactor the shutdown sequence some day.\n+        conn.Command(strprintf(\"ADD_ONION %s Port=%i,127.0.0.1:%i\", private_key, GetListenPort(), GetListenPort()),\n+            boost::bind(&TorController::add_onion_cb, this, _1, _2));\n+    } else {\n+        LogPrintf(\"[tor] Authentication failed\\n\");\n+    }\n+}\n+\n+void TorController::protocolinfo_cb(TorControlConnection& conn, const TorControlReply& reply)\n+{\n+    if (reply.code == 250) {\n+        std::set<std::string> methods;\n+        std::string cookiefile;\n+        /*\n+         * 250-AUTH METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\"/home/x/.tor/control_auth_cookie\"\n+         * 250-AUTH METHODS=NULL\n+         * 250-AUTH METHODS=HASHEDPASSWORD\n+         */\n+        BOOST_FOREACH(const std::string &s, reply.lines) {\n+            std::pair<std::string,std::string> l = SplitTorReplyLine(s);\n+            if (l.first == \"AUTH\") {\n+                std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);\n+                std::map<std::string,std::string>::iterator i;\n+                if ((i = m.find(\"METHODS\")) != m.end())\n+                    boost::split(methods, i->second, boost::is_any_of(\",\"));\n+                if ((i = m.find(\"COOKIEFILE\")) != m.end())\n+                    cookiefile = i->second;\n+            } else if (l.first == \"VERSION\") {\n+                std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);\n+                std::map<std::string,std::string>::iterator i;\n+                if ((i = m.find(\"Tor\")) != m.end()) {\n+                    LogPrintf(\"[tor] Connected to Tor version %s\\n\", i->second);\n+                }\n+            }\n+        }\n+        BOOST_FOREACH(const std::string &s, methods) {\n+            LogPrintf(\"[tor] Supported authentication method: %s\\n\", s);\n+        }\n+        // Prefer NULL, otherwise COOKIE. If a password is provided, use HASHEDPASSWORD\n+        // We do not support SAFECOOKIE\n+        /* Authentication:\n+         *   cookie:   hex-encoded ~/.tor/control_auth_cookie\n+         *   password: \"password\"\n+         */\n+        if (methods.count(\"NULL\")) {\n+            LogPrintf(\"[tor] Using NULL authentication\\n\");\n+            conn.Command(\"AUTHENTICATE\", boost::bind(&TorController::auth_cb, this, _1, _2));\n+        } else if (methods.count(\"COOKIE\")) {\n+            // Cookie: hexdump -e '32/1 \"%02x\"\"\\n\"'  ~/.tor/control_auth_cookie\n+            LogPrintf(\"[tor] Using COOKIE authentication, reading cookie authentication from %s\\n\", cookiefile);\n+            std::string cookie = ReadBinaryFile(cookiefile).second;\n+            if (!cookie.empty()) {\n+                conn.Command(\"AUTHENTICATE \" + HexStr(cookie), boost::bind(&TorController::auth_cb, this, _1, _2));\n+            } else {\n+                LogPrintf(\"[tor] Authentication cookie not found\\n\");\n+            }\n+        } else {\n+            /* TODO HASHEDPASSWORD w/ manual auth */\n+            LogPrintf(\"[tor] No supported authentication method\\n\");\n+        }\n+    } else {\n+        LogPrintf(\"[tor] Requesting protocol info failed\\n\");\n+    }\n+}\n+\n+void TorController::connected_cb(TorControlConnection& conn)\n+{\n+    reconnect_timeout = RECONNECT_TIMEOUT_START;\n+    // First send a PROTOCOLINFO command to figure out what authentication is expected\n+    if (!conn.Command(\"PROTOCOLINFO 1\", boost::bind(&TorController::protocolinfo_cb, this, _1, _2)))\n+        LogPrintf(\"[tor] Error sending initial protocolinfo command\\n\");\n+}\n+\n+void TorController::disconnected_cb(TorControlConnection& conn)\n+{\n+    if (!reconnect)\n+        return;\n+    LogPrintf(\"[tor] Disconnected from Tor control port %s, trying to reconnect\\n\", target);\n+    // Single-shot timer for reconnect. Use exponential backoff.\n+    struct timeval time = MillisToTimeval(int64_t(reconnect_timeout * 1000.0));\n+    reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n+    event_add(reconnect_ev, &time);\n+    reconnect_timeout *= RECONNECT_TIMEOUT_EXP;\n+}\n+\n+void TorController::Reconnect()\n+{\n+    /* Try to reconnect and reestablish if we get booted - for example, Tor\n+     * may be restarting.\n+     */\n+    if (!conn.Connect(target, boost::bind(&TorController::connected_cb, this, _1),\n+         boost::bind(&TorController::disconnected_cb, this, _1) )) {\n+        LogPrintf(\"[tor] Re-initiating connection to Tor control port %s failed\\n\", target);\n+    }\n+}\n+\n+std::string TorController::GetPrivateKeyFile()\n+{\n+    return (GetDataDir() / \"onion_private_key\").string();\n+}\n+\n+void TorController::shutdown_poll_cb(evutil_socket_t fd, short what, void *arg)\n+{\n+    TorController *self = (TorController*)arg;\n+    if (ShutdownRequested()) {\n+        // Shutdown was requested. Stop timers, and request control connection to terminate\n+        LogPrintf(\"[tor] Thread interrupt\\n\");\n+        if (self->shutdown_poll_ev)\n+            event_del(self->shutdown_poll_ev);\n+        self->shutdown_poll_ev = 0;\n+        if (self->reconnect_ev)\n+            event_del(self->reconnect_ev);\n+        self->reconnect_ev = 0;\n+        self->reconnect = false;\n+        self->conn.Disconnect();\n+    }\n+}\n+\n+void TorController::reconnect_cb(evutil_socket_t fd, short what, void *arg)\n+{\n+    TorController *self = (TorController*)arg;\n+    self->Reconnect();\n+}\n+\n+/****** Thread ********/\n+\n+static void TorControlThread()\n+{\n+    struct event_base *base = event_base_new();\n+    if (!base) {\n+        LogPrintf(\"[tor] Unable to create event_base_new\");\n+        return;\n+    }\n+    TorController ctrl(base, GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL));\n+\n+    event_base_dispatch(base);\n+    event_base_free(base);\n+}\n+\n+void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler)\n+{\n+    threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"torcontrol\", &TorControlThread));\n+}\n+\n+void StopTorControl()\n+{\n+    /* Nothing to do actually. Everything is cleaned up when thread exits */\n+}\n+"
      },
      {
        "sha": "fa55f6b030a794ca6fc95fe78978da6c3fea1f1b",
        "filename": "src/torcontrol.h",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f4e67f152a9625a1c66c20de00679286b2c187c/src/torcontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f4e67f152a9625a1c66c20de00679286b2c187c/src/torcontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.h?ref=8f4e67f152a9625a1c66c20de00679286b2c187c",
        "patch": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+/**\n+ * Functionality for communicating with Tor.\n+ */\n+#ifndef BITCOIN_TORCONTROL_H\n+#define BITCOIN_TORCONTROL_H\n+\n+#include \"scheduler.h\"\n+\n+extern const std::string DEFAULT_TOR_CONTROL;\n+static const bool DEFAULT_LISTEN_ONION = true;\n+\n+void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler);\n+void StopTorControl();\n+\n+#endif /* BITCOIN_TORCONTROL_H */"
      }
    ]
  },
  {
    "sha": "2f796e5fe7a51e4636600b320dc1995e048b4ba2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjc5NmU1ZmU3YTUxZTQ2MzY2MDBiMzIwZGMxOTk1ZTA0OGI0YmEy",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-08-27T04:43:18Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T16:29:56Z"
      },
      "message": "Better error message if Tor version too old",
      "tree": {
        "sha": "601c38fed5b020d97b8df73bd310e8a803b3e174",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/601c38fed5b020d97b8df73bd310e8a803b3e174"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f796e5fe7a51e4636600b320dc1995e048b4ba2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f796e5fe7a51e4636600b320dc1995e048b4ba2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f796e5fe7a51e4636600b320dc1995e048b4ba2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f796e5fe7a51e4636600b320dc1995e048b4ba2/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f4e67f152a9625a1c66c20de00679286b2c187c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f4e67f152a9625a1c66c20de00679286b2c187c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f4e67f152a9625a1c66c20de00679286b2c187c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "40ffbe61b1609df27c81ee847109443eae78cdd2",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f796e5fe7a51e4636600b320dc1995e048b4ba2/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f796e5fe7a51e4636600b320dc1995e048b4ba2/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=2f796e5fe7a51e4636600b320dc1995e048b4ba2",
        "patch": "@@ -408,8 +408,10 @@ void TorController::add_onion_cb(TorControlConnection& conn, const TorControlRep\n         }\n         AddLocal(service, LOCAL_MANUAL);\n         // ... onion requested - keep connection open\n+    } else if (reply.code == 510) { // 510 Unrecognized command\n+        LogPrintf(\"[tor] Add onion failed with unrecognized command (You probably need to upgrade Tor)\\n\");\n     } else {\n-        LogPrintf(\"[tor] Add onion failed\\n\");\n+        LogPrintf(\"[tor] Add onion failed; error code %d\\n\", reply.code);\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTdkNDU5MWE3Y2UwNjRiYTY0YzM2Y2NiNzI5ZjFkOTRjMjFhYTkw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T18:18:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T18:18:51Z"
      },
      "message": "Merge pull request #6965\n\n77f1f59 Benchmark sanity checks and fork checks in ConnectBlock (Matt Corallo)",
      "tree": {
        "sha": "b02f58bb43d9af00abbd2a486322d34abef4cb4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b02f58bb43d9af00abbd2a486322d34abef4cb4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQjULAAoJEHSBCwEjRsmmnQYIAKUSZlneyqNnajYm3updL7lv\n4APV5yPo29epim+P+d+sUl1TpP3mU/aoVeOwJlU4d4MU+xW1BwfT91QDsfN2oRwm\nbZTdbDepCotcl5FxX++NKOAIX329pHVCQTJWg1L9fQFzOnwHnqYi/xviMhf2AV8K\nHwxJU8Fw4CF2L28HpnTLkKe7NdOS2u8L4z2f/DygwDU1CZZxuW5WufVVnCHUsKQV\nZpGskB6+NbTkrmwYrHfSeoxCuEysEosPs9Teu0mgfIRQ/mSAEeEIFN/lFiyIE7Ay\naCpQJ9+m12TefvFisxyxMDBTa2ye5zYeimq1DAYERiIQ/Wmn6/ZateLmlryab5g=\n=Zp+D\n-----END PGP SIGNATURE-----",
        "payload": "tree b02f58bb43d9af00abbd2a486322d34abef4cb4c\nparent b56953e9bb5a32bc35365d1f0c5de5528c0650dd\nparent 77f1f59d12b8ea097e8ccba83bd329011817bdf8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447179527 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447179531 +0100\n\nMerge pull request #6965\n\n77f1f59 Benchmark sanity checks and fork checks in ConnectBlock (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de7d4591a7ce064ba64c36ccb729f1d94c21aa90/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b56953e9bb5a32bc35365d1f0c5de5528c0650dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b56953e9bb5a32bc35365d1f0c5de5528c0650dd"
      },
      {
        "sha": "77f1f59d12b8ea097e8ccba83bd329011817bdf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f1f59d12b8ea097e8ccba83bd329011817bdf8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77f1f59d12b8ea097e8ccba83bd329011817bdf8"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b8abcff596623444b3c2f4b26e9633aee666c931",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de7d4591a7ce064ba64c36ccb729f1d94c21aa90/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de7d4591a7ce064ba64c36ccb729f1d94c21aa90/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
        "patch": "@@ -1711,6 +1711,8 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     }\n }\n \n+static int64_t nTimeCheck = 0;\n+static int64_t nTimeForks = 0;\n static int64_t nTimeVerify = 0;\n static int64_t nTimeConnect = 0;\n static int64_t nTimeIndex = 0;\n@@ -1721,6 +1723,9 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n {\n     const CChainParams& chainparams = Params();\n     AssertLockHeld(cs_main);\n+\n+    int64_t nTimeStart = GetTimeMicros();\n+\n     // Check it again in case a previous version let a bad block in\n     if (!CheckBlock(block, state, !fJustCheck, !fJustCheck))\n         return false;\n@@ -1746,6 +1751,9 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         }\n     }\n \n+    int64_t nTime1 = GetTimeMicros(); nTimeCheck += nTime1 - nTimeStart;\n+    LogPrint(\"bench\", \"    - Sanity checks: %.2fms [%.2fs]\\n\", 0.001 * (nTime1 - nTimeStart), nTimeCheck * 0.000001);\n+\n     // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n     // unless those are already completely spent.\n     // If such overwrites are allowed, coinbases and transactions depending upon those\n@@ -1788,11 +1796,13 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n     }\n \n+    int64_t nTime2 = GetTimeMicros(); nTimeForks += nTime2 - nTime1;\n+    LogPrint(\"bench\", \"    - Fork checks: %.2fms [%.2fs]\\n\", 0.001 * (nTime2 - nTime1), nTimeForks * 0.000001);\n+\n     CBlockUndo blockundo;\n \n     CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads ? &scriptcheckqueue : NULL);\n \n-    int64_t nTimeStart = GetTimeMicros();\n     CAmount nFees = 0;\n     int nInputs = 0;\n     unsigned int nSigOps = 0;\n@@ -1845,8 +1855,8 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         vPos.push_back(std::make_pair(tx.GetHash(), pos));\n         pos.nTxOffset += ::GetSerializeSize(tx, SER_DISK, CLIENT_VERSION);\n     }\n-    int64_t nTime1 = GetTimeMicros(); nTimeConnect += nTime1 - nTimeStart;\n-    LogPrint(\"bench\", \"      - Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin) [%.2fs]\\n\", (unsigned)block.vtx.size(), 0.001 * (nTime1 - nTimeStart), 0.001 * (nTime1 - nTimeStart) / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * (nTime1 - nTimeStart) / (nInputs-1), nTimeConnect * 0.000001);\n+    int64_t nTime3 = GetTimeMicros(); nTimeConnect += nTime3 - nTime2;\n+    LogPrint(\"bench\", \"      - Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin) [%.2fs]\\n\", (unsigned)block.vtx.size(), 0.001 * (nTime3 - nTime2), 0.001 * (nTime3 - nTime2) / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * (nTime3 - nTime2) / (nInputs-1), nTimeConnect * 0.000001);\n \n     CAmount blockReward = nFees + GetBlockSubsidy(pindex->nHeight, chainparams.GetConsensus());\n     if (block.vtx[0].GetValueOut() > blockReward)\n@@ -1857,8 +1867,8 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     if (!control.Wait())\n         return state.DoS(100, false);\n-    int64_t nTime2 = GetTimeMicros(); nTimeVerify += nTime2 - nTimeStart;\n-    LogPrint(\"bench\", \"    - Verify %u txins: %.2fms (%.3fms/txin) [%.2fs]\\n\", nInputs - 1, 0.001 * (nTime2 - nTimeStart), nInputs <= 1 ? 0 : 0.001 * (nTime2 - nTimeStart) / (nInputs-1), nTimeVerify * 0.000001);\n+    int64_t nTime4 = GetTimeMicros(); nTimeVerify += nTime4 - nTime2;\n+    LogPrint(\"bench\", \"    - Verify %u txins: %.2fms (%.3fms/txin) [%.2fs]\\n\", nInputs - 1, 0.001 * (nTime4 - nTime2), nInputs <= 1 ? 0 : 0.001 * (nTime4 - nTime2) / (nInputs-1), nTimeVerify * 0.000001);\n \n     if (fJustCheck)\n         return true;\n@@ -1889,16 +1899,16 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     // add this block to the view's block chain\n     view.SetBestBlock(pindex->GetBlockHash());\n \n-    int64_t nTime3 = GetTimeMicros(); nTimeIndex += nTime3 - nTime2;\n-    LogPrint(\"bench\", \"    - Index writing: %.2fms [%.2fs]\\n\", 0.001 * (nTime3 - nTime2), nTimeIndex * 0.000001);\n+    int64_t nTime5 = GetTimeMicros(); nTimeIndex += nTime5 - nTime4;\n+    LogPrint(\"bench\", \"    - Index writing: %.2fms [%.2fs]\\n\", 0.001 * (nTime5 - nTime4), nTimeIndex * 0.000001);\n \n     // Watch for changes to the previous coinbase transaction.\n     static uint256 hashPrevBestCoinBase;\n     GetMainSignals().UpdatedTransaction(hashPrevBestCoinBase);\n     hashPrevBestCoinBase = block.vtx[0].GetHash();\n \n-    int64_t nTime4 = GetTimeMicros(); nTimeCallbacks += nTime4 - nTime3;\n-    LogPrint(\"bench\", \"    - Callbacks: %.2fms [%.2fs]\\n\", 0.001 * (nTime4 - nTime3), nTimeCallbacks * 0.000001);\n+    int64_t nTime6 = GetTimeMicros(); nTimeCallbacks += nTime6 - nTime5;\n+    LogPrint(\"bench\", \"    - Callbacks: %.2fms [%.2fs]\\n\", 0.001 * (nTime6 - nTime5), nTimeCallbacks * 0.000001);\n \n     return true;\n }"
      }
    ]
  },
  {
    "sha": "726784374520347f09372532bd89156cdfd950f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjY3ODQzNzQ1MjAzNDdmMDkzNzI1MzJiZDg5MTU2Y2RmZDk1MGYy",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-11-10T18:28:56Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-11-11T00:33:39Z"
      },
      "message": "Globals: Make AcceptBlockHeader static (Fix #6163)\n\n..and at the same time prevent AcceptBlockHeader() from calling global function Params()",
      "tree": {
        "sha": "a9b4396a9eac8218a10c5f3c1edcb886a3538e23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9b4396a9eac8218a10c5f3c1edcb886a3538e23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/726784374520347f09372532bd89156cdfd950f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/726784374520347f09372532bd89156cdfd950f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/726784374520347f09372532bd89156cdfd950f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/726784374520347f09372532bd89156cdfd950f2/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77beab70deae8ad821cc069c1ce80fc809c89c33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77beab70deae8ad821cc069c1ce80fc809c89c33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77beab70deae8ad821cc069c1ce80fc809c89c33"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cfac2fcc1fd0a8be317a1a04b3d6dece83e2ae4a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/726784374520347f09372532bd89156cdfd950f2/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/726784374520347f09372532bd89156cdfd950f2/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=726784374520347f09372532bd89156cdfd950f2",
        "patch": "@@ -2781,9 +2781,8 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     return true;\n }\n \n-bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBlockIndex** ppindex)\n+static bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex=NULL)\n {\n-    const CChainParams& chainparams = Params();\n     AssertLockHeld(cs_main);\n     // Check for duplicate\n     uint256 hash = block.GetHash();\n@@ -2836,7 +2835,7 @@ bool AcceptBlock(const CBlock& block, CValidationState& state, CBlockIndex** ppi\n \n     CBlockIndex *&pindex = *ppindex;\n \n-    if (!AcceptBlockHeader(block, state, &pindex))\n+    if (!AcceptBlockHeader(block, state, chainparams, &pindex))\n         return false;\n \n     // Try to process all requested blocks that we don't have, but only\n@@ -4498,7 +4497,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 Misbehaving(pfrom->GetId(), 20);\n                 return error(\"non-continuous headers sequence\");\n             }\n-            if (!AcceptBlockHeader(header, state, &pindexLast)) {\n+            if (!AcceptBlockHeader(header, state, chainparams, &pindexLast)) {\n                 int nDoS;\n                 if (state.IsInvalid(nDoS)) {\n                     if (nDoS > 0)"
      },
      {
        "sha": "689743d56ada2348d85169cedd3567b3857198be",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/726784374520347f09372532bd89156cdfd950f2/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/726784374520347f09372532bd89156cdfd950f2/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=726784374520347f09372532bd89156cdfd950f2",
        "patch": "@@ -380,7 +380,6 @@ bool TestBlockValidity(CValidationState &state, const CBlock& block, CBlockIndex\n \n /** Store block on disk. If dbp is non-NULL, the file is known to already reside on disk */\n bool AcceptBlock(const CBlock& block, CValidationState& state, CBlockIndex **pindex, bool fRequested, CDiskBlockPos* dbp);\n-bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, CBlockIndex **ppindex= NULL);\n \n \n class CBlockFileInfo"
      }
    ]
  },
  {
    "sha": "779139549de954ebe93f0d15d252b454d462af01",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzkxMzk1NDlkZTk1NGViZTkzZjBkMTVkMjUyYjQ1NGQ0NjJhZjAx",
    "commit": {
      "author": {
        "name": "Michael",
        "email": "fanquake@users.noreply.github.com",
        "date": "2015-11-11T10:45:57Z"
      },
      "committer": {
        "name": "Michael",
        "email": "fanquake@users.noreply.github.com",
        "date": "2015-11-11T10:45:57Z"
      },
      "message": "[gitian] Use vm-builder_0.12.4+bzr494 on Debian",
      "tree": {
        "sha": "879b20750988667487eee056edda12da2f79724a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/879b20750988667487eee056edda12da2f79724a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/779139549de954ebe93f0d15d252b454d462af01",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/779139549de954ebe93f0d15d252b454d462af01",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/779139549de954ebe93f0d15d252b454d462af01",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/779139549de954ebe93f0d15d252b454d462af01/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de7d4591a7ce064ba64c36ccb729f1d94c21aa90"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "43de87d4ba449309bbd30eb562716e05dd6124df",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/779139549de954ebe93f0d15d252b454d462af01/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/779139549de954ebe93f0d15d252b454d462af01/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=779139549de954ebe93f0d15d252b454d462af01",
        "patch": "@@ -289,11 +289,11 @@ The rest of the steps in this guide will be performed as that user.\n There is no `python-vm-builder` package in Debian, so we need to install it from source ourselves,\n \n ```bash\n-wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr489.orig.tar.gz\n-echo \"ec12e0070a007989561bfee5862c89a32c301992dd2771c4d5078ef1b3014f03  vm-builder_0.12.4+bzr489.orig.tar.gz\" | sha256sum -c\n+wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr494.orig.tar.gz\n+echo \"76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e  vm-builder_0.12.4+bzr494.orig.tar.gz\" | sha256sum -c\n # (verification -- must return OK)\n-tar -zxvf vm-builder_0.12.4+bzr489.orig.tar.gz\n-cd vm-builder-0.12.4+bzr489\n+tar -zxvf vm-builder_0.12.4+bzr494.orig.tar.gz\n+cd vm-builder-0.12.4+bzr494\n sudo python setup.py install\n cd ..\n ```"
      }
    ]
  },
  {
    "sha": "38a4f267e82a20b3a5e263ffbf1542140aeef73d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGE0ZjI2N2U4MmEyMGIzYTVlMjYzZmZiZjE1NDIxNDBhZWVmNzNk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T11:17:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T11:20:38Z"
      },
      "message": "Merge pull request #6985\n\n7791395 [gitian] Use vm-builder_0.12.4+bzr494 on Debian (Michael)",
      "tree": {
        "sha": "879b20750988667487eee056edda12da2f79724a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/879b20750988667487eee056edda12da2f79724a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38a4f267e82a20b3a5e263ffbf1542140aeef73d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQySGAAoJEHSBCwEjRsmmomQH/1PrwJDsW/6YZSen6ji2ZoOn\n0iUgJR9IuxwLdsdf5GfroOsCCgSX6l8Y5wi+1jEz3W+GfCXYoQjF1Cvnu84nujsp\nEmx+aaIw7JV8lAfdVksNJDfWrGepbVvfv/wGgpF2o24YIaeldU3JfFxu0ziOuEpp\n10FPfBqMGkkyUj8qXeyVhoR0LGb5DQty+5J2MUm4XK66iKuRnK2862hnKfmiAYCQ\nqd9+LpJITHZIzM5yJqIqtaOIVUA7BZUZxLjpZ1M7Lc9Qw08ybre8/fAsgOLcLn8S\ndKoBoYSgs2f3Lc43h8m4yZPFfJXtte2GyxolD7FbMN8MOSRSabs80xqRbdsw3cw=\n=ZRCL\n-----END PGP SIGNATURE-----",
        "payload": "tree 879b20750988667487eee056edda12da2f79724a\nparent de7d4591a7ce064ba64c36ccb729f1d94c21aa90\nparent 779139549de954ebe93f0d15d252b454d462af01\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447240654 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447240838 +0100\n\nMerge pull request #6985\n\n7791395 [gitian] Use vm-builder_0.12.4+bzr494 on Debian (Michael)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38a4f267e82a20b3a5e263ffbf1542140aeef73d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38a4f267e82a20b3a5e263ffbf1542140aeef73d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38a4f267e82a20b3a5e263ffbf1542140aeef73d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de7d4591a7ce064ba64c36ccb729f1d94c21aa90"
      },
      {
        "sha": "779139549de954ebe93f0d15d252b454d462af01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/779139549de954ebe93f0d15d252b454d462af01",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/779139549de954ebe93f0d15d252b454d462af01"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "43de87d4ba449309bbd30eb562716e05dd6124df",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38a4f267e82a20b3a5e263ffbf1542140aeef73d/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38a4f267e82a20b3a5e263ffbf1542140aeef73d/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=38a4f267e82a20b3a5e263ffbf1542140aeef73d",
        "patch": "@@ -289,11 +289,11 @@ The rest of the steps in this guide will be performed as that user.\n There is no `python-vm-builder` package in Debian, so we need to install it from source ourselves,\n \n ```bash\n-wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr489.orig.tar.gz\n-echo \"ec12e0070a007989561bfee5862c89a32c301992dd2771c4d5078ef1b3014f03  vm-builder_0.12.4+bzr489.orig.tar.gz\" | sha256sum -c\n+wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr494.orig.tar.gz\n+echo \"76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e  vm-builder_0.12.4+bzr494.orig.tar.gz\" | sha256sum -c\n # (verification -- must return OK)\n-tar -zxvf vm-builder_0.12.4+bzr489.orig.tar.gz\n-cd vm-builder-0.12.4+bzr489\n+tar -zxvf vm-builder_0.12.4+bzr494.orig.tar.gz\n+cd vm-builder-0.12.4+bzr494\n sudo python setup.py install\n cd ..\n ```"
      }
    ]
  },
  {
    "sha": "cb841e75135e97e05cc7e771fb102a08969e2cb4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjg0MWU3NTEzNWU5N2UwNWNjN2U3NzFmYjEwMmEwODk2OWUyY2I0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T11:23:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T11:23:33Z"
      },
      "message": "Merge pull request #6982\n\n7267843 Globals: Make AcceptBlockHeader static (Fix #6163) (Jorge Tim\u00f3n)",
      "tree": {
        "sha": "50dc3fe6dea9197c6cc23dbdde08e3e00f0c751b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50dc3fe6dea9197c6cc23dbdde08e3e00f0c751b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb841e75135e97e05cc7e771fb102a08969e2cb4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQyU1AAoJEHSBCwEjRsmmTsIH/1BX8rrgoQWFupHP88YTBxTC\na+ZkdcVU2WIxCV/bHoYNjpPu4vqfvjc1Ezf0pZ1/zDdIf0v0Gi2lVCqwCEBT/79A\n1kzsdsDfeoUyxsgi97Yr9XwD9ci81fDorG6M9F7yJ3snkxrWRGt0vg8IgpMPxgx2\ns5Ntes5IJAaHBweyFPpKrFhXuISwG2zWx8SPnQ65PyfPbb1e4O2py4TgrbrzXfED\n0OogLUcLcOFMN0rs/IVvvOCefJgG9cwD8ATWSYofF19XZF05rslizRc2L0UH+JHW\npr5eefyjfLexrFemqtMJ+a82nYZ1y1gR1emgPSJ49N78NAy95q7USSGQs/o0iNM=\n=P81j\n-----END PGP SIGNATURE-----",
        "payload": "tree 50dc3fe6dea9197c6cc23dbdde08e3e00f0c751b\nparent 38a4f267e82a20b3a5e263ffbf1542140aeef73d\nparent 726784374520347f09372532bd89156cdfd950f2\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447241007 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447241013 +0100\n\nMerge pull request #6982\n\n7267843 Globals: Make AcceptBlockHeader static (Fix #6163) (Jorge Tim\u00f3n)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb841e75135e97e05cc7e771fb102a08969e2cb4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb841e75135e97e05cc7e771fb102a08969e2cb4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb841e75135e97e05cc7e771fb102a08969e2cb4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38a4f267e82a20b3a5e263ffbf1542140aeef73d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38a4f267e82a20b3a5e263ffbf1542140aeef73d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38a4f267e82a20b3a5e263ffbf1542140aeef73d"
      },
      {
        "sha": "726784374520347f09372532bd89156cdfd950f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/726784374520347f09372532bd89156cdfd950f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/726784374520347f09372532bd89156cdfd950f2"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8eb8776558da55bbb0a3062ae1863da18659bf59",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb841e75135e97e05cc7e771fb102a08969e2cb4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb841e75135e97e05cc7e771fb102a08969e2cb4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=cb841e75135e97e05cc7e771fb102a08969e2cb4",
        "patch": "@@ -2791,9 +2791,8 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     return true;\n }\n \n-bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBlockIndex** ppindex)\n+static bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex=NULL)\n {\n-    const CChainParams& chainparams = Params();\n     AssertLockHeld(cs_main);\n     // Check for duplicate\n     uint256 hash = block.GetHash();\n@@ -2846,7 +2845,7 @@ bool AcceptBlock(const CBlock& block, CValidationState& state, CBlockIndex** ppi\n \n     CBlockIndex *&pindex = *ppindex;\n \n-    if (!AcceptBlockHeader(block, state, &pindex))\n+    if (!AcceptBlockHeader(block, state, chainparams, &pindex))\n         return false;\n \n     // Try to process all requested blocks that we don't have, but only\n@@ -4508,7 +4507,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 Misbehaving(pfrom->GetId(), 20);\n                 return error(\"non-continuous headers sequence\");\n             }\n-            if (!AcceptBlockHeader(header, state, &pindexLast)) {\n+            if (!AcceptBlockHeader(header, state, chainparams, &pindexLast)) {\n                 int nDoS;\n                 if (state.IsInvalid(nDoS)) {\n                     if (nDoS > 0)"
      },
      {
        "sha": "7a136075ace1e59942c7131a174303bacbb741f0",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb841e75135e97e05cc7e771fb102a08969e2cb4/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb841e75135e97e05cc7e771fb102a08969e2cb4/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=cb841e75135e97e05cc7e771fb102a08969e2cb4",
        "patch": "@@ -382,7 +382,6 @@ bool TestBlockValidity(CValidationState &state, const CBlock& block, CBlockIndex\n \n /** Store block on disk. If dbp is non-NULL, the file is known to already reside on disk */\n bool AcceptBlock(const CBlock& block, CValidationState& state, CBlockIndex **pindex, bool fRequested, CDiskBlockPos* dbp);\n-bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, CBlockIndex **ppindex= NULL);\n \n \n class CBlockFileInfo"
      }
    ]
  },
  {
    "sha": "3ac70609345a249a74fad61b70f93e8a19245011",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYWM3MDYwOTM0NWEyNDlhNzRmYWQ2MWI3MGY5M2U4YTE5MjQ1MDEx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T11:54:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T11:54:57Z"
      },
      "message": "Merge pull request #6978\n\n69d0513 build: Use fPIC rather than fPIE for qt objects. (Cory Fields)\n17c4d9d build: Split hardening/fPIE options out (Cory Fields)",
      "tree": {
        "sha": "e01cdd3f7fb9535e4f33a0952f077c90154da572",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e01cdd3f7fb9535e4f33a0952f077c90154da572"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ac70609345a249a74fad61b70f93e8a19245011",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQyyRAAoJEHSBCwEjRsmmCCIIAIrhDdLnM3TAErtYibu3QHk6\nICAxJ0XScXziIC6aBtXGTA7/qjx7d223LsVtENfHmKigCxMSokvq40fNhJlReJWY\nxdil4jnsvGcjMMMti61wF/Zt3ATxcnnG+9/zrVkfPi0VnchAXOOm+umG6azAuYN6\nRERFSnYna+Vso/p9xpRPZMFdgqi/PQo4D2lb3rIu2Bb81J/+3eTB+Ri0L+PO9j8m\nxUdin/eEWdXCCL01E2z4HE1eVuiA0VdfD4E5rDLhm/ptzJQIm8Ipfp23lb8z6Hfb\nHjlI4pG7+wza6S9sUpdH2kWgb2F/cggZUejICDVdexJ2V9waazO9r10XM+RbALo=\n=InL/\n-----END PGP SIGNATURE-----",
        "payload": "tree e01cdd3f7fb9535e4f33a0952f077c90154da572\nparent cb841e75135e97e05cc7e771fb102a08969e2cb4\nparent 69d05134367da9a897ad14562a1d266750db450a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447242894 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447242897 +0100\n\nMerge pull request #6978\n\n69d0513 build: Use fPIC rather than fPIE for qt objects. (Cory Fields)\n17c4d9d build: Split hardening/fPIE options out (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ac70609345a249a74fad61b70f93e8a19245011",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ac70609345a249a74fad61b70f93e8a19245011",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ac70609345a249a74fad61b70f93e8a19245011/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb841e75135e97e05cc7e771fb102a08969e2cb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb841e75135e97e05cc7e771fb102a08969e2cb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb841e75135e97e05cc7e771fb102a08969e2cb4"
      },
      {
        "sha": "69d05134367da9a897ad14562a1d266750db450a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69d05134367da9a897ad14562a1d266750db450a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69d05134367da9a897ad14562a1d266750db450a"
      }
    ],
    "stats": {
      "total": 120,
      "additions": 93,
      "deletions": 27
    },
    "files": [
      {
        "sha": "2480267dc17ef5575ea6c22b8adddd535a6f9de6",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac70609345a249a74fad61b70f93e8a19245011/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac70609345a249a74fad61b70f93e8a19245011/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=3ac70609345a249a74fad61b70f93e8a19245011",
        "patch": "@@ -106,7 +106,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   dnl results to QT_LIBS.\n   BITCOIN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n+  TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   if test x$bitcoin_qt_got_major_vers = x5; then\n     _BITCOIN_QT_IS_STATIC\n     if test x$bitcoin_cv_static_qt = xyes; then\n@@ -149,6 +151,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n+  CXXFLAGS=$TEMP_CXXFLAGS\n   ])\n \n   if test x$use_pkgconfig$qt_bin_path = xyes; then\n@@ -157,6 +160,43 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     fi\n   fi\n \n+  if test x$use_hardening != xno; then\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    TEMP_CXXFLAGS=$CXXFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n+      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    CXXFLAGS=$TEMP_CXXFLAGS\n+    ])\n+  else\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(no)],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    ])\n+  fi\n+\n   BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n@@ -202,6 +242,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ])\n   AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n \n+  AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n   AC_SUBST(QT_LIBS)\n   AC_SUBST(QT_LDFLAGS)\n@@ -373,6 +414,8 @@ dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n     if test x$qt_include_path != x; then\n@@ -442,6 +485,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n     fi\n   ])\n   CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n   LIBS=\"$TEMP_LIBS\"\n ])\n "
      },
      {
        "sha": "e8aea902ae088efddf7a5590a8aa544e9c3f69b1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac70609345a249a74fad61b70f93e8a19245011/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac70609345a249a74fad61b70f93e8a19245011/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=3ac70609345a249a74fad61b70f93e8a19245011",
        "patch": "@@ -326,6 +326,7 @@ case $host in\n \n      AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n    *linux*)\n      TARGET_OS=linux\n@@ -424,6 +425,11 @@ if test x$use_glibc_compat != xno; then\n \n fi\n \n+if test x$TARGET_OS != xwindows; then\n+  # All windows code is PIC, forcing it on just adds useless compile warnings\n+  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n+fi\n+\n if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n@@ -441,8 +447,7 @@ if test x$use_hardening != xno; then\n   AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n \n   if test x$TARGET_OS != xwindows; then\n-    # All windows code is PIC, forcing it on just adds useless compile warnings\n-    AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n     AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n   fi\n \n@@ -451,11 +456,6 @@ if test x$use_hardening != xno; then\n        AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n     ;;\n   esac\n-\n-  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n-  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n-  OBJCXXFLAGS=\"$CXXFLAGS\"\n fi\n \n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n@@ -915,6 +915,11 @@ AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n \n AC_SUBST(RELDFLAGS)\n+AC_SUBST(HARDENED_CXXFLAGS)\n+AC_SUBST(HARDENED_CPPFLAGS)\n+AC_SUBST(HARDENED_LDFLAGS)\n+AC_SUBST(PIC_FLAGS)\n+AC_SUBST(PIE_FLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)"
      },
      {
        "sha": "c8d674686c18e9ccb37ed9c25d34179e70a84a6d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 27,
        "deletions": 14,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=3ac70609345a249a74fad61b70f93e8a19245011",
        "patch": "@@ -1,6 +1,8 @@\n DIST_SUBDIRS = secp256k1 univalue\n-AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS)\n \n+AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS)\n+AM_CXXFLAGS = $(HARDENED_CXXFLAGS)\n+AM_CPPFLAGS = $(HARDENED_CPPFLAGS)\n \n if EMBEDDED_LEVELDB\n LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/include\n@@ -14,7 +16,7 @@ $(LIBLEVELDB): $(LIBMEMENV)\n $(LIBLEVELDB) $(LIBMEMENV):\n \t@echo \"Building LevelDB ...\" && $(MAKE) -C $(@D) $(@F) CXX=\"$(CXX)\" \\\n \t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n-          OPT=\"$(CXXFLAGS) $(CPPFLAGS) -D__STDC_LIMIT_MACROS\"\n+          OPT=\"$(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) $(AM_CPPFLAGS) $(CPPFLAGS) -D__STDC_LIMIT_MACROS\"\n endif\n \n BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n@@ -178,7 +180,8 @@ obj/build.h: FORCE\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n # server: shared between bitcoind and bitcoin-qt\n-libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   alert.cpp \\\n@@ -215,6 +218,7 @@ if ENABLE_ZMQ\n LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n \n libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)\n+libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_zmq_a_SOURCES = \\\n   zmq/zmqabstractnotifier.cpp \\\n   zmq/zmqnotificationinterface.cpp \\\n@@ -224,7 +228,8 @@ endif\n \n # wallet: shared between bitcoind and bitcoin-qt, but only linked\n # when wallet enabled\n-libbitcoin_wallet_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n@@ -236,7 +241,8 @@ libbitcoin_wallet_a_SOURCES = \\\n   $(BITCOIN_CORE_H)\n \n # crypto primitives library\n-crypto_libbitcoin_crypto_a_CPPFLAGS = $(BITCOIN_CONFIG_INCLUDES)\n+crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_CONFIG_INCLUDES)\n+crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/common.h \\\n   crypto/hmac_sha256.cpp \\\n@@ -253,7 +259,8 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.h\n \n # common: shared between bitcoind, and bitcoin-qt and non-server tools\n-libbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_common_a_SOURCES = \\\n   amount.cpp \\\n   arith_uint256.cpp \\\n@@ -284,7 +291,8 @@ libbitcoin_common_a_SOURCES = \\\n # util: shared between all executables.\n # This library *must* be included to make sure that the glibc\n # backward-compatibility objects and their sanity checks are linked.\n-libbitcoin_util_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_util_a_SOURCES = \\\n   support/pagelocker.cpp \\\n   chainparamsbase.cpp \\\n@@ -308,7 +316,8 @@ libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\n endif\n \n # cli: shared between bitcoin-cli and bitcoin-qt\n-libbitcoin_cli_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_cli_a_SOURCES = \\\n   rpcclient.cpp \\\n   $(BITCOIN_CORE_H)\n@@ -318,7 +327,8 @@ nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n \n # bitcoind binary #\n bitcoind_SOURCES = bitcoind.cpp\n-bitcoind_CPPFLAGS = $(BITCOIN_INCLUDES)\n+bitcoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n@@ -347,7 +357,8 @@ bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPN\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n+bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n+bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n@@ -364,7 +375,8 @@ bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n \n # bitcoin-tx binary #\n bitcoin_tx_SOURCES = bitcoin-tx.cpp\n-bitcoin_tx_CPPFLAGS = $(BITCOIN_INCLUDES)\n+bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n@@ -405,9 +417,10 @@ if GLIBC_BACK_COMPAT\n   libbitcoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n endif\n \n-libbitcoinconsensus_la_LDFLAGS = -no-undefined $(RELDFLAGS)\n+libbitcoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n libbitcoinconsensus_la_LIBADD = $(CRYPTO_LIBS)\n-libbitcoinconsensus_la_CPPFLAGS = $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BITCOIN_INTERNAL\n+libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BITCOIN_INTERNAL\n+libbitcoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n endif\n #\n@@ -443,7 +456,7 @@ clean-local:\n \n .mm.o:\n \t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n-\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n+\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) -c -o $@ $<\n \n %.pb.cc %.pb.h: %.proto\n \t@test -f $(PROTOC)"
      },
      {
        "sha": "d660a3a7473a6a91de93f2e5b4ee595d08fea666",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=3ac70609345a249a74fad61b70f93e8a19245011",
        "patch": "@@ -9,7 +9,8 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/bench.h \\\n   bench/Examples.cpp\n \n-bench_bench_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n@@ -31,7 +32,6 @@ endif\n bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-\n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno\n \n CLEANFILES += $(CLEAN_BITCOIN_BENCH)"
      },
      {
        "sha": "e62003a513bad708db82000dce703a7be122be17",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=3ac70609345a249a74fad61b70f93e8a19245011",
        "patch": "@@ -327,8 +327,9 @@ BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n   -I$(builddir)/qt/forms -DQT_NO_KEYWORDS\n \n-qt_libbitcoinqt_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n   $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n@@ -350,8 +351,9 @@ $(QT_MOC): $(PROTOBUF_H)\n $(QT_MOC_CPP): $(PROTOBUF_H)\n \n # bitcoin-qt binary #\n-qt_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n if TARGET_DARWIN"
      },
      {
        "sha": "ede3fac4c31d53ad19ca789f55fbd51ff3475efc",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=3ac70609345a249a74fad61b70f93e8a19245011",
        "patch": "@@ -12,7 +12,7 @@ TEST_QT_H = \\\n   qt/test/paymentrequestdata.h \\\n   qt/test/paymentservertests.h\n \n-qt_test_test_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n \n qt_test_test_bitcoin_qt_SOURCES = \\\n@@ -38,6 +38,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBIT\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n "
      },
      {
        "sha": "2328d0b4ccc78a4f3429955a7bf7a1092050a889",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ac70609345a249a74fad61b70f93e8a19245011/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=3ac70609345a249a74fad61b70f93e8a19245011",
        "patch": "@@ -93,9 +93,10 @@ BITCOIN_TESTS += \\\n endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-test_test_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n+test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n+test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif"
      }
    ]
  },
  {
    "sha": "6a776faff930986be8c25f28c667b2b41d86aad1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTc3NmZhZmY5MzA5ODZiZThjMjVmMjhjNjY3YjJiNDFkODZhYWQx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-10T12:40:39Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-11T12:28:08Z"
      },
      "message": "[doc] add documentation how to reduce traffic",
      "tree": {
        "sha": "de04a0a749de25605b1ec1a1845389111357eb76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de04a0a749de25605b1ec1a1845389111357eb76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a776faff930986be8c25f28c667b2b41d86aad1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWQzRYAAoJECnUvLZBb1Psx9YP/1tn6jCNiGVZzOBNCMhpT9hu\nUIHbLvQmTR4XHQP5WT2WEaYt3UtBBxUAAUsJ+dA51AmHxxsGjNnAwSlYQo1XOuX5\n6kON9pbfIZhdnTeQgTtBZIuxnQf5bqshBLi8YTbxaMkVqml2WKmcELRtrQU+KiNP\ntefKS1oaj+BCpktifXVBxaFsXM4kQS5ff0ytxwH9Wu9HYynP6U5QR8qAJqXjBHFQ\nA8LKR0tKgdD/9Z5bN0IO/0o5Jt0caOQA2OoAGg/6Ps28UK8yM1qs1CQ5tXU41Yld\ndV93nFy2yUsOBCd4k020iQUyakynxjVZ9j1YVy3OsCIUaHM2KX8IbOSEtWigTFGB\njUelrpjQ39Oh/HpbEUI0CWatXagcy4rJhtpxpaBLLic46dKOGjpEzse6sif9dM6S\nlgjLFYTsAHnjA/gsDFhgHXE5gstK7A43ZJCOG84sgGsUbGWVpb10AiRRg+9kfRBc\npvpDBYn6L8Xv4YaZWKUIISVBYVRP2FFqkEWUDEPD9kLOhFJfXh/wvOnNGutrseps\nmqEGdk8kRzXJhhAgHIMOwC/5paKUfKTWRm2jf60nJx+gt5WXKieMSHtEoMdit5cH\n8D9YEQtj1UcHURLx3ci66KB0HT6y+8fUbMPQ9TUed/ebCUgqqrItWx4APe4qlYuO\nNdwfWGW/xD7BGE1IBzw2\n=PLlT\n-----END PGP SIGNATURE-----",
        "payload": "tree de04a0a749de25605b1ec1a1845389111357eb76\nparent de7d4591a7ce064ba64c36ccb729f1d94c21aa90\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1447159239 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1447244888 +0100\n\n[doc] add documentation how to reduce traffic\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a776faff930986be8c25f28c667b2b41d86aad1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a776faff930986be8c25f28c667b2b41d86aad1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a776faff930986be8c25f28c667b2b41d86aad1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de7d4591a7ce064ba64c36ccb729f1d94c21aa90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de7d4591a7ce064ba64c36ccb729f1d94c21aa90"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 36,
      "deletions": 0
    },
    "files": [
      {
        "sha": "085da1a287df3767a6d5703d831a8afec9eef9ec",
        "filename": "doc/reducetraffic.md",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a776faff930986be8c25f28c667b2b41d86aad1/doc/reducetraffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a776faff930986be8c25f28c667b2b41d86aad1/doc/reducetraffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reducetraffic.md?ref=6a776faff930986be8c25f28c667b2b41d86aad1",
        "patch": "@@ -0,0 +1,36 @@\n+REDUCE TRAFFIC\n+==============\n+\n+Some node operators need to deal with bandwith cap given by their ISPs.\n+\n+By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+them outbound (and therefore 117 max inbound connections).\n+\n+The default settings can result in relatively significant traffic consumption.\n+\n+\n+Ways to reduce traffic:\n+\n+1. Use `-maxuploadtarget=<MiB per day>`\n+\n+A major part of the traffic is caused by serving historic blocks to other nodes\n+in initial blocks download state (syncing up a new node).\n+This option can be specified in MiB per day and is turned off by default.\n+This is *not* a hard limit but a threshold to minimize the outbound\n+traffic. When the limit is about to be reached, the uploaded data is cut by not\n+serving historic blocks (blocks older than one week).\n+Keep in mind that new nodes require other nodes that are willing to serve\n+historic blocks. **The recommended minimum is 144 blocks per day (max. 144MB\n+per day)**\n+\n+2. Disable \"listening\" (`-listen=0`)\n+\n+Disable listening will result in fewer nodes connected (remind the max of 8\n+outbound peers). Fewer nodes will result in less traffic usage because relaying\n+blocks and transaction needs to be passed to fewer nodes.\n+\n+3. Reduce maximal connections (`-maxconnections=<num>`)\n+\n+Reducing the connected nodes to a miniumum can be desired in case traffic\n+limits are tiny. Keep in mind that bitcoin trustless model works best if you are\n+connected to a handfull of nodes."
      }
    ]
  },
  {
    "sha": "0817bf709425ba878b9f0c2a773ea3baf2aaddc8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowODE3YmY3MDk0MjViYTg3OGI5ZjBjMmE3NzNlYTNiYWYyYWFkZGM4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-11T14:03:29Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-11T14:03:29Z"
      },
      "message": "[doc] Fix FIXME for libblkmaker in release-notes.md",
      "tree": {
        "sha": "cf5c6f722325f1c74982e5752ba94a28ec8e057c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf5c6f722325f1c74982e5752ba94a28ec8e057c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0817bf709425ba878b9f0c2a773ea3baf2aaddc8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0817bf709425ba878b9f0c2a773ea3baf2aaddc8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0817bf709425ba878b9f0c2a773ea3baf2aaddc8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0817bf709425ba878b9f0c2a773ea3baf2aaddc8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ac70609345a249a74fad61b70f93e8a19245011",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ac70609345a249a74fad61b70f93e8a19245011",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ac70609345a249a74fad61b70f93e8a19245011"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f5842127a1a7d96b7f06a4d33f52ef3178679702",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0817bf709425ba878b9f0c2a773ea3baf2aaddc8/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0817bf709425ba878b9f0c2a773ea3baf2aaddc8/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=0817bf709425ba878b9f0c2a773ea3baf2aaddc8",
        "patch": "@@ -143,7 +143,7 @@ higher, it becomes mandatory for all blocks and blocks with versions less than\n \n Bitcoin Core's block templates are now for version 4 blocks only, and any\n mining software relying on its `getblocktemplate` must be updated in parallel\n-to use either libblkmaker version FIXME or any version from 0.5.1 onward. If\n+to use either libblkmaker version 0.4.3 or any version from 0.5.2 onward. If\n you are solo mining, this will affect you the moment you upgrade Bitcoin Core,\n which must be done prior to BIP65 achieving its 951/1001 status.  If you are\n mining with the stratum mining protocol: this does not affect you.  If you are"
      }
    ]
  },
  {
    "sha": "42bae94e344857e1f02e88628933a8b296b8a674",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmJhZTk0ZTM0NDg1N2UxZjAyZTg4NjI4OTMzYThiMjk2YjhhNjc0",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2015-11-11T10:53:48Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-11T14:26:16Z"
      },
      "message": "[doc] Improve lanaguge in reducetraffic.md",
      "tree": {
        "sha": "1e09a93e65920876378e3b1555979f89d1011117",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e09a93e65920876378e3b1555979f89d1011117"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42bae94e344857e1f02e88628933a8b296b8a674",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWQ1AKAAoJECnUvLZBb1PsOv8P/0cj60Jj6LeTB+HCJy0h2ix+\nkm58l0AFRO/ZjHrZwr7Kn3398eHcOzbuq5WiX7U9cb06dDJuYCbNcvKp9nBezDlx\n1QKa54rFTvab9IqFICMsjwgCJKNLv3MCtza8eLSr/xaaG8cPjPGzh/RII038lajf\nAh7HQyczrc+kYZAav6bUW/2mbvXUqC1ruzoVzPeoH49IOOq9UVHml/iK5WiXIbCZ\n1+y4Cfs3EMpEmdhBslVHdo3xsavzP1yETjKjuOQ2DRDniER55lfzeaNWRANkEKij\n1OSmHnjT12ITqTSerq7NEY8jwzt+q1TqekPKAJi9G2IfSaENmfn0XmkJvPdHtBrP\nixE1OPe6gOMDekcMg6YbyxvdUS7TbJD1ZVH36J0rfg2/WYB7gW2YUCeMadNAPXhI\nyZsnewvSmu2vHVwnLIoX61hc5tBoQu8pOAVDHjF/Wavl+EYObjRp3lqv/RBY9gJy\nlrke5yuoSewB6zZJufGDXnr02Z44j3b6TSlVSYpuYNWsibI1/5i9osMdxcONP/OF\nPHTQTWx/u8NZhohSs46D+MD61zG2TbY1xh5Tw7w+I4E02evn/dEpeZ5KekCNl/Ra\nbin+ogvl6GFb5kow3TIA0D2uZEyn9beJ2DgcmTgJKcmjM/i5sDPoSXiDCLqiqDXF\nzdf2R065b51I/M5fGT2q\n=chEQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 1e09a93e65920876378e3b1555979f89d1011117\nparent 6a776faff930986be8c25f28c667b2b41d86aad1\nauthor fanquake <fanquake@gmail.com> 1447239228 +0800\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1447251976 +0100\n\n[doc] Improve lanaguge in reducetraffic.md\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42bae94e344857e1f02e88628933a8b296b8a674",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42bae94e344857e1f02e88628933a8b296b8a674",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42bae94e344857e1f02e88628933a8b296b8a674/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a776faff930986be8c25f28c667b2b41d86aad1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a776faff930986be8c25f28c667b2b41d86aad1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a776faff930986be8c25f28c667b2b41d86aad1"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 17,
      "deletions": 18
    },
    "files": [
      {
        "sha": "a79571913acb1e9c3f6e3ec08401075005ef4524",
        "filename": "doc/reducetraffic.md",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42bae94e344857e1f02e88628933a8b296b8a674/doc/reducetraffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42bae94e344857e1f02e88628933a8b296b8a674/doc/reducetraffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reducetraffic.md?ref=42bae94e344857e1f02e88628933a8b296b8a674",
        "patch": "@@ -1,36 +1,35 @@\n-REDUCE TRAFFIC\n+Reduce Traffic\n ==============\n \n-Some node operators need to deal with bandwith cap given by their ISPs.\n+Some node operators need to deal with bandwith caps imposed by their ISPs.\n \n By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n-them outbound (and therefore 117 max inbound connections).\n+which are outbound. You can therefore, have at most 117 inbound connections.\n \n The default settings can result in relatively significant traffic consumption.\n \n-\n Ways to reduce traffic:\n \n-1. Use `-maxuploadtarget=<MiB per day>`\n+## 1. Use `-maxuploadtarget=<MiB per day>`\n \n-A major part of the traffic is caused by serving historic blocks to other nodes\n-in initial blocks download state (syncing up a new node).\n+A major component of the traffic is caused by serving historic blocks to other nodes\n+during the initial blocks download phase (syncing up a new node).\n This option can be specified in MiB per day and is turned off by default.\n-This is *not* a hard limit but a threshold to minimize the outbound\n-traffic. When the limit is about to be reached, the uploaded data is cut by not\n-serving historic blocks (blocks older than one week).\n+This is *not* a hard limit; only a threshold to minimize the outbound\n+traffic. When the limit is about to be reached, the uploaded data is cut by no\n+longer serving historic blocks (blocks older than one week).\n Keep in mind that new nodes require other nodes that are willing to serve\n historic blocks. **The recommended minimum is 144 blocks per day (max. 144MB\n per day)**\n \n-2. Disable \"listening\" (`-listen=0`)\n+## 2. Disable \"listening\" (`-listen=0`)\n \n-Disable listening will result in fewer nodes connected (remind the max of 8\n-outbound peers). Fewer nodes will result in less traffic usage because relaying\n-blocks and transaction needs to be passed to fewer nodes.\n+Disabling listening will result in fewer nodes connected (remember the maximum of 8\n+outbound peers). Fewer nodes will result in less traffic usage as you are relaying\n+blocks and transactions to fewer nodes.\n \n-3. Reduce maximal connections (`-maxconnections=<num>`)\n+## 3. Reduce maximum connections (`-maxconnections=<num>`)\n \n-Reducing the connected nodes to a miniumum can be desired in case traffic\n-limits are tiny. Keep in mind that bitcoin trustless model works best if you are\n-connected to a handfull of nodes.\n+Reducing the maximum connected nodes to a miniumum could be desirable if traffic\n+limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+connected to a handful of nodes."
      }
    ]
  },
  {
    "sha": "44d7b561bc759e6189892b4be7ecf98f40da4ac4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGQ3YjU2MWJjNzU5ZTYxODk4OTJiNGJlN2VjZjk4ZjQwZGE0YWM0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T17:14:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T17:14:43Z"
      },
      "message": "Merge pull request #6988\n\n0817bf7 [doc] Fix FIXME for libblkmaker in release-notes.md (MarcoFalke)",
      "tree": {
        "sha": "cf5c6f722325f1c74982e5752ba94a28ec8e057c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf5c6f722325f1c74982e5752ba94a28ec8e057c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44d7b561bc759e6189892b4be7ecf98f40da4ac4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQ3eDAAoJEHSBCwEjRsmmCQkH/3s8Gw0dpzw9nvKKTS4n4cXQ\n/m+Gy7UJqh1vPddy9NinpRX9rVIUmUst6vsxIzlbaWqWNK4L4fv3iUt4AlrDutHt\nM0cQRPUSI49r6uXI6gsgEb97cbqe68qguifZYxXLfea3rKlhn/VSSm5zx+auT7qw\nHT0qmlFw3j3oAEgHDTgSuPcIOptag583/ibwaEYG070y7ldGDyC8rskvTQG4WjR2\nkqtj86y4z2BxIle2BkkQA35wBR+sIdspI38Sle2kKUEHIN8YHw/7oQn3sQtmfvN1\nicdG6cGNR9l1kO3vF7b/pr9NWtWcW8qlFw/4Xwp1hbPssfmhKcRQ1qRF1z0SPfI=\n=bwiK\n-----END PGP SIGNATURE-----",
        "payload": "tree cf5c6f722325f1c74982e5752ba94a28ec8e057c\nparent 3ac70609345a249a74fad61b70f93e8a19245011\nparent 0817bf709425ba878b9f0c2a773ea3baf2aaddc8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447262080 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447262083 +0100\n\nMerge pull request #6988\n\n0817bf7 [doc] Fix FIXME for libblkmaker in release-notes.md (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44d7b561bc759e6189892b4be7ecf98f40da4ac4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44d7b561bc759e6189892b4be7ecf98f40da4ac4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44d7b561bc759e6189892b4be7ecf98f40da4ac4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ac70609345a249a74fad61b70f93e8a19245011",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ac70609345a249a74fad61b70f93e8a19245011",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ac70609345a249a74fad61b70f93e8a19245011"
      },
      {
        "sha": "0817bf709425ba878b9f0c2a773ea3baf2aaddc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0817bf709425ba878b9f0c2a773ea3baf2aaddc8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0817bf709425ba878b9f0c2a773ea3baf2aaddc8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f5842127a1a7d96b7f06a4d33f52ef3178679702",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44d7b561bc759e6189892b4be7ecf98f40da4ac4/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44d7b561bc759e6189892b4be7ecf98f40da4ac4/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=44d7b561bc759e6189892b4be7ecf98f40da4ac4",
        "patch": "@@ -143,7 +143,7 @@ higher, it becomes mandatory for all blocks and blocks with versions less than\n \n Bitcoin Core's block templates are now for version 4 blocks only, and any\n mining software relying on its `getblocktemplate` must be updated in parallel\n-to use either libblkmaker version FIXME or any version from 0.5.1 onward. If\n+to use either libblkmaker version 0.4.3 or any version from 0.5.2 onward. If\n you are solo mining, this will affect you the moment you upgrade Bitcoin Core,\n which must be done prior to BIP65 achieving its 951/1001 status.  If you are\n mining with the stratum mining protocol: this does not affect you.  If you are"
      }
    ]
  },
  {
    "sha": "c9743062a37cd4ca2a7a0991b4d5e75517a9c34e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTc0MzA2MmEzN2NkNGNhMmE3YTA5OTFiNGQ1ZTc1NTE3YTljMzRl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T17:27:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T17:27:46Z"
      },
      "message": "Merge pull request #6987\n\n42bae94 [doc] Improve lanaguge in reducetraffic.md (fanquake)\n6a776fa [doc] add documentation how to reduce traffic (Jonas Schnelli)",
      "tree": {
        "sha": "f169768b4c5315fe460923d8b6e2fc88d1e3cab7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f169768b4c5315fe460923d8b6e2fc88d1e3cab7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9743062a37cd4ca2a7a0991b4d5e75517a9c34e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQ3qSAAoJEHSBCwEjRsmm5FgIALjhaT2cohW0m37ptpuAetdr\nPqUUUNXZbmG2XvspcntDY19+Sm95rCEwQT5rAdHVvheIFv/d7DJhaVRVg05yM6aB\nGkhlSjUOg/OvrstDamrvkJmL5lik6RBzjW72ZvA52hVaiTppHKML/4vro/2AaEgU\n5QEUc4CK9hzpaiBzwxmOuuLKs+afVuMQbvAh8Gk7OzznAbgM55xDjVVXnB1dh0wY\nMO0tWpQO+7N/2IV4SY8+/tOF3lcuZx1FziR7Sm/hCJcHaFbnkh/4+/DHIu6M3ZcM\nTcYB7Z0yQUv4wc/mGHDA7EGl/viwNnOeGadEcH+uldonVxQN0IYEjel6eXS6gXA=\n=dj9Q\n-----END PGP SIGNATURE-----",
        "payload": "tree f169768b4c5315fe460923d8b6e2fc88d1e3cab7\nparent 44d7b561bc759e6189892b4be7ecf98f40da4ac4\nparent 42bae94e344857e1f02e88628933a8b296b8a674\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447262859 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447262866 +0100\n\nMerge pull request #6987\n\n42bae94 [doc] Improve lanaguge in reducetraffic.md (fanquake)\n6a776fa [doc] add documentation how to reduce traffic (Jonas Schnelli)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9743062a37cd4ca2a7a0991b4d5e75517a9c34e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c9743062a37cd4ca2a7a0991b4d5e75517a9c34e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9743062a37cd4ca2a7a0991b4d5e75517a9c34e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44d7b561bc759e6189892b4be7ecf98f40da4ac4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44d7b561bc759e6189892b4be7ecf98f40da4ac4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44d7b561bc759e6189892b4be7ecf98f40da4ac4"
      },
      {
        "sha": "42bae94e344857e1f02e88628933a8b296b8a674",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42bae94e344857e1f02e88628933a8b296b8a674",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42bae94e344857e1f02e88628933a8b296b8a674"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a79571913acb1e9c3f6e3ec08401075005ef4524",
        "filename": "doc/reducetraffic.md",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9743062a37cd4ca2a7a0991b4d5e75517a9c34e/doc/reducetraffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9743062a37cd4ca2a7a0991b4d5e75517a9c34e/doc/reducetraffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reducetraffic.md?ref=c9743062a37cd4ca2a7a0991b4d5e75517a9c34e",
        "patch": "@@ -0,0 +1,35 @@\n+Reduce Traffic\n+==============\n+\n+Some node operators need to deal with bandwith caps imposed by their ISPs.\n+\n+By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+which are outbound. You can therefore, have at most 117 inbound connections.\n+\n+The default settings can result in relatively significant traffic consumption.\n+\n+Ways to reduce traffic:\n+\n+## 1. Use `-maxuploadtarget=<MiB per day>`\n+\n+A major component of the traffic is caused by serving historic blocks to other nodes\n+during the initial blocks download phase (syncing up a new node).\n+This option can be specified in MiB per day and is turned off by default.\n+This is *not* a hard limit; only a threshold to minimize the outbound\n+traffic. When the limit is about to be reached, the uploaded data is cut by no\n+longer serving historic blocks (blocks older than one week).\n+Keep in mind that new nodes require other nodes that are willing to serve\n+historic blocks. **The recommended minimum is 144 blocks per day (max. 144MB\n+per day)**\n+\n+## 2. Disable \"listening\" (`-listen=0`)\n+\n+Disabling listening will result in fewer nodes connected (remember the maximum of 8\n+outbound peers). Fewer nodes will result in less traffic usage as you are relaying\n+blocks and transactions to fewer nodes.\n+\n+## 3. Reduce maximum connections (`-maxconnections=<num>`)\n+\n+Reducing the maximum connected nodes to a miniumum could be desirable if traffic\n+limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+connected to a handful of nodes."
      }
    ]
  },
  {
    "sha": "2f71b07d5ed6ac74758e232136e997c94e3df8e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjcxYjA3ZDVlZDZhYzc0NzU4ZTIzMjEzNmU5OTdjOTRlM2RmOGU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T17:30:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T17:30:17Z"
      },
      "message": "Merge pull request #6974\n\n40b77d4 Always allow getheaders from whitelisted peers (Wladimir J. van der Laan)",
      "tree": {
        "sha": "30f709ee7a4c5e1b8c12594eac252b2ccd314760",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30f709ee7a4c5e1b8c12594eac252b2ccd314760"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f71b07d5ed6ac74758e232136e997c94e3df8e6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQ3spAAoJEHSBCwEjRsmmo5AIALtIZCsrE0OgKiEqLm4bSOND\nogorCmn7Mii+bEfMHEn9/236KrhVpiMl0b41D5KWz7lL2LXI52llEZfIUhn3F59x\nuPBHM8MBkX2tbwHODcTEaCSylxqgFhPQ6FN/GI8u3SL7YuE2FfQRgKG+Shyngbxk\nbKemsIAcdCNCbrpeSmF3xxm73IbcaWXB/TkRXjfIbFbMX8rM3Q+sh8HPN4EJjWkQ\nji2LqXN/BXYtmgJqRIAK7qHp7yi7G0MSIMWihvGb2IMQexNxCs3USPIkoSKkstdr\nwViY5RIZ+0Xw+MgO9d1K0yhNs/+jTBQO64vs+9Sv/MIqebjvjbUBy172/KYTDSI=\n=EYBe\n-----END PGP SIGNATURE-----",
        "payload": "tree 30f709ee7a4c5e1b8c12594eac252b2ccd314760\nparent c9743062a37cd4ca2a7a0991b4d5e75517a9c34e\nparent 40b77d450dff6879c50a33d4e7f795c385fb0002\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447263011 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447263017 +0100\n\nMerge pull request #6974\n\n40b77d4 Always allow getheaders from whitelisted peers (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f71b07d5ed6ac74758e232136e997c94e3df8e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f71b07d5ed6ac74758e232136e997c94e3df8e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f71b07d5ed6ac74758e232136e997c94e3df8e6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9743062a37cd4ca2a7a0991b4d5e75517a9c34e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9743062a37cd4ca2a7a0991b4d5e75517a9c34e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9743062a37cd4ca2a7a0991b4d5e75517a9c34e"
      },
      {
        "sha": "40b77d450dff6879c50a33d4e7f795c385fb0002",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40b77d450dff6879c50a33d4e7f795c385fb0002",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40b77d450dff6879c50a33d4e7f795c385fb0002"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f1a4527540d367400f3c0588227906dc5b1ec6f6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f71b07d5ed6ac74758e232136e997c94e3df8e6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f71b07d5ed6ac74758e232136e997c94e3df8e6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2f71b07d5ed6ac74758e232136e997c94e3df8e6",
        "patch": "@@ -4317,10 +4317,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         vRecv >> locator >> hashStop;\n \n         LOCK(cs_main);\n-\n-        if (IsInitialBlockDownload())\n+        if (IsInitialBlockDownload() && !pfrom->fWhitelisted) {\n+            LogPrint(\"net\", \"Ignoring getheaders from peer=%d because node is in initial block download\\n\", pfrom->id);\n             return true;\n-\n+        }\n         CBlockIndex* pindex = NULL;\n         if (locator.IsNull())\n         {"
      }
    ]
  },
  {
    "sha": "cbf9609c71c6dca6efac8504dc9bd82f6b205cc9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmY5NjA5YzcxYzZkY2E2ZWZhYzg1MDRkYzliZDgyZjZiMjA1Y2M5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T17:44:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T17:44:28Z"
      },
      "message": "Merge pull request #6969\n\n7085728 doc: there is no libboost-base-dev, add missing sudo (Wladimir J. van der Laan)",
      "tree": {
        "sha": "9edcba8841c595f2132a3ce8194638755f2a0618",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9edcba8841c595f2132a3ce8194638755f2a0618"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbf9609c71c6dca6efac8504dc9bd82f6b205cc9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWQ358AAoJEHSBCwEjRsmmqzgH/R22CZLmDPiVtB9nCp5hU9Hs\n4lxEgvBq//WIbsN62WQqpXxIbCBxg7YHbrW68vN+81yleSYaz5M93oV0CUeu9Rlj\nWOM+TLObdUBhERv89LcT0IPEyvemk8pnHR7h/XB4KmAfJnqY4DE57ePrZ5jCG/Ft\nffTwbmK8TlpnKDC4PxQmFjkV+1nxzs9bzSsmD419WbOCmlS2ENz39o4WiBrb0ekS\nQi27CCTcu0rX2n0zC2gYhlcqYuonYz65hwjAmSunMTSQSrlMMtu2iJi6tFLldIl2\nKR4K1bLEogF8hy1ssMtTxT9a8tZJVSJtdKsFLNwtniwz5b2lh0THKkFht1szC+4=\n=AVmR\n-----END PGP SIGNATURE-----",
        "payload": "tree 9edcba8841c595f2132a3ce8194638755f2a0618\nparent 2f71b07d5ed6ac74758e232136e997c94e3df8e6\nparent 70857287869fa33f4bcbe346fccd86f9facdece5\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447263849 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447263868 +0100\n\nMerge pull request #6969\n\n7085728 doc: there is no libboost-base-dev, add missing sudo (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbf9609c71c6dca6efac8504dc9bd82f6b205cc9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cbf9609c71c6dca6efac8504dc9bd82f6b205cc9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbf9609c71c6dca6efac8504dc9bd82f6b205cc9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f71b07d5ed6ac74758e232136e997c94e3df8e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f71b07d5ed6ac74758e232136e997c94e3df8e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f71b07d5ed6ac74758e232136e997c94e3df8e6"
      },
      {
        "sha": "70857287869fa33f4bcbe346fccd86f9facdece5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70857287869fa33f4bcbe346fccd86f9facdece5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70857287869fa33f4bcbe346fccd86f9facdece5"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e1f2ce54d3ec884a7a5a6fe0ecdcdbfaa90620bf",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbf9609c71c6dca6efac8504dc9bd82f6b205cc9/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbf9609c71c6dca6efac8504dc9bd82f6b205cc9/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=cbf9609c71c6dca6efac8504dc9bd82f6b205cc9",
        "patch": "@@ -61,15 +61,15 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-    sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev\n+    sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev bsdmainutils\n \n-On Ubuntu 15.10+ there are generic names for the individual boost development\n-packages, so the following can be used to only install necessary parts of\n-boost:\n+On at least Ubuntu 14.04+ and Debian 7+ there are generic names for the\n+individual boost development packages, so the following can be used to only\n+install necessary parts of boost:\n \n-    apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libboost-base-dev\n+    sudo apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev\n \n-For Ubuntu before 15.10, or Debian 7 and later libboost-all-dev has to be installed:\n+If that doesn't work, you can install all boost development packages with:\n \n     sudo apt-get install libboost-all-dev\n "
      }
    ]
  },
  {
    "sha": "b5cbd396ca7214f4f944163ed314456038fdd818",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWNiZDM5NmNhNzIxNGY0Zjk0NDE2M2VkMzE0NDU2MDM4ZmRkODE4",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2015-10-11T05:41:19Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2015-11-11T18:33:43Z"
      },
      "message": "Add basic coverage reporting for RPC tests\n\nThanks to @MarcoFalke @dexX7 @laanwj for review.",
      "tree": {
        "sha": "840fb2890c1b703c0b5d08d19a103003ae238eb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/840fb2890c1b703c0b5d08d19a103003ae238eb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5cbd396ca7214f4f944163ed314456038fdd818",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5cbd396ca7214f4f944163ed314456038fdd818",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5cbd396ca7214f4f944163ed314456038fdd818",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5cbd396ca7214f4f944163ed314456038fdd818/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f"
      }
    ],
    "stats": {
      "total": 389,
      "additions": 334,
      "deletions": 55
    },
    "files": [
      {
        "sha": "d2fbfee6f2d2fa067042498563ad2c190e204f70",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5cbd396ca7214f4f944163ed314456038fdd818/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5cbd396ca7214f4f944163ed314456038fdd818/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=b5cbd396ca7214f4f944163ed314456038fdd818",
        "patch": "@@ -69,6 +69,6 @@ script:\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n after_script:\n     - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      },
      {
        "sha": "891962ac14b75f48e8491b184ab602a5a6f7abc4",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 152,
        "deletions": 30,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5cbd396ca7214f4f944163ed314456038fdd818/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5cbd396ca7214f4f944163ed314456038fdd818/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=b5cbd396ca7214f4f944163ed314456038fdd818",
        "patch": "@@ -3,16 +3,32 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#\n-# Run Regression Test Suite\n-#\n+\"\"\"\n+Run Regression Test Suite\n+\n+This module calls down into individual test cases via subprocess. It will\n+forward all unrecognized arguments onto the individual test scripts, other\n+than:\n+\n+    - `-extended`: run the \"extended\" test suite in addition to the basic one.\n+    - `-win`: signal that this is running in a Windows environment, and we\n+      should run the tests.\n+    - `--coverage`: this generates a basic coverage report for the RPC\n+      interface.\n+\n+For a description of arguments recognized by test scripts, see\n+`qa/pull-tester/test_framework/test_framework.py:BitcoinTestFramework.main`.\n+\n+\"\"\"\n \n import os\n+import shutil\n import sys\n import subprocess\n+import tempfile\n import re\n+\n from tests_config import *\n-from sets import Set\n \n #If imported values are not defined then set to zero (or disabled)\n if not vars().has_key('ENABLE_WALLET'):\n@@ -24,15 +40,20 @@\n if not vars().has_key('ENABLE_ZMQ'):\n     ENABLE_ZMQ=0\n \n+ENABLE_COVERAGE=0\n+\n #Create a set to store arguments and create the passOn string\n-opts = Set()\n+opts = set()\n passOn = \"\"\n p = re.compile(\"^--\")\n-for i in range(1,len(sys.argv)):\n-    if (p.match(sys.argv[i]) or sys.argv[i] == \"-h\"):\n-        passOn += \" \" + sys.argv[i]\n+\n+for arg in sys.argv[1:]:\n+    if arg == '--coverage':\n+        ENABLE_COVERAGE = 1\n+    elif (p.match(arg) or arg == \"-h\"):\n+        passOn += \" \" + arg\n     else:\n-        opts.add(sys.argv[i])\n+        opts.add(arg)\n \n #Set env vars\n buildDir = BUILDDIR\n@@ -97,24 +118,125 @@\n if ENABLE_ZMQ == 1:\n     testScripts.append('zmq_test.py')\n \n-if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n-    rpcTestDir = buildDir + '/qa/rpc-tests/'\n-    #Run Tests\n-    for i in range(len(testScripts)):\n-       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts\n-           or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n-            print  \"Running testscript \" + testScripts[i] + \"...\"\n-            subprocess.check_call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n-\t    #exit if help is called so we print just one set of instructions\n-            p = re.compile(\" -h| --help\")\n-            if p.match(passOn):\n-                sys.exit(0)\n-\n-    #Run Extended Tests\n-    for i in range(len(testScriptsExt)):\n-        if ('-extended' in opts or testScriptsExt[i] in opts\n-           or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n-            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\"\n-            subprocess.check_call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n-else:\n-    print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n+\n+def runtests():\n+    coverage = None\n+\n+    if ENABLE_COVERAGE:\n+        coverage = RPCCoverage()\n+        print(\"Initializing coverage directory at %s\" % coverage.dir)\n+\n+    if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n+        rpcTestDir = buildDir + '/qa/rpc-tests/'\n+        run_extended = '-extended' in opts\n+        cov_flag = coverage.flag if coverage else ''\n+        flags = \" --srcdir %s/src %s %s\" % (buildDir, cov_flag, passOn)\n+\n+        #Run Tests\n+        for i in range(len(testScripts)):\n+            if (len(opts) == 0\n+                    or (len(opts) == 1 and \"-win\" in opts )\n+                    or run_extended\n+                    or testScripts[i] in opts\n+                    or re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n+                print(\"Running testscript \" + testScripts[i] + \"...\")\n+\n+                subprocess.check_call(\n+                    rpcTestDir + testScripts[i] + flags, shell=True)\n+\n+                # exit if help is called so we print just one set of\n+                # instructions\n+                p = re.compile(\" -h| --help\")\n+                if p.match(passOn):\n+                    sys.exit(0)\n+\n+        # Run Extended Tests\n+        for i in range(len(testScriptsExt)):\n+            if (run_extended or testScriptsExt[i] in opts\n+                    or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n+                print(\n+                    \"Running 2nd level testscript \"\n+                    + testScriptsExt[i] + \"...\")\n+\n+                subprocess.check_call(\n+                    rpcTestDir + testScriptsExt[i] + flags, shell=True)\n+\n+        if coverage:\n+            coverage.report_rpc_coverage()\n+\n+            print(\"Cleaning up coverage data\")\n+            coverage.cleanup()\n+\n+    else:\n+        print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n+\n+\n+class RPCCoverage(object):\n+    \"\"\"\n+    Coverage reporting utilities for pull-tester.\n+\n+    Coverage calculation works by having each test script subprocess write\n+    coverage files into a particular directory. These files contain the RPC\n+    commands invoked during testing, as well as a complete listing of RPC\n+    commands per `bitcoin-cli help` (`rpc_interface.txt`).\n+\n+    After all tests complete, the commands run are combined and diff'd against\n+    the complete list to calculate uncovered RPC commands.\n+\n+    See also: qa/rpc-tests/test_framework/coverage.py\n+\n+    \"\"\"\n+    def __init__(self):\n+        self.dir = tempfile.mkdtemp(prefix=\"coverage\")\n+        self.flag = '--coveragedir %s' % self.dir\n+\n+    def report_rpc_coverage(self):\n+        \"\"\"\n+        Print out RPC commands that were unexercised by tests.\n+\n+        \"\"\"\n+        uncovered = self._get_uncovered_rpc_commands()\n+\n+        if uncovered:\n+            print(\"Uncovered RPC commands:\")\n+            print(\"\".join((\"  - %s\\n\" % i) for i in sorted(uncovered)))\n+        else:\n+            print(\"All RPC commands covered.\")\n+\n+    def cleanup(self):\n+        return shutil.rmtree(self.dir)\n+\n+    def _get_uncovered_rpc_commands(self):\n+        \"\"\"\n+        Return a set of currently untested RPC commands.\n+\n+        \"\"\"\n+        # This is shared from `qa/rpc-tests/test-framework/coverage.py`\n+        REFERENCE_FILENAME = 'rpc_interface.txt'\n+        COVERAGE_FILE_PREFIX = 'coverage.'\n+\n+        coverage_ref_filename = os.path.join(self.dir, REFERENCE_FILENAME)\n+        coverage_filenames = set()\n+        all_cmds = set()\n+        covered_cmds = set()\n+\n+        if not os.path.isfile(coverage_ref_filename):\n+            raise RuntimeError(\"No coverage reference found\")\n+\n+        with open(coverage_ref_filename, 'r') as f:\n+            all_cmds.update([i.strip() for i in f.readlines()])\n+\n+        for root, dirs, files in os.walk(self.dir):\n+            for filename in files:\n+                if filename.startswith(COVERAGE_FILE_PREFIX):\n+                    coverage_filenames.add(os.path.join(root, filename))\n+\n+        for filename in coverage_filenames:\n+            with open(filename, 'r') as f:\n+                covered_cmds.update([i.strip() for i in f.readlines()])\n+\n+        return all_cmds - covered_cmds\n+\n+\n+if __name__ == '__main__':\n+    runtests()"
      },
      {
        "sha": "1ddff8a2982e4dbeb7b4f64b1539acc6ebf861a0",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=b5cbd396ca7214f4f944163ed314456038fdd818",
        "patch": "@@ -38,7 +38,7 @@ def __init__(self, node):\n         self.longpollid = templat['longpollid']\n         # create a new connection to the node, we can't use the same\n         # connection from two threads\n-        self.node = AuthServiceProxy(node.url, timeout=600)\n+        self.node = get_rpc_proxy(node.url, 1, timeout=600)\n \n     def run(self):\n         self.node.getblocktemplate({'longpollid':self.longpollid})"
      },
      {
        "sha": "7a9da667874b8f44f6047825549fe7d49547fe49",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=b5cbd396ca7214f4f944163ed314456038fdd818",
        "patch": "@@ -47,7 +47,7 @@ def run_allowip_test(tmpdir, allow_ips, rpchost, rpcport):\n     try:\n         # connect to node through non-loopback interface\n         url = \"http://rt:rt@%s:%d\" % (rpchost, rpcport,)\n-        node = AuthServiceProxy(url)\n+        node = get_rpc_proxy(url, 1)\n         node.getinfo()\n     finally:\n         node = None # make sure connection will be garbage collected and closed"
      },
      {
        "sha": "fba469a0dd0b6b0f330b7bc96e104d938ac91311",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=b5cbd396ca7214f4f944163ed314456038fdd818",
        "patch": "@@ -69,7 +69,7 @@ class AuthServiceProxy(object):\n \n     def __init__(self, service_url, service_name=None, timeout=HTTP_TIMEOUT, connection=None):\n         self.__service_url = service_url\n-        self.__service_name = service_name\n+        self._service_name = service_name\n         self.__url = urlparse.urlparse(service_url)\n         if self.__url.port is None:\n             port = 80\n@@ -102,8 +102,8 @@ def __getattr__(self, name):\n         if name.startswith('__') and name.endswith('__'):\n             # Python internal stuff\n             raise AttributeError\n-        if self.__service_name is not None:\n-            name = \"%s.%s\" % (self.__service_name, name)\n+        if self._service_name is not None:\n+            name = \"%s.%s\" % (self._service_name, name)\n         return AuthServiceProxy(self.__service_url, name, connection=self.__conn)\n \n     def _request(self, method, path, postdata):\n@@ -129,10 +129,10 @@ def _request(self, method, path, postdata):\n     def __call__(self, *args):\n         AuthServiceProxy.__id_count += 1\n \n-        log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self.__service_name,\n+        log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self._service_name,\n                                  json.dumps(args, default=EncodeDecimal)))\n         postdata = json.dumps({'version': '1.1',\n-                               'method': self.__service_name,\n+                               'method': self._service_name,\n                                'params': args,\n                                'id': AuthServiceProxy.__id_count}, default=EncodeDecimal)\n         response = self._request('POST', self.__url.path, postdata)"
      },
      {
        "sha": "50f066a8509d26865526cc1d0782cd0c08719857",
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "added",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=b5cbd396ca7214f4f944163ed314456038fdd818",
        "patch": "@@ -0,0 +1,101 @@\n+\"\"\"\n+This module contains utilities for doing coverage analysis on the RPC\n+interface.\n+\n+It provides a way to track which RPC commands are exercised during\n+testing.\n+\n+\"\"\"\n+import os\n+\n+\n+REFERENCE_FILENAME = 'rpc_interface.txt'\n+\n+\n+class AuthServiceProxyWrapper(object):\n+    \"\"\"\n+    An object that wraps AuthServiceProxy to record specific RPC calls.\n+\n+    \"\"\"\n+    def __init__(self, auth_service_proxy_instance, coverage_logfile=None):\n+        \"\"\"\n+        Kwargs:\n+            auth_service_proxy_instance (AuthServiceProxy): the instance\n+                being wrapped.\n+            coverage_logfile (str): if specified, write each service_name\n+                out to a file when called.\n+\n+        \"\"\"\n+        self.auth_service_proxy_instance = auth_service_proxy_instance\n+        self.coverage_logfile = coverage_logfile\n+\n+    def __getattr__(self, *args, **kwargs):\n+        return_val = self.auth_service_proxy_instance.__getattr__(\n+            *args, **kwargs)\n+\n+        return AuthServiceProxyWrapper(return_val, self.coverage_logfile)\n+\n+    def __call__(self, *args, **kwargs):\n+        \"\"\"\n+        Delegates to AuthServiceProxy, then writes the particular RPC method\n+        called to a file.\n+\n+        \"\"\"\n+        return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\n+        rpc_method = self.auth_service_proxy_instance._service_name\n+\n+        if self.coverage_logfile:\n+            with open(self.coverage_logfile, 'a+') as f:\n+                f.write(\"%s\\n\" % rpc_method)\n+\n+        return return_val\n+\n+    @property\n+    def url(self):\n+        return self.auth_service_proxy_instance.url\n+\n+\n+def get_filename(dirname, n_node):\n+    \"\"\"\n+    Get a filename unique to the test process ID and node.\n+\n+    This file will contain a list of RPC commands covered.\n+    \"\"\"\n+    pid = str(os.getpid())\n+    return os.path.join(\n+        dirname, \"coverage.pid%s.node%s.txt\" % (pid, str(n_node)))\n+\n+\n+def write_all_rpc_commands(dirname, node):\n+    \"\"\"\n+    Write out a list of all RPC functions available in `bitcoin-cli` for\n+    coverage comparison. This will only happen once per coverage\n+    directory.\n+\n+    Args:\n+        dirname (str): temporary test dir\n+        node (AuthServiceProxy): client\n+\n+    Returns:\n+        bool. if the RPC interface file was written.\n+\n+    \"\"\"\n+    filename = os.path.join(dirname, REFERENCE_FILENAME)\n+\n+    if os.path.isfile(filename):\n+        return False\n+\n+    help_output = node.help().split('\\n')\n+    commands = set()\n+\n+    for line in help_output:\n+        line = line.strip()\n+\n+        # Ignore blanks and headers\n+        if line and not line.startswith('='):\n+            commands.add(\"%s\\n\" % line.split()[0])\n+\n+    with open(filename, 'w') as f:\n+        f.writelines(list(commands))\n+\n+    return True"
      },
      {
        "sha": "ae2d91ab60b7c0d7a7fbdda20ad7878e572ba5a8",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 23,
        "deletions": 5,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=b5cbd396ca7214f4f944163ed314456038fdd818",
        "patch": "@@ -13,8 +13,20 @@\n import tempfile\n import traceback\n \n+from .util import (\n+    initialize_chain,\n+    assert_equal,\n+    start_nodes,\n+    connect_nodes_bi,\n+    sync_blocks,\n+    sync_mempools,\n+    stop_nodes,\n+    wait_bitcoinds,\n+    enable_coverage,\n+    check_json_precision,\n+    initialize_chain_clean,\n+)\n from authproxy import AuthServiceProxy, JSONRPCException\n-from util import *\n \n \n class BitcoinTestFramework(object):\n@@ -96,13 +108,18 @@ def main(self):\n                           help=\"Root directory for datadirs\")\n         parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n                           help=\"Print out all RPC calls as they are made\")\n+        parser.add_option(\"--coveragedir\", dest=\"coveragedir\",\n+                          help=\"Write tested RPC commands into this directory\")\n         self.add_options(parser)\n         (self.options, self.args) = parser.parse_args()\n \n         if self.options.trace_rpc:\n             import logging\n             logging.basicConfig(level=logging.DEBUG)\n \n+        if self.options.coveragedir:\n+            enable_coverage(self.options.coveragedir)\n+\n         os.environ['PATH'] = self.options.srcdir+\":\"+os.environ['PATH']\n \n         check_json_precision()\n@@ -173,7 +190,8 @@ def setup_chain(self):\n         initialize_chain_clean(self.options.tmpdir, self.num_nodes)\n \n     def setup_network(self):\n-        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir,\n-                                    extra_args=[['-debug', '-whitelist=127.0.0.1']] * self.num_nodes,\n-                                    binary=[self.options.testbinary] +\n-                                           [self.options.refbinary]*(self.num_nodes-1))\n+        self.nodes = start_nodes(\n+            self.num_nodes, self.options.tmpdir,\n+            extra_args=[['-debug', '-whitelist=127.0.0.1']] * self.num_nodes,\n+            binary=[self.options.testbinary] +\n+            [self.options.refbinary]*(self.num_nodes-1))"
      },
      {
        "sha": "30dd5de58560492c70b0ea55c98a20f8ddcc146a",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 50,
        "deletions": 12,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5cbd396ca7214f4f944163ed314456038fdd818/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=b5cbd396ca7214f4f944163ed314456038fdd818",
        "patch": "@@ -17,8 +17,43 @@\n import time\n import re\n \n-from authproxy import AuthServiceProxy, JSONRPCException\n-from util import *\n+from . import coverage\n+from .authproxy import AuthServiceProxy, JSONRPCException\n+\n+COVERAGE_DIR = None\n+\n+\n+def enable_coverage(dirname):\n+    \"\"\"Maintain a log of which RPC calls are made during testing.\"\"\"\n+    global COVERAGE_DIR\n+    COVERAGE_DIR = dirname\n+\n+\n+def get_rpc_proxy(url, node_number, timeout=None):\n+    \"\"\"\n+    Args:\n+        url (str): URL of the RPC server to call\n+        node_number (int): the node number (or id) that this calls to\n+\n+    Kwargs:\n+        timeout (int): HTTP timeout in seconds\n+\n+    Returns:\n+        AuthServiceProxy. convenience object for making RPC calls.\n+\n+    \"\"\"\n+    proxy_kwargs = {}\n+    if timeout is not None:\n+        proxy_kwargs['timeout'] = timeout\n+\n+    proxy = AuthServiceProxy(url, **proxy_kwargs)\n+    proxy.url = url  # store URL on proxy for info\n+\n+    coverage_logfile = coverage.get_filename(\n+        COVERAGE_DIR, node_number) if COVERAGE_DIR else None\n+\n+    return coverage.AuthServiceProxyWrapper(proxy, coverage_logfile)\n+\n \n def p2p_port(n):\n     return 11000 + n + os.getpid()%999\n@@ -79,13 +114,13 @@ def initialize_chain(test_dir):\n     \"\"\"\n \n     if (not os.path.isdir(os.path.join(\"cache\",\"node0\"))\n-        or not os.path.isdir(os.path.join(\"cache\",\"node1\")) \n-        or not os.path.isdir(os.path.join(\"cache\",\"node2\")) \n+        or not os.path.isdir(os.path.join(\"cache\",\"node1\"))\n+        or not os.path.isdir(os.path.join(\"cache\",\"node2\"))\n         or not os.path.isdir(os.path.join(\"cache\",\"node3\"))):\n \n         #find and delete old cache directories if any exist\n         for i in range(4):\n-            if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))): \n+            if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))):\n                 shutil.rmtree(os.path.join(\"cache\",\"node\"+str(i)))\n \n         devnull = open(os.devnull, \"w\")\n@@ -103,11 +138,13 @@ def initialize_chain(test_dir):\n             if os.getenv(\"PYTHON_DEBUG\", \"\"):\n                 print \"initialize_chain: bitcoin-cli -rpcwait getblockcount completed\"\n         devnull.close()\n+\n         rpcs = []\n+\n         for i in range(4):\n             try:\n-                url = \"http://rt:rt@127.0.0.1:%d\"%(rpc_port(i),)\n-                rpcs.append(AuthServiceProxy(url))\n+                url = \"http://rt:rt@127.0.0.1:%d\" % (rpc_port(i),)\n+                rpcs.append(get_rpc_proxy(url, i))\n             except:\n                 sys.stderr.write(\"Error connecting to \"+url+\"\\n\")\n                 sys.exit(1)\n@@ -190,11 +227,12 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n         print \"start_node: calling bitcoin-cli -rpcwait getblockcount returned\"\n     devnull.close()\n     url = \"http://rt:rt@%s:%d\" % (rpchost or '127.0.0.1', rpc_port(i))\n-    if timewait is not None:\n-        proxy = AuthServiceProxy(url, timeout=timewait)\n-    else:\n-        proxy = AuthServiceProxy(url)\n-    proxy.url = url # store URL on proxy for info\n+\n+    proxy = get_rpc_proxy(url, i, timeout=timewait)\n+\n+    if COVERAGE_DIR:\n+        coverage.write_all_rpc_commands(COVERAGE_DIR, proxy)\n+\n     return proxy\n \n def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, binary=None):"
      }
    ]
  },
  {
    "sha": "5fcc14ee0562faff2ace17082f664e60c375b334",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmNjMTRlZTA1NjJmYWZmMmFjZTE3MDgyZjY2NGU2MGMzNzViMzM0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T07:12:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T07:22:36Z"
      },
      "message": "Merge pull request #6804\n\nb5cbd39 Add basic coverage reporting for RPC tests (James O'Beirne)",
      "tree": {
        "sha": "f546298e4e9cfa8ccccd1ae44ec918ea8f014296",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f546298e4e9cfa8ccccd1ae44ec918ea8f014296"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fcc14ee0562faff2ace17082f664e60c375b334",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWRD48AAoJEHSBCwEjRsmmkNEH/1cwrRsUjdwWDhdAjtrID+e1\nUQKYXWzG9ltEhmDMDY1eWQ/1g9q1mSRQLndUurwcwMq+IxgwJle7qAgVVVe6a0/3\n2M+uA47PnTzOORiaKlM/2W4zzgEDGe5N1qOt4YzzIz1LigIouOGCCUuYOBCHyvSb\nb/UNzasffNM2OGR56bNN9hqij2Gwl6dByDtRbTSgczrACzTJRLEtNLcwaaZfEuP7\n9yVn9CtOaxFSW6W/JcK4cZpbHJubdlDPlTkqiI+140izZ8UK8ltV6cCUvrYm+Q+o\nNMTorfcLdC/HSA2q9dnIlm+UBfD4pryRo0oPHs8HUWEDu1YgvgSN6Lgb6XTX7l4=\n=M1Cx\n-----END PGP SIGNATURE-----",
        "payload": "tree f546298e4e9cfa8ccccd1ae44ec918ea8f014296\nparent cbf9609c71c6dca6efac8504dc9bd82f6b205cc9\nparent b5cbd396ca7214f4f944163ed314456038fdd818\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447312379 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447312956 +0100\n\nMerge pull request #6804\n\nb5cbd39 Add basic coverage reporting for RPC tests (James O'Beirne)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fcc14ee0562faff2ace17082f664e60c375b334",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fcc14ee0562faff2ace17082f664e60c375b334",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fcc14ee0562faff2ace17082f664e60c375b334/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cbf9609c71c6dca6efac8504dc9bd82f6b205cc9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbf9609c71c6dca6efac8504dc9bd82f6b205cc9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cbf9609c71c6dca6efac8504dc9bd82f6b205cc9"
      },
      {
        "sha": "b5cbd396ca7214f4f944163ed314456038fdd818",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5cbd396ca7214f4f944163ed314456038fdd818",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5cbd396ca7214f4f944163ed314456038fdd818"
      }
    ],
    "stats": {
      "total": 389,
      "additions": 334,
      "deletions": 55
    },
    "files": [
      {
        "sha": "d2fbfee6f2d2fa067042498563ad2c190e204f70",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcc14ee0562faff2ace17082f664e60c375b334/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcc14ee0562faff2ace17082f664e60c375b334/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=5fcc14ee0562faff2ace17082f664e60c375b334",
        "patch": "@@ -69,6 +69,6 @@ script:\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n after_script:\n     - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      },
      {
        "sha": "83fc9b8f96879aa3acee6828abc7a1de45291939",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 152,
        "deletions": 30,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcc14ee0562faff2ace17082f664e60c375b334/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcc14ee0562faff2ace17082f664e60c375b334/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=5fcc14ee0562faff2ace17082f664e60c375b334",
        "patch": "@@ -3,16 +3,32 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#\n-# Run Regression Test Suite\n-#\n+\"\"\"\n+Run Regression Test Suite\n+\n+This module calls down into individual test cases via subprocess. It will\n+forward all unrecognized arguments onto the individual test scripts, other\n+than:\n+\n+    - `-extended`: run the \"extended\" test suite in addition to the basic one.\n+    - `-win`: signal that this is running in a Windows environment, and we\n+      should run the tests.\n+    - `--coverage`: this generates a basic coverage report for the RPC\n+      interface.\n+\n+For a description of arguments recognized by test scripts, see\n+`qa/pull-tester/test_framework/test_framework.py:BitcoinTestFramework.main`.\n+\n+\"\"\"\n \n import os\n+import shutil\n import sys\n import subprocess\n+import tempfile\n import re\n+\n from tests_config import *\n-from sets import Set\n \n #If imported values are not defined then set to zero (or disabled)\n if not vars().has_key('ENABLE_WALLET'):\n@@ -24,15 +40,20 @@\n if not vars().has_key('ENABLE_ZMQ'):\n     ENABLE_ZMQ=0\n \n+ENABLE_COVERAGE=0\n+\n #Create a set to store arguments and create the passOn string\n-opts = Set()\n+opts = set()\n passOn = \"\"\n p = re.compile(\"^--\")\n-for i in range(1,len(sys.argv)):\n-    if (p.match(sys.argv[i]) or sys.argv[i] == \"-h\"):\n-        passOn += \" \" + sys.argv[i]\n+\n+for arg in sys.argv[1:]:\n+    if arg == '--coverage':\n+        ENABLE_COVERAGE = 1\n+    elif (p.match(arg) or arg == \"-h\"):\n+        passOn += \" \" + arg\n     else:\n-        opts.add(sys.argv[i])\n+        opts.add(arg)\n \n #Set env vars\n buildDir = BUILDDIR\n@@ -98,24 +119,125 @@\n if ENABLE_ZMQ == 1:\n     testScripts.append('zmq_test.py')\n \n-if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n-    rpcTestDir = buildDir + '/qa/rpc-tests/'\n-    #Run Tests\n-    for i in range(len(testScripts)):\n-       if (len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts ) or '-extended' in opts\n-           or testScripts[i] in opts or  re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n-            print  \"Running testscript \" + testScripts[i] + \"...\"\n-            subprocess.check_call(rpcTestDir + testScripts[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n-\t    #exit if help is called so we print just one set of instructions\n-            p = re.compile(\" -h| --help\")\n-            if p.match(passOn):\n-                sys.exit(0)\n-\n-    #Run Extended Tests\n-    for i in range(len(testScriptsExt)):\n-        if ('-extended' in opts or testScriptsExt[i] in opts\n-           or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n-            print  \"Running 2nd level testscript \" + testScriptsExt[i] + \"...\"\n-            subprocess.check_call(rpcTestDir + testScriptsExt[i] + \" --srcdir \" + buildDir + '/src ' + passOn,shell=True)\n-else:\n-    print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n+\n+def runtests():\n+    coverage = None\n+\n+    if ENABLE_COVERAGE:\n+        coverage = RPCCoverage()\n+        print(\"Initializing coverage directory at %s\" % coverage.dir)\n+\n+    if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n+        rpcTestDir = buildDir + '/qa/rpc-tests/'\n+        run_extended = '-extended' in opts\n+        cov_flag = coverage.flag if coverage else ''\n+        flags = \" --srcdir %s/src %s %s\" % (buildDir, cov_flag, passOn)\n+\n+        #Run Tests\n+        for i in range(len(testScripts)):\n+            if (len(opts) == 0\n+                    or (len(opts) == 1 and \"-win\" in opts )\n+                    or run_extended\n+                    or testScripts[i] in opts\n+                    or re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n+                print(\"Running testscript \" + testScripts[i] + \"...\")\n+\n+                subprocess.check_call(\n+                    rpcTestDir + testScripts[i] + flags, shell=True)\n+\n+                # exit if help is called so we print just one set of\n+                # instructions\n+                p = re.compile(\" -h| --help\")\n+                if p.match(passOn):\n+                    sys.exit(0)\n+\n+        # Run Extended Tests\n+        for i in range(len(testScriptsExt)):\n+            if (run_extended or testScriptsExt[i] in opts\n+                    or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n+                print(\n+                    \"Running 2nd level testscript \"\n+                    + testScriptsExt[i] + \"...\")\n+\n+                subprocess.check_call(\n+                    rpcTestDir + testScriptsExt[i] + flags, shell=True)\n+\n+        if coverage:\n+            coverage.report_rpc_coverage()\n+\n+            print(\"Cleaning up coverage data\")\n+            coverage.cleanup()\n+\n+    else:\n+        print \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\"\n+\n+\n+class RPCCoverage(object):\n+    \"\"\"\n+    Coverage reporting utilities for pull-tester.\n+\n+    Coverage calculation works by having each test script subprocess write\n+    coverage files into a particular directory. These files contain the RPC\n+    commands invoked during testing, as well as a complete listing of RPC\n+    commands per `bitcoin-cli help` (`rpc_interface.txt`).\n+\n+    After all tests complete, the commands run are combined and diff'd against\n+    the complete list to calculate uncovered RPC commands.\n+\n+    See also: qa/rpc-tests/test_framework/coverage.py\n+\n+    \"\"\"\n+    def __init__(self):\n+        self.dir = tempfile.mkdtemp(prefix=\"coverage\")\n+        self.flag = '--coveragedir %s' % self.dir\n+\n+    def report_rpc_coverage(self):\n+        \"\"\"\n+        Print out RPC commands that were unexercised by tests.\n+\n+        \"\"\"\n+        uncovered = self._get_uncovered_rpc_commands()\n+\n+        if uncovered:\n+            print(\"Uncovered RPC commands:\")\n+            print(\"\".join((\"  - %s\\n\" % i) for i in sorted(uncovered)))\n+        else:\n+            print(\"All RPC commands covered.\")\n+\n+    def cleanup(self):\n+        return shutil.rmtree(self.dir)\n+\n+    def _get_uncovered_rpc_commands(self):\n+        \"\"\"\n+        Return a set of currently untested RPC commands.\n+\n+        \"\"\"\n+        # This is shared from `qa/rpc-tests/test-framework/coverage.py`\n+        REFERENCE_FILENAME = 'rpc_interface.txt'\n+        COVERAGE_FILE_PREFIX = 'coverage.'\n+\n+        coverage_ref_filename = os.path.join(self.dir, REFERENCE_FILENAME)\n+        coverage_filenames = set()\n+        all_cmds = set()\n+        covered_cmds = set()\n+\n+        if not os.path.isfile(coverage_ref_filename):\n+            raise RuntimeError(\"No coverage reference found\")\n+\n+        with open(coverage_ref_filename, 'r') as f:\n+            all_cmds.update([i.strip() for i in f.readlines()])\n+\n+        for root, dirs, files in os.walk(self.dir):\n+            for filename in files:\n+                if filename.startswith(COVERAGE_FILE_PREFIX):\n+                    coverage_filenames.add(os.path.join(root, filename))\n+\n+        for filename in coverage_filenames:\n+            with open(filename, 'r') as f:\n+                covered_cmds.update([i.strip() for i in f.readlines()])\n+\n+        return all_cmds - covered_cmds\n+\n+\n+if __name__ == '__main__':\n+    runtests()"
      },
      {
        "sha": "1ddff8a2982e4dbeb7b4f64b1539acc6ebf861a0",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=5fcc14ee0562faff2ace17082f664e60c375b334",
        "patch": "@@ -38,7 +38,7 @@ def __init__(self, node):\n         self.longpollid = templat['longpollid']\n         # create a new connection to the node, we can't use the same\n         # connection from two threads\n-        self.node = AuthServiceProxy(node.url, timeout=600)\n+        self.node = get_rpc_proxy(node.url, 1, timeout=600)\n \n     def run(self):\n         self.node.getblocktemplate({'longpollid':self.longpollid})"
      },
      {
        "sha": "7a9da667874b8f44f6047825549fe7d49547fe49",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=5fcc14ee0562faff2ace17082f664e60c375b334",
        "patch": "@@ -47,7 +47,7 @@ def run_allowip_test(tmpdir, allow_ips, rpchost, rpcport):\n     try:\n         # connect to node through non-loopback interface\n         url = \"http://rt:rt@%s:%d\" % (rpchost, rpcport,)\n-        node = AuthServiceProxy(url)\n+        node = get_rpc_proxy(url, 1)\n         node.getinfo()\n     finally:\n         node = None # make sure connection will be garbage collected and closed"
      },
      {
        "sha": "fba469a0dd0b6b0f330b7bc96e104d938ac91311",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=5fcc14ee0562faff2ace17082f664e60c375b334",
        "patch": "@@ -69,7 +69,7 @@ class AuthServiceProxy(object):\n \n     def __init__(self, service_url, service_name=None, timeout=HTTP_TIMEOUT, connection=None):\n         self.__service_url = service_url\n-        self.__service_name = service_name\n+        self._service_name = service_name\n         self.__url = urlparse.urlparse(service_url)\n         if self.__url.port is None:\n             port = 80\n@@ -102,8 +102,8 @@ def __getattr__(self, name):\n         if name.startswith('__') and name.endswith('__'):\n             # Python internal stuff\n             raise AttributeError\n-        if self.__service_name is not None:\n-            name = \"%s.%s\" % (self.__service_name, name)\n+        if self._service_name is not None:\n+            name = \"%s.%s\" % (self._service_name, name)\n         return AuthServiceProxy(self.__service_url, name, connection=self.__conn)\n \n     def _request(self, method, path, postdata):\n@@ -129,10 +129,10 @@ def _request(self, method, path, postdata):\n     def __call__(self, *args):\n         AuthServiceProxy.__id_count += 1\n \n-        log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self.__service_name,\n+        log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self._service_name,\n                                  json.dumps(args, default=EncodeDecimal)))\n         postdata = json.dumps({'version': '1.1',\n-                               'method': self.__service_name,\n+                               'method': self._service_name,\n                                'params': args,\n                                'id': AuthServiceProxy.__id_count}, default=EncodeDecimal)\n         response = self._request('POST', self.__url.path, postdata)"
      },
      {
        "sha": "50f066a8509d26865526cc1d0782cd0c08719857",
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "added",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=5fcc14ee0562faff2ace17082f664e60c375b334",
        "patch": "@@ -0,0 +1,101 @@\n+\"\"\"\n+This module contains utilities for doing coverage analysis on the RPC\n+interface.\n+\n+It provides a way to track which RPC commands are exercised during\n+testing.\n+\n+\"\"\"\n+import os\n+\n+\n+REFERENCE_FILENAME = 'rpc_interface.txt'\n+\n+\n+class AuthServiceProxyWrapper(object):\n+    \"\"\"\n+    An object that wraps AuthServiceProxy to record specific RPC calls.\n+\n+    \"\"\"\n+    def __init__(self, auth_service_proxy_instance, coverage_logfile=None):\n+        \"\"\"\n+        Kwargs:\n+            auth_service_proxy_instance (AuthServiceProxy): the instance\n+                being wrapped.\n+            coverage_logfile (str): if specified, write each service_name\n+                out to a file when called.\n+\n+        \"\"\"\n+        self.auth_service_proxy_instance = auth_service_proxy_instance\n+        self.coverage_logfile = coverage_logfile\n+\n+    def __getattr__(self, *args, **kwargs):\n+        return_val = self.auth_service_proxy_instance.__getattr__(\n+            *args, **kwargs)\n+\n+        return AuthServiceProxyWrapper(return_val, self.coverage_logfile)\n+\n+    def __call__(self, *args, **kwargs):\n+        \"\"\"\n+        Delegates to AuthServiceProxy, then writes the particular RPC method\n+        called to a file.\n+\n+        \"\"\"\n+        return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\n+        rpc_method = self.auth_service_proxy_instance._service_name\n+\n+        if self.coverage_logfile:\n+            with open(self.coverage_logfile, 'a+') as f:\n+                f.write(\"%s\\n\" % rpc_method)\n+\n+        return return_val\n+\n+    @property\n+    def url(self):\n+        return self.auth_service_proxy_instance.url\n+\n+\n+def get_filename(dirname, n_node):\n+    \"\"\"\n+    Get a filename unique to the test process ID and node.\n+\n+    This file will contain a list of RPC commands covered.\n+    \"\"\"\n+    pid = str(os.getpid())\n+    return os.path.join(\n+        dirname, \"coverage.pid%s.node%s.txt\" % (pid, str(n_node)))\n+\n+\n+def write_all_rpc_commands(dirname, node):\n+    \"\"\"\n+    Write out a list of all RPC functions available in `bitcoin-cli` for\n+    coverage comparison. This will only happen once per coverage\n+    directory.\n+\n+    Args:\n+        dirname (str): temporary test dir\n+        node (AuthServiceProxy): client\n+\n+    Returns:\n+        bool. if the RPC interface file was written.\n+\n+    \"\"\"\n+    filename = os.path.join(dirname, REFERENCE_FILENAME)\n+\n+    if os.path.isfile(filename):\n+        return False\n+\n+    help_output = node.help().split('\\n')\n+    commands = set()\n+\n+    for line in help_output:\n+        line = line.strip()\n+\n+        # Ignore blanks and headers\n+        if line and not line.startswith('='):\n+            commands.add(\"%s\\n\" % line.split()[0])\n+\n+    with open(filename, 'w') as f:\n+        f.writelines(list(commands))\n+\n+    return True"
      },
      {
        "sha": "ae2d91ab60b7c0d7a7fbdda20ad7878e572ba5a8",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 23,
        "deletions": 5,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=5fcc14ee0562faff2ace17082f664e60c375b334",
        "patch": "@@ -13,8 +13,20 @@\n import tempfile\n import traceback\n \n+from .util import (\n+    initialize_chain,\n+    assert_equal,\n+    start_nodes,\n+    connect_nodes_bi,\n+    sync_blocks,\n+    sync_mempools,\n+    stop_nodes,\n+    wait_bitcoinds,\n+    enable_coverage,\n+    check_json_precision,\n+    initialize_chain_clean,\n+)\n from authproxy import AuthServiceProxy, JSONRPCException\n-from util import *\n \n \n class BitcoinTestFramework(object):\n@@ -96,13 +108,18 @@ def main(self):\n                           help=\"Root directory for datadirs\")\n         parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n                           help=\"Print out all RPC calls as they are made\")\n+        parser.add_option(\"--coveragedir\", dest=\"coveragedir\",\n+                          help=\"Write tested RPC commands into this directory\")\n         self.add_options(parser)\n         (self.options, self.args) = parser.parse_args()\n \n         if self.options.trace_rpc:\n             import logging\n             logging.basicConfig(level=logging.DEBUG)\n \n+        if self.options.coveragedir:\n+            enable_coverage(self.options.coveragedir)\n+\n         os.environ['PATH'] = self.options.srcdir+\":\"+os.environ['PATH']\n \n         check_json_precision()\n@@ -173,7 +190,8 @@ def setup_chain(self):\n         initialize_chain_clean(self.options.tmpdir, self.num_nodes)\n \n     def setup_network(self):\n-        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir,\n-                                    extra_args=[['-debug', '-whitelist=127.0.0.1']] * self.num_nodes,\n-                                    binary=[self.options.testbinary] +\n-                                           [self.options.refbinary]*(self.num_nodes-1))\n+        self.nodes = start_nodes(\n+            self.num_nodes, self.options.tmpdir,\n+            extra_args=[['-debug', '-whitelist=127.0.0.1']] * self.num_nodes,\n+            binary=[self.options.testbinary] +\n+            [self.options.refbinary]*(self.num_nodes-1))"
      },
      {
        "sha": "30dd5de58560492c70b0ea55c98a20f8ddcc146a",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 50,
        "deletions": 12,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcc14ee0562faff2ace17082f664e60c375b334/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=5fcc14ee0562faff2ace17082f664e60c375b334",
        "patch": "@@ -17,8 +17,43 @@\n import time\n import re\n \n-from authproxy import AuthServiceProxy, JSONRPCException\n-from util import *\n+from . import coverage\n+from .authproxy import AuthServiceProxy, JSONRPCException\n+\n+COVERAGE_DIR = None\n+\n+\n+def enable_coverage(dirname):\n+    \"\"\"Maintain a log of which RPC calls are made during testing.\"\"\"\n+    global COVERAGE_DIR\n+    COVERAGE_DIR = dirname\n+\n+\n+def get_rpc_proxy(url, node_number, timeout=None):\n+    \"\"\"\n+    Args:\n+        url (str): URL of the RPC server to call\n+        node_number (int): the node number (or id) that this calls to\n+\n+    Kwargs:\n+        timeout (int): HTTP timeout in seconds\n+\n+    Returns:\n+        AuthServiceProxy. convenience object for making RPC calls.\n+\n+    \"\"\"\n+    proxy_kwargs = {}\n+    if timeout is not None:\n+        proxy_kwargs['timeout'] = timeout\n+\n+    proxy = AuthServiceProxy(url, **proxy_kwargs)\n+    proxy.url = url  # store URL on proxy for info\n+\n+    coverage_logfile = coverage.get_filename(\n+        COVERAGE_DIR, node_number) if COVERAGE_DIR else None\n+\n+    return coverage.AuthServiceProxyWrapper(proxy, coverage_logfile)\n+\n \n def p2p_port(n):\n     return 11000 + n + os.getpid()%999\n@@ -79,13 +114,13 @@ def initialize_chain(test_dir):\n     \"\"\"\n \n     if (not os.path.isdir(os.path.join(\"cache\",\"node0\"))\n-        or not os.path.isdir(os.path.join(\"cache\",\"node1\")) \n-        or not os.path.isdir(os.path.join(\"cache\",\"node2\")) \n+        or not os.path.isdir(os.path.join(\"cache\",\"node1\"))\n+        or not os.path.isdir(os.path.join(\"cache\",\"node2\"))\n         or not os.path.isdir(os.path.join(\"cache\",\"node3\"))):\n \n         #find and delete old cache directories if any exist\n         for i in range(4):\n-            if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))): \n+            if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))):\n                 shutil.rmtree(os.path.join(\"cache\",\"node\"+str(i)))\n \n         devnull = open(os.devnull, \"w\")\n@@ -103,11 +138,13 @@ def initialize_chain(test_dir):\n             if os.getenv(\"PYTHON_DEBUG\", \"\"):\n                 print \"initialize_chain: bitcoin-cli -rpcwait getblockcount completed\"\n         devnull.close()\n+\n         rpcs = []\n+\n         for i in range(4):\n             try:\n-                url = \"http://rt:rt@127.0.0.1:%d\"%(rpc_port(i),)\n-                rpcs.append(AuthServiceProxy(url))\n+                url = \"http://rt:rt@127.0.0.1:%d\" % (rpc_port(i),)\n+                rpcs.append(get_rpc_proxy(url, i))\n             except:\n                 sys.stderr.write(\"Error connecting to \"+url+\"\\n\")\n                 sys.exit(1)\n@@ -190,11 +227,12 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n         print \"start_node: calling bitcoin-cli -rpcwait getblockcount returned\"\n     devnull.close()\n     url = \"http://rt:rt@%s:%d\" % (rpchost or '127.0.0.1', rpc_port(i))\n-    if timewait is not None:\n-        proxy = AuthServiceProxy(url, timeout=timewait)\n-    else:\n-        proxy = AuthServiceProxy(url)\n-    proxy.url = url # store URL on proxy for info\n+\n+    proxy = get_rpc_proxy(url, i, timeout=timewait)\n+\n+    if COVERAGE_DIR:\n+        coverage.write_all_rpc_commands(COVERAGE_DIR, proxy)\n+\n     return proxy\n \n def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None, binary=None):"
      }
    ]
  },
  {
    "sha": "54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGU4YmZlYzgzODdlZTE1NGY4YjE1YjQxYWUwYjI5YmMyY2Q5YmJj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-12T13:31:35Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-12T13:37:10Z"
      },
      "message": "Merge pull request #6931\n\n33c90cf Make skipping BIP30 check chain agnostic (Alex Morcos)\n06d81ad Skip BIP30 check after BIP34 activation (Alex Morcos)",
      "tree": {
        "sha": "b61a5b9472c87b2f0baf30d046c63d171f66776f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b61a5b9472c87b2f0baf30d046c63d171f66776f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWRJYGAAoJENuhpnN5oakx2MEQALh6QpgqNchYg13qt6XgD72m\n4HTNybOhwKBJFOahOBN6H57PYNeDzO2ihcFmbcb8FRkDDw5xAorJxo6qdlurGpwN\nfAQC3jDUXiJJgiwki1GDUNBggd4pMj11jMwQEumVVbEytvo5HpXXJDj7xaoKTY6C\nHuvsiavmWTyJ4t3/sYKgNrQU1RUgYru25Hp8TR4HCsCBxULFKddqaNkCki4bB2aM\nXWQWzsGHCeF05T3nFFvcP3u4X50fh1fTTyseoejQ3WWELEfuVDI26ZgOzDq5ta9A\nTiQ8f41I3nBpKuQ/ujpGFoycRWGFnPoUgzoE91v8n+UZz73ehb7yldhhPJ8lChof\nUwl5MejxapNbbRb4TknlQ2Y2sGs56O2YdSh/+VZ8sBMtOu9YdXd+9rLV4YmyoaIQ\ny2IZ9aXhjjMcMDC4dPWcHzPKL7eDuDApJlgc73QmIzS695GWYV/DJ9Uz/d2JkDHo\nWK1iD4G4BTMb4vj2isXskKut1iAdnBJKzyK6DOE1k8bmcqq4cFl1EXX8BBm0i2i2\nBzszheF0eXsTVAs5OBKU+B2CULRVQah0XXraQiWj/QMPtJ1JUBHtc4b5cPK0MPeP\nkVyuCYqGVyLrF7FLTlHmKFoU+JUMK6VrTqg2e+TB12LTfQupiB/oZwu9bJSmn6Xm\nzX9BFOs5wphOgAQfDk2s\n=m5Mp\n-----END PGP SIGNATURE-----",
        "payload": "tree b61a5b9472c87b2f0baf30d046c63d171f66776f\nparent 5fcc14ee0562faff2ace17082f664e60c375b334\nparent 33c90cf197223fb95f858db80d090d570d70498a\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1447335095 +0100\ncommitter Pieter Wuille <pieter.wuille@gmail.com> 1447335430 +0100\n\nMerge pull request #6931\n\n33c90cf Make skipping BIP30 check chain agnostic (Alex Morcos)\n06d81ad Skip BIP30 check after BIP34 activation (Alex Morcos)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5fcc14ee0562faff2ace17082f664e60c375b334",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fcc14ee0562faff2ace17082f664e60c375b334",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fcc14ee0562faff2ace17082f664e60c375b334"
      },
      {
        "sha": "33c90cf197223fb95f858db80d090d570d70498a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33c90cf197223fb95f858db80d090d570d70498a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33c90cf197223fb95f858db80d090d570d70498a"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 20,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5d6d1ef9d8f7d28a8381cf010ec667c951de9403",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
        "patch": "@@ -73,6 +73,8 @@ class CMainParams : public CChainParams {\n         consensus.nMajorityEnforceBlockUpgrade = 750;\n         consensus.nMajorityRejectBlockOutdated = 950;\n         consensus.nMajorityWindow = 1000;\n+        consensus.BIP34Height = 227931;\n+        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -153,6 +155,8 @@ class CTestNetParams : public CChainParams {\n         consensus.nMajorityEnforceBlockUpgrade = 51;\n         consensus.nMajorityRejectBlockOutdated = 75;\n         consensus.nMajorityWindow = 100;\n+        consensus.BIP34Height = 21111;\n+        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -216,6 +220,8 @@ class CRegTestParams : public CChainParams {\n         consensus.nMajorityEnforceBlockUpgrade = 750;\n         consensus.nMajorityRejectBlockOutdated = 950;\n         consensus.nMajorityWindow = 1000;\n+        consensus.BIP34Height = -1; // BIP34 has not necessarily activated on regtest\n+        consensus.BIP34Hash = uint256();\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;"
      },
      {
        "sha": "5ebc48a8df9d35049755ab26a4b7d8e0c4cb4e42",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
        "patch": "@@ -19,6 +19,9 @@ struct Params {\n     int nMajorityEnforceBlockUpgrade;\n     int nMajorityRejectBlockOutdated;\n     int nMajorityWindow;\n+    /** Block height and hash at which BIP34 becomes active */\n+    int BIP34Height;\n+    uint256 BIP34Hash;\n     /** Proof of work parameters */\n     uint256 powLimit;\n     bool fPowAllowMinDifficultyBlocks;"
      },
      {
        "sha": "6e5a81f306a5e381236bd8e87c3fb603482e1c98",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
        "patch": "@@ -1769,6 +1769,17 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     bool fEnforceBIP30 = (!pindex->phashBlock) || // Enforce on CreateNewBlock invocations which don't have a hash.\n                           !((pindex->nHeight==91842 && pindex->GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n                            (pindex->nHeight==91880 && pindex->GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n+\n+    // Once BIP34 activated it was not possible to create new duplicate coinbases and thus other than starting\n+    // with the 2 existing duplicate coinbase pairs, not possible to create overwriting txs.  But by the\n+    // time BIP34 activated, in each of the existing pairs the duplicate coinbase had overwritten the first\n+    // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n+    // duplicate transactions descending from the known pairs either.\n+    // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n+    CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n+    //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n+    fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n+\n     if (fEnforceBIP30) {\n         BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n             const CCoins* coins = view.AccessCoins(tx.GetHash());"
      }
    ]
  },
  {
    "sha": "eb6172a8ca7e0474457c1206c9907514348243ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjYxNzJhOGNhN2UwNDc0NDU3YzEyMDZjOTkwNzUxNDM0ODI0M2Vh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T16:37:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T16:37:52Z"
      },
      "message": "Merge pull request #6918\n\n69d373f Don't wipe the sigcache in TestBlockValidity (Pieter Wuille)\n0b9e9dc Evict sigcache entries that are seen in a block (Pieter Wuille)\n830e3f3 Make sigcache faster and more efficient (Pieter Wuille)",
      "tree": {
        "sha": "a1c38ef1b59210deb1c2d60ebe0d13869f48efe6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1c38ef1b59210deb1c2d60ebe0d13869f48efe6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb6172a8ca7e0474457c1206c9907514348243ea",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWRMBgAAoJEHSBCwEjRsmm7bwH/334nsUTMs3armWprjCdDjCz\n8Ry+SI8xq2QwrAP7WrL69b4cJ90wanPvw6Gxpq0/odf80X9iu88eTcfIBGyXcIPf\n1ng0HRT6rd7fHZWpog3gPAmDw66H5GjxwyDCghP5cBGROcrEg9L0+6wJH+xsuM0E\nEh3w9+V5eK+Rc9z5gBsbtC7X6RCZLBuq8Xm29pb9dOYn7AQLNrRdlUkCpVcfW3AQ\nO0/XxO/aN+cn/y9frZNqaIAi5WQlVPKd+zXXS8w2cq11fM7K64rrWBNE86w14hrR\njr4LJIjXxeEi3oXkVUBGnKO/A4av9Tj8JqsHe/e9bXGpCwi5Q7aIE8TQQBn0XwA=\n=Zihc\n-----END PGP SIGNATURE-----",
        "payload": "tree a1c38ef1b59210deb1c2d60ebe0d13869f48efe6\nparent 54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc\nparent 69d373ff6693de204bdf58cbc90f8a26d8f711c8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447346262 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447346272 +0100\n\nMerge pull request #6918\n\n69d373f Don't wipe the sigcache in TestBlockValidity (Pieter Wuille)\n0b9e9dc Evict sigcache entries that are seen in a block (Pieter Wuille)\n830e3f3 Make sigcache faster and more efficient (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb6172a8ca7e0474457c1206c9907514348243ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb6172a8ca7e0474457c1206c9907514348243ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb6172a8ca7e0474457c1206c9907514348243ea/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54e8bfec8387ee154f8b15b41ae0b29bc2cd9bbc"
      },
      {
        "sha": "69d373ff6693de204bdf58cbc90f8a26d8f711c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69d373ff6693de204bdf58cbc90f8a26d8f711c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69d373ff6693de204bdf58cbc90f8a26d8f711c8"
      }
    ],
    "stats": {
      "total": 101,
      "additions": 65,
      "deletions": 36
    },
    "files": [
      {
        "sha": "921fc0b64aa19a74cc963e1d9e0ab1f10d00727f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb6172a8ca7e0474457c1206c9907514348243ea/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb6172a8ca7e0474457c1206c9907514348243ea/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=eb6172a8ca7e0474457c1206c9907514348243ea",
        "patch": "@@ -25,6 +25,7 @@\n #include \"policy/policy.h\"\n #include \"rpcserver.h\"\n #include \"script/standard.h\"\n+#include \"script/sigcache.h\"\n #include \"scheduler.h\"\n #include \"txdb.h\"\n #include \"txmempool.h\"\n@@ -437,7 +438,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS));\n         strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", 15));\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n-        strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n+        strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE));\n     }\n     strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)));"
      },
      {
        "sha": "3703701917f7e40811558af31b0da841148826c2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb6172a8ca7e0474457c1206c9907514348243ea/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb6172a8ca7e0474457c1206c9907514348243ea/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=eb6172a8ca7e0474457c1206c9907514348243ea",
        "patch": "@@ -1851,7 +1851,8 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n             nFees += view.GetValueIn(tx)-tx.GetValueOut();\n \n             std::vector<CScriptCheck> vChecks;\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, false, nScriptCheckThreads ? &vChecks : NULL))\n+            bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, nScriptCheckThreads ? &vChecks : NULL))\n                 return error(\"ConnectBlock(): CheckInputs on %s failed with %s\",\n                     tx.GetHash().ToString(), FormatStateMessage(state));\n             control.Add(vChecks);"
      },
      {
        "sha": "eee96e7c2d1d2976341f44080e25e976f610340f",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 34,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb6172a8ca7e0474457c1206c9907514348243ea/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb6172a8ca7e0474457c1206c9907514348243ea/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=eb6172a8ca7e0474457c1206c9907514348243ea",
        "patch": "@@ -5,16 +5,29 @@\n \n #include \"sigcache.h\"\n \n+#include \"memusage.h\"\n #include \"pubkey.h\"\n #include \"random.h\"\n #include \"uint256.h\"\n #include \"util.h\"\n \n #include <boost/thread.hpp>\n-#include <boost/tuple/tuple_comparison.hpp>\n+#include <boost/unordered_set.hpp>\n \n namespace {\n \n+/**\n+ * We're hashing a nonce into the entries themselves, so we don't need extra\n+ * blinding in the set hash computation.\n+ */\n+class CSignatureCacheHasher\n+{\n+public:\n+    size_t operator()(const uint256& key) const {\n+        return key.GetCheapHash();\n+    }\n+};\n+\n /**\n  * Valid signature cache, to avoid doing expensive ECDSA signature checking\n  * twice for every transaction (once when accepted into memory pool, and\n@@ -23,52 +36,54 @@ namespace {\n class CSignatureCache\n {\n private:\n-     //! sigdata_type is (signature hash, signature, public key):\n-    typedef boost::tuple<uint256, std::vector<unsigned char>, CPubKey> sigdata_type;\n-    std::set< sigdata_type> setValid;\n+     //! Entries are SHA256(nonce || signature hash || public key || signature):\n+    uint256 nonce;\n+    typedef boost::unordered_set<uint256, CSignatureCacheHasher> map_type;\n+    map_type setValid;\n     boost::shared_mutex cs_sigcache;\n \n+\n public:\n+    CSignatureCache()\n+    {\n+        GetRandBytes(nonce.begin(), 32);\n+    }\n+\n+    void\n+    ComputeEntry(uint256& entry, const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubkey)\n+    {\n+        CSHA256().Write(nonce.begin(), 32).Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(&vchSig[0], vchSig.size()).Finalize(entry.begin());\n+    }\n+\n     bool\n-    Get(const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubKey)\n+    Get(const uint256& entry)\n     {\n         boost::shared_lock<boost::shared_mutex> lock(cs_sigcache);\n+        return setValid.count(entry);\n+    }\n \n-        sigdata_type k(hash, vchSig, pubKey);\n-        std::set<sigdata_type>::iterator mi = setValid.find(k);\n-        if (mi != setValid.end())\n-            return true;\n-        return false;\n+    void Erase(const uint256& entry)\n+    {\n+        boost::unique_lock<boost::shared_mutex> lock(cs_sigcache);\n+        setValid.erase(entry);\n     }\n \n-    void Set(const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubKey)\n+    void Set(const uint256& entry)\n     {\n-        // DoS prevention: limit cache size to less than 10MB\n-        // (~200 bytes per cache entry times 50,000 entries)\n-        // Since there are a maximum of 20,000 signature operations per block\n-        // 50,000 is a reasonable default.\n-        int64_t nMaxCacheSize = GetArg(\"-maxsigcachesize\", 50000);\n+        size_t nMaxCacheSize = GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n         if (nMaxCacheSize <= 0) return;\n \n         boost::unique_lock<boost::shared_mutex> lock(cs_sigcache);\n-\n-        while (static_cast<int64_t>(setValid.size()) > nMaxCacheSize)\n+        while (memusage::DynamicUsage(setValid) > nMaxCacheSize)\n         {\n-            // Evict a random entry. Random because that helps\n-            // foil would-be DoS attackers who might try to pre-generate\n-            // and re-use a set of valid signatures just-slightly-greater\n-            // than our cache size.\n-            uint256 randomHash = GetRandHash();\n-            std::vector<unsigned char> unused;\n-            std::set<sigdata_type>::iterator it =\n-                setValid.lower_bound(sigdata_type(randomHash, unused, unused));\n-            if (it == setValid.end())\n-                it = setValid.begin();\n-            setValid.erase(*it);\n+            map_type::size_type s = GetRand(setValid.bucket_count());\n+            map_type::local_iterator it = setValid.begin(s);\n+            if (it != setValid.end(s)) {\n+                setValid.erase(*it);\n+            }\n         }\n \n-        sigdata_type k(hash, vchSig, pubKey);\n-        setValid.insert(k);\n+        setValid.insert(entry);\n     }\n };\n \n@@ -78,13 +93,21 @@ bool CachingTransactionSignatureChecker::VerifySignature(const std::vector<unsig\n {\n     static CSignatureCache signatureCache;\n \n-    if (signatureCache.Get(sighash, vchSig, pubkey))\n+    uint256 entry;\n+    signatureCache.ComputeEntry(entry, sighash, vchSig, pubkey);\n+\n+    if (signatureCache.Get(entry)) {\n+        if (!store) {\n+            signatureCache.Erase(entry);\n+        }\n         return true;\n+    }\n \n     if (!TransactionSignatureChecker::VerifySignature(vchSig, pubkey, sighash))\n         return false;\n \n-    if (store)\n-        signatureCache.Set(sighash, vchSig, pubkey);\n+    if (store) {\n+        signatureCache.Set(entry);\n+    }\n     return true;\n }"
      },
      {
        "sha": "22699725607c999ef573c663732edc3d4bd2974c",
        "filename": "src/script/sigcache.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb6172a8ca7e0474457c1206c9907514348243ea/src/script/sigcache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb6172a8ca7e0474457c1206c9907514348243ea/src/script/sigcache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.h?ref=eb6172a8ca7e0474457c1206c9907514348243ea",
        "patch": "@@ -10,6 +10,10 @@\n \n #include <vector>\n \n+// DoS prevention: limit cache size to less than 40MB (over 500000\n+// entries on 64-bit systems).\n+static const unsigned int DEFAULT_MAX_SIG_CACHE_SIZE = 40;\n+\n class CPubKey;\n \n class CachingTransactionSignatureChecker : public TransactionSignatureChecker"
      }
    ]
  },
  {
    "sha": "09c1ae1c01076f64fe0654f371200668306e5e18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWMxYWUxYzAxMDc2ZjY0ZmUwNjU0ZjM3MTIwMDY2ODMwNmU1ZTE4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-09-08T15:48:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T16:58:15Z"
      },
      "message": "torcontrol improvements and fixes\n\n- Force AUTHCOOKIE size to be 32 bytes: This provides protection against\n  an attack where a process pretends to be Tor and uses the cookie\n  authentication method to nab arbitrary files such as the\n  wallet\n- torcontrol logging\n- fix cookie auth\n- add HASHEDPASSWORD auth, fix fd leak when fwrite() fails\n- better error reporting when cookie file is not ok\n- better init/shutdown flow\n- stop advertizing service when disconnected from tor control port\n- COOKIE->SAFECOOKIE auth",
      "tree": {
        "sha": "ca15b563a5b6e39b53edafda7818c986cc7e7f4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca15b563a5b6e39b53edafda7818c986cc7e7f4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09c1ae1c01076f64fe0654f371200668306e5e18",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09c1ae1c01076f64fe0654f371200668306e5e18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09c1ae1c01076f64fe0654f371200668306e5e18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09c1ae1c01076f64fe0654f371200668306e5e18/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f796e5fe7a51e4636600b320dc1995e048b4ba2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f796e5fe7a51e4636600b320dc1995e048b4ba2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f796e5fe7a51e4636600b320dc1995e048b4ba2"
      }
    ],
    "stats": {
      "total": 290,
      "additions": 206,
      "deletions": 84
    },
    "files": [
      {
        "sha": "024355f7c169857ab501f27c0569a7af09138f68",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09c1ae1c01076f64fe0654f371200668306e5e18/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09c1ae1c01076f64fe0654f371200668306e5e18/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=09c1ae1c01076f64fe0654f371200668306e5e18",
        "patch": "@@ -160,6 +160,7 @@ void Interrupt(boost::thread_group& threadGroup)\n     InterruptHTTPRPC();\n     InterruptRPC();\n     InterruptREST();\n+    InterruptTorControl();\n     threadGroup.interrupt_all();\n }\n \n@@ -362,6 +363,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-seednode=<ip>\", _(\"Connect to a node to retrieve peer addresses, and disconnect\"));\n     strUsage += HelpMessageOpt(\"-timeout=<n>\", strprintf(_(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"), DEFAULT_CONNECT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-torcontrol=<ip>:<port>\", strprintf(_(\"Tor control port to use if onion listening enabled (default: %s)\"), DEFAULT_TOR_CONTROL));\n+    strUsage += HelpMessageOpt(\"-torpassword=<pass>\", _(\"Tor control port password (default: empty)\"));\n #ifdef USE_UPNP\n #if USE_UPNP\n     strUsage += HelpMessageOpt(\"-upnp\", _(\"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\"));"
      },
      {
        "sha": "ada4a1bb6214c4ec6a568cfc1f0a0037eeee6a67",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09c1ae1c01076f64fe0654f371200668306e5e18/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09c1ae1c01076f64fe0654f371200668306e5e18/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=09c1ae1c01076f64fe0654f371200668306e5e18",
        "patch": "@@ -263,6 +263,14 @@ bool AddLocal(const CNetAddr &addr, int nScore)\n     return AddLocal(CService(addr, GetListenPort()), nScore);\n }\n \n+bool RemoveLocal(const CService& addr)\n+{\n+    LOCK(cs_mapLocalHost);\n+    LogPrintf(\"RemoveLocal(%s)\\n\", addr.ToString());\n+    mapLocalHost.erase(addr);\n+    return true;\n+}\n+\n /** Make a particular network entirely off-limits (no automatic connects to it) */\n void SetLimited(enum Network net, bool fLimited)\n {"
      },
      {
        "sha": "d89244523eb3e05a38a7a789179ce43ef8092451",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09c1ae1c01076f64fe0654f371200668306e5e18/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09c1ae1c01076f64fe0654f371200668306e5e18/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=09c1ae1c01076f64fe0654f371200668306e5e18",
        "patch": "@@ -128,6 +128,7 @@ bool IsLimited(enum Network net);\n bool IsLimited(const CNetAddr& addr);\n bool AddLocal(const CService& addr, int nScore = LOCAL_NONE);\n bool AddLocal(const CNetAddr& addr, int nScore = LOCAL_NONE);\n+bool RemoveLocal(const CService& addr);\n bool SeenLocal(const CService& addr);\n bool IsLocal(const CService& addr);\n bool GetLocal(CService &addr, const CNetAddr *paddrPeer = NULL);"
      },
      {
        "sha": "08644f29684f685bd7e209c46bc7d14119fa4258",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 194,
        "deletions": 84,
        "changes": 278,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09c1ae1c01076f64fe0654f371200668306e5e18/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09c1ae1c01076f64fe0654f371200668306e5e18/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=09c1ae1c01076f64fe0654f371200668306e5e18",
        "patch": "@@ -2,7 +2,7 @@\n #include \"utilstrencodings.h\"\n #include \"net.h\"\n #include \"util.h\"\n-#include \"init.h\" // Just for ShutdownRequested\n+#include \"crypto/hmac_sha256.h\"\n \n #include <vector>\n #include <deque>\n@@ -16,13 +16,33 @@\n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/algorithm/string/split.hpp>\n #include <boost/algorithm/string/classification.hpp>\n+#include <boost/algorithm/string/replace.hpp>\n \n #include <event2/bufferevent.h>\n #include <event2/buffer.h>\n #include <event2/util.h>\n #include <event2/event.h>\n+#include <event2/thread.h>\n \n+/** Default control port */\n const std::string DEFAULT_TOR_CONTROL = \"127.0.0.1:9051\";\n+/** Tor cookie size (from control-spec.txt) */\n+static const int TOR_COOKIE_SIZE = 32;\n+/** Size of client/server nonce for SAFECOOKIE */\n+static const int TOR_NONCE_SIZE = 32;\n+/** For computing serverHash in SAFECOOKIE */\n+static const std::string TOR_SAFE_SERVERKEY = \"Tor safe cookie authentication server-to-controller hash\";\n+/** For computing clientHash in SAFECOOKIE */\n+static const std::string TOR_SAFE_CLIENTKEY = \"Tor safe cookie authentication controller-to-server hash\";\n+/** Exponential backoff configuration - initial timeout in seconds */\n+static const float RECONNECT_TIMEOUT_START = 1.0;\n+/** Exponential backoff configuration - growth factor */\n+static const float RECONNECT_TIMEOUT_EXP = 1.5;\n+/** Maximum length for lines received on TorControlConnection.\n+ * tor-control-spec.txt mentions that there is explicitly no limit defined to line length,\n+ * this is belt-and-suspenders sanity limit to prevent memory exhaustion.\n+ */\n+static const int MAX_LINE_LENGTH = 100000;\n \n /****** Low-level TorControlConnection ********/\n \n@@ -123,7 +143,7 @@ void TorControlConnection::readcb(struct bufferevent *bev, void *ctx)\n         if (s.size() < 4) // Short line\n             continue;\n         // <status>(-|+| )<data><CRLF>\n-        self->message.code = atoi(s.substr(0,3).c_str());\n+        self->message.code = atoi(s.substr(0,3));\n         self->message.lines.push_back(s.substr(4));\n         char ch = s[3]; // '-','+' or ' '\n         if (ch == ' ') {\n@@ -138,25 +158,32 @@ void TorControlConnection::readcb(struct bufferevent *bev, void *ctx)\n                     self->reply_handlers.front()(*self, self->message);\n                     self->reply_handlers.pop_front();\n                 } else {\n-                    LogPrintf(\"[tor] Received unexpected sync reply %i\\n\", self->message.code);\n+                    LogPrint(\"tor\", \"tor: Received unexpected sync reply %i\\n\", self->message.code);\n                 }\n             }\n             self->message.Clear();\n         }\n     }\n+    //  Check for size of buffer - protect against memory exhaustion with very long lines\n+    //  Do this after evbuffer_readln to make sure all full lines have been\n+    //  removed from the buffer. Everything left is an incomplete line.\n+    if (evbuffer_get_length(input) > MAX_LINE_LENGTH) {\n+        LogPrintf(\"tor: Disconnecting because MAX_LINE_LENGTH exceeded\\n\");\n+        self->Disconnect();\n+    }\n }\n \n void TorControlConnection::eventcb(struct bufferevent *bev, short what, void *ctx)\n {\n     TorControlConnection *self = (TorControlConnection*)ctx;\n     if (what & BEV_EVENT_CONNECTED) {\n-        LogPrintf(\"[tor] Succesfully connected!\\n\");\n+        LogPrint(\"tor\", \"tor: Succesfully connected!\\n\");\n         self->connected(*self);\n     } else if (what & (BEV_EVENT_EOF|BEV_EVENT_ERROR)) {\n         if (what & BEV_EVENT_ERROR)\n-            LogPrintf(\"[tor] Error connecting to Tor control socket\\n\");\n+            LogPrint(\"tor\", \"tor: Error connecting to Tor control socket\\n\");\n         else\n-            LogPrintf(\"[tor] End of stream\\n\");\n+            LogPrint(\"tor\", \"tor: End of stream\\n\");\n         self->Disconnect();\n         self->disconnected(*self);\n     }\n@@ -171,7 +198,7 @@ bool TorControlConnection::Connect(const std::string &target, const ConnectionCB\n     int connect_to_addrlen = sizeof(connect_to_addr);\n     if (evutil_parse_sockaddr_port(target.c_str(),\n         (struct sockaddr*)&connect_to_addr, &connect_to_addrlen)<0) {\n-        perror(\"evutil_parse_sockaddr_port\\n\");\n+        LogPrintf(\"tor: Error parsing socket address %s\\n\", target);\n         return false;\n     }\n \n@@ -186,7 +213,7 @@ bool TorControlConnection::Connect(const std::string &target, const ConnectionCB\n \n     // Finally, connect to target\n     if (bufferevent_socket_connect(b_conn, (struct sockaddr*)&connect_to_addr, connect_to_addrlen) < 0) {\n-        perror(\"bufferevent_socket_connect\");\n+        LogPrintf(\"tor: Error connecting to address %s\\n\", target);\n         return false;\n     }\n     return true;\n@@ -274,17 +301,26 @@ static std::map<std::string,std::string> ParseTorReplyMapping(const std::string\n     return mapping;\n }\n \n-/** Read full contents of a file and return them in a std::string. */\n-static std::pair<bool,std::string> ReadBinaryFile(const std::string &filename)\n+/** Read full contents of a file and return them in a std::string.\n+ * Returns a pair <status, string>.\n+ * If an error occured, status will be false, otherwise status will be true and the data will be returned in string.\n+ *\n+ * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n+ *         (with len > maxsize) will be returned.\n+ */\n+static std::pair<bool,std::string> ReadBinaryFile(const std::string &filename, size_t maxsize=std::numeric_limits<size_t>::max())\n {\n     FILE *f = fopen(filename.c_str(), \"rb\");\n     if (f == NULL)\n         return std::make_pair(false,\"\");\n     std::string retval;\n     char buffer[128];\n     size_t n;\n-    while ((n=fread(buffer, 1, sizeof(buffer), f)) > 0)\n+    while ((n=fread(buffer, 1, sizeof(buffer), f)) > 0) {\n         retval.append(buffer, buffer+n);\n+        if (retval.size() > maxsize)\n+            break;\n+    }\n     fclose(f);\n     return std::make_pair(true,retval);\n }\n@@ -297,8 +333,10 @@ static bool WriteBinaryFile(const std::string &filename, const std::string &data\n     FILE *f = fopen(filename.c_str(), \"wb\");\n     if (f == NULL)\n         return false;\n-    if (fwrite(data.data(), 1, data.size(), f) != data.size())\n+    if (fwrite(data.data(), 1, data.size(), f) != data.size()) {\n+        fclose(f);\n         return false;\n+    }\n     fclose(f);\n     return true;\n }\n@@ -326,70 +364,62 @@ class TorController\n     std::string private_key;\n     std::string service_id;\n     bool reconnect;\n-    struct event *shutdown_poll_ev;\n     struct event *reconnect_ev;\n     float reconnect_timeout;\n+    CService service;\n+    /** Cooie for SAFECOOKIE auth */\n+    std::vector<uint8_t> cookie;\n+    /** ClientNonce for SAFECOOKIE auth */\n+    std::vector<uint8_t> clientNonce;\n \n     /** Callback for ADD_ONION result */\n     void add_onion_cb(TorControlConnection& conn, const TorControlReply& reply);\n     /** Callback for AUTHENTICATE result */\n     void auth_cb(TorControlConnection& conn, const TorControlReply& reply);\n+    /** Callback for AUTHCHALLENGE result */\n+    void authchallenge_cb(TorControlConnection& conn, const TorControlReply& reply);\n     /** Callback for PROTOCOLINFO result */\n     void protocolinfo_cb(TorControlConnection& conn, const TorControlReply& reply);\n     /** Callback after succesful connection */\n     void connected_cb(TorControlConnection& conn);\n     /** Callback after connection lost or failed connection attempt */\n     void disconnected_cb(TorControlConnection& conn);\n \n-    /** Callback for shutdown poll timer */\n-    static void shutdown_poll_cb(evutil_socket_t fd, short what, void *arg);\n     /** Callback for reconnect timer */\n     static void reconnect_cb(evutil_socket_t fd, short what, void *arg);\n };\n \n-/** Exponential backoff configuration - initial timeout in seconds */\n-static const float RECONNECT_TIMEOUT_START = 1.0;\n-/** Exponential backoff configuration - growth factor */\n-static const float RECONNECT_TIMEOUT_EXP = 1.5;\n-\n TorController::TorController(struct event_base* base, const std::string& target):\n     base(base),\n-    target(target), conn(base), reconnect(true), shutdown_poll_ev(0), reconnect_ev(0),\n+    target(target), conn(base), reconnect(true), reconnect_ev(0),\n     reconnect_timeout(RECONNECT_TIMEOUT_START)\n {\n     // Start connection attempts immediately\n     if (!conn.Connect(target, boost::bind(&TorController::connected_cb, this, _1),\n          boost::bind(&TorController::disconnected_cb, this, _1) )) {\n-        LogPrintf(\"[tor] Initiating connection to Tor control port %s failed\\n\", target);\n+        LogPrintf(\"tor: Initiating connection to Tor control port %s failed\\n\", target);\n     }\n     // Read service private key if cached\n     std::pair<bool,std::string> pkf = ReadBinaryFile(GetPrivateKeyFile());\n     if (pkf.first) {\n-        LogPrintf(\"[tor] Reading cached private key from %s\\n\", GetPrivateKeyFile());\n+        LogPrint(\"tor\", \"tor: Reading cached private key from %s\\n\", GetPrivateKeyFile());\n         private_key = pkf.second;\n     }\n-    // Periodic timer event to poll for shutdown\n-    // The same 200ms as in bitcoind. This is not the nicest solution, but we cannot exactly use\n-    // boost::interrupt here.\n-    struct timeval time;\n-    time.tv_usec = 200000;\n-    time.tv_sec = 0;\n-    shutdown_poll_ev = event_new(base, -1, EV_PERSIST, shutdown_poll_cb, this);\n-    event_add(shutdown_poll_ev, &time);\n }\n \n TorController::~TorController()\n {\n-    if (shutdown_poll_ev)\n-        event_del(shutdown_poll_ev);\n     if (reconnect_ev)\n         event_del(reconnect_ev);\n+    if (service.IsValid()) {\n+        RemoveLocal(service);\n+    }\n }\n \n void TorController::add_onion_cb(TorControlConnection& conn, const TorControlReply& reply)\n {\n     if (reply.code == 250) {\n-        LogPrintf(\"[tor] ADD_ONION succesful\\n\");\n+        LogPrint(\"tor\", \"tor: ADD_ONION succesful\\n\");\n         BOOST_FOREACH(const std::string &s, reply.lines) {\n             std::map<std::string,std::string> m = ParseTorReplyMapping(s);\n             std::map<std::string,std::string>::iterator i;\n@@ -399,26 +429,26 @@ void TorController::add_onion_cb(TorControlConnection& conn, const TorControlRep\n                 private_key = i->second;\n         }\n \n-        CService service(service_id+\".onion\", GetListenPort(), false);\n-        LogPrintf(\"[tor] Got service ID %s, advertizing service %s\\n\", service_id, service.ToString());\n+        service = CService(service_id+\".onion\", GetListenPort(), false);\n+        LogPrintf(\"tor: Got service ID %s, advertizing service %s\\n\", service_id, service.ToString());\n         if (WriteBinaryFile(GetPrivateKeyFile(), private_key)) {\n-            LogPrintf(\"[tor] Cached service private key to %s\\n\", GetPrivateKeyFile());\n+            LogPrint(\"tor\", \"tor: Cached service private key to %s\\n\", GetPrivateKeyFile());\n         } else {\n-            LogPrintf(\"[tor] Error writing service private key to %s\\n\", GetPrivateKeyFile());\n+            LogPrintf(\"tor: Error writing service private key to %s\\n\", GetPrivateKeyFile());\n         }\n         AddLocal(service, LOCAL_MANUAL);\n         // ... onion requested - keep connection open\n     } else if (reply.code == 510) { // 510 Unrecognized command\n-        LogPrintf(\"[tor] Add onion failed with unrecognized command (You probably need to upgrade Tor)\\n\");\n+        LogPrintf(\"tor: Add onion failed with unrecognized command (You probably need to upgrade Tor)\\n\");\n     } else {\n-        LogPrintf(\"[tor] Add onion failed; error code %d\\n\", reply.code);\n+        LogPrintf(\"tor: Add onion failed; error code %d\\n\", reply.code);\n     }\n }\n \n void TorController::auth_cb(TorControlConnection& conn, const TorControlReply& reply)\n {\n     if (reply.code == 250) {\n-        LogPrintf(\"[tor] Authentication succesful\\n\");\n+        LogPrint(\"tor\", \"tor: Authentication succesful\\n\");\n         // Finally - now create the service\n         if (private_key.empty()) // No private key, generate one\n             private_key = \"NEW:BEST\";\n@@ -428,7 +458,65 @@ void TorController::auth_cb(TorControlConnection& conn, const TorControlReply& r\n         conn.Command(strprintf(\"ADD_ONION %s Port=%i,127.0.0.1:%i\", private_key, GetListenPort(), GetListenPort()),\n             boost::bind(&TorController::add_onion_cb, this, _1, _2));\n     } else {\n-        LogPrintf(\"[tor] Authentication failed\\n\");\n+        LogPrintf(\"tor: Authentication failed\\n\");\n+    }\n+}\n+\n+/** Compute Tor SAFECOOKIE response.\n+ *\n+ *    ServerHash is computed as:\n+ *      HMAC-SHA256(\"Tor safe cookie authentication server-to-controller hash\",\n+ *                  CookieString | ClientNonce | ServerNonce)\n+ *    (with the HMAC key as its first argument)\n+ *\n+ *    After a controller sends a successful AUTHCHALLENGE command, the\n+ *    next command sent on the connection must be an AUTHENTICATE command,\n+ *    and the only authentication string which that AUTHENTICATE command\n+ *    will accept is:\n+ *\n+ *      HMAC-SHA256(\"Tor safe cookie authentication controller-to-server hash\",\n+ *                  CookieString | ClientNonce | ServerNonce)\n+ *\n+ */\n+static std::vector<uint8_t> ComputeResponse(const std::string &key, const std::vector<uint8_t> &cookie,  const std::vector<uint8_t> &clientNonce, const std::vector<uint8_t> &serverNonce)\n+{\n+    CHMAC_SHA256 computeHash((const uint8_t*)key.data(), key.size());\n+    std::vector<uint8_t> computedHash(CHMAC_SHA256::OUTPUT_SIZE, 0);\n+    computeHash.Write(begin_ptr(cookie), cookie.size());\n+    computeHash.Write(begin_ptr(clientNonce), clientNonce.size());\n+    computeHash.Write(begin_ptr(serverNonce), serverNonce.size());\n+    computeHash.Finalize(begin_ptr(computedHash));\n+    return computedHash;\n+}\n+\n+void TorController::authchallenge_cb(TorControlConnection& conn, const TorControlReply& reply)\n+{\n+    if (reply.code == 250) {\n+        LogPrint(\"tor\", \"tor: SAFECOOKIE authentication challenge succesful\\n\");\n+        std::pair<std::string,std::string> l = SplitTorReplyLine(reply.lines[0]);\n+        if (l.first == \"AUTHCHALLENGE\") {\n+            std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);\n+            std::vector<uint8_t> serverHash = ParseHex(m[\"SERVERHASH\"]);\n+            std::vector<uint8_t> serverNonce = ParseHex(m[\"SERVERNONCE\"]);\n+            LogPrint(\"tor\", \"tor: AUTHCHALLENGE ServerHash %s ServerNonce %s\\n\", HexStr(serverHash), HexStr(serverNonce));\n+            if (serverNonce.size() != 32) {\n+                LogPrintf(\"tor: ServerNonce is not 32 bytes, as required by spec\\n\");\n+                return;\n+            }\n+\n+            std::vector<uint8_t> computedServerHash = ComputeResponse(TOR_SAFE_SERVERKEY, cookie, clientNonce, serverNonce);\n+            if (computedServerHash != serverHash) {\n+                LogPrintf(\"tor: ServerHash %s does not match expected ServerHash %s\\n\", HexStr(serverHash), HexStr(computedServerHash));\n+                return;\n+            }\n+\n+            std::vector<uint8_t> computedClientHash = ComputeResponse(TOR_SAFE_CLIENTKEY, cookie, clientNonce, serverNonce);\n+            conn.Command(\"AUTHENTICATE \" + HexStr(computedClientHash), boost::bind(&TorController::auth_cb, this, _1, _2));\n+        } else {\n+            LogPrintf(\"tor: Invalid reply to AUTHCHALLENGE\\n\");\n+        }\n+    } else {\n+        LogPrintf(\"tor: SAFECOOKIE authentication challenge failed\\n\");\n     }\n }\n \n@@ -455,37 +543,52 @@ void TorController::protocolinfo_cb(TorControlConnection& conn, const TorControl\n                 std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);\n                 std::map<std::string,std::string>::iterator i;\n                 if ((i = m.find(\"Tor\")) != m.end()) {\n-                    LogPrintf(\"[tor] Connected to Tor version %s\\n\", i->second);\n+                    LogPrint(\"tor\", \"tor: Connected to Tor version %s\\n\", i->second);\n                 }\n             }\n         }\n         BOOST_FOREACH(const std::string &s, methods) {\n-            LogPrintf(\"[tor] Supported authentication method: %s\\n\", s);\n+            LogPrint(\"tor\", \"tor: Supported authentication method: %s\\n\", s);\n         }\n-        // Prefer NULL, otherwise COOKIE. If a password is provided, use HASHEDPASSWORD\n-        // We do not support SAFECOOKIE\n+        // Prefer NULL, otherwise SAFECOOKIE. If a password is provided, use HASHEDPASSWORD\n         /* Authentication:\n          *   cookie:   hex-encoded ~/.tor/control_auth_cookie\n          *   password: \"password\"\n          */\n+        std::string torpassword = GetArg(\"-torpassword\", \"\");\n         if (methods.count(\"NULL\")) {\n-            LogPrintf(\"[tor] Using NULL authentication\\n\");\n+            LogPrint(\"tor\", \"tor: Using NULL authentication\\n\");\n             conn.Command(\"AUTHENTICATE\", boost::bind(&TorController::auth_cb, this, _1, _2));\n-        } else if (methods.count(\"COOKIE\")) {\n+        } else if (methods.count(\"SAFECOOKIE\")) {\n             // Cookie: hexdump -e '32/1 \"%02x\"\"\\n\"'  ~/.tor/control_auth_cookie\n-            LogPrintf(\"[tor] Using COOKIE authentication, reading cookie authentication from %s\\n\", cookiefile);\n-            std::string cookie = ReadBinaryFile(cookiefile).second;\n-            if (!cookie.empty()) {\n-                conn.Command(\"AUTHENTICATE \" + HexStr(cookie), boost::bind(&TorController::auth_cb, this, _1, _2));\n+            LogPrint(\"tor\", \"tor: Using SAFECOOKIE authentication, reading cookie authentication from %s\\n\", cookiefile);\n+            std::pair<bool,std::string> status_cookie = ReadBinaryFile(cookiefile, TOR_COOKIE_SIZE);\n+            if (status_cookie.first && status_cookie.second.size() == TOR_COOKIE_SIZE) {\n+                // conn.Command(\"AUTHENTICATE \" + HexStr(status_cookie.second), boost::bind(&TorController::auth_cb, this, _1, _2));\n+                cookie = std::vector<uint8_t>(status_cookie.second.begin(), status_cookie.second.end());\n+                clientNonce = std::vector<uint8_t>(TOR_NONCE_SIZE, 0);\n+                GetRandBytes(&clientNonce[0], TOR_NONCE_SIZE);\n+                conn.Command(\"AUTHCHALLENGE SAFECOOKIE \" + HexStr(clientNonce), boost::bind(&TorController::authchallenge_cb, this, _1, _2));\n             } else {\n-                LogPrintf(\"[tor] Authentication cookie not found\\n\");\n+                if (status_cookie.first) {\n+                    LogPrintf(\"tor: Authentication cookie %s is not exactly %i bytes, as is required by the spec\\n\", cookiefile, TOR_COOKIE_SIZE);\n+                } else {\n+                    LogPrintf(\"tor: Authentication cookie %s could not be opened (check permissions)\\n\", cookiefile);\n+                }\n+            }\n+        } else if (methods.count(\"HASHEDPASSWORD\")) {\n+            if (!torpassword.empty()) {\n+                LogPrint(\"tor\", \"tor: Using HASHEDPASSWORD authentication\\n\");\n+                boost::replace_all(torpassword, \"\\\"\", \"\\\\\\\"\");\n+                conn.Command(\"AUTHENTICATE \\\"\" + torpassword + \"\\\"\", boost::bind(&TorController::auth_cb, this, _1, _2));\n+            } else {\n+                LogPrintf(\"tor: Password authentication required, but no password provided with -torpassword\\n\");\n             }\n         } else {\n-            /* TODO HASHEDPASSWORD w/ manual auth */\n-            LogPrintf(\"[tor] No supported authentication method\\n\");\n+            LogPrintf(\"tor: No supported authentication method\\n\");\n         }\n     } else {\n-        LogPrintf(\"[tor] Requesting protocol info failed\\n\");\n+        LogPrintf(\"tor: Requesting protocol info failed\\n\");\n     }\n }\n \n@@ -494,14 +597,18 @@ void TorController::connected_cb(TorControlConnection& conn)\n     reconnect_timeout = RECONNECT_TIMEOUT_START;\n     // First send a PROTOCOLINFO command to figure out what authentication is expected\n     if (!conn.Command(\"PROTOCOLINFO 1\", boost::bind(&TorController::protocolinfo_cb, this, _1, _2)))\n-        LogPrintf(\"[tor] Error sending initial protocolinfo command\\n\");\n+        LogPrintf(\"tor: Error sending initial protocolinfo command\\n\");\n }\n \n void TorController::disconnected_cb(TorControlConnection& conn)\n {\n+    // Stop advertizing service when disconnected\n+    if (service.IsValid())\n+        RemoveLocal(service);\n+    service = CService();\n     if (!reconnect)\n         return;\n-    LogPrintf(\"[tor] Disconnected from Tor control port %s, trying to reconnect\\n\", target);\n+    LogPrintf(\"tor: Disconnected from Tor control port %s, trying to reconnect\\n\", target);\n     // Single-shot timer for reconnect. Use exponential backoff.\n     struct timeval time = MillisToTimeval(int64_t(reconnect_timeout * 1000.0));\n     reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n@@ -516,7 +623,7 @@ void TorController::Reconnect()\n      */\n     if (!conn.Connect(target, boost::bind(&TorController::connected_cb, this, _1),\n          boost::bind(&TorController::disconnected_cb, this, _1) )) {\n-        LogPrintf(\"[tor] Re-initiating connection to Tor control port %s failed\\n\", target);\n+        LogPrintf(\"tor: Re-initiating connection to Tor control port %s failed\\n\", target);\n     }\n }\n \n@@ -525,51 +632,54 @@ std::string TorController::GetPrivateKeyFile()\n     return (GetDataDir() / \"onion_private_key\").string();\n }\n \n-void TorController::shutdown_poll_cb(evutil_socket_t fd, short what, void *arg)\n-{\n-    TorController *self = (TorController*)arg;\n-    if (ShutdownRequested()) {\n-        // Shutdown was requested. Stop timers, and request control connection to terminate\n-        LogPrintf(\"[tor] Thread interrupt\\n\");\n-        if (self->shutdown_poll_ev)\n-            event_del(self->shutdown_poll_ev);\n-        self->shutdown_poll_ev = 0;\n-        if (self->reconnect_ev)\n-            event_del(self->reconnect_ev);\n-        self->reconnect_ev = 0;\n-        self->reconnect = false;\n-        self->conn.Disconnect();\n-    }\n-}\n-\n void TorController::reconnect_cb(evutil_socket_t fd, short what, void *arg)\n {\n     TorController *self = (TorController*)arg;\n     self->Reconnect();\n }\n \n /****** Thread ********/\n+struct event_base *base;\n+boost::thread torControlThread;\n \n static void TorControlThread()\n {\n-    struct event_base *base = event_base_new();\n-    if (!base) {\n-        LogPrintf(\"[tor] Unable to create event_base_new\");\n-        return;\n-    }\n     TorController ctrl(base, GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL));\n \n     event_base_dispatch(base);\n-    event_base_free(base);\n }\n \n void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler)\n {\n-    threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"torcontrol\", &TorControlThread));\n+    assert(!base);\n+#ifdef WIN32\n+    evthread_use_windows_threads();\n+#else\n+    evthread_use_pthreads();\n+#endif\n+    base = event_base_new();\n+    if (!base) {\n+        LogPrintf(\"tor: Unable to create event_base\\n\");\n+        return;\n+    }\n+\n+    torControlThread = boost::thread(boost::bind(&TraceThread<void (*)()>, \"torcontrol\", &TorControlThread));\n+}\n+\n+void InterruptTorControl()\n+{\n+    if (base) {\n+        LogPrintf(\"tor: Thread interrupt\\n\");\n+        event_base_loopbreak(base);\n+    }\n }\n \n void StopTorControl()\n {\n-    /* Nothing to do actually. Everything is cleaned up when thread exits */\n+    if (base) {\n+        torControlThread.join();\n+        event_base_free(base);\n+        base = 0;\n+    }\n }\n "
      },
      {
        "sha": "72dc82c5b17a97102d6f881e1d209ab26a26dc7e",
        "filename": "src/torcontrol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09c1ae1c01076f64fe0654f371200668306e5e18/src/torcontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09c1ae1c01076f64fe0654f371200668306e5e18/src/torcontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.h?ref=09c1ae1c01076f64fe0654f371200668306e5e18",
        "patch": "@@ -14,6 +14,7 @@ extern const std::string DEFAULT_TOR_CONTROL;\n static const bool DEFAULT_LISTEN_ONION = true;\n \n void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler);\n+void InterruptTorControl();\n void StopTorControl();\n \n #endif /* BITCOIN_TORCONTROL_H */"
      }
    ]
  },
  {
    "sha": "68ccdc4696cceade91ff0a78bd011a8437f15e8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGNjZGM0Njk2Y2NlYWRlOTFmZjBhNzhiZDAxMWE4NDM3ZjE1ZThm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-10T16:40:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T16:58:15Z"
      },
      "message": "doc: Mention Tor listening in release notes",
      "tree": {
        "sha": "398ed09497aace66016f249171acab0d55df9ea3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/398ed09497aace66016f249171acab0d55df9ea3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68ccdc4696cceade91ff0a78bd011a8437f15e8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68ccdc4696cceade91ff0a78bd011a8437f15e8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68ccdc4696cceade91ff0a78bd011a8437f15e8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68ccdc4696cceade91ff0a78bd011a8437f15e8f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "09c1ae1c01076f64fe0654f371200668306e5e18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09c1ae1c01076f64fe0654f371200668306e5e18",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09c1ae1c01076f64fe0654f371200668306e5e18"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3d10a079128ca78ecef040d5715edaf45b2f6189",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68ccdc4696cceade91ff0a78bd011a8437f15e8f/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68ccdc4696cceade91ff0a78bd011a8437f15e8f/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=68ccdc4696cceade91ff0a78bd011a8437f15e8f",
        "patch": "@@ -151,6 +151,23 @@ mining with the getblocktemplate protocol to a pool: this will affect you at\n the pool operator's discretion, which must be no later than BIP65 achieving its\n 951/1001 status.\n \n+Automatically listen on Tor\n+----------------------------\n+\n+Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n+API, to create and destroy 'ephemeral' hidden services programmatically.\n+Bitcoin Core has been updated to make use of this.\n+\n+This means that if Tor is running (and proper authorization is available),\n+Bitcoin Core automatically creates a hidden service to listen on, without\n+manual configuration. This will positively affect the number of available\n+.onion nodes.\n+\n+This new feature is enabled by default if Bitcoin Core is listening, and\n+a connection to Tor can be made. It can be configured with the `-listenonion`,\n+`-torcontrol` and `-torpassword` settings. To show verbose debugging\n+information, pass `-debug=tor`.\n+\n 0.12.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGVmMGZmYTllZjljNmVjZDM4MzA0MGVkYmQ1YzViNmUwYTYzZmVm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-11T14:08:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T17:08:50Z"
      },
      "message": "doc: update docs for Tor listening\n\n- add new data directory files for 0.12 to doc/files.md\n- mention torcontrol in doc/tor.md",
      "tree": {
        "sha": "9899998dbde3d1da4a6910f5f8f33a240769f60a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9899998dbde3d1da4a6910f5f8f33a240769f60a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68ccdc4696cceade91ff0a78bd011a8437f15e8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68ccdc4696cceade91ff0a78bd011a8437f15e8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68ccdc4696cceade91ff0a78bd011a8437f15e8f"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f7eca57dcb08fb3ea3e4e4d7dc274c0a33fa7431",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef",
        "patch": "@@ -12,6 +12,8 @@\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n * peers.dat: peer IP address database (custom format); since 0.7.0\n * wallet.dat: personal wallet (BDB) with keys and transactions\n+* .cookie: session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n+* onion_private_key: cached Tor hidden service private key for `-listenonion`: since 0.12.0\n \n Only used in pre-0.8.0\n ---------------------"
      },
      {
        "sha": "1d35a658bc42e4aaa34f2982357f9d1a20197c92",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef",
        "patch": "@@ -87,3 +87,20 @@ If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n \t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\n+3. Automatically listen on Tor\n+--------------------------------\n+\n+Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n+API, to create and destroy 'ephemeral' hidden services programmatically.\n+Bitcoin Core has been updated to make use of this.\n+\n+This means that if Tor is running (and proper authorization is available),\n+Bitcoin Core automatically creates a hidden service to listen on, without\n+manual configuration. This will positively affect the number of available\n+.onion nodes.\n+\n+This new feature is enabled by default if Bitcoin Core is listening, and\n+a connection to Tor can be made. It can be configured with the `-listenonion`,\n+`-torcontrol` and `-torpassword` settings. To show verbose debugging\n+information, pass `-debug=tor`."
      }
    ]
  },
  {
    "sha": "bd629d77edbeac6ce71a34f6d557c4e00513be44",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDYyOWQ3N2VkYmVhYzZjZTcxYTM0ZjZkNTU3YzRlMDA1MTNiZTQ0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T17:08:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-11-12T18:24:59Z"
      },
      "message": "Merge pull request #6639\n\n58ef0ff doc: update docs for Tor listening (Wladimir J. van der Laan)\n68ccdc4 doc: Mention Tor listening in release notes (Wladimir J. van der Laan)\n09c1ae1 torcontrol improvements and fixes (Wladimir J. van der Laan)\n2f796e5 Better error message if Tor version too old (Peter Todd)\n8f4e67f net: Automatically create hidden service, listen on Tor (Wladimir J. van der Laan)",
      "tree": {
        "sha": "e5a2d84d2153393e71a7b84e726ae5136f80e4af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5a2d84d2153393e71a7b84e726ae5136f80e4af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd629d77edbeac6ce71a34f6d557c4e00513be44",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJWRNl+AAoJEHSBCwEjRsmmAxIH/2CYAZcVdOczT0gNS8Xq75/C\n8a9FQQ7jMLpJhqVXz5lQUN/bvM1uosu2PdV9MSOeK3kzvXHOIwybwpx4BjVRWxHs\nlfR5YqOieMnEjTELzvuGynw/y63CctQGkqWuPX4iTsarnmZBeXA0LQGuFJDAwtjq\nCdovmGZygoplRNg9KWb1njR5AXgkZ7TKzTRleraU7jdolmXLK7tzg/6kJ9KII+Ia\nu+FUwhJMcU8GI4Octrs6Anp0GuUM43aCYl2igLEPu1a5iNJIhZnUdl+HR/rzb3Pj\nGWzVtjdYnrEVovfBvrHZ96zFRiNfXB5gcK074Tn7JzKwBmFY3jhdZ5J/vSqCOYQ=\n=yNZK\n-----END PGP SIGNATURE-----",
        "payload": "tree e5a2d84d2153393e71a7b84e726ae5136f80e4af\nparent eb6172a8ca7e0474457c1206c9907514348243ea\nparent 58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1447348133 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1447352699 +0100\n\nMerge pull request #6639\n\n58ef0ff doc: update docs for Tor listening (Wladimir J. van der Laan)\n68ccdc4 doc: Mention Tor listening in release notes (Wladimir J. van der Laan)\n09c1ae1 torcontrol improvements and fixes (Wladimir J. van der Laan)\n2f796e5 Better error message if Tor version too old (Peter Todd)\n8f4e67f net: Automatically create hidden service, listen on Tor (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd629d77edbeac6ce71a34f6d557c4e00513be44",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd629d77edbeac6ce71a34f6d557c4e00513be44",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd629d77edbeac6ce71a34f6d557c4e00513be44/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eb6172a8ca7e0474457c1206c9907514348243ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb6172a8ca7e0474457c1206c9907514348243ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb6172a8ca7e0474457c1206c9907514348243ea"
      },
      {
        "sha": "58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58ef0ffa9ef9c6ecd383040edbd5c5b6e0a63fef"
      }
    ],
    "stats": {
      "total": 775,
      "additions": 771,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f7eca57dcb08fb3ea3e4e4d7dc274c0a33fa7431",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -12,6 +12,8 @@\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n * peers.dat: peer IP address database (custom format); since 0.7.0\n * wallet.dat: personal wallet (BDB) with keys and transactions\n+* .cookie: session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n+* onion_private_key: cached Tor hidden service private key for `-listenonion`: since 0.12.0\n \n Only used in pre-0.8.0\n ---------------------"
      },
      {
        "sha": "31704ba47cb8647a9ff3f4fd1ee3f8accacbdc0f",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -151,6 +151,23 @@ mining with the getblocktemplate protocol to a pool: this will affect you at\n the pool operator's discretion, which must be no later than BIP65 achieving its\n 951/1001 status.\n \n+Automatically listen on Tor\n+----------------------------\n+\n+Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n+API, to create and destroy 'ephemeral' hidden services programmatically.\n+Bitcoin Core has been updated to make use of this.\n+\n+This means that if Tor is running (and proper authorization is available),\n+Bitcoin Core automatically creates a hidden service to listen on, without\n+manual configuration. This will positively affect the number of available\n+.onion nodes.\n+\n+This new feature is enabled by default if Bitcoin Core is listening, and\n+a connection to Tor can be made. It can be configured with the `-listenonion`,\n+`-torcontrol` and `-torpassword` settings. To show verbose debugging\n+information, pass `-debug=tor`.\n+\n 0.12.0 Change log\n =================\n "
      },
      {
        "sha": "1d35a658bc42e4aaa34f2982357f9d1a20197c92",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -87,3 +87,20 @@ If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n \t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\n+3. Automatically listen on Tor\n+--------------------------------\n+\n+Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n+API, to create and destroy 'ephemeral' hidden services programmatically.\n+Bitcoin Core has been updated to make use of this.\n+\n+This means that if Tor is running (and proper authorization is available),\n+Bitcoin Core automatically creates a hidden service to listen on, without\n+manual configuration. This will positively affect the number of available\n+.onion nodes.\n+\n+This new feature is enabled by default if Bitcoin Core is listening, and\n+a connection to Tor can be made. It can be configured with the `-listenonion`,\n+`-torcontrol` and `-torpassword` settings. To show verbose debugging\n+information, pass `-debug=tor`."
      },
      {
        "sha": "834c3dc8918d6e0a7b5d472ff514d99a72ded0aa",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -151,6 +151,7 @@ BITCOIN_CORE_H = \\\n   threadsafety.h \\\n   timedata.h \\\n   tinyformat.h \\\n+  torcontrol.h \\\n   txdb.h \\\n   txmempool.h \\\n   ui_interface.h \\\n@@ -209,6 +210,7 @@ libbitcoin_server_a_SOURCES = \\\n   rpcserver.cpp \\\n   script/sigcache.cpp \\\n   timedata.cpp \\\n+  torcontrol.cpp \\\n   txdb.cpp \\\n   txmempool.cpp \\\n   validationinterface.cpp \\"
      },
      {
        "sha": "87a23deab73a66cc248fbfed2038c946fe06bc17",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -29,6 +29,7 @@\n #include \"scheduler.h\"\n #include \"txdb.h\"\n #include \"txmempool.h\"\n+#include \"torcontrol.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n@@ -160,6 +161,7 @@ void Interrupt(boost::thread_group& threadGroup)\n     InterruptHTTPRPC();\n     InterruptRPC();\n     InterruptREST();\n+    InterruptTorControl();\n     threadGroup.interrupt_all();\n }\n \n@@ -188,6 +190,7 @@ void Shutdown()\n #endif\n     GenerateBitcoins(false, 0, Params());\n     StopNode();\n+    StopTorControl();\n     UnregisterNodeSignals(GetNodeSignals());\n \n     if (fFeeEstimatesInitialized)\n@@ -348,6 +351,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-externalip=<ip>\", _(\"Specify your own public address\"));\n     strUsage += HelpMessageOpt(\"-forcednsseed\", strprintf(_(\"Always query for peer addresses via DNS lookup (default: %u)\"), 0));\n     strUsage += HelpMessageOpt(\"-listen\", _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\"));\n+    strUsage += HelpMessageOpt(\"-listenonion\", strprintf(_(\"Automatically create Tor hidden service (default: %d)\"), DEFAULT_LISTEN_ONION));\n     strUsage += HelpMessageOpt(\"-maxconnections=<n>\", strprintf(_(\"Maintain at most <n> connections to peers (default: %u)\"), DEFAULT_MAX_PEER_CONNECTIONS));\n     strUsage += HelpMessageOpt(\"-maxreceivebuffer=<n>\", strprintf(_(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\"), 5000));\n     strUsage += HelpMessageOpt(\"-maxsendbuffer=<n>\", strprintf(_(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\"), 1000));\n@@ -359,6 +363,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), 1));\n     strUsage += HelpMessageOpt(\"-seednode=<ip>\", _(\"Connect to a node to retrieve peer addresses, and disconnect\"));\n     strUsage += HelpMessageOpt(\"-timeout=<n>\", strprintf(_(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"), DEFAULT_CONNECT_TIMEOUT));\n+    strUsage += HelpMessageOpt(\"-torcontrol=<ip>:<port>\", strprintf(_(\"Tor control port to use if onion listening enabled (default: %s)\"), DEFAULT_TOR_CONTROL));\n+    strUsage += HelpMessageOpt(\"-torpassword=<pass>\", _(\"Tor control port password (default: empty)\"));\n #ifdef USE_UPNP\n #if USE_UPNP\n     strUsage += HelpMessageOpt(\"-upnp\", _(\"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\"));\n@@ -778,6 +784,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n         if (SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -discover=0\\n\", __func__);\n+        if (SoftSetBoolArg(\"-listenonion\", false))\n+            LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -listenonion=0\\n\", __func__);\n     }\n \n     if (mapArgs.count(\"-externalip\")) {\n@@ -1568,6 +1576,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n #endif\n \n+    if (GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n+        StartTorControl(threadGroup, scheduler);\n+\n     StartNode(threadGroup, scheduler);\n \n     // Monitor the chain, and alert if we get blocks much quicker or slower than expected"
      },
      {
        "sha": "5208fbb03195c0c7b9b609972414a4ee92a845d8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -4059,9 +4059,11 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 CAddress addr = GetLocalAddress(&pfrom->addr);\n                 if (addr.IsRoutable())\n                 {\n+                    LogPrintf(\"ProcessMessages: advertizing address %s\\n\", addr.ToString());\n                     pfrom->PushAddress(addr);\n                 } else if (IsPeerAddrLocalGood(pfrom)) {\n                     addr.SetIP(pfrom->addrLocal);\n+                    LogPrintf(\"ProcessMessages: advertizing address %s\\n\", addr.ToString());\n                     pfrom->PushAddress(addr);\n                 }\n             }"
      },
      {
        "sha": "ada4a1bb6214c4ec6a568cfc1f0a0037eeee6a67",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -216,6 +216,7 @@ void AdvertizeLocal(CNode *pnode)\n         }\n         if (addrLocal.IsRoutable())\n         {\n+            LogPrintf(\"AdvertizeLocal: advertizing address %s\\n\", addrLocal.ToString());\n             pnode->PushAddress(addrLocal);\n         }\n     }\n@@ -262,6 +263,14 @@ bool AddLocal(const CNetAddr &addr, int nScore)\n     return AddLocal(CService(addr, GetListenPort()), nScore);\n }\n \n+bool RemoveLocal(const CService& addr)\n+{\n+    LOCK(cs_mapLocalHost);\n+    LogPrintf(\"RemoveLocal(%s)\\n\", addr.ToString());\n+    mapLocalHost.erase(addr);\n+    return true;\n+}\n+\n /** Make a particular network entirely off-limits (no automatic connects to it) */\n void SetLimited(enum Network net, bool fLimited)\n {"
      },
      {
        "sha": "d89244523eb3e05a38a7a789179ce43ef8092451",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -128,6 +128,7 @@ bool IsLimited(enum Network net);\n bool IsLimited(const CNetAddr& addr);\n bool AddLocal(const CService& addr, int nScore = LOCAL_NONE);\n bool AddLocal(const CNetAddr& addr, int nScore = LOCAL_NONE);\n+bool RemoveLocal(const CService& addr);\n bool SeenLocal(const CService& addr);\n bool IsLocal(const CService& addr);\n bool GetLocal(CService &addr, const CNetAddr *paddrPeer = NULL);"
      },
      {
        "sha": "83cedfb620e1a4feeaaa20320f1a88e2d05f322f",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -227,10 +227,7 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n-/**\n- * Convert milliseconds to a struct timeval for select.\n- */\n-struct timeval static MillisToTimeval(int64_t nTimeout)\n+struct timeval MillisToTimeval(int64_t nTimeout)\n {\n     struct timeval timeout;\n     timeout.tv_sec  = nTimeout / 1000;"
      },
      {
        "sha": "2a79f82d72eca6705210fb70deb406ae14bc8740",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -215,5 +215,9 @@ std::string NetworkErrorString(int err);\n bool CloseSocket(SOCKET& hSocket);\n /** Disable or enable blocking-mode for a socket */\n bool SetSocketNonBlocking(SOCKET& hSocket, bool fNonBlocking);\n+/**\n+ * Convert milliseconds to a struct timeval for e.g. select.\n+ */\n+struct timeval MillisToTimeval(int64_t nTimeout);\n \n #endif // BITCOIN_NETBASE_H"
      },
      {
        "sha": "08644f29684f685bd7e209c46bc7d14119fa4258",
        "filename": "src/torcontrol.cpp",
        "status": "added",
        "additions": 685,
        "deletions": 0,
        "changes": 685,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -0,0 +1,685 @@\n+#include \"torcontrol.h\"\n+#include \"utilstrencodings.h\"\n+#include \"net.h\"\n+#include \"util.h\"\n+#include \"crypto/hmac_sha256.h\"\n+\n+#include <vector>\n+#include <deque>\n+#include <set>\n+#include <stdlib.h>\n+\n+#include <boost/function.hpp>\n+#include <boost/bind.hpp>\n+#include <boost/signals2/signal.hpp>\n+#include <boost/foreach.hpp>\n+#include <boost/algorithm/string/predicate.hpp>\n+#include <boost/algorithm/string/split.hpp>\n+#include <boost/algorithm/string/classification.hpp>\n+#include <boost/algorithm/string/replace.hpp>\n+\n+#include <event2/bufferevent.h>\n+#include <event2/buffer.h>\n+#include <event2/util.h>\n+#include <event2/event.h>\n+#include <event2/thread.h>\n+\n+/** Default control port */\n+const std::string DEFAULT_TOR_CONTROL = \"127.0.0.1:9051\";\n+/** Tor cookie size (from control-spec.txt) */\n+static const int TOR_COOKIE_SIZE = 32;\n+/** Size of client/server nonce for SAFECOOKIE */\n+static const int TOR_NONCE_SIZE = 32;\n+/** For computing serverHash in SAFECOOKIE */\n+static const std::string TOR_SAFE_SERVERKEY = \"Tor safe cookie authentication server-to-controller hash\";\n+/** For computing clientHash in SAFECOOKIE */\n+static const std::string TOR_SAFE_CLIENTKEY = \"Tor safe cookie authentication controller-to-server hash\";\n+/** Exponential backoff configuration - initial timeout in seconds */\n+static const float RECONNECT_TIMEOUT_START = 1.0;\n+/** Exponential backoff configuration - growth factor */\n+static const float RECONNECT_TIMEOUT_EXP = 1.5;\n+/** Maximum length for lines received on TorControlConnection.\n+ * tor-control-spec.txt mentions that there is explicitly no limit defined to line length,\n+ * this is belt-and-suspenders sanity limit to prevent memory exhaustion.\n+ */\n+static const int MAX_LINE_LENGTH = 100000;\n+\n+/****** Low-level TorControlConnection ********/\n+\n+/** Reply from Tor, can be single or multi-line */\n+class TorControlReply\n+{\n+public:\n+    TorControlReply() { Clear(); }\n+\n+    int code;\n+    std::vector<std::string> lines;\n+\n+    void Clear()\n+    {\n+        code = 0;\n+        lines.clear();\n+    }\n+};\n+\n+/** Low-level handling for Tor control connection.\n+ * Speaks the SMTP-like protocol as defined in torspec/control-spec.txt\n+ */\n+class TorControlConnection\n+{\n+public:\n+    typedef boost::function<void(TorControlConnection&)> ConnectionCB;\n+    typedef boost::function<void(TorControlConnection &,const TorControlReply &)> ReplyHandlerCB;\n+\n+    /** Create a new TorControlConnection.\n+     */\n+    TorControlConnection(struct event_base *base);\n+    ~TorControlConnection();\n+\n+    /**\n+     * Connect to a Tor control port.\n+     * target is address of the form host:port.\n+     * connected is the handler that is called when connection is succesfully established.\n+     * disconnected is a handler that is called when the connection is broken.\n+     * Return true on success.\n+     */\n+    bool Connect(const std::string &target, const ConnectionCB& connected, const ConnectionCB& disconnected);\n+\n+    /**\n+     * Disconnect from Tor control port.\n+     */\n+    bool Disconnect();\n+\n+    /** Send a command, register a handler for the reply.\n+     * A trailing CRLF is automatically added.\n+     * Return true on success.\n+     */\n+    bool Command(const std::string &cmd, const ReplyHandlerCB& reply_handler);\n+\n+    /** Response handlers for async replies */\n+    boost::signals2::signal<void(TorControlConnection &,const TorControlReply &)> async_handler;\n+private:\n+    /** Callback when ready for use */\n+    boost::function<void(TorControlConnection&)> connected;\n+    /** Callback when connection lost */\n+    boost::function<void(TorControlConnection&)> disconnected;\n+    /** Libevent event base */\n+    struct event_base *base;\n+    /** Connection to control socket */\n+    struct bufferevent *b_conn;\n+    /** Message being received */\n+    TorControlReply message;\n+    /** Response handlers */\n+    std::deque<ReplyHandlerCB> reply_handlers;\n+\n+    /** Libevent handlers: internal */\n+    static void readcb(struct bufferevent *bev, void *ctx);\n+    static void eventcb(struct bufferevent *bev, short what, void *ctx);\n+};\n+\n+TorControlConnection::TorControlConnection(struct event_base *base):\n+    base(base), b_conn(0)\n+{\n+}\n+\n+TorControlConnection::~TorControlConnection()\n+{\n+    if (b_conn)\n+        bufferevent_free(b_conn);\n+}\n+\n+void TorControlConnection::readcb(struct bufferevent *bev, void *ctx)\n+{\n+    TorControlConnection *self = (TorControlConnection*)ctx;\n+    struct evbuffer *input = bufferevent_get_input(bev);\n+    size_t n_read_out = 0;\n+    char *line;\n+    assert(input);\n+    //  If there is not a whole line to read, evbuffer_readln returns NULL\n+    while((line = evbuffer_readln(input, &n_read_out, EVBUFFER_EOL_CRLF)) != NULL)\n+    {\n+        std::string s(line, n_read_out);\n+        free(line);\n+        if (s.size() < 4) // Short line\n+            continue;\n+        // <status>(-|+| )<data><CRLF>\n+        self->message.code = atoi(s.substr(0,3));\n+        self->message.lines.push_back(s.substr(4));\n+        char ch = s[3]; // '-','+' or ' '\n+        if (ch == ' ') {\n+            // Final line, dispatch reply and clean up\n+            if (self->message.code >= 600) {\n+                // Dispatch async notifications to async handler\n+                // Synchronous and asynchronous messages are never interleaved\n+                self->async_handler(*self, self->message);\n+            } else {\n+                if (!self->reply_handlers.empty()) {\n+                    // Invoke reply handler with message\n+                    self->reply_handlers.front()(*self, self->message);\n+                    self->reply_handlers.pop_front();\n+                } else {\n+                    LogPrint(\"tor\", \"tor: Received unexpected sync reply %i\\n\", self->message.code);\n+                }\n+            }\n+            self->message.Clear();\n+        }\n+    }\n+    //  Check for size of buffer - protect against memory exhaustion with very long lines\n+    //  Do this after evbuffer_readln to make sure all full lines have been\n+    //  removed from the buffer. Everything left is an incomplete line.\n+    if (evbuffer_get_length(input) > MAX_LINE_LENGTH) {\n+        LogPrintf(\"tor: Disconnecting because MAX_LINE_LENGTH exceeded\\n\");\n+        self->Disconnect();\n+    }\n+}\n+\n+void TorControlConnection::eventcb(struct bufferevent *bev, short what, void *ctx)\n+{\n+    TorControlConnection *self = (TorControlConnection*)ctx;\n+    if (what & BEV_EVENT_CONNECTED) {\n+        LogPrint(\"tor\", \"tor: Succesfully connected!\\n\");\n+        self->connected(*self);\n+    } else if (what & (BEV_EVENT_EOF|BEV_EVENT_ERROR)) {\n+        if (what & BEV_EVENT_ERROR)\n+            LogPrint(\"tor\", \"tor: Error connecting to Tor control socket\\n\");\n+        else\n+            LogPrint(\"tor\", \"tor: End of stream\\n\");\n+        self->Disconnect();\n+        self->disconnected(*self);\n+    }\n+}\n+\n+bool TorControlConnection::Connect(const std::string &target, const ConnectionCB& connected, const ConnectionCB& disconnected)\n+{\n+    if (b_conn)\n+        Disconnect();\n+    // Parse target address:port\n+    struct sockaddr_storage connect_to_addr;\n+    int connect_to_addrlen = sizeof(connect_to_addr);\n+    if (evutil_parse_sockaddr_port(target.c_str(),\n+        (struct sockaddr*)&connect_to_addr, &connect_to_addrlen)<0) {\n+        LogPrintf(\"tor: Error parsing socket address %s\\n\", target);\n+        return false;\n+    }\n+\n+    // Create a new socket, set up callbacks and enable notification bits\n+    b_conn = bufferevent_socket_new(base, -1, BEV_OPT_CLOSE_ON_FREE);\n+    if (!b_conn)\n+        return false;\n+    bufferevent_setcb(b_conn, TorControlConnection::readcb, NULL, TorControlConnection::eventcb, this);\n+    bufferevent_enable(b_conn, EV_READ|EV_WRITE);\n+    this->connected = connected;\n+    this->disconnected = disconnected;\n+\n+    // Finally, connect to target\n+    if (bufferevent_socket_connect(b_conn, (struct sockaddr*)&connect_to_addr, connect_to_addrlen) < 0) {\n+        LogPrintf(\"tor: Error connecting to address %s\\n\", target);\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool TorControlConnection::Disconnect()\n+{\n+    if (b_conn)\n+        bufferevent_free(b_conn);\n+    b_conn = 0;\n+    return true;\n+}\n+\n+bool TorControlConnection::Command(const std::string &cmd, const ReplyHandlerCB& reply_handler)\n+{\n+    if (!b_conn)\n+        return false;\n+    struct evbuffer *buf = bufferevent_get_output(b_conn);\n+    if (!buf)\n+        return false;\n+    evbuffer_add(buf, cmd.data(), cmd.size());\n+    evbuffer_add(buf, \"\\r\\n\", 2);\n+    reply_handlers.push_back(reply_handler);\n+    return true;\n+}\n+\n+/****** General parsing utilities ********/\n+\n+/* Split reply line in the form 'AUTH METHODS=...' into a type\n+ * 'AUTH' and arguments 'METHODS=...'.\n+ */\n+static std::pair<std::string,std::string> SplitTorReplyLine(const std::string &s)\n+{\n+    size_t ptr=0;\n+    std::string type;\n+    while (ptr < s.size() && s[ptr] != ' ') {\n+        type.push_back(s[ptr]);\n+        ++ptr;\n+    }\n+    if (ptr < s.size())\n+        ++ptr; // skip ' '\n+    return make_pair(type, s.substr(ptr));\n+}\n+\n+/** Parse reply arguments in the form 'METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\".../control_auth_cookie\"'.\n+ */\n+static std::map<std::string,std::string> ParseTorReplyMapping(const std::string &s)\n+{\n+    std::map<std::string,std::string> mapping;\n+    size_t ptr=0;\n+    while (ptr < s.size()) {\n+        std::string key, value;\n+        while (ptr < s.size() && s[ptr] != '=') {\n+            key.push_back(s[ptr]);\n+            ++ptr;\n+        }\n+        if (ptr == s.size()) // unexpected end of line\n+            return std::map<std::string,std::string>();\n+        ++ptr; // skip '='\n+        if (ptr < s.size() && s[ptr] == '\"') { // Quoted string\n+            ++ptr; // skip '='\n+            bool escape_next = false;\n+            while (ptr < s.size() && (!escape_next && s[ptr] != '\"')) {\n+                escape_next = (s[ptr] == '\\\\');\n+                value.push_back(s[ptr]);\n+                ++ptr;\n+            }\n+            if (ptr == s.size()) // unexpected end of line\n+                return std::map<std::string,std::string>();\n+            ++ptr; // skip closing '\"'\n+            /* TODO: unescape value - according to the spec this depends on the\n+             * context, some strings use C-LogPrintf style escape codes, some\n+             * don't. So may be better handled at the call site.\n+             */\n+        } else { // Unquoted value. Note that values can contain '=' at will, just no spaces\n+            while (ptr < s.size() && s[ptr] != ' ') {\n+                value.push_back(s[ptr]);\n+                ++ptr;\n+            }\n+        }\n+        if (ptr < s.size() && s[ptr] == ' ')\n+            ++ptr; // skip ' ' after key=value\n+        mapping[key] = value;\n+    }\n+    return mapping;\n+}\n+\n+/** Read full contents of a file and return them in a std::string.\n+ * Returns a pair <status, string>.\n+ * If an error occured, status will be false, otherwise status will be true and the data will be returned in string.\n+ *\n+ * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n+ *         (with len > maxsize) will be returned.\n+ */\n+static std::pair<bool,std::string> ReadBinaryFile(const std::string &filename, size_t maxsize=std::numeric_limits<size_t>::max())\n+{\n+    FILE *f = fopen(filename.c_str(), \"rb\");\n+    if (f == NULL)\n+        return std::make_pair(false,\"\");\n+    std::string retval;\n+    char buffer[128];\n+    size_t n;\n+    while ((n=fread(buffer, 1, sizeof(buffer), f)) > 0) {\n+        retval.append(buffer, buffer+n);\n+        if (retval.size() > maxsize)\n+            break;\n+    }\n+    fclose(f);\n+    return std::make_pair(true,retval);\n+}\n+\n+/** Write contents of std::string to a file.\n+ * @return true on success.\n+ */\n+static bool WriteBinaryFile(const std::string &filename, const std::string &data)\n+{\n+    FILE *f = fopen(filename.c_str(), \"wb\");\n+    if (f == NULL)\n+        return false;\n+    if (fwrite(data.data(), 1, data.size(), f) != data.size()) {\n+        fclose(f);\n+        return false;\n+    }\n+    fclose(f);\n+    return true;\n+}\n+\n+/****** Bitcoin specific TorController implementation ********/\n+\n+/** Controller that connects to Tor control socket, authenticate, then create\n+ * and maintain a ephemeral hidden service.\n+ */\n+class TorController\n+{\n+public:\n+    TorController(struct event_base* base, const std::string& target);\n+    ~TorController();\n+\n+    /** Get name fo file to store private key in */\n+    std::string GetPrivateKeyFile();\n+\n+    /** Reconnect, after getting disconnected */\n+    void Reconnect();\n+private:\n+    struct event_base* base;\n+    std::string target;\n+    TorControlConnection conn;\n+    std::string private_key;\n+    std::string service_id;\n+    bool reconnect;\n+    struct event *reconnect_ev;\n+    float reconnect_timeout;\n+    CService service;\n+    /** Cooie for SAFECOOKIE auth */\n+    std::vector<uint8_t> cookie;\n+    /** ClientNonce for SAFECOOKIE auth */\n+    std::vector<uint8_t> clientNonce;\n+\n+    /** Callback for ADD_ONION result */\n+    void add_onion_cb(TorControlConnection& conn, const TorControlReply& reply);\n+    /** Callback for AUTHENTICATE result */\n+    void auth_cb(TorControlConnection& conn, const TorControlReply& reply);\n+    /** Callback for AUTHCHALLENGE result */\n+    void authchallenge_cb(TorControlConnection& conn, const TorControlReply& reply);\n+    /** Callback for PROTOCOLINFO result */\n+    void protocolinfo_cb(TorControlConnection& conn, const TorControlReply& reply);\n+    /** Callback after succesful connection */\n+    void connected_cb(TorControlConnection& conn);\n+    /** Callback after connection lost or failed connection attempt */\n+    void disconnected_cb(TorControlConnection& conn);\n+\n+    /** Callback for reconnect timer */\n+    static void reconnect_cb(evutil_socket_t fd, short what, void *arg);\n+};\n+\n+TorController::TorController(struct event_base* base, const std::string& target):\n+    base(base),\n+    target(target), conn(base), reconnect(true), reconnect_ev(0),\n+    reconnect_timeout(RECONNECT_TIMEOUT_START)\n+{\n+    // Start connection attempts immediately\n+    if (!conn.Connect(target, boost::bind(&TorController::connected_cb, this, _1),\n+         boost::bind(&TorController::disconnected_cb, this, _1) )) {\n+        LogPrintf(\"tor: Initiating connection to Tor control port %s failed\\n\", target);\n+    }\n+    // Read service private key if cached\n+    std::pair<bool,std::string> pkf = ReadBinaryFile(GetPrivateKeyFile());\n+    if (pkf.first) {\n+        LogPrint(\"tor\", \"tor: Reading cached private key from %s\\n\", GetPrivateKeyFile());\n+        private_key = pkf.second;\n+    }\n+}\n+\n+TorController::~TorController()\n+{\n+    if (reconnect_ev)\n+        event_del(reconnect_ev);\n+    if (service.IsValid()) {\n+        RemoveLocal(service);\n+    }\n+}\n+\n+void TorController::add_onion_cb(TorControlConnection& conn, const TorControlReply& reply)\n+{\n+    if (reply.code == 250) {\n+        LogPrint(\"tor\", \"tor: ADD_ONION succesful\\n\");\n+        BOOST_FOREACH(const std::string &s, reply.lines) {\n+            std::map<std::string,std::string> m = ParseTorReplyMapping(s);\n+            std::map<std::string,std::string>::iterator i;\n+            if ((i = m.find(\"ServiceID\")) != m.end())\n+                service_id = i->second;\n+            if ((i = m.find(\"PrivateKey\")) != m.end())\n+                private_key = i->second;\n+        }\n+\n+        service = CService(service_id+\".onion\", GetListenPort(), false);\n+        LogPrintf(\"tor: Got service ID %s, advertizing service %s\\n\", service_id, service.ToString());\n+        if (WriteBinaryFile(GetPrivateKeyFile(), private_key)) {\n+            LogPrint(\"tor\", \"tor: Cached service private key to %s\\n\", GetPrivateKeyFile());\n+        } else {\n+            LogPrintf(\"tor: Error writing service private key to %s\\n\", GetPrivateKeyFile());\n+        }\n+        AddLocal(service, LOCAL_MANUAL);\n+        // ... onion requested - keep connection open\n+    } else if (reply.code == 510) { // 510 Unrecognized command\n+        LogPrintf(\"tor: Add onion failed with unrecognized command (You probably need to upgrade Tor)\\n\");\n+    } else {\n+        LogPrintf(\"tor: Add onion failed; error code %d\\n\", reply.code);\n+    }\n+}\n+\n+void TorController::auth_cb(TorControlConnection& conn, const TorControlReply& reply)\n+{\n+    if (reply.code == 250) {\n+        LogPrint(\"tor\", \"tor: Authentication succesful\\n\");\n+        // Finally - now create the service\n+        if (private_key.empty()) // No private key, generate one\n+            private_key = \"NEW:BEST\";\n+        // Request hidden service, redirect port.\n+        // Note that the 'virtual' port doesn't have to be the same as our internal port, but this is just a convenient\n+        // choice.  TODO; refactor the shutdown sequence some day.\n+        conn.Command(strprintf(\"ADD_ONION %s Port=%i,127.0.0.1:%i\", private_key, GetListenPort(), GetListenPort()),\n+            boost::bind(&TorController::add_onion_cb, this, _1, _2));\n+    } else {\n+        LogPrintf(\"tor: Authentication failed\\n\");\n+    }\n+}\n+\n+/** Compute Tor SAFECOOKIE response.\n+ *\n+ *    ServerHash is computed as:\n+ *      HMAC-SHA256(\"Tor safe cookie authentication server-to-controller hash\",\n+ *                  CookieString | ClientNonce | ServerNonce)\n+ *    (with the HMAC key as its first argument)\n+ *\n+ *    After a controller sends a successful AUTHCHALLENGE command, the\n+ *    next command sent on the connection must be an AUTHENTICATE command,\n+ *    and the only authentication string which that AUTHENTICATE command\n+ *    will accept is:\n+ *\n+ *      HMAC-SHA256(\"Tor safe cookie authentication controller-to-server hash\",\n+ *                  CookieString | ClientNonce | ServerNonce)\n+ *\n+ */\n+static std::vector<uint8_t> ComputeResponse(const std::string &key, const std::vector<uint8_t> &cookie,  const std::vector<uint8_t> &clientNonce, const std::vector<uint8_t> &serverNonce)\n+{\n+    CHMAC_SHA256 computeHash((const uint8_t*)key.data(), key.size());\n+    std::vector<uint8_t> computedHash(CHMAC_SHA256::OUTPUT_SIZE, 0);\n+    computeHash.Write(begin_ptr(cookie), cookie.size());\n+    computeHash.Write(begin_ptr(clientNonce), clientNonce.size());\n+    computeHash.Write(begin_ptr(serverNonce), serverNonce.size());\n+    computeHash.Finalize(begin_ptr(computedHash));\n+    return computedHash;\n+}\n+\n+void TorController::authchallenge_cb(TorControlConnection& conn, const TorControlReply& reply)\n+{\n+    if (reply.code == 250) {\n+        LogPrint(\"tor\", \"tor: SAFECOOKIE authentication challenge succesful\\n\");\n+        std::pair<std::string,std::string> l = SplitTorReplyLine(reply.lines[0]);\n+        if (l.first == \"AUTHCHALLENGE\") {\n+            std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);\n+            std::vector<uint8_t> serverHash = ParseHex(m[\"SERVERHASH\"]);\n+            std::vector<uint8_t> serverNonce = ParseHex(m[\"SERVERNONCE\"]);\n+            LogPrint(\"tor\", \"tor: AUTHCHALLENGE ServerHash %s ServerNonce %s\\n\", HexStr(serverHash), HexStr(serverNonce));\n+            if (serverNonce.size() != 32) {\n+                LogPrintf(\"tor: ServerNonce is not 32 bytes, as required by spec\\n\");\n+                return;\n+            }\n+\n+            std::vector<uint8_t> computedServerHash = ComputeResponse(TOR_SAFE_SERVERKEY, cookie, clientNonce, serverNonce);\n+            if (computedServerHash != serverHash) {\n+                LogPrintf(\"tor: ServerHash %s does not match expected ServerHash %s\\n\", HexStr(serverHash), HexStr(computedServerHash));\n+                return;\n+            }\n+\n+            std::vector<uint8_t> computedClientHash = ComputeResponse(TOR_SAFE_CLIENTKEY, cookie, clientNonce, serverNonce);\n+            conn.Command(\"AUTHENTICATE \" + HexStr(computedClientHash), boost::bind(&TorController::auth_cb, this, _1, _2));\n+        } else {\n+            LogPrintf(\"tor: Invalid reply to AUTHCHALLENGE\\n\");\n+        }\n+    } else {\n+        LogPrintf(\"tor: SAFECOOKIE authentication challenge failed\\n\");\n+    }\n+}\n+\n+void TorController::protocolinfo_cb(TorControlConnection& conn, const TorControlReply& reply)\n+{\n+    if (reply.code == 250) {\n+        std::set<std::string> methods;\n+        std::string cookiefile;\n+        /*\n+         * 250-AUTH METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\"/home/x/.tor/control_auth_cookie\"\n+         * 250-AUTH METHODS=NULL\n+         * 250-AUTH METHODS=HASHEDPASSWORD\n+         */\n+        BOOST_FOREACH(const std::string &s, reply.lines) {\n+            std::pair<std::string,std::string> l = SplitTorReplyLine(s);\n+            if (l.first == \"AUTH\") {\n+                std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);\n+                std::map<std::string,std::string>::iterator i;\n+                if ((i = m.find(\"METHODS\")) != m.end())\n+                    boost::split(methods, i->second, boost::is_any_of(\",\"));\n+                if ((i = m.find(\"COOKIEFILE\")) != m.end())\n+                    cookiefile = i->second;\n+            } else if (l.first == \"VERSION\") {\n+                std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);\n+                std::map<std::string,std::string>::iterator i;\n+                if ((i = m.find(\"Tor\")) != m.end()) {\n+                    LogPrint(\"tor\", \"tor: Connected to Tor version %s\\n\", i->second);\n+                }\n+            }\n+        }\n+        BOOST_FOREACH(const std::string &s, methods) {\n+            LogPrint(\"tor\", \"tor: Supported authentication method: %s\\n\", s);\n+        }\n+        // Prefer NULL, otherwise SAFECOOKIE. If a password is provided, use HASHEDPASSWORD\n+        /* Authentication:\n+         *   cookie:   hex-encoded ~/.tor/control_auth_cookie\n+         *   password: \"password\"\n+         */\n+        std::string torpassword = GetArg(\"-torpassword\", \"\");\n+        if (methods.count(\"NULL\")) {\n+            LogPrint(\"tor\", \"tor: Using NULL authentication\\n\");\n+            conn.Command(\"AUTHENTICATE\", boost::bind(&TorController::auth_cb, this, _1, _2));\n+        } else if (methods.count(\"SAFECOOKIE\")) {\n+            // Cookie: hexdump -e '32/1 \"%02x\"\"\\n\"'  ~/.tor/control_auth_cookie\n+            LogPrint(\"tor\", \"tor: Using SAFECOOKIE authentication, reading cookie authentication from %s\\n\", cookiefile);\n+            std::pair<bool,std::string> status_cookie = ReadBinaryFile(cookiefile, TOR_COOKIE_SIZE);\n+            if (status_cookie.first && status_cookie.second.size() == TOR_COOKIE_SIZE) {\n+                // conn.Command(\"AUTHENTICATE \" + HexStr(status_cookie.second), boost::bind(&TorController::auth_cb, this, _1, _2));\n+                cookie = std::vector<uint8_t>(status_cookie.second.begin(), status_cookie.second.end());\n+                clientNonce = std::vector<uint8_t>(TOR_NONCE_SIZE, 0);\n+                GetRandBytes(&clientNonce[0], TOR_NONCE_SIZE);\n+                conn.Command(\"AUTHCHALLENGE SAFECOOKIE \" + HexStr(clientNonce), boost::bind(&TorController::authchallenge_cb, this, _1, _2));\n+            } else {\n+                if (status_cookie.first) {\n+                    LogPrintf(\"tor: Authentication cookie %s is not exactly %i bytes, as is required by the spec\\n\", cookiefile, TOR_COOKIE_SIZE);\n+                } else {\n+                    LogPrintf(\"tor: Authentication cookie %s could not be opened (check permissions)\\n\", cookiefile);\n+                }\n+            }\n+        } else if (methods.count(\"HASHEDPASSWORD\")) {\n+            if (!torpassword.empty()) {\n+                LogPrint(\"tor\", \"tor: Using HASHEDPASSWORD authentication\\n\");\n+                boost::replace_all(torpassword, \"\\\"\", \"\\\\\\\"\");\n+                conn.Command(\"AUTHENTICATE \\\"\" + torpassword + \"\\\"\", boost::bind(&TorController::auth_cb, this, _1, _2));\n+            } else {\n+                LogPrintf(\"tor: Password authentication required, but no password provided with -torpassword\\n\");\n+            }\n+        } else {\n+            LogPrintf(\"tor: No supported authentication method\\n\");\n+        }\n+    } else {\n+        LogPrintf(\"tor: Requesting protocol info failed\\n\");\n+    }\n+}\n+\n+void TorController::connected_cb(TorControlConnection& conn)\n+{\n+    reconnect_timeout = RECONNECT_TIMEOUT_START;\n+    // First send a PROTOCOLINFO command to figure out what authentication is expected\n+    if (!conn.Command(\"PROTOCOLINFO 1\", boost::bind(&TorController::protocolinfo_cb, this, _1, _2)))\n+        LogPrintf(\"tor: Error sending initial protocolinfo command\\n\");\n+}\n+\n+void TorController::disconnected_cb(TorControlConnection& conn)\n+{\n+    // Stop advertizing service when disconnected\n+    if (service.IsValid())\n+        RemoveLocal(service);\n+    service = CService();\n+    if (!reconnect)\n+        return;\n+    LogPrintf(\"tor: Disconnected from Tor control port %s, trying to reconnect\\n\", target);\n+    // Single-shot timer for reconnect. Use exponential backoff.\n+    struct timeval time = MillisToTimeval(int64_t(reconnect_timeout * 1000.0));\n+    reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n+    event_add(reconnect_ev, &time);\n+    reconnect_timeout *= RECONNECT_TIMEOUT_EXP;\n+}\n+\n+void TorController::Reconnect()\n+{\n+    /* Try to reconnect and reestablish if we get booted - for example, Tor\n+     * may be restarting.\n+     */\n+    if (!conn.Connect(target, boost::bind(&TorController::connected_cb, this, _1),\n+         boost::bind(&TorController::disconnected_cb, this, _1) )) {\n+        LogPrintf(\"tor: Re-initiating connection to Tor control port %s failed\\n\", target);\n+    }\n+}\n+\n+std::string TorController::GetPrivateKeyFile()\n+{\n+    return (GetDataDir() / \"onion_private_key\").string();\n+}\n+\n+void TorController::reconnect_cb(evutil_socket_t fd, short what, void *arg)\n+{\n+    TorController *self = (TorController*)arg;\n+    self->Reconnect();\n+}\n+\n+/****** Thread ********/\n+struct event_base *base;\n+boost::thread torControlThread;\n+\n+static void TorControlThread()\n+{\n+    TorController ctrl(base, GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL));\n+\n+    event_base_dispatch(base);\n+}\n+\n+void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler)\n+{\n+    assert(!base);\n+#ifdef WIN32\n+    evthread_use_windows_threads();\n+#else\n+    evthread_use_pthreads();\n+#endif\n+    base = event_base_new();\n+    if (!base) {\n+        LogPrintf(\"tor: Unable to create event_base\\n\");\n+        return;\n+    }\n+\n+    torControlThread = boost::thread(boost::bind(&TraceThread<void (*)()>, \"torcontrol\", &TorControlThread));\n+}\n+\n+void InterruptTorControl()\n+{\n+    if (base) {\n+        LogPrintf(\"tor: Thread interrupt\\n\");\n+        event_base_loopbreak(base);\n+    }\n+}\n+\n+void StopTorControl()\n+{\n+    if (base) {\n+        torControlThread.join();\n+        event_base_free(base);\n+        base = 0;\n+    }\n+}\n+"
      },
      {
        "sha": "72dc82c5b17a97102d6f881e1d209ab26a26dc7e",
        "filename": "src/torcontrol.h",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/torcontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd629d77edbeac6ce71a34f6d557c4e00513be44/src/torcontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.h?ref=bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "patch": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+/**\n+ * Functionality for communicating with Tor.\n+ */\n+#ifndef BITCOIN_TORCONTROL_H\n+#define BITCOIN_TORCONTROL_H\n+\n+#include \"scheduler.h\"\n+\n+extern const std::string DEFAULT_TOR_CONTROL;\n+static const bool DEFAULT_LISTEN_ONION = true;\n+\n+void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler);\n+void InterruptTorControl();\n+void StopTorControl();\n+\n+#endif /* BITCOIN_TORCONTROL_H */"
      }
    ]
  },
  {
    "sha": "38ed190eefccf8865d984e08f4dfe4063ed8a55b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGVkMTkwZWVmY2NmODg2NWQ5ODRlMDhmNGRmZTQwNjNlZDhhNTVi",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jeff@bloq.com",
        "date": "2015-11-12T20:38:59Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jeff@bloq.com",
        "date": "2015-11-12T20:38:59Z"
      },
      "message": "Merge #6771 from branch 'lowerLimits' of git://github.com/morcos/bitcoin",
      "tree": {
        "sha": "d22bd85c9b62f52271c15f958b0be39b3a27bc09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d22bd85c9b62f52271c15f958b0be39b3a27bc09"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38ed190eefccf8865d984e08f4dfe4063ed8a55b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIVAwUAVkT49iWzCDIBeCsvAQJ+7BAArP7hj8WP2r047WAaKjtazQQqBxxtBKJZ\nOcXeAFHI2UsPqX+87Jimw2KY0jtU4zfu1ZN3qPpBO8B9P21ooBCufiuoA/FJoUoJ\nipo35V1vQNxSIZIaSq9tcPeT01E1lpqJzNwuubypN86vdbV5Ppl82NaxSf5M0FzC\nu3vU/MqhfJQDP7kWnB3yVqIvNxeXgiih3dR3go4KTbUBRmMRg7/Fj5vF+n2un0T7\ncQsIBv8eb//pp1dfmiAc/JRAfkiH+jJqepdwpIK3iYF0c95KF+ltxe7FKYLAWTfk\nWYlMghYVHyxxqLjNcwA3ERvpWB9Fgktj55tLR4IFNR23V6P2NeyVJStWcwG8IUT/\n1gfYYLgVPcwVBXMZ9OgEJj/5EvpnZ/2hFkKVGLsRD8gz98NlQX/2VFG+PP8pgY1x\n7WWIlNUpuLml1ISAtWzaCeq3pDC2OWEUmr2luFvgdhHjJUQLdGSMcge9TfxrtObd\n0V6q1mQT7Ex6kVk/bAEf3wakBue5b/xFfSGIcty2U3EpAqkojuvozpLc2N5bgbjv\n2uJxoKp/SPsQ+aiKR5uHYtH7YlT/VZCmOEGCfwQyeXgqLGhA2PoKpbhzTLbM8eNU\ngKXRwa5eOgcGw8F1Clz6F+oTGiEGi6IMwQrav3kTfhOxtycy2xGTUeR+qFmh0YIt\nW6TJJz2cxfc=\n=vpi8\n-----END PGP SIGNATURE-----",
        "payload": "tree d22bd85c9b62f52271c15f958b0be39b3a27bc09\nparent bd629d77edbeac6ce71a34f6d557c4e00513be44\nparent 971a4e6b86e5bd3ac33441d8c031d63d88c59a8b\nauthor Jeff Garzik <jeff@bloq.com> 1447360739 -0500\ncommitter Jeff Garzik <jeff@bloq.com> 1447360739 -0500\n\nMerge #6771 from branch 'lowerLimits' of git://github.com/morcos/bitcoin\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38ed190eefccf8865d984e08f4dfe4063ed8a55b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38ed190eefccf8865d984e08f4dfe4063ed8a55b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38ed190eefccf8865d984e08f4dfe4063ed8a55b/comments",
    "author": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd629d77edbeac6ce71a34f6d557c4e00513be44",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd629d77edbeac6ce71a34f6d557c4e00513be44"
      },
      {
        "sha": "971a4e6b86e5bd3ac33441d8c031d63d88c59a8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/971a4e6b86e5bd3ac33441d8c031d63d88c59a8b"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 15,
      "deletions": 12
    },
    "files": [
      {
        "sha": "746c26ff5e83e38c798fb304723fd9408d931024",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38ed190eefccf8865d984e08f4dfe4063ed8a55b/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38ed190eefccf8865d984e08f4dfe4063ed8a55b/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=38ed190eefccf8865d984e08f4dfe4063ed8a55b",
        "patch": "@@ -11,6 +11,9 @@\n def satoshi_round(amount):\n     return  Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n \n+MAX_ANCESTORS = 25\n+MAX_DESCENDANTS = 25\n+\n class MempoolPackagesTest(BitcoinTestFramework):\n \n     def setup_network(self):\n@@ -45,17 +48,17 @@ def run_test(self):\n         value = utxo[0]['amount']\n \n         fee = Decimal(\"0.0001\")\n-        # 100 transactions off a confirmed tx should be fine\n+        # MAX_ANCESTORS transactions off a confirmed tx should be fine\n         chain = []\n-        for i in xrange(100):\n+        for i in xrange(MAX_ANCESTORS):\n             (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, 0, value, fee, 1)\n             value = sent_value\n             chain.append(txid)\n \n-        # Check mempool has 100 transactions in it, and descendant\n+        # Check mempool has MAX_ANCESTORS transactions in it, and descendant\n         # count and fees should look correct\n         mempool = self.nodes[0].getrawmempool(True)\n-        assert_equal(len(mempool), 100)\n+        assert_equal(len(mempool), MAX_ANCESTORS)\n         descendant_count = 1\n         descendant_fees = 0\n         descendant_size = 0\n@@ -91,18 +94,18 @@ def run_test(self):\n         for i in xrange(10):\n             transaction_package.append({'txid': txid, 'vout': i, 'amount': sent_value})\n \n-        for i in xrange(1000):\n+        for i in xrange(MAX_DESCENDANTS):\n             utxo = transaction_package.pop(0)\n             try:\n                 (txid, sent_value) = self.chain_transaction(self.nodes[0], utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n                 for j in xrange(10):\n                     transaction_package.append({'txid': txid, 'vout': j, 'amount': sent_value})\n-                if i == 998:\n+                if i == MAX_DESCENDANTS - 2:\n                     mempool = self.nodes[0].getrawmempool(True)\n-                    assert_equal(mempool[parent_transaction]['descendantcount'], 1000)\n+                    assert_equal(mempool[parent_transaction]['descendantcount'], MAX_DESCENDANTS)\n             except JSONRPCException as e:\n                 print e.error['message']\n-                assert_equal(i, 999)\n+                assert_equal(i, MAX_DESCENDANTS - 1)\n                 print \"tx that would create too large descendant package successfully rejected\"\n \n         # TODO: check that node1's mempool is as expected"
      },
      {
        "sha": "5fb5534860e515488536fce752de0724f7fb7522",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38ed190eefccf8865d984e08f4dfe4063ed8a55b/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38ed190eefccf8865d984e08f4dfe4063ed8a55b/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=38ed190eefccf8865d984e08f4dfe4063ed8a55b",
        "patch": "@@ -46,13 +46,13 @@ static const unsigned int DEFAULT_MIN_RELAY_TX_FEE = 1000;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n /** Default for -limitancestorcount, max number of in-mempool ancestors */\n-static const unsigned int DEFAULT_ANCESTOR_LIMIT = 100;\n+static const unsigned int DEFAULT_ANCESTOR_LIMIT = 25;\n /** Default for -limitancestorsize, maximum kilobytes of tx + all in-mempool ancestors */\n-static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n+static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 101;\n /** Default for -limitdescendantcount, max number of in-mempool descendants */\n-static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n+static const unsigned int DEFAULT_DESCENDANT_LIMIT = 25;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n-static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 101;\n /** Default for -maxmempool, maximum megabytes of mempool memory usage */\n static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n /** Default for -mempoolexpiry, expiration time for mempool transactions in hours */"
      }
    ]
  },
  {
    "sha": "9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTQ3NWQ1YTRkMTY5ZTc1OGNmYjBjOWYwNjMzZWQ0NzZlMTc2YjBl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-12T23:12:43Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-12T23:12:43Z"
      },
      "message": "Update libsecp256k1",
      "tree": {
        "sha": "356207f0a2f3f2fff39f71a342cb224c8062aa05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/356207f0a2f3f2fff39f71a342cb224c8062aa05"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38ed190eefccf8865d984e08f4dfe4063ed8a55b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38ed190eefccf8865d984e08f4dfe4063ed8a55b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38ed190eefccf8865d984e08f4dfe4063ed8a55b"
      },
      {
        "sha": "1d84107924ab36e38092cae43f6ad50dd5ead9ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d84107924ab36e38092cae43f6ad50dd5ead9ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d84107924ab36e38092cae43f6ad50dd5ead9ed"
      }
    ],
    "stats": {
      "total": 9644,
      "additions": 7728,
      "deletions": 1916
    },
    "files": [
      {
        "sha": "e0b7b7a48a31f409d2531198d96574f35c88c24d",
        "filename": "src/secp256k1/.gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/.gitignore?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -1,9 +1,12 @@\n bench_inv\n+bench_ecdh\n bench_sign\n bench_verify\n+bench_schnorr_verify\n bench_recover\n bench_internal\n tests\n+gen_context\n *.exe\n *.so\n *.a\n@@ -28,6 +31,7 @@ build-aux/\n *~\n src/libsecp256k1-config.h\n src/libsecp256k1-config.h.in\n+src/ecmult_static_context.h\n m4/libtool.m4\n m4/ltoptions.m4\n m4/ltsugar.m4"
      },
      {
        "sha": "4e1e73c39f57b075519dce1b7d894efa20cd11d2",
        "filename": "src/secp256k1/.travis.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/.travis.yml?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -8,20 +8,24 @@ compiler:\n   - gcc\n env:\n   global:\n-    - FIELD=auto  BIGNUM=auto  SCALAR=auto  ENDOMORPHISM=no  ASM=no  BUILD=check  EXTRAFLAGS= HOST=\n+    - FIELD=auto  BIGNUM=auto  SCALAR=auto  ENDOMORPHISM=no  STATICPRECOMPUTATION=yes  ASM=no  BUILD=check  EXTRAFLAGS=  HOST=  ECDH=no  schnorr=no  RECOVERY=no\n   matrix:\n-    - SCALAR=32bit\n+    - SCALAR=32bit    RECOVERY=yes\n+    - SCALAR=32bit    FIELD=32bit       ECDH=yes\n     - SCALAR=64bit\n-    - FIELD=64bit\n+    - FIELD=64bit     RECOVERY=yes\n     - FIELD=64bit     ENDOMORPHISM=yes\n+    - FIELD=64bit     ENDOMORPHISM=yes  ECDH=yes\n     - FIELD=64bit                       ASM=x86_64\n     - FIELD=64bit     ENDOMORPHISM=yes  ASM=x86_64\n-    - FIELD=32bit\n+    - FIELD=32bit     SCHNORR=yes\n     - FIELD=32bit     ENDOMORPHISM=yes\n     - BIGNUM=no\n-    - BIGNUM=no       ENDOMORPHISM=yes\n+    - BIGNUM=no       ENDOMORPHISM=yes SCHNORR=yes  RECOVERY=yes\n+    - BIGNUM=no       STATICPRECOMPUTATION=no\n     - BUILD=distcheck\n-    - EXTRAFLAGS=CFLAGS=-DDETERMINISTIC\n+    - EXTRAFLAGS=CPPFLAGS=-DDETERMINISTIC\n+    - EXTRAFLAGS=CFLAGS=-O0\n matrix:\n   fast_finish: true\n   include:\n@@ -55,5 +59,5 @@ before_script: ./autogen.sh\n script:\n  - if [ -n \"$HOST\" ]; then export USE_HOST=\"--host=$HOST\"; fi\n  - if [ \"x$HOST\" = \"xi686-linux-gnu\" ]; then export CC=\"$CC -m32\"; fi\n- - ./configure --enable-endomorphism=$ENDOMORPHISM --with-field=$FIELD --with-bignum=$BIGNUM --with-scalar=$SCALAR $EXTRAFLAGS $USE_HOST && make -j2 $BUILD\n+ - ./configure --enable-endomorphism=$ENDOMORPHISM --with-field=$FIELD --with-bignum=$BIGNUM --with-scalar=$SCALAR --enable-ecmult-static-precomputation=$STATICPRECOMPUTATION --enable-module-ecdh=$ECDH --enable-module-schnorr=$SCHNORR --enable-module-recovery=$RECOVERY $EXTRAFLAGS $USE_HOST && make -j2 $BUILD\n os: linux"
      },
      {
        "sha": "f4121f1705fad57aa72100abf2e3bc1d9de2edcb",
        "filename": "src/secp256k1/Makefile.am",
        "status": "modified",
        "additions": 44,
        "deletions": 10,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/Makefile.am?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -19,6 +19,8 @@ noinst_HEADERS += src/eckey.h\n noinst_HEADERS += src/eckey_impl.h\n noinst_HEADERS += src/ecmult.h\n noinst_HEADERS += src/ecmult_impl.h\n+noinst_HEADERS += src/ecmult_const.h\n+noinst_HEADERS += src/ecmult_const_impl.h\n noinst_HEADERS += src/ecmult_gen.h\n noinst_HEADERS += src/ecmult_gen_impl.h\n noinst_HEADERS += src/num.h\n@@ -38,40 +40,72 @@ noinst_HEADERS += src/hash_impl.h\n noinst_HEADERS += src/field.h\n noinst_HEADERS += src/field_impl.h\n noinst_HEADERS += src/bench.h\n+noinst_HEADERS += contrib/lax_der_parsing.h\n+noinst_HEADERS += contrib/lax_der_parsing.c\n+noinst_HEADERS += contrib/lax_der_privatekey_parsing.h\n+noinst_HEADERS += contrib/lax_der_privatekey_parsing.c\n \n pkgconfigdir = $(libdir)/pkgconfig\n pkgconfig_DATA = libsecp256k1.pc\n \n libsecp256k1_la_SOURCES = src/secp256k1.c\n-libsecp256k1_la_CPPFLAGS = -I$(top_srcdir)/include $(SECP_INCLUDES)\n+libsecp256k1_la_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src $(SECP_INCLUDES)\n libsecp256k1_la_LIBADD = $(SECP_LIBS)\n \n \n noinst_PROGRAMS =\n if USE_BENCHMARK\n-noinst_PROGRAMS += bench_verify bench_recover bench_sign bench_internal\n+noinst_PROGRAMS += bench_verify bench_sign bench_internal\n bench_verify_SOURCES = src/bench_verify.c\n bench_verify_LDADD = libsecp256k1.la $(SECP_LIBS)\n-bench_verify_LDFLAGS = -static\n-bench_recover_SOURCES = src/bench_recover.c\n-bench_recover_LDADD = libsecp256k1.la $(SECP_LIBS)\n-bench_recover_LDFLAGS = -static\n bench_sign_SOURCES = src/bench_sign.c\n bench_sign_LDADD = libsecp256k1.la $(SECP_LIBS)\n-bench_sign_LDFLAGS = -static\n bench_internal_SOURCES = src/bench_internal.c\n bench_internal_LDADD = $(SECP_LIBS)\n-bench_internal_LDFLAGS = -static\n bench_internal_CPPFLAGS = $(SECP_INCLUDES)\n endif\n \n if USE_TESTS\n noinst_PROGRAMS += tests\n tests_SOURCES = src/tests.c\n-tests_CPPFLAGS = -DVERIFY $(SECP_INCLUDES) $(SECP_TEST_INCLUDES)\n+tests_CPPFLAGS = -DVERIFY -I$(top_srcdir)/src -I$(top_srcdir)/include $(SECP_INCLUDES) $(SECP_TEST_INCLUDES)\n tests_LDADD = $(SECP_LIBS) $(SECP_TEST_LIBS)\n tests_LDFLAGS = -static\n TESTS = tests\n endif\n \n-EXTRA_DIST = autogen.sh\n+if USE_ECMULT_STATIC_PRECOMPUTATION\n+CPPFLAGS_FOR_BUILD +=-I$(top_srcdir)/\n+CFLAGS_FOR_BUILD += -Wall -Wextra -Wno-unused-function\n+\n+gen_context_OBJECTS = gen_context.o\n+gen_context_BIN = gen_context$(BUILD_EXEEXT)\n+gen_%.o: src/gen_%.c\n+\t$(CC_FOR_BUILD) $(CPPFLAGS_FOR_BUILD) $(CFLAGS_FOR_BUILD) -c $< -o $@\n+\n+$(gen_context_BIN): $(gen_context_OBJECTS)\n+\t$(CC_FOR_BUILD) $^ -o $@\n+\n+$(libsecp256k1_la_OBJECTS): src/ecmult_static_context.h\n+$(tests_OBJECTS): src/ecmult_static_context.h\n+$(bench_internal_OBJECTS): src/ecmult_static_context.h\n+\n+src/ecmult_static_context.h: $(gen_context_BIN)\n+\t./$(gen_context_BIN)\n+\n+CLEANFILES = $(gen_context_BIN) src/ecmult_static_context.h\n+endif\n+\n+EXTRA_DIST = autogen.sh src/gen_context.c src/basic-config.h\n+\n+if ENABLE_MODULE_ECDH\n+include src/modules/ecdh/Makefile.am.include\n+endif\n+\n+if ENABLE_MODULE_SCHNORR\n+include src/modules/schnorr/Makefile.am.include\n+endif\n+\n+if ENABLE_MODULE_RECOVERY\n+include src/modules/recovery/Makefile.am.include\n+endif"
      },
      {
        "sha": "77fd346a79a6faea6e1c40e34465bb6a5b7f5895",
        "filename": "src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4",
        "status": "added",
        "additions": 125,
        "deletions": 0,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,125 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_prog_cc_for_build.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PROG_CC_FOR_BUILD\n+#\n+# DESCRIPTION\n+#\n+#   This macro searches for a C compiler that generates native executables,\n+#   that is a C compiler that surely is not a cross-compiler. This can be\n+#   useful if you have to generate source code at compile-time like for\n+#   example GCC does.\n+#\n+#   The macro sets the CC_FOR_BUILD and CPP_FOR_BUILD macros to anything\n+#   needed to compile or link (CC_FOR_BUILD) and preprocess (CPP_FOR_BUILD).\n+#   The value of these variables can be overridden by the user by specifying\n+#   a compiler with an environment variable (like you do for standard CC).\n+#\n+#   It also sets BUILD_EXEEXT and BUILD_OBJEXT to the executable and object\n+#   file extensions for the build platform, and GCC_FOR_BUILD to `yes' if\n+#   the compiler we found is GCC. All these variables but GCC_FOR_BUILD are\n+#   substituted in the Makefile.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Paolo Bonzini <bonzini@gnu.org>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 8\n+\n+AU_ALIAS([AC_PROG_CC_FOR_BUILD], [AX_PROG_CC_FOR_BUILD])\n+AC_DEFUN([AX_PROG_CC_FOR_BUILD], [dnl\n+AC_REQUIRE([AC_PROG_CC])dnl\n+AC_REQUIRE([AC_PROG_CPP])dnl\n+AC_REQUIRE([AC_EXEEXT])dnl\n+AC_REQUIRE([AC_CANONICAL_HOST])dnl\n+\n+dnl Use the standard macros, but make them use other variable names\n+dnl\n+pushdef([ac_cv_prog_CPP], ac_cv_build_prog_CPP)dnl\n+pushdef([ac_cv_prog_gcc], ac_cv_build_prog_gcc)dnl\n+pushdef([ac_cv_prog_cc_works], ac_cv_build_prog_cc_works)dnl\n+pushdef([ac_cv_prog_cc_cross], ac_cv_build_prog_cc_cross)dnl\n+pushdef([ac_cv_prog_cc_g], ac_cv_build_prog_cc_g)dnl\n+pushdef([ac_cv_exeext], ac_cv_build_exeext)dnl\n+pushdef([ac_cv_objext], ac_cv_build_objext)dnl\n+pushdef([ac_exeext], ac_build_exeext)dnl\n+pushdef([ac_objext], ac_build_objext)dnl\n+pushdef([CC], CC_FOR_BUILD)dnl\n+pushdef([CPP], CPP_FOR_BUILD)dnl\n+pushdef([CFLAGS], CFLAGS_FOR_BUILD)dnl\n+pushdef([CPPFLAGS], CPPFLAGS_FOR_BUILD)dnl\n+pushdef([LDFLAGS], LDFLAGS_FOR_BUILD)dnl\n+pushdef([host], build)dnl\n+pushdef([host_alias], build_alias)dnl\n+pushdef([host_cpu], build_cpu)dnl\n+pushdef([host_vendor], build_vendor)dnl\n+pushdef([host_os], build_os)dnl\n+pushdef([ac_cv_host], ac_cv_build)dnl\n+pushdef([ac_cv_host_alias], ac_cv_build_alias)dnl\n+pushdef([ac_cv_host_cpu], ac_cv_build_cpu)dnl\n+pushdef([ac_cv_host_vendor], ac_cv_build_vendor)dnl\n+pushdef([ac_cv_host_os], ac_cv_build_os)dnl\n+pushdef([ac_cpp], ac_build_cpp)dnl\n+pushdef([ac_compile], ac_build_compile)dnl\n+pushdef([ac_link], ac_build_link)dnl\n+\n+save_cross_compiling=$cross_compiling\n+save_ac_tool_prefix=$ac_tool_prefix\n+cross_compiling=no\n+ac_tool_prefix=\n+\n+AC_PROG_CC\n+AC_PROG_CPP\n+AC_EXEEXT\n+\n+ac_tool_prefix=$save_ac_tool_prefix\n+cross_compiling=$save_cross_compiling\n+\n+dnl Restore the old definitions\n+dnl\n+popdef([ac_link])dnl\n+popdef([ac_compile])dnl\n+popdef([ac_cpp])dnl\n+popdef([ac_cv_host_os])dnl\n+popdef([ac_cv_host_vendor])dnl\n+popdef([ac_cv_host_cpu])dnl\n+popdef([ac_cv_host_alias])dnl\n+popdef([ac_cv_host])dnl\n+popdef([host_os])dnl\n+popdef([host_vendor])dnl\n+popdef([host_cpu])dnl\n+popdef([host_alias])dnl\n+popdef([host])dnl\n+popdef([LDFLAGS])dnl\n+popdef([CPPFLAGS])dnl\n+popdef([CFLAGS])dnl\n+popdef([CPP])dnl\n+popdef([CC])dnl\n+popdef([ac_objext])dnl\n+popdef([ac_exeext])dnl\n+popdef([ac_cv_objext])dnl\n+popdef([ac_cv_exeext])dnl\n+popdef([ac_cv_prog_cc_g])dnl\n+popdef([ac_cv_prog_cc_cross])dnl\n+popdef([ac_cv_prog_cc_works])dnl\n+popdef([ac_cv_prog_gcc])dnl\n+popdef([ac_cv_prog_CPP])dnl\n+\n+dnl Finally, set Makefile variables\n+dnl\n+BUILD_EXEEXT=$ac_build_exeext\n+BUILD_OBJEXT=$ac_build_objext\n+AC_SUBST(BUILD_EXEEXT)dnl\n+AC_SUBST(BUILD_OBJEXT)dnl\n+AC_SUBST([CFLAGS_FOR_BUILD])dnl\n+AC_SUBST([CPPFLAGS_FOR_BUILD])dnl\n+AC_SUBST([LDFLAGS_FOR_BUILD])dnl\n+])"
      },
      {
        "sha": "d41bbb648708ba06cd0285d96b66ca532348e1e8",
        "filename": "src/secp256k1/build-aux/m4/bitcoin_secp.m4",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/build-aux/m4/bitcoin_secp.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/build-aux/m4/bitcoin_secp.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/build-aux/m4/bitcoin_secp.m4?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -16,8 +16,7 @@ AC_MSG_RESULT([$has_64bit_asm])\n \n dnl\n AC_DEFUN([SECP_OPENSSL_CHECK],[\n-if test x\"$use_pkgconfig\" = x\"yes\"; then\n-    : #NOP\n+  has_libcrypto=no\n   m4_ifdef([PKG_CHECK_MODULES],[\n     PKG_CHECK_MODULES([CRYPTO], [libcrypto], [has_libcrypto=yes],[has_libcrypto=no])\n     if test x\"$has_libcrypto\" = x\"yes\"; then\n@@ -27,11 +26,16 @@ if test x\"$use_pkgconfig\" = x\"yes\"; then\n       LIBS=\"$TEMP_LIBS\"\n     fi\n   ])\n-else\n-  AC_CHECK_HEADER(openssl/crypto.h,[AC_CHECK_LIB(crypto, main,[has_libcrypto=yes; CRYPTO_LIBS=-lcrypto; AC_DEFINE(HAVE_LIBCRYPTO,1,[Define this symbol if libcrypto is installed])]\n-)])\n-  LIBS=\n-fi\n+  if test x$has_libcrypto = xno; then\n+    AC_CHECK_HEADER(openssl/crypto.h,[\n+      AC_CHECK_LIB(crypto, main,[\n+        has_libcrypto=yes\n+        CRYPTO_LIBS=-lcrypto\n+        AC_DEFINE(HAVE_LIBCRYPTO,1,[Define this symbol if libcrypto is installed])\n+      ])\n+    ])\n+    LIBS=\n+  fi\n if test x\"$has_libcrypto\" = x\"yes\" && test x\"$has_openssl_ec\" = x; then\n   AC_MSG_CHECKING(for EC functions in libcrypto)\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([["
      },
      {
        "sha": "786d8dcfb99ece01e0e059429aa3591736054a24",
        "filename": "src/secp256k1/configure.ac",
        "status": "modified",
        "additions": 55,
        "deletions": 9,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/configure.ac?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -17,25 +17,19 @@ PKG_PROG_PKG_CONFIG\n AC_PATH_TOOL(AR, ar)\n AC_PATH_TOOL(RANLIB, ranlib)\n AC_PATH_TOOL(STRIP, strip)\n+AX_PROG_CC_FOR_BUILD\n \n if test \"x$CFLAGS\" = \"x\"; then\n   CFLAGS=\"-O3 -g\"\n fi\n \n+AM_PROG_CC_C_O\n+\n AC_PROG_CC_C89\n if test x\"$ac_cv_prog_cc_c89\" = x\"no\"; then\n   AC_MSG_ERROR([c89 compiler support required])\n fi\n \n-case $host in\n-  *mingw*)\n-     use_pkgconfig=no\n-     ;;\n-   *)\n-     use_pkgconfig=yes\n-     ;;\n-esac\n-\n case $host_os in\n   *darwin*)\n      if  test x$cross_compiling != xyes; then\n@@ -80,6 +74,14 @@ AC_COMPILE_IFELSE([AC_LANG_SOURCE([[char foo;]])],\n       CFLAGS=\"$saved_CFLAGS\"\n     ])\n \n+saved_CFLAGS=\"$CFLAGS\"\n+CFLAGS=\"$CFLAGS -fvisibility=hidden\"\n+AC_MSG_CHECKING([if ${CC} supports -fvisibility=hidden])\n+AC_COMPILE_IFELSE([AC_LANG_SOURCE([[char foo;]])],\n+    [ AC_MSG_RESULT([yes]) ],\n+    [ AC_MSG_RESULT([no])\n+      CFLAGS=\"$saved_CFLAGS\"\n+    ])\n \n AC_ARG_ENABLE(benchmark,\n     AS_HELP_STRING([--enable-benchmark],[compile benchmark (default is no)]),\n@@ -95,6 +97,26 @@ AC_ARG_ENABLE(endomorphism,\n     AS_HELP_STRING([--enable-endomorphism],[enable endomorphism (default is no)]),\n     [use_endomorphism=$enableval],\n     [use_endomorphism=no])\n+    \n+AC_ARG_ENABLE(ecmult_static_precomputation,\n+    AS_HELP_STRING([--enable-ecmult-static-precomputation],[enable precomputed ecmult table for signing (default is yes)]),\n+    [use_ecmult_static_precomputation=$enableval],\n+    [use_ecmult_static_precomputation=yes])\n+\n+AC_ARG_ENABLE(module_ecdh,\n+    AS_HELP_STRING([--enable-module-ecdh],[enable ECDH shared secret computation (default is no)]),\n+    [enable_module_ecdh=$enableval],\n+    [enable_module_ecdh=no])\n+\n+AC_ARG_ENABLE(module_schnorr,\n+    AS_HELP_STRING([--enable-module-schnorr],[enable Schnorr signature module (default is no)]),\n+    [enable_module_schnorr=$enableval],\n+    [enable_module_schnorr=no])\n+\n+AC_ARG_ENABLE(module_recovery,\n+    AS_HELP_STRING([--enable-module-recovery],[enable ECDSA pubkey recovery module (default is no)]),\n+    [enable_module_recovery=$enableval],\n+    [enable_module_recovery=no])\n \n AC_ARG_WITH([field], [AS_HELP_STRING([--with-field=64bit|32bit|auto],\n [Specify Field Implementation. Default is auto])],[req_field=$withval], [req_field=auto])\n@@ -305,13 +327,33 @@ if test x\"$use_endomorphism\" = x\"yes\"; then\n   AC_DEFINE(USE_ENDOMORPHISM, 1, [Define this symbol to use endomorphism optimization])\n fi\n \n+if test x\"$use_ecmult_static_precomputation\" = x\"yes\"; then\n+  AC_DEFINE(USE_ECMULT_STATIC_PRECOMPUTATION, 1, [Define this symbol to use a statically generated ecmult table])\n+fi\n+\n+if test x\"$enable_module_ecdh\" = x\"yes\"; then\n+  AC_DEFINE(ENABLE_MODULE_ECDH, 1, [Define this symbol to enable the ECDH module])\n+fi\n+\n+if test x\"$enable_module_schnorr\" = x\"yes\"; then\n+  AC_DEFINE(ENABLE_MODULE_SCHNORR, 1, [Define this symbol to enable the Schnorr signature module])\n+fi\n+\n+if test x\"$enable_module_recovery\" = x\"yes\"; then\n+  AC_DEFINE(ENABLE_MODULE_RECOVERY, 1, [Define this symbol to enable the ECDSA pubkey recovery module])\n+fi\n+\n AC_C_BIGENDIAN()\n \n AC_MSG_NOTICE([Using assembly optimizations: $set_asm])\n AC_MSG_NOTICE([Using field implementation: $set_field])\n AC_MSG_NOTICE([Using bignum implementation: $set_bignum])\n AC_MSG_NOTICE([Using scalar implementation: $set_scalar])\n AC_MSG_NOTICE([Using endomorphism optimizations: $use_endomorphism])\n+AC_MSG_NOTICE([Building ECDH module: $enable_module_ecdh])\n+\n+AC_MSG_NOTICE([Building Schnorr signatures module: $enable_module_schnorr])\n+AC_MSG_NOTICE([Building ECDSA pubkey recovery module: $enable_module_recovery])\n \n AC_CONFIG_HEADERS([src/libsecp256k1-config.h])\n AC_CONFIG_FILES([Makefile libsecp256k1.pc])\n@@ -321,6 +363,10 @@ AC_SUBST(SECP_TEST_LIBS)\n AC_SUBST(SECP_TEST_INCLUDES)\n AM_CONDITIONAL([USE_TESTS], [test x\"$use_tests\" != x\"no\"])\n AM_CONDITIONAL([USE_BENCHMARK], [test x\"$use_benchmark\" = x\"yes\"])\n+AM_CONDITIONAL([USE_ECMULT_STATIC_PRECOMPUTATION], [test x\"$use_ecmult_static_precomputation\" = x\"yes\"])\n+AM_CONDITIONAL([ENABLE_MODULE_ECDH], [test x\"$enable_module_ecdh\" = x\"yes\"])\n+AM_CONDITIONAL([ENABLE_MODULE_SCHNORR], [test x\"$enable_module_schnorr\" = x\"yes\"])\n+AM_CONDITIONAL([ENABLE_MODULE_RECOVERY], [test x\"$enable_module_recovery\" = x\"yes\"])\n \n dnl make sure nothing new is exported so that we don't break the cache\n PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\""
      },
      {
        "sha": "5b141a99481c71f18bffe38e71a763443b14ef4e",
        "filename": "src/secp256k1/contrib/lax_der_parsing.c",
        "status": "added",
        "additions": 150,
        "deletions": 0,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/contrib/lax_der_parsing.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/contrib/lax_der_parsing.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/contrib/lax_der_parsing.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,150 @@\n+/**********************************************************************\n+ * Copyright (c) 2015 Pieter Wuille                                   *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <string.h>\n+#include <secp256k1.h>\n+\n+#include \"lax_der_parsing.h\"\n+\n+int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {\n+    size_t rpos, rlen, spos, slen;\n+    size_t pos = 0;\n+    size_t lenbyte;\n+    unsigned char tmpsig[64] = {0};\n+    int overflow = 0;\n+\n+    /* Hack to initialize sig with a correctly-parsed but invalid signature. */\n+    secp256k1_ecdsa_signature_parse_compact(ctx, sig, tmpsig);\n+\n+    /* Sequence tag byte */\n+    if (pos == inputlen || input[pos] != 0x30) {\n+        return 0;\n+    }\n+    pos++;\n+\n+    /* Sequence length bytes */\n+    if (pos == inputlen) {\n+        return 0;\n+    }\n+    lenbyte = input[pos++];\n+    if (lenbyte & 0x80) {\n+        lenbyte -= 0x80;\n+        if (pos + lenbyte > inputlen) {\n+            return 0;\n+        }\n+        pos += lenbyte;\n+    }\n+\n+    /* Integer tag byte for R */\n+    if (pos == inputlen || input[pos] != 0x02) {\n+        return 0;\n+    }\n+    pos++;\n+\n+    /* Integer length for R */\n+    if (pos == inputlen) {\n+        return 0;\n+    }\n+    lenbyte = input[pos++];\n+    if (lenbyte & 0x80) {\n+        lenbyte -= 0x80;\n+        if (pos + lenbyte > inputlen) {\n+            return 0;\n+        }\n+        while (lenbyte > 0 && input[pos] == 0) {\n+            pos++;\n+            lenbyte--;\n+        }\n+        if (lenbyte >= sizeof(size_t)) {\n+            return 0;\n+        }\n+        rlen = 0;\n+        while (lenbyte > 0) {\n+            rlen = (rlen << 8) + input[pos];\n+            pos++;\n+            lenbyte--;\n+        }\n+    } else {\n+        rlen = lenbyte;\n+    }\n+    if (rlen > inputlen - pos) {\n+        return 0;\n+    }\n+    rpos = pos;\n+    pos += rlen;\n+\n+    /* Integer tag byte for S */\n+    if (pos == inputlen || input[pos] != 0x02) {\n+        return 0;\n+    }\n+    pos++;\n+\n+    /* Integer length for S */\n+    if (pos == inputlen) {\n+        return 0;\n+    }\n+    lenbyte = input[pos++];\n+    if (lenbyte & 0x80) {\n+        lenbyte -= 0x80;\n+        if (pos + lenbyte > inputlen) {\n+            return 0;\n+        }\n+        while (lenbyte > 0 && input[pos] == 0) {\n+            pos++;\n+            lenbyte--;\n+        }\n+        if (lenbyte >= sizeof(size_t)) {\n+            return 0;\n+        }\n+        slen = 0;\n+        while (lenbyte > 0) {\n+            slen = (slen << 8) + input[pos];\n+            pos++;\n+            lenbyte--;\n+        }\n+    } else {\n+        slen = lenbyte;\n+    }\n+    if (slen > inputlen - pos) {\n+        return 0;\n+    }\n+    spos = pos;\n+    pos += slen;\n+\n+    /* Ignore leading zeroes in R */\n+    while (rlen > 0 && input[rpos] == 0) {\n+        rlen--;\n+        rpos++;\n+    }\n+    /* Copy R value */\n+    if (rlen > 32) {\n+        overflow = 1;\n+    } else {\n+        memcpy(tmpsig + 32 - rlen, input + rpos, rlen);\n+    }\n+\n+    /* Ignore leading zeroes in S */\n+    while (slen > 0 && input[spos] == 0) {\n+        slen--;\n+        spos++;\n+    }\n+    /* Copy S value */\n+    if (slen > 32) {\n+        overflow = 1;\n+    } else {\n+        memcpy(tmpsig + 64 - slen, input + spos, slen);\n+    }\n+\n+    if (!overflow) {\n+        overflow = !secp256k1_ecdsa_signature_parse_compact(ctx, sig, tmpsig);\n+    }\n+    if (overflow) {\n+        memset(tmpsig, 0, 64);\n+        secp256k1_ecdsa_signature_parse_compact(ctx, sig, tmpsig);\n+    }\n+    return 1;\n+}\n+"
      },
      {
        "sha": "6d27871a7ccda3dfc1d34e051a345205522a172f",
        "filename": "src/secp256k1/contrib/lax_der_parsing.h",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/contrib/lax_der_parsing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/contrib/lax_der_parsing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/contrib/lax_der_parsing.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,91 @@\n+/**********************************************************************\n+ * Copyright (c) 2015 Pieter Wuille                                   *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+/****\n+ * Please do not link this file directly. It is not part of the libsecp256k1\n+ * project and does not promise any stability in its API, functionality or\n+ * presence. Projects which use this code should instead copy this header\n+ * and its accompanying .c file directly into their codebase.\n+ ****/\n+\n+/* This file defines a function that parses DER with various errors and\n+ * violations. This is not a part of the library itself, because the allowed\n+ * violations are chosen arbitrarily and do not follow or establish any\n+ * standard.\n+ *\n+ * In many places it matters that different implementations do not only accept\n+ * the same set of valid signatures, but also reject the same set of signatures.\n+ * The only means to accomplish that is by strictly obeying a standard, and not\n+ * accepting anything else.\n+ *\n+ * Nonetheless, sometimes there is a need for compatibility with systems that\n+ * use signatures which do not strictly obey DER. The snippet below shows how\n+ * certain violations are easily supported. You may need to adapt it.\n+ *\n+ * Do not use this for new systems. Use well-defined DER or compact signatures\n+ * instead if you have the choice (see secp256k1_ecdsa_signature_parse_der and\n+ * secp256k1_ecdsa_signature_parse_compact).\n+ *\n+ * The supported violations are:\n+ * - All numbers are parsed as nonnegative integers, even though X.609-0207\n+ *   section 8.3.3 specifies that integers are always encoded as two's\n+ *   complement.\n+ * - Integers can have length 0, even though section 8.3.1 says they can't.\n+ * - Integers with overly long padding are accepted, violation section\n+ *   8.3.2.\n+ * - 127-byte long length descriptors are accepted, even though section\n+ *   8.1.3.5.c says that they are not.\n+ * - Trailing garbage data inside or after the signature is ignored.\n+ * - The length descriptor of the sequence is ignored.\n+ *\n+ * Compared to for example OpenSSL, many violations are NOT supported:\n+ * - Using overly long tag descriptors for the sequence or integers inside,\n+ *   violating section 8.1.2.2.\n+ * - Encoding primitive integers as constructed values, violating section\n+ *   8.3.1.\n+ */\n+\n+#ifndef _SECP256K1_CONTRIB_LAX_DER_PARSING_H_\n+#define _SECP256K1_CONTRIB_LAX_DER_PARSING_H_\n+\n+#include <secp256k1.h>\n+\n+# ifdef __cplusplus\n+extern \"C\" {\n+# endif\n+\n+/** Parse a signature in \"lax DER\" format\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise.\n+ *  Args: ctx:      a secp256k1 context object\n+ *  Out:  sig:      a pointer to a signature object\n+ *  In:   input:    a pointer to the signature to be parsed\n+ *        inputlen: the length of the array pointed to be input\n+ *\n+ *  This function will accept any valid DER encoded signature, even if the\n+ *  encoded numbers are out of range. In addition, it will accept signatures\n+ *  which violate the DER spec in various ways. Its purpose is to allow\n+ *  validation of the Bitcoin blockchain, which includes non-DER signatures\n+ *  from before the network rules were updated to enforce DER. Note that\n+ *  the set of supported violations is a strict subset of what OpenSSL will\n+ *  accept.\n+ *\n+ *  After the call, sig will always be initialized. If parsing failed or the\n+ *  encoded numbers are out of range, signature validation with it is\n+ *  guaranteed to fail for every message and public key.\n+ */\n+int ecdsa_signature_parse_der_lax(\n+    const secp256k1_context* ctx,\n+    secp256k1_ecdsa_signature* sig,\n+    const unsigned char *input,\n+    size_t inputlen\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif"
      },
      {
        "sha": "c2e63b4b8d7b379543dcee8ba9b0e4bdc957dc0a",
        "filename": "src/secp256k1/contrib/lax_der_privatekey_parsing.c",
        "status": "added",
        "additions": 113,
        "deletions": 0,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/contrib/lax_der_privatekey_parsing.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/contrib/lax_der_privatekey_parsing.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/contrib/lax_der_privatekey_parsing.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,113 @@\n+/**********************************************************************\n+ * Copyright (c) 2014, 2015 Pieter Wuille                             *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <string.h>\n+#include <secp256k1.h>\n+\n+#include \"lax_der_privatekey_parsing.h\"\n+\n+int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *privkey, size_t privkeylen) {\n+    const unsigned char *end = privkey + privkeylen;\n+    int lenb = 0;\n+    int len = 0;\n+    memset(out32, 0, 32);\n+    /* sequence header */\n+    if (end < privkey+1 || *privkey != 0x30) {\n+        return 0;\n+    }\n+    privkey++;\n+    /* sequence length constructor */\n+    if (end < privkey+1 || !(*privkey & 0x80)) {\n+        return 0;\n+    }\n+    lenb = *privkey & ~0x80; privkey++;\n+    if (lenb < 1 || lenb > 2) {\n+        return 0;\n+    }\n+    if (end < privkey+lenb) {\n+        return 0;\n+    }\n+    /* sequence length */\n+    len = privkey[lenb-1] | (lenb > 1 ? privkey[lenb-2] << 8 : 0);\n+    privkey += lenb;\n+    if (end < privkey+len) {\n+        return 0;\n+    }\n+    /* sequence element 0: version number (=1) */\n+    if (end < privkey+3 || privkey[0] != 0x02 || privkey[1] != 0x01 || privkey[2] != 0x01) {\n+        return 0;\n+    }\n+    privkey += 3;\n+    /* sequence element 1: octet string, up to 32 bytes */\n+    if (end < privkey+2 || privkey[0] != 0x04 || privkey[1] > 0x20 || end < privkey+2+privkey[1]) {\n+        return 0;\n+    }\n+    memcpy(out32 + 32 - privkey[1], privkey + 2, privkey[1]);\n+    if (!secp256k1_ec_seckey_verify(ctx, out32)) {\n+        memset(out32, 0, 32);\n+        return 0;\n+    }\n+    return 1;\n+}\n+\n+int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, int compressed) {\n+    secp256k1_pubkey pubkey;\n+    size_t pubkeylen = 0;\n+    if (!secp256k1_ec_pubkey_create(ctx, &pubkey, key32)) {\n+        *privkeylen = 0;\n+        return 0;\n+    }\n+    if (compressed) {\n+        static const unsigned char begin[] = {\n+            0x30,0x81,0xD3,0x02,0x01,0x01,0x04,0x20\n+        };\n+        static const unsigned char middle[] = {\n+            0xA0,0x81,0x85,0x30,0x81,0x82,0x02,0x01,0x01,0x30,0x2C,0x06,0x07,0x2A,0x86,0x48,\n+            0xCE,0x3D,0x01,0x01,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFE,0xFF,0xFF,0xFC,0x2F,0x30,0x06,0x04,0x01,0x00,0x04,0x01,0x07,0x04,\n+            0x21,0x02,0x79,0xBE,0x66,0x7E,0xF9,0xDC,0xBB,0xAC,0x55,0xA0,0x62,0x95,0xCE,0x87,\n+            0x0B,0x07,0x02,0x9B,0xFC,0xDB,0x2D,0xCE,0x28,0xD9,0x59,0xF2,0x81,0x5B,0x16,0xF8,\n+            0x17,0x98,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFF,0xFF,0xFE,0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,0xBF,0xD2,0x5E,\n+            0x8C,0xD0,0x36,0x41,0x41,0x02,0x01,0x01,0xA1,0x24,0x03,0x22,0x00\n+        };\n+        unsigned char *ptr = privkey;\n+        memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n+        memcpy(ptr, key32, 32); ptr += 32;\n+        memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n+        pubkeylen = 33;\n+        secp256k1_ec_pubkey_serialize(ctx, ptr, &pubkeylen, &pubkey, SECP256K1_EC_COMPRESSED);\n+        ptr += pubkeylen;\n+        *privkeylen = ptr - privkey;\n+    } else {\n+        static const unsigned char begin[] = {\n+            0x30,0x82,0x01,0x13,0x02,0x01,0x01,0x04,0x20\n+        };\n+        static const unsigned char middle[] = {\n+            0xA0,0x81,0xA5,0x30,0x81,0xA2,0x02,0x01,0x01,0x30,0x2C,0x06,0x07,0x2A,0x86,0x48,\n+            0xCE,0x3D,0x01,0x01,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFE,0xFF,0xFF,0xFC,0x2F,0x30,0x06,0x04,0x01,0x00,0x04,0x01,0x07,0x04,\n+            0x41,0x04,0x79,0xBE,0x66,0x7E,0xF9,0xDC,0xBB,0xAC,0x55,0xA0,0x62,0x95,0xCE,0x87,\n+            0x0B,0x07,0x02,0x9B,0xFC,0xDB,0x2D,0xCE,0x28,0xD9,0x59,0xF2,0x81,0x5B,0x16,0xF8,\n+            0x17,0x98,0x48,0x3A,0xDA,0x77,0x26,0xA3,0xC4,0x65,0x5D,0xA4,0xFB,0xFC,0x0E,0x11,\n+            0x08,0xA8,0xFD,0x17,0xB4,0x48,0xA6,0x85,0x54,0x19,0x9C,0x47,0xD0,0x8F,0xFB,0x10,\n+            0xD4,0xB8,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFF,0xFF,0xFE,0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,0xBF,0xD2,0x5E,\n+            0x8C,0xD0,0x36,0x41,0x41,0x02,0x01,0x01,0xA1,0x44,0x03,0x42,0x00\n+        };\n+        unsigned char *ptr = privkey;\n+        memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n+        memcpy(ptr, key32, 32); ptr += 32;\n+        memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n+        pubkeylen = 65;\n+        secp256k1_ec_pubkey_serialize(ctx, ptr, &pubkeylen, &pubkey, SECP256K1_EC_UNCOMPRESSED);\n+        ptr += pubkeylen;\n+        *privkeylen = ptr - privkey;\n+    }\n+    return 1;\n+}"
      },
      {
        "sha": "2fd088f8abf1393a0ca49542f262a81d8d6669ab",
        "filename": "src/secp256k1/contrib/lax_der_privatekey_parsing.h",
        "status": "added",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/contrib/lax_der_privatekey_parsing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/contrib/lax_der_privatekey_parsing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/contrib/lax_der_privatekey_parsing.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,90 @@\n+/**********************************************************************\n+ * Copyright (c) 2014, 2015 Pieter Wuille                             *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+/****\n+ * Please do not link this file directly. It is not part of the libsecp256k1\n+ * project and does not promise any stability in its API, functionality or\n+ * presence. Projects which use this code should instead copy this header\n+ * and its accompanying .c file directly into their codebase.\n+ ****/\n+\n+/* This file contains code snippets that parse DER private keys with\n+ * various errors and violations.  This is not a part of the library\n+ * itself, because the allowed violations are chosen arbitrarily and\n+ * do not follow or establish any standard.\n+ *\n+ * It also contains code to serialize private keys in a compatible\n+ * manner.\n+ *\n+ * These functions are meant for compatibility with applications\n+ * that require BER encoded keys. When working with secp256k1-specific\n+ * code, the simple 32-byte private keys normally used by the\n+ * library are sufficient.\n+ */\n+\n+#ifndef _SECP256K1_CONTRIB_BER_PRIVATEKEY_H_\n+#define _SECP256K1_CONTRIB_BER_PRIVATEKEY_H_\n+\n+#include <secp256k1.h>\n+\n+# ifdef __cplusplus\n+extern \"C\" {\n+# endif\n+\n+/** Export a private key in DER format.\n+ *\n+ *  Returns: 1 if the private key was valid.\n+ *  Args: ctx:        pointer to a context object, initialized for signing (cannot\n+ *                    be NULL)\n+ *  Out: privkey:     pointer to an array for storing the private key in BER.\n+ *                    Should have space for 279 bytes, and cannot be NULL.\n+ *       privkeylen:  Pointer to an int where the length of the private key in\n+ *                    privkey will be stored.\n+ *  In:  seckey:      pointer to a 32-byte secret key to export.\n+ *       compressed:  1 if the key should be exported in\n+ *                    compressed format, 0 otherwise\n+ *\n+ *  This function is purely meant for compatibility with applications that\n+ *  require BER encoded keys. When working with secp256k1-specific code, the\n+ *  simple 32-byte private keys are sufficient.\n+ *\n+ *  Note that this function does not guarantee correct DER output. It is\n+ *  guaranteed to be parsable by secp256k1_ec_privkey_import_der\n+ */\n+SECP256K1_WARN_UNUSED_RESULT int ec_privkey_export_der(\n+    const secp256k1_context* ctx,\n+    unsigned char *privkey,\n+    size_t *privkeylen,\n+    const unsigned char *seckey,\n+    int compressed\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Import a private key in DER format.\n+ * Returns: 1 if a private key was extracted.\n+ * Args: ctx:        pointer to a context object (cannot be NULL).\n+ * Out:  seckey:     pointer to a 32-byte array for storing the private key.\n+ *                   (cannot be NULL).\n+ * In:   privkey:    pointer to a private key in DER format (cannot be NULL).\n+ *       privkeylen: length of the DER private key pointed to be privkey.\n+ *\n+ * This function will accept more than just strict DER, and even allow some BER\n+ * violations. The public key stored inside the DER-encoded private key is not\n+ * verified for correctness, nor are the curve parameters. Use this function\n+ * only if you know in advance it is supposed to contain a secp256k1 private\n+ * key.\n+ */\n+SECP256K1_WARN_UNUSED_RESULT int ec_privkey_import_der(\n+    const secp256k1_context* ctx,\n+    unsigned char *seckey,\n+    const unsigned char *privkey,\n+    size_t privkeylen\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif"
      },
      {
        "sha": "7145dbcc54a79a52e319db1a7785672167694989",
        "filename": "src/secp256k1/include/secp256k1.h",
        "status": "modified",
        "additions": 466,
        "deletions": 230,
        "changes": 696,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/include/secp256k1.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/include/secp256k1.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/include/secp256k1.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -5,6 +5,99 @@\n extern \"C\" {\n # endif\n \n+#include <stddef.h>\n+\n+/* These rules specify the order of arguments in API calls:\n+ *\n+ * 1. Context pointers go first, followed by output arguments, combined\n+ *    output/input arguments, and finally input-only arguments.\n+ * 2. Array lengths always immediately the follow the argument whose length\n+ *    they describe, even if this violates rule 1.\n+ * 3. Within the OUT/OUTIN/IN groups, pointers to data that is typically generated\n+ *    later go first. This means: signatures, public nonces, private nonces,\n+ *    messages, public keys, secret keys, tweaks.\n+ * 4. Arguments that are not data pointers go last, from more complex to less\n+ *    complex: function pointers, algorithm names, messages, void pointers,\n+ *    counts, flags, booleans.\n+ * 5. Opaque data pointers follow the function pointer they are to be passed to.\n+ */\n+\n+/** Opaque data structure that holds context information (precomputed tables etc.).\n+ *\n+ *  The purpose of context structures is to cache large precomputed data tables\n+ *  that are expensive to construct, and also to maintain the randomization data\n+ *  for blinding.\n+ *\n+ *  Do not create a new context object for each operation, as construction is\n+ *  far slower than all other API calls (~100 times slower than an ECDSA\n+ *  verification).\n+ *\n+ *  A constructed context can safely be used from multiple threads\n+ *  simultaneously, but API call that take a non-const pointer to a context\n+ *  need exclusive access to it. In particular this is the case for\n+ *  secp256k1_context_destroy and secp256k1_context_randomize.\n+ *\n+ *  Regarding randomization, either do it once at creation time (in which case\n+ *  you do not need any locking for the other calls), or use a read-write lock.\n+ */\n+typedef struct secp256k1_context_struct secp256k1_context;\n+\n+/** Opaque data structure that holds a parsed and valid public key.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is\n+ *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n+ *  If you need to convert to a format suitable for storage or transmission, use\n+ *  secp256k1_ec_pubkey_serialize and secp256k1_ec_pubkey_parse.\n+ *\n+ *  Furthermore, it is guaranteed that identical public keys (ignoring\n+ *  compression) will have identical representation, so they can be memcmp'ed.\n+ */\n+typedef struct {\n+    unsigned char data[64];\n+} secp256k1_pubkey;\n+\n+/** Opaque data structured that holds a parsed ECDSA signature.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is\n+ *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n+ *  If you need to convert to a format suitable for storage or transmission, use\n+ *  the secp256k1_ecdsa_signature_serialize_* and\n+ *  secp256k1_ecdsa_signature_serialize_* functions.\n+ *\n+ *  Furthermore, it is guaranteed to identical signatures will have identical\n+ *  representation, so they can be memcmp'ed.\n+ */\n+typedef struct {\n+    unsigned char data[64];\n+} secp256k1_ecdsa_signature;\n+\n+/** A pointer to a function to deterministically generate a nonce.\n+ *\n+ * Returns: 1 if a nonce was successfully generated. 0 will cause signing to fail.\n+ * Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n+ * In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n+ *          key32:     pointer to a 32-byte secret key (will not be NULL)\n+ *          algo16:    pointer to a 16-byte array describing the signature\n+ *                     algorithm (will be NULL for ECDSA for compatibility).\n+ *          data:      Arbitrary data pointer that is passed through.\n+ *          attempt:   how many iterations we have tried to find a nonce.\n+ *                     This will almost always be 0, but different attempt values\n+ *                     are required to result in a different nonce.\n+ *\n+ * Except for test cases, this function should compute some cryptographic hash of\n+ * the message, the algorithm, the key and the attempt.\n+ */\n+typedef int (*secp256k1_nonce_function)(\n+    unsigned char *nonce32,\n+    const unsigned char *msg32,\n+    const unsigned char *key32,\n+    const unsigned char *algo16,\n+    void *data,\n+    unsigned int attempt\n+);\n+\n # if !defined(SECP256K1_GNUC_PREREQ)\n #  if defined(__GNUC__)&&defined(__GNUC_MINOR__)\n #   define SECP256K1_GNUC_PREREQ(_maj,_min) \\\n@@ -26,6 +119,20 @@ extern \"C\" {\n #  define SECP256K1_INLINE inline\n # endif\n \n+#ifndef SECP256K1_API\n+# if defined(_WIN32)\n+#  ifdef SECP256K1_BUILD\n+#   define SECP256K1_API __declspec(dllexport)\n+#  else\n+#   define SECP256K1_API\n+#  endif\n+# elif defined(__GNUC__) && defined(SECP256K1_BUILD)\n+#  define SECP256K1_API __attribute__ ((visibility (\"default\")))\n+# else\n+#  define SECP256K1_API\n+# endif\n+#endif\n+\n /**Warning attributes\n   * NONNULL is not used if SECP256K1_BUILD is set to avoid the compiler optimizing out\n   * some paranoid null checks. */\n@@ -40,305 +147,434 @@ extern \"C\" {\n #  define SECP256K1_ARG_NONNULL(_x)\n # endif\n \n-/** Opaque data structure that holds context information (precomputed tables etc.).\n- *  Only functions that take a pointer to a non-const context require exclusive\n- *  access to it. Multiple functions that take a pointer to a const context may\n- *  run simultaneously.\n- */\n-typedef struct secp256k1_context_struct secp256k1_context_t;\n+/** All flags' lower 8 bits indicate what they're for. Do not use directly. */\n+#define SECP256K1_FLAGS_TYPE_MASK ((1 << 8) - 1)\n+#define SECP256K1_FLAGS_TYPE_CONTEXT (1 << 0)\n+#define SECP256K1_FLAGS_TYPE_COMPRESSION (1 << 1)\n+/** The higher bits contain the actual data. Do not use directly. */\n+#define SECP256K1_FLAGS_BIT_CONTEXT_VERIFY (1 << 8)\n+#define SECP256K1_FLAGS_BIT_CONTEXT_SIGN (1 << 9)\n+#define SECP256K1_FLAGS_BIT_COMPRESSION (1 << 8)\n \n /** Flags to pass to secp256k1_context_create. */\n-# define SECP256K1_CONTEXT_VERIFY (1 << 0)\n-# define SECP256K1_CONTEXT_SIGN   (1 << 1)\n+#define SECP256K1_CONTEXT_VERIFY (SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_VERIFY)\n+#define SECP256K1_CONTEXT_SIGN (SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_SIGN)\n+#define SECP256K1_CONTEXT_NONE (SECP256K1_FLAGS_TYPE_CONTEXT)\n+\n+/** Flag to pass to secp256k1_ec_pubkey_serialize and secp256k1_ec_privkey_export. */\n+#define SECP256K1_EC_COMPRESSED (SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION)\n+#define SECP256K1_EC_UNCOMPRESSED (SECP256K1_FLAGS_TYPE_COMPRESSION)\n \n /** Create a secp256k1 context object.\n+ *\n  *  Returns: a newly created context object.\n  *  In:      flags: which parts of the context to initialize.\n  */\n-secp256k1_context_t* secp256k1_context_create(\n-  int flags\n+SECP256K1_API secp256k1_context* secp256k1_context_create(\n+    unsigned int flags\n ) SECP256K1_WARN_UNUSED_RESULT;\n \n /** Copies a secp256k1 context object.\n+ *\n  *  Returns: a newly created context object.\n- *  In:      ctx: an existing context to copy\n+ *  Args:    ctx: an existing context to copy (cannot be NULL)\n  */\n-secp256k1_context_t* secp256k1_context_clone(\n-  const secp256k1_context_t* ctx\n-) SECP256K1_WARN_UNUSED_RESULT;\n+SECP256K1_API secp256k1_context* secp256k1_context_clone(\n+    const secp256k1_context* ctx\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_WARN_UNUSED_RESULT;\n \n /** Destroy a secp256k1 context object.\n+ *\n  *  The context pointer may not be used afterwards.\n+ *  Args:   ctx: an existing context to destroy (cannot be NULL)\n+ */\n+SECP256K1_API void secp256k1_context_destroy(\n+    secp256k1_context* ctx\n+);\n+\n+/** Set a callback function to be called when an illegal argument is passed to\n+ *  an API call. It will only trigger for violations that are mentioned\n+ *  explicitly in the header.\n+ *\n+ *  The philosophy is that these shouldn't be dealt with through a\n+ *  specific return value, as calling code should not have branches to deal with\n+ *  the case that this code itself is broken.\n+ *\n+ *  On the other hand, during debug stage, one would want to be informed about\n+ *  such mistakes, and the default (crashing) may be inadvisable.\n+ *  When this callback is triggered, the API function called is guaranteed not\n+ *  to cause a crash, though its return value and output arguments are\n+ *  undefined.\n+ *\n+ *  Args: ctx:  an existing context object (cannot be NULL)\n+ *  In:   fun:  a pointer to a function to call when an illegal argument is\n+ *              passed to the API, taking a message and an opaque pointer\n+ *              (NULL restores a default handler that calls abort).\n+ *        data: the opaque pointer to pass to fun above.\n  */\n-void secp256k1_context_destroy(\n-  secp256k1_context_t* ctx\n+SECP256K1_API void secp256k1_context_set_illegal_callback(\n+    secp256k1_context* ctx,\n+    void (*fun)(const char* message, void* data),\n+    const void* data\n ) SECP256K1_ARG_NONNULL(1);\n \n+/** Set a callback function to be called when an internal consistency check\n+ *  fails. The default is crashing.\n+ *\n+ *  This can only trigger in case of a hardware failure, miscompilation,\n+ *  memory corruption, serious bug in the library, or other error would can\n+ *  otherwise result in undefined behaviour. It will not trigger due to mere\n+ *  incorrect usage of the API (see secp256k1_context_set_illegal_callback\n+ *  for that). After this callback returns, anything may happen, including\n+ *  crashing.\n+ *\n+ *  Args: ctx:  an existing context object (cannot be NULL)\n+ *  In:   fun:  a pointer to a function to call when an internal error occurs,\n+ *              taking a message and an opaque pointer (NULL restores a default\n+ *              handler that calls abort).\n+ *        data: the opaque pointer to pass to fun above.\n+ */\n+SECP256K1_API void secp256k1_context_set_error_callback(\n+    secp256k1_context* ctx,\n+    void (*fun)(const char* message, void* data),\n+    const void* data\n+) SECP256K1_ARG_NONNULL(1);\n+\n+/** Parse a variable-length public key into the pubkey object.\n+ *\n+ *  Returns: 1 if the public key was fully valid.\n+ *           0 if the public key could not be parsed or is invalid.\n+ *  Args: ctx:      a secp256k1 context object.\n+ *  Out:  pubkey:   pointer to a pubkey object. If 1 is returned, it is set to a\n+ *                  parsed version of input. If not, its value is undefined.\n+ *  In:   input:    pointer to a serialized public key\n+ *        inputlen: length of the array pointed to by input\n+ *\n+ *  This function supports parsing compressed (33 bytes, header byte 0x02 or\n+ *  0x03), uncompressed (65 bytes, header byte 0x04), or hybrid (65 bytes, header\n+ *  byte 0x06 or 0x07) format public keys.\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_parse(\n+    const secp256k1_context* ctx,\n+    secp256k1_pubkey* pubkey,\n+    const unsigned char *input,\n+    size_t inputlen\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Serialize a pubkey object into a serialized byte sequence.\n+ *\n+ *  Returns: 1 always.\n+ *  Args:   ctx:        a secp256k1 context object.\n+ *  Out:    output:     a pointer to a 65-byte (if compressed==0) or 33-byte (if\n+ *                      compressed==1) byte array to place the serialized key\n+ *                      in.\n+ *  In/Out: outputlen:  a pointer to an integer which is initially set to the\n+ *                      size of output, and is overwritten with the written\n+ *                      size.\n+ *  In:     pubkey:     a pointer to a secp256k1_pubkey containing an\n+ *                      initialized public key.\n+ *          flags:      SECP256K1_EC_COMPRESSED if serialization should be in\n+ *                      compressed format, otherwise SECP256K1_EC_UNCOMPRESSED.\n+ */\n+SECP256K1_API int secp256k1_ec_pubkey_serialize(\n+    const secp256k1_context* ctx,\n+    unsigned char *output,\n+    size_t *outputlen,\n+    const secp256k1_pubkey* pubkey,\n+    unsigned int flags\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Parse an ECDSA signature in compact (64 bytes) format.\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise.\n+ *  Args: ctx:      a secp256k1 context object\n+ *  Out:  sig:      a pointer to a signature object\n+ *  In:   input64:  a pointer to the 64-byte array to parse\n+ *\n+ *  The signature must consist of a 32-byte big endian R value, followed by a\n+ *  32-byte big endian S value. If R or S fall outside of [0..order-1], the\n+ *  encoding is invalid. R and S with value 0 are allowed in the encoding.\n+ *\n+ *  After the call, sig will always be initialized. If parsing failed or R or\n+ *  S are zero, the resulting sig value is guaranteed to fail validation for any\n+ *  message and public key.\n+ */\n+SECP256K1_API int secp256k1_ecdsa_signature_parse_compact(\n+    const secp256k1_context* ctx,\n+    secp256k1_ecdsa_signature* sig,\n+    const unsigned char *input64\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Parse a DER ECDSA signature.\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise.\n+ *  Args: ctx:      a secp256k1 context object\n+ *  Out:  sig:      a pointer to a signature object\n+ *  In:   input:    a pointer to the signature to be parsed\n+ *        inputlen: the length of the array pointed to be input\n+ *\n+ *  This function will accept any valid DER encoded signature, even if the\n+ *  encoded numbers are out of range.\n+ *\n+ *  After the call, sig will always be initialized. If parsing failed or the\n+ *  encoded numbers are out of range, signature validation with it is\n+ *  guaranteed to fail for every message and public key.\n+ */\n+SECP256K1_API int secp256k1_ecdsa_signature_parse_der(\n+    const secp256k1_context* ctx,\n+    secp256k1_ecdsa_signature* sig,\n+    const unsigned char *input,\n+    size_t inputlen\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Serialize an ECDSA signature in DER format.\n+ *\n+ *  Returns: 1 if enough space was available to serialize, 0 otherwise\n+ *  Args:   ctx:       a secp256k1 context object\n+ *  Out:    output:    a pointer to an array to store the DER serialization\n+ *  In/Out: outputlen: a pointer to a length integer. Initially, this integer\n+ *                     should be set to the length of output. After the call\n+ *                     it will be set to the length of the serialization (even\n+ *                     if 0 was returned).\n+ *  In:     sig:       a pointer to an initialized signature object\n+ */\n+SECP256K1_API int secp256k1_ecdsa_signature_serialize_der(\n+    const secp256k1_context* ctx,\n+    unsigned char *output,\n+    size_t *outputlen,\n+    const secp256k1_ecdsa_signature* sig\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Serialize an ECDSA signature in compact (64 byte) format.\n+ *\n+ *  Returns: 1\n+ *  Args:   ctx:       a secp256k1 context object\n+ *  Out:    output64:  a pointer to a 64-byte array to store the compact serialization\n+ *  In:     sig:       a pointer to an initialized signature object\n+ *\n+ *  See secp256k1_ecdsa_signature_parse_compact for details about the encoding.\n+ */\n+SECP256K1_API int secp256k1_ecdsa_signature_serialize_compact(\n+    const secp256k1_context* ctx,\n+    unsigned char *output64,\n+    const secp256k1_ecdsa_signature* sig\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n /** Verify an ECDSA signature.\n+ *\n  *  Returns: 1: correct signature\n- *           0: incorrect signature\n- *          -1: invalid public key\n- *          -2: invalid signature\n- * In:       ctx:       a secp256k1 context object, initialized for verification.\n+ *           0: incorrect or unparseable signature\n+ *  Args:    ctx:       a secp256k1 context object, initialized for verification.\n+ *  In:      sig:       the signature being verified (cannot be NULL)\n  *           msg32:     the 32-byte message hash being verified (cannot be NULL)\n- *           sig:       the signature being verified (cannot be NULL)\n- *           siglen:    the length of the signature\n- *           pubkey:    the public key to verify with (cannot be NULL)\n- *           pubkeylen: the length of pubkey\n+ *           pubkey:    pointer to an initialized public key to verify with (cannot be NULL)\n+ *\n+ * To avoid accepting malleable signatures, only ECDSA signatures in lower-S\n+ * form are accepted.\n+ *\n+ * If you need to accept ECDSA signatures from sources that do not obey this\n+ * rule, apply secp256k1_ecdsa_signature_normalize to the signature prior to\n+ * validation, but be aware that doing so results in malleable signatures.\n+ *\n+ * For details, see the comments for that function.\n  */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdsa_verify(\n-  const secp256k1_context_t* ctx,\n-  const unsigned char *msg32,\n-  const unsigned char *sig,\n-  int siglen,\n-  const unsigned char *pubkey,\n-  int pubkeylen\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(5);\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdsa_verify(\n+    const secp256k1_context* ctx,\n+    const secp256k1_ecdsa_signature *sig,\n+    const unsigned char *msg32,\n+    const secp256k1_pubkey *pubkey\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n \n-/** A pointer to a function to deterministically generate a nonce.\n- * Returns: 1 if a nonce was successfully generated. 0 will cause signing to fail.\n- * In:      msg32:     the 32-byte message hash being verified (will not be NULL)\n- *          key32:     pointer to a 32-byte secret key (will not be NULL)\n- *          attempt:   how many iterations we have tried to find a nonce.\n- *                     This will almost always be 0, but different attempt values\n- *                     are required to result in a different nonce.\n- *          data:      Arbitrary data pointer that is passed through.\n- * Out:     nonce32:   pointer to a 32-byte array to be filled by the function.\n- * Except for test cases, this function should compute some cryptographic hash of\n- * the message, the key and the attempt.\n+/** Convert a signature to a normalized lower-S form.\n+ *\n+ *  Returns: 1 if sigin was not normalized, 0 if it already was.\n+ *  Args: ctx:    a secp256k1 context object\n+ *  Out:  sigout: a pointer to a signature to fill with the normalized form,\n+ *                or copy if the input was already normalized. (can be NULL if\n+ *                you're only interested in whether the input was already\n+ *                normalized).\n+ *  In:   sigin:  a pointer to a signature to check/normalize (cannot be NULL,\n+ *                can be identical to sigout)\n+ *\n+ *  With ECDSA a third-party can forge a second distinct signature of the same\n+ *  message, given a single initial signature, but without knowing the key. This\n+ *  is done by negating the S value modulo the order of the curve, 'flipping'\n+ *  the sign of the random point R which is not included in the signature.\n+ *\n+ *  Forgery of the same message isn't universally problematic, but in systems\n+ *  where message malleability or uniqueness of signatures is important this can\n+ *  cause issues. This forgery can be blocked by all verifiers forcing signers\n+ *  to use a normalized form.\n+ *\n+ *  The lower-S form reduces the size of signatures slightly on average when\n+ *  variable length encodings (such as DER) are used and is cheap to verify,\n+ *  making it a good choice. Security of always using lower-S is assured because\n+ *  anyone can trivially modify a signature after the fact to enforce this\n+ *  property anyway.\n+ *\n+ *  The lower S value is always between 0x1 and\n+ *  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\n+ *  inclusive.\n+ *\n+ *  No other forms of ECDSA malleability are known and none seem likely, but\n+ *  there is no formal proof that ECDSA, even with this additional restriction,\n+ *  is free of other malleability. Commonly used serialization schemes will also\n+ *  accept various non-unique encodings, so care should be taken when this\n+ *  property is required for an application.\n+ *\n+ *  The secp256k1_ecdsa_sign function will by default create signatures in the\n+ *  lower-S form, and secp256k1_ecdsa_verify will not accept others. In case\n+ *  signatures come from a system that cannot enforce this property,\n+ *  secp256k1_ecdsa_signature_normalize must be called before verification.\n  */\n-typedef int (*secp256k1_nonce_function_t)(\n-  unsigned char *nonce32,\n-  const unsigned char *msg32,\n-  const unsigned char *key32,\n-  unsigned int attempt,\n-  const void *data\n-);\n+SECP256K1_API int secp256k1_ecdsa_signature_normalize(\n+    const secp256k1_context* ctx,\n+    secp256k1_ecdsa_signature *sigout,\n+    const secp256k1_ecdsa_signature *sigin\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(3);\n \n /** An implementation of RFC6979 (using HMAC-SHA256) as nonce generation function.\n  * If a data pointer is passed, it is assumed to be a pointer to 32 bytes of\n  * extra entropy.\n  */\n-extern const secp256k1_nonce_function_t secp256k1_nonce_function_rfc6979;\n+SECP256K1_API extern const secp256k1_nonce_function secp256k1_nonce_function_rfc6979;\n \n /** A default safe nonce generation function (currently equal to secp256k1_nonce_function_rfc6979). */\n-extern const secp256k1_nonce_function_t secp256k1_nonce_function_default;\n-\n+SECP256K1_API extern const secp256k1_nonce_function secp256k1_nonce_function_default;\n \n /** Create an ECDSA signature.\n+ *\n  *  Returns: 1: signature created\n- *           0: the nonce generation function failed, the private key was invalid, or there is not\n- *              enough space in the signature (as indicated by siglen).\n- *  In:      ctx:    pointer to a context object, initialized for signing (cannot be NULL)\n- *           msg32:  the 32-byte message hash being signed (cannot be NULL)\n- *           seckey: pointer to a 32-byte secret key (cannot be NULL)\n- *           noncefp:pointer to a nonce generation function. If NULL, secp256k1_nonce_function_default is used\n- *           ndata:  pointer to arbitrary data used by the nonce generation function (can be NULL)\n+ *           0: the nonce generation function failed, or the private key was invalid.\n+ *  Args:    ctx:    pointer to a context object, initialized for signing (cannot be NULL)\n  *  Out:     sig:    pointer to an array where the signature will be placed (cannot be NULL)\n- *  In/Out:  siglen: pointer to an int with the length of sig, which will be updated\n- *                   to contain the actual signature length (<=72).\n- *\n- * The sig always has an s value in the lower half of the range (From 0x1\n- * to 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\n- * inclusive), unlike many other implementations.\n- * With ECDSA a third-party can can forge a second distinct signature\n- * of the same message given a single initial signature without knowing\n- * the key by setting s to its additive inverse mod-order, 'flipping' the\n- * sign of the random point R which is not included in the signature.\n- * Since the forgery is of the same message this isn't universally\n- * problematic, but in systems where message malleability or uniqueness\n- * of signatures is important this can cause issues.  This forgery can be\n- * blocked by all verifiers forcing signers to use a canonical form. The\n- * lower-S form reduces the size of signatures slightly on average when\n- * variable length encodings (such as DER) are used and is cheap to\n- * verify, making it a good choice. Security of always using lower-S is\n- * assured because anyone can trivially modify a signature after the\n- * fact to enforce this property.  Adjusting it inside the signing\n- * function avoids the need to re-serialize or have curve specific\n- * constants outside of the library.  By always using a canonical form\n- * even in applications where it isn't needed it becomes possible to\n- * impose a requirement later if a need is discovered.\n- * No other forms of ECDSA malleability are known and none seem likely,\n- * but there is no formal proof that ECDSA, even with this additional\n- * restriction, is free of other malleability.  Commonly used serialization\n- * schemes will also accept various non-unique encodings, so care should\n- * be taken when this property is required for an application.\n- */\n-int secp256k1_ecdsa_sign(\n-  const secp256k1_context_t* ctx,\n-  const unsigned char *msg32,\n-  unsigned char *sig,\n-  int *siglen,\n-  const unsigned char *seckey,\n-  secp256k1_nonce_function_t noncefp,\n-  const void *ndata\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4) SECP256K1_ARG_NONNULL(5);\n-\n-/** Create a compact ECDSA signature (64 byte + recovery id).\n- *  Returns: 1: signature created\n- *           0: the nonce generation function failed, or the secret key was invalid.\n- *  In:      ctx:    pointer to a context object, initialized for signing (cannot be NULL)\n- *           msg32:  the 32-byte message hash being signed (cannot be NULL)\n+ *  In:      msg32:  the 32-byte message hash being signed (cannot be NULL)\n  *           seckey: pointer to a 32-byte secret key (cannot be NULL)\n  *           noncefp:pointer to a nonce generation function. If NULL, secp256k1_nonce_function_default is used\n  *           ndata:  pointer to arbitrary data used by the nonce generation function (can be NULL)\n- *  Out:     sig:    pointer to a 64-byte array where the signature will be placed (cannot be NULL)\n- *                   In case 0 is returned, the returned signature length will be zero.\n- *           recid:  pointer to an int, which will be updated to contain the recovery id (can be NULL)\n+ *\n+ * The created signature is always in lower-S form. See\n+ * secp256k1_ecdsa_signature_normalize for more details.\n  */\n-int secp256k1_ecdsa_sign_compact(\n-  const secp256k1_context_t* ctx,\n-  const unsigned char *msg32,\n-  unsigned char *sig64,\n-  const unsigned char *seckey,\n-  secp256k1_nonce_function_t noncefp,\n-  const void *ndata,\n-  int *recid\n+SECP256K1_API int secp256k1_ecdsa_sign(\n+    const secp256k1_context* ctx,\n+    secp256k1_ecdsa_signature *sig,\n+    const unsigned char *msg32,\n+    const unsigned char *seckey,\n+    secp256k1_nonce_function noncefp,\n+    const void *ndata\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n \n-/** Recover an ECDSA public key from a compact signature.\n- *  Returns: 1: public key successfully recovered (which guarantees a correct signature).\n- *           0: otherwise.\n- *  In:      ctx:        pointer to a context object, initialized for verification (cannot be NULL)\n- *           msg32:      the 32-byte message hash assumed to be signed (cannot be NULL)\n- *           sig64:      signature as 64 byte array (cannot be NULL)\n- *           compressed: whether to recover a compressed or uncompressed pubkey\n- *           recid:      the recovery id (0-3, as returned by ecdsa_sign_compact)\n- *  Out:     pubkey:     pointer to a 33 or 65 byte array to put the pubkey (cannot be NULL)\n- *           pubkeylen:  pointer to an int that will contain the pubkey length (cannot be NULL)\n- */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdsa_recover_compact(\n-  const secp256k1_context_t* ctx,\n-  const unsigned char *msg32,\n-  const unsigned char *sig64,\n-  unsigned char *pubkey,\n-  int *pubkeylen,\n-  int compressed,\n-  int recid\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4) SECP256K1_ARG_NONNULL(5);\n-\n /** Verify an ECDSA secret key.\n+ *\n  *  Returns: 1: secret key is valid\n  *           0: secret key is invalid\n- *  In:      ctx: pointer to a context object (cannot be NULL)\n- *           seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *  Args:    ctx: pointer to a context object (cannot be NULL)\n+ *  In:      seckey: pointer to a 32-byte secret key (cannot be NULL)\n  */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_seckey_verify(\n-  const secp256k1_context_t* ctx,\n-  const unsigned char *seckey\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n-\n-/** Just validate a public key.\n- *  Returns: 1: public key is valid\n- *           0: public key is invalid\n- *  In:      ctx:       pointer to a context object (cannot be NULL)\n- *           pubkey:    pointer to a 33-byte or 65-byte public key (cannot be NULL).\n- *           pubkeylen: length of pubkey\n- */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_verify(\n-  const secp256k1_context_t* ctx,\n-  const unsigned char *pubkey,\n-  int pubkeylen\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_seckey_verify(\n+    const secp256k1_context* ctx,\n+    const unsigned char *seckey\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2);\n \n /** Compute the public key for a secret key.\n- *  In:     ctx:        pointer to a context object, initialized for signing (cannot be NULL)\n- *          compressed: whether the computed public key should be compressed\n- *          seckey:     pointer to a 32-byte private key (cannot be NULL)\n- *  Out:    pubkey:     pointer to a 33-byte (if compressed) or 65-byte (if uncompressed)\n- *                      area to store the public key (cannot be NULL)\n- *          pubkeylen:  pointer to int that will be updated to contains the pubkey's\n- *                      length (cannot be NULL)\n+ *\n  *  Returns: 1: secret was valid, public key stores\n  *           0: secret was invalid, try again\n+ *  Args:   ctx:        pointer to a context object, initialized for signing (cannot be NULL)\n+ *  Out:    pubkey:     pointer to the created public key (cannot be NULL)\n+ *  In:     seckey:     pointer to a 32-byte private key (cannot be NULL)\n  */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_create(\n-  const secp256k1_context_t* ctx,\n-  unsigned char *pubkey,\n-  int *pubkeylen,\n-  const unsigned char *seckey,\n-  int compressed\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n-\n-/** Decompress a public key.\n- * In:     ctx:       pointer to a context object (cannot be NULL)\n- * In/Out: pubkey:    pointer to a 65-byte array to put the decompressed public key.\n- *                    It must contain a 33-byte or 65-byte public key already (cannot be NULL)\n- *         pubkeylen: pointer to the size of the public key pointed to by pubkey (cannot be NULL)\n- *                    It will be updated to reflect the new size.\n- * Returns: 0: pubkey was invalid\n- *          1: pubkey was valid, and was replaced with its decompressed version\n- */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_decompress(\n-  const secp256k1_context_t* ctx,\n-  unsigned char *pubkey,\n-  int *pubkeylen\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_create(\n+    const secp256k1_context* ctx,\n+    secp256k1_pubkey *pubkey,\n+    const unsigned char *seckey\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n-/** Export a private key in DER format.\n- * In: ctx: pointer to a context object, initialized for signing (cannot be NULL)\n+/** Tweak a private key by adding tweak to it.\n+ * Returns: 0 if the tweak was out of range (chance of around 1 in 2^128 for\n+ *          uniformly random 32-byte arrays, or if the resulting private key\n+ *          would be invalid (only when the tweak is the complement of the\n+ *          private key). 1 otherwise.\n+ * Args:    ctx:    pointer to a context object (cannot be NULL).\n+ * In/Out:  seckey: pointer to a 32-byte private key.\n+ * In:      tweak:  pointer to a 32-byte tweak.\n  */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_privkey_export(\n-  const secp256k1_context_t* ctx,\n-  const unsigned char *seckey,\n-  unsigned char *privkey,\n-  int *privkeylen,\n-  int compressed\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n-\n-/** Import a private key in DER format. */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_privkey_import(\n-  const secp256k1_context_t* ctx,\n-  unsigned char *seckey,\n-  const unsigned char *privkey,\n-  int privkeylen\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_privkey_tweak_add(\n+    const secp256k1_context* ctx,\n+    unsigned char *seckey,\n+    const unsigned char *tweak\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n-/** Tweak a private key by adding tweak to it. */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_privkey_tweak_add(\n-  const secp256k1_context_t* ctx,\n-  unsigned char *seckey,\n-  const unsigned char *tweak\n+/** Tweak a public key by adding tweak times the generator to it.\n+ * Returns: 0 if the tweak was out of range (chance of around 1 in 2^128 for\n+ *          uniformly random 32-byte arrays, or if the resulting public key\n+ *          would be invalid (only when the tweak is the complement of the\n+ *          corresponding private key). 1 otherwise.\n+ * Args:    ctx:    pointer to a context object initialized for validation\n+ *                  (cannot be NULL).\n+ * In/Out:  pubkey: pointer to a public key object.\n+ * In:      tweak:  pointer to a 32-byte tweak.\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_tweak_add(\n+    const secp256k1_context* ctx,\n+    secp256k1_pubkey *pubkey,\n+    const unsigned char *tweak\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n-/** Tweak a public key by adding tweak times the generator to it.\n- * In: ctx: pointer to a context object, initialized for verification (cannot be NULL)\n+/** Tweak a private key by multiplying it by a tweak.\n+ * Returns: 0 if the tweak was out of range (chance of around 1 in 2^128 for\n+ *          uniformly random 32-byte arrays, or equal to zero. 1 otherwise.\n+ * Args:   ctx:    pointer to a context object (cannot be NULL).\n+ * In/Out: seckey: pointer to a 32-byte private key.\n+ * In:     tweak:  pointer to a 32-byte tweak.\n  */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_tweak_add(\n-  const secp256k1_context_t* ctx,\n-  unsigned char *pubkey,\n-  int pubkeylen,\n-  const unsigned char *tweak\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(4);\n-\n-/** Tweak a private key by multiplying it with tweak. */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_privkey_tweak_mul(\n-  const secp256k1_context_t* ctx,\n-  unsigned char *seckey,\n-  const unsigned char *tweak\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_privkey_tweak_mul(\n+    const secp256k1_context* ctx,\n+    unsigned char *seckey,\n+    const unsigned char *tweak\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n-/** Tweak a public key by multiplying it with tweak.\n- * In: ctx: pointer to a context object, initialized for verification (cannot be NULL)\n+/** Tweak a public key by multiplying it by a tweak value.\n+ * Returns: 0 if the tweak was out of range (chance of around 1 in 2^128 for\n+ *          uniformly random 32-byte arrays, or equal to zero. 1 otherwise.\n+ * Args:    ctx:    pointer to a context object initialized for validation\n+ *                 (cannot be NULL).\n+ * In/Out:  pubkey: pointer to a public key obkect.\n+ * In:      tweak:  pointer to a 32-byte tweak.\n  */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_tweak_mul(\n-  const secp256k1_context_t* ctx,\n-  unsigned char *pubkey,\n-  int pubkeylen,\n-  const unsigned char *tweak\n-) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(4);\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_tweak_mul(\n+    const secp256k1_context* ctx,\n+    secp256k1_pubkey *pubkey,\n+    const unsigned char *tweak\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n /** Updates the context randomization.\n  *  Returns: 1: randomization successfully updated\n  *           0: error\n- *  In:      ctx:       pointer to a context object (cannot be NULL)\n- *           seed32:    pointer to a 32-byte random seed (NULL resets to initial state)\n+ *  Args:    ctx:       pointer to a context object (cannot be NULL)\n+ *  In:      seed32:    pointer to a 32-byte random seed (NULL resets to initial state)\n  */\n-SECP256K1_WARN_UNUSED_RESULT int secp256k1_context_randomize(\n-  secp256k1_context_t* ctx,\n-  const unsigned char *seed32\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_context_randomize(\n+    secp256k1_context* ctx,\n+    const unsigned char *seed32\n ) SECP256K1_ARG_NONNULL(1);\n \n+/** Add a number of public keys together.\n+ *  Returns: 1: the sum of the public keys is valid.\n+ *           0: the sum of the public keys is not valid.\n+ *  Args:   ctx:        pointer to a context object\n+ *  Out:    out:        pointer to a public key object for placing the resulting public key\n+ *                      (cannot be NULL)\n+ *  In:     ins:        pointer to array of pointers to public keys (cannot be NULL)\n+ *          n:          the number of public keys to add together (must be at least 1)\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_combine(\n+    const secp256k1_context* ctx,\n+    secp256k1_pubkey *out,\n+    const secp256k1_pubkey * const * ins,\n+    size_t n\n+) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n # ifdef __cplusplus\n }"
      },
      {
        "sha": "4b84d7a963499698ff6c8b920d337fed2d1cb5f7",
        "filename": "src/secp256k1/include/secp256k1_ecdh.h",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/include/secp256k1_ecdh.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/include/secp256k1_ecdh.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/include/secp256k1_ecdh.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,31 @@\n+#ifndef _SECP256K1_ECDH_\n+# define _SECP256K1_ECDH_\n+\n+# include \"secp256k1.h\"\n+\n+# ifdef __cplusplus\n+extern \"C\" {\n+# endif\n+\n+/** Compute an EC Diffie-Hellman secret in constant time\n+ *  Returns: 1: exponentiation was successful\n+ *           0: scalar was invalid (zero or overflow)\n+ *  Args:    ctx:        pointer to a context object (cannot be NULL)\n+ *  Out:     result:     a 32-byte array which will be populated by an ECDH\n+ *                       secret computed from the point and scalar\n+ *  In:      pubkey:     a pointer to a secp256k1_pubkey containing an\n+ *                       initialized public key\n+ *           privkey:    a 32-byte scalar with which to multiply the point\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdh(\n+  const secp256k1_context* ctx,\n+  unsigned char *result,\n+  const secp256k1_pubkey *pubkey,\n+  const unsigned char *privkey\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+# ifdef __cplusplus\n+}\n+# endif\n+\n+#endif"
      },
      {
        "sha": "05537972532fb89feb6693d07c19168688136f38",
        "filename": "src/secp256k1/include/secp256k1_recovery.h",
        "status": "added",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/include/secp256k1_recovery.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/include/secp256k1_recovery.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/include/secp256k1_recovery.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,110 @@\n+#ifndef _SECP256K1_RECOVERY_\n+# define _SECP256K1_RECOVERY_\n+\n+# include \"secp256k1.h\"\n+\n+# ifdef __cplusplus\n+extern \"C\" {\n+# endif\n+\n+/** Opaque data structured that holds a parsed ECDSA signature,\n+ *  supporting pubkey recovery.\n+ *\n+ *  The exact representation of data inside is implementation defined and not\n+ *  guaranteed to be portable between different platforms or versions. It is\n+ *  however guaranteed to be 65 bytes in size, and can be safely copied/moved.\n+ *  If you need to convert to a format suitable for storage or transmission, use\n+ *  the secp256k1_ecdsa_signature_serialize_* and\n+ *  secp256k1_ecdsa_signature_parse_* functions.\n+ *\n+ *  Furthermore, it is guaranteed that identical signatures (including their\n+ *  recoverability) will have identical representation, so they can be\n+ *  memcmp'ed.\n+ */\n+typedef struct {\n+    unsigned char data[65];\n+} secp256k1_ecdsa_recoverable_signature;\n+\n+/** Parse a compact ECDSA signature (64 bytes + recovery id).\n+ *\n+ *  Returns: 1 when the signature could be parsed, 0 otherwise\n+ *  Args: ctx:     a secp256k1 context object\n+ *  Out:  sig:     a pointer to a signature object\n+ *  In:   input64: a pointer to a 64-byte compact signature\n+ *        recid:   the recovery id (0, 1, 2 or 3)\n+ */\n+SECP256K1_API int secp256k1_ecdsa_recoverable_signature_parse_compact(\n+    const secp256k1_context* ctx,\n+    secp256k1_ecdsa_recoverable_signature* sig,\n+    const unsigned char *input64,\n+    int recid\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Convert a recoverable signature into a normal signature.\n+ *\n+ *  Returns: 1\n+ *  Out: sig:    a pointer to a normal signature (cannot be NULL).\n+ *  In:  sigin:  a pointer to a recoverable signature (cannot be NULL).\n+ */\n+SECP256K1_API int secp256k1_ecdsa_recoverable_signature_convert(\n+    const secp256k1_context* ctx,\n+    secp256k1_ecdsa_signature* sig,\n+    const secp256k1_ecdsa_recoverable_signature* sigin\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Serialize an ECDSA signature in compact format (64 bytes + recovery id).\n+ *\n+ *  Returns: 1\n+ *  Args: ctx:      a secp256k1 context object\n+ *  Out:  output64: a pointer to a 64-byte array of the compact signature (cannot be NULL)\n+ *        recid:    a pointer to an integer to hold the recovery id (can be NULL).\n+ *  In:   sig:      a pointer to an initialized signature object (cannot be NULL)\n+ */\n+SECP256K1_API int secp256k1_ecdsa_recoverable_signature_serialize_compact(\n+    const secp256k1_context* ctx,\n+    unsigned char *output64,\n+    int *recid,\n+    const secp256k1_ecdsa_recoverable_signature* sig\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Create a recoverable ECDSA signature.\n+ *\n+ *  Returns: 1: signature created\n+ *           0: the nonce generation function failed, or the private key was invalid.\n+ *  Args:    ctx:    pointer to a context object, initialized for signing (cannot be NULL)\n+ *  Out:     sig:    pointer to an array where the signature will be placed (cannot be NULL)\n+ *  In:      msg32:  the 32-byte message hash being signed (cannot be NULL)\n+ *           seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *           noncefp:pointer to a nonce generation function. If NULL, secp256k1_nonce_function_default is used\n+ *           ndata:  pointer to arbitrary data used by the nonce generation function (can be NULL)\n+ */\n+SECP256K1_API int secp256k1_ecdsa_sign_recoverable(\n+    const secp256k1_context* ctx,\n+    secp256k1_ecdsa_recoverable_signature *sig,\n+    const unsigned char *msg32,\n+    const unsigned char *seckey,\n+    secp256k1_nonce_function noncefp,\n+    const void *ndata\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Recover an ECDSA public key from a signature.\n+ *\n+ *  Returns: 1: public key successfully recovered (which guarantees a correct signature).\n+ *           0: otherwise.\n+ *  Args:    ctx:        pointer to a context object, initialized for verification (cannot be NULL)\n+ *  Out:     pubkey:     pointer to the recovered public key (cannot be NULL)\n+ *  In:      sig:        pointer to initialized signature that supports pubkey recovery (cannot be NULL)\n+ *           msg32:      the 32-byte message hash assumed to be signed (cannot be NULL)\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdsa_recover(\n+    const secp256k1_context* ctx,\n+    secp256k1_pubkey *pubkey,\n+    const secp256k1_ecdsa_recoverable_signature *sig,\n+    const unsigned char *msg32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+# ifdef __cplusplus\n+}\n+# endif\n+\n+#endif"
      },
      {
        "sha": "dc32fec1eac0380e687399c0cf66e0c44cb2e1a3",
        "filename": "src/secp256k1/include/secp256k1_schnorr.h",
        "status": "added",
        "additions": 173,
        "deletions": 0,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/include/secp256k1_schnorr.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/include/secp256k1_schnorr.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/include/secp256k1_schnorr.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,173 @@\n+#ifndef _SECP256K1_SCHNORR_\n+# define _SECP256K1_SCHNORR_\n+\n+# include \"secp256k1.h\"\n+\n+# ifdef __cplusplus\n+extern \"C\" {\n+# endif\n+\n+/** Create a signature using a custom EC-Schnorr-SHA256 construction. It\n+ *  produces non-malleable 64-byte signatures which support public key recovery\n+ *  batch validation, and multiparty signing.\n+ *  Returns: 1: signature created\n+ *           0: the nonce generation function failed, or the private key was\n+ *              invalid.\n+ *  Args:    ctx:    pointer to a context object, initialized for signing\n+ *                   (cannot be NULL)\n+ *  Out:     sig64:  pointer to a 64-byte array where the signature will be\n+ *                   placed (cannot be NULL)\n+ *  In:      msg32:  the 32-byte message hash being signed (cannot be NULL)\n+ *           seckey: pointer to a 32-byte secret key (cannot be NULL)\n+ *           noncefp:pointer to a nonce generation function. If NULL,\n+ *                   secp256k1_nonce_function_default is used\n+ *           ndata:  pointer to arbitrary data used by the nonce generation\n+ *                   function (can be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorr_sign(\n+  const secp256k1_context* ctx,\n+  unsigned char *sig64,\n+  const unsigned char *msg32,\n+  const unsigned char *seckey,\n+  secp256k1_nonce_function noncefp,\n+  const void *ndata\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Verify a signature created by secp256k1_schnorr_sign.\n+ *  Returns: 1: correct signature\n+ *           0: incorrect signature\n+ *  Args:    ctx:       a secp256k1 context object, initialized for verification.\n+ *  In:      sig64:     the 64-byte signature being verified (cannot be NULL)\n+ *           msg32:     the 32-byte message hash being verified (cannot be NULL)\n+ *           pubkey:    the public key to verify with (cannot be NULL)\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_schnorr_verify(\n+  const secp256k1_context* ctx,\n+  const unsigned char *sig64,\n+  const unsigned char *msg32,\n+  const secp256k1_pubkey *pubkey\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Recover an EC public key from a Schnorr signature created using\n+ *  secp256k1_schnorr_sign.\n+ *  Returns: 1: public key successfully recovered (which guarantees a correct\n+ *           signature).\n+ *           0: otherwise.\n+ *  Args:    ctx:        pointer to a context object, initialized for\n+ *                       verification (cannot be NULL)\n+ *  Out:     pubkey:     pointer to a pubkey to set to the recovered public key\n+ *                       (cannot be NULL).\n+ *  In:      sig64:      signature as 64 byte array (cannot be NULL)\n+ *           msg32:      the 32-byte message hash assumed to be signed (cannot\n+ *                       be NULL)\n+ */\n+SECP256K1_API int secp256k1_schnorr_recover(\n+  const secp256k1_context* ctx,\n+  secp256k1_pubkey *pubkey,\n+  const unsigned char *sig64,\n+  const unsigned char *msg32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n+\n+/** Generate a nonce pair deterministically for use with\n+ *  secp256k1_schnorr_partial_sign.\n+ *  Returns: 1: valid nonce pair was generated.\n+ *           0: otherwise (nonce generation function failed)\n+ *  Args:    ctx:         pointer to a context object, initialized for signing\n+ *                        (cannot be NULL)\n+ *  Out:     pubnonce:    public side of the nonce (cannot be NULL)\n+ *           privnonce32: private side of the nonce (32 byte) (cannot be NULL)\n+ *  In:      msg32:       the 32-byte message hash assumed to be signed (cannot\n+ *                        be NULL)\n+ *           sec32:       the 32-byte private key (cannot be NULL)\n+ *           noncefp:     pointer to a nonce generation function. If NULL,\n+ *                        secp256k1_nonce_function_default is used\n+ *           noncedata:   pointer to arbitrary data used by the nonce generation\n+ *                        function (can be NULL)\n+ *\n+ *  Do not use the output as a private/public key pair for signing/validation.\n+ */\n+SECP256K1_API int secp256k1_schnorr_generate_nonce_pair(\n+  const secp256k1_context* ctx,\n+  secp256k1_pubkey *pubnonce,\n+  unsigned char *privnonce32,\n+  const unsigned char *msg32,\n+  const unsigned char *sec32,\n+  secp256k1_nonce_function noncefp,\n+  const void* noncedata\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+/** Produce a partial Schnorr signature, which can be combined using\n+ *  secp256k1_schnorr_partial_combine, to end up with a full signature that is\n+ *  verifiable using secp256k1_schnorr_verify.\n+ *  Returns: 1: signature created successfully.\n+ *           0: no valid signature exists with this combination of keys, nonces\n+ *              and message (chance around 1 in 2^128)\n+ *          -1: invalid private key, nonce, or public nonces.\n+ *  Args: ctx:             pointer to context object, initialized for signing (cannot\n+ *                         be NULL)\n+ *  Out:  sig64:           pointer to 64-byte array to put partial signature in\n+ *  In:   msg32:           pointer to 32-byte message to sign\n+ *        sec32:           pointer to 32-byte private key\n+ *        pubnonce_others: pointer to pubkey containing the sum of the other's\n+ *                         nonces (see secp256k1_ec_pubkey_combine)\n+ *        secnonce32:      pointer to 32-byte array containing our nonce\n+ *\n+ * The intended procedure for creating a multiparty signature is:\n+ * - Each signer S[i] with private key x[i] and public key Q[i] runs\n+ *   secp256k1_schnorr_generate_nonce_pair to produce a pair (k[i],R[i]) of\n+ *   private/public nonces.\n+ * - All signers communicate their public nonces to each other (revealing your\n+ *   private nonce can lead to discovery of your private key, so it should be\n+ *   considered secret).\n+ * - All signers combine all the public nonces they received (excluding their\n+ *   own) using secp256k1_ec_pubkey_combine to obtain an\n+ *   Rall[i] = sum(R[0..i-1,i+1..n]).\n+ * - All signers produce a partial signature using\n+ *   secp256k1_schnorr_partial_sign, passing in their own private key x[i],\n+ *   their own private nonce k[i], and the sum of the others' public nonces\n+ *   Rall[i].\n+ * - All signers communicate their partial signatures to each other.\n+ * - Someone combines all partial signatures using\n+ *   secp256k1_schnorr_partial_combine, to obtain a full signature.\n+ * - The resulting signature is validatable using secp256k1_schnorr_verify, with\n+ *   public key equal to the result of secp256k1_ec_pubkey_combine of the\n+ *   signers' public keys (sum(Q[0..n])).\n+ *\n+ *  Note that secp256k1_schnorr_partial_combine and secp256k1_ec_pubkey_combine\n+ *  function take their arguments in any order, and it is possible to\n+ *  pre-combine several inputs already with one call, and add more inputs later\n+ *  by calling the function again (they are commutative and associative).\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_schnorr_partial_sign(\n+  const secp256k1_context* ctx,\n+  unsigned char *sig64,\n+  const unsigned char *msg32,\n+  const unsigned char *sec32,\n+  const secp256k1_pubkey *pubnonce_others,\n+  const unsigned char *secnonce32\n+) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4) SECP256K1_ARG_NONNULL(5) SECP256K1_ARG_NONNULL(6);\n+\n+/** Combine multiple Schnorr partial signatures.\n+ * Returns: 1: the passed signatures were successfully combined.\n+ *          0: the resulting signature is not valid (chance of 1 in 2^256)\n+ *         -1: some inputs were invalid, or the signatures were not created\n+ *             using the same set of nonces\n+ * Args:   ctx:      pointer to a context object\n+ * Out:    sig64:    pointer to a 64-byte array to place the combined signature\n+ *                   (cannot be NULL)\n+ * In:     sig64sin: pointer to an array of n pointers to 64-byte input\n+ *                   signatures\n+ *         n:        the number of signatures to combine (at least 1)\n+ */\n+SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_schnorr_partial_combine(\n+  const secp256k1_context* ctx,\n+  unsigned char *sig64,\n+  const unsigned char * const * sig64sin,\n+  size_t n\n+) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n+\n+# ifdef __cplusplus\n+}\n+# endif\n+\n+#endif"
      },
      {
        "sha": "c4c16eb7ca7dc9313430809cfc964bf5055d2831",
        "filename": "src/secp256k1/src/basic-config.h",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/basic-config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/basic-config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/basic-config.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,32 @@\n+/**********************************************************************\n+ * Copyright (c) 2013, 2014 Pieter Wuille                             *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_BASIC_CONFIG_\n+#define _SECP256K1_BASIC_CONFIG_\n+\n+#ifdef USE_BASIC_CONFIG\n+\n+#undef USE_ASM_X86_64\n+#undef USE_ENDOMORPHISM\n+#undef USE_FIELD_10X26\n+#undef USE_FIELD_5X52\n+#undef USE_FIELD_INV_BUILTIN\n+#undef USE_FIELD_INV_NUM\n+#undef USE_NUM_GMP\n+#undef USE_NUM_NONE\n+#undef USE_SCALAR_4X64\n+#undef USE_SCALAR_8X32\n+#undef USE_SCALAR_INV_BUILTIN\n+#undef USE_SCALAR_INV_NUM\n+\n+#define USE_NUM_NONE 1\n+#define USE_FIELD_INV_BUILTIN 1\n+#define USE_SCALAR_INV_BUILTIN 1\n+#define USE_FIELD_10X26 1\n+#define USE_SCALAR_8X32 1\n+\n+#endif // USE_BASIC_CONFIG\n+#endif // _SECP256K1_BASIC_CONFIG_"
      },
      {
        "sha": "3a71b4aafa048d9ba79ad1fcb432139f94550a6c",
        "filename": "src/secp256k1/src/bench.h",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/bench.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -20,7 +20,9 @@ static double gettimedouble(void) {\n void print_number(double x) {\n     double y = x;\n     int c = 0;\n-    if (y < 0.0) y = -y;\n+    if (y < 0.0) {\n+        y = -y;\n+    }\n     while (y < 100.0) {\n         y *= 10.0;\n         c++;\n@@ -35,13 +37,21 @@ void run_benchmark(char *name, void (*benchmark)(void*), void (*setup)(void*), v\n     double max = 0.0;\n     for (i = 0; i < count; i++) {\n         double begin, total;\n-        if (setup) setup(data);\n+        if (setup != NULL) {\n+            setup(data);\n+        }\n         begin = gettimedouble();\n         benchmark(data);\n         total = gettimedouble() - begin;\n-        if (teardown) teardown(data);\n-        if (total < min) min = total;\n-        if (total > max) max = total;\n+        if (teardown != NULL) {\n+            teardown(data);\n+        }\n+        if (total < min) {\n+            min = total;\n+        }\n+        if (total > max) {\n+            max = total;\n+        }\n         sum += total;\n     }\n     printf(\"%s: min \", name);"
      },
      {
        "sha": "5a7c6376e08a1e8c274c7cb8998248c4692da201",
        "filename": "src/secp256k1/src/bench_ecdh.c",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_ecdh.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_ecdh.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/bench_ecdh.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,53 @@\n+/**********************************************************************\n+ * Copyright (c) 2015 Pieter Wuille, Andrew Poelstra                  *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <string.h>\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_ecdh.h\"\n+#include \"util.h\"\n+#include \"bench.h\"\n+\n+typedef struct {\n+    secp256k1_context *ctx;\n+    secp256k1_pubkey point;\n+    unsigned char scalar[32];\n+} bench_ecdh_t;\n+\n+static void bench_ecdh_setup(void* arg) {\n+    int i;\n+    bench_ecdh_t *data = (bench_ecdh_t*)arg;\n+    const unsigned char point[] = {\n+        0x03,\n+        0x54, 0x94, 0xc1, 0x5d, 0x32, 0x09, 0x97, 0x06,\n+        0xc2, 0x39, 0x5f, 0x94, 0x34, 0x87, 0x45, 0xfd,\n+        0x75, 0x7c, 0xe3, 0x0e, 0x4e, 0x8c, 0x90, 0xfb,\n+        0xa2, 0xba, 0xd1, 0x84, 0xf8, 0x83, 0xc6, 0x9f\n+    };\n+\n+    data->ctx = secp256k1_context_create(0);\n+    for (i = 0; i < 32; i++) {\n+        data->scalar[i] = i + 1;\n+    }\n+    CHECK(secp256k1_ec_pubkey_parse(data->ctx, &data->point, point, sizeof(point)) == 1);\n+}\n+\n+static void bench_ecdh(void* arg) {\n+    int i;\n+    unsigned char res[32];\n+    bench_ecdh_t *data = (bench_ecdh_t*)arg;\n+\n+    for (i = 0; i < 20000; i++) {\n+        CHECK(secp256k1_ecdh(data->ctx, res, &data->point, data->scalar) == 1);\n+    }\n+}\n+\n+int main(void) {\n+    bench_ecdh_t data;\n+\n+    run_benchmark(\"ecdh\", bench_ecdh, bench_ecdh_setup, NULL, &data, 10, 20000);\n+    return 0;\n+}"
      },
      {
        "sha": "7809f5f8cfeb4b6c53992382ada119de2ca550d1",
        "filename": "src/secp256k1/src/bench_internal.c",
        "status": "modified",
        "additions": 49,
        "deletions": 13,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_internal.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_internal.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/bench_internal.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -13,15 +13,17 @@\n #include \"field_impl.h\"\n #include \"group_impl.h\"\n #include \"scalar_impl.h\"\n+#include \"ecmult_const_impl.h\"\n #include \"ecmult_impl.h\"\n #include \"bench.h\"\n+#include \"secp256k1.c\"\n \n typedef struct {\n-    secp256k1_scalar_t scalar_x, scalar_y;\n-    secp256k1_fe_t fe_x, fe_y;\n-    secp256k1_ge_t ge_x, ge_y;\n-    secp256k1_gej_t gej_x, gej_y;\n-    unsigned char data[32];\n+    secp256k1_scalar scalar_x, scalar_y;\n+    secp256k1_fe fe_x, fe_y;\n+    secp256k1_ge ge_x, ge_y;\n+    secp256k1_gej gej_x, gej_y;\n+    unsigned char data[64];\n     int wnaf[256];\n } bench_inv_t;\n \n@@ -51,6 +53,7 @@ void bench_setup(void* arg) {\n     secp256k1_gej_set_ge(&data->gej_x, &data->ge_x);\n     secp256k1_gej_set_ge(&data->gej_y, &data->ge_y);\n     memcpy(data->data, init_x, 32);\n+    memcpy(data->data + 32, init_y, 32);\n }\n \n void bench_scalar_add(void* arg) {\n@@ -95,8 +98,8 @@ void bench_scalar_split(void* arg) {\n     bench_inv_t *data = (bench_inv_t*)arg;\n \n     for (i = 0; i < 20000; i++) {\n-        secp256k1_scalar_t l, r;\n-        secp256k1_scalar_split_lambda_var(&l, &r, &data->scalar_x);\n+        secp256k1_scalar l, r;\n+        secp256k1_scalar_split_lambda(&l, &r, &data->scalar_x);\n         secp256k1_scalar_add(&data->scalar_x, &data->scalar_x, &data->scalar_y);\n     }\n }\n@@ -193,7 +196,7 @@ void bench_group_double_var(void* arg) {\n     bench_inv_t *data = (bench_inv_t*)arg;\n \n     for (i = 0; i < 200000; i++) {\n-        secp256k1_gej_double_var(&data->gej_x, &data->gej_x);\n+        secp256k1_gej_double_var(&data->gej_x, &data->gej_x, NULL);\n     }\n }\n \n@@ -202,7 +205,7 @@ void bench_group_add_var(void* arg) {\n     bench_inv_t *data = (bench_inv_t*)arg;\n \n     for (i = 0; i < 200000; i++) {\n-        secp256k1_gej_add_var(&data->gej_x, &data->gej_x, &data->gej_y);\n+        secp256k1_gej_add_var(&data->gej_x, &data->gej_x, &data->gej_y, NULL);\n     }\n }\n \n@@ -220,7 +223,7 @@ void bench_group_add_affine_var(void* arg) {\n     bench_inv_t *data = (bench_inv_t*)arg;\n \n     for (i = 0; i < 200000; i++) {\n-        secp256k1_gej_add_ge_var(&data->gej_x, &data->gej_x, &data->ge_y);\n+        secp256k1_gej_add_ge_var(&data->gej_x, &data->gej_x, &data->ge_y, NULL);\n     }\n }\n \n@@ -229,7 +232,17 @@ void bench_ecmult_wnaf(void* arg) {\n     bench_inv_t *data = (bench_inv_t*)arg;\n \n     for (i = 0; i < 20000; i++) {\n-        secp256k1_ecmult_wnaf(data->wnaf, &data->scalar_x, WINDOW_A);\n+        secp256k1_ecmult_wnaf(data->wnaf, 256, &data->scalar_x, WINDOW_A);\n+        secp256k1_scalar_add(&data->scalar_x, &data->scalar_x, &data->scalar_y);\n+    }\n+}\n+\n+void bench_wnaf_const(void* arg) {\n+    int i;\n+    bench_inv_t *data = (bench_inv_t*)arg;\n+\n+    for (i = 0; i < 20000; i++) {\n+        secp256k1_wnaf_const(data->wnaf, data->scalar_x, WINDOW_A);\n         secp256k1_scalar_add(&data->scalar_x, &data->scalar_x, &data->scalar_y);\n     }\n }\n@@ -265,11 +278,27 @@ void bench_rfc6979_hmac_sha256(void* arg) {\n     secp256k1_rfc6979_hmac_sha256_t rng;\n \n     for (i = 0; i < 20000; i++) {\n-        secp256k1_rfc6979_hmac_sha256_initialize(&rng, data->data, 32, data->data, 32, NULL, 0);\n+        secp256k1_rfc6979_hmac_sha256_initialize(&rng, data->data, 64);\n         secp256k1_rfc6979_hmac_sha256_generate(&rng, data->data, 32);\n     }\n }\n \n+void bench_context_verify(void* arg) {\n+    int i;\n+    (void)arg;\n+    for (i = 0; i < 20; i++) {\n+        secp256k1_context_destroy(secp256k1_context_create(SECP256K1_CONTEXT_VERIFY));\n+    }\n+}\n+\n+void bench_context_sign(void* arg) {\n+    int i;\n+    (void)arg;\n+    for (i = 0; i < 200; i++) {\n+        secp256k1_context_destroy(secp256k1_context_create(SECP256K1_CONTEXT_SIGN));\n+    }\n+}\n+\n \n int have_flag(int argc, char** argv, char *flag) {\n     char** argm = argv + argc;\n@@ -278,7 +307,9 @@ int have_flag(int argc, char** argv, char *flag) {\n         return 1;\n     }\n     while (argv != NULL && argv != argm) {\n-        if (strcmp(*argv, flag) == 0) return 1;\n+        if (strcmp(*argv, flag) == 0) {\n+            return 1;\n+        }\n         argv++;\n     }\n     return 0;\n@@ -309,10 +340,15 @@ int main(int argc, char **argv) {\n     if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine\", bench_group_add_affine, bench_setup, NULL, &data, 10, 200000);\n     if (have_flag(argc, argv, \"group\") || have_flag(argc, argv, \"add\")) run_benchmark(\"group_add_affine_var\", bench_group_add_affine_var, bench_setup, NULL, &data, 10, 200000);\n \n+    if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"wnaf_const\", bench_wnaf_const, bench_setup, NULL, &data, 10, 20000);\n     if (have_flag(argc, argv, \"ecmult\") || have_flag(argc, argv, \"wnaf\")) run_benchmark(\"ecmult_wnaf\", bench_ecmult_wnaf, bench_setup, NULL, &data, 10, 20000);\n \n     if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"sha256\")) run_benchmark(\"hash_sha256\", bench_sha256, bench_setup, NULL, &data, 10, 20000);\n     if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"hmac\")) run_benchmark(\"hash_hmac_sha256\", bench_hmac_sha256, bench_setup, NULL, &data, 10, 20000);\n     if (have_flag(argc, argv, \"hash\") || have_flag(argc, argv, \"rng6979\")) run_benchmark(\"hash_rfc6979_hmac_sha256\", bench_rfc6979_hmac_sha256, bench_setup, NULL, &data, 10, 20000);\n+\n+    if (have_flag(argc, argv, \"context\") || have_flag(argc, argv, \"verify\")) run_benchmark(\"context_verify\", bench_context_verify, bench_setup, NULL, &data, 10, 20);\n+    if (have_flag(argc, argv, \"context\") || have_flag(argc, argv, \"sign\")) run_benchmark(\"context_sign\", bench_context_sign, bench_setup, NULL, &data, 10, 200);\n+\n     return 0;\n }"
      },
      {
        "sha": "6489378cc64ab46f79c0c35f556625ab46f5b195",
        "filename": "src/secp256k1/src/bench_recover.c",
        "status": "modified",
        "additions": 17,
        "deletions": 8,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_recover.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_recover.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/bench_recover.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -1,32 +1,37 @@\n /**********************************************************************\n- * Copyright (c) 2014 Pieter Wuille                                   *\n+ * Copyright (c) 2014-2015 Pieter Wuille                              *\n  * Distributed under the MIT software license, see the accompanying   *\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n #include \"include/secp256k1.h\"\n+#include \"include/secp256k1_recovery.h\"\n #include \"util.h\"\n #include \"bench.h\"\n \n typedef struct {\n-    secp256k1_context_t *ctx;\n+    secp256k1_context *ctx;\n     unsigned char msg[32];\n     unsigned char sig[64];\n } bench_recover_t;\n \n void bench_recover(void* arg) {\n     int i;\n     bench_recover_t *data = (bench_recover_t*)arg;\n-    unsigned char pubkey[33];\n+    secp256k1_pubkey pubkey;\n+    unsigned char pubkeyc[33];\n \n     for (i = 0; i < 20000; i++) {\n         int j;\n-        int pubkeylen = 33;\n-        CHECK(secp256k1_ecdsa_recover_compact(data->ctx, data->msg, data->sig, pubkey, &pubkeylen, 1, i % 2));\n+        size_t pubkeylen = 33;\n+        secp256k1_ecdsa_recoverable_signature sig;\n+        CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(data->ctx, &sig, data->sig, i % 2));\n+        CHECK(secp256k1_ecdsa_recover(data->ctx, &pubkey, &sig, data->msg));\n+        CHECK(secp256k1_ec_pubkey_serialize(data->ctx, pubkeyc, &pubkeylen, &pubkey, SECP256K1_EC_COMPRESSED));\n         for (j = 0; j < 32; j++) {\n             data->sig[j + 32] = data->msg[j];    /* Move former message to S. */\n             data->msg[j] = data->sig[j];         /* Move former R to message. */\n-            data->sig[j] = pubkey[j + 1];        /* Move recovered pubkey X coordinate to R (which must be a valid X coordinate). */\n+            data->sig[j] = pubkeyc[j + 1];       /* Move recovered pubkey X coordinate to R (which must be a valid X coordinate). */\n         }\n     }\n }\n@@ -35,8 +40,12 @@ void bench_recover_setup(void* arg) {\n     int i;\n     bench_recover_t *data = (bench_recover_t*)arg;\n \n-    for (i = 0; i < 32; i++) data->msg[i] = 1 + i;\n-    for (i = 0; i < 64; i++) data->sig[i] = 65 + i;\n+    for (i = 0; i < 32; i++) {\n+        data->msg[i] = 1 + i;\n+    }\n+    for (i = 0; i < 64; i++) {\n+        data->sig[i] = 65 + i;\n+    }\n }\n \n int main(void) {"
      },
      {
        "sha": "5f137dda23ef3a62326a6aee21cd152fa09860da",
        "filename": "src/secp256k1/src/bench_schnorr_verify.c",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_schnorr_verify.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_schnorr_verify.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/bench_schnorr_verify.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,73 @@\n+/**********************************************************************\n+ * Copyright (c) 2014 Pieter Wuille                                   *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#include <stdio.h>\n+#include <string.h>\n+\n+#include \"include/secp256k1.h\"\n+#include \"include/secp256k1_schnorr.h\"\n+#include \"util.h\"\n+#include \"bench.h\"\n+\n+typedef struct {\n+    unsigned char key[32];\n+    unsigned char sig[64];\n+    unsigned char pubkey[33];\n+    size_t pubkeylen;\n+} benchmark_schnorr_sig_t;\n+\n+typedef struct {\n+    secp256k1_context *ctx;\n+    unsigned char msg[32];\n+    benchmark_schnorr_sig_t sigs[64];\n+    int numsigs;\n+} benchmark_schnorr_verify_t;\n+\n+static void benchmark_schnorr_init(void* arg) {\n+    int i, k;\n+    benchmark_schnorr_verify_t* data = (benchmark_schnorr_verify_t*)arg;\n+\n+    for (i = 0; i < 32; i++) {\n+        data->msg[i] = 1 + i;\n+    }\n+    for (k = 0; k < data->numsigs; k++) {\n+        secp256k1_pubkey pubkey;\n+        for (i = 0; i < 32; i++) {\n+            data->sigs[k].key[i] = 33 + i + k;\n+        }\n+        secp256k1_schnorr_sign(data->ctx, data->sigs[k].sig, data->msg, data->sigs[k].key, NULL, NULL);\n+        data->sigs[k].pubkeylen = 33;\n+        CHECK(secp256k1_ec_pubkey_create(data->ctx, &pubkey, data->sigs[k].key));\n+        CHECK(secp256k1_ec_pubkey_serialize(data->ctx, data->sigs[k].pubkey, &data->sigs[k].pubkeylen, &pubkey, SECP256K1_EC_COMPRESSED));\n+    }\n+}\n+\n+static void benchmark_schnorr_verify(void* arg) {\n+    int i;\n+    benchmark_schnorr_verify_t* data = (benchmark_schnorr_verify_t*)arg;\n+\n+    for (i = 0; i < 20000 / data->numsigs; i++) {\n+        secp256k1_pubkey pubkey;\n+        data->sigs[0].sig[(i >> 8) % 64] ^= (i & 0xFF);\n+        CHECK(secp256k1_ec_pubkey_parse(data->ctx, &pubkey, data->sigs[0].pubkey, data->sigs[0].pubkeylen));\n+        CHECK(secp256k1_schnorr_verify(data->ctx, data->sigs[0].sig, data->msg, &pubkey) == ((i & 0xFF) == 0));\n+        data->sigs[0].sig[(i >> 8) % 64] ^= (i & 0xFF);\n+    }\n+}\n+\n+\n+\n+int main(void) {\n+    benchmark_schnorr_verify_t data;\n+\n+    data.ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    data.numsigs = 1;\n+    run_benchmark(\"schnorr_verify\", benchmark_schnorr_verify, benchmark_schnorr_init, NULL, &data, 10, 20000);\n+\n+    secp256k1_context_destroy(data.ctx);\n+    return 0;\n+}"
      },
      {
        "sha": "ed7224d757e417cb324a3b2e15f0f3268fe68d3a",
        "filename": "src/secp256k1/src/bench_sign.c",
        "status": "modified",
        "additions": 14,
        "deletions": 8,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_sign.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_sign.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/bench_sign.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -9,7 +9,7 @@\n #include \"bench.h\"\n \n typedef struct {\n-    secp256k1_context_t* ctx;\n+    secp256k1_context* ctx;\n     unsigned char msg[32];\n     unsigned char key[32];\n } bench_sign_t;\n@@ -18,22 +18,28 @@ static void bench_sign_setup(void* arg) {\n     int i;\n     bench_sign_t *data = (bench_sign_t*)arg;\n \n-    for (i = 0; i < 32; i++) data->msg[i] = i + 1;\n-    for (i = 0; i < 32; i++) data->key[i] = i + 65;\n+    for (i = 0; i < 32; i++) {\n+        data->msg[i] = i + 1;\n+    }\n+    for (i = 0; i < 32; i++) {\n+        data->key[i] = i + 65;\n+    }\n }\n \n static void bench_sign(void* arg) {\n     int i;\n     bench_sign_t *data = (bench_sign_t*)arg;\n \n-    unsigned char sig[64];\n+    unsigned char sig[74];\n     for (i = 0; i < 20000; i++) {\n+        size_t siglen = 74;\n         int j;\n-        int recid = 0;\n-        CHECK(secp256k1_ecdsa_sign_compact(data->ctx, data->msg, sig, data->key, NULL, NULL, &recid));\n+        secp256k1_ecdsa_signature signature;\n+        CHECK(secp256k1_ecdsa_sign(data->ctx, &signature, data->msg, data->key, NULL, NULL));\n+        CHECK(secp256k1_ecdsa_signature_serialize_der(data->ctx, sig, &siglen, &signature));\n         for (j = 0; j < 32; j++) {\n-            data->msg[j] = sig[j];             /* Move former R to message. */\n-            data->key[j] = sig[j + 32];        /* Move former S to key.     */\n+            data->msg[j] = sig[j];\n+            data->key[j] = sig[j + 32];\n         }\n     }\n }"
      },
      {
        "sha": "5718320cda29888f442a77bebbeea649fc092ece",
        "filename": "src/secp256k1/src/bench_verify.c",
        "status": "modified",
        "additions": 20,
        "deletions": 8,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_verify.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/bench_verify.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/bench_verify.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -12,24 +12,28 @@\n #include \"bench.h\"\n \n typedef struct {\n-    secp256k1_context_t *ctx;\n+    secp256k1_context *ctx;\n     unsigned char msg[32];\n     unsigned char key[32];\n     unsigned char sig[72];\n-    int siglen;\n+    size_t siglen;\n     unsigned char pubkey[33];\n-    int pubkeylen;\n+    size_t pubkeylen;\n } benchmark_verify_t;\n \n static void benchmark_verify(void* arg) {\n     int i;\n     benchmark_verify_t* data = (benchmark_verify_t*)arg;\n \n     for (i = 0; i < 20000; i++) {\n+        secp256k1_pubkey pubkey;\n+        secp256k1_ecdsa_signature sig;\n         data->sig[data->siglen - 1] ^= (i & 0xFF);\n         data->sig[data->siglen - 2] ^= ((i >> 8) & 0xFF);\n         data->sig[data->siglen - 3] ^= ((i >> 16) & 0xFF);\n-        CHECK(secp256k1_ecdsa_verify(data->ctx, data->msg, data->sig, data->siglen, data->pubkey, data->pubkeylen) == (i == 0));\n+        CHECK(secp256k1_ec_pubkey_parse(data->ctx, &pubkey, data->pubkey, data->pubkeylen) == 1);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(data->ctx, &sig, data->sig, data->siglen) == 1);\n+        CHECK(secp256k1_ecdsa_verify(data->ctx, &sig, data->msg, &pubkey) == (i == 0));\n         data->sig[data->siglen - 1] ^= (i & 0xFF);\n         data->sig[data->siglen - 2] ^= ((i >> 8) & 0xFF);\n         data->sig[data->siglen - 3] ^= ((i >> 16) & 0xFF);\n@@ -38,16 +42,24 @@ static void benchmark_verify(void* arg) {\n \n int main(void) {\n     int i;\n+    secp256k1_pubkey pubkey;\n+    secp256k1_ecdsa_signature sig;\n     benchmark_verify_t data;\n \n     data.ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n \n-    for (i = 0; i < 32; i++) data.msg[i] = 1 + i;\n-    for (i = 0; i < 32; i++) data.key[i] = 33 + i;\n+    for (i = 0; i < 32; i++) {\n+        data.msg[i] = 1 + i;\n+    }\n+    for (i = 0; i < 32; i++) {\n+        data.key[i] = 33 + i;\n+    }\n     data.siglen = 72;\n-    secp256k1_ecdsa_sign(data.ctx, data.msg, data.sig, &data.siglen, data.key, NULL, NULL);\n+    CHECK(secp256k1_ecdsa_sign(data.ctx, &sig, data.msg, data.key, NULL, NULL));\n+    CHECK(secp256k1_ecdsa_signature_serialize_der(data.ctx, data.sig, &data.siglen, &sig));\n+    CHECK(secp256k1_ec_pubkey_create(data.ctx, &pubkey, data.key));\n     data.pubkeylen = 33;\n-    CHECK(secp256k1_ec_pubkey_create(data.ctx, data.pubkey, &data.pubkeylen, data.key, 1));\n+    CHECK(secp256k1_ec_pubkey_serialize(data.ctx, data.pubkey, &data.pubkeylen, &pubkey, SECP256K1_EC_COMPRESSED) == 1);\n \n     run_benchmark(\"ecdsa_verify\", benchmark_verify, NULL, NULL, &data, 10, 20000);\n "
      },
      {
        "sha": "54ae101b924138552080eb3fd088654ec481f6a3",
        "filename": "src/secp256k1/src/ecdsa.h",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecdsa.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecdsa.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecdsa.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -7,18 +7,15 @@\n #ifndef _SECP256K1_ECDSA_\n #define _SECP256K1_ECDSA_\n \n+#include <stddef.h>\n+\n #include \"scalar.h\"\n #include \"group.h\"\n #include \"ecmult.h\"\n \n-typedef struct {\n-    secp256k1_scalar_t r, s;\n-} secp256k1_ecdsa_sig_t;\n-\n-static int secp256k1_ecdsa_sig_parse(secp256k1_ecdsa_sig_t *r, const unsigned char *sig, int size);\n-static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, int *size, const secp256k1_ecdsa_sig_t *a);\n-static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context_t *ctx, const secp256k1_ecdsa_sig_t *sig, const secp256k1_ge_t *pubkey, const secp256k1_scalar_t *message);\n-static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context_t *ctx, secp256k1_ecdsa_sig_t *sig, const secp256k1_scalar_t *seckey, const secp256k1_scalar_t *message, const secp256k1_scalar_t *nonce, int *recid);\n-static int secp256k1_ecdsa_sig_recover(const secp256k1_ecmult_context_t *ctx, const secp256k1_ecdsa_sig_t *sig, secp256k1_ge_t *pubkey, const secp256k1_scalar_t *message, int recid);\n+static int secp256k1_ecdsa_sig_parse(secp256k1_scalar *r, secp256k1_scalar *s, const unsigned char *sig, size_t size);\n+static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, size_t *size, const secp256k1_scalar *r, const secp256k1_scalar *s);\n+static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context *ctx, const secp256k1_scalar* r, const secp256k1_scalar* s, const secp256k1_ge *pubkey, const secp256k1_scalar *message);\n+static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, secp256k1_scalar* r, secp256k1_scalar* s, const secp256k1_scalar *seckey, const secp256k1_scalar *message, const secp256k1_scalar *nonce, int *recid);\n \n #endif"
      },
      {
        "sha": "d110b4bb1dcf33f5f9f73a20e03cd853a2ef0b0e",
        "filename": "src/secp256k1/src/ecdsa_impl.h",
        "status": "modified",
        "additions": 142,
        "deletions": 102,
        "changes": 244,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecdsa_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecdsa_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecdsa_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -1,5 +1,5 @@\n /**********************************************************************\n- * Copyright (c) 2013, 2014 Pieter Wuille                               *\n+ * Copyright (c) 2013-2015 Pieter Wuille                              *\n  * Distributed under the MIT software license, see the accompanying   *\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n@@ -28,7 +28,7 @@\n  *  sage: '%x' % (EllipticCurve ([F (a), F (b)]).order())\n  *   'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'\n  */\n-static const secp256k1_fe_t secp256k1_ecdsa_const_order_as_fe = SECP256K1_FE_CONST(\n+static const secp256k1_fe secp256k1_ecdsa_const_order_as_fe = SECP256K1_FE_CONST(\n     0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFEUL,\n     0xBAAEDCE6UL, 0xAF48A03BUL, 0xBFD25E8CUL, 0xD0364141UL\n );\n@@ -42,82 +42,150 @@ static const secp256k1_fe_t secp256k1_ecdsa_const_order_as_fe = SECP256K1_FE_CON\n  *  sage: '%x' % (p - EllipticCurve ([F (a), F (b)]).order())\n  *   '14551231950b75fc4402da1722fc9baee'\n  */\n-static const secp256k1_fe_t secp256k1_ecdsa_const_p_minus_order = SECP256K1_FE_CONST(\n+static const secp256k1_fe secp256k1_ecdsa_const_p_minus_order = SECP256K1_FE_CONST(\n     0, 0, 0, 1, 0x45512319UL, 0x50B75FC4UL, 0x402DA172UL, 0x2FC9BAEEUL\n );\n \n-static int secp256k1_ecdsa_sig_parse(secp256k1_ecdsa_sig_t *r, const unsigned char *sig, int size) {\n-    unsigned char ra[32] = {0}, sa[32] = {0};\n-    const unsigned char *rp;\n-    const unsigned char *sp;\n-    int lenr;\n-    int lens;\n-    int overflow;\n-    if (sig[0] != 0x30) {\n-        return 0;\n+static int secp256k1_der_read_len(const unsigned char **sigp, const unsigned char *sigend) {\n+    int lenleft, b1;\n+    size_t ret = 0;\n+    if (*sigp >= sigend) {\n+        return -1;\n     }\n-    lenr = sig[3];\n-    if (5+lenr >= size) {\n-        return 0;\n+    b1 = *((*sigp)++);\n+    if (b1 == 0xFF) {\n+        /* X.690-0207 8.1.3.5.c the value 0xFF shall not be used. */\n+        return -1;\n     }\n-    lens = sig[lenr+5];\n-    if (sig[1] != lenr+lens+4) {\n-        return 0;\n+    if ((b1 & 0x80) == 0) {\n+        /* X.690-0207 8.1.3.4 short form length octets */\n+        return b1;\n     }\n-    if (lenr+lens+6 > size) {\n-        return 0;\n+    if (b1 == 0x80) {\n+        /* Indefinite length is not allowed in DER. */\n+        return -1;\n+    }\n+    /* X.690-207 8.1.3.5 long form length octets */\n+    lenleft = b1 & 0x7F;\n+    if (lenleft > sigend - *sigp) {\n+        return -1;\n+    }\n+    if (**sigp == 0) {\n+        /* Not the shortest possible length encoding. */\n+        return -1;\n+    }\n+    if ((size_t)lenleft > sizeof(size_t)) {\n+        /* The resulting length would exceed the range of a size_t, so\n+         * certainly longer than the passed array size.\n+         */\n+        return -1;\n+    }\n+    while (lenleft > 0) {\n+        if ((ret >> ((sizeof(size_t) - 1) * 8)) != 0) {\n+        }\n+        ret = (ret << 8) | **sigp;\n+        if (ret + lenleft > (size_t)(sigend - *sigp)) {\n+            /* Result exceeds the length of the passed array. */\n+            return -1;\n+        }\n+        (*sigp)++;\n+        lenleft--;\n+    }\n+    if (ret < 128) {\n+        /* Not the shortest possible length encoding. */\n+        return -1;\n     }\n-    if (sig[2] != 0x02) {\n+    return ret;\n+}\n+\n+static int secp256k1_der_parse_integer(secp256k1_scalar *r, const unsigned char **sig, const unsigned char *sigend) {\n+    int overflow = 0;\n+    unsigned char ra[32] = {0};\n+    int rlen;\n+\n+    if (*sig == sigend || **sig != 0x02) {\n+        /* Not a primitive integer (X.690-0207 8.3.1). */\n         return 0;\n     }\n-    if (lenr == 0) {\n+    (*sig)++;\n+    rlen = secp256k1_der_read_len(sig, sigend);\n+    if (rlen <= 0 || (*sig) + rlen > sigend) {\n+        /* Exceeds bounds or not at least length 1 (X.690-0207 8.3.1).  */\n         return 0;\n     }\n-    if (sig[lenr+4] != 0x02) {\n+    if (**sig == 0x00 && rlen > 1 && (((*sig)[1]) & 0x80) == 0x00) {\n+        /* Excessive 0x00 padding. */\n         return 0;\n     }\n-    if (lens == 0) {\n+    if (**sig == 0xFF && rlen > 1 && (((*sig)[1]) & 0x80) == 0x80) {\n+        /* Excessive 0xFF padding. */\n         return 0;\n     }\n-    sp = sig + 6 + lenr;\n-    while (lens > 0 && sp[0] == 0) {\n-        lens--;\n-        sp++;\n+    if ((**sig & 0x80) == 0x80) {\n+        /* Negative. */\n+        overflow = 1;\n+    }\n+    while (rlen > 0 && **sig == 0) {\n+        /* Skip leading zero bytes */\n+        rlen--;\n+        (*sig)++;\n     }\n-    if (lens > 32) {\n+    if (rlen > 32) {\n+        overflow = 1;\n+    }\n+    if (!overflow) {\n+        memcpy(ra + 32 - rlen, *sig, rlen);\n+        secp256k1_scalar_set_b32(r, ra, &overflow);\n+    }\n+    if (overflow) {\n+        secp256k1_scalar_set_int(r, 0);\n+    }\n+    (*sig) += rlen;\n+    return 1;\n+}\n+\n+static int secp256k1_ecdsa_sig_parse(secp256k1_scalar *rr, secp256k1_scalar *rs, const unsigned char *sig, size_t size) {\n+    const unsigned char *sigend = sig + size;\n+    int rlen;\n+    if (sig == sigend || *(sig++) != 0x30) {\n+        /* The encoding doesn't start with a constructed sequence (X.690-0207 8.9.1). */\n         return 0;\n     }\n-    rp = sig + 4;\n-    while (lenr > 0 && rp[0] == 0) {\n-        lenr--;\n-        rp++;\n+    rlen = secp256k1_der_read_len(&sig, sigend);\n+    if (rlen < 0 || sig + rlen > sigend) {\n+        /* Tuple exceeds bounds */\n+        return 0;\n     }\n-    if (lenr > 32) {\n+    if (sig + rlen != sigend) {\n+        /* Garbage after tuple. */\n         return 0;\n     }\n-    memcpy(ra + 32 - lenr, rp, lenr);\n-    memcpy(sa + 32 - lens, sp, lens);\n-    overflow = 0;\n-    secp256k1_scalar_set_b32(&r->r, ra, &overflow);\n-    if (overflow) {\n+\n+    if (!secp256k1_der_parse_integer(rr, &sig, sigend)) {\n         return 0;\n     }\n-    secp256k1_scalar_set_b32(&r->s, sa, &overflow);\n-    if (overflow) {\n+    if (!secp256k1_der_parse_integer(rs, &sig, sigend)) {\n         return 0;\n     }\n+\n+    if (sig != sigend) {\n+        /* Trailing garbage inside tuple. */\n+        return 0;\n+    }\n+\n     return 1;\n }\n \n-static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, int *size, const secp256k1_ecdsa_sig_t *a) {\n+static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, size_t *size, const secp256k1_scalar* ar, const secp256k1_scalar* as) {\n     unsigned char r[33] = {0}, s[33] = {0};\n     unsigned char *rp = r, *sp = s;\n-    int lenR = 33, lenS = 33;\n-    secp256k1_scalar_get_b32(&r[1], &a->r);\n-    secp256k1_scalar_get_b32(&s[1], &a->s);\n+    size_t lenR = 33, lenS = 33;\n+    secp256k1_scalar_get_b32(&r[1], ar);\n+    secp256k1_scalar_get_b32(&s[1], as);\n     while (lenR > 1 && rp[0] == 0 && rp[1] < 0x80) { lenR--; rp++; }\n     while (lenS > 1 && sp[0] == 0 && sp[1] < 0x80) { lenS--; sp++; }\n     if (*size < 6+lenS+lenR) {\n+        *size = 6 + lenS + lenR;\n         return 0;\n     }\n     *size = 6 + lenS + lenR;\n@@ -132,26 +200,26 @@ static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, int *size, const se\n     return 1;\n }\n \n-static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context_t *ctx, const secp256k1_ecdsa_sig_t *sig, const secp256k1_ge_t *pubkey, const secp256k1_scalar_t *message) {\n+static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context *ctx, const secp256k1_scalar *sigr, const secp256k1_scalar *sigs, const secp256k1_ge *pubkey, const secp256k1_scalar *message) {\n     unsigned char c[32];\n-    secp256k1_scalar_t sn, u1, u2;\n-    secp256k1_fe_t xr;\n-    secp256k1_gej_t pubkeyj;\n-    secp256k1_gej_t pr;\n+    secp256k1_scalar sn, u1, u2;\n+    secp256k1_fe xr;\n+    secp256k1_gej pubkeyj;\n+    secp256k1_gej pr;\n \n-    if (secp256k1_scalar_is_zero(&sig->r) || secp256k1_scalar_is_zero(&sig->s)) {\n+    if (secp256k1_scalar_is_zero(sigr) || secp256k1_scalar_is_zero(sigs)) {\n         return 0;\n     }\n \n-    secp256k1_scalar_inverse_var(&sn, &sig->s);\n+    secp256k1_scalar_inverse_var(&sn, sigs);\n     secp256k1_scalar_mul(&u1, &sn, message);\n-    secp256k1_scalar_mul(&u2, &sn, &sig->r);\n+    secp256k1_scalar_mul(&u2, &sn, sigr);\n     secp256k1_gej_set_ge(&pubkeyj, pubkey);\n     secp256k1_ecmult(ctx, &pr, &pubkeyj, &u2, &u1);\n     if (secp256k1_gej_is_infinity(&pr)) {\n         return 0;\n     }\n-    secp256k1_scalar_get_b32(c, &sig->r);\n+    secp256k1_scalar_get_b32(c, sigr);\n     secp256k1_fe_set_b32(&xr, c);\n \n     /** We now have the recomputed R point in pr, and its claimed x coordinate (modulo n)\n@@ -171,11 +239,11 @@ static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context_t *ctx, con\n      *  secp256k1_gej_eq_x implements the (xr * pr.z^2 mod p == pr.x) test.\n      */\n     if (secp256k1_gej_eq_x_var(&xr, &pr)) {\n-        /* xr.x == xr * xr.z^2 mod p, so the signature is valid. */\n+        /* xr * pr.z^2 mod p == pr.x, so the signature is valid. */\n         return 1;\n     }\n     if (secp256k1_fe_cmp_var(&xr, &secp256k1_ecdsa_const_p_minus_order) >= 0) {\n-        /* xr + p >= n, so we can skip testing the second case. */\n+        /* xr + n >= p, so we can skip testing the second case. */\n         return 0;\n     }\n     secp256k1_fe_add(&xr, &secp256k1_ecdsa_const_order_as_fe);\n@@ -186,73 +254,45 @@ static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context_t *ctx, con\n     return 0;\n }\n \n-static int secp256k1_ecdsa_sig_recover(const secp256k1_ecmult_context_t *ctx, const secp256k1_ecdsa_sig_t *sig, secp256k1_ge_t *pubkey, const secp256k1_scalar_t *message, int recid) {\n-    unsigned char brx[32];\n-    secp256k1_fe_t fx;\n-    secp256k1_ge_t x;\n-    secp256k1_gej_t xj;\n-    secp256k1_scalar_t rn, u1, u2;\n-    secp256k1_gej_t qj;\n-\n-    if (secp256k1_scalar_is_zero(&sig->r) || secp256k1_scalar_is_zero(&sig->s)) {\n-        return 0;\n-    }\n-\n-    secp256k1_scalar_get_b32(brx, &sig->r);\n-    VERIFY_CHECK(secp256k1_fe_set_b32(&fx, brx)); /* brx comes from a scalar, so is less than the order; certainly less than p */\n-    if (recid & 2) {\n-        if (secp256k1_fe_cmp_var(&fx, &secp256k1_ecdsa_const_p_minus_order) >= 0) {\n-            return 0;\n-        }\n-        secp256k1_fe_add(&fx, &secp256k1_ecdsa_const_order_as_fe);\n-    }\n-    if (!secp256k1_ge_set_xo_var(&x, &fx, recid & 1)) {\n-        return 0;\n-    }\n-    secp256k1_gej_set_ge(&xj, &x);\n-    secp256k1_scalar_inverse_var(&rn, &sig->r);\n-    secp256k1_scalar_mul(&u1, &rn, message);\n-    secp256k1_scalar_negate(&u1, &u1);\n-    secp256k1_scalar_mul(&u2, &rn, &sig->s);\n-    secp256k1_ecmult(ctx, &qj, &xj, &u2, &u1);\n-    secp256k1_ge_set_gej_var(pubkey, &qj);\n-    return !secp256k1_gej_is_infinity(&qj);\n-}\n-\n-static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context_t *ctx, secp256k1_ecdsa_sig_t *sig, const secp256k1_scalar_t *seckey, const secp256k1_scalar_t *message, const secp256k1_scalar_t *nonce, int *recid) {\n+static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, secp256k1_scalar *sigr, secp256k1_scalar *sigs, const secp256k1_scalar *seckey, const secp256k1_scalar *message, const secp256k1_scalar *nonce, int *recid) {\n     unsigned char b[32];\n-    secp256k1_gej_t rp;\n-    secp256k1_ge_t r;\n-    secp256k1_scalar_t n;\n+    secp256k1_gej rp;\n+    secp256k1_ge r;\n+    secp256k1_scalar n;\n     int overflow = 0;\n \n     secp256k1_ecmult_gen(ctx, &rp, nonce);\n     secp256k1_ge_set_gej(&r, &rp);\n     secp256k1_fe_normalize(&r.x);\n     secp256k1_fe_normalize(&r.y);\n     secp256k1_fe_get_b32(b, &r.x);\n-    secp256k1_scalar_set_b32(&sig->r, b, &overflow);\n-    if (secp256k1_scalar_is_zero(&sig->r)) {\n-        /* P.x = order is on the curve, so technically sig->r could end up zero, which would be an invalid signature. */\n+    secp256k1_scalar_set_b32(sigr, b, &overflow);\n+    if (secp256k1_scalar_is_zero(sigr)) {\n+        /* P.x = order is on the curve, so technically sig->r could end up zero, which would be an invalid signature.\n+         * This branch is cryptographically unreachable as hitting it requires finding the discrete log of P.x = N.\n+         */\n         secp256k1_gej_clear(&rp);\n         secp256k1_ge_clear(&r);\n         return 0;\n     }\n     if (recid) {\n+        /* The overflow condition is cryptographically unreachable as hitting it requires finding the discrete log\n+         * of some P where P.x >= order, and only 1 in about 2^127 points meet this criteria.\n+         */\n         *recid = (overflow ? 2 : 0) | (secp256k1_fe_is_odd(&r.y) ? 1 : 0);\n     }\n-    secp256k1_scalar_mul(&n, &sig->r, seckey);\n+    secp256k1_scalar_mul(&n, sigr, seckey);\n     secp256k1_scalar_add(&n, &n, message);\n-    secp256k1_scalar_inverse(&sig->s, nonce);\n-    secp256k1_scalar_mul(&sig->s, &sig->s, &n);\n+    secp256k1_scalar_inverse(sigs, nonce);\n+    secp256k1_scalar_mul(sigs, sigs, &n);\n     secp256k1_scalar_clear(&n);\n     secp256k1_gej_clear(&rp);\n     secp256k1_ge_clear(&r);\n-    if (secp256k1_scalar_is_zero(&sig->s)) {\n+    if (secp256k1_scalar_is_zero(sigs)) {\n         return 0;\n     }\n-    if (secp256k1_scalar_is_high(&sig->s)) {\n-        secp256k1_scalar_negate(&sig->s, &sig->s);\n+    if (secp256k1_scalar_is_high(sigs)) {\n+        secp256k1_scalar_negate(sigs, sigs);\n         if (recid) {\n             *recid ^= 1;\n         }"
      },
      {
        "sha": "42739a3bea7c08abfbefb6e744a5ad904993ce18",
        "filename": "src/secp256k1/src/eckey.h",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/eckey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/eckey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/eckey.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -7,20 +7,19 @@\n #ifndef _SECP256K1_ECKEY_\n #define _SECP256K1_ECKEY_\n \n+#include <stddef.h>\n+\n #include \"group.h\"\n #include \"scalar.h\"\n #include \"ecmult.h\"\n #include \"ecmult_gen.h\"\n \n-static int secp256k1_eckey_pubkey_parse(secp256k1_ge_t *elem, const unsigned char *pub, int size);\n-static int secp256k1_eckey_pubkey_serialize(secp256k1_ge_t *elem, unsigned char *pub, int *size, int compressed);\n-\n-static int secp256k1_eckey_privkey_parse(secp256k1_scalar_t *key, const unsigned char *privkey, int privkeylen);\n-static int secp256k1_eckey_privkey_serialize(const secp256k1_ecmult_gen_context_t *ctx, unsigned char *privkey, int *privkeylen, const secp256k1_scalar_t *key, int compressed);\n+static int secp256k1_eckey_pubkey_parse(secp256k1_ge *elem, const unsigned char *pub, size_t size);\n+static int secp256k1_eckey_pubkey_serialize(secp256k1_ge *elem, unsigned char *pub, size_t *size, int compressed);\n \n-static int secp256k1_eckey_privkey_tweak_add(secp256k1_scalar_t *key, const secp256k1_scalar_t *tweak);\n-static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context_t *ctx, secp256k1_ge_t *key, const secp256k1_scalar_t *tweak);\n-static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar_t *key, const secp256k1_scalar_t *tweak);\n-static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context_t *ctx, secp256k1_ge_t *key, const secp256k1_scalar_t *tweak);\n+static int secp256k1_eckey_privkey_tweak_add(secp256k1_scalar *key, const secp256k1_scalar *tweak);\n+static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak);\n+static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar *key, const secp256k1_scalar *tweak);\n+static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak);\n \n #endif"
      },
      {
        "sha": "ce38071ac2e599dbb70255ec3b8dbf9deadc5fa0",
        "filename": "src/secp256k1/src/eckey_impl.h",
        "status": "modified",
        "additions": 12,
        "deletions": 115,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/eckey_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/eckey_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/eckey_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -14,12 +14,12 @@\n #include \"group.h\"\n #include \"ecmult_gen.h\"\n \n-static int secp256k1_eckey_pubkey_parse(secp256k1_ge_t *elem, const unsigned char *pub, int size) {\n+static int secp256k1_eckey_pubkey_parse(secp256k1_ge *elem, const unsigned char *pub, size_t size) {\n     if (size == 33 && (pub[0] == 0x02 || pub[0] == 0x03)) {\n-        secp256k1_fe_t x;\n+        secp256k1_fe x;\n         return secp256k1_fe_set_b32(&x, pub+1) && secp256k1_ge_set_xo_var(elem, &x, pub[0] == 0x03);\n     } else if (size == 65 && (pub[0] == 0x04 || pub[0] == 0x06 || pub[0] == 0x07)) {\n-        secp256k1_fe_t x, y;\n+        secp256k1_fe x, y;\n         if (!secp256k1_fe_set_b32(&x, pub+1) || !secp256k1_fe_set_b32(&y, pub+33)) {\n             return 0;\n         }\n@@ -33,7 +33,7 @@ static int secp256k1_eckey_pubkey_parse(secp256k1_ge_t *elem, const unsigned cha\n     }\n }\n \n-static int secp256k1_eckey_pubkey_serialize(secp256k1_ge_t *elem, unsigned char *pub, int *size, int compressed) {\n+static int secp256k1_eckey_pubkey_serialize(secp256k1_ge *elem, unsigned char *pub, size_t *size, int compressed) {\n     if (secp256k1_ge_is_infinity(elem)) {\n         return 0;\n     }\n@@ -51,120 +51,17 @@ static int secp256k1_eckey_pubkey_serialize(secp256k1_ge_t *elem, unsigned char\n     return 1;\n }\n \n-static int secp256k1_eckey_privkey_parse(secp256k1_scalar_t *key, const unsigned char *privkey, int privkeylen) {\n-    unsigned char c[32] = {0};\n-    const unsigned char *end = privkey + privkeylen;\n-    int lenb = 0;\n-    int len = 0;\n-    int overflow = 0;\n-    /* sequence header */\n-    if (end < privkey+1 || *privkey != 0x30) {\n-        return 0;\n-    }\n-    privkey++;\n-    /* sequence length constructor */\n-    if (end < privkey+1 || !(*privkey & 0x80)) {\n-        return 0;\n-    }\n-    lenb = *privkey & ~0x80; privkey++;\n-    if (lenb < 1 || lenb > 2) {\n-        return 0;\n-    }\n-    if (end < privkey+lenb) {\n-        return 0;\n-    }\n-    /* sequence length */\n-    len = privkey[lenb-1] | (lenb > 1 ? privkey[lenb-2] << 8 : 0);\n-    privkey += lenb;\n-    if (end < privkey+len) {\n-        return 0;\n-    }\n-    /* sequence element 0: version number (=1) */\n-    if (end < privkey+3 || privkey[0] != 0x02 || privkey[1] != 0x01 || privkey[2] != 0x01) {\n-        return 0;\n-    }\n-    privkey += 3;\n-    /* sequence element 1: octet string, up to 32 bytes */\n-    if (end < privkey+2 || privkey[0] != 0x04 || privkey[1] > 0x20 || end < privkey+2+privkey[1]) {\n-        return 0;\n-    }\n-    memcpy(c + 32 - privkey[1], privkey + 2, privkey[1]);\n-    secp256k1_scalar_set_b32(key, c, &overflow);\n-    memset(c, 0, 32);\n-    return !overflow;\n-}\n-\n-static int secp256k1_eckey_privkey_serialize(const secp256k1_ecmult_gen_context_t *ctx, unsigned char *privkey, int *privkeylen, const secp256k1_scalar_t *key, int compressed) {\n-    secp256k1_gej_t rp;\n-    secp256k1_ge_t r;\n-    int pubkeylen = 0;\n-    secp256k1_ecmult_gen(ctx, &rp, key);\n-    secp256k1_ge_set_gej(&r, &rp);\n-    if (compressed) {\n-        static const unsigned char begin[] = {\n-            0x30,0x81,0xD3,0x02,0x01,0x01,0x04,0x20\n-        };\n-        static const unsigned char middle[] = {\n-            0xA0,0x81,0x85,0x30,0x81,0x82,0x02,0x01,0x01,0x30,0x2C,0x06,0x07,0x2A,0x86,0x48,\n-            0xCE,0x3D,0x01,0x01,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n-            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n-            0xFF,0xFF,0xFE,0xFF,0xFF,0xFC,0x2F,0x30,0x06,0x04,0x01,0x00,0x04,0x01,0x07,0x04,\n-            0x21,0x02,0x79,0xBE,0x66,0x7E,0xF9,0xDC,0xBB,0xAC,0x55,0xA0,0x62,0x95,0xCE,0x87,\n-            0x0B,0x07,0x02,0x9B,0xFC,0xDB,0x2D,0xCE,0x28,0xD9,0x59,0xF2,0x81,0x5B,0x16,0xF8,\n-            0x17,0x98,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n-            0xFF,0xFF,0xFF,0xFF,0xFE,0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,0xBF,0xD2,0x5E,\n-            0x8C,0xD0,0x36,0x41,0x41,0x02,0x01,0x01,0xA1,0x24,0x03,0x22,0x00\n-        };\n-        unsigned char *ptr = privkey;\n-        memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n-        secp256k1_scalar_get_b32(ptr, key); ptr += 32;\n-        memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n-        if (!secp256k1_eckey_pubkey_serialize(&r, ptr, &pubkeylen, 1)) {\n-            return 0;\n-        }\n-        ptr += pubkeylen;\n-        *privkeylen = ptr - privkey;\n-    } else {\n-        static const unsigned char begin[] = {\n-            0x30,0x82,0x01,0x13,0x02,0x01,0x01,0x04,0x20\n-        };\n-        static const unsigned char middle[] = {\n-            0xA0,0x81,0xA5,0x30,0x81,0xA2,0x02,0x01,0x01,0x30,0x2C,0x06,0x07,0x2A,0x86,0x48,\n-            0xCE,0x3D,0x01,0x01,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n-            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n-            0xFF,0xFF,0xFE,0xFF,0xFF,0xFC,0x2F,0x30,0x06,0x04,0x01,0x00,0x04,0x01,0x07,0x04,\n-            0x41,0x04,0x79,0xBE,0x66,0x7E,0xF9,0xDC,0xBB,0xAC,0x55,0xA0,0x62,0x95,0xCE,0x87,\n-            0x0B,0x07,0x02,0x9B,0xFC,0xDB,0x2D,0xCE,0x28,0xD9,0x59,0xF2,0x81,0x5B,0x16,0xF8,\n-            0x17,0x98,0x48,0x3A,0xDA,0x77,0x26,0xA3,0xC4,0x65,0x5D,0xA4,0xFB,0xFC,0x0E,0x11,\n-            0x08,0xA8,0xFD,0x17,0xB4,0x48,0xA6,0x85,0x54,0x19,0x9C,0x47,0xD0,0x8F,0xFB,0x10,\n-            0xD4,0xB8,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n-            0xFF,0xFF,0xFF,0xFF,0xFE,0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,0xBF,0xD2,0x5E,\n-            0x8C,0xD0,0x36,0x41,0x41,0x02,0x01,0x01,0xA1,0x44,0x03,0x42,0x00\n-        };\n-        unsigned char *ptr = privkey;\n-        memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n-        secp256k1_scalar_get_b32(ptr, key); ptr += 32;\n-        memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n-        if (!secp256k1_eckey_pubkey_serialize(&r, ptr, &pubkeylen, 0)) {\n-            return 0;\n-        }\n-        ptr += pubkeylen;\n-        *privkeylen = ptr - privkey;\n-    }\n-    return 1;\n-}\n-\n-static int secp256k1_eckey_privkey_tweak_add(secp256k1_scalar_t *key, const secp256k1_scalar_t *tweak) {\n+static int secp256k1_eckey_privkey_tweak_add(secp256k1_scalar *key, const secp256k1_scalar *tweak) {\n     secp256k1_scalar_add(key, key, tweak);\n     if (secp256k1_scalar_is_zero(key)) {\n         return 0;\n     }\n     return 1;\n }\n \n-static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context_t *ctx, secp256k1_ge_t *key, const secp256k1_scalar_t *tweak) {\n-    secp256k1_gej_t pt;\n-    secp256k1_scalar_t one;\n+static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak) {\n+    secp256k1_gej pt;\n+    secp256k1_scalar one;\n     secp256k1_gej_set_ge(&pt, key);\n     secp256k1_scalar_set_int(&one, 1);\n     secp256k1_ecmult(ctx, &pt, &pt, &one, tweak);\n@@ -176,7 +73,7 @@ static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context_t *ct\n     return 1;\n }\n \n-static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar_t *key, const secp256k1_scalar_t *tweak) {\n+static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar *key, const secp256k1_scalar *tweak) {\n     if (secp256k1_scalar_is_zero(tweak)) {\n         return 0;\n     }\n@@ -185,9 +82,9 @@ static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar_t *key, const secp\n     return 1;\n }\n \n-static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context_t *ctx, secp256k1_ge_t *key, const secp256k1_scalar_t *tweak) {\n-    secp256k1_scalar_t zero;\n-    secp256k1_gej_t pt;\n+static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak) {\n+    secp256k1_scalar zero;\n+    secp256k1_gej pt;\n     if (secp256k1_scalar_is_zero(tweak)) {\n         return 0;\n     }"
      },
      {
        "sha": "20484134f5241402357e99dc119bd5b921d1a478",
        "filename": "src/secp256k1/src/ecmult.h",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -12,20 +12,20 @@\n \n typedef struct {\n     /* For accelerating the computation of a*P + b*G: */\n-    secp256k1_ge_storage_t (*pre_g)[];    /* odd multiples of the generator */\n+    secp256k1_ge_storage (*pre_g)[];    /* odd multiples of the generator */\n #ifdef USE_ENDOMORPHISM\n-    secp256k1_ge_storage_t (*pre_g_128)[]; /* odd multiples of 2^128*generator */\n+    secp256k1_ge_storage (*pre_g_128)[]; /* odd multiples of 2^128*generator */\n #endif\n-} secp256k1_ecmult_context_t;\n+} secp256k1_ecmult_context;\n \n-static void secp256k1_ecmult_context_init(secp256k1_ecmult_context_t *ctx);\n-static void secp256k1_ecmult_context_build(secp256k1_ecmult_context_t *ctx);\n-static void secp256k1_ecmult_context_clone(secp256k1_ecmult_context_t *dst,\n-                                           const secp256k1_ecmult_context_t *src);\n-static void secp256k1_ecmult_context_clear(secp256k1_ecmult_context_t *ctx);\n-static int secp256k1_ecmult_context_is_built(const secp256k1_ecmult_context_t *ctx);\n+static void secp256k1_ecmult_context_init(secp256k1_ecmult_context *ctx);\n+static void secp256k1_ecmult_context_build(secp256k1_ecmult_context *ctx, const secp256k1_callback *cb);\n+static void secp256k1_ecmult_context_clone(secp256k1_ecmult_context *dst,\n+                                           const secp256k1_ecmult_context *src, const secp256k1_callback *cb);\n+static void secp256k1_ecmult_context_clear(secp256k1_ecmult_context *ctx);\n+static int secp256k1_ecmult_context_is_built(const secp256k1_ecmult_context *ctx);\n \n /** Double multiply: R = na*A + ng*G */\n-static void secp256k1_ecmult(const secp256k1_ecmult_context_t *ctx, secp256k1_gej_t *r, const secp256k1_gej_t *a, const secp256k1_scalar_t *na, const secp256k1_scalar_t *ng);\n+static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_scalar *na, const secp256k1_scalar *ng);\n \n #endif"
      },
      {
        "sha": "2b0097655c1945393546aeef3c3b4d52c862b771",
        "filename": "src/secp256k1/src/ecmult_const.h",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_const.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_const.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_const.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,15 @@\n+/**********************************************************************\n+ * Copyright (c) 2015 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_ECMULT_CONST_\n+#define _SECP256K1_ECMULT_CONST_\n+\n+#include \"scalar.h\"\n+#include \"group.h\"\n+\n+static void secp256k1_ecmult_const(secp256k1_gej *r, const secp256k1_ge *a, const secp256k1_scalar *q);\n+\n+#endif"
      },
      {
        "sha": "90ac94770ea1399eb092903fc8050b1ef3dc5c27",
        "filename": "src/secp256k1/src/ecmult_const_impl.h",
        "status": "added",
        "additions": 260,
        "deletions": 0,
        "changes": 260,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_const_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_const_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_const_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,260 @@\n+/**********************************************************************\n+ * Copyright (c) 2015 Pieter Wuille, Andrew Poelstra                  *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_ECMULT_CONST_IMPL_\n+#define _SECP256K1_ECMULT_CONST_IMPL_\n+\n+#include \"scalar.h\"\n+#include \"group.h\"\n+#include \"ecmult_const.h\"\n+#include \"ecmult_impl.h\"\n+\n+#ifdef USE_ENDOMORPHISM\n+    #define WNAF_BITS 128\n+#else\n+    #define WNAF_BITS 256\n+#endif\n+#define WNAF_SIZE(w) ((WNAF_BITS + (w) - 1) / (w))\n+\n+/* This is like `ECMULT_TABLE_GET_GE` but is constant time */\n+#define ECMULT_CONST_TABLE_GET_GE(r,pre,n,w) do { \\\n+    int m; \\\n+    int abs_n = (n) * (((n) > 0) * 2 - 1); \\\n+    int idx_n = abs_n / 2; \\\n+    secp256k1_fe neg_y; \\\n+    VERIFY_CHECK(((n) & 1) == 1); \\\n+    VERIFY_CHECK((n) >= -((1 << ((w)-1)) - 1)); \\\n+    VERIFY_CHECK((n) <=  ((1 << ((w)-1)) - 1)); \\\n+    VERIFY_SETUP(secp256k1_fe_clear(&(r)->x)); \\\n+    VERIFY_SETUP(secp256k1_fe_clear(&(r)->y)); \\\n+    for (m = 0; m < ECMULT_TABLE_SIZE(w); m++) { \\\n+        /* This loop is used to avoid secret data in array indices. See\n+         * the comment in ecmult_gen_impl.h for rationale. */ \\\n+        secp256k1_fe_cmov(&(r)->x, &(pre)[m].x, m == idx_n); \\\n+        secp256k1_fe_cmov(&(r)->y, &(pre)[m].y, m == idx_n); \\\n+    } \\\n+    (r)->infinity = 0; \\\n+    secp256k1_fe_negate(&neg_y, &(r)->y, 1); \\\n+    secp256k1_fe_cmov(&(r)->y, &neg_y, (n) != abs_n); \\\n+} while(0)\n+\n+\n+/** Convert a number to WNAF notation. The number becomes represented by sum(2^{wi} * wnaf[i], i=0..return_val)\n+ *  with the following guarantees:\n+ *  - each wnaf[i] an odd integer between -(1 << w) and (1 << w)\n+ *  - each wnaf[i] is nonzero\n+ *  - the number of words set is returned; this is always (WNAF_BITS + w - 1) / w\n+ *\n+ *  Adapted from `The Width-w NAF Method Provides Small Memory and Fast Elliptic Scalar\n+ *  Multiplications Secure against Side Channel Attacks`, Okeya and Tagaki. M. Joye (Ed.)\n+ *  CT-RSA 2003, LNCS 2612, pp. 328-443, 2003. Springer-Verlagy Berlin Heidelberg 2003\n+ *\n+ *  Numbers reference steps of `Algorithm SPA-resistant Width-w NAF with Odd Scalar` on pp. 335\n+ */\n+static int secp256k1_wnaf_const(int *wnaf, secp256k1_scalar s, int w) {\n+    int global_sign;\n+    int skew = 0;\n+    int word = 0;\n+    /* 1 2 3 */\n+    int u_last;\n+    int u;\n+\n+#ifdef USE_ENDOMORPHISM\n+    int flip;\n+    int bit;\n+    secp256k1_scalar neg_s;\n+    int not_neg_one;\n+    /* If we are using the endomorphism, we cannot handle even numbers by negating\n+     * them, since we are working with 128-bit numbers whose negations would be 256\n+     * bits, eliminating the performance advantage. Instead we use a technique from\n+     * Section 4.2 of the Okeya/Tagaki paper, which is to add either 1 (for even)\n+     * or 2 (for odd) to the number we are encoding, then compensating after the\n+     * multiplication. */\n+    /* Negative 128-bit numbers will be negated, since otherwise they are 256-bit */\n+    flip = secp256k1_scalar_is_high(&s);\n+    /* We add 1 to even numbers, 2 to odd ones, noting that negation flips parity */\n+    bit = flip ^ (s.d[0] & 1);\n+    /* We check for negative one, since adding 2 to it will cause an overflow */\n+    secp256k1_scalar_negate(&neg_s, &s);\n+    not_neg_one = !secp256k1_scalar_is_one(&neg_s);\n+    secp256k1_scalar_cadd_bit(&s, bit, not_neg_one);\n+    /* If we had negative one, flip == 1, s.d[0] == 0, bit == 1, so caller expects\n+     * that we added two to it and flipped it. In fact for -1 these operations are\n+     * identical. We only flipped, but since skewing is required (in the sense that\n+     * the skew must be 1 or 2, never zero) and flipping is not, we need to change\n+     * our flags to claim that we only skewed. */\n+    global_sign = secp256k1_scalar_cond_negate(&s, flip);\n+    global_sign *= not_neg_one * 2 - 1;\n+    skew = 1 << bit;\n+#else\n+    /* Otherwise, we just negate to force oddness */\n+    int is_even = secp256k1_scalar_is_even(&s);\n+    global_sign = secp256k1_scalar_cond_negate(&s, is_even);\n+#endif\n+\n+    /* 4 */\n+    u_last = secp256k1_scalar_shr_int(&s, w);\n+    while (word * w < WNAF_BITS) {\n+        int sign;\n+        int even;\n+\n+        /* 4.1 4.4 */\n+        u = secp256k1_scalar_shr_int(&s, w);\n+        /* 4.2 */\n+        even = ((u & 1) == 0);\n+        sign = 2 * (u_last > 0) - 1;\n+        u += sign * even;\n+        u_last -= sign * even * (1 << w);\n+\n+        /* 4.3, adapted for global sign change */\n+        wnaf[word++] = u_last * global_sign;\n+\n+        u_last = u;\n+    }\n+    wnaf[word] = u * global_sign;\n+\n+    VERIFY_CHECK(secp256k1_scalar_is_zero(&s));\n+    VERIFY_CHECK(word == WNAF_SIZE(w));\n+    return skew;\n+}\n+\n+\n+static void secp256k1_ecmult_const(secp256k1_gej *r, const secp256k1_ge *a, const secp256k1_scalar *scalar) {\n+    secp256k1_ge pre_a[ECMULT_TABLE_SIZE(WINDOW_A)];\n+    secp256k1_ge tmpa;\n+    secp256k1_fe Z;\n+\n+#ifdef USE_ENDOMORPHISM\n+    secp256k1_ge pre_a_lam[ECMULT_TABLE_SIZE(WINDOW_A)];\n+    int wnaf_1[1 + WNAF_SIZE(WINDOW_A - 1)];\n+    int wnaf_lam[1 + WNAF_SIZE(WINDOW_A - 1)];\n+    int skew_1;\n+    int skew_lam;\n+    secp256k1_scalar q_1, q_lam;\n+#else\n+    int wnaf[1 + WNAF_SIZE(WINDOW_A - 1)];\n+#endif\n+\n+    int i;\n+    secp256k1_scalar sc = *scalar;\n+\n+    /* build wnaf representation for q. */\n+#ifdef USE_ENDOMORPHISM\n+    /* split q into q_1 and q_lam (where q = q_1 + q_lam*lambda, and q_1 and q_lam are ~128 bit) */\n+    secp256k1_scalar_split_lambda(&q_1, &q_lam, &sc);\n+    /* no need for zero correction when using endomorphism since even\n+     * numbers have one added to them anyway */\n+    skew_1   = secp256k1_wnaf_const(wnaf_1,   q_1,   WINDOW_A - 1);\n+    skew_lam = secp256k1_wnaf_const(wnaf_lam, q_lam, WINDOW_A - 1);\n+#else\n+    int is_zero = secp256k1_scalar_is_zero(scalar);\n+    /* the wNAF ladder cannot handle zero, so bump this to one .. we will\n+     * correct the result after the fact */\n+    sc.d[0] += is_zero;\n+    VERIFY_CHECK(!secp256k1_scalar_is_zero(&sc));\n+\n+    secp256k1_wnaf_const(wnaf, sc, WINDOW_A - 1);\n+#endif\n+\n+    /* Calculate odd multiples of a.\n+     * All multiples are brought to the same Z 'denominator', which is stored\n+     * in Z. Due to secp256k1' isomorphism we can do all operations pretending\n+     * that the Z coordinate was 1, use affine addition formulae, and correct\n+     * the Z coordinate of the result once at the end.\n+     */\n+    secp256k1_gej_set_ge(r, a);\n+    secp256k1_ecmult_odd_multiples_table_globalz_windowa(pre_a, &Z, r);\n+    for (i = 0; i < ECMULT_TABLE_SIZE(WINDOW_A); i++) {\n+        secp256k1_fe_normalize_weak(&pre_a[i].y);\n+    }\n+#ifdef USE_ENDOMORPHISM\n+    for (i = 0; i < ECMULT_TABLE_SIZE(WINDOW_A); i++) {\n+        secp256k1_ge_mul_lambda(&pre_a_lam[i], &pre_a[i]);\n+    }\n+#endif\n+\n+    /* first loop iteration (separated out so we can directly set r, rather\n+     * than having it start at infinity, get doubled several times, then have\n+     * its new value added to it) */\n+#ifdef USE_ENDOMORPHISM\n+    i = wnaf_1[WNAF_SIZE(WINDOW_A - 1)];\n+    VERIFY_CHECK(i != 0);\n+    ECMULT_CONST_TABLE_GET_GE(&tmpa, pre_a, i, WINDOW_A);\n+    secp256k1_gej_set_ge(r, &tmpa);\n+\n+    i = wnaf_lam[WNAF_SIZE(WINDOW_A - 1)];\n+    VERIFY_CHECK(i != 0);\n+    ECMULT_CONST_TABLE_GET_GE(&tmpa, pre_a_lam, i, WINDOW_A);\n+    secp256k1_gej_add_ge(r, r, &tmpa);\n+#else\n+    i = wnaf[WNAF_SIZE(WINDOW_A - 1)];\n+    VERIFY_CHECK(i != 0);\n+    ECMULT_CONST_TABLE_GET_GE(&tmpa, pre_a, i, WINDOW_A);\n+    secp256k1_gej_set_ge(r, &tmpa);\n+#endif\n+    /* remaining loop iterations */\n+    for (i = WNAF_SIZE(WINDOW_A - 1) - 1; i >= 0; i--) {\n+        int n;\n+        int j;\n+        for (j = 0; j < WINDOW_A - 1; ++j) {\n+            secp256k1_gej_double_nonzero(r, r, NULL);\n+        }\n+#ifdef USE_ENDOMORPHISM\n+        n = wnaf_1[i];\n+        ECMULT_CONST_TABLE_GET_GE(&tmpa, pre_a, n, WINDOW_A);\n+        VERIFY_CHECK(n != 0);\n+        secp256k1_gej_add_ge(r, r, &tmpa);\n+\n+        n = wnaf_lam[i];\n+        ECMULT_CONST_TABLE_GET_GE(&tmpa, pre_a_lam, n, WINDOW_A);\n+        VERIFY_CHECK(n != 0);\n+        secp256k1_gej_add_ge(r, r, &tmpa);\n+#else\n+        n = wnaf[i];\n+        VERIFY_CHECK(n != 0);\n+        ECMULT_CONST_TABLE_GET_GE(&tmpa, pre_a, n, WINDOW_A);\n+        secp256k1_gej_add_ge(r, r, &tmpa);\n+#endif\n+    }\n+\n+    secp256k1_fe_mul(&r->z, &r->z, &Z);\n+\n+#ifdef USE_ENDOMORPHISM\n+    {\n+        /* Correct for wNAF skew */\n+        secp256k1_ge correction = *a;\n+        secp256k1_ge_storage correction_1_stor;\n+        secp256k1_ge_storage correction_lam_stor;\n+        secp256k1_ge_storage a2_stor;\n+        secp256k1_gej tmpj;\n+        secp256k1_gej_set_ge(&tmpj, &correction);\n+        secp256k1_gej_double_var(&tmpj, &tmpj, NULL);\n+        secp256k1_ge_set_gej(&correction, &tmpj);\n+        secp256k1_ge_to_storage(&correction_1_stor, a);\n+        secp256k1_ge_to_storage(&correction_lam_stor, a);\n+        secp256k1_ge_to_storage(&a2_stor, &correction);\n+\n+        /* For odd numbers this is 2a (so replace it), for even ones a (so no-op) */\n+        secp256k1_ge_storage_cmov(&correction_1_stor, &a2_stor, skew_1 == 2);\n+        secp256k1_ge_storage_cmov(&correction_lam_stor, &a2_stor, skew_lam == 2);\n+\n+        /* Apply the correction */\n+        secp256k1_ge_from_storage(&correction, &correction_1_stor);\n+        secp256k1_ge_neg(&correction, &correction);\n+        secp256k1_gej_add_ge(r, r, &correction);\n+\n+        secp256k1_ge_from_storage(&correction, &correction_lam_stor);\n+        secp256k1_ge_neg(&correction, &correction);\n+        secp256k1_ge_mul_lambda(&correction, &correction);\n+        secp256k1_gej_add_ge(r, r, &correction);\n+    }\n+#else\n+    /* correct for zero */\n+    r->infinity |= is_zero;\n+#endif\n+}\n+\n+#endif"
      },
      {
        "sha": "eb2cc9ead6ed1df81b34bb5a579d0c61f991fd38",
        "filename": "src/secp256k1/src/ecmult_gen.h",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_gen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_gen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_gen.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -23,21 +23,21 @@ typedef struct {\n      * None of the resulting prec group elements have a known scalar, and neither do any of\n      * the intermediate sums while computing a*G.\n      */\n-    secp256k1_ge_storage_t (*prec)[64][16]; /* prec[j][i] = 16^j * i * G + U_i */\n-    secp256k1_scalar_t blind;\n-    secp256k1_gej_t initial;\n-} secp256k1_ecmult_gen_context_t;\n+    secp256k1_ge_storage (*prec)[64][16]; /* prec[j][i] = 16^j * i * G + U_i */\n+    secp256k1_scalar blind;\n+    secp256k1_gej initial;\n+} secp256k1_ecmult_gen_context;\n \n-static void secp256k1_ecmult_gen_context_init(secp256k1_ecmult_gen_context_t* ctx);\n-static void secp256k1_ecmult_gen_context_build(secp256k1_ecmult_gen_context_t* ctx);\n-static void secp256k1_ecmult_gen_context_clone(secp256k1_ecmult_gen_context_t *dst,\n-                                               const secp256k1_ecmult_gen_context_t* src);\n-static void secp256k1_ecmult_gen_context_clear(secp256k1_ecmult_gen_context_t* ctx);\n-static int secp256k1_ecmult_gen_context_is_built(const secp256k1_ecmult_gen_context_t* ctx);\n+static void secp256k1_ecmult_gen_context_init(secp256k1_ecmult_gen_context* ctx);\n+static void secp256k1_ecmult_gen_context_build(secp256k1_ecmult_gen_context* ctx, const secp256k1_callback* cb);\n+static void secp256k1_ecmult_gen_context_clone(secp256k1_ecmult_gen_context *dst,\n+                                               const secp256k1_ecmult_gen_context* src, const secp256k1_callback* cb);\n+static void secp256k1_ecmult_gen_context_clear(secp256k1_ecmult_gen_context* ctx);\n+static int secp256k1_ecmult_gen_context_is_built(const secp256k1_ecmult_gen_context* ctx);\n \n /** Multiply with the generator: R = a*G */\n-static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context_t* ctx, secp256k1_gej_t *r, const secp256k1_scalar_t *a);\n+static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context* ctx, secp256k1_gej *r, const secp256k1_scalar *a);\n \n-static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context_t *ctx, const unsigned char *seed32);\n+static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const unsigned char *seed32);\n \n #endif"
      },
      {
        "sha": "b63c4d8662c70460070cd905f50a62b07b9a0aa0",
        "filename": "src/secp256k1/src/ecmult_gen_impl.h",
        "status": "modified",
        "additions": 64,
        "deletions": 38,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_gen_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_gen_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_gen_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -11,100 +11,120 @@\n #include \"group.h\"\n #include \"ecmult_gen.h\"\n #include \"hash_impl.h\"\n-\n-static void secp256k1_ecmult_gen_context_init(secp256k1_ecmult_gen_context_t *ctx) {\n+#ifdef USE_ECMULT_STATIC_PRECOMPUTATION\n+#include \"ecmult_static_context.h\"\n+#endif\n+static void secp256k1_ecmult_gen_context_init(secp256k1_ecmult_gen_context *ctx) {\n     ctx->prec = NULL;\n }\n \n-static void secp256k1_ecmult_gen_context_build(secp256k1_ecmult_gen_context_t *ctx) {\n-    secp256k1_ge_t prec[1024];\n-    secp256k1_gej_t gj;\n-    secp256k1_gej_t nums_gej;\n+static void secp256k1_ecmult_gen_context_build(secp256k1_ecmult_gen_context *ctx, const secp256k1_callback* cb) {\n+#ifndef USE_ECMULT_STATIC_PRECOMPUTATION\n+    secp256k1_ge prec[1024];\n+    secp256k1_gej gj;\n+    secp256k1_gej nums_gej;\n     int i, j;\n+#endif\n \n     if (ctx->prec != NULL) {\n         return;\n     }\n-\n-    ctx->prec = (secp256k1_ge_storage_t (*)[64][16])checked_malloc(sizeof(*ctx->prec));\n+#ifndef USE_ECMULT_STATIC_PRECOMPUTATION\n+    ctx->prec = (secp256k1_ge_storage (*)[64][16])checked_malloc(cb, sizeof(*ctx->prec));\n \n     /* get the generator */\n     secp256k1_gej_set_ge(&gj, &secp256k1_ge_const_g);\n \n     /* Construct a group element with no known corresponding scalar (nothing up my sleeve). */\n     {\n         static const unsigned char nums_b32[33] = \"The scalar for this x is unknown\";\n-        secp256k1_fe_t nums_x;\n-        secp256k1_ge_t nums_ge;\n-        VERIFY_CHECK(secp256k1_fe_set_b32(&nums_x, nums_b32));\n-        VERIFY_CHECK(secp256k1_ge_set_xo_var(&nums_ge, &nums_x, 0));\n+        secp256k1_fe nums_x;\n+        secp256k1_ge nums_ge;\n+        int r;\n+        r = secp256k1_fe_set_b32(&nums_x, nums_b32);\n+        (void)r;\n+        VERIFY_CHECK(r);\n+        r = secp256k1_ge_set_xo_var(&nums_ge, &nums_x, 0);\n+        (void)r;\n+        VERIFY_CHECK(r);\n         secp256k1_gej_set_ge(&nums_gej, &nums_ge);\n         /* Add G to make the bits in x uniformly distributed. */\n-        secp256k1_gej_add_ge_var(&nums_gej, &nums_gej, &secp256k1_ge_const_g);\n+        secp256k1_gej_add_ge_var(&nums_gej, &nums_gej, &secp256k1_ge_const_g, NULL);\n     }\n \n     /* compute prec. */\n     {\n-        secp256k1_gej_t precj[1024]; /* Jacobian versions of prec. */\n-        secp256k1_gej_t gbase;\n-        secp256k1_gej_t numsbase;\n+        secp256k1_gej precj[1024]; /* Jacobian versions of prec. */\n+        secp256k1_gej gbase;\n+        secp256k1_gej numsbase;\n         gbase = gj; /* 16^j * G */\n         numsbase = nums_gej; /* 2^j * nums. */\n         for (j = 0; j < 64; j++) {\n             /* Set precj[j*16 .. j*16+15] to (numsbase, numsbase + gbase, ..., numsbase + 15*gbase). */\n             precj[j*16] = numsbase;\n             for (i = 1; i < 16; i++) {\n-                secp256k1_gej_add_var(&precj[j*16 + i], &precj[j*16 + i - 1], &gbase);\n+                secp256k1_gej_add_var(&precj[j*16 + i], &precj[j*16 + i - 1], &gbase, NULL);\n             }\n             /* Multiply gbase by 16. */\n             for (i = 0; i < 4; i++) {\n-                secp256k1_gej_double_var(&gbase, &gbase);\n+                secp256k1_gej_double_var(&gbase, &gbase, NULL);\n             }\n             /* Multiply numbase by 2. */\n-            secp256k1_gej_double_var(&numsbase, &numsbase);\n+            secp256k1_gej_double_var(&numsbase, &numsbase, NULL);\n             if (j == 62) {\n                 /* In the last iteration, numsbase is (1 - 2^j) * nums instead. */\n                 secp256k1_gej_neg(&numsbase, &numsbase);\n-                secp256k1_gej_add_var(&numsbase, &numsbase, &nums_gej);\n+                secp256k1_gej_add_var(&numsbase, &numsbase, &nums_gej, NULL);\n             }\n         }\n-        secp256k1_ge_set_all_gej_var(1024, prec, precj);\n+        secp256k1_ge_set_all_gej_var(1024, prec, precj, cb);\n     }\n     for (j = 0; j < 64; j++) {\n         for (i = 0; i < 16; i++) {\n             secp256k1_ge_to_storage(&(*ctx->prec)[j][i], &prec[j*16 + i]);\n         }\n     }\n+#else\n+    (void)cb;\n+    ctx->prec = (secp256k1_ge_storage (*)[64][16])secp256k1_ecmult_static_context;\n+#endif\n     secp256k1_ecmult_gen_blind(ctx, NULL);\n }\n \n-static int secp256k1_ecmult_gen_context_is_built(const secp256k1_ecmult_gen_context_t* ctx) {\n+static int secp256k1_ecmult_gen_context_is_built(const secp256k1_ecmult_gen_context* ctx) {\n     return ctx->prec != NULL;\n }\n \n-static void secp256k1_ecmult_gen_context_clone(secp256k1_ecmult_gen_context_t *dst,\n-                                               const secp256k1_ecmult_gen_context_t *src) {\n+static void secp256k1_ecmult_gen_context_clone(secp256k1_ecmult_gen_context *dst,\n+                                               const secp256k1_ecmult_gen_context *src, const secp256k1_callback* cb) {\n     if (src->prec == NULL) {\n         dst->prec = NULL;\n     } else {\n-        dst->prec = (secp256k1_ge_storage_t (*)[64][16])checked_malloc(sizeof(*dst->prec));\n+#ifndef USE_ECMULT_STATIC_PRECOMPUTATION\n+        dst->prec = (secp256k1_ge_storage (*)[64][16])checked_malloc(cb, sizeof(*dst->prec));\n         memcpy(dst->prec, src->prec, sizeof(*dst->prec));\n+#else\n+        (void)cb;\n+        dst->prec = src->prec;\n+#endif\n         dst->initial = src->initial;\n         dst->blind = src->blind;\n     }\n }\n \n-static void secp256k1_ecmult_gen_context_clear(secp256k1_ecmult_gen_context_t *ctx) {\n+static void secp256k1_ecmult_gen_context_clear(secp256k1_ecmult_gen_context *ctx) {\n+#ifndef USE_ECMULT_STATIC_PRECOMPUTATION\n     free(ctx->prec);\n+#endif\n     secp256k1_scalar_clear(&ctx->blind);\n     secp256k1_gej_clear(&ctx->initial);\n     ctx->prec = NULL;\n }\n \n-static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context_t *ctx, secp256k1_gej_t *r, const secp256k1_scalar_t *gn) {\n-    secp256k1_ge_t add;\n-    secp256k1_ge_storage_t adds;\n-    secp256k1_scalar_t gnb;\n+static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context *ctx, secp256k1_gej *r, const secp256k1_scalar *gn) {\n+    secp256k1_ge add;\n+    secp256k1_ge_storage adds;\n+    secp256k1_scalar gnb;\n     int bits;\n     int i, j;\n     memset(&adds, 0, sizeof(adds));\n@@ -136,14 +156,15 @@ static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context_t *ctx, secp\n }\n \n /* Setup blinding values for secp256k1_ecmult_gen. */\n-static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context_t *ctx, const unsigned char *seed32) {\n-    secp256k1_scalar_t b;\n-    secp256k1_gej_t gb;\n-    secp256k1_fe_t s;\n+static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const unsigned char *seed32) {\n+    secp256k1_scalar b;\n+    secp256k1_gej gb;\n+    secp256k1_fe s;\n     unsigned char nonce32[32];\n     secp256k1_rfc6979_hmac_sha256_t rng;\n     int retry;\n-    if (!seed32) {\n+    unsigned char keydata[64] = {0};\n+    if (seed32 == NULL) {\n         /* When seed is NULL, reset the initial point and blinding value. */\n         secp256k1_gej_set_ge(&ctx->initial, &secp256k1_ge_const_g);\n         secp256k1_gej_neg(&ctx->initial, &ctx->initial);\n@@ -155,13 +176,18 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context_t *ctx, cons\n      *   and guards against weak or adversarial seeds.  This is a simpler and safer interface than\n      *   asking the caller for blinding values directly and expecting them to retry on failure.\n      */\n-    secp256k1_rfc6979_hmac_sha256_initialize(&rng, seed32 ? seed32 : nonce32, 32, nonce32, 32, NULL, 0);\n+    memcpy(keydata, nonce32, 32);\n+    if (seed32 != NULL) {\n+        memcpy(keydata + 32, seed32, 32);\n+    }\n+    secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, seed32 ? 64 : 32);\n+    memset(keydata, 0, sizeof(keydata));\n     /* Retry for out of range results to achieve uniformity. */\n     do {\n         secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n         retry = !secp256k1_fe_set_b32(&s, nonce32);\n         retry |= secp256k1_fe_is_zero(&s);\n-    } while (retry);\n+    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > Fp. */\n     /* Randomize the projection to defend against multiplier sidechannels. */\n     secp256k1_gej_rescale(&ctx->initial, &s);\n     secp256k1_fe_clear(&s);\n@@ -170,7 +196,7 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context_t *ctx, cons\n         secp256k1_scalar_set_b32(&b, nonce32, &retry);\n         /* A blinding value of 0 works, but would undermine the projection hardening. */\n         retry |= secp256k1_scalar_is_zero(&b);\n-    } while (retry);\n+    } while (retry); /* This branch true is cryptographically unreachable. Requires sha256_hmac output > order. */\n     secp256k1_rfc6979_hmac_sha256_finalize(&rng);\n     memset(nonce32, 0, 32);\n     secp256k1_ecmult_gen(ctx, &gb, &b);"
      },
      {
        "sha": "e6e5f471880710ebbadb72c3d38ea60ca0fd6ab8",
        "filename": "src/secp256k1/src/ecmult_impl.h",
        "status": "modified",
        "additions": 170,
        "deletions": 98,
        "changes": 268,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/ecmult_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -24,62 +24,107 @@\n #define WINDOW_G 16\n #endif\n \n-/** Fill a table 'pre' with precomputed odd multiples of a. W determines the size of the table.\n- *  pre will contains the values [1*a,3*a,5*a,...,(2^(w-1)-1)*a], so it needs place for\n- *  2^(w-2) entries.\n- *\n- *  There are two versions of this function:\n- *  - secp256k1_ecmult_precomp_wnaf_gej, which operates on group elements in jacobian notation,\n- *    fast to precompute, but slower to use in later additions.\n- *  - secp256k1_ecmult_precomp_wnaf_ge, which operates on group elements in affine notations,\n- *    (much) slower to precompute, but a bit faster to use in later additions.\n- *  To compute a*P + b*G, we use the jacobian version for P, and the affine version for G, as\n- *  G is constant, so it only needs to be done once in advance.\n+/** The number of entries a table with precomputed multiples needs to have. */\n+#define ECMULT_TABLE_SIZE(w) (1 << ((w)-2))\n+\n+/** Fill a table 'prej' with precomputed odd multiples of a. Prej will contain\n+ *  the values [1*a,3*a,...,(2*n-1)*a], so it space for n values. zr[0] will\n+ *  contain prej[0].z / a.z. The other zr[i] values = prej[i].z / prej[i-1].z.\n+ *  Prej's Z values are undefined, except for the last value.\n  */\n-static void secp256k1_ecmult_table_precomp_gej_var(secp256k1_gej_t *pre, const secp256k1_gej_t *a, int w) {\n-    secp256k1_gej_t d;\n+static void secp256k1_ecmult_odd_multiples_table(int n, secp256k1_gej *prej, secp256k1_fe *zr, const secp256k1_gej *a) {\n+    secp256k1_gej d;\n+    secp256k1_ge a_ge, d_ge;\n     int i;\n-    pre[0] = *a;\n-    secp256k1_gej_double_var(&d, &pre[0]);\n-    for (i = 1; i < (1 << (w-2)); i++) {\n-        secp256k1_gej_add_var(&pre[i], &d, &pre[i-1]);\n+\n+    VERIFY_CHECK(!a->infinity);\n+\n+    secp256k1_gej_double_var(&d, a, NULL);\n+\n+    /*\n+     * Perform the additions on an isomorphism where 'd' is affine: drop the z coordinate\n+     * of 'd', and scale the 1P starting value's x/y coordinates without changing its z.\n+     */\n+    d_ge.x = d.x;\n+    d_ge.y = d.y;\n+    d_ge.infinity = 0;\n+\n+    secp256k1_ge_set_gej_zinv(&a_ge, a, &d.z);\n+    prej[0].x = a_ge.x;\n+    prej[0].y = a_ge.y;\n+    prej[0].z = a->z;\n+    prej[0].infinity = 0;\n+\n+    zr[0] = d.z;\n+    for (i = 1; i < n; i++) {\n+        secp256k1_gej_add_ge_var(&prej[i], &prej[i-1], &d_ge, &zr[i]);\n     }\n+\n+    /*\n+     * Each point in 'prej' has a z coordinate too small by a factor of 'd.z'. Only\n+     * the final point's z coordinate is actually used though, so just update that.\n+     */\n+    secp256k1_fe_mul(&prej[n-1].z, &prej[n-1].z, &d.z);\n+}\n+\n+/** Fill a table 'pre' with precomputed odd multiples of a.\n+ *\n+ *  There are two versions of this function:\n+ *  - secp256k1_ecmult_odd_multiples_table_globalz_windowa which brings its\n+ *    resulting point set to a single constant Z denominator, stores the X and Y\n+ *    coordinates as ge_storage points in pre, and stores the global Z in rz.\n+ *    It only operates on tables sized for WINDOW_A wnaf multiples.\n+ *  - secp256k1_ecmult_odd_multiples_table_storage_var, which converts its\n+ *    resulting point set to actually affine points, and stores those in pre.\n+ *    It operates on tables of any size, but uses heap-allocated temporaries.\n+ *\n+ *  To compute a*P + b*G, we compute a table for P using the first function,\n+ *  and for G using the second (which requires an inverse, but it only needs to\n+ *  happen once).\n+ */\n+static void secp256k1_ecmult_odd_multiples_table_globalz_windowa(secp256k1_ge *pre, secp256k1_fe *globalz, const secp256k1_gej *a) {\n+    secp256k1_gej prej[ECMULT_TABLE_SIZE(WINDOW_A)];\n+    secp256k1_fe zr[ECMULT_TABLE_SIZE(WINDOW_A)];\n+\n+    /* Compute the odd multiples in Jacobian form. */\n+    secp256k1_ecmult_odd_multiples_table(ECMULT_TABLE_SIZE(WINDOW_A), prej, zr, a);\n+    /* Bring them to the same Z denominator. */\n+    secp256k1_ge_globalz_set_table_gej(ECMULT_TABLE_SIZE(WINDOW_A), pre, globalz, prej, zr);\n }\n \n-static void secp256k1_ecmult_table_precomp_ge_storage_var(secp256k1_ge_storage_t *pre, const secp256k1_gej_t *a, int w) {\n-    secp256k1_gej_t d;\n+static void secp256k1_ecmult_odd_multiples_table_storage_var(int n, secp256k1_ge_storage *pre, const secp256k1_gej *a, const secp256k1_callback *cb) {\n+    secp256k1_gej *prej = (secp256k1_gej*)checked_malloc(cb, sizeof(secp256k1_gej) * n);\n+    secp256k1_ge *prea = (secp256k1_ge*)checked_malloc(cb, sizeof(secp256k1_ge) * n);\n+    secp256k1_fe *zr = (secp256k1_fe*)checked_malloc(cb, sizeof(secp256k1_fe) * n);\n     int i;\n-    const int table_size = 1 << (w-2);\n-    secp256k1_gej_t *prej = (secp256k1_gej_t *)checked_malloc(sizeof(secp256k1_gej_t) * table_size);\n-    secp256k1_ge_t *prea = (secp256k1_ge_t *)checked_malloc(sizeof(secp256k1_ge_t) * table_size);\n-    prej[0] = *a;\n-    secp256k1_gej_double_var(&d, a);\n-    for (i = 1; i < table_size; i++) {\n-        secp256k1_gej_add_var(&prej[i], &d, &prej[i-1]);\n-    }\n-    secp256k1_ge_set_all_gej_var(table_size, prea, prej);\n-    for (i = 0; i < table_size; i++) {\n+\n+    /* Compute the odd multiples in Jacobian form. */\n+    secp256k1_ecmult_odd_multiples_table(n, prej, zr, a);\n+    /* Convert them in batch to affine coordinates. */\n+    secp256k1_ge_set_table_gej_var(n, prea, prej, zr);\n+    /* Convert them to compact storage form. */\n+    for (i = 0; i < n; i++) {\n         secp256k1_ge_to_storage(&pre[i], &prea[i]);\n     }\n-    free(prej);\n+\n     free(prea);\n+    free(prej);\n+    free(zr);\n }\n \n-/** The number of entries a table with precomputed multiples needs to have. */\n-#define ECMULT_TABLE_SIZE(w) (1 << ((w)-2))\n-\n /** The following two macro retrieves a particular odd multiple from a table\n  *  of precomputed multiples. */\n-#define ECMULT_TABLE_GET_GEJ(r,pre,n,w) do { \\\n+#define ECMULT_TABLE_GET_GE(r,pre,n,w) do { \\\n     VERIFY_CHECK(((n) & 1) == 1); \\\n     VERIFY_CHECK((n) >= -((1 << ((w)-1)) - 1)); \\\n     VERIFY_CHECK((n) <=  ((1 << ((w)-1)) - 1)); \\\n     if ((n) > 0) { \\\n         *(r) = (pre)[((n)-1)/2]; \\\n     } else { \\\n-        secp256k1_gej_neg((r), &(pre)[(-(n)-1)/2]); \\\n+        secp256k1_ge_neg((r), &(pre)[(-(n)-1)/2]); \\\n     } \\\n } while(0)\n+\n #define ECMULT_TABLE_GET_GE_STORAGE(r,pre,n,w) do { \\\n     VERIFY_CHECK(((n) & 1) == 1); \\\n     VERIFY_CHECK((n) >= -((1 << ((w)-1)) - 1)); \\\n@@ -92,15 +137,15 @@ static void secp256k1_ecmult_table_precomp_ge_storage_var(secp256k1_ge_storage_t\n     } \\\n } while(0)\n \n-static void secp256k1_ecmult_context_init(secp256k1_ecmult_context_t *ctx) {\n+static void secp256k1_ecmult_context_init(secp256k1_ecmult_context *ctx) {\n     ctx->pre_g = NULL;\n #ifdef USE_ENDOMORPHISM\n     ctx->pre_g_128 = NULL;\n #endif\n }\n \n-static void secp256k1_ecmult_context_build(secp256k1_ecmult_context_t *ctx) {\n-    secp256k1_gej_t gj;\n+static void secp256k1_ecmult_context_build(secp256k1_ecmult_context *ctx, const secp256k1_callback *cb) {\n+    secp256k1_gej gj;\n \n     if (ctx->pre_g != NULL) {\n         return;\n@@ -109,53 +154,53 @@ static void secp256k1_ecmult_context_build(secp256k1_ecmult_context_t *ctx) {\n     /* get the generator */\n     secp256k1_gej_set_ge(&gj, &secp256k1_ge_const_g);\n \n-    ctx->pre_g = (secp256k1_ge_storage_t (*)[])checked_malloc(sizeof((*ctx->pre_g)[0]) * ECMULT_TABLE_SIZE(WINDOW_G));\n+    ctx->pre_g = (secp256k1_ge_storage (*)[])checked_malloc(cb, sizeof((*ctx->pre_g)[0]) * ECMULT_TABLE_SIZE(WINDOW_G));\n \n     /* precompute the tables with odd multiples */\n-    secp256k1_ecmult_table_precomp_ge_storage_var(*ctx->pre_g, &gj, WINDOW_G);\n+    secp256k1_ecmult_odd_multiples_table_storage_var(ECMULT_TABLE_SIZE(WINDOW_G), *ctx->pre_g, &gj, cb);\n \n #ifdef USE_ENDOMORPHISM\n     {\n-        secp256k1_gej_t g_128j;\n+        secp256k1_gej g_128j;\n         int i;\n \n-        ctx->pre_g_128 = (secp256k1_ge_storage_t (*)[])checked_malloc(sizeof((*ctx->pre_g_128)[0]) * ECMULT_TABLE_SIZE(WINDOW_G));\n+        ctx->pre_g_128 = (secp256k1_ge_storage (*)[])checked_malloc(cb, sizeof((*ctx->pre_g_128)[0]) * ECMULT_TABLE_SIZE(WINDOW_G));\n \n         /* calculate 2^128*generator */\n         g_128j = gj;\n         for (i = 0; i < 128; i++) {\n-            secp256k1_gej_double_var(&g_128j, &g_128j);\n+            secp256k1_gej_double_var(&g_128j, &g_128j, NULL);\n         }\n-        secp256k1_ecmult_table_precomp_ge_storage_var(*ctx->pre_g_128, &g_128j, WINDOW_G);\n+        secp256k1_ecmult_odd_multiples_table_storage_var(ECMULT_TABLE_SIZE(WINDOW_G), *ctx->pre_g_128, &g_128j, cb);\n     }\n #endif\n }\n \n-static void secp256k1_ecmult_context_clone(secp256k1_ecmult_context_t *dst,\n-                                           const secp256k1_ecmult_context_t *src) {\n+static void secp256k1_ecmult_context_clone(secp256k1_ecmult_context *dst,\n+                                           const secp256k1_ecmult_context *src, const secp256k1_callback *cb) {\n     if (src->pre_g == NULL) {\n         dst->pre_g = NULL;\n     } else {\n         size_t size = sizeof((*dst->pre_g)[0]) * ECMULT_TABLE_SIZE(WINDOW_G);\n-        dst->pre_g = (secp256k1_ge_storage_t (*)[])checked_malloc(size);\n+        dst->pre_g = (secp256k1_ge_storage (*)[])checked_malloc(cb, size);\n         memcpy(dst->pre_g, src->pre_g, size);\n     }\n #ifdef USE_ENDOMORPHISM\n     if (src->pre_g_128 == NULL) {\n         dst->pre_g_128 = NULL;\n     } else {\n         size_t size = sizeof((*dst->pre_g_128)[0]) * ECMULT_TABLE_SIZE(WINDOW_G);\n-        dst->pre_g_128 = (secp256k1_ge_storage_t (*)[])checked_malloc(size);\n+        dst->pre_g_128 = (secp256k1_ge_storage (*)[])checked_malloc(cb, size);\n         memcpy(dst->pre_g_128, src->pre_g_128, size);\n     }\n #endif\n }\n \n-static int secp256k1_ecmult_context_is_built(const secp256k1_ecmult_context_t *ctx) {\n+static int secp256k1_ecmult_context_is_built(const secp256k1_ecmult_context *ctx) {\n     return ctx->pre_g != NULL;\n }\n \n-static void secp256k1_ecmult_context_clear(secp256k1_ecmult_context_t *ctx) {\n+static void secp256k1_ecmult_context_clear(secp256k1_ecmult_context *ctx) {\n     free(ctx->pre_g);\n #ifdef USE_ENDOMORPHISM\n     free(ctx->pre_g_128);\n@@ -168,54 +213,68 @@ static void secp256k1_ecmult_context_clear(secp256k1_ecmult_context_t *ctx) {\n  *  - each wnaf[i] is either 0, or an odd integer between -(1<<(w-1) - 1) and (1<<(w-1) - 1)\n  *  - two non-zero entries in wnaf are separated by at least w-1 zeroes.\n  *  - the number of set values in wnaf is returned. This number is at most 256, and at most one more\n- *  - than the number of bits in the (absolute value) of the input.\n+ *    than the number of bits in the (absolute value) of the input.\n  */\n-static int secp256k1_ecmult_wnaf(int *wnaf, const secp256k1_scalar_t *a, int w) {\n-    secp256k1_scalar_t s = *a;\n-    int set_bits = 0;\n+static int secp256k1_ecmult_wnaf(int *wnaf, int len, const secp256k1_scalar *a, int w) {\n+    secp256k1_scalar s = *a;\n+    int last_set_bit = -1;\n     int bit = 0;\n     int sign = 1;\n+    int carry = 0;\n+\n+    VERIFY_CHECK(wnaf != NULL);\n+    VERIFY_CHECK(0 <= len && len <= 256);\n+    VERIFY_CHECK(a != NULL);\n+    VERIFY_CHECK(2 <= w && w <= 31);\n+\n+    memset(wnaf, 0, len * sizeof(wnaf[0]));\n \n     if (secp256k1_scalar_get_bits(&s, 255, 1)) {\n         secp256k1_scalar_negate(&s, &s);\n         sign = -1;\n     }\n \n-    while (bit < 256) {\n+    while (bit < len) {\n         int now;\n         int word;\n-        if (secp256k1_scalar_get_bits(&s, bit, 1) == 0) {\n+        if (secp256k1_scalar_get_bits(&s, bit, 1) == (unsigned int)carry) {\n             bit++;\n             continue;\n         }\n-        while (set_bits < bit) {\n-            wnaf[set_bits++] = 0;\n-        }\n+\n         now = w;\n-        if (bit + now > 256) {\n-            now = 256 - bit;\n-        }\n-        word = secp256k1_scalar_get_bits_var(&s, bit, now);\n-        if (word & (1 << (w-1))) {\n-            secp256k1_scalar_add_bit(&s, bit + w);\n-            wnaf[set_bits++] = sign * (word - (1 << w));\n-        } else {\n-            wnaf[set_bits++] = sign * word;\n+        if (now > len - bit) {\n+            now = len - bit;\n         }\n+\n+        word = secp256k1_scalar_get_bits_var(&s, bit, now) + carry;\n+\n+        carry = (word >> (w-1)) & 1;\n+        word -= carry << w;\n+\n+        wnaf[bit] = sign * word;\n+        last_set_bit = bit;\n+\n         bit += now;\n     }\n-    return set_bits;\n+#ifdef VERIFY\n+    CHECK(carry == 0);\n+    while (bit < 256) {\n+        CHECK(secp256k1_scalar_get_bits(&s, bit++, 1) == 0);\n+    } \n+#endif\n+    return last_set_bit + 1;\n }\n \n-static void secp256k1_ecmult(const secp256k1_ecmult_context_t *ctx, secp256k1_gej_t *r, const secp256k1_gej_t *a, const secp256k1_scalar_t *na, const secp256k1_scalar_t *ng) {\n-    secp256k1_gej_t tmpj;\n-    secp256k1_gej_t pre_a[ECMULT_TABLE_SIZE(WINDOW_A)];\n-    secp256k1_ge_t tmpa;\n+static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_scalar *na, const secp256k1_scalar *ng) {\n+    secp256k1_ge pre_a[ECMULT_TABLE_SIZE(WINDOW_A)];\n+    secp256k1_ge tmpa;\n+    secp256k1_fe Z;\n #ifdef USE_ENDOMORPHISM\n-    secp256k1_gej_t pre_a_lam[ECMULT_TABLE_SIZE(WINDOW_A)];\n-    secp256k1_scalar_t na_1, na_lam;\n+    secp256k1_ge pre_a_lam[ECMULT_TABLE_SIZE(WINDOW_A)];\n+    secp256k1_scalar na_1, na_lam;\n     /* Splitted G factors. */\n-    secp256k1_scalar_t ng_1, ng_128;\n+    secp256k1_scalar ng_1, ng_128;\n     int wnaf_na_1[130];\n     int wnaf_na_lam[130];\n     int bits_na_1;\n@@ -227,19 +286,19 @@ static void secp256k1_ecmult(const secp256k1_ecmult_context_t *ctx, secp256k1_ge\n #else\n     int wnaf_na[256];\n     int bits_na;\n-    int wnaf_ng[257];\n+    int wnaf_ng[256];\n     int bits_ng;\n #endif\n     int i;\n     int bits;\n \n #ifdef USE_ENDOMORPHISM\n     /* split na into na_1 and na_lam (where na = na_1 + na_lam*lambda, and na_1 and na_lam are ~128 bit) */\n-    secp256k1_scalar_split_lambda_var(&na_1, &na_lam, na);\n+    secp256k1_scalar_split_lambda(&na_1, &na_lam, na);\n \n     /* build wnaf representation for na_1 and na_lam. */\n-    bits_na_1   = secp256k1_ecmult_wnaf(wnaf_na_1,   &na_1,   WINDOW_A);\n-    bits_na_lam = secp256k1_ecmult_wnaf(wnaf_na_lam, &na_lam, WINDOW_A);\n+    bits_na_1   = secp256k1_ecmult_wnaf(wnaf_na_1,   130, &na_1,   WINDOW_A);\n+    bits_na_lam = secp256k1_ecmult_wnaf(wnaf_na_lam, 130, &na_lam, WINDOW_A);\n     VERIFY_CHECK(bits_na_1 <= 130);\n     VERIFY_CHECK(bits_na_lam <= 130);\n     bits = bits_na_1;\n@@ -248,70 +307,83 @@ static void secp256k1_ecmult(const secp256k1_ecmult_context_t *ctx, secp256k1_ge\n     }\n #else\n     /* build wnaf representation for na. */\n-    bits_na     = secp256k1_ecmult_wnaf(wnaf_na,     na,      WINDOW_A);\n+    bits_na     = secp256k1_ecmult_wnaf(wnaf_na,     256, na,      WINDOW_A);\n     bits = bits_na;\n #endif\n \n-    /* calculate odd multiples of a */\n-    secp256k1_ecmult_table_precomp_gej_var(pre_a, a, WINDOW_A);\n+    /* Calculate odd multiples of a.\n+     * All multiples are brought to the same Z 'denominator', which is stored\n+     * in Z. Due to secp256k1' isomorphism we can do all operations pretending\n+     * that the Z coordinate was 1, use affine addition formulae, and correct\n+     * the Z coordinate of the result once at the end.\n+     * The exception is the precomputed G table points, which are actually\n+     * affine. Compared to the base used for other points, they have a Z ratio\n+     * of 1/Z, so we can use secp256k1_gej_add_zinv_var, which uses the same\n+     * isomorphism to efficiently add with a known Z inverse.\n+     */\n+    secp256k1_ecmult_odd_multiples_table_globalz_windowa(pre_a, &Z, a);\n \n #ifdef USE_ENDOMORPHISM\n     for (i = 0; i < ECMULT_TABLE_SIZE(WINDOW_A); i++) {\n-        secp256k1_gej_mul_lambda(&pre_a_lam[i], &pre_a[i]);\n+        secp256k1_ge_mul_lambda(&pre_a_lam[i], &pre_a[i]);\n     }\n \n     /* split ng into ng_1 and ng_128 (where gn = gn_1 + gn_128*2^128, and gn_1 and gn_128 are ~128 bit) */\n     secp256k1_scalar_split_128(&ng_1, &ng_128, ng);\n \n     /* Build wnaf representation for ng_1 and ng_128 */\n-    bits_ng_1   = secp256k1_ecmult_wnaf(wnaf_ng_1,   &ng_1,   WINDOW_G);\n-    bits_ng_128 = secp256k1_ecmult_wnaf(wnaf_ng_128, &ng_128, WINDOW_G);\n+    bits_ng_1   = secp256k1_ecmult_wnaf(wnaf_ng_1,   129, &ng_1,   WINDOW_G);\n+    bits_ng_128 = secp256k1_ecmult_wnaf(wnaf_ng_128, 129, &ng_128, WINDOW_G);\n     if (bits_ng_1 > bits) {\n         bits = bits_ng_1;\n     }\n     if (bits_ng_128 > bits) {\n         bits = bits_ng_128;\n     }\n #else\n-    bits_ng     = secp256k1_ecmult_wnaf(wnaf_ng,     ng,      WINDOW_G);\n+    bits_ng     = secp256k1_ecmult_wnaf(wnaf_ng,     256, ng,      WINDOW_G);\n     if (bits_ng > bits) {\n         bits = bits_ng;\n     }\n #endif\n \n     secp256k1_gej_set_infinity(r);\n \n-    for (i = bits-1; i >= 0; i--) {\n+    for (i = bits - 1; i >= 0; i--) {\n         int n;\n-        secp256k1_gej_double_var(r, r);\n+        secp256k1_gej_double_var(r, r, NULL);\n #ifdef USE_ENDOMORPHISM\n         if (i < bits_na_1 && (n = wnaf_na_1[i])) {\n-            ECMULT_TABLE_GET_GEJ(&tmpj, pre_a, n, WINDOW_A);\n-            secp256k1_gej_add_var(r, r, &tmpj);\n+            ECMULT_TABLE_GET_GE(&tmpa, pre_a, n, WINDOW_A);\n+            secp256k1_gej_add_ge_var(r, r, &tmpa, NULL);\n         }\n         if (i < bits_na_lam && (n = wnaf_na_lam[i])) {\n-            ECMULT_TABLE_GET_GEJ(&tmpj, pre_a_lam, n, WINDOW_A);\n-            secp256k1_gej_add_var(r, r, &tmpj);\n+            ECMULT_TABLE_GET_GE(&tmpa, pre_a_lam, n, WINDOW_A);\n+            secp256k1_gej_add_ge_var(r, r, &tmpa, NULL);\n         }\n         if (i < bits_ng_1 && (n = wnaf_ng_1[i])) {\n             ECMULT_TABLE_GET_GE_STORAGE(&tmpa, *ctx->pre_g, n, WINDOW_G);\n-            secp256k1_gej_add_ge_var(r, r, &tmpa);\n+            secp256k1_gej_add_zinv_var(r, r, &tmpa, &Z);\n         }\n         if (i < bits_ng_128 && (n = wnaf_ng_128[i])) {\n             ECMULT_TABLE_GET_GE_STORAGE(&tmpa, *ctx->pre_g_128, n, WINDOW_G);\n-            secp256k1_gej_add_ge_var(r, r, &tmpa);\n+            secp256k1_gej_add_zinv_var(r, r, &tmpa, &Z);\n         }\n #else\n         if (i < bits_na && (n = wnaf_na[i])) {\n-            ECMULT_TABLE_GET_GEJ(&tmpj, pre_a, n, WINDOW_A);\n-            secp256k1_gej_add_var(r, r, &tmpj);\n+            ECMULT_TABLE_GET_GE(&tmpa, pre_a, n, WINDOW_A);\n+            secp256k1_gej_add_ge_var(r, r, &tmpa, NULL);\n         }\n         if (i < bits_ng && (n = wnaf_ng[i])) {\n             ECMULT_TABLE_GET_GE_STORAGE(&tmpa, *ctx->pre_g, n, WINDOW_G);\n-            secp256k1_gej_add_ge_var(r, r, &tmpa);\n+            secp256k1_gej_add_zinv_var(r, r, &tmpa, &Z);\n         }\n #endif\n     }\n+\n+    if (!r->infinity) {\n+        secp256k1_fe_mul(&r->z, &r->z, &Z);\n+    }\n }\n \n #endif"
      },
      {
        "sha": "2d52af5e366c221238543983bb6d215f80e51ef4",
        "filename": "src/secp256k1/src/field.h",
        "status": "modified",
        "additions": 32,
        "deletions": 30,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -10,7 +10,7 @@\n /** Field element module.\n  *\n  *  Field elements can be represented in several ways, but code accessing\n- *  it (and implementations) need to take certain properaties into account:\n+ *  it (and implementations) need to take certain properties into account:\n  *  - Each field element can be normalized or not.\n  *  - Each field element has a magnitude, which represents how far away\n  *    its representation is away from normalization. Normalized elements\n@@ -31,89 +31,91 @@\n #endif\n \n /** Normalize a field element. */\n-static void secp256k1_fe_normalize(secp256k1_fe_t *r);\n+static void secp256k1_fe_normalize(secp256k1_fe *r);\n \n /** Weakly normalize a field element: reduce it magnitude to 1, but don't fully normalize. */\n-static void secp256k1_fe_normalize_weak(secp256k1_fe_t *r);\n+static void secp256k1_fe_normalize_weak(secp256k1_fe *r);\n \n /** Normalize a field element, without constant-time guarantee. */\n-static void secp256k1_fe_normalize_var(secp256k1_fe_t *r);\n+static void secp256k1_fe_normalize_var(secp256k1_fe *r);\n \n /** Verify whether a field element represents zero i.e. would normalize to a zero value. The field\n  *  implementation may optionally normalize the input, but this should not be relied upon. */\n-static int secp256k1_fe_normalizes_to_zero(secp256k1_fe_t *r);\n+static int secp256k1_fe_normalizes_to_zero(secp256k1_fe *r);\n \n /** Verify whether a field element represents zero i.e. would normalize to a zero value. The field\n  *  implementation may optionally normalize the input, but this should not be relied upon. */\n-static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe_t *r);\n+static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe *r);\n \n /** Set a field element equal to a small integer. Resulting field element is normalized. */\n-static void secp256k1_fe_set_int(secp256k1_fe_t *r, int a);\n+static void secp256k1_fe_set_int(secp256k1_fe *r, int a);\n \n /** Verify whether a field element is zero. Requires the input to be normalized. */\n-static int secp256k1_fe_is_zero(const secp256k1_fe_t *a);\n+static int secp256k1_fe_is_zero(const secp256k1_fe *a);\n \n /** Check the \"oddness\" of a field element. Requires the input to be normalized. */\n-static int secp256k1_fe_is_odd(const secp256k1_fe_t *a);\n+static int secp256k1_fe_is_odd(const secp256k1_fe *a);\n \n /** Compare two field elements. Requires magnitude-1 inputs. */\n-static int secp256k1_fe_equal_var(const secp256k1_fe_t *a, const secp256k1_fe_t *b);\n+static int secp256k1_fe_equal_var(const secp256k1_fe *a, const secp256k1_fe *b);\n \n /** Compare two field elements. Requires both inputs to be normalized */\n-static int secp256k1_fe_cmp_var(const secp256k1_fe_t *a, const secp256k1_fe_t *b);\n+static int secp256k1_fe_cmp_var(const secp256k1_fe *a, const secp256k1_fe *b);\n \n-/** Set a field element equal to 32-byte big endian value. If succesful, the resulting field element is normalized. */\n-static int secp256k1_fe_set_b32(secp256k1_fe_t *r, const unsigned char *a);\n+/** Set a field element equal to 32-byte big endian value. If successful, the resulting field element is normalized. */\n+static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a);\n \n /** Convert a field element to a 32-byte big endian value. Requires the input to be normalized */\n-static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe_t *a);\n+static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe *a);\n \n /** Set a field element equal to the additive inverse of another. Takes a maximum magnitude of the input\n  *  as an argument. The magnitude of the output is one higher. */\n-static void secp256k1_fe_negate(secp256k1_fe_t *r, const secp256k1_fe_t *a, int m);\n+static void secp256k1_fe_negate(secp256k1_fe *r, const secp256k1_fe *a, int m);\n \n /** Multiplies the passed field element with a small integer constant. Multiplies the magnitude by that\n  *  small integer. */\n-static void secp256k1_fe_mul_int(secp256k1_fe_t *r, int a);\n+static void secp256k1_fe_mul_int(secp256k1_fe *r, int a);\n \n /** Adds a field element to another. The result has the sum of the inputs' magnitudes as magnitude. */\n-static void secp256k1_fe_add(secp256k1_fe_t *r, const secp256k1_fe_t *a);\n+static void secp256k1_fe_add(secp256k1_fe *r, const secp256k1_fe *a);\n \n /** Sets a field element to be the product of two others. Requires the inputs' magnitudes to be at most 8.\n  *  The output magnitude is 1 (but not guaranteed to be normalized). */\n-static void secp256k1_fe_mul(secp256k1_fe_t *r, const secp256k1_fe_t *a, const secp256k1_fe_t * SECP256K1_RESTRICT b);\n+static void secp256k1_fe_mul(secp256k1_fe *r, const secp256k1_fe *a, const secp256k1_fe * SECP256K1_RESTRICT b);\n \n /** Sets a field element to be the square of another. Requires the input's magnitude to be at most 8.\n  *  The output magnitude is 1 (but not guaranteed to be normalized). */\n-static void secp256k1_fe_sqr(secp256k1_fe_t *r, const secp256k1_fe_t *a);\n+static void secp256k1_fe_sqr(secp256k1_fe *r, const secp256k1_fe *a);\n \n-/** Sets a field element to be the (modular) square root (if any exist) of another. Requires the\n- *  input's magnitude to be at most 8. The output magnitude is 1 (but not guaranteed to be\n- *  normalized). Return value indicates whether a square root was found. */\n-static int secp256k1_fe_sqrt_var(secp256k1_fe_t *r, const secp256k1_fe_t *a);\n+/** If a has a square root, it is computed in r and 1 is returned. If a does not\n+ *  have a square root, the root of its negation is computed and 0 is returned.\n+ *  The input's magnitude can be at most 8. The output magnitude is 1 (but not\n+ *  guaranteed to be normalized). The result in r will always be a square\n+ *  itself. */\n+static int secp256k1_fe_sqrt_var(secp256k1_fe *r, const secp256k1_fe *a);\n \n /** Sets a field element to be the (modular) inverse of another. Requires the input's magnitude to be\n  *  at most 8. The output magnitude is 1 (but not guaranteed to be normalized). */\n-static void secp256k1_fe_inv(secp256k1_fe_t *r, const secp256k1_fe_t *a);\n+static void secp256k1_fe_inv(secp256k1_fe *r, const secp256k1_fe *a);\n \n /** Potentially faster version of secp256k1_fe_inv, without constant-time guarantee. */\n-static void secp256k1_fe_inv_var(secp256k1_fe_t *r, const secp256k1_fe_t *a);\n+static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *a);\n \n /** Calculate the (modular) inverses of a batch of field elements. Requires the inputs' magnitudes to be\n  *  at most 8. The output magnitudes are 1 (but not guaranteed to be normalized). The inputs and\n  *  outputs must not overlap in memory. */\n-static void secp256k1_fe_inv_all_var(size_t len, secp256k1_fe_t *r, const secp256k1_fe_t *a);\n+static void secp256k1_fe_inv_all_var(size_t len, secp256k1_fe *r, const secp256k1_fe *a);\n \n /** Convert a field element to the storage type. */\n-static void secp256k1_fe_to_storage(secp256k1_fe_storage_t *r, const secp256k1_fe_t*);\n+static void secp256k1_fe_to_storage(secp256k1_fe_storage *r, const secp256k1_fe *a);\n \n /** Convert a field element back from the storage type. */\n-static void secp256k1_fe_from_storage(secp256k1_fe_t *r, const secp256k1_fe_storage_t*);\n+static void secp256k1_fe_from_storage(secp256k1_fe *r, const secp256k1_fe_storage *a);\n \n /** If flag is true, set *r equal to *a; otherwise leave it. Constant-time. */\n-static void secp256k1_fe_storage_cmov(secp256k1_fe_storage_t *r, const secp256k1_fe_storage_t *a, int flag);\n+static void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_fe_storage *a, int flag);\n \n /** If flag is true, set *r equal to *a; otherwise leave it. Constant-time. */\n-static void secp256k1_fe_cmov(secp256k1_fe_t *r, const secp256k1_fe_t *a, int flag);\n+static void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag);\n \n #endif"
      },
      {
        "sha": "61ee1e09656442501ef8f16ea96dc48b19ead357",
        "filename": "src/secp256k1/src/field_10x26.h",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_10x26.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_10x26.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_10x26.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -16,20 +16,20 @@ typedef struct {\n     int magnitude;\n     int normalized;\n #endif\n-} secp256k1_fe_t;\n+} secp256k1_fe;\n \n /* Unpacks a constant into a overlapping multi-limbed FE element. */\n #define SECP256K1_FE_CONST_INNER(d7, d6, d5, d4, d3, d2, d1, d0) { \\\n     (d0) & 0x3FFFFFFUL, \\\n-    ((d0) >> 26) | ((d1) & 0xFFFFFUL) << 6, \\\n-    ((d1) >> 20) | ((d2) & 0x3FFFUL) << 12, \\\n-    ((d2) >> 14) | ((d3) & 0xFFUL) << 18, \\\n-    ((d3) >> 8) | ((d4) & 0x3) << 24, \\\n-    ((d4) >> 2) & 0x3FFFFFFUL, \\\n-    ((d4) >> 28) | ((d5) & 0x3FFFFFUL) << 4, \\\n-    ((d5) >> 22) | ((d6) & 0xFFFF) << 10, \\\n-    ((d6) >> 16) | ((d7) & 0x3FF) << 16, \\\n-    ((d7) >> 10) \\\n+    (((uint32_t)d0) >> 26) | (((uint32_t)(d1) & 0xFFFFFUL) << 6), \\\n+    (((uint32_t)d1) >> 20) | (((uint32_t)(d2) & 0x3FFFUL) << 12), \\\n+    (((uint32_t)d2) >> 14) | (((uint32_t)(d3) & 0xFFUL) << 18), \\\n+    (((uint32_t)d3) >> 8) | (((uint32_t)(d4) & 0x3UL) << 24), \\\n+    (((uint32_t)d4) >> 2) & 0x3FFFFFFUL, \\\n+    (((uint32_t)d4) >> 28) | (((uint32_t)(d5) & 0x3FFFFFUL) << 4), \\\n+    (((uint32_t)d5) >> 22) | (((uint32_t)(d6) & 0xFFFFUL) << 10), \\\n+    (((uint32_t)d6) >> 16) | (((uint32_t)(d7) & 0x3FFUL) << 16), \\\n+    (((uint32_t)d7) >> 10) \\\n }\n \n #ifdef VERIFY\n@@ -40,8 +40,8 @@ typedef struct {\n \n typedef struct {\n     uint32_t n[8];\n-} secp256k1_fe_storage_t;\n+} secp256k1_fe_storage;\n \n #define SECP256K1_FE_STORAGE_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{ (d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7) }}\n-\n+#define SECP256K1_FE_STORAGE_CONST_GET(d) d.n[7], d.n[6], d.n[5], d.n[4],d.n[3], d.n[2], d.n[1], d.n[0]\n #endif"
      },
      {
        "sha": "212cc5396af82689ec5a6b60e45972b9bf5f1f2b",
        "filename": "src/secp256k1/src/field_10x26_impl.h",
        "status": "modified",
        "additions": 28,
        "deletions": 26,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_10x26_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_10x26_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_10x26_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -14,7 +14,7 @@\n #include \"field.h\"\n \n #ifdef VERIFY\n-static void secp256k1_fe_verify(const secp256k1_fe_t *a) {\n+static void secp256k1_fe_verify(const secp256k1_fe *a) {\n     const uint32_t *d = a->n;\n     int m = a->normalized ? 1 : 2 * a->magnitude, r = 1;\n     r &= (d[0] <= 0x3FFFFFFUL * m);\n@@ -41,12 +41,12 @@ static void secp256k1_fe_verify(const secp256k1_fe_t *a) {\n     VERIFY_CHECK(r == 1);\n }\n #else\n-static void secp256k1_fe_verify(const secp256k1_fe_t *a) {\n+static void secp256k1_fe_verify(const secp256k1_fe *a) {\n     (void)a;\n }\n #endif\n \n-static void secp256k1_fe_normalize(secp256k1_fe_t *r) {\n+static void secp256k1_fe_normalize(secp256k1_fe *r) {\n     uint32_t t0 = r->n[0], t1 = r->n[1], t2 = r->n[2], t3 = r->n[3], t4 = r->n[4],\n              t5 = r->n[5], t6 = r->n[6], t7 = r->n[7], t8 = r->n[8], t9 = r->n[9];\n \n@@ -101,7 +101,7 @@ static void secp256k1_fe_normalize(secp256k1_fe_t *r) {\n #endif\n }\n \n-static void secp256k1_fe_normalize_weak(secp256k1_fe_t *r) {\n+static void secp256k1_fe_normalize_weak(secp256k1_fe *r) {\n     uint32_t t0 = r->n[0], t1 = r->n[1], t2 = r->n[2], t3 = r->n[3], t4 = r->n[4],\n              t5 = r->n[5], t6 = r->n[6], t7 = r->n[7], t8 = r->n[8], t9 = r->n[9];\n \n@@ -132,7 +132,7 @@ static void secp256k1_fe_normalize_weak(secp256k1_fe_t *r) {\n #endif\n }\n \n-static void secp256k1_fe_normalize_var(secp256k1_fe_t *r) {\n+static void secp256k1_fe_normalize_var(secp256k1_fe *r) {\n     uint32_t t0 = r->n[0], t1 = r->n[1], t2 = r->n[2], t3 = r->n[3], t4 = r->n[4],\n              t5 = r->n[5], t6 = r->n[6], t7 = r->n[7], t8 = r->n[8], t9 = r->n[9];\n \n@@ -188,7 +188,7 @@ static void secp256k1_fe_normalize_var(secp256k1_fe_t *r) {\n #endif\n }\n \n-static int secp256k1_fe_normalizes_to_zero(secp256k1_fe_t *r) {\n+static int secp256k1_fe_normalizes_to_zero(secp256k1_fe *r) {\n     uint32_t t0 = r->n[0], t1 = r->n[1], t2 = r->n[2], t3 = r->n[3], t4 = r->n[4],\n              t5 = r->n[5], t6 = r->n[6], t7 = r->n[7], t8 = r->n[8], t9 = r->n[9];\n \n@@ -217,7 +217,7 @@ static int secp256k1_fe_normalizes_to_zero(secp256k1_fe_t *r) {\n     return (z0 == 0) | (z1 == 0x3FFFFFFUL);\n }\n \n-static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe_t *r) {\n+static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe *r) {\n     uint32_t t0, t1, t2, t3, t4, t5, t6, t7, t8, t9;\n     uint32_t z0, z1;\n     uint32_t x;\n@@ -252,7 +252,7 @@ static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe_t *r) {\n     t9 &= 0x03FFFFFUL;\n     t1 += (x << 6);\n \n-    t1 += (t0 >> 26); t0  = z0;\n+    t1 += (t0 >> 26);\n     t2 += (t1 >> 26); t1 &= 0x3FFFFFFUL; z0 |= t1; z1 &= t1 ^ 0x40UL;\n     t3 += (t2 >> 26); t2 &= 0x3FFFFFFUL; z0 |= t2; z1 &= t2;\n     t4 += (t3 >> 26); t3 &= 0x3FFFFFFUL; z0 |= t3; z1 &= t3;\n@@ -269,7 +269,7 @@ static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe_t *r) {\n     return (z0 == 0) | (z1 == 0x3FFFFFFUL);\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe_t *r, int a) {\n+SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe *r, int a) {\n     r->n[0] = a;\n     r->n[1] = r->n[2] = r->n[3] = r->n[4] = r->n[5] = r->n[6] = r->n[7] = r->n[8] = r->n[9] = 0;\n #ifdef VERIFY\n@@ -279,7 +279,7 @@ SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe_t *r, int a) {\n #endif\n }\n \n-SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe_t *a) {\n+SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe *a) {\n     const uint32_t *t = a->n;\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n@@ -288,15 +288,15 @@ SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe_t *a) {\n     return (t[0] | t[1] | t[2] | t[3] | t[4] | t[5] | t[6] | t[7] | t[8] | t[9]) == 0;\n }\n \n-SECP256K1_INLINE static int secp256k1_fe_is_odd(const secp256k1_fe_t *a) {\n+SECP256K1_INLINE static int secp256k1_fe_is_odd(const secp256k1_fe *a) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n     secp256k1_fe_verify(a);\n #endif\n     return a->n[0] & 1;\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe_t *a) {\n+SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe *a) {\n     int i;\n #ifdef VERIFY\n     a->magnitude = 0;\n@@ -307,7 +307,7 @@ SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe_t *a) {\n     }\n }\n \n-static int secp256k1_fe_cmp_var(const secp256k1_fe_t *a, const secp256k1_fe_t *b) {\n+static int secp256k1_fe_cmp_var(const secp256k1_fe *a, const secp256k1_fe *b) {\n     int i;\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n@@ -326,7 +326,7 @@ static int secp256k1_fe_cmp_var(const secp256k1_fe_t *a, const secp256k1_fe_t *b\n     return 0;\n }\n \n-static int secp256k1_fe_set_b32(secp256k1_fe_t *r, const unsigned char *a) {\n+static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {\n     int i;\n     r->n[0] = r->n[1] = r->n[2] = r->n[3] = r->n[4] = 0;\n     r->n[5] = r->n[6] = r->n[7] = r->n[8] = r->n[9] = 0;\n@@ -350,7 +350,7 @@ static int secp256k1_fe_set_b32(secp256k1_fe_t *r, const unsigned char *a) {\n }\n \n /** Convert a field element to a 32-byte big endian value. Requires the input to be normalized */\n-static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe_t *a) {\n+static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe *a) {\n     int i;\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n@@ -368,7 +368,7 @@ static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe_t *a) {\n     }\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe_t *r, const secp256k1_fe_t *a, int m) {\n+SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe *r, const secp256k1_fe *a, int m) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->magnitude <= m);\n     secp256k1_fe_verify(a);\n@@ -390,7 +390,7 @@ SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe_t *r, const secp25\n #endif\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe_t *r, int a) {\n+SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe *r, int a) {\n     r->n[0] *= a;\n     r->n[1] *= a;\n     r->n[2] *= a;\n@@ -408,7 +408,7 @@ SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe_t *r, int a) {\n #endif\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n+SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe *r, const secp256k1_fe *a) {\n #ifdef VERIFY\n     secp256k1_fe_verify(a);\n #endif\n@@ -1039,7 +1039,7 @@ SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint32_t *r, const uint32_t\n }\n \n \n-static void secp256k1_fe_mul(secp256k1_fe_t *r, const secp256k1_fe_t *a, const secp256k1_fe_t * SECP256K1_RESTRICT b) {\n+static void secp256k1_fe_mul(secp256k1_fe *r, const secp256k1_fe *a, const secp256k1_fe * SECP256K1_RESTRICT b) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->magnitude <= 8);\n     VERIFY_CHECK(b->magnitude <= 8);\n@@ -1055,7 +1055,7 @@ static void secp256k1_fe_mul(secp256k1_fe_t *r, const secp256k1_fe_t *a, const s\n #endif\n }\n \n-static void secp256k1_fe_sqr(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n+static void secp256k1_fe_sqr(secp256k1_fe *r, const secp256k1_fe *a) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->magnitude <= 8);\n     secp256k1_fe_verify(a);\n@@ -1068,7 +1068,7 @@ static void secp256k1_fe_sqr(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n #endif\n }\n \n-static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe_t *r, const secp256k1_fe_t *a, int flag) {\n+static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag) {\n     uint32_t mask0, mask1;\n     mask0 = flag + ~((uint32_t)0);\n     mask1 = ~mask0;\n@@ -1083,12 +1083,14 @@ static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe_t *r, const secp256k\n     r->n[8] = (r->n[8] & mask0) | (a->n[8] & mask1);\n     r->n[9] = (r->n[9] & mask0) | (a->n[9] & mask1);\n #ifdef VERIFY\n-    r->magnitude = (r->magnitude & mask0) | (a->magnitude & mask1);\n-    r->normalized = (r->normalized & mask0) | (a->normalized & mask1);\n+    if (a->magnitude > r->magnitude) {\n+        r->magnitude = a->magnitude;\n+    }\n+    r->normalized &= a->normalized;\n #endif\n }\n \n-static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage_t *r, const secp256k1_fe_storage_t *a, int flag) {\n+static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_fe_storage *a, int flag) {\n     uint32_t mask0, mask1;\n     mask0 = flag + ~((uint32_t)0);\n     mask1 = ~mask0;\n@@ -1102,7 +1104,7 @@ static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage_t *r\n     r->n[7] = (r->n[7] & mask0) | (a->n[7] & mask1);\n }\n \n-static void secp256k1_fe_to_storage(secp256k1_fe_storage_t *r, const secp256k1_fe_t *a) {\n+static void secp256k1_fe_to_storage(secp256k1_fe_storage *r, const secp256k1_fe *a) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n #endif\n@@ -1116,7 +1118,7 @@ static void secp256k1_fe_to_storage(secp256k1_fe_storage_t *r, const secp256k1_f\n     r->n[7] = a->n[8] >> 16 | a->n[9] << 10;\n }\n \n-static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe_t *r, const secp256k1_fe_storage_t *a) {\n+static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const secp256k1_fe_storage *a) {\n     r->n[0] = a->n[0] & 0x3FFFFFFUL;\n     r->n[1] = a->n[0] >> 26 | ((a->n[1] << 6) & 0x3FFFFFFUL);\n     r->n[2] = a->n[1] >> 20 | ((a->n[2] << 12) & 0x3FFFFFFUL);"
      },
      {
        "sha": "8e69a560dccb6c99621dee52f67a2502343453ca",
        "filename": "src/secp256k1/src/field_5x52.h",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_5x52.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_5x52.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_5x52.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -16,15 +16,15 @@ typedef struct {\n     int magnitude;\n     int normalized;\n #endif\n-} secp256k1_fe_t;\n+} secp256k1_fe;\n \n /* Unpacks a constant into a overlapping multi-limbed FE element. */\n #define SECP256K1_FE_CONST_INNER(d7, d6, d5, d4, d3, d2, d1, d0) { \\\n-    (d0) | ((uint64_t)(d1) & 0xFFFFFUL) << 32, \\\n-    ((d1) >> 20) | ((uint64_t)(d2)) << 12 | ((uint64_t)(d3) & 0xFFUL) << 44, \\\n-    ((d3) >> 8) | ((uint64_t)(d4) & 0xFFFFFFFUL) << 24, \\\n-    ((d4) >> 28) | ((uint64_t)(d5)) << 4 | ((uint64_t)(d6) & 0xFFFFUL) << 36, \\\n-    ((d6) >> 16) | ((uint64_t)(d7)) << 16 \\\n+    (d0) | (((uint64_t)(d1) & 0xFFFFFUL) << 32), \\\n+    ((uint64_t)(d1) >> 20) | (((uint64_t)(d2)) << 12) | (((uint64_t)(d3) & 0xFFUL) << 44), \\\n+    ((uint64_t)(d3) >> 8) | (((uint64_t)(d4) & 0xFFFFFFFUL) << 24), \\\n+    ((uint64_t)(d4) >> 28) | (((uint64_t)(d5)) << 4) | (((uint64_t)(d6) & 0xFFFFUL) << 36), \\\n+    ((uint64_t)(d6) >> 16) | (((uint64_t)(d7)) << 16) \\\n }\n \n #ifdef VERIFY\n@@ -35,13 +35,13 @@ typedef struct {\n \n typedef struct {\n     uint64_t n[4];\n-} secp256k1_fe_storage_t;\n+} secp256k1_fe_storage;\n \n #define SECP256K1_FE_STORAGE_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{ \\\n-    (d0) | ((uint64_t)(d1)) << 32, \\\n-    (d2) | ((uint64_t)(d3)) << 32, \\\n-    (d4) | ((uint64_t)(d5)) << 32, \\\n-    (d6) | ((uint64_t)(d7)) << 32 \\\n+    (d0) | (((uint64_t)(d1)) << 32), \\\n+    (d2) | (((uint64_t)(d3)) << 32), \\\n+    (d4) | (((uint64_t)(d5)) << 32), \\\n+    (d6) | (((uint64_t)(d7)) << 32) \\\n }}\n \n #endif"
      },
      {
        "sha": "b31e24ab811b06dc654a00e2139be8ac2466ac1d",
        "filename": "src/secp256k1/src/field_5x52_impl.h",
        "status": "modified",
        "additions": 28,
        "deletions": 26,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_5x52_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_5x52_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_5x52_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -31,7 +31,7 @@\n  */\n \n #ifdef VERIFY\n-static void secp256k1_fe_verify(const secp256k1_fe_t *a) {\n+static void secp256k1_fe_verify(const secp256k1_fe *a) {\n     const uint64_t *d = a->n;\n     int m = a->normalized ? 1 : 2 * a->magnitude, r = 1;\n    /* secp256k1 'p' value defined in \"Standards for Efficient Cryptography\" (SEC2) 2.7.1. */\n@@ -51,12 +51,12 @@ static void secp256k1_fe_verify(const secp256k1_fe_t *a) {\n     VERIFY_CHECK(r == 1);\n }\n #else\n-static void secp256k1_fe_verify(const secp256k1_fe_t *a) {\n+static void secp256k1_fe_verify(const secp256k1_fe *a) {\n     (void)a;\n }\n #endif\n \n-static void secp256k1_fe_normalize(secp256k1_fe_t *r) {\n+static void secp256k1_fe_normalize(secp256k1_fe *r) {\n     uint64_t t0 = r->n[0], t1 = r->n[1], t2 = r->n[2], t3 = r->n[3], t4 = r->n[4];\n \n     /* Reduce t4 at the start so there will be at most a single carry from the first pass */\n@@ -99,7 +99,7 @@ static void secp256k1_fe_normalize(secp256k1_fe_t *r) {\n #endif\n }\n \n-static void secp256k1_fe_normalize_weak(secp256k1_fe_t *r) {\n+static void secp256k1_fe_normalize_weak(secp256k1_fe *r) {\n     uint64_t t0 = r->n[0], t1 = r->n[1], t2 = r->n[2], t3 = r->n[3], t4 = r->n[4];\n \n     /* Reduce t4 at the start so there will be at most a single carry from the first pass */\n@@ -123,7 +123,7 @@ static void secp256k1_fe_normalize_weak(secp256k1_fe_t *r) {\n #endif\n }\n \n-static void secp256k1_fe_normalize_var(secp256k1_fe_t *r) {\n+static void secp256k1_fe_normalize_var(secp256k1_fe *r) {\n     uint64_t t0 = r->n[0], t1 = r->n[1], t2 = r->n[2], t3 = r->n[3], t4 = r->n[4];\n \n     /* Reduce t4 at the start so there will be at most a single carry from the first pass */\n@@ -167,7 +167,7 @@ static void secp256k1_fe_normalize_var(secp256k1_fe_t *r) {\n #endif\n }\n \n-static int secp256k1_fe_normalizes_to_zero(secp256k1_fe_t *r) {\n+static int secp256k1_fe_normalizes_to_zero(secp256k1_fe *r) {\n     uint64_t t0 = r->n[0], t1 = r->n[1], t2 = r->n[2], t3 = r->n[3], t4 = r->n[4];\n \n     /* z0 tracks a possible raw value of 0, z1 tracks a possible raw value of P */\n@@ -190,7 +190,7 @@ static int secp256k1_fe_normalizes_to_zero(secp256k1_fe_t *r) {\n     return (z0 == 0) | (z1 == 0xFFFFFFFFFFFFFULL);\n }\n \n-static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe_t *r) {\n+static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe *r) {\n     uint64_t t0, t1, t2, t3, t4;\n     uint64_t z0, z1;\n     uint64_t x;\n@@ -219,7 +219,7 @@ static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe_t *r) {\n \n     t4 &= 0x0FFFFFFFFFFFFULL;\n \n-    t1 += (t0 >> 52); t0  = z0;\n+    t1 += (t0 >> 52);\n     t2 += (t1 >> 52); t1 &= 0xFFFFFFFFFFFFFULL; z0 |= t1; z1 &= t1;\n     t3 += (t2 >> 52); t2 &= 0xFFFFFFFFFFFFFULL; z0 |= t2; z1 &= t2;\n     t4 += (t3 >> 52); t3 &= 0xFFFFFFFFFFFFFULL; z0 |= t3; z1 &= t3;\n@@ -231,7 +231,7 @@ static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe_t *r) {\n     return (z0 == 0) | (z1 == 0xFFFFFFFFFFFFFULL);\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe_t *r, int a) {\n+SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe *r, int a) {\n     r->n[0] = a;\n     r->n[1] = r->n[2] = r->n[3] = r->n[4] = 0;\n #ifdef VERIFY\n@@ -241,7 +241,7 @@ SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe_t *r, int a) {\n #endif\n }\n \n-SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe_t *a) {\n+SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe *a) {\n     const uint64_t *t = a->n;\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n@@ -250,15 +250,15 @@ SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe_t *a) {\n     return (t[0] | t[1] | t[2] | t[3] | t[4]) == 0;\n }\n \n-SECP256K1_INLINE static int secp256k1_fe_is_odd(const secp256k1_fe_t *a) {\n+SECP256K1_INLINE static int secp256k1_fe_is_odd(const secp256k1_fe *a) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n     secp256k1_fe_verify(a);\n #endif\n     return a->n[0] & 1;\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe_t *a) {\n+SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe *a) {\n     int i;\n #ifdef VERIFY\n     a->magnitude = 0;\n@@ -269,7 +269,7 @@ SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe_t *a) {\n     }\n }\n \n-static int secp256k1_fe_cmp_var(const secp256k1_fe_t *a, const secp256k1_fe_t *b) {\n+static int secp256k1_fe_cmp_var(const secp256k1_fe *a, const secp256k1_fe *b) {\n     int i;\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n@@ -288,7 +288,7 @@ static int secp256k1_fe_cmp_var(const secp256k1_fe_t *a, const secp256k1_fe_t *b\n     return 0;\n }\n \n-static int secp256k1_fe_set_b32(secp256k1_fe_t *r, const unsigned char *a) {\n+static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {\n     int i;\n     r->n[0] = r->n[1] = r->n[2] = r->n[3] = r->n[4] = 0;\n     for (i=0; i<32; i++) {\n@@ -311,7 +311,7 @@ static int secp256k1_fe_set_b32(secp256k1_fe_t *r, const unsigned char *a) {\n }\n \n /** Convert a field element to a 32-byte big endian value. Requires the input to be normalized */\n-static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe_t *a) {\n+static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe *a) {\n     int i;\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n@@ -329,7 +329,7 @@ static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe_t *a) {\n     }\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe_t *r, const secp256k1_fe_t *a, int m) {\n+SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe *r, const secp256k1_fe *a, int m) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->magnitude <= m);\n     secp256k1_fe_verify(a);\n@@ -346,7 +346,7 @@ SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe_t *r, const secp25\n #endif\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe_t *r, int a) {\n+SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe *r, int a) {\n     r->n[0] *= a;\n     r->n[1] *= a;\n     r->n[2] *= a;\n@@ -359,7 +359,7 @@ SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe_t *r, int a) {\n #endif\n }\n \n-SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n+SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe *r, const secp256k1_fe *a) {\n #ifdef VERIFY\n     secp256k1_fe_verify(a);\n #endif\n@@ -375,7 +375,7 @@ SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe_t *r, const secp256k1\n #endif\n }\n \n-static void secp256k1_fe_mul(secp256k1_fe_t *r, const secp256k1_fe_t *a, const secp256k1_fe_t * SECP256K1_RESTRICT b) {\n+static void secp256k1_fe_mul(secp256k1_fe *r, const secp256k1_fe *a, const secp256k1_fe * SECP256K1_RESTRICT b) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->magnitude <= 8);\n     VERIFY_CHECK(b->magnitude <= 8);\n@@ -391,7 +391,7 @@ static void secp256k1_fe_mul(secp256k1_fe_t *r, const secp256k1_fe_t *a, const s\n #endif\n }\n \n-static void secp256k1_fe_sqr(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n+static void secp256k1_fe_sqr(secp256k1_fe *r, const secp256k1_fe *a) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->magnitude <= 8);\n     secp256k1_fe_verify(a);\n@@ -404,7 +404,7 @@ static void secp256k1_fe_sqr(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n #endif\n }\n \n-static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe_t *r, const secp256k1_fe_t *a, int flag) {\n+static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag) {\n     uint64_t mask0, mask1;\n     mask0 = flag + ~((uint64_t)0);\n     mask1 = ~mask0;\n@@ -414,12 +414,14 @@ static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe_t *r, const secp256k\n     r->n[3] = (r->n[3] & mask0) | (a->n[3] & mask1);\n     r->n[4] = (r->n[4] & mask0) | (a->n[4] & mask1);\n #ifdef VERIFY\n-    r->magnitude = (r->magnitude & mask0) | (a->magnitude & mask1);\n-    r->normalized = (r->normalized & mask0) | (a->normalized & mask1);\n+    if (a->magnitude > r->magnitude) {\n+        r->magnitude = a->magnitude;\n+    }\n+    r->normalized &= a->normalized;\n #endif\n }\n \n-static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage_t *r, const secp256k1_fe_storage_t *a, int flag) {\n+static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_fe_storage *a, int flag) {\n     uint64_t mask0, mask1;\n     mask0 = flag + ~((uint64_t)0);\n     mask1 = ~mask0;\n@@ -429,7 +431,7 @@ static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage_t *r\n     r->n[3] = (r->n[3] & mask0) | (a->n[3] & mask1);\n }\n \n-static void secp256k1_fe_to_storage(secp256k1_fe_storage_t *r, const secp256k1_fe_t *a) {\n+static void secp256k1_fe_to_storage(secp256k1_fe_storage *r, const secp256k1_fe *a) {\n #ifdef VERIFY\n     VERIFY_CHECK(a->normalized);\n #endif\n@@ -439,7 +441,7 @@ static void secp256k1_fe_to_storage(secp256k1_fe_storage_t *r, const secp256k1_f\n     r->n[3] = a->n[3] >> 36 | a->n[4] << 16;\n }\n \n-static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe_t *r, const secp256k1_fe_storage_t *a) {\n+static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const secp256k1_fe_storage *a) {\n     r->n[0] = a->n[0] & 0xFFFFFFFFFFFFFULL;\n     r->n[1] = a->n[0] >> 52 | ((a->n[1] << 12) & 0xFFFFFFFFFFFFFULL);\n     r->n[2] = a->n[1] >> 40 | ((a->n[2] << 24) & 0xFFFFFFFFFFFFFULL);"
      },
      {
        "sha": "77f4aae2f97248eb5df77d33a1f9c18f8fa268b1",
        "filename": "src/secp256k1/src/field_impl.h",
        "status": "modified",
        "additions": 33,
        "deletions": 13,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/field_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -21,15 +21,24 @@\n #error \"Please select field implementation\"\n #endif\n \n-SECP256K1_INLINE static int secp256k1_fe_equal_var(const secp256k1_fe_t *a, const secp256k1_fe_t *b) {\n-    secp256k1_fe_t na;\n+SECP256K1_INLINE static int secp256k1_fe_equal_var(const secp256k1_fe *a, const secp256k1_fe *b) {\n+    secp256k1_fe na;\n     secp256k1_fe_negate(&na, a, 1);\n     secp256k1_fe_add(&na, b);\n     return secp256k1_fe_normalizes_to_zero_var(&na);\n }\n \n-static int secp256k1_fe_sqrt_var(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n-    secp256k1_fe_t x2, x3, x6, x9, x11, x22, x44, x88, x176, x220, x223, t1;\n+static int secp256k1_fe_sqrt_var(secp256k1_fe *r, const secp256k1_fe *a) {\n+    /** Given that p is congruent to 3 mod 4, we can compute the square root of\n+     *  a mod p as the (p+1)/4'th power of a.\n+     *\n+     *  As (p+1)/4 is an even number, it will have the same result for a and for\n+     *  (-a). Only one of these two numbers actually has a square root however,\n+     *  so we test at the end by squaring and comparing to the input.\n+     *  Also because (p+1)/4 is an even number, the computed square root is\n+     *  itself always a square (a ** ((p+1)/4) is the square of a ** ((p+1)/8)).\n+     */\n+    secp256k1_fe x2, x3, x6, x9, x11, x22, x44, x88, x176, x220, x223, t1;\n     int j;\n \n     /** The binary representation of (p + 1)/4 has 3 blocks of 1s, with lengths in\n@@ -117,8 +126,8 @@ static int secp256k1_fe_sqrt_var(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n     return secp256k1_fe_equal_var(&t1, a);\n }\n \n-static void secp256k1_fe_inv(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n-    secp256k1_fe_t x2, x3, x6, x9, x11, x22, x44, x88, x176, x220, x223, t1;\n+static void secp256k1_fe_inv(secp256k1_fe *r, const secp256k1_fe *a) {\n+    secp256k1_fe x2, x3, x6, x9, x11, x22, x44, x88, x176, x220, x223, t1;\n     int j;\n \n     /** The binary representation of (p - 2) has 5 blocks of 1s, with lengths in\n@@ -207,11 +216,15 @@ static void secp256k1_fe_inv(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n     secp256k1_fe_mul(r, a, &t1);\n }\n \n-static void secp256k1_fe_inv_var(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n+static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *a) {\n #if defined(USE_FIELD_INV_BUILTIN)\n     secp256k1_fe_inv(r, a);\n #elif defined(USE_FIELD_INV_NUM)\n-    secp256k1_num_t n, m;\n+    secp256k1_num n, m;\n+    static const secp256k1_fe negone = SECP256K1_FE_CONST(\n+        0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFFUL,\n+        0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFEUL, 0xFFFFFC2EUL\n+    );\n     /* secp256k1 field prime, value p defined in \"Standards for Efficient Cryptography\" (SEC2) 2.7.1. */\n     static const unsigned char prime[32] = {\n         0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n@@ -220,21 +233,28 @@ static void secp256k1_fe_inv_var(secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n         0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFC,0x2F\n     };\n     unsigned char b[32];\n-    secp256k1_fe_t c = *a;\n+    int res;\n+    secp256k1_fe c = *a;\n     secp256k1_fe_normalize_var(&c);\n     secp256k1_fe_get_b32(b, &c);\n     secp256k1_num_set_bin(&n, b, 32);\n     secp256k1_num_set_bin(&m, prime, 32);\n     secp256k1_num_mod_inverse(&n, &n, &m);\n     secp256k1_num_get_bin(b, 32, &n);\n-    VERIFY_CHECK(secp256k1_fe_set_b32(r, b));\n+    res = secp256k1_fe_set_b32(r, b);\n+    (void)res;\n+    VERIFY_CHECK(res);\n+    /* Verify the result is the (unique) valid inverse using non-GMP code. */\n+    secp256k1_fe_mul(&c, &c, r);\n+    secp256k1_fe_add(&c, &negone);\n+    CHECK(secp256k1_fe_normalizes_to_zero_var(&c));\n #else\n #error \"Please select field inverse implementation\"\n #endif\n }\n \n-static void secp256k1_fe_inv_all_var(size_t len, secp256k1_fe_t *r, const secp256k1_fe_t *a) {\n-    secp256k1_fe_t u;\n+static void secp256k1_fe_inv_all_var(size_t len, secp256k1_fe *r, const secp256k1_fe *a) {\n+    secp256k1_fe u;\n     size_t i;\n     if (len < 1) {\n         return;\n@@ -252,7 +272,7 @@ static void secp256k1_fe_inv_all_var(size_t len, secp256k1_fe_t *r, const secp25\n     secp256k1_fe_inv_var(&u, &r[--i]);\n \n     while (i > 0) {\n-        int j = i--;\n+        size_t j = i--;\n         secp256k1_fe_mul(&r[j], &r[i], &u);\n         secp256k1_fe_mul(&u, &u, &a[j]);\n     }"
      },
      {
        "sha": "1835fd491d16b7d8f4774327f25994a79ea1986a",
        "filename": "src/secp256k1/src/gen_context.c",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/gen_context.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/gen_context.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/gen_context.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,74 @@\n+/**********************************************************************\n+ * Copyright (c) 2013, 2014, 2015 Thomas Daede, Cory Fields           *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#define USE_BASIC_CONFIG 1\n+\n+#include \"basic-config.h\"\n+#include \"include/secp256k1.h\"\n+#include \"field_impl.h\"\n+#include \"scalar_impl.h\"\n+#include \"group_impl.h\"\n+#include \"ecmult_gen_impl.h\"\n+\n+static void default_error_callback_fn(const char* str, void* data) {\n+    (void)data;\n+    fprintf(stderr, \"[libsecp256k1] internal consistency check failed: %s\\n\", str);\n+    abort();\n+}\n+\n+static const secp256k1_callback default_error_callback = {\n+    default_error_callback_fn,\n+    NULL\n+};\n+\n+int main(int argc, char **argv) {\n+    secp256k1_ecmult_gen_context ctx;\n+    int inner;\n+    int outer;\n+    FILE* fp;\n+\n+    (void)argc;\n+    (void)argv;\n+\n+    fp = fopen(\"src/ecmult_static_context.h\",\"w\");\n+    if (fp == NULL) {\n+        fprintf(stderr, \"Could not open src/ecmult_static_context.h for writing!\\n\");\n+        return -1;\n+    }\n+    \n+    fprintf(fp, \"#ifndef _SECP256K1_ECMULT_STATIC_CONTEXT_\\n\");\n+    fprintf(fp, \"#define _SECP256K1_ECMULT_STATIC_CONTEXT_\\n\");\n+    fprintf(fp, \"#include \\\"group.h\\\"\\n\");\n+    fprintf(fp, \"#define SC SECP256K1_GE_STORAGE_CONST\\n\");\n+    fprintf(fp, \"static const secp256k1_ge_storage secp256k1_ecmult_static_context[64][16] = {\\n\");\n+\n+    secp256k1_ecmult_gen_context_init(&ctx);\n+    secp256k1_ecmult_gen_context_build(&ctx, &default_error_callback);\n+    for(outer = 0; outer != 64; outer++) {\n+        fprintf(fp,\"{\\n\");\n+        for(inner = 0; inner != 16; inner++) {\n+            fprintf(fp,\"    SC(%uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu, %uu)\", SECP256K1_GE_STORAGE_CONST_GET((*ctx.prec)[outer][inner]));\n+            if (inner != 15) {\n+                fprintf(fp,\",\\n\");\n+            } else {\n+                fprintf(fp,\"\\n\");\n+            }\n+        }\n+        if (outer != 63) {\n+            fprintf(fp,\"},\\n\");\n+        } else {\n+            fprintf(fp,\"}\\n\");\n+        }\n+    }\n+    fprintf(fp,\"};\\n\");\n+    secp256k1_ecmult_gen_context_clear(&ctx);\n+    \n+    fprintf(fp, \"#undef SC\\n\");\n+    fprintf(fp, \"#endif\\n\");\n+    fclose(fp);\n+    \n+    return 0;\n+}"
      },
      {
        "sha": "ebfe1ca70cc1517ad692eda7c16cf32f8da78719",
        "filename": "src/secp256k1/src/group.h",
        "status": "modified",
        "additions": 63,
        "deletions": 43,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/group.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/group.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/group.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -12,110 +12,130 @@\n \n /** A group element of the secp256k1 curve, in affine coordinates. */\n typedef struct {\n-    secp256k1_fe_t x;\n-    secp256k1_fe_t y;\n+    secp256k1_fe x;\n+    secp256k1_fe y;\n     int infinity; /* whether this represents the point at infinity */\n-} secp256k1_ge_t;\n+} secp256k1_ge;\n \n #define SECP256K1_GE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {SECP256K1_FE_CONST((a),(b),(c),(d),(e),(f),(g),(h)), SECP256K1_FE_CONST((i),(j),(k),(l),(m),(n),(o),(p)), 0}\n #define SECP256K1_GE_CONST_INFINITY {SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 0), SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 0), 1}\n \n /** A group element of the secp256k1 curve, in jacobian coordinates. */\n typedef struct {\n-    secp256k1_fe_t x; /* actual X: x/z^2 */\n-    secp256k1_fe_t y; /* actual Y: y/z^3 */\n-    secp256k1_fe_t z;\n+    secp256k1_fe x; /* actual X: x/z^2 */\n+    secp256k1_fe y; /* actual Y: y/z^3 */\n+    secp256k1_fe z;\n     int infinity; /* whether this represents the point at infinity */\n-} secp256k1_gej_t;\n+} secp256k1_gej;\n \n #define SECP256K1_GEJ_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {SECP256K1_FE_CONST((a),(b),(c),(d),(e),(f),(g),(h)), SECP256K1_FE_CONST((i),(j),(k),(l),(m),(n),(o),(p)), SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 1), 0}\n #define SECP256K1_GEJ_CONST_INFINITY {SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 0), SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 0), SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 0), 1}\n \n typedef struct {\n-    secp256k1_fe_storage_t x;\n-    secp256k1_fe_storage_t y;\n-} secp256k1_ge_storage_t;\n+    secp256k1_fe_storage x;\n+    secp256k1_fe_storage y;\n+} secp256k1_ge_storage;\n \n #define SECP256K1_GE_STORAGE_CONST(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {SECP256K1_FE_STORAGE_CONST((a),(b),(c),(d),(e),(f),(g),(h)), SECP256K1_FE_STORAGE_CONST((i),(j),(k),(l),(m),(n),(o),(p))}\n \n-/** Set a group element equal to the point at infinity */\n-static void secp256k1_ge_set_infinity(secp256k1_ge_t *r);\n+#define SECP256K1_GE_STORAGE_CONST_GET(t) SECP256K1_FE_STORAGE_CONST_GET(t.x), SECP256K1_FE_STORAGE_CONST_GET(t.y)\n \n /** Set a group element equal to the point with given X and Y coordinates */\n-static void secp256k1_ge_set_xy(secp256k1_ge_t *r, const secp256k1_fe_t *x, const secp256k1_fe_t *y);\n+static void secp256k1_ge_set_xy(secp256k1_ge *r, const secp256k1_fe *x, const secp256k1_fe *y);\n+\n+/** Set a group element (affine) equal to the point with the given X coordinate\n+ *  and a Y coordinate that is a quadratic residue modulo p. The return value\n+ *  is true iff a coordinate with the given X coordinate exists.\n+ */\n+static int secp256k1_ge_set_xquad_var(secp256k1_ge *r, const secp256k1_fe *x);\n \n /** Set a group element (affine) equal to the point with the given X coordinate, and given oddness\n  *  for Y. Return value indicates whether the result is valid. */\n-static int secp256k1_ge_set_xo_var(secp256k1_ge_t *r, const secp256k1_fe_t *x, int odd);\n+static int secp256k1_ge_set_xo_var(secp256k1_ge *r, const secp256k1_fe *x, int odd);\n \n /** Check whether a group element is the point at infinity. */\n-static int secp256k1_ge_is_infinity(const secp256k1_ge_t *a);\n+static int secp256k1_ge_is_infinity(const secp256k1_ge *a);\n \n /** Check whether a group element is valid (i.e., on the curve). */\n-static int secp256k1_ge_is_valid_var(const secp256k1_ge_t *a);\n+static int secp256k1_ge_is_valid_var(const secp256k1_ge *a);\n \n-static void secp256k1_ge_neg(secp256k1_ge_t *r, const secp256k1_ge_t *a);\n+static void secp256k1_ge_neg(secp256k1_ge *r, const secp256k1_ge *a);\n \n /** Set a group element equal to another which is given in jacobian coordinates */\n-static void secp256k1_ge_set_gej(secp256k1_ge_t *r, secp256k1_gej_t *a);\n+static void secp256k1_ge_set_gej(secp256k1_ge *r, secp256k1_gej *a);\n \n /** Set a batch of group elements equal to the inputs given in jacobian coordinates */\n-static void secp256k1_ge_set_all_gej_var(size_t len, secp256k1_ge_t *r, const secp256k1_gej_t *a);\n+static void secp256k1_ge_set_all_gej_var(size_t len, secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_callback *cb);\n \n+/** Set a batch of group elements equal to the inputs given in jacobian\n+ *  coordinates (with known z-ratios). zr must contain the known z-ratios such\n+ *  that mul(a[i].z, zr[i+1]) == a[i+1].z. zr[0] is ignored. */\n+static void secp256k1_ge_set_table_gej_var(size_t len, secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_fe *zr);\n \n-/** Set a group element (jacobian) equal to the point at infinity. */\n-static void secp256k1_gej_set_infinity(secp256k1_gej_t *r);\n+/** Bring a batch inputs given in jacobian coordinates (with known z-ratios) to\n+ *  the same global z \"denominator\". zr must contain the known z-ratios such\n+ *  that mul(a[i].z, zr[i+1]) == a[i+1].z. zr[0] is ignored. The x and y\n+ *  coordinates of the result are stored in r, the common z coordinate is\n+ *  stored in globalz. */\n+static void secp256k1_ge_globalz_set_table_gej(size_t len, secp256k1_ge *r, secp256k1_fe *globalz, const secp256k1_gej *a, const secp256k1_fe *zr);\n \n-/** Set a group element (jacobian) equal to the point with given X and Y coordinates. */\n-static void secp256k1_gej_set_xy(secp256k1_gej_t *r, const secp256k1_fe_t *x, const secp256k1_fe_t *y);\n+/** Set a group element (jacobian) equal to the point at infinity. */\n+static void secp256k1_gej_set_infinity(secp256k1_gej *r);\n \n /** Set a group element (jacobian) equal to another which is given in affine coordinates. */\n-static void secp256k1_gej_set_ge(secp256k1_gej_t *r, const secp256k1_ge_t *a);\n+static void secp256k1_gej_set_ge(secp256k1_gej *r, const secp256k1_ge *a);\n \n /** Compare the X coordinate of a group element (jacobian). */\n-static int secp256k1_gej_eq_x_var(const secp256k1_fe_t *x, const secp256k1_gej_t *a);\n+static int secp256k1_gej_eq_x_var(const secp256k1_fe *x, const secp256k1_gej *a);\n \n /** Set r equal to the inverse of a (i.e., mirrored around the X axis) */\n-static void secp256k1_gej_neg(secp256k1_gej_t *r, const secp256k1_gej_t *a);\n+static void secp256k1_gej_neg(secp256k1_gej *r, const secp256k1_gej *a);\n \n /** Check whether a group element is the point at infinity. */\n-static int secp256k1_gej_is_infinity(const secp256k1_gej_t *a);\n+static int secp256k1_gej_is_infinity(const secp256k1_gej *a);\n \n-/** Set r equal to the double of a. */\n-static void secp256k1_gej_double_var(secp256k1_gej_t *r, const secp256k1_gej_t *a);\n+/** Set r equal to the double of a. If rzr is not-NULL, r->z = a->z * *rzr (where infinity means an implicit z = 0).\n+ * a may not be zero. Constant time. */\n+static void secp256k1_gej_double_nonzero(secp256k1_gej *r, const secp256k1_gej *a, secp256k1_fe *rzr);\n \n-/** Set r equal to the sum of a and b. */\n-static void secp256k1_gej_add_var(secp256k1_gej_t *r, const secp256k1_gej_t *a, const secp256k1_gej_t *b);\n+/** Set r equal to the double of a. If rzr is not-NULL, r->z = a->z * *rzr (where infinity means an implicit z = 0). */\n+static void secp256k1_gej_double_var(secp256k1_gej *r, const secp256k1_gej *a, secp256k1_fe *rzr);\n+\n+/** Set r equal to the sum of a and b. If rzr is non-NULL, r->z = a->z * *rzr (a cannot be infinity in that case). */\n+static void secp256k1_gej_add_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_gej *b, secp256k1_fe *rzr);\n \n /** Set r equal to the sum of a and b (with b given in affine coordinates, and not infinity). */\n-static void secp256k1_gej_add_ge(secp256k1_gej_t *r, const secp256k1_gej_t *a, const secp256k1_ge_t *b);\n+static void secp256k1_gej_add_ge(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b);\n \n /** Set r equal to the sum of a and b (with b given in affine coordinates). This is more efficient\n     than secp256k1_gej_add_var. It is identical to secp256k1_gej_add_ge but without constant-time\n-    guarantee, and b is allowed to be infinity. */\n-static void secp256k1_gej_add_ge_var(secp256k1_gej_t *r, const secp256k1_gej_t *a, const secp256k1_ge_t *b);\n+    guarantee, and b is allowed to be infinity. If rzr is non-NULL, r->z = a->z * *rzr (a cannot be infinity in that case). */\n+static void secp256k1_gej_add_ge_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b, secp256k1_fe *rzr);\n+\n+/** Set r equal to the sum of a and b (with the inverse of b's Z coordinate passed as bzinv). */\n+static void secp256k1_gej_add_zinv_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b, const secp256k1_fe *bzinv);\n \n #ifdef USE_ENDOMORPHISM\n /** Set r to be equal to lambda times a, where lambda is chosen in a way such that this is very fast. */\n-static void secp256k1_gej_mul_lambda(secp256k1_gej_t *r, const secp256k1_gej_t *a);\n+static void secp256k1_ge_mul_lambda(secp256k1_ge *r, const secp256k1_ge *a);\n #endif\n \n-/** Clear a secp256k1_gej_t to prevent leaking sensitive information. */\n-static void secp256k1_gej_clear(secp256k1_gej_t *r);\n+/** Clear a secp256k1_gej to prevent leaking sensitive information. */\n+static void secp256k1_gej_clear(secp256k1_gej *r);\n \n-/** Clear a secp256k1_ge_t to prevent leaking sensitive information. */\n-static void secp256k1_ge_clear(secp256k1_ge_t *r);\n+/** Clear a secp256k1_ge to prevent leaking sensitive information. */\n+static void secp256k1_ge_clear(secp256k1_ge *r);\n \n /** Convert a group element to the storage type. */\n-static void secp256k1_ge_to_storage(secp256k1_ge_storage_t *r, const secp256k1_ge_t*);\n+static void secp256k1_ge_to_storage(secp256k1_ge_storage *r, const secp256k1_ge *a);\n \n /** Convert a group element back from the storage type. */\n-static void secp256k1_ge_from_storage(secp256k1_ge_t *r, const secp256k1_ge_storage_t*);\n+static void secp256k1_ge_from_storage(secp256k1_ge *r, const secp256k1_ge_storage *a);\n \n /** If flag is true, set *r equal to *a; otherwise leave it. Constant-time. */\n-static void secp256k1_ge_storage_cmov(secp256k1_ge_storage_t *r, const secp256k1_ge_storage_t *a, int flag);\n+static void secp256k1_ge_storage_cmov(secp256k1_ge_storage *r, const secp256k1_ge_storage *a, int flag);\n \n /** Rescale a jacobian point by b which must be non-zero. Constant-time. */\n-static void secp256k1_gej_rescale(secp256k1_gej_t *r, const secp256k1_fe_t *b);\n+static void secp256k1_gej_rescale(secp256k1_gej *r, const secp256k1_fe *b);\n \n #endif"
      },
      {
        "sha": "42e2f6e6ebf6cf854533944ebe6ceedb23951306",
        "filename": "src/secp256k1/src/group_impl.h",
        "status": "modified",
        "additions": 276,
        "deletions": 93,
        "changes": 369,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/group_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/group_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/group_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -16,35 +16,41 @@\n /** Generator for secp256k1, value 'g' defined in\n  *  \"Standards for Efficient Cryptography\" (SEC2) 2.7.1.\n  */\n-static const secp256k1_ge_t secp256k1_ge_const_g = SECP256K1_GE_CONST(\n+static const secp256k1_ge secp256k1_ge_const_g = SECP256K1_GE_CONST(\n     0x79BE667EUL, 0xF9DCBBACUL, 0x55A06295UL, 0xCE870B07UL,\n     0x029BFCDBUL, 0x2DCE28D9UL, 0x59F2815BUL, 0x16F81798UL,\n     0x483ADA77UL, 0x26A3C465UL, 0x5DA4FBFCUL, 0x0E1108A8UL,\n     0xFD17B448UL, 0xA6855419UL, 0x9C47D08FUL, 0xFB10D4B8UL\n );\n \n-static void secp256k1_ge_set_infinity(secp256k1_ge_t *r) {\n-    r->infinity = 1;\n+static void secp256k1_ge_set_gej_zinv(secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_fe *zi) {\n+    secp256k1_fe zi2; \n+    secp256k1_fe zi3;\n+    secp256k1_fe_sqr(&zi2, zi);\n+    secp256k1_fe_mul(&zi3, &zi2, zi);\n+    secp256k1_fe_mul(&r->x, &a->x, &zi2);\n+    secp256k1_fe_mul(&r->y, &a->y, &zi3);\n+    r->infinity = a->infinity;\n }\n \n-static void secp256k1_ge_set_xy(secp256k1_ge_t *r, const secp256k1_fe_t *x, const secp256k1_fe_t *y) {\n+static void secp256k1_ge_set_xy(secp256k1_ge *r, const secp256k1_fe *x, const secp256k1_fe *y) {\n     r->infinity = 0;\n     r->x = *x;\n     r->y = *y;\n }\n \n-static int secp256k1_ge_is_infinity(const secp256k1_ge_t *a) {\n+static int secp256k1_ge_is_infinity(const secp256k1_ge *a) {\n     return a->infinity;\n }\n \n-static void secp256k1_ge_neg(secp256k1_ge_t *r, const secp256k1_ge_t *a) {\n+static void secp256k1_ge_neg(secp256k1_ge *r, const secp256k1_ge *a) {\n     *r = *a;\n     secp256k1_fe_normalize_weak(&r->y);\n     secp256k1_fe_negate(&r->y, &r->y, 1);\n }\n \n-static void secp256k1_ge_set_gej(secp256k1_ge_t *r, secp256k1_gej_t *a) {\n-    secp256k1_fe_t z2, z3;\n+static void secp256k1_ge_set_gej(secp256k1_ge *r, secp256k1_gej *a) {\n+    secp256k1_fe z2, z3;\n     r->infinity = a->infinity;\n     secp256k1_fe_inv(&a->z, &a->z);\n     secp256k1_fe_sqr(&z2, &a->z);\n@@ -56,8 +62,8 @@ static void secp256k1_ge_set_gej(secp256k1_ge_t *r, secp256k1_gej_t *a) {\n     r->y = a->y;\n }\n \n-static void secp256k1_ge_set_gej_var(secp256k1_ge_t *r, secp256k1_gej_t *a) {\n-    secp256k1_fe_t z2, z3;\n+static void secp256k1_ge_set_gej_var(secp256k1_ge *r, secp256k1_gej *a) {\n+    secp256k1_fe z2, z3;\n     r->infinity = a->infinity;\n     if (a->infinity) {\n         return;\n@@ -72,98 +78,132 @@ static void secp256k1_ge_set_gej_var(secp256k1_ge_t *r, secp256k1_gej_t *a) {\n     r->y = a->y;\n }\n \n-static void secp256k1_ge_set_all_gej_var(size_t len, secp256k1_ge_t *r, const secp256k1_gej_t *a) {\n-    secp256k1_fe_t *az;\n-    secp256k1_fe_t *azi;\n+static void secp256k1_ge_set_all_gej_var(size_t len, secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_callback *cb) {\n+    secp256k1_fe *az;\n+    secp256k1_fe *azi;\n     size_t i;\n     size_t count = 0;\n-    az = (secp256k1_fe_t *)checked_malloc(sizeof(secp256k1_fe_t) * len);\n+    az = (secp256k1_fe *)checked_malloc(cb, sizeof(secp256k1_fe) * len);\n     for (i = 0; i < len; i++) {\n         if (!a[i].infinity) {\n             az[count++] = a[i].z;\n         }\n     }\n \n-    azi = (secp256k1_fe_t *)checked_malloc(sizeof(secp256k1_fe_t) * count);\n+    azi = (secp256k1_fe *)checked_malloc(cb, sizeof(secp256k1_fe) * count);\n     secp256k1_fe_inv_all_var(count, azi, az);\n     free(az);\n \n     count = 0;\n     for (i = 0; i < len; i++) {\n         r[i].infinity = a[i].infinity;\n         if (!a[i].infinity) {\n-            secp256k1_fe_t zi2, zi3;\n-            secp256k1_fe_t *zi = &azi[count++];\n-            secp256k1_fe_sqr(&zi2, zi);\n-            secp256k1_fe_mul(&zi3, &zi2, zi);\n-            secp256k1_fe_mul(&r[i].x, &a[i].x, &zi2);\n-            secp256k1_fe_mul(&r[i].y, &a[i].y, &zi3);\n+            secp256k1_ge_set_gej_zinv(&r[i], &a[i], &azi[count++]);\n         }\n     }\n     free(azi);\n }\n \n-static void secp256k1_gej_set_infinity(secp256k1_gej_t *r) {\n+static void secp256k1_ge_set_table_gej_var(size_t len, secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_fe *zr) {\n+    size_t i = len - 1;\n+    secp256k1_fe zi;\n+\n+    if (len > 0) {\n+        /* Compute the inverse of the last z coordinate, and use it to compute the last affine output. */\n+        secp256k1_fe_inv(&zi, &a[i].z);\n+        secp256k1_ge_set_gej_zinv(&r[i], &a[i], &zi);\n+\n+        /* Work out way backwards, using the z-ratios to scale the x/y values. */\n+        while (i > 0) {\n+            secp256k1_fe_mul(&zi, &zi, &zr[i]);\n+            i--;\n+            secp256k1_ge_set_gej_zinv(&r[i], &a[i], &zi);\n+        }\n+    }\n+}\n+\n+static void secp256k1_ge_globalz_set_table_gej(size_t len, secp256k1_ge *r, secp256k1_fe *globalz, const secp256k1_gej *a, const secp256k1_fe *zr) {\n+    size_t i = len - 1;\n+    secp256k1_fe zs;\n+\n+    if (len > 0) {\n+        /* The z of the final point gives us the \"global Z\" for the table. */\n+        r[i].x = a[i].x;\n+        r[i].y = a[i].y;\n+        *globalz = a[i].z;\n+        r[i].infinity = 0;\n+        zs = zr[i];\n+\n+        /* Work our way backwards, using the z-ratios to scale the x/y values. */\n+        while (i > 0) {\n+            if (i != len - 1) {\n+                secp256k1_fe_mul(&zs, &zs, &zr[i]);\n+            }\n+            i--;\n+            secp256k1_ge_set_gej_zinv(&r[i], &a[i], &zs);\n+        }\n+    }\n+}\n+\n+static void secp256k1_gej_set_infinity(secp256k1_gej *r) {\n     r->infinity = 1;\n     secp256k1_fe_set_int(&r->x, 0);\n     secp256k1_fe_set_int(&r->y, 0);\n     secp256k1_fe_set_int(&r->z, 0);\n }\n \n-static void secp256k1_gej_set_xy(secp256k1_gej_t *r, const secp256k1_fe_t *x, const secp256k1_fe_t *y) {\n-    r->infinity = 0;\n-    r->x = *x;\n-    r->y = *y;\n-    secp256k1_fe_set_int(&r->z, 1);\n-}\n-\n-static void secp256k1_gej_clear(secp256k1_gej_t *r) {\n+static void secp256k1_gej_clear(secp256k1_gej *r) {\n     r->infinity = 0;\n     secp256k1_fe_clear(&r->x);\n     secp256k1_fe_clear(&r->y);\n     secp256k1_fe_clear(&r->z);\n }\n \n-static void secp256k1_ge_clear(secp256k1_ge_t *r) {\n+static void secp256k1_ge_clear(secp256k1_ge *r) {\n     r->infinity = 0;\n     secp256k1_fe_clear(&r->x);\n     secp256k1_fe_clear(&r->y);\n }\n \n-static int secp256k1_ge_set_xo_var(secp256k1_ge_t *r, const secp256k1_fe_t *x, int odd) {\n-    secp256k1_fe_t x2, x3, c;\n+static int secp256k1_ge_set_xquad_var(secp256k1_ge *r, const secp256k1_fe *x) {\n+    secp256k1_fe x2, x3, c;\n     r->x = *x;\n     secp256k1_fe_sqr(&x2, x);\n     secp256k1_fe_mul(&x3, x, &x2);\n     r->infinity = 0;\n     secp256k1_fe_set_int(&c, 7);\n     secp256k1_fe_add(&c, &x3);\n-    if (!secp256k1_fe_sqrt_var(&r->y, &c)) {\n+    return secp256k1_fe_sqrt_var(&r->y, &c);\n+}\n+\n+static int secp256k1_ge_set_xo_var(secp256k1_ge *r, const secp256k1_fe *x, int odd) {\n+    if (!secp256k1_ge_set_xquad_var(r, x)) {\n         return 0;\n     }\n     secp256k1_fe_normalize_var(&r->y);\n     if (secp256k1_fe_is_odd(&r->y) != odd) {\n         secp256k1_fe_negate(&r->y, &r->y, 1);\n     }\n     return 1;\n+\n }\n \n-static void secp256k1_gej_set_ge(secp256k1_gej_t *r, const secp256k1_ge_t *a) {\n+static void secp256k1_gej_set_ge(secp256k1_gej *r, const secp256k1_ge *a) {\n    r->infinity = a->infinity;\n    r->x = a->x;\n    r->y = a->y;\n    secp256k1_fe_set_int(&r->z, 1);\n }\n \n-static int secp256k1_gej_eq_x_var(const secp256k1_fe_t *x, const secp256k1_gej_t *a) {\n-    secp256k1_fe_t r, r2;\n+static int secp256k1_gej_eq_x_var(const secp256k1_fe *x, const secp256k1_gej *a) {\n+    secp256k1_fe r, r2;\n     VERIFY_CHECK(!a->infinity);\n     secp256k1_fe_sqr(&r, &a->z); secp256k1_fe_mul(&r, &r, x);\n     r2 = a->x; secp256k1_fe_normalize_weak(&r2);\n     return secp256k1_fe_equal_var(&r, &r2);\n }\n \n-static void secp256k1_gej_neg(secp256k1_gej_t *r, const secp256k1_gej_t *a) {\n+static void secp256k1_gej_neg(secp256k1_gej *r, const secp256k1_gej *a) {\n     r->infinity = a->infinity;\n     r->x = a->x;\n     r->y = a->y;\n@@ -172,12 +212,12 @@ static void secp256k1_gej_neg(secp256k1_gej_t *r, const secp256k1_gej_t *a) {\n     secp256k1_fe_negate(&r->y, &r->y, 1);\n }\n \n-static int secp256k1_gej_is_infinity(const secp256k1_gej_t *a) {\n+static int secp256k1_gej_is_infinity(const secp256k1_gej *a) {\n     return a->infinity;\n }\n \n-static int secp256k1_gej_is_valid_var(const secp256k1_gej_t *a) {\n-    secp256k1_fe_t y2, x3, z2, z6;\n+static int secp256k1_gej_is_valid_var(const secp256k1_gej *a) {\n+    secp256k1_fe y2, x3, z2, z6;\n     if (a->infinity) {\n         return 0;\n     }\n@@ -196,8 +236,8 @@ static int secp256k1_gej_is_valid_var(const secp256k1_gej_t *a) {\n     return secp256k1_fe_equal_var(&y2, &x3);\n }\n \n-static int secp256k1_ge_is_valid_var(const secp256k1_ge_t *a) {\n-    secp256k1_fe_t y2, x3, c;\n+static int secp256k1_ge_is_valid_var(const secp256k1_ge *a) {\n+    secp256k1_fe y2, x3, c;\n     if (a->infinity) {\n         return 0;\n     }\n@@ -210,18 +250,27 @@ static int secp256k1_ge_is_valid_var(const secp256k1_ge_t *a) {\n     return secp256k1_fe_equal_var(&y2, &x3);\n }\n \n-static void secp256k1_gej_double_var(secp256k1_gej_t *r, const secp256k1_gej_t *a) {\n+static void secp256k1_gej_double_var(secp256k1_gej *r, const secp256k1_gej *a, secp256k1_fe *rzr) {\n     /* Operations: 3 mul, 4 sqr, 0 normalize, 12 mul_int/add/negate */\n-    secp256k1_fe_t t1,t2,t3,t4;\n+    secp256k1_fe t1,t2,t3,t4;\n     /** For secp256k1, 2Q is infinity if and only if Q is infinity. This is because if 2Q = infinity,\n      *  Q must equal -Q, or that Q.y == -(Q.y), or Q.y is 0. For a point on y^2 = x^3 + 7 to have\n      *  y=0, x^3 must be -7 mod p. However, -7 has no cube root mod p.\n      */\n     r->infinity = a->infinity;\n     if (r->infinity) {\n+        if (rzr != NULL) {\n+            secp256k1_fe_set_int(rzr, 1);\n+        }\n         return;\n     }\n \n+    if (rzr != NULL) {\n+        *rzr = a->y;\n+        secp256k1_fe_normalize_weak(rzr);\n+        secp256k1_fe_mul_int(rzr, 2);\n+    }\n+\n     secp256k1_fe_mul(&r->z, &a->z, &a->y);\n     secp256k1_fe_mul_int(&r->z, 2);       /* Z' = 2*Y*Z (2) */\n     secp256k1_fe_sqr(&t1, &a->x);\n@@ -244,17 +293,29 @@ static void secp256k1_gej_double_var(secp256k1_gej_t *r, const secp256k1_gej_t *\n     secp256k1_fe_add(&r->y, &t2);         /* Y' = 36*X^3*Y^2 - 27*X^6 - 8*Y^4 (4) */\n }\n \n-static void secp256k1_gej_add_var(secp256k1_gej_t *r, const secp256k1_gej_t *a, const secp256k1_gej_t *b) {\n+static SECP256K1_INLINE void secp256k1_gej_double_nonzero(secp256k1_gej *r, const secp256k1_gej *a, secp256k1_fe *rzr) {\n+    VERIFY_CHECK(!secp256k1_gej_is_infinity(a));\n+    secp256k1_gej_double_var(r, a, rzr);\n+}\n+\n+static void secp256k1_gej_add_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_gej *b, secp256k1_fe *rzr) {\n     /* Operations: 12 mul, 4 sqr, 2 normalize, 12 mul_int/add/negate */\n-    secp256k1_fe_t z22, z12, u1, u2, s1, s2, h, i, i2, h2, h3, t;\n+    secp256k1_fe z22, z12, u1, u2, s1, s2, h, i, i2, h2, h3, t;\n+\n     if (a->infinity) {\n+        VERIFY_CHECK(rzr == NULL);\n         *r = *b;\n         return;\n     }\n+\n     if (b->infinity) {\n+        if (rzr != NULL) {\n+            secp256k1_fe_set_int(rzr, 1);\n+        }\n         *r = *a;\n         return;\n     }\n+\n     r->infinity = 0;\n     secp256k1_fe_sqr(&z22, &b->z);\n     secp256k1_fe_sqr(&z12, &a->z);\n@@ -266,38 +327,47 @@ static void secp256k1_gej_add_var(secp256k1_gej_t *r, const secp256k1_gej_t *a,\n     secp256k1_fe_negate(&i, &s1, 1); secp256k1_fe_add(&i, &s2);\n     if (secp256k1_fe_normalizes_to_zero_var(&h)) {\n         if (secp256k1_fe_normalizes_to_zero_var(&i)) {\n-            secp256k1_gej_double_var(r, a);\n+            secp256k1_gej_double_var(r, a, rzr);\n         } else {\n+            if (rzr != NULL) {\n+                secp256k1_fe_set_int(rzr, 0);\n+            }\n             r->infinity = 1;\n         }\n         return;\n     }\n     secp256k1_fe_sqr(&i2, &i);\n     secp256k1_fe_sqr(&h2, &h);\n     secp256k1_fe_mul(&h3, &h, &h2);\n-    secp256k1_fe_mul(&r->z, &a->z, &b->z); secp256k1_fe_mul(&r->z, &r->z, &h);\n+    secp256k1_fe_mul(&h, &h, &b->z);\n+    if (rzr != NULL) {\n+        *rzr = h;\n+    }\n+    secp256k1_fe_mul(&r->z, &a->z, &h);\n     secp256k1_fe_mul(&t, &u1, &h2);\n     r->x = t; secp256k1_fe_mul_int(&r->x, 2); secp256k1_fe_add(&r->x, &h3); secp256k1_fe_negate(&r->x, &r->x, 3); secp256k1_fe_add(&r->x, &i2);\n     secp256k1_fe_negate(&r->y, &r->x, 5); secp256k1_fe_add(&r->y, &t); secp256k1_fe_mul(&r->y, &r->y, &i);\n     secp256k1_fe_mul(&h3, &h3, &s1); secp256k1_fe_negate(&h3, &h3, 1);\n     secp256k1_fe_add(&r->y, &h3);\n }\n \n-static void secp256k1_gej_add_ge_var(secp256k1_gej_t *r, const secp256k1_gej_t *a, const secp256k1_ge_t *b) {\n+static void secp256k1_gej_add_ge_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b, secp256k1_fe *rzr) {\n     /* 8 mul, 3 sqr, 4 normalize, 12 mul_int/add/negate */\n-    secp256k1_fe_t z12, u1, u2, s1, s2, h, i, i2, h2, h3, t;\n+    secp256k1_fe z12, u1, u2, s1, s2, h, i, i2, h2, h3, t;\n     if (a->infinity) {\n-        r->infinity = b->infinity;\n-        r->x = b->x;\n-        r->y = b->y;\n-        secp256k1_fe_set_int(&r->z, 1);\n+        VERIFY_CHECK(rzr == NULL);\n+        secp256k1_gej_set_ge(r, b);\n         return;\n     }\n     if (b->infinity) {\n+        if (rzr != NULL) {\n+            secp256k1_fe_set_int(rzr, 1);\n+        }\n         *r = *a;\n         return;\n     }\n     r->infinity = 0;\n+\n     secp256k1_fe_sqr(&z12, &a->z);\n     u1 = a->x; secp256k1_fe_normalize_weak(&u1);\n     secp256k1_fe_mul(&u2, &b->x, &z12);\n@@ -307,7 +377,69 @@ static void secp256k1_gej_add_ge_var(secp256k1_gej_t *r, const secp256k1_gej_t *\n     secp256k1_fe_negate(&i, &s1, 1); secp256k1_fe_add(&i, &s2);\n     if (secp256k1_fe_normalizes_to_zero_var(&h)) {\n         if (secp256k1_fe_normalizes_to_zero_var(&i)) {\n-            secp256k1_gej_double_var(r, a);\n+            secp256k1_gej_double_var(r, a, rzr);\n+        } else {\n+            if (rzr != NULL) {\n+                secp256k1_fe_set_int(rzr, 0);\n+            }\n+            r->infinity = 1;\n+        }\n+        return;\n+    }\n+    secp256k1_fe_sqr(&i2, &i);\n+    secp256k1_fe_sqr(&h2, &h);\n+    secp256k1_fe_mul(&h3, &h, &h2);\n+    if (rzr != NULL) {\n+        *rzr = h;\n+    }\n+    secp256k1_fe_mul(&r->z, &a->z, &h);\n+    secp256k1_fe_mul(&t, &u1, &h2);\n+    r->x = t; secp256k1_fe_mul_int(&r->x, 2); secp256k1_fe_add(&r->x, &h3); secp256k1_fe_negate(&r->x, &r->x, 3); secp256k1_fe_add(&r->x, &i2);\n+    secp256k1_fe_negate(&r->y, &r->x, 5); secp256k1_fe_add(&r->y, &t); secp256k1_fe_mul(&r->y, &r->y, &i);\n+    secp256k1_fe_mul(&h3, &h3, &s1); secp256k1_fe_negate(&h3, &h3, 1);\n+    secp256k1_fe_add(&r->y, &h3);\n+}\n+\n+static void secp256k1_gej_add_zinv_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b, const secp256k1_fe *bzinv) {\n+    /* 9 mul, 3 sqr, 4 normalize, 12 mul_int/add/negate */\n+    secp256k1_fe az, z12, u1, u2, s1, s2, h, i, i2, h2, h3, t;\n+\n+    if (b->infinity) {\n+        *r = *a;\n+        return;\n+    }\n+    if (a->infinity) {\n+        secp256k1_fe bzinv2, bzinv3;\n+        r->infinity = b->infinity;\n+        secp256k1_fe_sqr(&bzinv2, bzinv);\n+        secp256k1_fe_mul(&bzinv3, &bzinv2, bzinv);\n+        secp256k1_fe_mul(&r->x, &b->x, &bzinv2);\n+        secp256k1_fe_mul(&r->y, &b->y, &bzinv3);\n+        secp256k1_fe_set_int(&r->z, 1);\n+        return;\n+    }\n+    r->infinity = 0;\n+\n+    /** We need to calculate (rx,ry,rz) = (ax,ay,az) + (bx,by,1/bzinv). Due to\n+     *  secp256k1's isomorphism we can multiply the Z coordinates on both sides\n+     *  by bzinv, and get: (rx,ry,rz*bzinv) = (ax,ay,az*bzinv) + (bx,by,1).\n+     *  This means that (rx,ry,rz) can be calculated as\n+     *  (ax,ay,az*bzinv) + (bx,by,1), when not applying the bzinv factor to rz.\n+     *  The variable az below holds the modified Z coordinate for a, which is used\n+     *  for the computation of rx and ry, but not for rz.\n+     */\n+    secp256k1_fe_mul(&az, &a->z, bzinv);\n+\n+    secp256k1_fe_sqr(&z12, &az);\n+    u1 = a->x; secp256k1_fe_normalize_weak(&u1);\n+    secp256k1_fe_mul(&u2, &b->x, &z12);\n+    s1 = a->y; secp256k1_fe_normalize_weak(&s1);\n+    secp256k1_fe_mul(&s2, &b->y, &z12); secp256k1_fe_mul(&s2, &s2, &az);\n+    secp256k1_fe_negate(&h, &u1, 1); secp256k1_fe_add(&h, &u2);\n+    secp256k1_fe_negate(&i, &s1, 1); secp256k1_fe_add(&i, &s2);\n+    if (secp256k1_fe_normalizes_to_zero_var(&h)) {\n+        if (secp256k1_fe_normalizes_to_zero_var(&i)) {\n+            secp256k1_gej_double_var(r, a, NULL);\n         } else {\n             r->infinity = 1;\n         }\n@@ -324,11 +456,13 @@ static void secp256k1_gej_add_ge_var(secp256k1_gej_t *r, const secp256k1_gej_t *\n     secp256k1_fe_add(&r->y, &h3);\n }\n \n-static void secp256k1_gej_add_ge(secp256k1_gej_t *r, const secp256k1_gej_t *a, const secp256k1_ge_t *b) {\n-    /* Operations: 7 mul, 5 sqr, 5 normalize, 17 mul_int/add/negate/cmov */\n-    static const secp256k1_fe_t fe_1 = SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 1);\n-    secp256k1_fe_t zz, u1, u2, s1, s2, z, t, m, n, q, rr;\n-    int infinity;\n+\n+static void secp256k1_gej_add_ge(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b) {\n+    /* Operations: 7 mul, 5 sqr, 4 normalize, 21 mul_int/add/negate/cmov */\n+    static const secp256k1_fe fe_1 = SECP256K1_FE_CONST(0, 0, 0, 0, 0, 0, 0, 1);\n+    secp256k1_fe zz, u1, u2, s1, s2, t, tt, m, n, q, rr;\n+    secp256k1_fe m_alt, rr_alt;\n+    int infinity, degenerate;\n     VERIFY_CHECK(!b->infinity);\n     VERIFY_CHECK(a->infinity == 0 || a->infinity == 1);\n \n@@ -352,53 +486,102 @@ static void secp256k1_gej_add_ge(secp256k1_gej_t *r, const secp256k1_gej_t *a, c\n      *    Y3 = 4*(R*(3*Q-2*R^2)-M^4)\n      *    Z3 = 2*M*Z\n      *  (Note that the paper uses xi = Xi / Zi and yi = Yi / Zi instead.)\n+     *\n+     *  This formula has the benefit of being the same for both addition\n+     *  of distinct points and doubling. However, it breaks down in the\n+     *  case that either point is infinity, or that y1 = -y2. We handle\n+     *  these cases in the following ways:\n+     *\n+     *    - If b is infinity we simply bail by means of a VERIFY_CHECK.\n+     *\n+     *    - If a is infinity, we detect this, and at the end of the\n+     *      computation replace the result (which will be meaningless,\n+     *      but we compute to be constant-time) with b.x : b.y : 1.\n+     *\n+     *    - If a = -b, we have y1 = -y2, which is a degenerate case.\n+     *      But here the answer is infinity, so we simply set the\n+     *      infinity flag of the result, overriding the computed values\n+     *      without even needing to cmov.\n+     *\n+     *    - If y1 = -y2 but x1 != x2, which does occur thanks to certain\n+     *      properties of our curve (specifically, 1 has nontrivial cube\n+     *      roots in our field, and the curve equation has no x coefficient)\n+     *      then the answer is not infinity but also not given by the above\n+     *      equation. In this case, we cmov in place an alternate expression\n+     *      for lambda. Specifically (y1 - y2)/(x1 - x2). Where both these\n+     *      expressions for lambda are defined, they are equal, and can be\n+     *      obtained from each other by multiplication by (y1 + y2)/(y1 + y2)\n+     *      then substitution of x^3 + 7 for y^2 (using the curve equation).\n+     *      For all pairs of nonzero points (a, b) at least one is defined,\n+     *      so this covers everything.\n      */\n \n     secp256k1_fe_sqr(&zz, &a->z);                       /* z = Z1^2 */\n     u1 = a->x; secp256k1_fe_normalize_weak(&u1);        /* u1 = U1 = X1*Z2^2 (1) */\n     secp256k1_fe_mul(&u2, &b->x, &zz);                  /* u2 = U2 = X2*Z1^2 (1) */\n     s1 = a->y; secp256k1_fe_normalize_weak(&s1);        /* s1 = S1 = Y1*Z2^3 (1) */\n-    secp256k1_fe_mul(&s2, &b->y, &zz);                  /* s2 = Y2*Z2^2 (1) */\n+    secp256k1_fe_mul(&s2, &b->y, &zz);                  /* s2 = Y2*Z1^2 (1) */\n     secp256k1_fe_mul(&s2, &s2, &a->z);                  /* s2 = S2 = Y2*Z1^3 (1) */\n-    z = a->z;                                           /* z = Z = Z1*Z2 (8) */\n     t = u1; secp256k1_fe_add(&t, &u2);                  /* t = T = U1+U2 (2) */\n     m = s1; secp256k1_fe_add(&m, &s2);                  /* m = M = S1+S2 (2) */\n-    secp256k1_fe_sqr(&n, &m);                           /* n = M^2 (1) */\n-    secp256k1_fe_mul(&q, &n, &t);                       /* q = Q = T*M^2 (1) */\n-    secp256k1_fe_sqr(&n, &n);                           /* n = M^4 (1) */\n     secp256k1_fe_sqr(&rr, &t);                          /* rr = T^2 (1) */\n-    secp256k1_fe_mul(&t, &u1, &u2); secp256k1_fe_negate(&t, &t, 1); /* t = -U1*U2 (2) */\n-    secp256k1_fe_add(&rr, &t);                                      /* rr = R = T^2-U1*U2 (3) */\n-    secp256k1_fe_sqr(&t, &rr);                                      /* t = R^2 (1) */\n-    secp256k1_fe_mul(&r->z, &m, &z);                                /* r->z = M*Z (1) */\n+    secp256k1_fe_negate(&m_alt, &u2, 1);                /* Malt = -X2*Z1^2 */\n+    secp256k1_fe_mul(&tt, &u1, &m_alt);                 /* tt = -U1*U2 (2) */\n+    secp256k1_fe_add(&rr, &tt);                         /* rr = R = T^2-U1*U2 (3) */\n+    /** If lambda = R/M = 0/0 we have a problem (except in the \"trivial\"\n+     *  case that Z = z1z2 = 0, and this is special-cased later on). */\n+    degenerate = secp256k1_fe_normalizes_to_zero(&m) &\n+                 secp256k1_fe_normalizes_to_zero(&rr);\n+    /* This only occurs when y1 == -y2 and x1^3 == x2^3, but x1 != x2.\n+     * This means either x1 == beta*x2 or beta*x1 == x2, where beta is\n+     * a nontrivial cube root of one. In either case, an alternate\n+     * non-indeterminate expression for lambda is (y1 - y2)/(x1 - x2),\n+     * so we set R/M equal to this. */\n+    rr_alt = s1;\n+    secp256k1_fe_mul_int(&rr_alt, 2);       /* rr = Y1*Z2^3 - Y2*Z1^3 (2) */\n+    secp256k1_fe_add(&m_alt, &u1);          /* Malt = X1*Z2^2 - X2*Z1^2 */\n+\n+    secp256k1_fe_cmov(&rr_alt, &rr, !degenerate);\n+    secp256k1_fe_cmov(&m_alt, &m, !degenerate);\n+    /* Now Ralt / Malt = lambda and is guaranteed not to be 0/0.\n+     * From here on out Ralt and Malt represent the numerator\n+     * and denominator of lambda; R and M represent the explicit\n+     * expressions x1^2 + x2^2 + x1x2 and y1 + y2. */\n+    secp256k1_fe_sqr(&n, &m_alt);                       /* n = Malt^2 (1) */\n+    secp256k1_fe_mul(&q, &n, &t);                       /* q = Q = T*Malt^2 (1) */\n+    /* These two lines use the observation that either M == Malt or M == 0,\n+     * so M^3 * Malt is either Malt^4 (which is computed by squaring), or\n+     * zero (which is \"computed\" by cmov). So the cost is one squaring\n+     * versus two multiplications. */\n+    secp256k1_fe_sqr(&n, &n);\n+    secp256k1_fe_cmov(&n, &m, degenerate);              /* n = M^3 * Malt (2) */\n+    secp256k1_fe_sqr(&t, &rr_alt);                      /* t = Ralt^2 (1) */\n+    secp256k1_fe_mul(&r->z, &a->z, &m_alt);             /* r->z = Malt*Z (1) */\n     infinity = secp256k1_fe_normalizes_to_zero(&r->z) * (1 - a->infinity);\n-    secp256k1_fe_mul_int(&r->z, 2 * (1 - a->infinity)); /* r->z = Z3 = 2*M*Z (2) */\n-    r->x = t;                                           /* r->x = R^2 (1) */\n+    secp256k1_fe_mul_int(&r->z, 2);                     /* r->z = Z3 = 2*Malt*Z (2) */\n     secp256k1_fe_negate(&q, &q, 1);                     /* q = -Q (2) */\n-    secp256k1_fe_add(&r->x, &q);                        /* r->x = R^2-Q (3) */\n-    secp256k1_fe_normalize(&r->x);\n-    secp256k1_fe_mul_int(&q, 3);                        /* q = -3*Q (6) */\n-    secp256k1_fe_mul_int(&t, 2);                        /* t = 2*R^2 (2) */\n-    secp256k1_fe_add(&t, &q);                           /* t = 2*R^2-3*Q (8) */\n-    secp256k1_fe_mul(&t, &t, &rr);                      /* t = R*(2*R^2-3*Q) (1) */\n-    secp256k1_fe_add(&t, &n);                           /* t = R*(2*R^2-3*Q)+M^4 (2) */\n-    secp256k1_fe_negate(&r->y, &t, 2);                  /* r->y = R*(3*Q-2*R^2)-M^4 (3) */\n+    secp256k1_fe_add(&t, &q);                           /* t = Ralt^2-Q (3) */\n+    secp256k1_fe_normalize_weak(&t);\n+    r->x = t;                                           /* r->x = Ralt^2-Q (1) */\n+    secp256k1_fe_mul_int(&t, 2);                        /* t = 2*x3 (2) */\n+    secp256k1_fe_add(&t, &q);                           /* t = 2*x3 - Q: (4) */\n+    secp256k1_fe_mul(&t, &t, &rr_alt);                  /* t = Ralt*(2*x3 - Q) (1) */\n+    secp256k1_fe_add(&t, &n);                           /* t = Ralt*(2*x3 - Q) + M^3*Malt (3) */\n+    secp256k1_fe_negate(&r->y, &t, 3);                  /* r->y = Ralt*(Q - 2x3) - M^3*Malt (4) */\n     secp256k1_fe_normalize_weak(&r->y);\n-    secp256k1_fe_mul_int(&r->x, 4 * (1 - a->infinity)); /* r->x = X3 = 4*(R^2-Q) */\n-    secp256k1_fe_mul_int(&r->y, 4 * (1 - a->infinity)); /* r->y = Y3 = 4*R*(3*Q-2*R^2)-4*M^4 (4) */\n+    secp256k1_fe_mul_int(&r->x, 4);                     /* r->x = X3 = 4*(Ralt^2-Q) */\n+    secp256k1_fe_mul_int(&r->y, 4);                     /* r->y = Y3 = 4*Ralt*(Q - 2x3) - 4*M^3*Malt (4) */\n \n-    /** In case a->infinity == 1, the above code results in r->x, r->y, and r->z all equal to 0.\n-     *  Replace r with b->x, b->y, 1 in that case.\n-     */\n+    /** In case a->infinity == 1, replace r with (b->x, b->y, 1). */\n     secp256k1_fe_cmov(&r->x, &b->x, a->infinity);\n     secp256k1_fe_cmov(&r->y, &b->y, a->infinity);\n     secp256k1_fe_cmov(&r->z, &fe_1, a->infinity);\n     r->infinity = infinity;\n }\n \n-static void secp256k1_gej_rescale(secp256k1_gej_t *r, const secp256k1_fe_t *s) {\n+static void secp256k1_gej_rescale(secp256k1_gej *r, const secp256k1_fe *s) {\n     /* Operations: 4 mul, 1 sqr */\n-    secp256k1_fe_t zz;\n+    secp256k1_fe zz;\n     VERIFY_CHECK(!secp256k1_fe_is_zero(s));\n     secp256k1_fe_sqr(&zz, s);\n     secp256k1_fe_mul(&r->x, &r->x, &zz);                /* r->x *= s^2 */\n@@ -407,8 +590,8 @@ static void secp256k1_gej_rescale(secp256k1_gej_t *r, const secp256k1_fe_t *s) {\n     secp256k1_fe_mul(&r->z, &r->z, s);                  /* r->z *= s   */\n }\n \n-static void secp256k1_ge_to_storage(secp256k1_ge_storage_t *r, const secp256k1_ge_t *a) {\n-    secp256k1_fe_t x, y;\n+static void secp256k1_ge_to_storage(secp256k1_ge_storage *r, const secp256k1_ge *a) {\n+    secp256k1_fe x, y;\n     VERIFY_CHECK(!a->infinity);\n     x = a->x;\n     secp256k1_fe_normalize(&x);\n@@ -418,20 +601,20 @@ static void secp256k1_ge_to_storage(secp256k1_ge_storage_t *r, const secp256k1_g\n     secp256k1_fe_to_storage(&r->y, &y);\n }\n \n-static void secp256k1_ge_from_storage(secp256k1_ge_t *r, const secp256k1_ge_storage_t *a) {\n+static void secp256k1_ge_from_storage(secp256k1_ge *r, const secp256k1_ge_storage *a) {\n     secp256k1_fe_from_storage(&r->x, &a->x);\n     secp256k1_fe_from_storage(&r->y, &a->y);\n     r->infinity = 0;\n }\n \n-static SECP256K1_INLINE void secp256k1_ge_storage_cmov(secp256k1_ge_storage_t *r, const secp256k1_ge_storage_t *a, int flag) {\n+static SECP256K1_INLINE void secp256k1_ge_storage_cmov(secp256k1_ge_storage *r, const secp256k1_ge_storage *a, int flag) {\n     secp256k1_fe_storage_cmov(&r->x, &a->x, flag);\n     secp256k1_fe_storage_cmov(&r->y, &a->y, flag);\n }\n \n #ifdef USE_ENDOMORPHISM\n-static void secp256k1_gej_mul_lambda(secp256k1_gej_t *r, const secp256k1_gej_t *a) {\n-    static const secp256k1_fe_t beta = SECP256K1_FE_CONST(\n+static void secp256k1_ge_mul_lambda(secp256k1_ge *r, const secp256k1_ge *a) {\n+    static const secp256k1_fe beta = SECP256K1_FE_CONST(\n         0x7ae96a2bul, 0x657c0710ul, 0x6e64479eul, 0xac3434e9ul,\n         0x9cf04975ul, 0x12f58995ul, 0xc1396c28ul, 0x719501eeul\n     );"
      },
      {
        "sha": "0ff01e63fa737af30aaae74a8f75fa322c8fc76f",
        "filename": "src/secp256k1/src/hash.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/hash.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -34,7 +34,7 @@ typedef struct {\n     int retry;\n } secp256k1_rfc6979_hmac_sha256_t;\n \n-static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha256_t *rng, const unsigned char *key, size_t keylen, const unsigned char *msg, size_t msglen, const unsigned char *rnd, size_t rndlen);\n+static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha256_t *rng, const unsigned char *key, size_t keylen);\n static void secp256k1_rfc6979_hmac_sha256_generate(secp256k1_rfc6979_hmac_sha256_t *rng, unsigned char *out, size_t outlen);\n static void secp256k1_rfc6979_hmac_sha256_finalize(secp256k1_rfc6979_hmac_sha256_t *rng);\n "
      },
      {
        "sha": "ae55df6d8a29a97f3e442ceeb9f4aab0dc70dadb",
        "filename": "src/secp256k1/src/hash_impl.h",
        "status": "modified",
        "additions": 1,
        "deletions": 11,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/hash_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/hash_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/hash_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -202,7 +202,7 @@ static void secp256k1_hmac_sha256_finalize(secp256k1_hmac_sha256_t *hash, unsign\n }\n \n \n-static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha256_t *rng, const unsigned char *key, size_t keylen, const unsigned char *msg, size_t msglen, const unsigned char *rnd, size_t rndlen) {\n+static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha256_t *rng, const unsigned char *key, size_t keylen) {\n     secp256k1_hmac_sha256_t hmac;\n     static const unsigned char zero[1] = {0x00};\n     static const unsigned char one[1] = {0x01};\n@@ -215,11 +215,6 @@ static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha2\n     secp256k1_hmac_sha256_write(&hmac, rng->v, 32);\n     secp256k1_hmac_sha256_write(&hmac, zero, 1);\n     secp256k1_hmac_sha256_write(&hmac, key, keylen);\n-    secp256k1_hmac_sha256_write(&hmac, msg, msglen);\n-    if (rnd && rndlen) {\n-        /* RFC6979 3.6 \"Additional data\". */\n-        secp256k1_hmac_sha256_write(&hmac, rnd, rndlen);\n-    }\n     secp256k1_hmac_sha256_finalize(&hmac, rng->k);\n     secp256k1_hmac_sha256_initialize(&hmac, rng->k, 32);\n     secp256k1_hmac_sha256_write(&hmac, rng->v, 32);\n@@ -230,11 +225,6 @@ static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha2\n     secp256k1_hmac_sha256_write(&hmac, rng->v, 32);\n     secp256k1_hmac_sha256_write(&hmac, one, 1);\n     secp256k1_hmac_sha256_write(&hmac, key, keylen);\n-    secp256k1_hmac_sha256_write(&hmac, msg, msglen);\n-    if (rnd && rndlen) {\n-        /* RFC6979 3.6 \"Additional data\". */\n-        secp256k1_hmac_sha256_write(&hmac, rnd, rndlen);\n-    }\n     secp256k1_hmac_sha256_finalize(&hmac, rng->k);\n     secp256k1_hmac_sha256_initialize(&hmac, rng->k, 32);\n     secp256k1_hmac_sha256_write(&hmac, rng->v, 32);"
      },
      {
        "sha": "670b9c1152e753aa0f7cf4c3c078925d5a6ade05",
        "filename": "src/secp256k1/src/modules/ecdh/Makefile.am.include",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/ecdh/Makefile.am.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/ecdh/Makefile.am.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/ecdh/Makefile.am.include?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,8 @@\n+include_HEADERS += include/secp256k1_ecdh.h\n+noinst_HEADERS += src/modules/ecdh/main_impl.h\n+noinst_HEADERS += src/modules/ecdh/tests_impl.h\n+if USE_BENCHMARK\n+noinst_PROGRAMS += bench_ecdh\n+bench_ecdh_SOURCES = src/bench_ecdh.c\n+bench_ecdh_LDADD = libsecp256k1.la $(SECP_LIBS)\n+endif"
      },
      {
        "sha": "c23e4f82f7fe63a242279c1feec75447d99b0089",
        "filename": "src/secp256k1/src/modules/ecdh/main_impl.h",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/ecdh/main_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/ecdh/main_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/ecdh/main_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,54 @@\n+/**********************************************************************\n+ * Copyright (c) 2015 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_ECDH_MAIN_\n+#define _SECP256K1_MODULE_ECDH_MAIN_\n+\n+#include \"include/secp256k1_ecdh.h\"\n+#include \"ecmult_const_impl.h\"\n+\n+int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *result, const secp256k1_pubkey *point, const unsigned char *scalar) {\n+    int ret = 0;\n+    int overflow = 0;\n+    secp256k1_gej res;\n+    secp256k1_ge pt;\n+    secp256k1_scalar s;\n+    ARG_CHECK(result != NULL);\n+    ARG_CHECK(point != NULL);\n+    ARG_CHECK(scalar != NULL);\n+    (void)ctx;\n+\n+    secp256k1_pubkey_load(ctx, &pt, point);\n+    secp256k1_scalar_set_b32(&s, scalar, &overflow);\n+    if (overflow || secp256k1_scalar_is_zero(&s)) {\n+        ret = 0;\n+    } else {\n+        unsigned char x[32];\n+        unsigned char y[1];\n+        secp256k1_sha256_t sha;\n+\n+        secp256k1_ecmult_const(&res, &pt, &s);\n+        secp256k1_ge_set_gej(&pt, &res);\n+        /* Compute a hash of the point in compressed form\n+         * Note we cannot use secp256k1_eckey_pubkey_serialize here since it does not\n+         * expect its output to be secret and has a timing sidechannel. */\n+        secp256k1_fe_normalize(&pt.x);\n+        secp256k1_fe_normalize(&pt.y);\n+        secp256k1_fe_get_b32(x, &pt.x);\n+        y[0] = 0x02 | secp256k1_fe_is_odd(&pt.y);\n+\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, y, sizeof(y));\n+        secp256k1_sha256_write(&sha, x, sizeof(x));\n+        secp256k1_sha256_finalize(&sha, result);\n+        ret = 1;\n+    }\n+\n+    secp256k1_scalar_clear(&s);\n+    return ret;\n+}\n+\n+#endif"
      },
      {
        "sha": "7badc9033f7eb44d6e467307d380c6b3e2c538c1",
        "filename": "src/secp256k1/src/modules/ecdh/tests_impl.h",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/ecdh/tests_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/ecdh/tests_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/ecdh/tests_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,75 @@\n+/**********************************************************************\n+ * Copyright (c) 2015 Andrew Poelstra                                 *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_ECDH_TESTS_\n+#define _SECP256K1_MODULE_ECDH_TESTS_\n+\n+void test_ecdh_generator_basepoint(void) {\n+    unsigned char s_one[32] = { 0 };\n+    secp256k1_pubkey point[2];\n+    int i;\n+\n+    s_one[31] = 1;\n+    /* Check against pubkey creation when the basepoint is the generator */\n+    for (i = 0; i < 100; ++i) {\n+        secp256k1_sha256_t sha;\n+        unsigned char s_b32[32];\n+        unsigned char output_ecdh[32];\n+        unsigned char output_ser[32];\n+        unsigned char point_ser[33];\n+        size_t point_ser_len = sizeof(point_ser);\n+        secp256k1_scalar s;\n+\n+        random_scalar_order(&s);\n+        secp256k1_scalar_get_b32(s_b32, &s);\n+\n+        /* compute using ECDH function */\n+        CHECK(secp256k1_ec_pubkey_create(ctx, &point[0], s_one) == 1);\n+        CHECK(secp256k1_ecdh(ctx, output_ecdh, &point[0], s_b32) == 1);\n+        /* compute \"explicitly\" */\n+        CHECK(secp256k1_ec_pubkey_create(ctx, &point[1], s_b32) == 1);\n+        CHECK(secp256k1_ec_pubkey_serialize(ctx, point_ser, &point_ser_len, &point[1], SECP256K1_EC_COMPRESSED) == 1);\n+        CHECK(point_ser_len == sizeof(point_ser));\n+        secp256k1_sha256_initialize(&sha);\n+        secp256k1_sha256_write(&sha, point_ser, point_ser_len);\n+        secp256k1_sha256_finalize(&sha, output_ser);\n+        /* compare */\n+        CHECK(memcmp(output_ecdh, output_ser, sizeof(output_ser)) == 0);\n+    }\n+}\n+\n+void test_bad_scalar(void) {\n+    unsigned char s_zero[32] = { 0 };\n+    unsigned char s_overflow[32] = {\n+        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n+        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,\n+        0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b,\n+        0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41\n+    };\n+    unsigned char s_rand[32] = { 0 };\n+    unsigned char output[32];\n+    secp256k1_scalar rand;\n+    secp256k1_pubkey point;\n+\n+    /* Create random point */\n+    random_scalar_order(&rand);\n+    secp256k1_scalar_get_b32(s_rand, &rand);\n+    CHECK(secp256k1_ec_pubkey_create(ctx, &point, s_rand) == 1);\n+\n+    /* Try to multiply it by bad values */\n+    CHECK(secp256k1_ecdh(ctx, output, &point, s_zero) == 0);\n+    CHECK(secp256k1_ecdh(ctx, output, &point, s_overflow) == 0);\n+    /* ...and a good one */\n+    s_overflow[31] -= 1;\n+    CHECK(secp256k1_ecdh(ctx, output, &point, s_overflow) == 1);\n+}\n+\n+void run_ecdh_tests(void) {\n+    test_ecdh_generator_basepoint();\n+    test_bad_scalar();\n+}\n+\n+#endif"
      },
      {
        "sha": "5de3ea33ea5e10888970143bd8d14d27c42578ad",
        "filename": "src/secp256k1/src/modules/recovery/Makefile.am.include",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/recovery/Makefile.am.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/recovery/Makefile.am.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/recovery/Makefile.am.include?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,8 @@\n+include_HEADERS += include/secp256k1_recovery.h\n+noinst_HEADERS += src/modules/recovery/main_impl.h\n+noinst_HEADERS += src/modules/recovery/tests_impl.h\n+if USE_BENCHMARK\n+noinst_PROGRAMS += bench_recover\n+bench_recover_SOURCES = src/bench_recover.c\n+bench_recover_LDADD = libsecp256k1.la $(SECP_LIBS)\n+endif"
      },
      {
        "sha": "ec42f4bb6cd8804a165ce9091a0825726d146180",
        "filename": "src/secp256k1/src/modules/recovery/main_impl.h",
        "status": "added",
        "additions": 193,
        "deletions": 0,
        "changes": 193,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/recovery/main_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/recovery/main_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/recovery/main_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,193 @@\n+/**********************************************************************\n+ * Copyright (c) 2013-2015 Pieter Wuille                              *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_RECOVERY_MAIN_\n+#define _SECP256K1_MODULE_RECOVERY_MAIN_\n+\n+#include \"include/secp256k1_recovery.h\"\n+\n+static void secp256k1_ecdsa_recoverable_signature_load(const secp256k1_context* ctx, secp256k1_scalar* r, secp256k1_scalar* s, int* recid, const secp256k1_ecdsa_recoverable_signature* sig) {\n+    (void)ctx;\n+    if (sizeof(secp256k1_scalar) == 32) {\n+        /* When the secp256k1_scalar type is exactly 32 byte, use its\n+         * representation inside secp256k1_ecdsa_signature, as conversion is very fast.\n+         * Note that secp256k1_ecdsa_signature_save must use the same representation. */\n+        memcpy(r, &sig->data[0], 32);\n+        memcpy(s, &sig->data[32], 32);\n+    } else {\n+        secp256k1_scalar_set_b32(r, &sig->data[0], NULL);\n+        secp256k1_scalar_set_b32(s, &sig->data[32], NULL);\n+    }\n+    *recid = sig->data[64];\n+}\n+\n+static void secp256k1_ecdsa_recoverable_signature_save(secp256k1_ecdsa_recoverable_signature* sig, const secp256k1_scalar* r, const secp256k1_scalar* s, int recid) {\n+    if (sizeof(secp256k1_scalar) == 32) {\n+        memcpy(&sig->data[0], r, 32);\n+        memcpy(&sig->data[32], s, 32);\n+    } else {\n+        secp256k1_scalar_get_b32(&sig->data[0], r);\n+        secp256k1_scalar_get_b32(&sig->data[32], s);\n+    }\n+    sig->data[64] = recid;\n+}\n+\n+int secp256k1_ecdsa_recoverable_signature_parse_compact(const secp256k1_context* ctx, secp256k1_ecdsa_recoverable_signature* sig, const unsigned char *input64, int recid) {\n+    secp256k1_scalar r, s;\n+    int ret = 1;\n+    int overflow = 0;\n+\n+    (void)ctx;\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(input64 != NULL);\n+    ARG_CHECK(recid >= 0 && recid <= 3);\n+\n+    secp256k1_scalar_set_b32(&r, &input64[0], &overflow);\n+    ret &= !overflow;\n+    secp256k1_scalar_set_b32(&s, &input64[32], &overflow);\n+    ret &= !overflow;\n+    if (ret) {\n+        secp256k1_ecdsa_recoverable_signature_save(sig, &r, &s, recid);\n+    } else {\n+        memset(sig, 0, sizeof(*sig));\n+    }\n+    return ret;\n+}\n+\n+int secp256k1_ecdsa_recoverable_signature_serialize_compact(const secp256k1_context* ctx, unsigned char *output64, int *recid, const secp256k1_ecdsa_recoverable_signature* sig) {\n+    secp256k1_scalar r, s;\n+\n+    (void)ctx;\n+    ARG_CHECK(output64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(recid != NULL);\n+\n+    secp256k1_ecdsa_recoverable_signature_load(ctx, &r, &s, recid, sig);\n+    secp256k1_scalar_get_b32(&output64[0], &r);\n+    secp256k1_scalar_get_b32(&output64[32], &s);\n+    return 1;\n+}\n+\n+int secp256k1_ecdsa_recoverable_signature_convert(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const secp256k1_ecdsa_recoverable_signature* sigin) {\n+    secp256k1_scalar r, s;\n+    int recid;\n+\n+    (void)ctx;\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(sigin != NULL);\n+\n+    secp256k1_ecdsa_recoverable_signature_load(ctx, &r, &s, &recid, sigin);\n+    secp256k1_ecdsa_signature_save(sig, &r, &s);\n+    return 1;\n+}\n+\n+static int secp256k1_ecdsa_sig_recover(const secp256k1_ecmult_context *ctx, const secp256k1_scalar *sigr, const secp256k1_scalar* sigs, secp256k1_ge *pubkey, const secp256k1_scalar *message, int recid) {\n+    unsigned char brx[32];\n+    secp256k1_fe fx;\n+    secp256k1_ge x;\n+    secp256k1_gej xj;\n+    secp256k1_scalar rn, u1, u2;\n+    secp256k1_gej qj;\n+    int r;\n+\n+    if (secp256k1_scalar_is_zero(sigr) || secp256k1_scalar_is_zero(sigs)) {\n+        return 0;\n+    }\n+\n+    secp256k1_scalar_get_b32(brx, sigr);\n+    r = secp256k1_fe_set_b32(&fx, brx);\n+    (void)r;\n+    VERIFY_CHECK(r); /* brx comes from a scalar, so is less than the order; certainly less than p */\n+    if (recid & 2) {\n+        if (secp256k1_fe_cmp_var(&fx, &secp256k1_ecdsa_const_p_minus_order) >= 0) {\n+            return 0;\n+        }\n+        secp256k1_fe_add(&fx, &secp256k1_ecdsa_const_order_as_fe);\n+    }\n+    if (!secp256k1_ge_set_xo_var(&x, &fx, recid & 1)) {\n+        return 0;\n+    }\n+    secp256k1_gej_set_ge(&xj, &x);\n+    secp256k1_scalar_inverse_var(&rn, sigr);\n+    secp256k1_scalar_mul(&u1, &rn, message);\n+    secp256k1_scalar_negate(&u1, &u1);\n+    secp256k1_scalar_mul(&u2, &rn, sigs);\n+    secp256k1_ecmult(ctx, &qj, &xj, &u2, &u1);\n+    secp256k1_ge_set_gej_var(pubkey, &qj);\n+    return !secp256k1_gej_is_infinity(&qj);\n+}\n+\n+int secp256k1_ecdsa_sign_recoverable(const secp256k1_context* ctx, secp256k1_ecdsa_recoverable_signature *signature, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {\n+    secp256k1_scalar r, s;\n+    secp256k1_scalar sec, non, msg;\n+    int recid;\n+    int ret = 0;\n+    int overflow = 0;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(signature != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_default;\n+    }\n+\n+    secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n+    /* Fail if the secret key is invalid. */\n+    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n+        unsigned int count = 0;\n+        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n+        while (1) {\n+            unsigned char nonce32[32];\n+            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n+            if (!ret) {\n+                break;\n+            }\n+            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n+            memset(nonce32, 0, 32);\n+            if (!secp256k1_scalar_is_zero(&non) && !overflow) {\n+                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, &recid)) {\n+                    break;\n+                }\n+            }\n+            count++;\n+        }\n+        secp256k1_scalar_clear(&msg);\n+        secp256k1_scalar_clear(&non);\n+        secp256k1_scalar_clear(&sec);\n+    }\n+    if (ret) {\n+        secp256k1_ecdsa_recoverable_signature_save(signature, &r, &s, recid);\n+    } else {\n+        memset(signature, 0, sizeof(*signature));\n+    }\n+    return ret;\n+}\n+\n+int secp256k1_ecdsa_recover(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const secp256k1_ecdsa_recoverable_signature *signature, const unsigned char *msg32) {\n+    secp256k1_ge q;\n+    secp256k1_scalar r, s;\n+    secp256k1_scalar m;\n+    int recid;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(signature != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+\n+    secp256k1_ecdsa_recoverable_signature_load(ctx, &r, &s, &recid, signature);\n+    ARG_CHECK(recid >= 0 && recid < 4);\n+    secp256k1_scalar_set_b32(&m, msg32, NULL);\n+    if (secp256k1_ecdsa_sig_recover(&ctx->ecmult_ctx, &r, &s, &q, &m, recid)) {\n+        secp256k1_pubkey_save(pubkey, &q);\n+        return 1;\n+    } else {\n+        memset(pubkey, 0, sizeof(*pubkey));\n+        return 0;\n+    }\n+}\n+\n+#endif"
      },
      {
        "sha": "8932d5f0afc3f51adcb44b03b3ac3693a96184fc",
        "filename": "src/secp256k1/src/modules/recovery/tests_impl.h",
        "status": "added",
        "additions": 250,
        "deletions": 0,
        "changes": 250,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/recovery/tests_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/recovery/tests_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/recovery/tests_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,250 @@\n+/**********************************************************************\n+ * Copyright (c) 2013-2015 Pieter Wuille                              *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_RECOVERY_TESTS_\n+#define _SECP256K1_MODULE_RECOVERY_TESTS_\n+\n+void test_ecdsa_recovery_end_to_end(void) {\n+    unsigned char extra[32] = {0x00};\n+    unsigned char privkey[32];\n+    unsigned char message[32];\n+    secp256k1_ecdsa_signature signature[5];\n+    secp256k1_ecdsa_recoverable_signature rsignature[5];\n+    unsigned char sig[74];\n+    secp256k1_pubkey pubkey;\n+    secp256k1_pubkey recpubkey;\n+    int recid = 0;\n+\n+    /* Generate a random key and message. */\n+    {\n+        secp256k1_scalar msg, key;\n+        random_scalar_order_test(&msg);\n+        random_scalar_order_test(&key);\n+        secp256k1_scalar_get_b32(privkey, &key);\n+        secp256k1_scalar_get_b32(message, &msg);\n+    }\n+\n+    /* Construct and verify corresponding public key. */\n+    CHECK(secp256k1_ec_seckey_verify(ctx, privkey) == 1);\n+    CHECK(secp256k1_ec_pubkey_create(ctx, &pubkey, privkey) == 1);\n+\n+    /* Serialize/parse compact and verify/recover. */\n+    extra[0] = 0;\n+    CHECK(secp256k1_ecdsa_sign_recoverable(ctx, &rsignature[0], message, privkey, NULL, NULL) == 1);\n+    CHECK(secp256k1_ecdsa_sign(ctx, &signature[0], message, privkey, NULL, NULL) == 1);\n+    CHECK(secp256k1_ecdsa_sign_recoverable(ctx, &rsignature[4], message, privkey, NULL, NULL) == 1);\n+    CHECK(secp256k1_ecdsa_sign_recoverable(ctx, &rsignature[1], message, privkey, NULL, extra) == 1);\n+    extra[31] = 1;\n+    CHECK(secp256k1_ecdsa_sign_recoverable(ctx, &rsignature[2], message, privkey, NULL, extra) == 1);\n+    extra[31] = 0;\n+    extra[0] = 1;\n+    CHECK(secp256k1_ecdsa_sign_recoverable(ctx, &rsignature[3], message, privkey, NULL, extra) == 1);\n+    CHECK(secp256k1_ecdsa_recoverable_signature_serialize_compact(ctx, sig, &recid, &rsignature[4]) == 1);\n+    CHECK(secp256k1_ecdsa_recoverable_signature_convert(ctx, &signature[4], &rsignature[4]) == 1);\n+    CHECK(memcmp(&signature[4], &signature[0], 64) == 0);\n+    CHECK(secp256k1_ecdsa_verify(ctx, &signature[4], message, &pubkey) == 1);\n+    memset(&rsignature[4], 0, sizeof(rsignature[4]));\n+    CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsignature[4], sig, recid) == 1);\n+    CHECK(secp256k1_ecdsa_recoverable_signature_convert(ctx, &signature[4], &rsignature[4]) == 1);\n+    CHECK(secp256k1_ecdsa_verify(ctx, &signature[4], message, &pubkey) == 1);\n+    /* Parse compact (with recovery id) and recover. */\n+    CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsignature[4], sig, recid) == 1);\n+    CHECK(secp256k1_ecdsa_recover(ctx, &recpubkey, &rsignature[4], message) == 1);\n+    CHECK(memcmp(&pubkey, &recpubkey, sizeof(pubkey)) == 0);\n+    /* Serialize/destroy/parse signature and verify again. */\n+    CHECK(secp256k1_ecdsa_recoverable_signature_serialize_compact(ctx, sig, &recid, &rsignature[4]) == 1);\n+    sig[secp256k1_rand_bits(6)] += 1 + secp256k1_rand_int(255);\n+    CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsignature[4], sig, recid) == 1);\n+    CHECK(secp256k1_ecdsa_recoverable_signature_convert(ctx, &signature[4], &rsignature[4]) == 1);\n+    CHECK(secp256k1_ecdsa_verify(ctx, &signature[4], message, &pubkey) == 0);\n+    /* Recover again */\n+    CHECK(secp256k1_ecdsa_recover(ctx, &recpubkey, &rsignature[4], message) == 0 ||\n+          memcmp(&pubkey, &recpubkey, sizeof(pubkey)) != 0);\n+}\n+\n+/* Tests several edge cases. */\n+void test_ecdsa_recovery_edge_cases(void) {\n+    const unsigned char msg32[32] = {\n+        'T', 'h', 'i', 's', ' ', 'i', 's', ' ',\n+        'a', ' ', 'v', 'e', 'r', 'y', ' ', 's',\n+        'e', 'c', 'r', 'e', 't', ' ', 'm', 'e',\n+        's', 's', 'a', 'g', 'e', '.', '.', '.'\n+    };\n+    const unsigned char sig64[64] = {\n+        /* Generated by signing the above message with nonce 'This is the nonce we will use...'\n+         * and secret key 0 (which is not valid), resulting in recid 0. */\n+        0x67, 0xCB, 0x28, 0x5F, 0x9C, 0xD1, 0x94, 0xE8,\n+        0x40, 0xD6, 0x29, 0x39, 0x7A, 0xF5, 0x56, 0x96,\n+        0x62, 0xFD, 0xE4, 0x46, 0x49, 0x99, 0x59, 0x63,\n+        0x17, 0x9A, 0x7D, 0xD1, 0x7B, 0xD2, 0x35, 0x32,\n+        0x4B, 0x1B, 0x7D, 0xF3, 0x4C, 0xE1, 0xF6, 0x8E,\n+        0x69, 0x4F, 0xF6, 0xF1, 0x1A, 0xC7, 0x51, 0xDD,\n+        0x7D, 0xD7, 0x3E, 0x38, 0x7E, 0xE4, 0xFC, 0x86,\n+        0x6E, 0x1B, 0xE8, 0xEC, 0xC7, 0xDD, 0x95, 0x57\n+    };\n+    secp256k1_pubkey pubkey;\n+    /* signature (r,s) = (4,4), which can be recovered with all 4 recids. */\n+    const unsigned char sigb64[64] = {\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,\n+    };\n+    secp256k1_pubkey pubkeyb;\n+    secp256k1_ecdsa_recoverable_signature rsig;\n+    secp256k1_ecdsa_signature sig;\n+    int recid;\n+\n+    CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sig64, 0));\n+    CHECK(!secp256k1_ecdsa_recover(ctx, &pubkey, &rsig, msg32));\n+    CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sig64, 1));\n+    CHECK(secp256k1_ecdsa_recover(ctx, &pubkey, &rsig, msg32));\n+    CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sig64, 2));\n+    CHECK(!secp256k1_ecdsa_recover(ctx, &pubkey, &rsig, msg32));\n+    CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sig64, 3));\n+    CHECK(!secp256k1_ecdsa_recover(ctx, &pubkey, &rsig, msg32));\n+\n+    for (recid = 0; recid < 4; recid++) {\n+        int i;\n+        int recid2;\n+        /* (4,4) encoded in DER. */\n+        unsigned char sigbder[8] = {0x30, 0x06, 0x02, 0x01, 0x04, 0x02, 0x01, 0x04};\n+        unsigned char sigcder_zr[7] = {0x30, 0x05, 0x02, 0x00, 0x02, 0x01, 0x01};\n+        unsigned char sigcder_zs[7] = {0x30, 0x05, 0x02, 0x01, 0x01, 0x02, 0x00};\n+        unsigned char sigbderalt1[39] = {\n+            0x30, 0x25, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x04, 0x02, 0x01, 0x04,\n+        };\n+        unsigned char sigbderalt2[39] = {\n+            0x30, 0x25, 0x02, 0x01, 0x04, 0x02, 0x20, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,\n+        };\n+        unsigned char sigbderalt3[40] = {\n+            0x30, 0x26, 0x02, 0x21, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x01, 0x04,\n+        };\n+        unsigned char sigbderalt4[40] = {\n+            0x30, 0x26, 0x02, 0x01, 0x04, 0x02, 0x21, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,\n+        };\n+        /* (order + r,4) encoded in DER. */\n+        unsigned char sigbderlong[40] = {\n+            0x30, 0x26, 0x02, 0x21, 0x00, 0xFF, 0xFF, 0xFF,\n+            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n+            0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xBA, 0xAE, 0xDC,\n+            0xE6, 0xAF, 0x48, 0xA0, 0x3B, 0xBF, 0xD2, 0x5E,\n+            0x8C, 0xD0, 0x36, 0x41, 0x45, 0x02, 0x01, 0x04\n+        };\n+        CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sigb64, recid) == 1);\n+        CHECK(secp256k1_ecdsa_recover(ctx, &pubkeyb, &rsig, msg32) == 1);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbder, sizeof(sigbder)) == 1);\n+        CHECK(secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyb) == 1);\n+        for (recid2 = 0; recid2 < 4; recid2++) {\n+            secp256k1_pubkey pubkey2b;\n+            CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sigb64, recid2) == 1);\n+            CHECK(secp256k1_ecdsa_recover(ctx, &pubkey2b, &rsig, msg32) == 1);\n+            /* Verifying with (order + r,4) should always fail. */\n+            CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbderlong, sizeof(sigbderlong)) == 1);\n+            CHECK(secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyb) == 0);\n+        }\n+        /* DER parsing tests. */\n+        /* Zero length r/s. */\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigcder_zr, sizeof(sigcder_zr)) == 0);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigcder_zs, sizeof(sigcder_zs)) == 0);\n+        /* Leading zeros. */\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbderalt1, sizeof(sigbderalt1)) == 0);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbderalt2, sizeof(sigbderalt2)) == 0);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbderalt3, sizeof(sigbderalt3)) == 0);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbderalt4, sizeof(sigbderalt4)) == 0);\n+        sigbderalt3[4] = 1;\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbderalt3, sizeof(sigbderalt3)) == 1);\n+        CHECK(secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyb) == 0);\n+        sigbderalt4[7] = 1;\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbderalt4, sizeof(sigbderalt4)) == 1);\n+        CHECK(secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyb) == 0);\n+        /* Damage signature. */\n+        sigbder[7]++;\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbder, sizeof(sigbder)) == 1);\n+        CHECK(secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyb) == 0);\n+        sigbder[7]--;\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbder, 6) == 0);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbder, sizeof(sigbder) - 1) == 0);\n+        for(i = 0; i < 8; i++) {\n+            int c;\n+            unsigned char orig = sigbder[i];\n+            /*Try every single-byte change.*/\n+            for (c = 0; c < 256; c++) {\n+                if (c == orig ) {\n+                    continue;\n+                }\n+                sigbder[i] = c;\n+                CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigbder, sizeof(sigbder)) == 0 || secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyb) == 0);\n+            }\n+            sigbder[i] = orig;\n+        }\n+    }\n+\n+    /* Test r/s equal to zero */\n+    {\n+        /* (1,1) encoded in DER. */\n+        unsigned char sigcder[8] = {0x30, 0x06, 0x02, 0x01, 0x01, 0x02, 0x01, 0x01};\n+        unsigned char sigc64[64] = {\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n+            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,\n+        };\n+        secp256k1_pubkey pubkeyc;\n+        CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sigc64, 0) == 1);\n+        CHECK(secp256k1_ecdsa_recover(ctx, &pubkeyc, &rsig, msg32) == 1);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigcder, sizeof(sigcder)) == 1);\n+        CHECK(secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyc) == 1);\n+        sigcder[4] = 0;\n+        sigc64[31] = 0;\n+        CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sigc64, 0) == 1);\n+        CHECK(secp256k1_ecdsa_recover(ctx, &pubkeyb, &rsig, msg32) == 0);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigcder, sizeof(sigcder)) == 1);\n+        CHECK(secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyc) == 0);\n+        sigcder[4] = 1;\n+        sigcder[7] = 0;\n+        sigc64[31] = 1;\n+        sigc64[63] = 0;\n+        CHECK(secp256k1_ecdsa_recoverable_signature_parse_compact(ctx, &rsig, sigc64, 0) == 1);\n+        CHECK(secp256k1_ecdsa_recover(ctx, &pubkeyb, &rsig, msg32) == 0);\n+        CHECK(secp256k1_ecdsa_signature_parse_der(ctx, &sig, sigcder, sizeof(sigcder)) == 1);\n+        CHECK(secp256k1_ecdsa_verify(ctx, &sig, msg32, &pubkeyc) == 0);\n+    }\n+}\n+\n+void run_recovery_tests(void) {\n+    int i;\n+    for (i = 0; i < 64*count; i++) {\n+        test_ecdsa_recovery_end_to_end();\n+    }\n+    test_ecdsa_recovery_edge_cases();\n+}\n+\n+#endif"
      },
      {
        "sha": "b3bfa7d5cc49eeecd363ff8565953e430e6898d9",
        "filename": "src/secp256k1/src/modules/schnorr/Makefile.am.include",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/Makefile.am.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/Makefile.am.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/schnorr/Makefile.am.include?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,10 @@\n+include_HEADERS += include/secp256k1_schnorr.h\n+noinst_HEADERS += src/modules/schnorr/main_impl.h\n+noinst_HEADERS += src/modules/schnorr/schnorr.h\n+noinst_HEADERS += src/modules/schnorr/schnorr_impl.h\n+noinst_HEADERS += src/modules/schnorr/tests_impl.h\n+if USE_BENCHMARK\n+noinst_PROGRAMS += bench_schnorr_verify\n+bench_schnorr_verify_SOURCES = src/bench_schnorr_verify.c\n+bench_schnorr_verify_LDADD = libsecp256k1.la $(SECP_LIBS)\n+endif"
      },
      {
        "sha": "fa176a1767f5f8388a4960f4eaecabbeb56a4d4a",
        "filename": "src/secp256k1/src/modules/schnorr/main_impl.h",
        "status": "added",
        "additions": 164,
        "deletions": 0,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/main_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/main_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/schnorr/main_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,164 @@\n+/**********************************************************************\n+ * Copyright (c) 2014-2015 Pieter Wuille                              *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef SECP256K1_MODULE_SCHNORR_MAIN\n+#define SECP256K1_MODULE_SCHNORR_MAIN\n+\n+#include \"include/secp256k1_schnorr.h\"\n+#include \"modules/schnorr/schnorr_impl.h\"\n+\n+static void secp256k1_schnorr_msghash_sha256(unsigned char *h32, const unsigned char *r32, const unsigned char *msg32) {\n+    secp256k1_sha256_t sha;\n+    secp256k1_sha256_initialize(&sha);\n+    secp256k1_sha256_write(&sha, r32, 32);\n+    secp256k1_sha256_write(&sha, msg32, 32);\n+    secp256k1_sha256_finalize(&sha, h32);\n+}\n+\n+static const unsigned char secp256k1_schnorr_algo16[17] = \"Schnorr+SHA256  \";\n+\n+int secp256k1_schnorr_sign(const secp256k1_context* ctx, unsigned char *sig64, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {\n+    secp256k1_scalar sec, non;\n+    int ret = 0;\n+    int overflow = 0;\n+    unsigned int count = 0;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(sig64 != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_default;\n+    }\n+\n+    secp256k1_scalar_set_b32(&sec, seckey, NULL);\n+    while (1) {\n+        unsigned char nonce32[32];\n+        ret = noncefp(nonce32, msg32, seckey, secp256k1_schnorr_algo16, (void*)noncedata, count);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n+        memset(nonce32, 0, 32);\n+        if (!secp256k1_scalar_is_zero(&non) && !overflow) {\n+            if (secp256k1_schnorr_sig_sign(&ctx->ecmult_gen_ctx, sig64, &sec, &non, NULL, secp256k1_schnorr_msghash_sha256, msg32)) {\n+                break;\n+            }\n+        }\n+        count++;\n+    }\n+    if (!ret) {\n+        memset(sig64, 0, 64);\n+    }\n+    secp256k1_scalar_clear(&non);\n+    secp256k1_scalar_clear(&sec);\n+    return ret;\n+}\n+\n+int secp256k1_schnorr_verify(const secp256k1_context* ctx, const unsigned char *sig64, const unsigned char *msg32, const secp256k1_pubkey *pubkey) {\n+    secp256k1_ge q;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(sig64 != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+\n+    secp256k1_pubkey_load(ctx, &q, pubkey);\n+    return secp256k1_schnorr_sig_verify(&ctx->ecmult_ctx, sig64, &q, secp256k1_schnorr_msghash_sha256, msg32);\n+}\n+\n+int secp256k1_schnorr_recover(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *sig64, const unsigned char *msg32) {\n+    secp256k1_ge q;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(sig64 != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+\n+    if (secp256k1_schnorr_sig_recover(&ctx->ecmult_ctx, sig64, &q, secp256k1_schnorr_msghash_sha256, msg32)) {\n+        secp256k1_pubkey_save(pubkey, &q);\n+        return 1;\n+    } else {\n+        memset(pubkey, 0, sizeof(*pubkey));\n+        return 0;\n+    }\n+}\n+\n+int secp256k1_schnorr_generate_nonce_pair(const secp256k1_context* ctx, secp256k1_pubkey *pubnonce, unsigned char *privnonce32, const unsigned char *sec32, const unsigned char *msg32, secp256k1_nonce_function noncefp, const void* noncedata) {\n+    int count = 0;\n+    int ret = 1;\n+    secp256k1_gej Qj;\n+    secp256k1_ge Q;\n+    secp256k1_scalar sec;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(sec32 != NULL);\n+    ARG_CHECK(pubnonce != NULL);\n+    ARG_CHECK(privnonce32 != NULL);\n+\n+    if (noncefp == NULL) {\n+        noncefp = secp256k1_nonce_function_default;\n+    }\n+\n+    do {\n+        int overflow;\n+        ret = noncefp(privnonce32, sec32, msg32, secp256k1_schnorr_algo16, (void*)noncedata, count++);\n+        if (!ret) {\n+            break;\n+        }\n+        secp256k1_scalar_set_b32(&sec, privnonce32, &overflow);\n+        if (overflow || secp256k1_scalar_is_zero(&sec)) {\n+            continue;\n+        }\n+        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &Qj, &sec);\n+        secp256k1_ge_set_gej(&Q, &Qj);\n+\n+        secp256k1_pubkey_save(pubnonce, &Q);\n+        break;\n+    } while(1);\n+\n+    secp256k1_scalar_clear(&sec);\n+    if (!ret) {\n+        memset(pubnonce, 0, sizeof(*pubnonce));\n+    }\n+    return ret;\n+}\n+\n+int secp256k1_schnorr_partial_sign(const secp256k1_context* ctx, unsigned char *sig64, const unsigned char *msg32, const unsigned char *sec32, const secp256k1_pubkey *pubnonce_others, const unsigned char *secnonce32) {\n+    int overflow = 0;\n+    secp256k1_scalar sec, non;\n+    secp256k1_ge pubnon;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(sig64 != NULL);\n+    ARG_CHECK(sec32 != NULL);\n+    ARG_CHECK(secnonce32 != NULL);\n+    ARG_CHECK(pubnonce_others != NULL);\n+\n+    secp256k1_scalar_set_b32(&sec, sec32, &overflow);\n+    if (overflow || secp256k1_scalar_is_zero(&sec)) {\n+        return -1;\n+    }\n+    secp256k1_scalar_set_b32(&non, secnonce32, &overflow);\n+    if (overflow || secp256k1_scalar_is_zero(&non)) {\n+        return -1;\n+    }\n+    secp256k1_pubkey_load(ctx, &pubnon, pubnonce_others);\n+    return secp256k1_schnorr_sig_sign(&ctx->ecmult_gen_ctx, sig64, &sec, &non, &pubnon, secp256k1_schnorr_msghash_sha256, msg32);\n+}\n+\n+int secp256k1_schnorr_partial_combine(const secp256k1_context* ctx, unsigned char *sig64, const unsigned char * const *sig64sin, size_t n) {\n+    ARG_CHECK(sig64 != NULL);\n+    ARG_CHECK(n >= 1);\n+    ARG_CHECK(sig64sin != NULL);\n+    return secp256k1_schnorr_sig_combine(sig64, n, sig64sin);\n+}\n+\n+#endif"
      },
      {
        "sha": "de18147bd52ac0f70369114dfcb06947730cbaac",
        "filename": "src/secp256k1/src/modules/schnorr/schnorr.h",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/schnorr.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/schnorr.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/schnorr/schnorr.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,20 @@\n+/***********************************************************************\n+ * Copyright (c) 2014-2015 Pieter Wuille                               *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php. *\n+ ***********************************************************************/\n+\n+#ifndef _SECP256K1_MODULE_SCHNORR_H_\n+#define _SECP256K1_MODULE_SCHNORR_H_\n+\n+#include \"scalar.h\"\n+#include \"group.h\"\n+\n+typedef void (*secp256k1_schnorr_msghash)(unsigned char *h32, const unsigned char *r32, const unsigned char *msg32);\n+\n+static int secp256k1_schnorr_sig_sign(const secp256k1_ecmult_gen_context* ctx, unsigned char *sig64, const secp256k1_scalar *key, const secp256k1_scalar *nonce, const secp256k1_ge *pubnonce, secp256k1_schnorr_msghash hash, const unsigned char *msg32);\n+static int secp256k1_schnorr_sig_verify(const secp256k1_ecmult_context* ctx, const unsigned char *sig64, const secp256k1_ge *pubkey, secp256k1_schnorr_msghash hash, const unsigned char *msg32);\n+static int secp256k1_schnorr_sig_recover(const secp256k1_ecmult_context* ctx, const unsigned char *sig64, secp256k1_ge *pubkey, secp256k1_schnorr_msghash hash, const unsigned char *msg32);\n+static int secp256k1_schnorr_sig_combine(unsigned char *sig64, size_t n, const unsigned char * const *sig64ins);\n+\n+#endif"
      },
      {
        "sha": "e13ab6db7cca1173582c47597d42fb916f43fc22",
        "filename": "src/secp256k1/src/modules/schnorr/schnorr_impl.h",
        "status": "added",
        "additions": 207,
        "deletions": 0,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/schnorr_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/schnorr_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/schnorr/schnorr_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,207 @@\n+/***********************************************************************\n+ * Copyright (c) 2014-2015 Pieter Wuille                               *\n+ * Distributed under the MIT software license, see the accompanying    *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php. *\n+ ***********************************************************************/\n+\n+#ifndef _SECP256K1_SCHNORR_IMPL_H_\n+#define _SECP256K1_SCHNORR_IMPL_H_\n+\n+#include <string.h>\n+\n+#include \"schnorr.h\"\n+#include \"num.h\"\n+#include \"field.h\"\n+#include \"group.h\"\n+#include \"ecmult.h\"\n+#include \"ecmult_gen.h\"\n+\n+/**\n+ * Custom Schnorr-based signature scheme. They support multiparty signing, public key\n+ * recovery and batch validation.\n+ *\n+ * Rationale for verifying R's y coordinate:\n+ * In order to support batch validation and public key recovery, the full R point must\n+ * be known to verifiers, rather than just its x coordinate. In order to not risk\n+ * being more strict in batch validation than normal validation, validators must be\n+ * required to reject signatures with incorrect y coordinate. This is only possible\n+ * by including a (relatively slow) field inverse, or a field square root. However,\n+ * batch validation offers potentially much higher benefits than this cost.\n+ *\n+ * Rationale for having an implicit y coordinate oddness:\n+ * If we commit to having the full R point known to verifiers, there are two mechanism.\n+ * Either include its oddness in the signature, or give it an implicit fixed value.\n+ * As the R y coordinate can be flipped by a simple negation of the nonce, we choose the\n+ * latter, as it comes with nearly zero impact on signing or validation performance, and\n+ * saves a byte in the signature.\n+ *\n+ * Signing:\n+ *   Inputs: 32-byte message m, 32-byte scalar key x (!=0), 32-byte scalar nonce k (!=0)\n+ *\n+ *   Compute point R = k * G. Reject nonce if R's y coordinate is odd (or negate nonce).\n+ *   Compute 32-byte r, the serialization of R's x coordinate.\n+ *   Compute scalar h = Hash(r || m). Reject nonce if h == 0 or h >= order.\n+ *   Compute scalar s = k - h * x.\n+ *   The signature is (r, s).\n+ *\n+ *\n+ * Verification:\n+ *   Inputs: 32-byte message m, public key point Q, signature: (32-byte r, scalar s)\n+ *\n+ *   Signature is invalid if s >= order.\n+ *   Signature is invalid if r >= p.\n+ *   Compute scalar h = Hash(r || m). Signature is invalid if h == 0 or h >= order.\n+ *   Option 1 (faster for single verification):\n+ *     Compute point R = h * Q + s * G. Signature is invalid if R is infinity or R's y coordinate is odd.\n+ *     Signature is valid if the serialization of R's x coordinate equals r.\n+ *   Option 2 (allows batch validation and pubkey recovery):\n+ *     Decompress x coordinate r into point R, with odd y coordinate. Fail if R is not on the curve.\n+ *     Signature is valid if R + h * Q + s * G == 0.\n+ */\n+\n+static int secp256k1_schnorr_sig_sign(const secp256k1_ecmult_gen_context* ctx, unsigned char *sig64, const secp256k1_scalar *key, const secp256k1_scalar *nonce, const secp256k1_ge *pubnonce, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {\n+    secp256k1_gej Rj;\n+    secp256k1_ge Ra;\n+    unsigned char h32[32];\n+    secp256k1_scalar h, s;\n+    int overflow;\n+    secp256k1_scalar n;\n+\n+    if (secp256k1_scalar_is_zero(key) || secp256k1_scalar_is_zero(nonce)) {\n+        return 0;\n+    }\n+    n = *nonce;\n+\n+    secp256k1_ecmult_gen(ctx, &Rj, &n);\n+    if (pubnonce != NULL) {\n+        secp256k1_gej_add_ge(&Rj, &Rj, pubnonce);\n+    }\n+    secp256k1_ge_set_gej(&Ra, &Rj);\n+    secp256k1_fe_normalize(&Ra.y);\n+    if (secp256k1_fe_is_odd(&Ra.y)) {\n+        /* R's y coordinate is odd, which is not allowed (see rationale above).\n+           Force it to be even by negating the nonce. Note that this even works\n+           for multiparty signing, as the R point is known to all participants,\n+           which can all decide to flip the sign in unison, resulting in the\n+           overall R point to be negated too. */\n+        secp256k1_scalar_negate(&n, &n);\n+    }\n+    secp256k1_fe_normalize(&Ra.x);\n+    secp256k1_fe_get_b32(sig64, &Ra.x);\n+    hash(h32, sig64, msg32);\n+    overflow = 0;\n+    secp256k1_scalar_set_b32(&h, h32, &overflow);\n+    if (overflow || secp256k1_scalar_is_zero(&h)) {\n+        secp256k1_scalar_clear(&n);\n+        return 0;\n+    }\n+    secp256k1_scalar_mul(&s, &h, key);\n+    secp256k1_scalar_negate(&s, &s);\n+    secp256k1_scalar_add(&s, &s, &n);\n+    secp256k1_scalar_clear(&n);\n+    secp256k1_scalar_get_b32(sig64 + 32, &s);\n+    return 1;\n+}\n+\n+static int secp256k1_schnorr_sig_verify(const secp256k1_ecmult_context* ctx, const unsigned char *sig64, const secp256k1_ge *pubkey, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {\n+    secp256k1_gej Qj, Rj;\n+    secp256k1_ge Ra;\n+    secp256k1_fe Rx;\n+    secp256k1_scalar h, s;\n+    unsigned char hh[32];\n+    int overflow;\n+\n+    if (secp256k1_ge_is_infinity(pubkey)) {\n+        return 0;\n+    }\n+    hash(hh, sig64, msg32);\n+    overflow = 0;\n+    secp256k1_scalar_set_b32(&h, hh, &overflow);\n+    if (overflow || secp256k1_scalar_is_zero(&h)) {\n+        return 0;\n+    }\n+    overflow = 0;\n+    secp256k1_scalar_set_b32(&s, sig64 + 32, &overflow);\n+    if (overflow) {\n+        return 0;\n+    }\n+    if (!secp256k1_fe_set_b32(&Rx, sig64)) {\n+        return 0;\n+    }\n+    secp256k1_gej_set_ge(&Qj, pubkey);\n+    secp256k1_ecmult(ctx, &Rj, &Qj, &h, &s);\n+    if (secp256k1_gej_is_infinity(&Rj)) {\n+        return 0;\n+    }\n+    secp256k1_ge_set_gej_var(&Ra, &Rj);\n+    secp256k1_fe_normalize_var(&Ra.y);\n+    if (secp256k1_fe_is_odd(&Ra.y)) {\n+        return 0;\n+    }\n+    return secp256k1_fe_equal_var(&Rx, &Ra.x);\n+}\n+\n+static int secp256k1_schnorr_sig_recover(const secp256k1_ecmult_context* ctx, const unsigned char *sig64, secp256k1_ge *pubkey, secp256k1_schnorr_msghash hash, const unsigned char *msg32) {\n+    secp256k1_gej Qj, Rj;\n+    secp256k1_ge Ra;\n+    secp256k1_fe Rx;\n+    secp256k1_scalar h, s;\n+    unsigned char hh[32];\n+    int overflow;\n+\n+    hash(hh, sig64, msg32);\n+    overflow = 0;\n+    secp256k1_scalar_set_b32(&h, hh, &overflow);\n+    if (overflow || secp256k1_scalar_is_zero(&h)) {\n+        return 0;\n+    }\n+    overflow = 0;\n+    secp256k1_scalar_set_b32(&s, sig64 + 32, &overflow);\n+    if (overflow) {\n+        return 0;\n+    }\n+    if (!secp256k1_fe_set_b32(&Rx, sig64)) {\n+        return 0;\n+    }\n+    if (!secp256k1_ge_set_xo_var(&Ra, &Rx, 0)) {\n+        return 0;\n+    }\n+    secp256k1_gej_set_ge(&Rj, &Ra);\n+    secp256k1_scalar_inverse_var(&h, &h);\n+    secp256k1_scalar_negate(&s, &s);\n+    secp256k1_scalar_mul(&s, &s, &h);\n+    secp256k1_ecmult(ctx, &Qj, &Rj, &h, &s);\n+    if (secp256k1_gej_is_infinity(&Qj)) {\n+        return 0;\n+    }\n+    secp256k1_ge_set_gej(pubkey, &Qj);\n+    return 1;\n+}\n+\n+static int secp256k1_schnorr_sig_combine(unsigned char *sig64, size_t n, const unsigned char * const *sig64ins) {\n+    secp256k1_scalar s = SECP256K1_SCALAR_CONST(0, 0, 0, 0, 0, 0, 0, 0);\n+    size_t i;\n+    for (i = 0; i < n; i++) {\n+        secp256k1_scalar si;\n+        int overflow;\n+        secp256k1_scalar_set_b32(&si, sig64ins[i] + 32, &overflow);\n+        if (overflow) {\n+            return -1;\n+        }\n+        if (i) {\n+            if (memcmp(sig64ins[i - 1], sig64ins[i], 32) != 0) {\n+                return -1;\n+            }\n+        }\n+        secp256k1_scalar_add(&s, &s, &si);\n+    }\n+    if (secp256k1_scalar_is_zero(&s)) {\n+        return 0;\n+    }\n+    memcpy(sig64, sig64ins[0], 32);\n+    secp256k1_scalar_get_b32(sig64 + 32, &s);\n+    secp256k1_scalar_clear(&s);\n+    return 1;\n+}\n+\n+#endif"
      },
      {
        "sha": "5bd14a03e3c65ba99c27e6694352bf9e4d9ab1cd",
        "filename": "src/secp256k1/src/modules/schnorr/tests_impl.h",
        "status": "added",
        "additions": 175,
        "deletions": 0,
        "changes": 175,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/tests_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/modules/schnorr/tests_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/schnorr/tests_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -0,0 +1,175 @@\n+/**********************************************************************\n+ * Copyright (c) 2014-2015 Pieter Wuille                              *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef SECP256K1_MODULE_SCHNORR_TESTS\n+#define SECP256K1_MODULE_SCHNORR_TESTS\n+\n+#include \"include/secp256k1_schnorr.h\"\n+\n+void test_schnorr_end_to_end(void) {\n+    unsigned char privkey[32];\n+    unsigned char message[32];\n+    unsigned char schnorr_signature[64];\n+    secp256k1_pubkey pubkey, recpubkey;\n+\n+    /* Generate a random key and message. */\n+    {\n+        secp256k1_scalar key;\n+        random_scalar_order_test(&key);\n+        secp256k1_scalar_get_b32(privkey, &key);\n+        secp256k1_rand256_test(message);\n+    }\n+\n+    /* Construct and verify corresponding public key. */\n+    CHECK(secp256k1_ec_seckey_verify(ctx, privkey) == 1);\n+    CHECK(secp256k1_ec_pubkey_create(ctx, &pubkey, privkey) == 1);\n+\n+    /* Schnorr sign. */\n+    CHECK(secp256k1_schnorr_sign(ctx, schnorr_signature, message, privkey, NULL, NULL) == 1);\n+    CHECK(secp256k1_schnorr_verify(ctx, schnorr_signature, message, &pubkey) == 1);\n+    CHECK(secp256k1_schnorr_recover(ctx, &recpubkey, schnorr_signature, message) == 1);\n+    CHECK(memcmp(&pubkey, &recpubkey, sizeof(pubkey)) == 0);\n+    /* Destroy signature and verify again. */\n+    schnorr_signature[secp256k1_rand_bits(6)] += 1 + secp256k1_rand_int(255);\n+    CHECK(secp256k1_schnorr_verify(ctx, schnorr_signature, message, &pubkey) == 0);\n+    CHECK(secp256k1_schnorr_recover(ctx, &recpubkey, schnorr_signature, message) != 1 ||\n+          memcmp(&pubkey, &recpubkey, sizeof(pubkey)) != 0);\n+}\n+\n+/** Horribly broken hash function. Do not use for anything but tests. */\n+void test_schnorr_hash(unsigned char *h32, const unsigned char *r32, const unsigned char *msg32) {\n+    int i;\n+    for (i = 0; i < 32; i++) {\n+        h32[i] = r32[i] ^ msg32[i];\n+    }\n+}\n+\n+void test_schnorr_sign_verify(void) {\n+    unsigned char msg32[32];\n+    unsigned char sig64[3][64];\n+    secp256k1_gej pubkeyj[3];\n+    secp256k1_ge pubkey[3];\n+    secp256k1_scalar nonce[3], key[3];\n+    int i = 0;\n+    int k;\n+\n+    secp256k1_rand256_test(msg32);\n+\n+    for (k = 0; k < 3; k++) {\n+        random_scalar_order_test(&key[k]);\n+\n+        do {\n+            random_scalar_order_test(&nonce[k]);\n+            if (secp256k1_schnorr_sig_sign(&ctx->ecmult_gen_ctx, sig64[k], &key[k], &nonce[k], NULL, &test_schnorr_hash, msg32)) {\n+                break;\n+            }\n+        } while(1);\n+\n+        secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pubkeyj[k], &key[k]);\n+        secp256k1_ge_set_gej_var(&pubkey[k], &pubkeyj[k]);\n+        CHECK(secp256k1_schnorr_sig_verify(&ctx->ecmult_ctx, sig64[k], &pubkey[k], &test_schnorr_hash, msg32));\n+\n+        for (i = 0; i < 4; i++) {\n+            int pos = secp256k1_rand_bits(6);\n+            int mod = 1 + secp256k1_rand_int(255);\n+            sig64[k][pos] ^= mod;\n+            CHECK(secp256k1_schnorr_sig_verify(&ctx->ecmult_ctx, sig64[k], &pubkey[k], &test_schnorr_hash, msg32) == 0);\n+            sig64[k][pos] ^= mod;\n+        }\n+    }\n+}\n+\n+void test_schnorr_threshold(void) {\n+    unsigned char msg[32];\n+    unsigned char sec[5][32];\n+    secp256k1_pubkey pub[5];\n+    unsigned char nonce[5][32];\n+    secp256k1_pubkey pubnonce[5];\n+    unsigned char sig[5][64];\n+    const unsigned char* sigs[5];\n+    unsigned char allsig[64];\n+    const secp256k1_pubkey* pubs[5];\n+    secp256k1_pubkey allpub;\n+    int n, i;\n+    int damage;\n+    int ret = 0;\n+\n+    damage = secp256k1_rand_bits(1) ? (1 + secp256k1_rand_int(4)) : 0;\n+    secp256k1_rand256_test(msg);\n+    n = 2 + secp256k1_rand_int(4);\n+    for (i = 0; i < n; i++) {\n+        do {\n+            secp256k1_rand256_test(sec[i]);\n+        } while (!secp256k1_ec_seckey_verify(ctx, sec[i]));\n+        CHECK(secp256k1_ec_pubkey_create(ctx, &pub[i], sec[i]));\n+        CHECK(secp256k1_schnorr_generate_nonce_pair(ctx, &pubnonce[i], nonce[i], msg, sec[i], NULL, NULL));\n+        pubs[i] = &pub[i];\n+    }\n+    if (damage == 1) {\n+        nonce[secp256k1_rand_int(n)][secp256k1_rand_int(32)] ^= 1 + secp256k1_rand_int(255);\n+    } else if (damage == 2) {\n+        sec[secp256k1_rand_int(n)][secp256k1_rand_int(32)] ^= 1 + secp256k1_rand_int(255);\n+    }\n+    for (i = 0; i < n; i++) {\n+        secp256k1_pubkey allpubnonce;\n+        const secp256k1_pubkey *pubnonces[4];\n+        int j;\n+        for (j = 0; j < i; j++) {\n+            pubnonces[j] = &pubnonce[j];\n+        }\n+        for (j = i + 1; j < n; j++) {\n+            pubnonces[j - 1] = &pubnonce[j];\n+        }\n+        CHECK(secp256k1_ec_pubkey_combine(ctx, &allpubnonce, pubnonces, n - 1));\n+        ret |= (secp256k1_schnorr_partial_sign(ctx, sig[i], msg, sec[i], &allpubnonce, nonce[i]) != 1) * 1;\n+        sigs[i] = sig[i];\n+    }\n+    if (damage == 3) {\n+        sig[secp256k1_rand_int(n)][secp256k1_rand_bits(6)] ^= 1 + secp256k1_rand_int(255);\n+    }\n+    ret |= (secp256k1_ec_pubkey_combine(ctx, &allpub, pubs, n) != 1) * 2;\n+    if ((ret & 1) == 0) {\n+        ret |= (secp256k1_schnorr_partial_combine(ctx, allsig, sigs, n) != 1) * 4;\n+    }\n+    if (damage == 4) {\n+        allsig[secp256k1_rand_int(32)] ^= 1 + secp256k1_rand_int(255);\n+    }\n+    if ((ret & 7) == 0) {\n+        ret |= (secp256k1_schnorr_verify(ctx, allsig, msg, &allpub) != 1) * 8;\n+    }\n+    CHECK((ret == 0) == (damage == 0));\n+}\n+\n+void test_schnorr_recovery(void) {\n+    unsigned char msg32[32];\n+    unsigned char sig64[64];\n+    secp256k1_ge Q;\n+\n+    secp256k1_rand256_test(msg32);\n+    secp256k1_rand256_test(sig64);\n+    secp256k1_rand256_test(sig64 + 32);\n+    if (secp256k1_schnorr_sig_recover(&ctx->ecmult_ctx, sig64, &Q, &test_schnorr_hash, msg32) == 1) {\n+        CHECK(secp256k1_schnorr_sig_verify(&ctx->ecmult_ctx, sig64, &Q, &test_schnorr_hash, msg32) == 1);\n+    }\n+}\n+\n+void run_schnorr_tests(void) {\n+    int i;\n+    for (i = 0; i < 32*count; i++) {\n+        test_schnorr_end_to_end();\n+    }\n+    for (i = 0; i < 32 * count; i++) {\n+         test_schnorr_sign_verify();\n+    }\n+    for (i = 0; i < 16 * count; i++) {\n+         test_schnorr_recovery();\n+    }\n+    for (i = 0; i < 10 * count; i++) {\n+         test_schnorr_threshold();\n+    }\n+}\n+\n+#endif"
      },
      {
        "sha": "ebfa71eb44bda57b0ea6e4ea9a45d46fe0540c7a",
        "filename": "src/secp256k1/src/num.h",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/num.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/num.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/num.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -20,48 +20,48 @@\n #endif\n \n /** Copy a number. */\n-static void secp256k1_num_copy(secp256k1_num_t *r, const secp256k1_num_t *a);\n+static void secp256k1_num_copy(secp256k1_num *r, const secp256k1_num *a);\n \n /** Convert a number's absolute value to a binary big-endian string.\n  *  There must be enough place. */\n-static void secp256k1_num_get_bin(unsigned char *r, unsigned int rlen, const secp256k1_num_t *a);\n+static void secp256k1_num_get_bin(unsigned char *r, unsigned int rlen, const secp256k1_num *a);\n \n /** Set a number to the value of a binary big-endian string. */\n-static void secp256k1_num_set_bin(secp256k1_num_t *r, const unsigned char *a, unsigned int alen);\n+static void secp256k1_num_set_bin(secp256k1_num *r, const unsigned char *a, unsigned int alen);\n \n /** Compute a modular inverse. The input must be less than the modulus. */\n-static void secp256k1_num_mod_inverse(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *m);\n+static void secp256k1_num_mod_inverse(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *m);\n \n /** Compare the absolute value of two numbers. */\n-static int secp256k1_num_cmp(const secp256k1_num_t *a, const secp256k1_num_t *b);\n+static int secp256k1_num_cmp(const secp256k1_num *a, const secp256k1_num *b);\n \n /** Test whether two number are equal (including sign). */\n-static int secp256k1_num_eq(const secp256k1_num_t *a, const secp256k1_num_t *b);\n+static int secp256k1_num_eq(const secp256k1_num *a, const secp256k1_num *b);\n \n /** Add two (signed) numbers. */\n-static void secp256k1_num_add(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b);\n+static void secp256k1_num_add(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b);\n \n /** Subtract two (signed) numbers. */\n-static void secp256k1_num_sub(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b);\n+static void secp256k1_num_sub(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b);\n \n /** Multiply two (signed) numbers. */\n-static void secp256k1_num_mul(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b);\n+static void secp256k1_num_mul(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b);\n \n /** Replace a number by its remainder modulo m. M's sign is ignored. The result is a number between 0 and m-1,\n     even if r was negative. */\n-static void secp256k1_num_mod(secp256k1_num_t *r, const secp256k1_num_t *m);\n+static void secp256k1_num_mod(secp256k1_num *r, const secp256k1_num *m);\n \n /** Right-shift the passed number by bits bits. */\n-static void secp256k1_num_shift(secp256k1_num_t *r, int bits);\n+static void secp256k1_num_shift(secp256k1_num *r, int bits);\n \n /** Check whether a number is zero. */\n-static int secp256k1_num_is_zero(const secp256k1_num_t *a);\n+static int secp256k1_num_is_zero(const secp256k1_num *a);\n \n /** Check whether a number is strictly negative. */\n-static int secp256k1_num_is_neg(const secp256k1_num_t *a);\n+static int secp256k1_num_is_neg(const secp256k1_num *a);\n \n /** Change a number's sign. */\n-static void secp256k1_num_negate(secp256k1_num_t *r);\n+static void secp256k1_num_negate(secp256k1_num *r);\n \n #endif\n "
      },
      {
        "sha": "7dd813088afc94ab54e2281d17edbc709e4b5c3d",
        "filename": "src/secp256k1/src/num_gmp.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/num_gmp.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/num_gmp.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/num_gmp.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -15,6 +15,6 @@ typedef struct {\n     mp_limb_t data[2*NUM_LIMBS];\n     int neg;\n     int limbs;\n-} secp256k1_num_t;\n+} secp256k1_num;\n \n #endif"
      },
      {
        "sha": "7b6a89719ab148df09a93a190133074edf8b069f",
        "filename": "src/secp256k1/src/num_gmp_impl.h",
        "status": "modified",
        "additions": 21,
        "deletions": 19,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/num_gmp_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/num_gmp_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/num_gmp_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -15,18 +15,18 @@\n #include \"num.h\"\n \n #ifdef VERIFY\n-static void secp256k1_num_sanity(const secp256k1_num_t *a) {\n+static void secp256k1_num_sanity(const secp256k1_num *a) {\n     VERIFY_CHECK(a->limbs == 1 || (a->limbs > 1 && a->data[a->limbs-1] != 0));\n }\n #else\n #define secp256k1_num_sanity(a) do { } while(0)\n #endif\n \n-static void secp256k1_num_copy(secp256k1_num_t *r, const secp256k1_num_t *a) {\n+static void secp256k1_num_copy(secp256k1_num *r, const secp256k1_num *a) {\n     *r = *a;\n }\n \n-static void secp256k1_num_get_bin(unsigned char *r, unsigned int rlen, const secp256k1_num_t *a) {\n+static void secp256k1_num_get_bin(unsigned char *r, unsigned int rlen, const secp256k1_num *a) {\n     unsigned char tmp[65];\n     int len = 0;\n     int shift = 0;\n@@ -42,7 +42,7 @@ static void secp256k1_num_get_bin(unsigned char *r, unsigned int rlen, const sec\n     memset(tmp, 0, sizeof(tmp));\n }\n \n-static void secp256k1_num_set_bin(secp256k1_num_t *r, const unsigned char *a, unsigned int alen) {\n+static void secp256k1_num_set_bin(secp256k1_num *r, const unsigned char *a, unsigned int alen) {\n     int len;\n     VERIFY_CHECK(alen > 0);\n     VERIFY_CHECK(alen <= 64);\n@@ -59,7 +59,7 @@ static void secp256k1_num_set_bin(secp256k1_num_t *r, const unsigned char *a, un\n     }\n }\n \n-static void secp256k1_num_add_abs(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b) {\n+static void secp256k1_num_add_abs(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {\n     mp_limb_t c = mpn_add(r->data, a->data, a->limbs, b->data, b->limbs);\n     r->limbs = a->limbs;\n     if (c != 0) {\n@@ -68,16 +68,17 @@ static void secp256k1_num_add_abs(secp256k1_num_t *r, const secp256k1_num_t *a,\n     }\n }\n \n-static void secp256k1_num_sub_abs(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b) {\n+static void secp256k1_num_sub_abs(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {\n     mp_limb_t c = mpn_sub(r->data, a->data, a->limbs, b->data, b->limbs);\n+    (void)c;\n     VERIFY_CHECK(c == 0);\n     r->limbs = a->limbs;\n     while (r->limbs > 1 && r->data[r->limbs-1]==0) {\n         r->limbs--;\n     }\n }\n \n-static void secp256k1_num_mod(secp256k1_num_t *r, const secp256k1_num_t *m) {\n+static void secp256k1_num_mod(secp256k1_num *r, const secp256k1_num *m) {\n     secp256k1_num_sanity(r);\n     secp256k1_num_sanity(m);\n \n@@ -97,7 +98,7 @@ static void secp256k1_num_mod(secp256k1_num_t *r, const secp256k1_num_t *m) {\n     }\n }\n \n-static void secp256k1_num_mod_inverse(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *m) {\n+static void secp256k1_num_mod_inverse(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *m) {\n     int i;\n     mp_limb_t g[NUM_LIMBS+1];\n     mp_limb_t u[NUM_LIMBS+1];\n@@ -125,6 +126,7 @@ static void secp256k1_num_mod_inverse(secp256k1_num_t *r, const secp256k1_num_t\n     }\n     sn = NUM_LIMBS+1;\n     gn = mpn_gcdext(g, r->data, &sn, u, m->limbs, v, m->limbs);\n+    (void)gn;\n     VERIFY_CHECK(gn == 1);\n     VERIFY_CHECK(g[0] == 1);\n     r->neg = a->neg ^ m->neg;\n@@ -142,15 +144,15 @@ static void secp256k1_num_mod_inverse(secp256k1_num_t *r, const secp256k1_num_t\n     memset(v, 0, sizeof(v));\n }\n \n-static int secp256k1_num_is_zero(const secp256k1_num_t *a) {\n+static int secp256k1_num_is_zero(const secp256k1_num *a) {\n     return (a->limbs == 1 && a->data[0] == 0);\n }\n \n-static int secp256k1_num_is_neg(const secp256k1_num_t *a) {\n+static int secp256k1_num_is_neg(const secp256k1_num *a) {\n     return (a->limbs > 1 || a->data[0] != 0) && a->neg;\n }\n \n-static int secp256k1_num_cmp(const secp256k1_num_t *a, const secp256k1_num_t *b) {\n+static int secp256k1_num_cmp(const secp256k1_num *a, const secp256k1_num *b) {\n     if (a->limbs > b->limbs) {\n         return 1;\n     }\n@@ -160,7 +162,7 @@ static int secp256k1_num_cmp(const secp256k1_num_t *a, const secp256k1_num_t *b)\n     return mpn_cmp(a->data, b->data, a->limbs);\n }\n \n-static int secp256k1_num_eq(const secp256k1_num_t *a, const secp256k1_num_t *b) {\n+static int secp256k1_num_eq(const secp256k1_num *a, const secp256k1_num *b) {\n     if (a->limbs > b->limbs) {\n         return 0;\n     }\n@@ -173,7 +175,7 @@ static int secp256k1_num_eq(const secp256k1_num_t *a, const secp256k1_num_t *b)\n     return mpn_cmp(a->data, b->data, a->limbs) == 0;\n }\n \n-static void secp256k1_num_subadd(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b, int bneg) {\n+static void secp256k1_num_subadd(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b, int bneg) {\n     if (!(b->neg ^ bneg ^ a->neg)) { /* a and b have the same sign */\n         r->neg = a->neg;\n         if (a->limbs >= b->limbs) {\n@@ -192,19 +194,19 @@ static void secp256k1_num_subadd(secp256k1_num_t *r, const secp256k1_num_t *a, c\n     }\n }\n \n-static void secp256k1_num_add(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b) {\n+static void secp256k1_num_add(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {\n     secp256k1_num_sanity(a);\n     secp256k1_num_sanity(b);\n     secp256k1_num_subadd(r, a, b, 0);\n }\n \n-static void secp256k1_num_sub(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b) {\n+static void secp256k1_num_sub(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {\n     secp256k1_num_sanity(a);\n     secp256k1_num_sanity(b);\n     secp256k1_num_subadd(r, a, b, 1);\n }\n \n-static void secp256k1_num_mul(secp256k1_num_t *r, const secp256k1_num_t *a, const secp256k1_num_t *b) {\n+static void secp256k1_num_mul(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {\n     mp_limb_t tmp[2*NUM_LIMBS+1];\n     secp256k1_num_sanity(a);\n     secp256k1_num_sanity(b);\n@@ -231,13 +233,13 @@ static void secp256k1_num_mul(secp256k1_num_t *r, const secp256k1_num_t *a, cons\n     memset(tmp, 0, sizeof(tmp));\n }\n \n-static void secp256k1_num_shift(secp256k1_num_t *r, int bits) {\n-    int i;\n+static void secp256k1_num_shift(secp256k1_num *r, int bits) {\n     if (bits % GMP_NUMB_BITS) {\n         /* Shift within limbs. */\n         mpn_rshift(r->data, r->data, r->limbs, bits % GMP_NUMB_BITS);\n     }\n     if (bits >= GMP_NUMB_BITS) {\n+        int i;\n         /* Shift full limbs. */\n         for (i = 0; i < r->limbs; i++) {\n             int index = i + (bits / GMP_NUMB_BITS);\n@@ -253,7 +255,7 @@ static void secp256k1_num_shift(secp256k1_num_t *r, int bits) {\n     }\n }\n \n-static void secp256k1_num_negate(secp256k1_num_t *r) {\n+static void secp256k1_num_negate(secp256k1_num *r) {\n     r->neg ^= 1;\n }\n "
      },
      {
        "sha": "b590ccd6dde6fa609bcbe11492a8e5d8718bc999",
        "filename": "src/secp256k1/src/scalar.h",
        "status": "modified",
        "additions": 34,
        "deletions": 23,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -22,72 +22,83 @@\n #endif\n \n /** Clear a scalar to prevent the leak of sensitive data. */\n-static void secp256k1_scalar_clear(secp256k1_scalar_t *r);\n+static void secp256k1_scalar_clear(secp256k1_scalar *r);\n \n /** Access bits from a scalar. All requested bits must belong to the same 32-bit limb. */\n-static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar_t *a, unsigned int offset, unsigned int count);\n+static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar *a, unsigned int offset, unsigned int count);\n \n /** Access bits from a scalar. Not constant time. */\n-static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar_t *a, unsigned int offset, unsigned int count);\n+static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar *a, unsigned int offset, unsigned int count);\n \n /** Set a scalar from a big endian byte array. */\n-static void secp256k1_scalar_set_b32(secp256k1_scalar_t *r, const unsigned char *bin, int *overflow);\n+static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *bin, int *overflow);\n \n /** Set a scalar to an unsigned integer. */\n-static void secp256k1_scalar_set_int(secp256k1_scalar_t *r, unsigned int v);\n+static void secp256k1_scalar_set_int(secp256k1_scalar *r, unsigned int v);\n \n /** Convert a scalar to a byte array. */\n-static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar_t* a);\n+static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a);\n \n /** Add two scalars together (modulo the group order). Returns whether it overflowed. */\n-static int secp256k1_scalar_add(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b);\n+static int secp256k1_scalar_add(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b);\n \n-/** Add a power of two to a scalar. The result is not allowed to overflow. */\n-static void secp256k1_scalar_add_bit(secp256k1_scalar_t *r, unsigned int bit);\n+/** Conditionally add a power of two to a scalar. The result is not allowed to overflow. */\n+static void secp256k1_scalar_cadd_bit(secp256k1_scalar *r, unsigned int bit, int flag);\n \n /** Multiply two scalars (modulo the group order). */\n-static void secp256k1_scalar_mul(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b);\n+static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b);\n+\n+/** Shift a scalar right by some amount strictly between 0 and 16, returning\n+ *  the low bits that were shifted off */\n+static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n);\n \n /** Compute the square of a scalar (modulo the group order). */\n-static void secp256k1_scalar_sqr(secp256k1_scalar_t *r, const secp256k1_scalar_t *a);\n+static void secp256k1_scalar_sqr(secp256k1_scalar *r, const secp256k1_scalar *a);\n \n /** Compute the inverse of a scalar (modulo the group order). */\n-static void secp256k1_scalar_inverse(secp256k1_scalar_t *r, const secp256k1_scalar_t *a);\n+static void secp256k1_scalar_inverse(secp256k1_scalar *r, const secp256k1_scalar *a);\n \n /** Compute the inverse of a scalar (modulo the group order), without constant-time guarantee. */\n-static void secp256k1_scalar_inverse_var(secp256k1_scalar_t *r, const secp256k1_scalar_t *a);\n+static void secp256k1_scalar_inverse_var(secp256k1_scalar *r, const secp256k1_scalar *a);\n \n /** Compute the complement of a scalar (modulo the group order). */\n-static void secp256k1_scalar_negate(secp256k1_scalar_t *r, const secp256k1_scalar_t *a);\n+static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a);\n \n /** Check whether a scalar equals zero. */\n-static int secp256k1_scalar_is_zero(const secp256k1_scalar_t *a);\n+static int secp256k1_scalar_is_zero(const secp256k1_scalar *a);\n \n /** Check whether a scalar equals one. */\n-static int secp256k1_scalar_is_one(const secp256k1_scalar_t *a);\n+static int secp256k1_scalar_is_one(const secp256k1_scalar *a);\n+\n+/** Check whether a scalar, considered as an nonnegative integer, is even. */\n+static int secp256k1_scalar_is_even(const secp256k1_scalar *a);\n \n /** Check whether a scalar is higher than the group order divided by 2. */\n-static int secp256k1_scalar_is_high(const secp256k1_scalar_t *a);\n+static int secp256k1_scalar_is_high(const secp256k1_scalar *a);\n+\n+/** Conditionally negate a number, in constant time.\n+ * Returns -1 if the number was negated, 1 otherwise */\n+static int secp256k1_scalar_cond_negate(secp256k1_scalar *a, int flag);\n \n #ifndef USE_NUM_NONE\n /** Convert a scalar to a number. */\n-static void secp256k1_scalar_get_num(secp256k1_num_t *r, const secp256k1_scalar_t *a);\n+static void secp256k1_scalar_get_num(secp256k1_num *r, const secp256k1_scalar *a);\n \n /** Get the order of the group as a number. */\n-static void secp256k1_scalar_order_get_num(secp256k1_num_t *r);\n+static void secp256k1_scalar_order_get_num(secp256k1_num *r);\n #endif\n \n /** Compare two scalars. */\n-static int secp256k1_scalar_eq(const secp256k1_scalar_t *a, const secp256k1_scalar_t *b);\n+static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b);\n \n #ifdef USE_ENDOMORPHISM\n /** Find r1 and r2 such that r1+r2*2^128 = a. */\n-static void secp256k1_scalar_split_128(secp256k1_scalar_t *r1, secp256k1_scalar_t *r2, const secp256k1_scalar_t *a);\n+static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a);\n /** Find r1 and r2 such that r1+r2*lambda = a, and r1 and r2 are maximum 128 bits long (see secp256k1_gej_mul_lambda). */\n-static void secp256k1_scalar_split_lambda_var(secp256k1_scalar_t *r1, secp256k1_scalar_t *r2, const secp256k1_scalar_t *a);\n+static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a);\n #endif\n \n /** Multiply a and b (without taking the modulus!), divide by 2**shift, and round to the nearest integer. Shift must be at least 256. */\n-static void secp256k1_scalar_mul_shift_var(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b, unsigned int shift);\n+static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift);\n \n #endif"
      },
      {
        "sha": "cff406038fbee85395fe88332bdd4fdefab8b8e2",
        "filename": "src/secp256k1/src/scalar_4x64.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_4x64.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_4x64.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_4x64.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -12,7 +12,7 @@\n /** A scalar modulo the group order of the secp256k1 curve. */\n typedef struct {\n     uint64_t d[4];\n-} secp256k1_scalar_t;\n+} secp256k1_scalar;\n \n #define SECP256K1_SCALAR_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{((uint64_t)(d1)) << 32 | (d0), ((uint64_t)(d3)) << 32 | (d2), ((uint64_t)(d5)) << 32 | (d4), ((uint64_t)(d7)) << 32 | (d6)}}\n "
      },
      {
        "sha": "aa2703dd23e8c97f493f989bd2d2b2558f398a5f",
        "filename": "src/secp256k1/src/scalar_4x64_impl.h",
        "status": "modified",
        "additions": 55,
        "deletions": 26,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_4x64_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_4x64_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_4x64_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -24,26 +24,26 @@\n #define SECP256K1_N_H_2 ((uint64_t)0xFFFFFFFFFFFFFFFFULL)\n #define SECP256K1_N_H_3 ((uint64_t)0x7FFFFFFFFFFFFFFFULL)\n \n-SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar_t *r) {\n+SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar *r) {\n     r->d[0] = 0;\n     r->d[1] = 0;\n     r->d[2] = 0;\n     r->d[3] = 0;\n }\n \n-SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar_t *r, unsigned int v) {\n+SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar *r, unsigned int v) {\n     r->d[0] = v;\n     r->d[1] = 0;\n     r->d[2] = 0;\n     r->d[3] = 0;\n }\n \n-SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar_t *a, unsigned int offset, unsigned int count) {\n+SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {\n     VERIFY_CHECK((offset + count - 1) >> 6 == offset >> 6);\n     return (a->d[offset >> 6] >> (offset & 0x3F)) & ((((uint64_t)1) << count) - 1);\n }\n \n-SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar_t *a, unsigned int offset, unsigned int count) {\n+SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {\n     VERIFY_CHECK(count < 32);\n     VERIFY_CHECK(offset + count <= 256);\n     if ((offset + count - 1) >> 6 == offset >> 6) {\n@@ -54,7 +54,7 @@ SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256\n     }\n }\n \n-SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar_t *a) {\n+SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar *a) {\n     int yes = 0;\n     int no = 0;\n     no |= (a->d[3] < SECP256K1_N_3); /* No need for a > check. */\n@@ -66,7 +66,7 @@ SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scal\n     return yes;\n }\n \n-SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar_t *r, unsigned int overflow) {\n+SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar *r, unsigned int overflow) {\n     uint128_t t;\n     VERIFY_CHECK(overflow <= 1);\n     t = (uint128_t)r->d[0] + overflow * SECP256K1_N_C_0;\n@@ -80,7 +80,7 @@ SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar_t *r, unsig\n     return overflow;\n }\n \n-static int secp256k1_scalar_add(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b) {\n+static int secp256k1_scalar_add(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {\n     int overflow;\n     uint128_t t = (uint128_t)a->d[0] + b->d[0];\n     r->d[0] = t & 0xFFFFFFFFFFFFFFFFULL; t >>= 64;\n@@ -96,9 +96,10 @@ static int secp256k1_scalar_add(secp256k1_scalar_t *r, const secp256k1_scalar_t\n     return overflow;\n }\n \n-static void secp256k1_scalar_add_bit(secp256k1_scalar_t *r, unsigned int bit) {\n+static void secp256k1_scalar_cadd_bit(secp256k1_scalar *r, unsigned int bit, int flag) {\n     uint128_t t;\n     VERIFY_CHECK(bit < 256);\n+    bit += ((uint32_t) flag - 1) & 0x100;  /* forcing (bit >> 6) > 3 makes this a noop */\n     t = (uint128_t)r->d[0] + (((uint64_t)((bit >> 6) == 0)) << (bit & 0x3F));\n     r->d[0] = t & 0xFFFFFFFFFFFFFFFFULL; t >>= 64;\n     t += (uint128_t)r->d[1] + (((uint64_t)((bit >> 6) == 1)) << (bit & 0x3F));\n@@ -113,7 +114,7 @@ static void secp256k1_scalar_add_bit(secp256k1_scalar_t *r, unsigned int bit) {\n #endif\n }\n \n-static void secp256k1_scalar_set_b32(secp256k1_scalar_t *r, const unsigned char *b32, int *overflow) {\n+static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b32, int *overflow) {\n     int over;\n     r->d[0] = (uint64_t)b32[31] | (uint64_t)b32[30] << 8 | (uint64_t)b32[29] << 16 | (uint64_t)b32[28] << 24 | (uint64_t)b32[27] << 32 | (uint64_t)b32[26] << 40 | (uint64_t)b32[25] << 48 | (uint64_t)b32[24] << 56;\n     r->d[1] = (uint64_t)b32[23] | (uint64_t)b32[22] << 8 | (uint64_t)b32[21] << 16 | (uint64_t)b32[20] << 24 | (uint64_t)b32[19] << 32 | (uint64_t)b32[18] << 40 | (uint64_t)b32[17] << 48 | (uint64_t)b32[16] << 56;\n@@ -125,18 +126,18 @@ static void secp256k1_scalar_set_b32(secp256k1_scalar_t *r, const unsigned char\n     }\n }\n \n-static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar_t* a) {\n+static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {\n     bin[0] = a->d[3] >> 56; bin[1] = a->d[3] >> 48; bin[2] = a->d[3] >> 40; bin[3] = a->d[3] >> 32; bin[4] = a->d[3] >> 24; bin[5] = a->d[3] >> 16; bin[6] = a->d[3] >> 8; bin[7] = a->d[3];\n     bin[8] = a->d[2] >> 56; bin[9] = a->d[2] >> 48; bin[10] = a->d[2] >> 40; bin[11] = a->d[2] >> 32; bin[12] = a->d[2] >> 24; bin[13] = a->d[2] >> 16; bin[14] = a->d[2] >> 8; bin[15] = a->d[2];\n     bin[16] = a->d[1] >> 56; bin[17] = a->d[1] >> 48; bin[18] = a->d[1] >> 40; bin[19] = a->d[1] >> 32; bin[20] = a->d[1] >> 24; bin[21] = a->d[1] >> 16; bin[22] = a->d[1] >> 8; bin[23] = a->d[1];\n     bin[24] = a->d[0] >> 56; bin[25] = a->d[0] >> 48; bin[26] = a->d[0] >> 40; bin[27] = a->d[0] >> 32; bin[28] = a->d[0] >> 24; bin[29] = a->d[0] >> 16; bin[30] = a->d[0] >> 8; bin[31] = a->d[0];\n }\n \n-SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar_t *a) {\n+SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {\n     return (a->d[0] | a->d[1] | a->d[2] | a->d[3]) == 0;\n }\n \n-static void secp256k1_scalar_negate(secp256k1_scalar_t *r, const secp256k1_scalar_t *a) {\n+static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {\n     uint64_t nonzero = 0xFFFFFFFFFFFFFFFFULL * (secp256k1_scalar_is_zero(a) == 0);\n     uint128_t t = (uint128_t)(~a->d[0]) + SECP256K1_N_0 + 1;\n     r->d[0] = t & nonzero; t >>= 64;\n@@ -148,11 +149,11 @@ static void secp256k1_scalar_negate(secp256k1_scalar_t *r, const secp256k1_scala\n     r->d[3] = t & nonzero;\n }\n \n-SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar_t *a) {\n+SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {\n     return ((a->d[0] ^ 1) | a->d[1] | a->d[2] | a->d[3]) == 0;\n }\n \n-static int secp256k1_scalar_is_high(const secp256k1_scalar_t *a) {\n+static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {\n     int yes = 0;\n     int no = 0;\n     no |= (a->d[3] < SECP256K1_N_H_3);\n@@ -164,6 +165,22 @@ static int secp256k1_scalar_is_high(const secp256k1_scalar_t *a) {\n     return yes;\n }\n \n+static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {\n+    /* If we are flag = 0, mask = 00...00 and this is a no-op;\n+     * if we are flag = 1, mask = 11...11 and this is identical to secp256k1_scalar_negate */\n+    uint64_t mask = !flag - 1;\n+    uint64_t nonzero = (secp256k1_scalar_is_zero(r) != 0) - 1;\n+    uint128_t t = (uint128_t)(r->d[0] ^ mask) + ((SECP256K1_N_0 + 1) & mask);\n+    r->d[0] = t & nonzero; t >>= 64;\n+    t += (uint128_t)(r->d[1] ^ mask) + (SECP256K1_N_1 & mask);\n+    r->d[1] = t & nonzero; t >>= 64;\n+    t += (uint128_t)(r->d[2] ^ mask) + (SECP256K1_N_2 & mask);\n+    r->d[2] = t & nonzero; t >>= 64;\n+    t += (uint128_t)(r->d[3] ^ mask) + (SECP256K1_N_3 & mask);\n+    r->d[3] = t & nonzero;\n+    return 2 * (mask == 0) - 1;\n+}\n+\n /* Inspired by the macros in OpenSSL's crypto/bn/asm/x86_64-gcc.c. */\n \n /** Add a*b to the number defined by (c0,c1,c2). c2 must never overflow. */\n@@ -250,7 +267,7 @@ static int secp256k1_scalar_is_high(const secp256k1_scalar_t *a) {\n     VERIFY_CHECK(c2 == 0); \\\n }\n \n-static void secp256k1_scalar_reduce_512(secp256k1_scalar_t *r, const uint64_t *l) {\n+static void secp256k1_scalar_reduce_512(secp256k1_scalar *r, const uint64_t *l) {\n #ifdef USE_ASM_X86_64\n     /* Reduce 512 bits into 385. */\n     uint64_t m0, m1, m2, m3, m4, m5, m6;\n@@ -559,7 +576,7 @@ static void secp256k1_scalar_reduce_512(secp256k1_scalar_t *r, const uint64_t *l\n     secp256k1_scalar_reduce(r, c + secp256k1_scalar_check_overflow(r));\n }\n \n-static void secp256k1_scalar_mul_512(uint64_t l[8], const secp256k1_scalar_t *a, const secp256k1_scalar_t *b) {\n+static void secp256k1_scalar_mul_512(uint64_t l[8], const secp256k1_scalar *a, const secp256k1_scalar *b) {\n #ifdef USE_ASM_X86_64\n     const uint64_t *pb = b->d;\n     __asm__ __volatile__(\n@@ -721,12 +738,12 @@ static void secp256k1_scalar_mul_512(uint64_t l[8], const secp256k1_scalar_t *a,\n     extract(l[5]);\n     muladd_fast(a->d[3], b->d[3]);\n     extract_fast(l[6]);\n-    VERIFY_CHECK(c1 <= 0);\n+    VERIFY_CHECK(c1 == 0);\n     l[7] = c0;\n #endif\n }\n \n-static void secp256k1_scalar_sqr_512(uint64_t l[8], const secp256k1_scalar_t *a) {\n+static void secp256k1_scalar_sqr_512(uint64_t l[8], const secp256k1_scalar *a) {\n #ifdef USE_ASM_X86_64\n     __asm__ __volatile__(\n     /* Preload */\n@@ -871,19 +888,32 @@ static void secp256k1_scalar_sqr_512(uint64_t l[8], const secp256k1_scalar_t *a)\n #undef extract\n #undef extract_fast\n \n-static void secp256k1_scalar_mul(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b) {\n+static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {\n     uint64_t l[8];\n     secp256k1_scalar_mul_512(l, a, b);\n     secp256k1_scalar_reduce_512(r, l);\n }\n \n-static void secp256k1_scalar_sqr(secp256k1_scalar_t *r, const secp256k1_scalar_t *a) {\n+static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {\n+    int ret;\n+    VERIFY_CHECK(n > 0);\n+    VERIFY_CHECK(n < 16);\n+    ret = r->d[0] & ((1 << n) - 1);\n+    r->d[0] = (r->d[0] >> n) + (r->d[1] << (64 - n));\n+    r->d[1] = (r->d[1] >> n) + (r->d[2] << (64 - n));\n+    r->d[2] = (r->d[2] >> n) + (r->d[3] << (64 - n));\n+    r->d[3] = (r->d[3] >> n);\n+    return ret;\n+}\n+\n+static void secp256k1_scalar_sqr(secp256k1_scalar *r, const secp256k1_scalar *a) {\n     uint64_t l[8];\n     secp256k1_scalar_sqr_512(l, a);\n     secp256k1_scalar_reduce_512(r, l);\n }\n \n-static void secp256k1_scalar_split_128(secp256k1_scalar_t *r1, secp256k1_scalar_t *r2, const secp256k1_scalar_t *a) {\n+#ifdef USE_ENDOMORPHISM\n+static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {\n     r1->d[0] = a->d[0];\n     r1->d[1] = a->d[1];\n     r1->d[2] = 0;\n@@ -893,12 +923,13 @@ static void secp256k1_scalar_split_128(secp256k1_scalar_t *r1, secp256k1_scalar_\n     r2->d[2] = 0;\n     r2->d[3] = 0;\n }\n+#endif\n \n-SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar_t *a, const secp256k1_scalar_t *b) {\n+SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {\n     return ((a->d[0] ^ b->d[0]) | (a->d[1] ^ b->d[1]) | (a->d[2] ^ b->d[2]) | (a->d[3] ^ b->d[3])) == 0;\n }\n \n-SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b, unsigned int shift) {\n+SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift) {\n     uint64_t l[8];\n     unsigned int shiftlimbs;\n     unsigned int shiftlow;\n@@ -912,9 +943,7 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar_t *\n     r->d[1] = shift < 448 ? (l[1 + shiftlimbs] >> shiftlow | (shift < 384 && shiftlow ? (l[2 + shiftlimbs] << shifthigh) : 0)) : 0;\n     r->d[2] = shift < 384 ? (l[2 + shiftlimbs] >> shiftlow | (shift < 320 && shiftlow ? (l[3 + shiftlimbs] << shifthigh) : 0)) : 0;\n     r->d[3] = shift < 320 ? (l[3 + shiftlimbs] >> shiftlow) : 0;\n-    if ((l[(shift - 1) >> 6] >> ((shift - 1) & 0x3f)) & 1) {\n-        secp256k1_scalar_add_bit(r, 0);\n-    }\n+    secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 6] >> ((shift - 1) & 0x3f)) & 1);\n }\n \n #endif"
      },
      {
        "sha": "1319664f654994b79cf1d50e18eb1fcd8e0026f5",
        "filename": "src/secp256k1/src/scalar_8x32.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_8x32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_8x32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_8x32.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -12,7 +12,7 @@\n /** A scalar modulo the group order of the secp256k1 curve. */\n typedef struct {\n     uint32_t d[8];\n-} secp256k1_scalar_t;\n+} secp256k1_scalar;\n \n #define SECP256K1_SCALAR_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{(d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7)}}\n "
      },
      {
        "sha": "aae4f35c0856eb3bd0a1fd35d572a461bb0c7a35",
        "filename": "src/secp256k1/src/scalar_8x32_impl.h",
        "status": "modified",
        "additions": 65,
        "deletions": 25,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_8x32_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_8x32_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_8x32_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -34,7 +34,7 @@\n #define SECP256K1_N_H_6 ((uint32_t)0xFFFFFFFFUL)\n #define SECP256K1_N_H_7 ((uint32_t)0x7FFFFFFFUL)\n \n-SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar_t *r) {\n+SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar *r) {\n     r->d[0] = 0;\n     r->d[1] = 0;\n     r->d[2] = 0;\n@@ -45,7 +45,7 @@ SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar_t *r) {\n     r->d[7] = 0;\n }\n \n-SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar_t *r, unsigned int v) {\n+SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar *r, unsigned int v) {\n     r->d[0] = v;\n     r->d[1] = 0;\n     r->d[2] = 0;\n@@ -56,12 +56,12 @@ SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar_t *r, uns\n     r->d[7] = 0;\n }\n \n-SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar_t *a, unsigned int offset, unsigned int count) {\n+SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {\n     VERIFY_CHECK((offset + count - 1) >> 5 == offset >> 5);\n     return (a->d[offset >> 5] >> (offset & 0x1F)) & ((1 << count) - 1);\n }\n \n-SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar_t *a, unsigned int offset, unsigned int count) {\n+SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {\n     VERIFY_CHECK(count < 32);\n     VERIFY_CHECK(offset + count <= 256);\n     if ((offset + count - 1) >> 5 == offset >> 5) {\n@@ -72,7 +72,7 @@ SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256\n     }\n }\n \n-SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar_t *a) {\n+SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar *a) {\n     int yes = 0;\n     int no = 0;\n     no |= (a->d[7] < SECP256K1_N_7); /* No need for a > check. */\n@@ -90,7 +90,7 @@ SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scal\n     return yes;\n }\n \n-SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar_t *r, uint32_t overflow) {\n+SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar *r, uint32_t overflow) {\n     uint64_t t;\n     VERIFY_CHECK(overflow <= 1);\n     t = (uint64_t)r->d[0] + overflow * SECP256K1_N_C_0;\n@@ -112,7 +112,7 @@ SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar_t *r, uint3\n     return overflow;\n }\n \n-static int secp256k1_scalar_add(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b) {\n+static int secp256k1_scalar_add(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {\n     int overflow;\n     uint64_t t = (uint64_t)a->d[0] + b->d[0];\n     r->d[0] = t & 0xFFFFFFFFULL; t >>= 32;\n@@ -136,9 +136,10 @@ static int secp256k1_scalar_add(secp256k1_scalar_t *r, const secp256k1_scalar_t\n     return overflow;\n }\n \n-static void secp256k1_scalar_add_bit(secp256k1_scalar_t *r, unsigned int bit) {\n+static void secp256k1_scalar_cadd_bit(secp256k1_scalar *r, unsigned int bit, int flag) {\n     uint64_t t;\n     VERIFY_CHECK(bit < 256);\n+    bit += ((uint32_t) flag - 1) & 0x100;  /* forcing (bit >> 5) > 7 makes this a noop */\n     t = (uint64_t)r->d[0] + (((uint32_t)((bit >> 5) == 0)) << (bit & 0x1F));\n     r->d[0] = t & 0xFFFFFFFFULL; t >>= 32;\n     t += (uint64_t)r->d[1] + (((uint32_t)((bit >> 5) == 1)) << (bit & 0x1F));\n@@ -161,7 +162,7 @@ static void secp256k1_scalar_add_bit(secp256k1_scalar_t *r, unsigned int bit) {\n #endif\n }\n \n-static void secp256k1_scalar_set_b32(secp256k1_scalar_t *r, const unsigned char *b32, int *overflow) {\n+static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b32, int *overflow) {\n     int over;\n     r->d[0] = (uint32_t)b32[31] | (uint32_t)b32[30] << 8 | (uint32_t)b32[29] << 16 | (uint32_t)b32[28] << 24;\n     r->d[1] = (uint32_t)b32[27] | (uint32_t)b32[26] << 8 | (uint32_t)b32[25] << 16 | (uint32_t)b32[24] << 24;\n@@ -177,7 +178,7 @@ static void secp256k1_scalar_set_b32(secp256k1_scalar_t *r, const unsigned char\n     }\n }\n \n-static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar_t* a) {\n+static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {\n     bin[0] = a->d[7] >> 24; bin[1] = a->d[7] >> 16; bin[2] = a->d[7] >> 8; bin[3] = a->d[7];\n     bin[4] = a->d[6] >> 24; bin[5] = a->d[6] >> 16; bin[6] = a->d[6] >> 8; bin[7] = a->d[6];\n     bin[8] = a->d[5] >> 24; bin[9] = a->d[5] >> 16; bin[10] = a->d[5] >> 8; bin[11] = a->d[5];\n@@ -188,11 +189,11 @@ static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar_\n     bin[28] = a->d[0] >> 24; bin[29] = a->d[0] >> 16; bin[30] = a->d[0] >> 8; bin[31] = a->d[0];\n }\n \n-SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar_t *a) {\n+SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {\n     return (a->d[0] | a->d[1] | a->d[2] | a->d[3] | a->d[4] | a->d[5] | a->d[6] | a->d[7]) == 0;\n }\n \n-static void secp256k1_scalar_negate(secp256k1_scalar_t *r, const secp256k1_scalar_t *a) {\n+static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {\n     uint32_t nonzero = 0xFFFFFFFFUL * (secp256k1_scalar_is_zero(a) == 0);\n     uint64_t t = (uint64_t)(~a->d[0]) + SECP256K1_N_0 + 1;\n     r->d[0] = t & nonzero; t >>= 32;\n@@ -212,11 +213,11 @@ static void secp256k1_scalar_negate(secp256k1_scalar_t *r, const secp256k1_scala\n     r->d[7] = t & nonzero;\n }\n \n-SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar_t *a) {\n+SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {\n     return ((a->d[0] ^ 1) | a->d[1] | a->d[2] | a->d[3] | a->d[4] | a->d[5] | a->d[6] | a->d[7]) == 0;\n }\n \n-static int secp256k1_scalar_is_high(const secp256k1_scalar_t *a) {\n+static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {\n     int yes = 0;\n     int no = 0;\n     no |= (a->d[7] < SECP256K1_N_H_7);\n@@ -234,6 +235,31 @@ static int secp256k1_scalar_is_high(const secp256k1_scalar_t *a) {\n     return yes;\n }\n \n+static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {\n+    /* If we are flag = 0, mask = 00...00 and this is a no-op;\n+     * if we are flag = 1, mask = 11...11 and this is identical to secp256k1_scalar_negate */\n+    uint32_t mask = !flag - 1;\n+    uint32_t nonzero = 0xFFFFFFFFUL * (secp256k1_scalar_is_zero(r) == 0);\n+    uint64_t t = (uint64_t)(r->d[0] ^ mask) + ((SECP256K1_N_0 + 1) & mask);\n+    r->d[0] = t & nonzero; t >>= 32;\n+    t += (uint64_t)(r->d[1] ^ mask) + (SECP256K1_N_1 & mask);\n+    r->d[1] = t & nonzero; t >>= 32;\n+    t += (uint64_t)(r->d[2] ^ mask) + (SECP256K1_N_2 & mask);\n+    r->d[2] = t & nonzero; t >>= 32;\n+    t += (uint64_t)(r->d[3] ^ mask) + (SECP256K1_N_3 & mask);\n+    r->d[3] = t & nonzero; t >>= 32;\n+    t += (uint64_t)(r->d[4] ^ mask) + (SECP256K1_N_4 & mask);\n+    r->d[4] = t & nonzero; t >>= 32;\n+    t += (uint64_t)(r->d[5] ^ mask) + (SECP256K1_N_5 & mask);\n+    r->d[5] = t & nonzero; t >>= 32;\n+    t += (uint64_t)(r->d[6] ^ mask) + (SECP256K1_N_6 & mask);\n+    r->d[6] = t & nonzero; t >>= 32;\n+    t += (uint64_t)(r->d[7] ^ mask) + (SECP256K1_N_7 & mask);\n+    r->d[7] = t & nonzero;\n+    return 2 * (mask == 0) - 1;\n+}\n+\n+\n /* Inspired by the macros in OpenSSL's crypto/bn/asm/x86_64-gcc.c. */\n \n /** Add a*b to the number defined by (c0,c1,c2). c2 must never overflow. */\n@@ -320,7 +346,7 @@ static int secp256k1_scalar_is_high(const secp256k1_scalar_t *a) {\n     VERIFY_CHECK(c2 == 0); \\\n }\n \n-static void secp256k1_scalar_reduce_512(secp256k1_scalar_t *r, const uint32_t *l) {\n+static void secp256k1_scalar_reduce_512(secp256k1_scalar *r, const uint32_t *l) {\n     uint64_t c;\n     uint32_t n0 = l[8], n1 = l[9], n2 = l[10], n3 = l[11], n4 = l[12], n5 = l[13], n6 = l[14], n7 = l[15];\n     uint32_t m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12;\n@@ -462,7 +488,7 @@ static void secp256k1_scalar_reduce_512(secp256k1_scalar_t *r, const uint32_t *l\n     secp256k1_scalar_reduce(r, c + secp256k1_scalar_check_overflow(r));\n }\n \n-static void secp256k1_scalar_mul_512(uint32_t *l, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b) {\n+static void secp256k1_scalar_mul_512(uint32_t *l, const secp256k1_scalar *a, const secp256k1_scalar *b) {\n     /* 96 bit accumulator. */\n     uint32_t c0 = 0, c1 = 0, c2 = 0;\n \n@@ -550,7 +576,7 @@ static void secp256k1_scalar_mul_512(uint32_t *l, const secp256k1_scalar_t *a, c\n     l[15] = c0;\n }\n \n-static void secp256k1_scalar_sqr_512(uint32_t *l, const secp256k1_scalar_t *a) {\n+static void secp256k1_scalar_sqr_512(uint32_t *l, const secp256k1_scalar *a) {\n     /* 96 bit accumulator. */\n     uint32_t c0 = 0, c1 = 0, c2 = 0;\n \n@@ -618,20 +644,36 @@ static void secp256k1_scalar_sqr_512(uint32_t *l, const secp256k1_scalar_t *a) {\n #undef extract\n #undef extract_fast\n \n-static void secp256k1_scalar_mul(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b) {\n+static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {\n     uint32_t l[16];\n     secp256k1_scalar_mul_512(l, a, b);\n     secp256k1_scalar_reduce_512(r, l);\n }\n \n-static void secp256k1_scalar_sqr(secp256k1_scalar_t *r, const secp256k1_scalar_t *a) {\n+static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {\n+    int ret;\n+    VERIFY_CHECK(n > 0);\n+    VERIFY_CHECK(n < 16);\n+    ret = r->d[0] & ((1 << n) - 1);\n+    r->d[0] = (r->d[0] >> n) + (r->d[1] << (32 - n));\n+    r->d[1] = (r->d[1] >> n) + (r->d[2] << (32 - n));\n+    r->d[2] = (r->d[2] >> n) + (r->d[3] << (32 - n));\n+    r->d[3] = (r->d[3] >> n) + (r->d[4] << (32 - n));\n+    r->d[4] = (r->d[4] >> n) + (r->d[5] << (32 - n));\n+    r->d[5] = (r->d[5] >> n) + (r->d[6] << (32 - n));\n+    r->d[6] = (r->d[6] >> n) + (r->d[7] << (32 - n));\n+    r->d[7] = (r->d[7] >> n);\n+    return ret;\n+}\n+\n+static void secp256k1_scalar_sqr(secp256k1_scalar *r, const secp256k1_scalar *a) {\n     uint32_t l[16];\n     secp256k1_scalar_sqr_512(l, a);\n     secp256k1_scalar_reduce_512(r, l);\n }\n \n #ifdef USE_ENDOMORPHISM\n-static void secp256k1_scalar_split_128(secp256k1_scalar_t *r1, secp256k1_scalar_t *r2, const secp256k1_scalar_t *a) {\n+static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {\n     r1->d[0] = a->d[0];\n     r1->d[1] = a->d[1];\n     r1->d[2] = a->d[2];\n@@ -651,11 +693,11 @@ static void secp256k1_scalar_split_128(secp256k1_scalar_t *r1, secp256k1_scalar_\n }\n #endif\n \n-SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar_t *a, const secp256k1_scalar_t *b) {\n+SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {\n     return ((a->d[0] ^ b->d[0]) | (a->d[1] ^ b->d[1]) | (a->d[2] ^ b->d[2]) | (a->d[3] ^ b->d[3]) | (a->d[4] ^ b->d[4]) | (a->d[5] ^ b->d[5]) | (a->d[6] ^ b->d[6]) | (a->d[7] ^ b->d[7])) == 0;\n }\n \n-SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar_t *r, const secp256k1_scalar_t *a, const secp256k1_scalar_t *b, unsigned int shift) {\n+SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift) {\n     uint32_t l[16];\n     unsigned int shiftlimbs;\n     unsigned int shiftlow;\n@@ -673,9 +715,7 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar_t *\n     r->d[5] = shift < 352 ? (l[5 + shiftlimbs] >> shiftlow | (shift < 320 && shiftlow ? (l[6 + shiftlimbs] << shifthigh) : 0)) : 0;\n     r->d[6] = shift < 320 ? (l[6 + shiftlimbs] >> shiftlow | (shift < 288 && shiftlow ? (l[7 + shiftlimbs] << shifthigh) : 0)) : 0;\n     r->d[7] = shift < 288 ? (l[7 + shiftlimbs] >> shiftlow)  : 0;\n-    if ((l[(shift - 1) >> 5] >> ((shift - 1) & 0x1f)) & 1) {\n-        secp256k1_scalar_add_bit(r, 0);\n-    }\n+    secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 5] >> ((shift - 1) & 0x1f)) & 1);\n }\n \n #endif"
      },
      {
        "sha": "88ea97de863e9b7528b3c66e96743703c3006fe5",
        "filename": "src/secp256k1/src/scalar_impl.h",
        "status": "modified",
        "additions": 25,
        "deletions": 15,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/scalar_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -25,14 +25,14 @@\n #endif\n \n #ifndef USE_NUM_NONE\n-static void secp256k1_scalar_get_num(secp256k1_num_t *r, const secp256k1_scalar_t *a) {\n+static void secp256k1_scalar_get_num(secp256k1_num *r, const secp256k1_scalar *a) {\n     unsigned char c[32];\n     secp256k1_scalar_get_b32(c, a);\n     secp256k1_num_set_bin(r, c, 32);\n }\n \n /** secp256k1 curve order, see secp256k1_ecdsa_const_order_as_fe in ecdsa_impl.h */\n-static void secp256k1_scalar_order_get_num(secp256k1_num_t *r) {\n+static void secp256k1_scalar_order_get_num(secp256k1_num *r) {\n     static const unsigned char order[32] = {\n         0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n         0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,\n@@ -43,11 +43,11 @@ static void secp256k1_scalar_order_get_num(secp256k1_num_t *r) {\n }\n #endif\n \n-static void secp256k1_scalar_inverse(secp256k1_scalar_t *r, const secp256k1_scalar_t *x) {\n-    secp256k1_scalar_t *t;\n+static void secp256k1_scalar_inverse(secp256k1_scalar *r, const secp256k1_scalar *x) {\n+    secp256k1_scalar *t;\n     int i;\n     /* First compute x ^ (2^N - 1) for some values of N. */\n-    secp256k1_scalar_t x2, x3, x4, x6, x7, x8, x15, x30, x60, x120, x127;\n+    secp256k1_scalar x2, x3, x4, x6, x7, x8, x15, x30, x60, x120, x127;\n \n     secp256k1_scalar_sqr(&x2,  x);\n     secp256k1_scalar_mul(&x2, &x2,  x);\n@@ -234,18 +234,27 @@ static void secp256k1_scalar_inverse(secp256k1_scalar_t *r, const secp256k1_scal\n     secp256k1_scalar_mul(r, t, &x6); /* 111111 */\n }\n \n-static void secp256k1_scalar_inverse_var(secp256k1_scalar_t *r, const secp256k1_scalar_t *x) {\n+SECP256K1_INLINE static int secp256k1_scalar_is_even(const secp256k1_scalar *a) {\n+    /* d[0] is present and is the lowest word for all representations */\n+    return !(a->d[0] & 1);\n+}\n+\n+static void secp256k1_scalar_inverse_var(secp256k1_scalar *r, const secp256k1_scalar *x) {\n #if defined(USE_SCALAR_INV_BUILTIN)\n     secp256k1_scalar_inverse(r, x);\n #elif defined(USE_SCALAR_INV_NUM)\n     unsigned char b[32];\n-    secp256k1_num_t n, m;\n-    secp256k1_scalar_get_b32(b, x);\n+    secp256k1_num n, m;\n+    secp256k1_scalar t = *x;\n+    secp256k1_scalar_get_b32(b, &t);\n     secp256k1_num_set_bin(&n, b, 32);\n     secp256k1_scalar_order_get_num(&m);\n     secp256k1_num_mod_inverse(&n, &n, &m);\n     secp256k1_num_get_bin(b, 32, &n);\n     secp256k1_scalar_set_b32(r, b, NULL);\n+    /* Verify that the inverse was computed correctly, without GMP code. */\n+    secp256k1_scalar_mul(&t, &t, r);\n+    CHECK(secp256k1_scalar_is_one(&t));\n #else\n #error \"Please select scalar inverse implementation\"\n #endif\n@@ -290,30 +299,31 @@ static void secp256k1_scalar_inverse_var(secp256k1_scalar_t *r, const secp256k1_\n  * The function below splits a in r1 and r2, such that r1 + lambda * r2 == a (mod order).\n  */\n \n-static void secp256k1_scalar_split_lambda_var(secp256k1_scalar_t *r1, secp256k1_scalar_t *r2, const secp256k1_scalar_t *a) {\n-    secp256k1_scalar_t c1, c2;\n-    static const secp256k1_scalar_t minus_lambda = SECP256K1_SCALAR_CONST(\n+static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {\n+    secp256k1_scalar c1, c2;\n+    static const secp256k1_scalar minus_lambda = SECP256K1_SCALAR_CONST(\n         0xAC9C52B3UL, 0x3FA3CF1FUL, 0x5AD9E3FDUL, 0x77ED9BA4UL,\n         0xA880B9FCUL, 0x8EC739C2UL, 0xE0CFC810UL, 0xB51283CFUL\n     );\n-    static const secp256k1_scalar_t minus_b1 = SECP256K1_SCALAR_CONST(\n+    static const secp256k1_scalar minus_b1 = SECP256K1_SCALAR_CONST(\n         0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n         0xE4437ED6UL, 0x010E8828UL, 0x6F547FA9UL, 0x0ABFE4C3UL\n     );\n-    static const secp256k1_scalar_t minus_b2 = SECP256K1_SCALAR_CONST(\n+    static const secp256k1_scalar minus_b2 = SECP256K1_SCALAR_CONST(\n         0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFFUL, 0xFFFFFFFEUL,\n         0x8A280AC5UL, 0x0774346DUL, 0xD765CDA8UL, 0x3DB1562CUL\n     );\n-    static const secp256k1_scalar_t g1 = SECP256K1_SCALAR_CONST(\n+    static const secp256k1_scalar g1 = SECP256K1_SCALAR_CONST(\n         0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00003086UL,\n         0xD221A7D4UL, 0x6BCDE86CUL, 0x90E49284UL, 0xEB153DABUL\n     );\n-    static const secp256k1_scalar_t g2 = SECP256K1_SCALAR_CONST(\n+    static const secp256k1_scalar g2 = SECP256K1_SCALAR_CONST(\n         0x00000000UL, 0x00000000UL, 0x00000000UL, 0x0000E443UL,\n         0x7ED6010EUL, 0x88286F54UL, 0x7FA90ABFUL, 0xE4C42212UL\n     );\n     VERIFY_CHECK(r1 != a);\n     VERIFY_CHECK(r2 != a);\n+    /* these _var calls are constant time since the shift amount is constant */\n     secp256k1_scalar_mul_shift_var(&c1, a, &g1, 272);\n     secp256k1_scalar_mul_shift_var(&c2, a, &g2, 272);\n     secp256k1_scalar_mul(&c1, &c1, &minus_b1);"
      },
      {
        "sha": "62d192baeb388d7254b0196d20e087a4155476a2",
        "filename": "src/secp256k1/src/secp256k1.c",
        "status": "modified",
        "additions": 402,
        "deletions": 253,
        "changes": 655,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/secp256k1.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/secp256k1.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/secp256k1.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -14,290 +14,436 @@\n #include \"scalar_impl.h\"\n #include \"group_impl.h\"\n #include \"ecmult_impl.h\"\n+#include \"ecmult_const_impl.h\"\n #include \"ecmult_gen_impl.h\"\n #include \"ecdsa_impl.h\"\n #include \"eckey_impl.h\"\n #include \"hash_impl.h\"\n \n+#define ARG_CHECK(cond) do { \\\n+    if (EXPECT(!(cond), 0)) { \\\n+        secp256k1_callback_call(&ctx->illegal_callback, #cond); \\\n+        return 0; \\\n+    } \\\n+} while(0)\n+\n+static void default_illegal_callback_fn(const char* str, void* data) {\n+    (void)data;\n+    fprintf(stderr, \"[libsecp256k1] illegal argument: %s\\n\", str);\n+    abort();\n+}\n+\n+static const secp256k1_callback default_illegal_callback = {\n+    default_illegal_callback_fn,\n+    NULL\n+};\n+\n+static void default_error_callback_fn(const char* str, void* data) {\n+    (void)data;\n+    fprintf(stderr, \"[libsecp256k1] internal consistency check failed: %s\\n\", str);\n+    abort();\n+}\n+\n+static const secp256k1_callback default_error_callback = {\n+    default_error_callback_fn,\n+    NULL\n+};\n+\n+\n struct secp256k1_context_struct {\n-    secp256k1_ecmult_context_t ecmult_ctx;\n-    secp256k1_ecmult_gen_context_t ecmult_gen_ctx;\n+    secp256k1_ecmult_context ecmult_ctx;\n+    secp256k1_ecmult_gen_context ecmult_gen_ctx;\n+    secp256k1_callback illegal_callback;\n+    secp256k1_callback error_callback;\n };\n \n-secp256k1_context_t* secp256k1_context_create(int flags) {\n-    secp256k1_context_t* ret = (secp256k1_context_t*)checked_malloc(sizeof(secp256k1_context_t));\n+secp256k1_context* secp256k1_context_create(unsigned int flags) {\n+    secp256k1_context* ret = (secp256k1_context*)checked_malloc(&default_error_callback, sizeof(secp256k1_context));\n+    ret->illegal_callback = default_illegal_callback;\n+    ret->error_callback = default_error_callback;\n+\n+    if (EXPECT((flags & SECP256K1_FLAGS_TYPE_MASK) != SECP256K1_FLAGS_TYPE_CONTEXT, 0)) {\n+            secp256k1_callback_call(&ret->illegal_callback,\n+                                    \"Invalid flags\");\n+            free(ret);\n+            return NULL;\n+    }\n \n     secp256k1_ecmult_context_init(&ret->ecmult_ctx);\n     secp256k1_ecmult_gen_context_init(&ret->ecmult_gen_ctx);\n \n-    if (flags & SECP256K1_CONTEXT_SIGN) {\n-        secp256k1_ecmult_gen_context_build(&ret->ecmult_gen_ctx);\n+    if (flags & SECP256K1_FLAGS_BIT_CONTEXT_SIGN) {\n+        secp256k1_ecmult_gen_context_build(&ret->ecmult_gen_ctx, &ret->error_callback);\n     }\n-    if (flags & SECP256K1_CONTEXT_VERIFY) {\n-        secp256k1_ecmult_context_build(&ret->ecmult_ctx);\n+    if (flags & SECP256K1_FLAGS_BIT_CONTEXT_VERIFY) {\n+        secp256k1_ecmult_context_build(&ret->ecmult_ctx, &ret->error_callback);\n     }\n \n     return ret;\n }\n \n-secp256k1_context_t* secp256k1_context_clone(const secp256k1_context_t* ctx) {\n-    secp256k1_context_t* ret = (secp256k1_context_t*)checked_malloc(sizeof(secp256k1_context_t));\n-    secp256k1_ecmult_context_clone(&ret->ecmult_ctx, &ctx->ecmult_ctx);\n-    secp256k1_ecmult_gen_context_clone(&ret->ecmult_gen_ctx, &ctx->ecmult_gen_ctx);\n+secp256k1_context* secp256k1_context_clone(const secp256k1_context* ctx) {\n+    secp256k1_context* ret = (secp256k1_context*)checked_malloc(&ctx->error_callback, sizeof(secp256k1_context));\n+    ret->illegal_callback = ctx->illegal_callback;\n+    ret->error_callback = ctx->error_callback;\n+    secp256k1_ecmult_context_clone(&ret->ecmult_ctx, &ctx->ecmult_ctx, &ctx->error_callback);\n+    secp256k1_ecmult_gen_context_clone(&ret->ecmult_gen_ctx, &ctx->ecmult_gen_ctx, &ctx->error_callback);\n     return ret;\n }\n \n-void secp256k1_context_destroy(secp256k1_context_t* ctx) {\n-    secp256k1_ecmult_context_clear(&ctx->ecmult_ctx);\n-    secp256k1_ecmult_gen_context_clear(&ctx->ecmult_gen_ctx);\n+void secp256k1_context_destroy(secp256k1_context* ctx) {\n+    if (ctx != NULL) {\n+        secp256k1_ecmult_context_clear(&ctx->ecmult_ctx);\n+        secp256k1_ecmult_gen_context_clear(&ctx->ecmult_gen_ctx);\n \n-    free(ctx);\n+        free(ctx);\n+    }\n }\n \n-int secp256k1_ecdsa_verify(const secp256k1_context_t* ctx, const unsigned char *msg32, const unsigned char *sig, int siglen, const unsigned char *pubkey, int pubkeylen) {\n-    secp256k1_ge_t q;\n-    secp256k1_ecdsa_sig_t s;\n-    secp256k1_scalar_t m;\n-    int ret = -3;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n-    DEBUG_CHECK(msg32 != NULL);\n-    DEBUG_CHECK(sig != NULL);\n-    DEBUG_CHECK(pubkey != NULL);\n+void secp256k1_context_set_illegal_callback(secp256k1_context* ctx, void (*fun)(const char* message, void* data), const void* data) {\n+    if (fun == NULL) {\n+        fun = default_illegal_callback_fn;\n+    }\n+    ctx->illegal_callback.fn = fun;\n+    ctx->illegal_callback.data = data;\n+}\n \n-    secp256k1_scalar_set_b32(&m, msg32, NULL);\n+void secp256k1_context_set_error_callback(secp256k1_context* ctx, void (*fun)(const char* message, void* data), const void* data) {\n+    if (fun == NULL) {\n+        fun = default_error_callback_fn;\n+    }\n+    ctx->error_callback.fn = fun;\n+    ctx->error_callback.data = data;\n+}\n \n-    if (secp256k1_eckey_pubkey_parse(&q, pubkey, pubkeylen)) {\n-        if (secp256k1_ecdsa_sig_parse(&s, sig, siglen)) {\n-            if (secp256k1_ecdsa_sig_verify(&ctx->ecmult_ctx, &s, &q, &m)) {\n-                /* success is 1, all other values are fail */\n-                ret = 1;\n-            } else {\n-                ret = 0;\n-            }\n-        } else {\n-            ret = -2;\n-        }\n+static int secp256k1_pubkey_load(const secp256k1_context* ctx, secp256k1_ge* ge, const secp256k1_pubkey* pubkey) {\n+    if (sizeof(secp256k1_ge_storage) == 64) {\n+        /* When the secp256k1_ge_storage type is exactly 64 byte, use its\n+         * representation inside secp256k1_pubkey, as conversion is very fast.\n+         * Note that secp256k1_pubkey_save must use the same representation. */\n+        secp256k1_ge_storage s;\n+        memcpy(&s, &pubkey->data[0], 64);\n+        secp256k1_ge_from_storage(ge, &s);\n+    } else {\n+        /* Otherwise, fall back to 32-byte big endian for X and Y. */\n+        secp256k1_fe x, y;\n+        secp256k1_fe_set_b32(&x, pubkey->data);\n+        secp256k1_fe_set_b32(&y, pubkey->data + 32);\n+        secp256k1_ge_set_xy(ge, &x, &y);\n+    }\n+    ARG_CHECK(!secp256k1_fe_is_zero(&ge->x));\n+    return 1;\n+}\n+\n+static void secp256k1_pubkey_save(secp256k1_pubkey* pubkey, secp256k1_ge* ge) {\n+    if (sizeof(secp256k1_ge_storage) == 64) {\n+        secp256k1_ge_storage s;\n+        secp256k1_ge_to_storage(&s, ge);\n+        memcpy(&pubkey->data[0], &s, 64);\n     } else {\n-        ret = -1;\n+        VERIFY_CHECK(!secp256k1_ge_is_infinity(ge));\n+        secp256k1_fe_normalize_var(&ge->x);\n+        secp256k1_fe_normalize_var(&ge->y);\n+        secp256k1_fe_get_b32(pubkey->data, &ge->x);\n+        secp256k1_fe_get_b32(pubkey->data + 32, &ge->y);\n     }\n+}\n+\n+int secp256k1_ec_pubkey_parse(const secp256k1_context* ctx, secp256k1_pubkey* pubkey, const unsigned char *input, size_t inputlen) {\n+    secp256k1_ge Q;\n+\n+    (void)ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    memset(pubkey, 0, sizeof(*pubkey));\n+    ARG_CHECK(input != NULL);\n+    if (!secp256k1_eckey_pubkey_parse(&Q, input, inputlen)) {\n+        return 0;\n+    }\n+    secp256k1_pubkey_save(pubkey, &Q);\n+    secp256k1_ge_clear(&Q);\n+    return 1;\n+}\n+\n+int secp256k1_ec_pubkey_serialize(const secp256k1_context* ctx, unsigned char *output, size_t *outputlen, const secp256k1_pubkey* pubkey, unsigned int flags) {\n+    secp256k1_ge Q;\n+    size_t len;\n+    int ret = 0;\n \n+    (void)ctx;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(outputlen != NULL);\n+    ARG_CHECK(*outputlen >= ((flags & SECP256K1_FLAGS_BIT_COMPRESSION) ? 33 : 65));\n+    len = *outputlen;\n+    *outputlen = 0;\n+    ARG_CHECK(output != NULL);\n+    memset(output, 0, len);\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK((flags & SECP256K1_FLAGS_TYPE_MASK) == SECP256K1_FLAGS_TYPE_COMPRESSION);\n+    if (secp256k1_pubkey_load(ctx, &Q, pubkey)) {\n+        ret = secp256k1_eckey_pubkey_serialize(&Q, output, &len, flags & SECP256K1_FLAGS_BIT_COMPRESSION);\n+        if (ret) {\n+            *outputlen = len;\n+        }\n+    }\n     return ret;\n }\n \n-static int nonce_function_rfc6979(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, unsigned int counter, const void *data) {\n-   secp256k1_rfc6979_hmac_sha256_t rng;\n-   unsigned int i;\n-   secp256k1_rfc6979_hmac_sha256_initialize(&rng, key32, 32, msg32, 32, (const unsigned char*)data, data != NULL ? 32 : 0);\n-   for (i = 0; i <= counter; i++) {\n-       secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n-   }\n-   secp256k1_rfc6979_hmac_sha256_finalize(&rng);\n-   return 1;\n+static void secp256k1_ecdsa_signature_load(const secp256k1_context* ctx, secp256k1_scalar* r, secp256k1_scalar* s, const secp256k1_ecdsa_signature* sig) {\n+    (void)ctx;\n+    if (sizeof(secp256k1_scalar) == 32) {\n+        /* When the secp256k1_scalar type is exactly 32 byte, use its\n+         * representation inside secp256k1_ecdsa_signature, as conversion is very fast.\n+         * Note that secp256k1_ecdsa_signature_save must use the same representation. */\n+        memcpy(r, &sig->data[0], 32);\n+        memcpy(s, &sig->data[32], 32);\n+    } else {\n+        secp256k1_scalar_set_b32(r, &sig->data[0], NULL);\n+        secp256k1_scalar_set_b32(s, &sig->data[32], NULL);\n+    }\n }\n \n-const secp256k1_nonce_function_t secp256k1_nonce_function_rfc6979 = nonce_function_rfc6979;\n-const secp256k1_nonce_function_t secp256k1_nonce_function_default = nonce_function_rfc6979;\n+static void secp256k1_ecdsa_signature_save(secp256k1_ecdsa_signature* sig, const secp256k1_scalar* r, const secp256k1_scalar* s) {\n+    if (sizeof(secp256k1_scalar) == 32) {\n+        memcpy(&sig->data[0], r, 32);\n+        memcpy(&sig->data[32], s, 32);\n+    } else {\n+        secp256k1_scalar_get_b32(&sig->data[0], r);\n+        secp256k1_scalar_get_b32(&sig->data[32], s);\n+    }\n+}\n \n-int secp256k1_ecdsa_sign(const secp256k1_context_t* ctx, const unsigned char *msg32, unsigned char *signature, int *signaturelen, const unsigned char *seckey, secp256k1_nonce_function_t noncefp, const void* noncedata) {\n-    secp256k1_ecdsa_sig_t sig;\n-    secp256k1_scalar_t sec, non, msg;\n-    int ret = 0;\n+int secp256k1_ecdsa_signature_parse_der(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {\n+    secp256k1_scalar r, s;\n+\n+    (void)ctx;\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(input != NULL);\n+\n+    if (secp256k1_ecdsa_sig_parse(&r, &s, input, inputlen)) {\n+        secp256k1_ecdsa_signature_save(sig, &r, &s);\n+        return 1;\n+    } else {\n+        memset(sig, 0, sizeof(*sig));\n+        return 0;\n+    }\n+}\n+\n+int secp256k1_ecdsa_signature_parse_compact(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input64) {\n+    secp256k1_scalar r, s;\n+    int ret = 1;\n     int overflow = 0;\n-    unsigned int count = 0;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n-    DEBUG_CHECK(msg32 != NULL);\n-    DEBUG_CHECK(signature != NULL);\n-    DEBUG_CHECK(signaturelen != NULL);\n-    DEBUG_CHECK(seckey != NULL);\n-    if (noncefp == NULL) {\n-        noncefp = secp256k1_nonce_function_default;\n+\n+    (void)ctx;\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(input64 != NULL);\n+\n+    secp256k1_scalar_set_b32(&r, &input64[0], &overflow);\n+    ret &= !overflow;\n+    secp256k1_scalar_set_b32(&s, &input64[32], &overflow);\n+    ret &= !overflow;\n+    if (ret) {\n+        secp256k1_ecdsa_signature_save(sig, &r, &s);\n+    } else {\n+        memset(sig, 0, sizeof(*sig));\n     }\n+    return ret;\n+}\n \n-    secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n-    /* Fail if the secret key is invalid. */\n-    if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n-        secp256k1_scalar_set_b32(&msg, msg32, NULL);\n-        while (1) {\n-            unsigned char nonce32[32];\n-            ret = noncefp(nonce32, msg32, seckey, count, noncedata);\n-            if (!ret) {\n-                break;\n-            }\n-            secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n-            memset(nonce32, 0, 32);\n-            if (!secp256k1_scalar_is_zero(&non) && !overflow) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &sig, &sec, &msg, &non, NULL)) {\n-                    break;\n-                }\n-            }\n-            count++;\n-        }\n+int secp256k1_ecdsa_signature_serialize_der(const secp256k1_context* ctx, unsigned char *output, size_t *outputlen, const secp256k1_ecdsa_signature* sig) {\n+    secp256k1_scalar r, s;\n+\n+    (void)ctx;\n+    ARG_CHECK(output != NULL);\n+    ARG_CHECK(outputlen != NULL);\n+    ARG_CHECK(sig != NULL);\n+\n+    secp256k1_ecdsa_signature_load(ctx, &r, &s, sig);\n+    return secp256k1_ecdsa_sig_serialize(output, outputlen, &r, &s);\n+}\n+\n+int secp256k1_ecdsa_signature_serialize_compact(const secp256k1_context* ctx, unsigned char *output64, const secp256k1_ecdsa_signature* sig) {\n+    secp256k1_scalar r, s;\n+\n+    (void)ctx;\n+    ARG_CHECK(output64 != NULL);\n+    ARG_CHECK(sig != NULL);\n+\n+    secp256k1_ecdsa_signature_load(ctx, &r, &s, sig);\n+    secp256k1_scalar_get_b32(&output64[0], &r);\n+    secp256k1_scalar_get_b32(&output64[32], &s);\n+    return 1;\n+}\n+\n+int secp256k1_ecdsa_signature_normalize(const secp256k1_context* ctx, secp256k1_ecdsa_signature *sigout, const secp256k1_ecdsa_signature *sigin) {\n+    secp256k1_scalar r, s;\n+    int ret = 0;\n+\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(sigin != NULL);\n+\n+    secp256k1_ecdsa_signature_load(ctx, &r, &s, sigin);\n+    ret = secp256k1_scalar_is_high(&s);\n+    if (sigout != NULL) {\n         if (ret) {\n-            ret = secp256k1_ecdsa_sig_serialize(signature, signaturelen, &sig);\n+            secp256k1_scalar_negate(&s, &s);\n         }\n-        secp256k1_scalar_clear(&msg);\n-        secp256k1_scalar_clear(&non);\n-        secp256k1_scalar_clear(&sec);\n-    }\n-    if (!ret) {\n-        *signaturelen = 0;\n+        secp256k1_ecdsa_signature_save(sigout, &r, &s);\n     }\n+\n     return ret;\n }\n \n-int secp256k1_ecdsa_sign_compact(const secp256k1_context_t* ctx, const unsigned char *msg32, unsigned char *sig64, const unsigned char *seckey, secp256k1_nonce_function_t noncefp, const void* noncedata, int *recid) {\n-    secp256k1_ecdsa_sig_t sig;\n-    secp256k1_scalar_t sec, non, msg;\n+int secp256k1_ecdsa_verify(const secp256k1_context* ctx, const secp256k1_ecdsa_signature *sig, const unsigned char *msg32, const secp256k1_pubkey *pubkey) {\n+    secp256k1_ge q;\n+    secp256k1_scalar r, s;\n+    secp256k1_scalar m;\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(sig != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+\n+    secp256k1_scalar_set_b32(&m, msg32, NULL);\n+    secp256k1_ecdsa_signature_load(ctx, &r, &s, sig);\n+    return (!secp256k1_scalar_is_high(&s) &&\n+            secp256k1_pubkey_load(ctx, &q, pubkey) &&\n+            secp256k1_ecdsa_sig_verify(&ctx->ecmult_ctx, &r, &s, &q, &m));\n+}\n+\n+static int nonce_function_rfc6979(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {\n+   unsigned char keydata[112];\n+   int keylen = 64;\n+   secp256k1_rfc6979_hmac_sha256_t rng;\n+   unsigned int i;\n+   /* We feed a byte array to the PRNG as input, consisting of:\n+    * - the private key (32 bytes) and message (32 bytes), see RFC 6979 3.2d.\n+    * - optionally 32 extra bytes of data, see RFC 6979 3.6 Additional Data.\n+    * - optionally 16 extra bytes with the algorithm name.\n+    * Because the arguments have distinct fixed lengths it is not possible for\n+    *  different argument mixtures to emulate each other and result in the same\n+    *  nonces.\n+    */\n+   memcpy(keydata, key32, 32);\n+   memcpy(keydata + 32, msg32, 32);\n+   if (data != NULL) {\n+       memcpy(keydata + 64, data, 32);\n+       keylen = 96;\n+   }\n+   if (algo16 != NULL) {\n+       memcpy(keydata + keylen, algo16, 16);\n+       keylen += 16;\n+   }\n+   secp256k1_rfc6979_hmac_sha256_initialize(&rng, keydata, keylen);\n+   memset(keydata, 0, sizeof(keydata));\n+   for (i = 0; i <= counter; i++) {\n+       secp256k1_rfc6979_hmac_sha256_generate(&rng, nonce32, 32);\n+   }\n+   secp256k1_rfc6979_hmac_sha256_finalize(&rng);\n+   return 1;\n+}\n+\n+const secp256k1_nonce_function secp256k1_nonce_function_rfc6979 = nonce_function_rfc6979;\n+const secp256k1_nonce_function secp256k1_nonce_function_default = nonce_function_rfc6979;\n+\n+int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature *signature, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {\n+    secp256k1_scalar r, s;\n+    secp256k1_scalar sec, non, msg;\n     int ret = 0;\n     int overflow = 0;\n-    unsigned int count = 0;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n-    DEBUG_CHECK(msg32 != NULL);\n-    DEBUG_CHECK(sig64 != NULL);\n-    DEBUG_CHECK(seckey != NULL);\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(msg32 != NULL);\n+    ARG_CHECK(signature != NULL);\n+    ARG_CHECK(seckey != NULL);\n     if (noncefp == NULL) {\n         noncefp = secp256k1_nonce_function_default;\n     }\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n     /* Fail if the secret key is invalid. */\n     if (!overflow && !secp256k1_scalar_is_zero(&sec)) {\n+        unsigned int count = 0;\n         secp256k1_scalar_set_b32(&msg, msg32, NULL);\n         while (1) {\n             unsigned char nonce32[32];\n-            ret = noncefp(nonce32, msg32, seckey, count, noncedata);\n+            ret = noncefp(nonce32, msg32, seckey, NULL, (void*)noncedata, count);\n             if (!ret) {\n                 break;\n             }\n             secp256k1_scalar_set_b32(&non, nonce32, &overflow);\n             memset(nonce32, 0, 32);\n-            if (!secp256k1_scalar_is_zero(&non) && !overflow) {\n-                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &sig, &sec, &msg, &non, recid)) {\n+            if (!overflow && !secp256k1_scalar_is_zero(&non)) {\n+                if (secp256k1_ecdsa_sig_sign(&ctx->ecmult_gen_ctx, &r, &s, &sec, &msg, &non, NULL)) {\n                     break;\n                 }\n             }\n             count++;\n         }\n-        if (ret) {\n-            secp256k1_scalar_get_b32(sig64, &sig.r);\n-            secp256k1_scalar_get_b32(sig64 + 32, &sig.s);\n-        }\n         secp256k1_scalar_clear(&msg);\n         secp256k1_scalar_clear(&non);\n         secp256k1_scalar_clear(&sec);\n     }\n-    if (!ret) {\n-        memset(sig64, 0, 64);\n-    }\n-    return ret;\n-}\n-\n-int secp256k1_ecdsa_recover_compact(const secp256k1_context_t* ctx, const unsigned char *msg32, const unsigned char *sig64, unsigned char *pubkey, int *pubkeylen, int compressed, int recid) {\n-    secp256k1_ge_t q;\n-    secp256k1_ecdsa_sig_t sig;\n-    secp256k1_scalar_t m;\n-    int ret = 0;\n-    int overflow = 0;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n-    DEBUG_CHECK(msg32 != NULL);\n-    DEBUG_CHECK(sig64 != NULL);\n-    DEBUG_CHECK(pubkey != NULL);\n-    DEBUG_CHECK(pubkeylen != NULL);\n-    DEBUG_CHECK(recid >= 0 && recid <= 3);\n-\n-    secp256k1_scalar_set_b32(&sig.r, sig64, &overflow);\n-    if (!overflow) {\n-        secp256k1_scalar_set_b32(&sig.s, sig64 + 32, &overflow);\n-        if (!overflow) {\n-            secp256k1_scalar_set_b32(&m, msg32, NULL);\n-\n-            if (secp256k1_ecdsa_sig_recover(&ctx->ecmult_ctx, &sig, &q, &m, recid)) {\n-                ret = secp256k1_eckey_pubkey_serialize(&q, pubkey, pubkeylen, compressed);\n-            }\n-        }\n+    if (ret) {\n+        secp256k1_ecdsa_signature_save(signature, &r, &s);\n+    } else {\n+        memset(signature, 0, sizeof(*signature));\n     }\n     return ret;\n }\n \n-int secp256k1_ec_seckey_verify(const secp256k1_context_t* ctx, const unsigned char *seckey) {\n-    secp256k1_scalar_t sec;\n+int secp256k1_ec_seckey_verify(const secp256k1_context* ctx, const unsigned char *seckey) {\n+    secp256k1_scalar sec;\n     int ret;\n     int overflow;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(seckey != NULL);\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(seckey != NULL);\n     (void)ctx;\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n-    ret = !secp256k1_scalar_is_zero(&sec) && !overflow;\n+    ret = !overflow && !secp256k1_scalar_is_zero(&sec);\n     secp256k1_scalar_clear(&sec);\n     return ret;\n }\n \n-int secp256k1_ec_pubkey_verify(const secp256k1_context_t* ctx, const unsigned char *pubkey, int pubkeylen) {\n-    secp256k1_ge_t q;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(pubkey != NULL);\n-    (void)ctx;\n-\n-    return secp256k1_eckey_pubkey_parse(&q, pubkey, pubkeylen);\n-}\n-\n-int secp256k1_ec_pubkey_create(const secp256k1_context_t* ctx, unsigned char *pubkey, int *pubkeylen, const unsigned char *seckey, int compressed) {\n-    secp256k1_gej_t pj;\n-    secp256k1_ge_t p;\n-    secp256k1_scalar_t sec;\n+int secp256k1_ec_pubkey_create(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *seckey) {\n+    secp256k1_gej pj;\n+    secp256k1_ge p;\n+    secp256k1_scalar sec;\n     int overflow;\n     int ret = 0;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n-    DEBUG_CHECK(pubkey != NULL);\n-    DEBUG_CHECK(pubkeylen != NULL);\n-    DEBUG_CHECK(seckey != NULL);\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(pubkey != NULL);\n+    memset(pubkey, 0, sizeof(*pubkey));\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    ARG_CHECK(seckey != NULL);\n \n     secp256k1_scalar_set_b32(&sec, seckey, &overflow);\n-    if (!overflow) {\n+    ret = (!overflow) & (!secp256k1_scalar_is_zero(&sec));\n+    if (ret) {\n         secp256k1_ecmult_gen(&ctx->ecmult_gen_ctx, &pj, &sec);\n-        secp256k1_scalar_clear(&sec);\n         secp256k1_ge_set_gej(&p, &pj);\n-        ret = secp256k1_eckey_pubkey_serialize(&p, pubkey, pubkeylen, compressed);\n-    }\n-    if (!ret) {\n-        *pubkeylen = 0;\n-    }\n-    return ret;\n-}\n-\n-int secp256k1_ec_pubkey_decompress(const secp256k1_context_t* ctx, unsigned char *pubkey, int *pubkeylen) {\n-    secp256k1_ge_t p;\n-    int ret = 0;\n-    DEBUG_CHECK(pubkey != NULL);\n-    DEBUG_CHECK(pubkeylen != NULL);\n-    (void)ctx;\n-\n-    if (secp256k1_eckey_pubkey_parse(&p, pubkey, *pubkeylen)) {\n-        ret = secp256k1_eckey_pubkey_serialize(&p, pubkey, pubkeylen, 0);\n+        secp256k1_pubkey_save(pubkey, &p);\n     }\n+    secp256k1_scalar_clear(&sec);\n     return ret;\n }\n \n-int secp256k1_ec_privkey_tweak_add(const secp256k1_context_t* ctx, unsigned char *seckey, const unsigned char *tweak) {\n-    secp256k1_scalar_t term;\n-    secp256k1_scalar_t sec;\n+int secp256k1_ec_privkey_tweak_add(const secp256k1_context* ctx, unsigned char *seckey, const unsigned char *tweak) {\n+    secp256k1_scalar term;\n+    secp256k1_scalar sec;\n     int ret = 0;\n     int overflow = 0;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(seckey != NULL);\n-    DEBUG_CHECK(tweak != NULL);\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    ARG_CHECK(tweak != NULL);\n     (void)ctx;\n \n     secp256k1_scalar_set_b32(&term, tweak, &overflow);\n     secp256k1_scalar_set_b32(&sec, seckey, NULL);\n \n-    ret = secp256k1_eckey_privkey_tweak_add(&sec, &term) && !overflow;\n+    ret = !overflow && secp256k1_eckey_privkey_tweak_add(&sec, &term);\n+    memset(seckey, 0, 32);\n     if (ret) {\n         secp256k1_scalar_get_b32(seckey, &sec);\n     }\n@@ -307,45 +453,44 @@ int secp256k1_ec_privkey_tweak_add(const secp256k1_context_t* ctx, unsigned char\n     return ret;\n }\n \n-int secp256k1_ec_pubkey_tweak_add(const secp256k1_context_t* ctx, unsigned char *pubkey, int pubkeylen, const unsigned char *tweak) {\n-    secp256k1_ge_t p;\n-    secp256k1_scalar_t term;\n+int secp256k1_ec_pubkey_tweak_add(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *tweak) {\n+    secp256k1_ge p;\n+    secp256k1_scalar term;\n     int ret = 0;\n     int overflow = 0;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n-    DEBUG_CHECK(pubkey != NULL);\n-    DEBUG_CHECK(tweak != NULL);\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(tweak != NULL);\n \n     secp256k1_scalar_set_b32(&term, tweak, &overflow);\n-    if (!overflow) {\n-        ret = secp256k1_eckey_pubkey_parse(&p, pubkey, pubkeylen);\n-        if (ret) {\n-            ret = secp256k1_eckey_pubkey_tweak_add(&ctx->ecmult_ctx, &p, &term);\n-        }\n-        if (ret) {\n-            int oldlen = pubkeylen;\n-            ret = secp256k1_eckey_pubkey_serialize(&p, pubkey, &pubkeylen, oldlen <= 33);\n-            VERIFY_CHECK(pubkeylen == oldlen);\n+    ret = !overflow && secp256k1_pubkey_load(ctx, &p, pubkey);\n+    memset(pubkey, 0, sizeof(*pubkey));\n+    if (ret) {\n+        if (secp256k1_eckey_pubkey_tweak_add(&ctx->ecmult_ctx, &p, &term)) {\n+            secp256k1_pubkey_save(pubkey, &p);\n+        } else {\n+            ret = 0;\n         }\n     }\n \n     return ret;\n }\n \n-int secp256k1_ec_privkey_tweak_mul(const secp256k1_context_t* ctx, unsigned char *seckey, const unsigned char *tweak) {\n-    secp256k1_scalar_t factor;\n-    secp256k1_scalar_t sec;\n+int secp256k1_ec_privkey_tweak_mul(const secp256k1_context* ctx, unsigned char *seckey, const unsigned char *tweak) {\n+    secp256k1_scalar factor;\n+    secp256k1_scalar sec;\n     int ret = 0;\n     int overflow = 0;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(seckey != NULL);\n-    DEBUG_CHECK(tweak != NULL);\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(seckey != NULL);\n+    ARG_CHECK(tweak != NULL);\n     (void)ctx;\n \n     secp256k1_scalar_set_b32(&factor, tweak, &overflow);\n     secp256k1_scalar_set_b32(&sec, seckey, NULL);\n-    ret = secp256k1_eckey_privkey_tweak_mul(&sec, &factor) && !overflow;\n+    ret = !overflow && secp256k1_eckey_privkey_tweak_mul(&sec, &factor);\n+    memset(seckey, 0, 32);\n     if (ret) {\n         secp256k1_scalar_get_b32(seckey, &sec);\n     }\n@@ -355,65 +500,69 @@ int secp256k1_ec_privkey_tweak_mul(const secp256k1_context_t* ctx, unsigned char\n     return ret;\n }\n \n-int secp256k1_ec_pubkey_tweak_mul(const secp256k1_context_t* ctx, unsigned char *pubkey, int pubkeylen, const unsigned char *tweak) {\n-    secp256k1_ge_t p;\n-    secp256k1_scalar_t factor;\n+int secp256k1_ec_pubkey_tweak_mul(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *tweak) {\n+    secp256k1_ge p;\n+    secp256k1_scalar factor;\n     int ret = 0;\n     int overflow = 0;\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n-    DEBUG_CHECK(pubkey != NULL);\n-    DEBUG_CHECK(tweak != NULL);\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx));\n+    ARG_CHECK(pubkey != NULL);\n+    ARG_CHECK(tweak != NULL);\n \n     secp256k1_scalar_set_b32(&factor, tweak, &overflow);\n-    if (!overflow) {\n-        ret = secp256k1_eckey_pubkey_parse(&p, pubkey, pubkeylen);\n-        if (ret) {\n-            ret = secp256k1_eckey_pubkey_tweak_mul(&ctx->ecmult_ctx, &p, &factor);\n-        }\n-        if (ret) {\n-            int oldlen = pubkeylen;\n-            ret = secp256k1_eckey_pubkey_serialize(&p, pubkey, &pubkeylen, oldlen <= 33);\n-            VERIFY_CHECK(pubkeylen == oldlen);\n+    ret = !overflow && secp256k1_pubkey_load(ctx, &p, pubkey);\n+    memset(pubkey, 0, sizeof(*pubkey));\n+    if (ret) {\n+        if (secp256k1_eckey_pubkey_tweak_mul(&ctx->ecmult_ctx, &p, &factor)) {\n+            secp256k1_pubkey_save(pubkey, &p);\n+        } else {\n+            ret = 0;\n         }\n     }\n \n     return ret;\n }\n \n-int secp256k1_ec_privkey_export(const secp256k1_context_t* ctx, const unsigned char *seckey, unsigned char *privkey, int *privkeylen, int compressed) {\n-    secp256k1_scalar_t key;\n-    int ret = 0;\n-    DEBUG_CHECK(seckey != NULL);\n-    DEBUG_CHECK(privkey != NULL);\n-    DEBUG_CHECK(privkeylen != NULL);\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n-\n-    secp256k1_scalar_set_b32(&key, seckey, NULL);\n-    ret = secp256k1_eckey_privkey_serialize(&ctx->ecmult_gen_ctx, privkey, privkeylen, &key, compressed);\n-    secp256k1_scalar_clear(&key);\n-    return ret;\n+int secp256k1_context_randomize(secp256k1_context* ctx, const unsigned char *seed32) {\n+    VERIFY_CHECK(ctx != NULL);\n+    ARG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n+    secp256k1_ecmult_gen_blind(&ctx->ecmult_gen_ctx, seed32);\n+    return 1;\n }\n \n-int secp256k1_ec_privkey_import(const secp256k1_context_t* ctx, unsigned char *seckey, const unsigned char *privkey, int privkeylen) {\n-    secp256k1_scalar_t key;\n-    int ret = 0;\n-    DEBUG_CHECK(seckey != NULL);\n-    DEBUG_CHECK(privkey != NULL);\n-    (void)ctx;\n+int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *pubnonce, const secp256k1_pubkey * const *pubnonces, size_t n) {\n+    size_t i;\n+    secp256k1_gej Qj;\n+    secp256k1_ge Q;\n \n-    ret = secp256k1_eckey_privkey_parse(&key, privkey, privkeylen);\n-    if (ret) {\n-        secp256k1_scalar_get_b32(seckey, &key);\n-    }\n-    secp256k1_scalar_clear(&key);\n-    return ret;\n-}\n+    ARG_CHECK(pubnonce != NULL);\n+    memset(pubnonce, 0, sizeof(*pubnonce));\n+    ARG_CHECK(n >= 1);\n+    ARG_CHECK(pubnonces != NULL);\n \n-int secp256k1_context_randomize(secp256k1_context_t* ctx, const unsigned char *seed32) {\n-    DEBUG_CHECK(ctx != NULL);\n-    DEBUG_CHECK(secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx));\n-    secp256k1_ecmult_gen_blind(&ctx->ecmult_gen_ctx, seed32);\n+    secp256k1_gej_set_infinity(&Qj);\n+\n+    for (i = 0; i < n; i++) {\n+        secp256k1_pubkey_load(ctx, &Q, pubnonces[i]);\n+        secp256k1_gej_add_ge(&Qj, &Qj, &Q);\n+    }\n+    if (secp256k1_gej_is_infinity(&Qj)) {\n+        return 0;\n+    }\n+    secp256k1_ge_set_gej(&Q, &Qj);\n+    secp256k1_pubkey_save(pubnonce, &Q);\n     return 1;\n }\n+\n+#ifdef ENABLE_MODULE_ECDH\n+# include \"modules/ecdh/main_impl.h\"\n+#endif\n+\n+#ifdef ENABLE_MODULE_SCHNORR\n+# include \"modules/schnorr/main_impl.h\"\n+#endif\n+\n+#ifdef ENABLE_MODULE_RECOVERY\n+# include \"modules/recovery/main_impl.h\"\n+#endif"
      },
      {
        "sha": "f8efa93c7c3f3194a16db581927f69fe2d645d40",
        "filename": "src/secp256k1/src/testrand.h",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/testrand.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/testrand.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/testrand.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -16,13 +16,23 @@\n /** Seed the pseudorandom number generator for testing. */\n SECP256K1_INLINE static void secp256k1_rand_seed(const unsigned char *seed16);\n \n-/** Generate a pseudorandom 32-bit number. */\n+/** Generate a pseudorandom number in the range [0..2**32-1]. */\n static uint32_t secp256k1_rand32(void);\n \n+/** Generate a pseudorandom number in the range [0..2**bits-1]. Bits must be 1 or\n+ *  more. */\n+static uint32_t secp256k1_rand_bits(int bits);\n+\n+/** Generate a pseudorandom number in the range [0..range-1]. */\n+static uint32_t secp256k1_rand_int(uint32_t range);\n+\n /** Generate a pseudorandom 32-byte array. */\n static void secp256k1_rand256(unsigned char *b32);\n \n /** Generate a pseudorandom 32-byte array with long sequences of zero and one bits. */\n static void secp256k1_rand256_test(unsigned char *b32);\n \n+/** Generate pseudorandom bytes with long sequences of zero and one bits. */\n+static void secp256k1_rand_bytes_test(unsigned char *bytes, size_t len);\n+\n #endif"
      },
      {
        "sha": "15c7b9f12df05216c762af9c4056f3477516bc43",
        "filename": "src/secp256k1/src/testrand_impl.h",
        "status": "modified",
        "additions": 68,
        "deletions": 18,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/testrand_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/testrand_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/testrand_impl.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -1,5 +1,5 @@\n /**********************************************************************\n- * Copyright (c) 2013, 2014 Pieter Wuille                             *\n+ * Copyright (c) 2013-2015 Pieter Wuille                              *\n  * Distributed under the MIT software license, see the accompanying   *\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n@@ -16,9 +16,11 @@\n static secp256k1_rfc6979_hmac_sha256_t secp256k1_test_rng;\n static uint32_t secp256k1_test_rng_precomputed[8];\n static int secp256k1_test_rng_precomputed_used = 8;\n+static uint64_t secp256k1_test_rng_integer;\n+static int secp256k1_test_rng_integer_bits_left = 0;\n \n SECP256K1_INLINE static void secp256k1_rand_seed(const unsigned char *seed16) {\n-    secp256k1_rfc6979_hmac_sha256_initialize(&secp256k1_test_rng, (const unsigned char*)\"TestRNG\", 7, seed16, 16, NULL, 0);\n+    secp256k1_rfc6979_hmac_sha256_initialize(&secp256k1_test_rng, seed16, 16);\n }\n \n SECP256K1_INLINE static uint32_t secp256k1_rand32(void) {\n@@ -29,32 +31,80 @@ SECP256K1_INLINE static uint32_t secp256k1_rand32(void) {\n     return secp256k1_test_rng_precomputed[secp256k1_test_rng_precomputed_used++];\n }\n \n+static uint32_t secp256k1_rand_bits(int bits) {\n+    uint32_t ret;\n+    if (secp256k1_test_rng_integer_bits_left < bits) {\n+        secp256k1_test_rng_integer |= (((uint64_t)secp256k1_rand32()) << secp256k1_test_rng_integer_bits_left);\n+        secp256k1_test_rng_integer_bits_left += 32;\n+    }\n+    ret = secp256k1_test_rng_integer;\n+    secp256k1_test_rng_integer >>= bits;\n+    secp256k1_test_rng_integer_bits_left -= bits;\n+    ret &= ((~((uint32_t)0)) >> (32 - bits));\n+    return ret;\n+}\n+\n+static uint32_t secp256k1_rand_int(uint32_t range) {\n+    /* We want a uniform integer between 0 and range-1, inclusive.\n+     * B is the smallest number such that range <= 2**B.\n+     * two mechanisms implemented here:\n+     * - generate B bits numbers until one below range is found, and return it\n+     * - find the largest multiple M of range that is <= 2**(B+A), generate B+A\n+     *   bits numbers until one below M is found, and return it modulo range\n+     * The second mechanism consumes A more bits of entropy in every iteration,\n+     * but may need fewer iterations due to M being closer to 2**(B+A) then\n+     * range is to 2**B. The array below (indexed by B) contains a 0 when the\n+     * first mechanism is to be used, and the number A otherwise.\n+     */\n+    static const int addbits[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0};\n+    uint32_t trange, mult;\n+    int bits = 0;\n+    if (range <= 1) {\n+        return 0;\n+    }\n+    trange = range - 1;\n+    while (trange > 0) {\n+        trange >>= 1;\n+        bits++;\n+    }\n+    if (addbits[bits]) {\n+        bits = bits + addbits[bits];\n+        mult = ((~((uint32_t)0)) >> (32 - bits)) / range;\n+        trange = range * mult;\n+    } else {\n+        trange = range;\n+        mult = 1;\n+    }\n+    while(1) {\n+        uint32_t x = secp256k1_rand_bits(bits);\n+        if (x < trange) {\n+            return (mult == 1) ? x : (x % range);\n+        }\n+    }\n+}\n+\n static void secp256k1_rand256(unsigned char *b32) {\n     secp256k1_rfc6979_hmac_sha256_generate(&secp256k1_test_rng, b32, 32);\n }\n \n-static void secp256k1_rand256_test(unsigned char *b32) {\n-    int bits=0;\n-    uint64_t ent = 0;\n-    int entleft = 0;\n-    memset(b32, 0, 32);\n-    while (bits < 256) {\n+static void secp256k1_rand_bytes_test(unsigned char *bytes, size_t len) {\n+    size_t bits = 0;\n+    memset(bytes, 0, len);\n+    while (bits < len * 8) {\n         int now;\n         uint32_t val;\n-        if (entleft < 12) {\n-            ent |= ((uint64_t)secp256k1_rand32()) << entleft;\n-            entleft += 32;\n-        }\n-        now = 1 + ((ent % 64)*((ent >> 6) % 32)+16)/31;\n-        val = 1 & (ent >> 11);\n-        ent >>= 12;\n-        entleft -= 12;\n-        while (now > 0 && bits < 256) {\n-            b32[bits / 8] |= val << (bits % 8);\n+        now = 1 + (secp256k1_rand_bits(6) * secp256k1_rand_bits(5) + 16) / 31;\n+        val = secp256k1_rand_bits(1);\n+        while (now > 0 && bits < len * 8) {\n+            bytes[bits / 8] |= val << (bits % 8);\n             now--;\n             bits++;\n         }\n     }\n }\n \n+static void secp256k1_rand256_test(unsigned char *b32) {\n+    secp256k1_rand_bytes_test(b32, 32);\n+}\n+\n #endif"
      },
      {
        "sha": "687a5f2fdd80184c3a4cba9bec8603503b085b0d",
        "filename": "src/secp256k1/src/tests.c",
        "status": "modified",
        "additions": 2845,
        "deletions": 545,
        "changes": 3390,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/tests.c",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/tests.c",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/tests.c?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e"
      },
      {
        "sha": "4eef4ded47fd332d3d3f0865e8b197b1888c62fa",
        "filename": "src/secp256k1/src/util.h",
        "status": "modified",
        "additions": 16,
        "deletions": 10,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e475d5a4d169e758cfb0c9f0633ed476e176b0e/src/secp256k1/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/util.h?ref=9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "patch": "@@ -15,6 +15,15 @@\n #include <stdint.h>\n #include <stdio.h>\n \n+typedef struct {\n+    void (*fn)(const char *text, void* data);\n+    const void* data;\n+} secp256k1_callback;\n+\n+static SECP256K1_INLINE void secp256k1_callback_call(const secp256k1_callback * const cb, const char * const text) {\n+    cb->fn(text, (void*)cb->data);\n+}\n+\n #ifdef DETERMINISTIC\n #define TEST_FAILURE(msg) do { \\\n     fprintf(stderr, \"%s\\n\", msg); \\\n@@ -47,23 +56,20 @@\n } while(0)\n #endif\n \n-/* Like assert(), but safe to use on expressions with side effects. */\n-#ifndef NDEBUG\n-#define DEBUG_CHECK CHECK\n-#else\n-#define DEBUG_CHECK(cond) do { (void)(cond); } while(0)\n-#endif\n-\n-/* Like DEBUG_CHECK(), but when VERIFY is defined instead of NDEBUG not defined. */\n+/* Like assert(), but when VERIFY is defined, and side-effect safe. */\n #ifdef VERIFY\n #define VERIFY_CHECK CHECK\n+#define VERIFY_SETUP(stmt) do { stmt; } while(0)\n #else\n #define VERIFY_CHECK(cond) do { (void)(cond); } while(0)\n+#define VERIFY_SETUP(stmt)\n #endif\n \n-static SECP256K1_INLINE void *checked_malloc(size_t size) {\n+static SECP256K1_INLINE void *checked_malloc(const secp256k1_callback* cb, size_t size) {\n     void *ret = malloc(size);\n-    CHECK(ret != NULL);\n+    if (ret == NULL) {\n+        secp256k1_callback_call(cb, \"Out of memory\");\n+    }\n     return ret;\n }\n "
      }
    ]
  },
  {
    "sha": "48edf5746af84e352a5619c44fb1bc4cf565875c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGVkZjU3NDZhZjg0ZTM1MmE1NjE5YzQ0ZmIxYmM0Y2Y1NjU4NzVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-11T05:56:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-11-12T23:12:53Z"
      },
      "message": "Update key.cpp to new secp256k1 API",
      "tree": {
        "sha": "8a929855914424405c1d694388e3f97aec2b9865",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a929855914424405c1d694388e3f97aec2b9865"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48edf5746af84e352a5619c44fb1bc4cf565875c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48edf5746af84e352a5619c44fb1bc4cf565875c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48edf5746af84e352a5619c44fb1bc4cf565875c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48edf5746af84e352a5619c44fb1bc4cf565875c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e475d5a4d169e758cfb0c9f0633ed476e176b0e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e475d5a4d169e758cfb0c9f0633ed476e176b0e"
      }
    ],
    "stats": {
      "total": 157,
      "additions": 132,
      "deletions": 25
    },
    "files": [
      {
        "sha": "63a745393e37ab60a74e2c19a3d0c6c432cd65dd",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48edf5746af84e352a5619c44fb1bc4cf565875c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48edf5746af84e352a5619c44fb1bc4cf565875c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=48edf5746af84e352a5619c44fb1bc4cf565875c",
        "patch": "@@ -958,7 +958,7 @@ PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no\"\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n AC_CONFIG_SUBDIRS([src/secp256k1 src/univalue])\n \n AC_OUTPUT"
      },
      {
        "sha": "a24fa8a4baa59a87fbf6fcc3a30f66d4e4fec8ac",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 131,
        "deletions": 24,
        "changes": 155,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48edf5746af84e352a5619c44fb1bc4cf565875c/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48edf5746af84e352a5619c44fb1bc4cf565875c/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=48edf5746af84e352a5619c44fb1bc4cf565875c",
        "patch": "@@ -7,17 +7,120 @@\n #include \"arith_uint256.h\"\n #include \"crypto/common.h\"\n #include \"crypto/hmac_sha512.h\"\n-#include \"eccryptoverify.h\"\n #include \"pubkey.h\"\n #include \"random.h\"\n \n #include <secp256k1.h>\n-#include \"ecwrapper.h\"\n+#include <secp256k1_recovery.h>\n \n-static secp256k1_context_t* secp256k1_context = NULL;\n+static secp256k1_context* secp256k1_context_sign = NULL;\n+\n+/** These functions are taken from the libsecp256k1 distribution and are very ugly. */\n+static int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *privkey, size_t privkeylen) {\n+    const unsigned char *end = privkey + privkeylen;\n+    int lenb = 0;\n+    int len = 0;\n+    memset(out32, 0, 32);\n+    /* sequence header */\n+    if (end < privkey+1 || *privkey != 0x30) {\n+        return 0;\n+    }\n+    privkey++;\n+    /* sequence length constructor */\n+    if (end < privkey+1 || !(*privkey & 0x80)) {\n+        return 0;\n+    }\n+    lenb = *privkey & ~0x80; privkey++;\n+    if (lenb < 1 || lenb > 2) {\n+        return 0;\n+    }\n+    if (end < privkey+lenb) {\n+        return 0;\n+    }\n+    /* sequence length */\n+    len = privkey[lenb-1] | (lenb > 1 ? privkey[lenb-2] << 8 : 0);\n+    privkey += lenb;\n+    if (end < privkey+len) {\n+        return 0;\n+    }\n+    /* sequence element 0: version number (=1) */\n+    if (end < privkey+3 || privkey[0] != 0x02 || privkey[1] != 0x01 || privkey[2] != 0x01) {\n+        return 0;\n+    }\n+    privkey += 3;\n+    /* sequence element 1: octet string, up to 32 bytes */\n+    if (end < privkey+2 || privkey[0] != 0x04 || privkey[1] > 0x20 || end < privkey+2+privkey[1]) {\n+        return 0;\n+    }\n+    memcpy(out32 + 32 - privkey[1], privkey + 2, privkey[1]);\n+    if (!secp256k1_ec_seckey_verify(ctx, out32)) {\n+        memset(out32, 0, 32);\n+        return 0;\n+    }\n+    return 1;\n+}\n+\n+static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, int compressed) {\n+    secp256k1_pubkey pubkey;\n+    size_t pubkeylen = 0;\n+    if (!secp256k1_ec_pubkey_create(ctx, &pubkey, key32)) {\n+        *privkeylen = 0;\n+        return 0;\n+    }\n+    if (compressed) {\n+        static const unsigned char begin[] = {\n+            0x30,0x81,0xD3,0x02,0x01,0x01,0x04,0x20\n+        };\n+        static const unsigned char middle[] = {\n+            0xA0,0x81,0x85,0x30,0x81,0x82,0x02,0x01,0x01,0x30,0x2C,0x06,0x07,0x2A,0x86,0x48,\n+            0xCE,0x3D,0x01,0x01,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFE,0xFF,0xFF,0xFC,0x2F,0x30,0x06,0x04,0x01,0x00,0x04,0x01,0x07,0x04,\n+            0x21,0x02,0x79,0xBE,0x66,0x7E,0xF9,0xDC,0xBB,0xAC,0x55,0xA0,0x62,0x95,0xCE,0x87,\n+            0x0B,0x07,0x02,0x9B,0xFC,0xDB,0x2D,0xCE,0x28,0xD9,0x59,0xF2,0x81,0x5B,0x16,0xF8,\n+            0x17,0x98,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFF,0xFF,0xFE,0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,0xBF,0xD2,0x5E,\n+            0x8C,0xD0,0x36,0x41,0x41,0x02,0x01,0x01,0xA1,0x24,0x03,0x22,0x00\n+        };\n+        unsigned char *ptr = privkey;\n+        memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n+        memcpy(ptr, key32, 32); ptr += 32;\n+        memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n+        pubkeylen = 33;\n+        secp256k1_ec_pubkey_serialize(ctx, ptr, &pubkeylen, &pubkey, SECP256K1_EC_COMPRESSED);\n+        ptr += pubkeylen;\n+        *privkeylen = ptr - privkey;\n+    } else {\n+        static const unsigned char begin[] = {\n+            0x30,0x82,0x01,0x13,0x02,0x01,0x01,0x04,0x20\n+        };\n+        static const unsigned char middle[] = {\n+            0xA0,0x81,0xA5,0x30,0x81,0xA2,0x02,0x01,0x01,0x30,0x2C,0x06,0x07,0x2A,0x86,0x48,\n+            0xCE,0x3D,0x01,0x01,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFE,0xFF,0xFF,0xFC,0x2F,0x30,0x06,0x04,0x01,0x00,0x04,0x01,0x07,0x04,\n+            0x41,0x04,0x79,0xBE,0x66,0x7E,0xF9,0xDC,0xBB,0xAC,0x55,0xA0,0x62,0x95,0xCE,0x87,\n+            0x0B,0x07,0x02,0x9B,0xFC,0xDB,0x2D,0xCE,0x28,0xD9,0x59,0xF2,0x81,0x5B,0x16,0xF8,\n+            0x17,0x98,0x48,0x3A,0xDA,0x77,0x26,0xA3,0xC4,0x65,0x5D,0xA4,0xFB,0xFC,0x0E,0x11,\n+            0x08,0xA8,0xFD,0x17,0xB4,0x48,0xA6,0x85,0x54,0x19,0x9C,0x47,0xD0,0x8F,0xFB,0x10,\n+            0xD4,0xB8,0x02,0x21,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+            0xFF,0xFF,0xFF,0xFF,0xFE,0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,0xBF,0xD2,0x5E,\n+            0x8C,0xD0,0x36,0x41,0x41,0x02,0x01,0x01,0xA1,0x44,0x03,0x42,0x00\n+        };\n+        unsigned char *ptr = privkey;\n+        memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n+        memcpy(ptr, key32, 32); ptr += 32;\n+        memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n+        pubkeylen = 65;\n+        secp256k1_ec_pubkey_serialize(ctx, ptr, &pubkeylen, &pubkey, SECP256K1_EC_UNCOMPRESSED);\n+        ptr += pubkeylen;\n+        *privkeylen = ptr - privkey;\n+    }\n+    return 1;\n+}\n \n bool CKey::Check(const unsigned char *vch) {\n-    return eccrypto::Check(vch);\n+    return secp256k1_ec_seckey_verify(secp256k1_context_sign, vch);\n }\n \n void CKey::MakeNewKey(bool fCompressedIn) {\n@@ -30,7 +133,7 @@ void CKey::MakeNewKey(bool fCompressedIn) {\n }\n \n bool CKey::SetPrivKey(const CPrivKey &privkey, bool fCompressedIn) {\n-    if (!secp256k1_ec_privkey_import(secp256k1_context, (unsigned char*)begin(), &privkey[0], privkey.size()))\n+    if (!ec_privkey_import_der(secp256k1_context_sign, (unsigned char*)begin(), &privkey[0], privkey.size()))\n         return false;\n     fCompressed = fCompressedIn;\n     fValid = true;\n@@ -40,22 +143,25 @@ bool CKey::SetPrivKey(const CPrivKey &privkey, bool fCompressedIn) {\n CPrivKey CKey::GetPrivKey() const {\n     assert(fValid);\n     CPrivKey privkey;\n-    int privkeylen, ret;\n+    int ret;\n+    size_t privkeylen;\n     privkey.resize(279);\n     privkeylen = 279;\n-    ret = secp256k1_ec_privkey_export(secp256k1_context, begin(), (unsigned char*)&privkey[0], &privkeylen, fCompressed);\n+    ret = ec_privkey_export_der(secp256k1_context_sign, (unsigned char*)&privkey[0], &privkeylen, begin(), fCompressed ? SECP256K1_EC_COMPRESSED : SECP256K1_EC_UNCOMPRESSED);\n     assert(ret);\n     privkey.resize(privkeylen);\n     return privkey;\n }\n \n CPubKey CKey::GetPubKey() const {\n     assert(fValid);\n+    secp256k1_pubkey pubkey;\n+    size_t clen = 65;\n     CPubKey result;\n-    int clen = 65;\n-    int ret = secp256k1_ec_pubkey_create(secp256k1_context, (unsigned char*)result.begin(), &clen, begin(), fCompressed);\n-    assert((int)result.size() == clen);\n+    int ret = secp256k1_ec_pubkey_create(secp256k1_context_sign, &pubkey, begin());\n     assert(ret);\n+    secp256k1_ec_pubkey_serialize(secp256k1_context_sign, (unsigned char*)result.begin(), &clen, &pubkey, fCompressed ? SECP256K1_EC_COMPRESSED : SECP256K1_EC_UNCOMPRESSED);\n+    assert(result.size() == clen);\n     assert(result.IsValid());\n     return result;\n }\n@@ -64,11 +170,13 @@ bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, uint32_\n     if (!fValid)\n         return false;\n     vchSig.resize(72);\n-    int nSigLen = 72;\n+    size_t nSigLen = 72;\n     unsigned char extra_entropy[32] = {0};\n     WriteLE32(extra_entropy, test_case);\n-    int ret = secp256k1_ecdsa_sign(secp256k1_context, hash.begin(), (unsigned char*)&vchSig[0], &nSigLen, begin(), secp256k1_nonce_function_rfc6979, test_case ? extra_entropy : NULL);\n+    secp256k1_ecdsa_signature sig;\n+    int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, test_case ? extra_entropy : NULL);\n     assert(ret);\n+    secp256k1_ecdsa_signature_serialize_der(secp256k1_context_sign, (unsigned char*)&vchSig[0], &nSigLen, &sig);\n     vchSig.resize(nSigLen);\n     return true;\n }\n@@ -92,15 +200,18 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n         return false;\n     vchSig.resize(65);\n     int rec = -1;\n-    int ret = secp256k1_ecdsa_sign_compact(secp256k1_context, hash.begin(), &vchSig[1], begin(), secp256k1_nonce_function_rfc6979, NULL, &rec);\n+    secp256k1_ecdsa_recoverable_signature sig;\n+    int ret = secp256k1_ecdsa_sign_recoverable(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, NULL);\n+    assert(ret);\n+    secp256k1_ecdsa_recoverable_signature_serialize_compact(secp256k1_context_sign, (unsigned char*)&vchSig[1], &rec, &sig);\n     assert(ret);\n     assert(rec != -1);\n     vchSig[0] = 27 + rec + (fCompressed ? 4 : 0);\n     return true;\n }\n \n bool CKey::Load(CPrivKey &privkey, CPubKey &vchPubKey, bool fSkipCheck=false) {\n-    if (!secp256k1_ec_privkey_import(secp256k1_context, (unsigned char*)begin(), &privkey[0], privkey.size()))\n+    if (!ec_privkey_import_der(secp256k1_context_sign, (unsigned char*)begin(), &privkey[0], privkey.size()))\n         return false;\n     fCompressed = vchPubKey.IsCompressed();\n     fValid = true;\n@@ -126,7 +237,7 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n     }\n     memcpy(ccChild.begin(), out+32, 32);\n     memcpy((unsigned char*)keyChild.begin(), begin(), 32);\n-    bool ret = secp256k1_ec_privkey_tweak_add(secp256k1_context, (unsigned char*)keyChild.begin(), out);\n+    bool ret = secp256k1_ec_privkey_tweak_add(secp256k1_context_sign, (unsigned char*)keyChild.begin(), out);\n     UnlockObject(out);\n     keyChild.fCompressed = true;\n     keyChild.fValid = ret;\n@@ -184,20 +295,16 @@ void CExtKey::Decode(const unsigned char code[74]) {\n }\n \n bool ECC_InitSanityCheck() {\n-    if (!CECKey::SanityCheck()) {\n-        return false;\n-    }\n     CKey key;\n     key.MakeNewKey(true);\n     CPubKey pubkey = key.GetPubKey();\n     return key.VerifyPubKey(pubkey);\n }\n \n-\n void ECC_Start() {\n-    assert(secp256k1_context == NULL);\n+    assert(secp256k1_context_sign == NULL);\n \n-    secp256k1_context_t *ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+    secp256k1_context *ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n     assert(ctx != NULL);\n \n     {\n@@ -210,12 +317,12 @@ void ECC_Start() {\n         UnlockObject(seed);\n     }\n \n-    secp256k1_context = ctx;\n+    secp256k1_context_sign = ctx;\n }\n \n void ECC_Stop() {\n-    secp256k1_context_t *ctx = secp256k1_context;\n-    secp256k1_context = NULL;\n+    secp256k1_context *ctx = secp256k1_context_sign;\n+    secp256k1_context_sign = NULL;\n \n     if (ctx) {\n         secp256k1_context_destroy(ctx);"
      }
    ]
  }
]