[
  {
    "sha": "2ce7f95d4a1583bf0090a3fc1f5d1aba9c1d1b06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2U3Zjk1ZDRhMTU4M2JmMDA5MGEzZmMxZjVkMWFiYTljMWQxYjA2",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-21T09:13:54Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-07-21T09:19:48Z"
      },
      "message": "doc: clean out release notes post branch-off",
      "tree": {
        "sha": "eb5226f9d577e07ca99bce9ea72f447bc782ebfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb5226f9d577e07ca99bce9ea72f447bc782ebfb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ce7f95d4a1583bf0090a3fc1f5d1aba9c1d1b06",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmD35rQACgkQLuufXMCV\nJsHx3Q//XVYmDkyDUTgF0GK648ZS0iVAV3+JwrDGosd1YfopRL7P9aHY7mpXPi5+\nMvCwQzsqqSm7dQ7rtK3luVOLkoUze+dlPERSJUjsWe8X5s7Y7Ea8GhzaggChURTQ\nbcenuZ6jTLpghH94lvajJWGfXL5yVwQdcruI2SpqBmhOaXSOYRBpymzdrQ1+w88t\nZ/uFktQSQD2+WzbxnW4fzJwTruBqpY6hMAVM0TRbH+UHo3kB+8fkocpHZvc5d/dw\nukwLunEk47sh7+cSOoxBkN1BV9lz1lzy8HRBL1cn149brGtg1nXmrHJNl/NWUCU3\nf2F0Zhb0z33EKSulehcwf2bpa+aO5YsLbuyFwv5hg1/DNFu2D/rNC/rf3z1V/EeJ\nR9PBI8xnewH/qeAvWRULkrzih8XSIe3NHia/RQmNhmiuroU5l1tfhZ3FT8Gwz+D4\nniopK2cFNvJDgB+GEYiHMB3OUGdz5Txq+xnxfO6NIiJw72ewW25XkpOlFFWrqCii\nzV54zQ96+1GH1UPQMNG7qxEjnUvfx8qmhKlMW3nPA/zyNB9onZGd5Ix+PhNhgpA6\ngWQR7ABBFLE45MXgl4iASiu2lZlQmJgO0GsAMO8qr2Qg58fV51mY7kcskZAoz6+m\ngcOsuqucEE2tKMf/krImRnUo9t6qn9zPM0CdA1vezG7h6y8TKWg=\n=B2dj\n-----END PGP SIGNATURE-----",
        "payload": "tree eb5226f9d577e07ca99bce9ea72f447bc782ebfb\nparent 40fed336b2aeb6f4e698cac7584a2fe916e20608\nauthor fanquake <fanquake@gmail.com> 1626858834 +0800\ncommitter fanquake <fanquake@gmail.com> 1626859188 +0800\n\ndoc: clean out release notes post branch-off\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ce7f95d4a1583bf0090a3fc1f5d1aba9c1d1b06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ce7f95d4a1583bf0090a3fc1f5d1aba9c1d1b06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ce7f95d4a1583bf0090a3fc1f5d1aba9c1d1b06/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "40fed336b2aeb6f4e698cac7584a2fe916e20608",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40fed336b2aeb6f4e698cac7584a2fe916e20608",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40fed336b2aeb6f4e698cac7584a2fe916e20608"
      }
    ],
    "stats": {
      "total": 125,
      "additions": 1,
      "deletions": 124
    },
    "files": [
      {
        "sha": "99f26fc943901f36c6673d0893f0422e4a8cf339",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 124,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ce7f95d4a1583bf0090a3fc1f5d1aba9c1d1b06/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ce7f95d4a1583bf0090a3fc1f5d1aba9c1d1b06/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=2ce7f95d4a1583bf0090a3fc1f5d1aba9c1d1b06",
        "patch": "@@ -1,5 +1,3 @@\n-# Release notes now being edited on https://github.com/bitcoin-core/bitcoin-devwiki/wiki/22.0-Release-Notes-draft\n-\n *After branching off for a major version release of Bitcoin Core, use this\n template to create the initial release notes draft.*\n \n@@ -8,7 +6,7 @@ template to create the initial release notes draft.*\n for the process.*\n \n *Create the draft, named* \"*version* Release Notes Draft\"\n-*(e.g. \"0.20.0 Release Notes Draft\"), as a collaborative wiki in:*\n+*(e.g. \"22.0 Release Notes Draft\"), as a collaborative wiki in:*\n \n https://github.com/bitcoin-core/bitcoin-devwiki/wiki/\n \n@@ -53,90 +51,15 @@ Core should also work on most other Unix-like systems but is not as\n frequently tested on them.  It is not recommended to use Bitcoin Core on\n unsupported systems.\n \n-From Bitcoin Core 22.0 onwards, macOS versions earlier than 10.14 are no longer supported.\n-\n Notable changes\n ===============\n \n P2P and network changes\n -----------------------\n \n-- This release removes support for Tor version 2 hidden services in favor of Tor\n-  v3 only, as the Tor network [dropped support for Tor\n-  v2](https://blog.torproject.org/v2-deprecation-timeline) with the release of\n-  Tor version 0.4.6.  Henceforth, Bitcoin Core ignores Tor v2 addresses; it\n-  neither rumors them over the network to other peers, nor stores them in memory\n-  or to `peers.dat`.  (#22050)\n-\n-- Added NAT-PMP port mapping support via\n-  [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html). (#18077)\n-\n Updated RPCs\n ------------\n \n-- Due to [BIP 350](https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki)\n-  being implemented, behavior for all RPCs that accept addresses is changed when\n-  a native witness version 1 (or higher) is passed. These now require a Bech32m\n-  encoding instead of a Bech32 one, and Bech32m encoding will be used for such\n-  addresses in RPC output as well. No version 1 addresses should be created\n-  for mainnet until consensus rules are adopted that give them meaning\n-  (e.g. through [BIP 341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)).\n-  Once that happens, Bech32m is expected to be used for them, so this shouldn't\n-  affect any production systems, but may be observed on other networks where such\n-  addresses already have meaning (like signet). (#20861)\n-\n-- The `getpeerinfo` RPC returns two new boolean fields, `bip152_hb_to` and\n-  `bip152_hb_from`, that respectively indicate whether we selected a peer to be\n-  in compact blocks high-bandwidth mode or whether a peer selected us as a\n-  compact blocks high-bandwidth peer. High-bandwidth peers send new block\n-  announcements via a `cmpctblock` message rather than the usual inv/headers\n-  announcements. See BIP 152 for more details. (#19776)\n-\n-- `getpeerinfo` no longer returns the following fields: `addnode`, `banscore`,\n-  and `whitelisted`, which were previously deprecated in 0.21. Instead of\n-  `addnode`, the `connection_type` field returns manual. Instead of\n-  `whitelisted`, the `permissions` field indicates if the peer has special\n-  privileges. The `banscore` field has simply been removed. (#20755)\n-\n-- The following RPCs:  `gettxout`, `getrawtransaction`, `decoderawtransaction`,\n-  `decodescript`, `gettransaction`, and REST endpoints: `/rest/tx`,\n-  `/rest/getutxos`, `/rest/block` deprecated the following fields (which are no\n-  longer returned in the responses by default): `addresses`, `reqSigs`.\n-  The `-deprecatedrpc=addresses` flag must be passed for these fields to be\n-  included in the RPC response. This flag/option will be available only for this major release, after which\n-  the deprecation will be removed entirely. Note that these fields are attributes of\n-  the `scriptPubKey` object returned in the RPC response. However, in the response\n-  of `decodescript` these fields are top-level attributes, and included again as attributes\n-  of the `scriptPubKey` object. (#20286)\n-\n-- When creating a hex-encoded bitcoin transaction using the `bitcoin-tx` utility\n-  with the `-json` option set, the following fields: `addresses`, `reqSigs` are no longer\n-  returned in the tx output of the response. (#20286)\n-\n-- The `listbanned` RPC now returns two new numeric fields: `ban_duration` and `time_remaining`.\n-  Respectively, these new fields indicate the duration of a ban and the time remaining until a ban expires,\n-  both in seconds. Additionally, the `ban_created` field is repositioned to come before `banned_until`. (#21602)\n-\n-- The `getnodeaddresses` RPC now returns a \"network\" field indicating the\n-  network type (ipv4, ipv6, onion, or i2p) for each address.  (#21594)\n-\n-- `getnodeaddresses` now also accepts a \"network\" argument (ipv4, ipv6, onion,\n-  or i2p) to return only addresses of the specified network.  (#21843)\n-\n-- The `testmempoolaccept` RPC now accepts multiple transactions (still experimental at the moment,\n-  API may be unstable). This is intended for testing transaction packages with dependency\n-  relationships; it is not recommended for batch-validating independent transactions. In addition to\n-  mempool policy, package policies apply: the list cannot contain more than 25 transactions or have a\n-  total size exceeding 101K virtual bytes, and cannot conflict with (spend the same inputs as) each other or\n-  the mempool, even if it would be a valid BIP125 replace-by-fee. There are some known limitations to\n-  the accuracy of the test accept: it's possible for `testmempoolaccept` to return \"allowed\"=True for a\n-  group of transactions, but \"too-long-mempool-chain\" if they are actually submitted. (#20833)\n-\n-- `addmultisigaddress` and `createmultisig` now support up to 20 keys for\n-  Segwit addresses. (#20867)\n-\n-Changes to Wallet or GUI related RPCs can be found in the GUI or Wallet section below.\n-\n New RPCs\n --------\n \n@@ -146,48 +69,15 @@ Build System\n New settings\n ------------\n \n-- The `-natpmp` option has been added to use NAT-PMP to map the listening port.\n-  If both UPnP and NAT-PMP are enabled, a successful allocation from UPnP\n-  prevails over one from NAT-PMP. (#18077)\n-\n Updated settings\n ----------------\n \n-Changes to Wallet or GUI related settings can be found in the GUI or Wallet section below.\n-\n-- Passing an invalid `-rpcauth` argument now cause bitcoind to fail to start.  (#20461)\n-\n Tools and Utilities\n -------------------\n \n-- A new CLI `-addrinfo` command returns the number of addresses known to the\n-  node per network type (including Tor v2 versus v3) and total. This can be\n-  useful to see if the node knows enough addresses in a network to use options\n-  like `-onlynet=<network>` or to upgrade to this release of Bitcoin Core 22.0\n-  that supports Tor v3 only.  (#21595)\n-\n-- A new `-rpcwaittimeout` argument to `bitcoin-cli` sets the timeout\n-  in seconds to use with `-rpcwait`. If the timeout expires,\n-  `bitcoin-cli` will report a failure. (#21056)\n-\n Wallet\n ------\n \n-- A new `listdescriptors` RPC is available to inspect the contents of descriptor-enabled wallets.\n-  The RPC returns public versions of all imported descriptors, including their timestamp and flags.\n-  For ranged descriptors, it also returns the range boundaries and the next index to generate addresses from. (#20226)\n-\n-- The `bumpfee` RPC is not available with wallets that have private keys\n-  disabled. `psbtbumpfee` can be used instead. (#20891)\n-\n-- The `fundrawtransaction`, `send` and `walletcreatefundedpsbt` RPCs now support an `include_unsafe` option\n-  that when `true` allows using unsafe inputs to fund the transaction.\n-  Note that the resulting transaction may become invalid if one of the unsafe inputs disappears.\n-  If that happens, the transaction must be funded with different inputs and republished. (#21359)\n-\n-- We now support up to 20 keys in `multi()` and `sortedmulti()` descriptors\n-  under `wsh()`. (#20867)\n-\n GUI changes\n -----------\n \n@@ -199,19 +89,6 @@ RPC\n \n - `getblockchaininfo` now returns a new `time` field, that provides the chain tip time. (#22407)\n \n-- The RPC server can process a limited number of simultaneous RPC requests.\n-  Previously, if this limit was exceeded, the RPC server would respond with\n-  [status code 500 (`HTTP_INTERNAL_SERVER_ERROR`)](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_server_errors).\n-  Now it returns status code 503 (`HTTP_SERVICE_UNAVAILABLE`). (#18335)\n-\n-- Error codes have been updated to be more accurate for the following error cases (#18466):\n-  - `signmessage` now returns RPC_INVALID_ADDRESS_OR_KEY (-5) if the\n-    passed address is invalid. Previously returned RPC_TYPE_ERROR (-3).\n-  - `verifymessage` now returns RPC_INVALID_ADDRESS_OR_KEY (-5) if the\n-    passed address is invalid. Previously returned RPC_TYPE_ERROR (-3).\n-  - `verifymessage` now returns RPC_TYPE_ERROR (-3) if the passed signature\n-    is malformed. Previously returned RPC_INVALID_ADDRESS_OR_KEY (-5).\n-\n Tests\n -----\n "
      }
    ]
  }
]