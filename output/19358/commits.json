[
  {
    "sha": "b564259963614e206c8953878c8e4eaa124e4092",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTY0MjU5OTYzNjE0ZTIwNmM4OTUzODc4YzhlNGVhYTEyNGU0MDky",
    "commit": {
      "author": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-06-23T07:47:16Z"
      },
      "committer": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-10-08T17:47:25Z"
      },
      "message": "torconrol: avoid to set a wrong socks proxy when creating an onion service.\n\nBefore this fix default settings could override conf and you could end\nup not be able to connect to .onion nodes or connect over the wrong proxy.\n\nSide effect of this fix is that we no longer create the default\nTor socks outbound proxy, that we would have created by chance if an inbound\nTor service creation was successful.\nSince the old version anyway would have leaked our ip, this fix\nnow dumps a warning that an outbound Tor proxy is not defined.",
      "tree": {
        "sha": "ed4a07ef0a2ab292b37137d7828a9a223e9eb283",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed4a07ef0a2ab292b37137d7828a9a223e9eb283"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b564259963614e206c8953878c8e4eaa124e4092",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b564259963614e206c8953878c8e4eaa124e4092",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b564259963614e206c8953878c8e4eaa124e4092",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b564259963614e206c8953878c8e4eaa124e4092/comments",
    "author": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "875e1ccc9fe01e026e564dfd39a64d9a4b332a89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/875e1ccc9fe01e026e564dfd39a64d9a4b332a89",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/875e1ccc9fe01e026e564dfd39a64d9a4b332a89"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 0,
      "deletions": 10
    },
    "files": [
      {
        "sha": "3447439a6a261e3b37fd87733427b421150cd233",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b564259963614e206c8953878c8e4eaa124e4092/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b564259963614e206c8953878c8e4eaa124e4092/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=b564259963614e206c8953878c8e4eaa124e4092",
        "patch": "@@ -526,16 +526,6 @@ void TorController::auth_cb(TorControlConnection& _conn, const TorControlReply&\n {\n     if (reply.code == 250) {\n         LogPrint(BCLog::TOR, \"tor: Authentication successful\\n\");\n-\n-        // Now that we know Tor is running setup the proxy for onion addresses\n-        // if -onion isn't set to something else.\n-        if (gArgs.GetArg(\"-onion\", \"\") == \"\") {\n-            CService resolved(LookupNumeric(\"127.0.0.1\", 9050));\n-            proxyType addrOnion = proxyType(resolved, true);\n-            SetProxy(NET_ONION, addrOnion);\n-            SetReachable(NET_ONION, true);\n-        }\n-\n         // Finally - now create the service\n         if (private_key.empty()) // No private key, generate one\n             private_key = \"NEW:RSA1024\"; // Explicitly request RSA1024 - see issue #9214"
      }
    ]
  },
  {
    "sha": "901ac08bdb400aece7a8d910da977acea65fa6af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDFhYzA4YmRiNDAwYWVjZTdhOGQ5MTBkYTk3N2FjZWE2NWZhNmFm",
    "commit": {
      "author": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-10-06T17:37:56Z"
      },
      "committer": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-10-08T18:06:32Z"
      },
      "message": "init: followup up fix of -onlynet settings.\n\nWhile the onlynet=onion problem is fixed by not creating and outbound proxy\nin torcontrol.\nWe now with this fix respect also the possible fine grained ipv4/ipv6 setting\ncombinations.",
      "tree": {
        "sha": "335f59dd8328c81586947cf5f85a87e409f87189",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/335f59dd8328c81586947cf5f85a87e409f87189"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/901ac08bdb400aece7a8d910da977acea65fa6af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/901ac08bdb400aece7a8d910da977acea65fa6af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/901ac08bdb400aece7a8d910da977acea65fa6af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/901ac08bdb400aece7a8d910da977acea65fa6af/comments",
    "author": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b564259963614e206c8953878c8e4eaa124e4092",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b564259963614e206c8953878c8e4eaa124e4092",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b564259963614e206c8953878c8e4eaa124e4092"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 16,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9f1133bc4dec9dd1e47fd43452edacc6dfd2af57",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 7,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/901ac08bdb400aece7a8d910da977acea65fa6af/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/901ac08bdb400aece7a8d910da977acea65fa6af/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=901ac08bdb400aece7a8d910da977acea65fa6af",
        "patch": "@@ -1420,6 +1420,10 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n             strSubVersion.size(), MAX_SUBVERSION_LENGTH));\n     }\n \n+    // Future devs please note: the underlying structure is default all nets are reachable\n+    // So here if onlynet defined we set all routeable false and then mask in all desired nets to *true*.\n+    // Use IsReachable(netname) to determine later this user settings.\n+\n     if (args.IsArgSet(\"-onlynet\")) {\n         std::set<enum Network> nets;\n         for (const std::string& snet : args.GetArgs(\"-onlynet\")) {\n@@ -1442,7 +1446,6 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     // -proxy sets a proxy for all outgoing network traffic\n     // -noproxy (or -proxy=0) as well as the empty string can be used to not set a proxy, this is the default\n     std::string proxyArg = args.GetArg(\"-proxy\", \"\");\n-    SetReachable(NET_ONION, false);\n     if (proxyArg != \"\" && proxyArg != \"0\") {\n         CService proxyAddr;\n         if (!Lookup(proxyArg, proxyAddr, 9050, fNameLookup)) {\n@@ -1453,11 +1456,12 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         if (!addrProxy.IsValid())\n             return InitError(strprintf(_(\"Invalid -proxy address or hostname: '%s'\"), proxyArg));\n \n-        SetProxy(NET_IPV4, addrProxy);\n-        SetProxy(NET_IPV6, addrProxy);\n-        SetProxy(NET_ONION, addrProxy);\n+        if (IsReachable(NET_IPV4)) SetProxy(NET_IPV4, addrProxy);\n+        if (IsReachable(NET_IPV6)) SetProxy(NET_IPV6, addrProxy);\n+        if (IsReachable(NET_ONION)) SetProxy(NET_ONION, addrProxy);\n+        // -onlynet will at least leave one allowed, so we now set the name proxy\n         SetNameProxy(addrProxy);\n-        SetReachable(NET_ONION, true); // by default, -proxy sets onion as reachable, unless -noonion later\n+        // by default, -proxy sets also an onion proxy for the allowed nets, unless -noonion later\n     }\n \n     // -onion can be used to set only a proxy for .onion, or override normal proxy for .onion addresses\n@@ -1475,10 +1479,15 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n             proxyType addrOnion = proxyType(onionProxy, proxyRandomize);\n             if (!addrOnion.IsValid())\n                 return InitError(strprintf(_(\"Invalid -onion address or hostname: '%s'\"), onionArg));\n-            SetProxy(NET_ONION, addrOnion);\n-            SetReachable(NET_ONION, true);\n+            if (IsReachable(NET_ONION)) {\n+                SetProxy(NET_ONION, addrOnion);\n+            } else return InitError(strprintf(_(\"Invalid request network not allowed:  '%s'\"), onionArg));\n         }\n     }\n+    proxyType checkAddrOnion;\n+    if (IsReachable(NET_ONION) && !GetProxy(NET_ONION, checkAddrOnion)) {\n+        SetReachable(NET_ONION, false);\n+    }\n \n     // see Step 2: parameter interactions for more information about these\n     fListen = args.GetBoolArg(\"-listen\", DEFAULT_LISTEN);"
      }
    ]
  }
]