[
  {
    "sha": "bc537526164324d4be9c37aa72bb75db8073d283",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzUzNzUyNjE2NDMyNGQ0YmU5YzM3YWE3MmJiNzVkYjgwNzNkMjgz",
    "commit": {
      "author": {
        "name": "Jimmy Song",
        "email": "jaejoon@gmail.com",
        "date": "2017-04-18T01:42:10Z"
      },
      "committer": {
        "name": "Jimmy Song",
        "email": "jaejoon@gmail.com",
        "date": "2017-04-20T18:29:21Z"
      },
      "message": "Tests: Add simple test for getaddednodeinfo\n\n* net.py test adds a node and sees if it's in the getaddednodeinfo call\n* flake8 fixes",
      "tree": {
        "sha": "4227b586c247539d763614c03599755678ffa531",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4227b586c247539d763614c03599755678ffa531"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc537526164324d4be9c37aa72bb75db8073d283",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc537526164324d4be9c37aa72bb75db8073d283",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc537526164324d4be9c37aa72bb75db8073d283",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc537526164324d4be9c37aa72bb75db8073d283/comments",
    "author": {
      "login": "jimmysong",
      "id": 524761,
      "node_id": "MDQ6VXNlcjUyNDc2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmysong",
      "html_url": "https://github.com/jimmysong",
      "followers_url": "https://api.github.com/users/jimmysong/followers",
      "following_url": "https://api.github.com/users/jimmysong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmysong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmysong/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmysong/orgs",
      "repos_url": "https://api.github.com/users/jimmysong/repos",
      "events_url": "https://api.github.com/users/jimmysong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmysong/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimmysong",
      "id": 524761,
      "node_id": "MDQ6VXNlcjUyNDc2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmysong",
      "html_url": "https://github.com/jimmysong",
      "followers_url": "https://api.github.com/users/jimmysong/followers",
      "following_url": "https://api.github.com/users/jimmysong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmysong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmysong/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmysong/orgs",
      "repos_url": "https://api.github.com/users/jimmysong/repos",
      "events_url": "https://api.github.com/users/jimmysong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmysong/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "987a6c09562e1e1e9d6623b999ae9de268490e4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/987a6c09562e1e1e9d6623b999ae9de268490e4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/987a6c09562e1e1e9d6623b999ae9de268490e4b"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 17,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a82cdabf524cf3ef0453aa02213e4dc8b038bfb2",
        "filename": "test/functional/net.py",
        "status": "modified",
        "additions": 17,
        "deletions": 4,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc537526164324d4be9c37aa72bb75db8073d283/test/functional/net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc537526164324d4be9c37aa72bb75db8073d283/test/functional/net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/net.py?ref=bc537526164324d4be9c37aa72bb75db8073d283",
        "patch": "@@ -7,15 +7,15 @@\n Tests correspond to code in rpc/net.cpp.\n \"\"\"\n \n-from decimal import Decimal\n import time\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.authproxy import JSONRPCException\n from test_framework.util import (\n     assert_equal,\n-    start_nodes,\n+    assert_raises_jsonrpc,\n     connect_nodes_bi,\n+    p2p_port,\n+    start_nodes,\n )\n \n \n@@ -33,7 +33,7 @@ def setup_network(self):\n \n     def run_test(self):\n         assert_equal(self.nodes[0].getnetworkinfo()['networkactive'], True)\n-        assert_equal(self.nodes[0].getnetworkinfo()['connections'], 2) # bilateral connection\n+        assert_equal(self.nodes[0].getnetworkinfo()['connections'], 2)\n \n         self.nodes[0].setnetworkactive(False)\n         assert_equal(self.nodes[0].getnetworkinfo()['networkactive'], False)\n@@ -49,6 +49,19 @@ def run_test(self):\n         assert_equal(self.nodes[0].getnetworkinfo()['networkactive'], True)\n         assert_equal(self.nodes[0].getnetworkinfo()['connections'], 2)\n \n+        # test getaddednodeinfo\n+        assert_equal(self.nodes[0].getaddednodeinfo(), [])\n+        # add a node (node2) to node0\n+        ip_port = \"127.0.0.1:{}\".format(p2p_port(2))\n+        self.nodes[0].addnode(ip_port, 'add')\n+        # check that the node has indeed been added\n+        added_nodes = self.nodes[0].getaddednodeinfo(ip_port)\n+        assert_equal(len(added_nodes), 1)\n+        assert_equal(added_nodes[0]['addednode'], ip_port)\n+        # check that a non-existant node returns an error\n+        assert_raises_jsonrpc(-24, \"Node has not been added\",\n+                              self.nodes[0].getaddednodeinfo, '1.1.1.1')\n+\n \n if __name__ == '__main__':\n     NetTest().main()"
      }
    ]
  }
]