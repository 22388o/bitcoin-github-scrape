MarcoFalke,2016-08-19T12:00:21Z,"Please also get rid of the other `tr(""From"")`. No need to keep useless information/code around.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241000084,241000084,
ghost,2016-08-19T15:11:02Z,@MarcoFalke Done.\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241045281,241045281,
MarcoFalke,2016-08-19T15:38:49Z,Looks like it is still here: https://github.com/mcccs/bitcoin/blob/e05969720213c4b7c7db2115fe0cf96d5ae73e21/src/qt/transactiondesc.cpp#L93\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241053056,241053056,
ghost,2016-08-19T15:41:08Z,"Did I remove the wrong one?\n\nI removed two `tr(""From"")` lines. The first one I deleted was [this](https://github.com/bitcoin/bitcoin/blob/master/src/qt/transactiondesc.cpp#L170-L171).\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241053679,241053679,
MarcoFalke,2016-08-19T15:47:53Z,"Concept ACK, but this needs review and tests with actual ""online"" transactions (IP transactions).\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241055527,241055527,
ghost,2016-08-19T18:32:55Z,"@MarcoFalke I cannot find the binaries for v0.7.2 and compiling is difficult. If you give me its link, I can test the Pull Request.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241098672,241098672,
sipa,2016-08-19T18:34:40Z,I think IP transaction support was disable way before that. You probably\nneed 0.3.something...\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241099115,241099115,
ghost,2016-08-19T18:35:57Z,> ### Status\n> \n> This feature has been removed from Bitcoin Core as-of v0.8.0\n\nhttps://en.bitcoin.it/wiki/IP_transaction\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241099451,241099451,
sipa,2016-08-19T18:42:46Z,"Removed, yes. But I think it was disabled long before.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241101303,241101303,
ghost,2016-08-19T18:59:50Z,"Yes, you were right. The last version it exists is 4.0rc2, thanks for reminding me.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241105789,241105789,
jonasschnelli,2016-08-20T09:34:18Z,utACK https://github.com/bitcoin/bitcoin/pull/8546/commits/8fd27c66dc274ea83c7dd61f9b39169a95082736\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241189843,241189843,
MarcoFalke,2016-08-23T13:38:59Z,"Regardless of testing this pull, an old wallet.dat would be helpful for general compatibility testing, too.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-241733492,241733492,
ghost,2016-08-24T15:07:41Z,"@MarcoFalke If you need, you can use this [wallet.dat.zip](https://github.com/bitcoin/bitcoin/files/435008/wallet.dat.zip) which I just created (created by v0.8.6).\n\nEDIT: Wait for a newer wallet.dat. This old one has no transactions.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-242098099,242098099,
MarcoFalke,2016-08-24T15:19:07Z,Does it include IP-transactions? I could assume you need at least two\nnodes to create such.\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-242102293,242102293,
ghost,2016-08-24T15:24:41Z,"Nope, not yet. I couldn't find 0.3.24's compiled version, and I'll compile it by myself after I install wxWidgets.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-242104754,242104754,
laanwj,2016-08-26T10:05:40Z,"> Nope, not yet. I couldn't find 0.3.24's compiled version, and I'll compile it by myself after I install wxWidgets.\n\nDo you really need the GUI? was there no way to do IP transactions through bitcoind? I don't remember, could well be true.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-242688619,242688619,
laanwj,2016-09-01T14:00:52Z,"If actually testing with such an old version is a problem, maybe it would be possible to emulate such a transaction, e.g. take the code and artificially inject it into the wallet? That would make a good test.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-244087867,244087867,
sipa,2016-09-01T16:20:23Z,"I really don't know if we need to do that much effort for a feature that has been disabled by default since september 30th 2010 (almost _6_ years ago). Sure, it shouldn't crash if anyone has records left from such transactions in their wallet, but I also don't think we should show anything useful about them.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-244132461,244132461,
laanwj,2016-09-01T16:40:01Z,"I agree, the only thing to check here is that it doesn't crash.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-244138037,244138037,
ghost,2016-09-02T11:37:16Z,This happened after I entered the command below. What might be causing it?\n\n``` bash\n make -f makefile.unix\ng++ -c -O2 -Wno-invalid-offsetof -Wformat -g -D__WXDEBUG__ -DNOPCH -DFOURWAYSSE2 -DUSE_SSL -DUSE_UPNP=0 -I/usr/local/lib/wx/include/gtk2-unicode-static-3.1 -I/usr/local/include/wx-3.1 -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -pthread -DGUI -o obj/util.o util.cpp\nIn file included from util.cpp,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-244352305,244352305,
sipa,2016-09-02T12:10:36Z,You're missing libdb++.\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-244357822,244357822,
luke-jr,2016-09-10T09:27:10Z,"Try `make -f makefile.unix bitcoind DEBUGFLAGS=""-I/usr/include/db4.8""`\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-246101899,246101899,
ghost,2016-09-10T10:00:06Z,"Does bitcoind have IP transaction support?\nAlso what's wrong here?\n(Both `make -f makefile.unix` and `make -f makefile.unix bitcoind DEBUGFLAGS=""-I/usr/include/db4.81` is causing this)\n\n``` c\nnet.cpp: In function ‘void ThreadMapPort2(void*)’:\nnet.cpp:1076:63: error: too few arguments to function ‘UPNPDev* upnpDiscover(int, const char*, const char*, int, int, int*)’\n     devlist = upnpDiscov",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-246103268,246103268,
luke-jr,2016-09-10T10:25:26Z,"miniupnpc breaks APIs often.\n\nTry `make -f makefile.unix bitcoind USE_UPNP= DEBUGFLAGS=""-I/usr/include/db4.8""`\n\nNote that's a null value for USE_UPNP.\n\n(I don't know anything about IP transactions...)\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-246104303,246104303,
luke-jr,2016-09-10T10:30:23Z,"Reviewing historical code, it looks like you need to go back to v0.3.20 to receive IP transactions.\n\nNote also that ""to"" is _still supported today_ by RPC sendtoaddress's comment-to...\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-246104487,246104487,
luke-jr,2016-09-10T10:35:51Z,"Oh, and the receiving IP txns looks like it's part of the GUI... I don't think I ever managed to build the wx GUI, so I can't help with that. :(\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-246104684,246104684,
ghost,2016-09-10T17:17:20Z,"https://gist.github.com/mcccs/5b43d4638e303a6b0556b865cfd1f264\n\nMaybe we should close this Pull Request, because it needs too much work for non-important feature.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-246123721,246123721,
luke-jr,2016-09-10T18:30:56Z,"Simulating an IP transaction may very well be easier. But if you've reduced it to link errors like those, it's probably just a matter of getting the LDFLAGS right now...\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-246127785,246127785,
ghost,2016-09-13T17:03:37Z,``` c\nAssembler messages:\nFatal error: can't create obj/nogui/util.o: No such file or directory\nmakefile.unix:69: recipe for target 'obj/nogui/util.o' failed\nmake: *** [obj/nogui/util.o] Error 1\n```\n\n@luke-jr What am I missing now?\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-246751265,246751265,
jonasschnelli,2016-10-18T19:38:26Z,What's the status here?\nIMO there is no need for the 0.14 GUI to support IP transactions. I think its acceptable if it breaks wallets used back in 0.3.x in conjunction with IP transactions.\n,https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-254615996,254615996,
laanwj,2016-10-18T20:28:08Z,"I'm closing this for now. I'm not convinced that this only removes code related to pay-to-IP transactions, and seems unfeasible to test. Doesn't hurt to leave this code around for a little longer.\n",https://github.com/bitcoin/bitcoin/pull/8546#issuecomment-254629380,254629380,
laanwj,2016-08-22T16:01:21Z,"Now that this no longer uses From:,  do we still have a way to indicate in the transation details that a transaction is watch-only?\n",https://github.com/bitcoin/bitcoin/pull/8546#discussion_r75705744,75705744,src/qt/transactiondesc.cpp
MarcoFalke,2016-08-22T16:08:23Z,Is the icon for watch-only different?\n,https://github.com/bitcoin/bitcoin/pull/8546#discussion_r75707037,75707037,src/qt/transactiondesc.cpp
laanwj,2016-08-22T17:32:23Z,"There's an eye-icon, but that is shown in the transaction list, not in the transaction details.\n",https://github.com/bitcoin/bitcoin/pull/8546#discussion_r75721421,75721421,src/qt/transactiondesc.cpp
sipa,2016-08-23T11:52:54Z,"Please leave a ""Watch-only"" notice in the transaction details.\n",https://github.com/bitcoin/bitcoin/pull/8546#discussion_r75850273,75850273,src/qt/transactiondesc.cpp
,2016-08-23T12:00:28Z,Should I bring back these lines?\n,https://github.com/bitcoin/bitcoin/pull/8546#discussion_r75851236,75851236,src/qt/transactiondesc.cpp
laanwj,2016-08-24T12:03:03Z,"Yes, but word it differently please. There is no need to display this as `From: watch-only`. But it needs to be visible that the transaction is watch-only.\n",https://github.com/bitcoin/bitcoin/pull/8546#discussion_r76043443,76043443,src/qt/transactiondesc.cpp
,2016-08-24T14:47:40Z,Also isn't this part of code inefficient?\n\n``` c\nif (fAllFromMe)\n         {\n           if(fAllFromMe & ISMINE_WATCH_ONLY)\n```\n\nI am going to replace this with this:\n\n``` c\nif (fAllFromMe)\n         {\n           if(ISMINE_WATCH_ONLY)\n```\n\nAm I right or should I keep this?\n,https://github.com/bitcoin/bitcoin/pull/8546#discussion_r76070799,76070799,src/qt/transactiondesc.cpp
laanwj,2016-08-25T09:03:45Z,"Eh, no don't do that. Firstly, don't optimize things which are not a bottleneck - one comparison is negligible to all the bit blitting and pixel pushing happening in Qt itself.\nIt's also far from equivalent: `&` is a bitwise AND operator, its matching a bit field.\n",https://github.com/bitcoin/bitcoin/pull/8546#discussion_r76205955,76205955,src/qt/transactiondesc.cpp
