[
  {
    "sha": "8fd27c66dc274ea83c7dd61f9b39169a95082736",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZmQyN2M2NmRjMjc0ZWE4M2M3ZGQ2MWY5YjM5MTY5YTk1MDgyNzM2",
    "commit": {
      "author": {
        "name": "MCCCS",
        "email": "mcccs@users.noreply.github.com",
        "date": "2016-08-19T10:31:58Z"
      },
      "committer": {
        "name": "MCCCS",
        "email": "mcccs@users.noreply.github.com",
        "date": "2016-08-19T15:42:10Z"
      },
      "message": "Remove IP transaction check",
      "tree": {
        "sha": "956179ee3c74a68296d7499d21ffea99086d195c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/956179ee3c74a68296d7499d21ffea99086d195c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8fd27c66dc274ea83c7dd61f9b39169a95082736",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fd27c66dc274ea83c7dd61f9b39169a95082736",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8fd27c66dc274ea83c7dd61f9b39169a95082736",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fd27c66dc274ea83c7dd61f9b39169a95082736/comments",
    "author": {
      "login": "mcccs",
      "id": 43574227,
      "node_id": "MDQ6VXNlcjQzNTc0MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43574227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcccs",
      "html_url": "https://github.com/mcccs",
      "followers_url": "https://api.github.com/users/mcccs/followers",
      "following_url": "https://api.github.com/users/mcccs/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcccs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcccs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcccs/subscriptions",
      "organizations_url": "https://api.github.com/users/mcccs/orgs",
      "repos_url": "https://api.github.com/users/mcccs/repos",
      "events_url": "https://api.github.com/users/mcccs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcccs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mcccs",
      "id": 43574227,
      "node_id": "MDQ6VXNlcjQzNTc0MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43574227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcccs",
      "html_url": "https://github.com/mcccs",
      "followers_url": "https://api.github.com/users/mcccs/followers",
      "following_url": "https://api.github.com/users/mcccs/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcccs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcccs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcccs/subscriptions",
      "organizations_url": "https://api.github.com/users/mcccs/orgs",
      "repos_url": "https://api.github.com/users/mcccs/repos",
      "events_url": "https://api.github.com/users/mcccs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcccs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4e777819c54fe0e386de517a201053698556236",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4e777819c54fe0e386de517a201053698556236",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4e777819c54fe0e386de517a201053698556236"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 13,
      "deletions": 39
    },
    "files": [
      {
        "sha": "b3bfea7d84269772f12b1d78643eb14cd6adce87",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 39,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fd27c66dc274ea83c7dd61f9b39169a95082736/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fd27c66dc274ea83c7dd61f9b39169a95082736/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=8fd27c66dc274ea83c7dd61f9b39169a95082736",
        "patch": "@@ -80,14 +80,8 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n     {\n         strHTML += \"<b>\" + tr(\"Source\") + \":</b> \" + tr(\"Generated\") + \"<br>\";\n     }\n-    else if (wtx.mapValue.count(\"from\") && !wtx.mapValue[\"from\"].empty())\n-    {\n-        // Online transaction\n-        strHTML += \"<b>\" + tr(\"From\") + \":</b> \" + GUIUtil::HtmlEscape(wtx.mapValue[\"from\"]) + \"<br>\";\n-    }\n     else\n     {\n-        // Offline transaction\n         if (nNet > 0)\n         {\n             // Credit\n@@ -96,7 +90,6 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n                 CTxDestination address = CBitcoinAddress(rec->address).Get();\n                 if (wallet->mapAddressBook.count(address))\n                 {\n-                    strHTML += \"<b>\" + tr(\"From\") + \":</b> \" + tr(\"unknown\") + \"<br>\";\n                     strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n                     strHTML += GUIUtil::HtmlEscape(rec->address);\n                     QString addressOwned = (::IsMine(*wallet, address) == ISMINE_SPENDABLE) ? tr(\"own address\") : tr(\"watch-only\");\n@@ -110,20 +103,6 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n         }\n     }\n \n-    //\n-    // To\n-    //\n-    if (wtx.mapValue.count(\"to\") && !wtx.mapValue[\"to\"].empty())\n-    {\n-        // Online transaction\n-        std::string strAddress = wtx.mapValue[\"to\"];\n-        strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n-        CTxDestination dest = CBitcoinAddress(strAddress).Get();\n-        if (wallet->mapAddressBook.count(dest) && !wallet->mapAddressBook[dest].name.empty())\n-            strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[dest].name) + \" \";\n-        strHTML += GUIUtil::HtmlEscape(strAddress) + \"<br>\";\n-    }\n-\n     //\n     // Amount\n     //\n@@ -167,9 +146,6 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n \n         if (fAllFromMe)\n         {\n-            if(fAllFromMe & ISMINE_WATCH_ONLY)\n-                strHTML += \"<b>\" + tr(\"From\") + \":</b> \" + tr(\"watch-only\") + \"<br>\";\n-\n             //\n             // Debit\n             //\n@@ -180,22 +156,20 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n                 if ((toSelf == ISMINE_SPENDABLE) && (fAllFromMe == ISMINE_SPENDABLE))\n                     continue;\n \n-                if (!wtx.mapValue.count(\"to\") || wtx.mapValue[\"to\"].empty())\n+\n+                CTxDestination address;\n+                if (ExtractDestination(txout.scriptPubKey, address))\n                 {\n-                    // Offline transaction\n-                    CTxDestination address;\n-                    if (ExtractDestination(txout.scriptPubKey, address))\n-                    {\n-                        strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n-                        if (wallet->mapAddressBook.count(address) && !wallet->mapAddressBook[address].name.empty())\n-                            strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[address].name) + \" \";\n-                        strHTML += GUIUtil::HtmlEscape(CBitcoinAddress(address).ToString());\n-                        if(toSelf == ISMINE_SPENDABLE)\n-                            strHTML += \" (own address)\";\n-                        else if(toSelf & ISMINE_WATCH_ONLY)\n-                            strHTML += \" (watch-only)\";\n-                        strHTML += \"<br>\";\n-                    }\n+                    strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n+                    if (wallet->mapAddressBook.count(address) && !wallet->mapAddressBook[address].name.empty())\n+                        strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[address].name) + \" \";\n+                    strHTML += GUIUtil::HtmlEscape(CBitcoinAddress(address).ToString());\n+                    if(toSelf == ISMINE_SPENDABLE)\n+                        strHTML += \" (own address)\";\n+                    else if(toSelf & ISMINE_WATCH_ONLY)\n+                        strHTML += \" (watch-only)\";\n+                    strHTML += \"<br>\";\n+\n                 }\n \n                 strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -txout.nValue) + \"<br>\";"
      }
    ]
  }
]