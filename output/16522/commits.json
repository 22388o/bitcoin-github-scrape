[
  {
    "sha": "c599e818babc8772fff6c3b49f46feb30c569cb3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTk5ZTgxOGJhYmM4NzcyZmZmNmMzYjQ5ZjQ2ZmViMzBjNTY5Y2Iz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-01T18:51:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-01T20:01:07Z"
      },
      "message": "travis: Run functional tests in GUI once",
      "tree": {
        "sha": "081a341657b4d16b7b6d84d293aad4518752746b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/081a341657b4d16b7b6d84d293aad4518752746b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c599e818babc8772fff6c3b49f46feb30c569cb3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c599e818babc8772fff6c3b49f46feb30c569cb3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c599e818babc8772fff6c3b49f46feb30c569cb3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c599e818babc8772fff6c3b49f46feb30c569cb3/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7821821a23b68cc9ec49d69829ad4c939cb762e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7821821a23b68cc9ec49d69829ad4c939cb762e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7821821a23b68cc9ec49d69829ad4c939cb762e8"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5d914f6f5bdc5a3b7f979f1841b4c9a813fe4d20",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c599e818babc8772fff6c3b49f46feb30c569cb3/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c599e818babc8772fff6c3b49f46feb30c569cb3/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=c599e818babc8772fff6c3b49f46feb30c569cb3",
        "patch": "@@ -124,9 +124,10 @@ jobs:\n       name: '32-bit + dash  [GOAL: install]  [GUI: no BIP70]'\n       env: >-\n         HOST=i686-pc-linux-gnu\n-        PACKAGES=\"g++-multilib python3-zmq\"\n+        PACKAGES=\"g++-multilib python3-zmq xvfb\"\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --disable-bip70 --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n+        BITCOIND=\"bitcoin-qt\" # Run the functional tests with the gui\n         CONFIG_SHELL=\"/bin/dash\"\n \n     - stage: test"
      },
      {
        "sha": "e567b966912c2e4651e45980851a67ea3cb92920",
        "filename": ".travis/test_05_before_script.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c599e818babc8772fff6c3b49f46feb30c569cb3/.travis/test_05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c599e818babc8772fff6c3b49f46feb30c569cb3/.travis/test_05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_05_before_script.sh?ref=c599e818babc8772fff6c3b49f46feb30c569cb3",
        "patch": "@@ -19,6 +19,11 @@ fi\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n fi\n+if [ \"$BITCOIND\" = \"bitcoin-qt\" ]; then\n+  export DISPLAY=:99.0\n+  # From https://docs.travis-ci.com/user/gui-and-headless-browsers/#using-xvfb-directly\n+  DOCKER_EXEC /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x24;\n+fi\n if [ -z \"$NO_DEPENDS\" ]; then\n   DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n fi"
      }
    ]
  },
  {
    "sha": "e6599a49dd439489a3041e0d55f1d684398ac5ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjU5OWE0OWRkNDM5NDg5YTMwNDFlMGQ1NWYxZDY4NDM5OGFjNWZm",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-05T17:57:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-01T20:01:07Z"
      },
      "message": "Make functional tests compatible with bitcoin-qt usage\n\nIn particular, skip any assert_start_raises_init_error checks due to the way\nQT handles startup errors (presents the user with an error dialog which must be\nclosed). In the future we may implement a better way of handling this.",
      "tree": {
        "sha": "2f59ed51d290dd31c8b27456cfdc940e5b0a419a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f59ed51d290dd31c8b27456cfdc940e5b0a419a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6599a49dd439489a3041e0d55f1d684398ac5ff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6599a49dd439489a3041e0d55f1d684398ac5ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6599a49dd439489a3041e0d55f1d684398ac5ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6599a49dd439489a3041e0d55f1d684398ac5ff/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c599e818babc8772fff6c3b49f46feb30c569cb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c599e818babc8772fff6c3b49f46feb30c569cb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c599e818babc8772fff6c3b49f46feb30c569cb3"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b228af13689e601706fb86c10fcbfb24dcba69c6",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6599a49dd439489a3041e0d55f1d684398ac5ff/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6599a49dd439489a3041e0d55f1d684398ac5ff/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=e6599a49dd439489a3041e0d55f1d684398ac5ff",
        "patch": "@@ -178,6 +178,10 @@ def __getattr__(self, name):\n             assert self.rpc_connected and self.rpc is not None, self._node_msg(\"Error: no RPC connection\")\n             return getattr(self.rpc, name)\n \n+    @property\n+    def using_qt(self):\n+        return self.binary.endswith('-qt')\n+\n     def start(self, extra_args=None, *, cwd=None, stdout=None, stderr=None, **kwargs):\n         \"\"\"Start the node.\"\"\"\n         if extra_args is None:\n@@ -434,6 +438,16 @@ def assert_start_raises_init_error(self, extra_args=None, expected_msg=None, mat\n \n         Will throw if bitcoind starts without an error.\n         Will throw if an expected_msg is provided and it does not match bitcoind's stdout.\"\"\"\n+\n+        if self.using_qt:\n+            # QT displays a warning box and the process hangs, preventing us\n+            # from continuing the test.\n+            self.log.info(\n+                \"Skipping assert_start_raises_init_error\"\n+                \"(extra_args=%s, expected_msg=%s, match=%s, args=%s, kwargs=%s) \"\n+                \"call due to QT use\", extra_args, expected_msg, match, args, kwargs)\n+            return\n+\n         with tempfile.NamedTemporaryFile(dir=self.stderr_dir, delete=False) as log_stderr, \\\n              tempfile.NamedTemporaryFile(dir=self.stdout_dir, delete=False) as log_stdout:\n             try:"
      }
    ]
  }
]