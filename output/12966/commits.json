[
  {
    "sha": "2ef27a2af8eba1b6032231daa72f0003c39dd3f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWYyN2EyYWY4ZWJhMWI2MDMyMjMxZGFhNzJmMDAwM2MzOWRkM2Y5",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-12T09:24:31Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-12T09:24:31Z"
      },
      "message": "mempool: Add mempool based fee rate calculation",
      "tree": {
        "sha": "7857d5af756032e4900dba8e1ff9d6d26ae54cc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7857d5af756032e4900dba8e1ff9d6d26ae54cc8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ef27a2af8eba1b6032231daa72f0003c39dd3f9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlrPJc8ACgkQV692LbM1\nMyL01A//Va2y67fULSN64qCSVqC93AxdmjdrGD4qoKUm+4wsV7bZc9P4I6eGqASk\nA1BmepKrh8GDrrpYHYYBnw6SOmLZoI4FtuSfEFvEgwsgmNnmulXod+H2WMqpDP5W\nup7UxquUkfK3lJUYJGb4Ipb9HVCbroZU788BM2svTCsORFPb8S6oOfOB96n8HjYv\nSb6yCgwbjPMcl0r3zMpjiJy0TgARzlLKGxjjrFkqCIoofoknMdHYpvCzmgc8eQPD\nvqRrJNhtXfgfY9oYxGewgLKerXx3u3NOFE+iSZhRVs8mTDm3tKu0mVvGuz+Zfs/i\ntHWA3JhDlLK9+HKBDLVmgBLcwogzNpzvSd8ywjn90+bBDiLxGZEn1fzcehPSL88H\nIyIg5W5MD/fyhEHBJeNowu9DEMEnORdd31Km5PL45Jsi05W/AjCdd/wJabUgGBW+\nkvbWdbaoAeBCzMTPwg2BxWuaHkeuh8jYFuJL2WlJ+VTAvQFSmRpqPxLg3+u0e/8M\nAD/i03iyKKd7srG50gEyZn1grbx0eNS2H6NclJ1i8BpPUl6KGISnFnIV+48pZoms\nQoAlAVc5kEWlLDxd5EMNVkk+2T4jUm6yaUcQswPgFbhN2HlHSRUr5DjB5o6gELjy\nM0MAB9RisXu4hNjeCAWbXnnvtoXN966ZZu5umN8ekl+P1RZDlUg=\n=fKhZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 7857d5af756032e4900dba8e1ff9d6d26ae54cc8\nparent 979f59850c72624137d25f80be4188c3ba6b5fa0\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1523525071 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1523525071 +0900\n\nmempool: Add mempool based fee rate calculation\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ef27a2af8eba1b6032231daa72f0003c39dd3f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ef27a2af8eba1b6032231daa72f0003c39dd3f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ef27a2af8eba1b6032231daa72f0003c39dd3f9/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "979f59850c72624137d25f80be4188c3ba6b5fa0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/979f59850c72624137d25f80be4188c3ba6b5fa0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/979f59850c72624137d25f80be4188c3ba6b5fa0"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "15874ed074e1cd79df7a4ad4eb00986fc6e6a9ab",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ef27a2af8eba1b6032231daa72f0003c39dd3f9/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ef27a2af8eba1b6032231daa72f0003c39dd3f9/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=2ef27a2af8eba1b6032231daa72f0003c39dd3f9",
        "patch": "@@ -878,6 +878,21 @@ void CTxMemPool::ClearPrioritisation(const uint256 hash)\n     mapDeltas.erase(hash);\n }\n \n+CFeeRate CTxMemPool::CalculateFeeRate(double portion) const\n+{\n+    LOCK(cs);\n+    auto iters = GetSortedDepthAndScore();\n+\n+    uint64_t weight = 0; // weight of hypothetical block\n+    uint64_t target = MAX_BLOCK_WEIGHT * portion; // at what weight do we want to \"bump\"\n+    for (const auto& it : iters) {\n+        weight += it->GetTxWeight();\n+        if (weight >= target) return CFeeRate(it->GetFee(), it->GetTxSize());\n+        printf(\"- %llu: %s\\n\", weight, CFeeRate(it->GetFee(), it->GetTxSize()).ToString().c_str());\n+    }\n+    return CFeeRate(1000);\n+}\n+\n bool CTxMemPool::HasNoInputsOf(const CTransaction &tx) const\n {\n     for (unsigned int i = 0; i < tx.vin.size(); i++)"
      },
      {
        "sha": "6027c54f0eadf19165e053abc8795625d7148196",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ef27a2af8eba1b6032231daa72f0003c39dd3f9/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ef27a2af8eba1b6032231daa72f0003c39dd3f9/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=2ef27a2af8eba1b6032231daa72f0003c39dd3f9",
        "patch": "@@ -564,6 +564,13 @@ class CTxMemPool\n     void ApplyDelta(const uint256 hash, CAmount &nFeeDelta) const;\n     void ClearPrioritisation(const uint256 hash);\n \n+    /**\n+     * Calculate the fee rate required to bump out `portion` (0..1) portion\n+     * of other transactions currently in the mempool from a hypothetical\n+     * new block.\n+     */\n+    CFeeRate CalculateFeeRate(double portion) const;\n+\n public:\n     /** Remove a set of transactions from the mempool.\n      *  If a transaction is in this set, then all in-mempool descendants must"
      }
    ]
  },
  {
    "sha": "2843c8a0d2e824e7c32bd916db6fcb25a242971a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODQzYzhhMGQyZTgyNGU3YzMyYmQ5MTZkYjZmY2IyNWEyNDI5NzFh",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-12T09:25:05Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-12T09:25:05Z"
      },
      "message": "policy: Add new mempool_optimized flag to estimateSmartFee",
      "tree": {
        "sha": "b4a0ac964fa3cb99e02111c54926013d4f89be49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4a0ac964fa3cb99e02111c54926013d4f89be49"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2843c8a0d2e824e7c32bd916db6fcb25a242971a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlrPJfEACgkQV692LbM1\nMyKPqQ//ZuL7ClOyUDS3HWXlHbwk5SqIacKPc7O+efWHWOd+v8udyJxijERy4hos\n+mYZaEMu1AgQdZrXD8KRy8EvZzhHX5Dyg9lG9VV0QKJUWIcGdWzaO118OdvdBp6j\nsqP2O5OTeEgZ83nhuYIdfYRh29Ng++fC7QwimhW08U9OT0cRgqZQ80pLeurzJ3p2\nMALK8mNX50R3hgh8Q9mslWlxEUE1IivMvj8z8Ajb1BuYYgKHzAIGBAPHCcpBH4UT\nKkF1bbBTB9nD8JTJZRQa7JnBifTfw7XU8oeQ+Kqjq18Gm3OpQpht2tq9s2prS76m\n69D8bSk5HwK9pVRI2zwsmTSB1HImE+f49C2rId2xntGzDsgSG6q3ZJH72O/VpzoZ\nUWTUjCQTK49q6XYZB6Bmg2Me0G2FpdysqENgwALx/xOR6yRGosOAnXARhGiIYUWh\nt9EMnfR9iDlB5jL1O+YSKqA2kIFZmhGbYRwgGASWKtHSujgB1wHeiy3Tc4NaVeAo\nfsol+164C4Oh6zcDfDv/JbZgWPGqG9OMq3VLdfJDcOhylCmbmCnhOYjJAJ6V4ov/\nlUblb9EFiMBHtb8JlC4X0+E1awXSMKWoL7Zis9cjbrrHu3SC7yxSOWhm2otLfrzz\n5RlXowOtWY7A6dKc0ssklDNczFY+V7Awtzii2FNITFp5zHecRaQ=\n=fctS\n-----END PGP SIGNATURE-----",
        "payload": "tree b4a0ac964fa3cb99e02111c54926013d4f89be49\nparent 2ef27a2af8eba1b6032231daa72f0003c39dd3f9\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1523525105 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1523525105 +0900\n\npolicy: Add new mempool_optimized flag to estimateSmartFee\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2843c8a0d2e824e7c32bd916db6fcb25a242971a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2843c8a0d2e824e7c32bd916db6fcb25a242971a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2843c8a0d2e824e7c32bd916db6fcb25a242971a/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ef27a2af8eba1b6032231daa72f0003c39dd3f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ef27a2af8eba1b6032231daa72f0003c39dd3f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ef27a2af8eba1b6032231daa72f0003c39dd3f9"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9091a96a5c405d233d33698ea86c7ac168890a05",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2843c8a0d2e824e7c32bd916db6fcb25a242971a/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2843c8a0d2e824e7c32bd916db6fcb25a242971a/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=2843c8a0d2e824e7c32bd916db6fcb25a242971a",
        "patch": "@@ -11,6 +11,7 @@\n #include <streams.h>\n #include <txmempool.h>\n #include <util.h>\n+#include <validation.h>\n \n static constexpr double INF_FEERATE = 1e99;\n \n@@ -817,7 +818,7 @@ double CBlockPolicyEstimator::estimateConservativeFee(unsigned int doubleTarget,\n  * estimates, however, required the 95% threshold at 2 * target be met for any\n  * longer time horizons also.\n  */\n-CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, FeeCalculation *feeCalc, bool conservative) const\n+CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, FeeCalculation *feeCalc, bool conservative, bool mempool_optimized) const\n {\n     LOCK(cs_feeEstimator);\n \n@@ -834,6 +835,11 @@ CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, FeeCalculation\n         return CFeeRate(0);  // error condition\n     }\n \n+    CFeeRate mp_feerate(0);\n+    if (mempool_optimized) {\n+        mp_feerate = mempool.CalculateFeeRate((0.1 + conservative * 0.05) * std::max(0.5, 1.0 - (double)confTarget / 10));\n+    }\n+\n     // It's not possible to get reasonable estimates for confTarget of 1\n     if (confTarget == 1) confTarget = 2;\n \n@@ -892,7 +898,10 @@ CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, FeeCalculation\n \n     if (median < 0) return CFeeRate(0); // error condition\n \n-    return CFeeRate(llround(median));\n+    CFeeRate result = CFeeRate(llround(median));\n+    printf(\"result:\\n- baseline: %s\\n\"\n+                    \"- mempool:  %s\\n\", result.ToString().c_str(), mp_feerate.ToString().c_str());\n+    return mempool_optimized && mp_feerate != CFeeRate(0) && mp_feerate < result ? mp_feerate : result;\n }\n \n "
      },
      {
        "sha": "31690f3ac775ccf37bb9b1cc675f4f38ca8ea8be",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2843c8a0d2e824e7c32bd916db6fcb25a242971a/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2843c8a0d2e824e7c32bd916db6fcb25a242971a/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=2843c8a0d2e824e7c32bd916db6fcb25a242971a",
        "patch": "@@ -209,7 +209,7 @@ class CBlockPolicyEstimator\n      *  the closest target where one can be given.  'conservative' estimates are\n      *  valid over longer time horizons also.\n      */\n-    CFeeRate estimateSmartFee(int confTarget, FeeCalculation *feeCalc, bool conservative) const;\n+    CFeeRate estimateSmartFee(int confTarget, FeeCalculation *feeCalc, bool conservative, bool mempool_optimized = false) const;\n \n     /** Return a specific fee estimate calculation with a given success\n      * threshold and time horizon, and optionally return detailed data about"
      }
    ]
  },
  {
    "sha": "158b0c9b082680fbb8145b6ecdb01ca0309f2f01",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNThiMGM5YjA4MjY4MGZiYjgxNDViNmVjZGIwMWNhMDMwOWYyZjAx",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-12T09:25:44Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-12T09:47:57Z"
      },
      "message": "rpc: Add mempool optimization support to estimatesmartfee RPC",
      "tree": {
        "sha": "056c2d6e8b241158b491d8d54836171a0db1617b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/056c2d6e8b241158b491d8d54836171a0db1617b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/158b0c9b082680fbb8145b6ecdb01ca0309f2f01",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlrPK00ACgkQV692LbM1\nMyKyDA/+OZ1dyeNqEMp9p+ocpbajsHLiOjY5JsucrnNuSBVa6qjzPYEqBpXRawOq\n9O4mRDSe0JNPHaZzLx2S3bRt26N+MTyt5T0JaOQK8bZzATM5j3ucqBlj4NiuNTSz\nSLhCeSatqOR6hCW0eREeJJwgDv6Xnb3Ek/HBgEnp+SBkyNVx4G7LU42Wvalsw7l1\nqIG8dpRbtXVwoC8O0ZqL+xn4646dC4yc71783MPQ4aZWjVPstek7xFDGrX/5x1Nc\nN9Kkr6b3tIkn9koR0q64/fLBfsUXEYeHkQc7WgXTvueEClv2PnspArKyESVcUPC4\n/a2EQIxZDbMiFphu7fwMMqAoVlemHfwzSNfqF8uq2LXn2R74MASmMPOwuGpI6g0K\n+DDenhFG321DzEEJKDaXSVFVPzdYK2jCJcqL6+fb39+4IZPEpbgXOyHCCUUbVRJo\nm4ClfUyslZjqUpAReZGWXDNtT6dh8Thinifw6mh6GSnaICD6vEFUv8+w21TkS/ql\ngG8qKhwEh60HWdh8dBGx/GR85dk3jYepLQcwd7BBMGQ7ymjzRgWOOI6p9JMoERJs\np/k7tBT40VMpSVJTs8D8Ib8w/4KcZZproweJ4IkyLbLwTcPQVmzPBpNvbiiQfHxV\nFcJWIO4Fy5TVT9OPWa8cvAbpzwktrNQsC2SGLC9u2cgVfbtPt/o=\n=HX4s\n-----END PGP SIGNATURE-----",
        "payload": "tree 056c2d6e8b241158b491d8d54836171a0db1617b\nparent 2843c8a0d2e824e7c32bd916db6fcb25a242971a\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1523525144 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1523526477 +0900\n\nrpc: Add mempool optimization support to estimatesmartfee RPC\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/158b0c9b082680fbb8145b6ecdb01ca0309f2f01",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/158b0c9b082680fbb8145b6ecdb01ca0309f2f01",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/158b0c9b082680fbb8145b6ecdb01ca0309f2f01/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2843c8a0d2e824e7c32bd916db6fcb25a242971a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2843c8a0d2e824e7c32bd916db6fcb25a242971a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2843c8a0d2e824e7c32bd916db6fcb25a242971a"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 10,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4978bd7fd8e9ec4df4b06e8bb3a92755e32646a0",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/158b0c9b082680fbb8145b6ecdb01ca0309f2f01/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/158b0c9b082680fbb8145b6ecdb01ca0309f2f01/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=158b0c9b082680fbb8145b6ecdb01ca0309f2f01",
        "patch": "@@ -126,6 +126,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"keypoolrefill\", 0, \"newsize\" },\n     { \"getrawmempool\", 0, \"verbose\" },\n     { \"estimatesmartfee\", 0, \"conf_target\" },\n+    { \"estimatesmartfee\", 2, \"mempool_optimized\" },\n     { \"estimaterawfee\", 0, \"conf_target\" },\n     { \"estimaterawfee\", 1, \"threshold\" },\n     { \"prioritisetransaction\", 1, \"dummy\" },"
      },
      {
        "sha": "d72a6d99540eb8217b5bec74a2e5303a4093c8ca",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/158b0c9b082680fbb8145b6ecdb01ca0309f2f01/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/158b0c9b082680fbb8145b6ecdb01ca0309f2f01/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=158b0c9b082680fbb8145b6ecdb01ca0309f2f01",
        "patch": "@@ -772,9 +772,9 @@ UniValue estimatefee(const JSONRPCRequest& request)\n \n UniValue estimatesmartfee(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"estimatesmartfee conf_target (\\\"estimate_mode\\\")\\n\"\n+            \"estimatesmartfee conf_target (\\\"estimate_mode\\\" mempool_optimized)\\n\"\n             \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n             \"confirmation within conf_target blocks if possible and return the number of blocks\\n\"\n             \"for which the estimate is valid. Uses virtual transaction size as defined\\n\"\n@@ -790,6 +790,9 @@ UniValue estimatesmartfee(const JSONRPCRequest& request)\n             \"       \\\"UNSET\\\" (defaults to CONSERVATIVE)\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n             \"       \\\"CONSERVATIVE\\\"\\n\"\n+            \"3. mempool_optimized (boolean, optional, defaults to false) Use the mempool data to optimize\\n\"\n+            \"                     the fee (note: use of Replace-By-Fee is strongly recommended, as transactions\\n\"\n+            \"                     may get stuck due to a too optimistic fee rate).\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"feerate\\\" : x.x,     (numeric, optional) estimate fee rate in \" + CURRENCY_UNIT + \"/kB\\n\"\n@@ -805,10 +808,11 @@ UniValue estimatesmartfee(const JSONRPCRequest& request)\n             + HelpExampleCli(\"estimatesmartfee\", \"6\")\n             );\n \n-    RPCTypeCheck(request.params, {UniValue::VNUM, UniValue::VSTR});\n+    RPCTypeCheck(request.params, {UniValue::VNUM, UniValue::VSTR, UniValue::VBOOL});\n     RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n     unsigned int conf_target = ParseConfirmTarget(request.params[0]);\n     bool conservative = true;\n+    bool mempool_optimized = !request.params[2].isNull() && request.params[2].get_bool();\n     if (!request.params[1].isNull()) {\n         FeeEstimateMode fee_mode;\n         if (!FeeModeFromString(request.params[1].get_str(), fee_mode)) {\n@@ -820,7 +824,7 @@ UniValue estimatesmartfee(const JSONRPCRequest& request)\n     UniValue result(UniValue::VOBJ);\n     UniValue errors(UniValue::VARR);\n     FeeCalculation feeCalc;\n-    CFeeRate feeRate = ::feeEstimator.estimateSmartFee(conf_target, &feeCalc, conservative);\n+    CFeeRate feeRate = ::feeEstimator.estimateSmartFee(conf_target, &feeCalc, conservative, mempool_optimized);\n     if (feeRate != CFeeRate(0)) {\n         result.pushKV(\"feerate\", ValueFromAmount(feeRate.GetFeePerK()));\n     } else {\n@@ -946,7 +950,7 @@ static const CRPCCommand commands[] =\n     { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      {\"nblocks\",\"address\",\"maxtries\"} },\n \n     { \"hidden\",             \"estimatefee\",            &estimatefee,            {} },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       {\"conf_target\", \"estimate_mode\"} },\n+    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       {\"conf_target\", \"estimate_mode\", \"mempool_optimized\"} },\n \n     { \"hidden\",             \"estimaterawfee\",         &estimaterawfee,         {\"conf_target\", \"threshold\"} },\n };"
      }
    ]
  },
  {
    "sha": "e1586bca7ed2ea09e23c83861a5af718c350031b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTU4NmJjYTdlZDJlYTA5ZTIzYzgzODYxYTVhZjcxOGMzNTAwMzFi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-13T09:46:53Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-13T09:46:53Z"
      },
      "message": "f'max weight should go up by lower portion, not down",
      "tree": {
        "sha": "67e1a0de5f55d3a4ed5b1c889e7fa5712469861d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67e1a0de5f55d3a4ed5b1c889e7fa5712469861d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1586bca7ed2ea09e23c83861a5af718c350031b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlrQfI0ACgkQV692LbM1\nMyK0hxAAgNlJ4dAZNTmjA2FLsscU4YnWOsztUHhb6aq5fnfXrifgov234eFXq8tQ\nuMRvVXwcVCJyLHtIxcJ43Lht4AXT0n/5El5mF+161duBXCjFDjbVxF2ZoChzNe0w\nztVOD2PjznpUgxrrJ/xsU1msTjFWWNlSG+EDZ/RIBUxrW4fi2TlseoxBgzrLBO+B\ni+k7JyRml1/t9YOTucDZ6k5eAo7NSTFBjeKLQvndItQvWMKJJ2tEv71H4whVzKgR\nzmASavFd1ha1jGqjGFv0K8SFY1IzNKmc6uHrCL6H3X9UsCGNA3hW1h3vyBtjHNdP\nzY6Wx8FDsLMf44FqGpAvniZa2PifOzgRklfRP7COyahQhEVPhwEUgyLIpzDGEleT\n25w6g7xz2uvca1js8yhAKekgqcwhE1ke8hDPCVgE3rekynURmkdTYYAQtes7lh0Z\nWkEtVNntHcH4f0NRZEWtbmDUFH/b80DuGYc4FIhdjnPGplQzM3pUKd4jphGyKXql\nqUdATNxlhMy3SMPBQ/MtCnr8vgjkaEADO2HVK14/atW1FLUWNRCMFlmg05hP705Y\nl7wp0CnSKqw40bVZAJEH6W3KS7nKjIb21DqKJG+VSFgdKPmYH29GHpeWhCEmUWmW\n9A5jii65875MbXdS/aasnN+4x1Ovfb3LbNV07Ft2LczqjvYl4UE=\n=soGl\n-----END PGP SIGNATURE-----",
        "payload": "tree 67e1a0de5f55d3a4ed5b1c889e7fa5712469861d\nparent 158b0c9b082680fbb8145b6ecdb01ca0309f2f01\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1523612813 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1523612813 +0900\n\nf'max weight should go up by lower portion, not down\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1586bca7ed2ea09e23c83861a5af718c350031b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1586bca7ed2ea09e23c83861a5af718c350031b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1586bca7ed2ea09e23c83861a5af718c350031b/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "158b0c9b082680fbb8145b6ecdb01ca0309f2f01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/158b0c9b082680fbb8145b6ecdb01ca0309f2f01",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/158b0c9b082680fbb8145b6ecdb01ca0309f2f01"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7d71f9d2d621bcb6699aa5a19fb017baca26152b",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1586bca7ed2ea09e23c83861a5af718c350031b/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1586bca7ed2ea09e23c83861a5af718c350031b/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=e1586bca7ed2ea09e23c83861a5af718c350031b",
        "patch": "@@ -884,7 +884,7 @@ CFeeRate CTxMemPool::CalculateFeeRate(double portion) const\n     auto iters = GetSortedDepthAndScore();\n \n     uint64_t weight = 0; // weight of hypothetical block\n-    uint64_t target = MAX_BLOCK_WEIGHT * portion; // at what weight do we want to \"bump\"\n+    uint64_t target = MAX_BLOCK_WEIGHT * (1.0 - portion); // at what weight do we want to \"bump\"\n     for (const auto& it : iters) {\n         weight += it->GetTxWeight();\n         if (weight >= target) return CFeeRate(it->GetFee(), it->GetTxSize());"
      }
    ]
  }
]