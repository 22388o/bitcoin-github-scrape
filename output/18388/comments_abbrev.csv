DrahtBot,2020-03-20 00:12:54,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18267 (BIP-325: Signet [consensus] by kallewoof)\n* #17977 ([WIP] Implement BIP 340-342 validation (Schnorr/taproot/tapsc",https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-601473337,601473337,
instagibbs,2020-03-20 18:54:18,"utACK https://github.com/bitcoin/bitcoin/pull/18388/commits/c7b0131e3bc784263ce59c837be7d3ede59c45cd\n\nwondering if there's some short-hand we could do to ""split"" the `Span`s or something like `pop_back` which also returns the popped element since that seems to be a common use-case of it now and going forward.",https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-601860879,601860879,
sipa,2020-03-20 18:57:10,"@instagibbs No reason why a `pop_back` couldn't be added to `Span`, but since C++20's `std::span` doesn't have it, I'd rather not in order to maintain compatibility. Maybe a utility function `T& PopSpan(Span<T>& span)` is useful (which pops, and returns the popped element).",https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-601862071,601862071,
instagibbs,2020-03-20 18:59:58,@sipa took the words right out of my mouth :) I think the latter is perfect for our use-case,https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-601863262,601863262,
sipa,2020-03-21 01:30:19,@instagibbs Done.,https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-601974046,601974046,
instagibbs,2020-03-21 12:25:34,utACK https://github.com/bitcoin/bitcoin/pull/18388/commits/ef540f796adef1f128584bd073076062585f0bd9,https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-602037091,602037091,
elichai,2020-03-23 22:13:50,ReACK on the diff 2b0fcff7f26d59fed4bcafd1602325122a206c67,https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-602884790,602884790,
ajtowns,2020-03-24 05:06:15,ACK 2b0fcff7f26d59fed4bcafd1602325122a206c67,https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-603018019,603018019,
theStack,2020-03-24 06:37:52,re-ACK https://github.com/bitcoin/bitcoin/commit/2b0fcff7f26d59fed4bcafd1602325122a206c67 ,https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-603045982,603045982,
instagibbs,2020-03-24 17:37:09,re-ACK https://github.com/bitcoin/bitcoin/pull/18388/commits/2b0fcff7f26d59fed4bcafd1602325122a206c67,https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-603396538,603396538,
Empact,2020-03-26 18:24:43,ACK https://github.com/bitcoin/bitcoin/commit/2b0fcff7f26d59fed4bcafd1602325122a206c67,https://github.com/bitcoin/bitcoin/pull/18388#issuecomment-604599192,604599192,
elichai,2020-03-22 10:41:39,"nit, missing space(git-clang-format)\n```suggestion\ntemplate <typename T>\n```",https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396078418,396078418,src/span.h
promag,2020-03-23 12:01:36,assert size > 0?,https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396399862,396399862,src/span.h
promag,2020-03-23 12:04:20,No strong opinion but maybe assert in these?,https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396401215,396401215,src/span.h
elichai,2020-03-23 12:26:56,FWIW the stl version currently in gcc trunk doesn't assert anything(as usual in stl) https://godbolt.org/z/QNytT8,https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396412988,396412988,src/span.h
instagibbs,2020-03-23 14:51:48,for size checks? It's UB in stl so I figure just keep that behavior eh?,https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396509541,396509541,src/span.h
sipa,2020-03-23 20:25:05,"I'd rather not add asserts here. `std::span` doesn't have them, so if we're expecting to someday replace `Span` with that, it should be subject to the same interface. And that interface requires the caller to make sure values are not out of range.\n\nSpans may also be used in pretty tight loops some day, in which case asserts may be actually undesirable.",https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396734522,396734522,src/span.h
promag,2020-03-23 20:51:33,"Makes sense, you can resolve this.",https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396748550,396748550,src/span.h
sipa,2020-03-23 21:45:13,Ok.,https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396775577,396775577,src/span.h
sipa,2020-03-23 21:45:20,Ok.,https://github.com/bitcoin/bitcoin/pull/18388#discussion_r396775626,396775626,src/span.h
jnewbery,2020-03-24 19:14:30,"Note for reviewers: these functions `front()` and `back()` are no longer used in this PR, but are used in the taproot implementation, so there's no harm in including them here.",https://github.com/bitcoin/bitcoin/pull/18388#discussion_r397399885,397399885,src/span.h
