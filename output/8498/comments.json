[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244140141",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-244140141",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 244140141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDE0MDE0MQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T16:47:45Z",
    "updated_at": "2016-09-01T16:47:45Z",
    "author_association": "MEMBER",
    "body": "Needed rebase. Besides, the previous version contained a bug.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/244140141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264620779",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-264620779",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 264620779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDYyMDc3OQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-03T06:26:39Z",
    "updated_at": "2016-12-03T06:26:39Z",
    "author_association": "MEMBER",
    "body": "Needed rebase after renaming main.o, see #9260 (although needed, the rebase was clean in this case)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264620779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/294978323",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-294978323",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 294978323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDk3ODMyMw==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T20:51:11Z",
    "updated_at": "2017-04-19T15:58:56Z",
    "author_association": "MEMBER",
    "body": "Added a commit that may make @dcousens happier or not, thanks for making me remember.\r\n\r\nEDIT: I would be also be happy to take the function out of the consensus namespace \"for free\" here. That was a mistake on my part.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/294978323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/302606393",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-302606393",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 302606393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjYwNjM5Mw==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-19T04:36:47Z",
    "updated_at": "2017-05-19T04:36:47Z",
    "author_association": "MEMBER",
    "body": "Needed rebase, hopefully fixed all nits.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/302606393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/303505331",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-303505331",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 303505331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzUwNTMzMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T19:24:12Z",
    "updated_at": "2017-05-23T19:24:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tests for this PR seem to be failing currently, maybe due to the SpendHeight change?\r\n\r\nOnly changes since my previous review were rebasing post-#8329 and the nFees and nSpendHeight changes commented on above.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/303505331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/304961989",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-304961989",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 304961989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDk2MTk4OQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T18:11:10Z",
    "updated_at": "2017-05-30T18:11:10Z",
    "author_association": "MEMBER",
    "body": "Yes, the problem was in that change but not on stop using GetSpendHeight, just added +1 to the height by mistake. Updated.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/304961989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305661391",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-305661391",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 305661391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY2MTM5MQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T01:06:50Z",
    "updated_at": "2017-06-02T01:06:50Z",
    "author_association": "MEMBER",
    "body": "Needed rebase after #10195, it also needs more review now (AcceptToMemoryPoolWorker may return different DoS pnctuation [100 instead of 0] now, happy to fix if that's a problem).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/305661391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307230847",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-307230847",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 307230847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzIzMDg0Nw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T21:20:46Z",
    "updated_at": "2017-06-08T21:20:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some discussion of this in IRC https://botbot.me/freenode/bitcoin-core-dev/msg/87002756/",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307230847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310877612",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-310877612",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 310877612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg3NzYxMg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-25T02:19:18Z",
    "updated_at": "2017-06-25T02:19:18Z",
    "author_association": "MEMBER",
    "body": "Hopefully fixed @sdaftuar 's nits.\r\nAlso add a third commit to properly indent CheckTxInputs and other minor style fixes like braces for one line ifs while at it.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310877612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311261974",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-311261974",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 311261974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTI2MTk3NA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-27T06:05:41Z",
    "updated_at": "2017-06-27T06:47:35Z",
    "author_association": "MEMBER",
    "body": "Added a couple of commits to be squashed. I wouldn't personally squash the latter but it seems @sdaftuar and @sipa would like it more this way and I don't care. Before squashing I will also move the indentation commit to the first thing.\r\n\r\nEDIT: already squashed one, updated OP.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311261974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312911862",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-312911862",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 312911862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjkxMTg2Mg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-04T16:05:43Z",
    "updated_at": "2017-07-04T16:05:43Z",
    "author_association": "MEMBER",
    "body": "Squashed the non-accumulator commit.\r\nHopefully fixed all @TheBlueMatt 's nits, good catch.\r\nAlso s/nTxFee/tx_fees/ to comply with the new style.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312911862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314935270",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-314935270",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 314935270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDkzNTI3MA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T00:29:45Z",
    "updated_at": "2017-07-13T00:29:45Z",
    "author_association": "MEMBER",
    "body": "Fixed latest nit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314935270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324760765",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-324760765",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 324760765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDc2MDc2NQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-24T21:19:38Z",
    "updated_at": "2017-08-24T21:19:38Z",
    "author_association": "MEMBER",
    "body": "Hopefully fixed @jimpo 's nit. Didn't squashed yet just in case, but it seems pretty obviously correct in removing a redundancy that cannot be tested and thus is not being tested.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/324760765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327012549",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-327012549",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 327012549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzAxMjU0OQ==",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?u=0e901471205a3304684bac0a4e6e72a842f64c94&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-04T18:29:35Z",
    "updated_at": "2017-09-04T18:29:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtimon The \"More motivation\" link https://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L1493 is broken",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327012549/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327334229",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-327334229",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 327334229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzMzNDIyOQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T23:47:29Z",
    "updated_at": "2017-09-05T23:47:29Z",
    "author_association": "MEMBER",
    "body": "Fixed @promag 's nits (except one to avoid further disruption, in this case only for style).\r\nFixed @danra 's nit by crossing the broken list in the OP (too lazy to look after some concept and ut acks, sorry. I believe there's enough motivation without the broken link, which I don't remember what was about right now).\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327334229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327650854",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-327650854",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 327650854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzY1MDg1NA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T00:48:16Z",
    "updated_at": "2017-09-07T00:48:16Z",
    "author_association": "MEMBER",
    "body": "Fixed @promag 's last round of nits, thanks again.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327650854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330986316",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-330986316",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 330986316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDk4NjMxNg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-20T21:28:07Z",
    "updated_at": "2017-09-20T21:28:07Z",
    "author_association": "MEMBER",
    "body": "Fixed 1 commit by @danra ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/330986316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331279617",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-331279617",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 331279617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTI3OTYxNw==",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?u=0e901471205a3304684bac0a4e6e72a842f64c94&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-21T20:56:57Z",
    "updated_at": "2017-09-21T20:56:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/331279617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334010307",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#issuecomment-334010307",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8498",
    "id": 334010307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDAxMDMwNw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T23:41:47Z",
    "updated_at": "2017-10-03T23:41:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-utACK 4e955c58e13cfe089208f6b23b195d395ad99baa",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334010307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/74368316",
    "pull_request_review_id": null,
    "id": 74368316,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0MzY4MzE2",
    "diff_hunk": "@@ -1923,16 +1923,14 @@ int GetSpendHeight(const CCoinsViewCache& inputs)\n     return pindexPrev->nHeight + 1;\n }\n \n-namespace Consensus {\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx))\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "03d0f762f2de9d01750e96893555ac500e3c9a37",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: weird spacing here?\n",
    "created_at": "2016-08-11T04:48:27Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r74368316",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/74368316"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r74368316"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/74368316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1931,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/74481846",
    "pull_request_review_id": null,
    "id": 74481846,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NDgxODQ2",
    "diff_hunk": "@@ -1923,16 +1923,14 @@ int GetSpendHeight(const CCoinsViewCache& inputs)\n     return pindexPrev->nHeight + 1;\n }\n \n-namespace Consensus {\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx))\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "03d0f762f2de9d01750e96893555ac500e3c9a37",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, that's how the editor indented by default. That's actually what we have in some other places, but having a glance searching for strprintf in main.cpp I see we're not being consistent with indentation of function calls broken into several lines\n\nExample from the opening parenthesis position:\nhttps://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L1354\nExample 4 spaces from the beginning:\nhttps://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L1110\nExample freestyle: \nhttps://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L1436\n\nI'm happy to change it for something else, this maybe?\n\n```\n        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n            strprintf(\"%s: inputs missing/spent\", __func__));\n```\n\nEDIT: Actually the indentation is the same as from the place it's taken from: https://github.com/bitcoin/bitcoin/pull/8498/files#diff-7ec3c68a81efff79b6ca22ac1f1eabbaL2417\n",
    "created_at": "2016-08-11T18:55:25Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r74481846",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/74481846"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r74481846"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/74481846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1931,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110544416",
    "pull_request_review_id": 31726387,
    "id": 110544416,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDU0NDQxNg==",
    "diff_hunk": "@@ -646,18 +646,20 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n             }\n         }\n \n-        // are the actual inputs available?\n+        // This redundant check doesn't trigger the DoS code on purpose; if it did, it would make it easier\n+        // for an attacker to attempt to split the network (Consensus::CheckTxInputs also checks this).",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "c93d1cf269212c493de56276370049f7b9a1d2bb",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you can change the `view.HaveInputs(tx)` below into a `Consensus::CheckTxInputs` call, doing some of the checks slightly earlier.",
    "created_at": "2017-04-09T15:07:38Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r110544416",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110544416"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r110544416"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110544416/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 461,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110555687",
    "pull_request_review_id": 31737099,
    "id": 110555687,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDU1NTY4Nw==",
    "diff_hunk": "@@ -1318,16 +1318,14 @@ int GetSpendHeight(const CCoinsViewCache& inputs)\n     return pindexPrev->nHeight + 1;\n }\n \n-namespace Consensus {\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees)",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "c93d1cf269212c493de56276370049f7b9a1d2bb",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Rather than forcing a bogus `nFees` (or unused) everywhere,  just wrap this function with an overload containing an unused `nFees` stack variable.\r\n\r\nSimpler.  Less diff.\r\n\r\nAlso means anyone reviewing at some later date won't get confused as to whether `nFees` is _actually_ used or not.",
    "created_at": "2017-04-09T23:12:57Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r110555687",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110555687"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r110555687"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/110555687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1313,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112045794",
    "pull_request_review_id": 33331312,
    "id": 112045794,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjA0NTc5NA==",
    "diff_hunk": "@@ -646,18 +646,20 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n             }\n         }\n \n-        // are the actual inputs available?\n+        // This redundant check doesn't trigger the DoS code on purpose; if it did, it would make it easier\n+        // for an attacker to attempt to split the network (Consensus::CheckTxInputs also checks this).",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "c93d1cf269212c493de56276370049f7b9a1d2bb",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps the ~~new~~ comment could be clearer, but the ```view.HaveInputs(tx)``` check below sets ```state.DoS(0, ...)``` instead of ```state.DoS(100, ...)``` like ```Consensus::CheckTxInputs```  would do.\r\nFeel more than free to rephrase it in a way that would have been more clear to you.",
    "created_at": "2017-04-18T19:43:22Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r112045794",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112045794"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r112045794"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112045794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 461,
    "side": "RIGHT",
    "in_reply_to_id": 110544416
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112049225",
    "pull_request_review_id": 33335259,
    "id": 112049225,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjA0OTIyNQ==",
    "diff_hunk": "@@ -1318,16 +1318,14 @@ int GetSpendHeight(const CCoinsViewCache& inputs)\n     return pindexPrev->nHeight + 1;\n }\n \n-namespace Consensus {\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees)",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "c93d1cf269212c493de56276370049f7b9a1d2bb",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The only place where this makes sense is in txmempool.cpp. There you can do a much nicer wrapper there. The diff won't be smaller in total but there will be more lines in red (which people tend to like). I considered this before and I rembember @sipa said it would be fine to just remove the check in txmempool.cpp but I can't find the comment and he changed his mind about it. I will rewrite this for you to see and I'm happy to squash it.",
    "created_at": "2017-04-18T20:00:35Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r112049225",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112049225"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r112049225"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/112049225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1313,
    "side": "RIGHT",
    "in_reply_to_id": 110555687
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/115339497",
    "pull_request_review_id": 36870482,
    "id": 115339497,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTMzOTQ5Nw==",
    "diff_hunk": "@@ -624,7 +624,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         CCoinsView dummy;\n         CCoinsViewCache view(&dummy);\n \n-        CAmount nValueIn = 0;\n+        CAmount nFees = 0;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "dd733d06d81032e95a22ef5b634e2c0bf4248bd5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Optimization: Minimize the number of times it is checked\"\r\n\r\nWould be good to declare nFees below close to where it is actually used.",
    "created_at": "2017-05-08T20:03:16Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r115339497",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/115339497"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r115339497"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/115339497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 627,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/115353716",
    "pull_request_review_id": 36870482,
    "id": 115353716,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTM1MzcxNg==",
    "diff_hunk": "@@ -1820,6 +1814,8 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     blockundo.vtxundo.reserve(block.vtx.size() - 1);\n     std::vector<PrecomputedTransactionData> txdata;\n     txdata.reserve(block.vtx.size()); // Required so that pointers to individual PrecomputedTransactionData don't get invalidated\n+    const int nHeight = pindex->pprev == NULL ? 0 : pindex->pprev->nHeight + 1;\n+    const int64_t nSpendHeight = block.vtx.size() > 1 ? GetSpendHeight(view) : nHeight;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 85,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "dd733d06d81032e95a22ef5b634e2c0bf4248bd5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Optimization: Minimize the number of times it is checked\"\r\n\r\nCan you add a comment explaining this line? Why do transactions in a block with vtx.size() of >= 2 have a different spend height than transactions in a block with vtx.size() == 1? Is nSpendHeight even used in a block with vtx.size() == 1?",
    "created_at": "2017-05-08T21:08:40Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r115353716",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/115353716"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r115353716"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/115353716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1818,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117328308",
    "pull_request_review_id": 39028185,
    "id": 117328308,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzMyODMwOA==",
    "diff_hunk": "@@ -1820,6 +1814,8 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     blockundo.vtxundo.reserve(block.vtx.size() - 1);\n     std::vector<PrecomputedTransactionData> txdata;\n     txdata.reserve(block.vtx.size()); // Required so that pointers to individual PrecomputedTransactionData don't get invalidated\n+    const int nHeight = pindex->pprev == NULL ? 0 : pindex->pprev->nHeight + 1;\n+    const int64_t nSpendHeight = block.vtx.size() > 1 ? GetSpendHeight(view) : nHeight;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 85,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "dd733d06d81032e95a22ef5b634e2c0bf4248bd5",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If the block only has the coinbase tx before GetSpendHeight(view)  would have not been called at all and starting doing so seems unnecessarily costly, see https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L1306\r\nI was actually hoping that someone suggested to just remove this local variable directly and just use nHeight directly for the coinbase maturity check, assuming that is safe. I think so but would like others to confirm before trying it.",
    "created_at": "2017-05-18T19:04:21Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r117328308",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117328308"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r117328308"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/117328308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1818,
    "side": "RIGHT",
    "in_reply_to_id": 115353716
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122035311",
    "pull_request_review_id": 44115137,
    "id": 122035311,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjAzNTMxMQ==",
    "diff_hunk": "@@ -1622,9 +1619,8 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, nFees))",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "48e308d208995839d3119b40d189bf328a5b6445",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Optimization: Minimize the number of times\"\r\n\r\nIf I understand correctly, it would be more correct to pass `SpendHeight(view)` instead of `pindex->nHeight` as the nSpendHeight argument, but in this case it doesn't matter because the value is only used for coinbase transactions, and this isn't a coinbase transaction? Or maybe there are other reasons why `pindex->nHeight` is ok to pass?\r\n\r\nEither way, I think this is confusing, and that there should be a comment here explaining the `pindex->nHeight` value. Or maybe you could delete the `nSpendHeight` argument and have `CheckTxInputs` call `GetSpendHeight(inputs)` when needed. This seems like it would be a simplification and I don't think there should be a performance cost because `CheckTxInputs` seems to be skipped for coinbase transactions in all cases except for one call that invokes `GetSpendHeight` anyway.",
    "created_at": "2017-06-14T18:54:58Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r122035311",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122035311"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r122035311"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122035311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1622,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122574593",
    "pull_request_review_id": 44705889,
    "id": 122574593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjU3NDU5Mw==",
    "diff_hunk": "@@ -1622,9 +1619,8 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, nFees))",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "48e308d208995839d3119b40d189bf328a5b6445",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it would be more correct (but I'm glad to be corrected) and performance would sufffer.\r\nI think pindex->nHeight because that's actually what we want to validate here. In acceptToMemPool and CTxMemPool::check you don't know the height. Here, nSpendHeight should always be lower or equal to pindex->nHeight.\r\n\r\nI'm happy to add a comment but not sure what it should be. Peharps the comment should be in GetSpendHeight instead of ConnectBlock().\r\n",
    "created_at": "2017-06-17T18:50:51Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r122574593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122574593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r122574593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122574593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1622,
    "side": "RIGHT",
    "in_reply_to_id": 122035311
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123325914",
    "pull_request_review_id": 45518114,
    "id": 123325914,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzMyNTkxNA==",
    "diff_hunk": "@@ -1622,9 +1619,8 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, nFees))",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "48e308d208995839d3119b40d189bf328a5b6445",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I'm happy to add a comment but not sure what it should be.\r\n\r\nComment could just say why it is better to pass pindex->nHeight as nSpendHeight here instead of GetSpendHeight(view). If the two values are always equal, or have some other relation, comment could just say what that relationship is. If this is too in the weeds, definitely feel free to skip this. I'm just suggesting what I think would make the code clearer for me.\r\n\r\nAlternately, I don't know what you think of my suggestion to eliminate the `nSpendHeight` argument and just call `GetSpendHeight` in `CheckTxInputs`. It does look to me like this would be logically equivalent and not effect performance, though maybe there's another reason not to do it.",
    "created_at": "2017-06-21T18:14:10Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123325914",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123325914"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123325914"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123325914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1622,
    "side": "RIGHT",
    "in_reply_to_id": 122035311
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123405843",
    "pull_request_review_id": 45605121,
    "id": 123405843,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzQwNTg0Mw==",
    "diff_hunk": "@@ -1622,9 +1619,8 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, nFees))",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "48e308d208995839d3119b40d189bf328a5b6445",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Part of the optimization here is not calling GetSpendHeight for every tx in the block, and your suggestion would eliminate that part of the optimization.\r\nFor the comment, what about \"We know the height, so we don't need to GetSpendHeight\"?\r\nit if more people agree.\r\nI'm really not sure that comment would add that much value, but I don't mind adding ",
    "created_at": "2017-06-22T01:54:53Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123405843",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123405843"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123405843"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123405843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1622,
    "side": "RIGHT",
    "in_reply_to_id": 122035311
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123744310",
    "pull_request_review_id": 45978893,
    "id": 123744310,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzc0NDMxMA==",
    "diff_hunk": "@@ -24,7 +26,7 @@ namespace Consensus {\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees);",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 14,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it's somewhat confusing that `CheckTxInputs()` will be doing calculations on accumulated fee values, and not just the particular transaction passed in.\r\n\r\nCan we just have `CheckTxInputs` return the fee of the transaction passed in, and then the caller can decide what additional checks should happen?  It would make more sense to me that the `MoneyRange()` check on total block fees happen in `ConnectBlock()`, rather than here (though I do think conceptually that is a reasonable check for us to add).\r\n\r\nAlternatively, if we decide to go with the accumulated fees being checked here, I'd strongly prefer to rename this variable to something like \"accumulated_fees\" to make it clear what this is, and update the documentation to explain it.  But I'd prefer to move the accumulation to the caller, and leave this function as operating on a single transaction.",
    "created_at": "2017-06-23T13:14:00Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123744310",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123744310"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123744310"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123744310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123744780",
    "pull_request_review_id": 45978893,
    "id": 123744780,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzc0NDc4MA==",
    "diff_hunk": "@@ -526,7 +523,12 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // CoinsViewCache instead of create its own\n         if (!CheckSequenceLocks(tx, STANDARD_LOCKTIME_VERIFY_FLAGS, &lp))\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"non-BIP68-final\");\n-        }\n+\n+        } // end LOCK(pool.cs)\n+\n+        CAmount nFees = 0;\n+        if (!Consensus::CheckTxInputs(tx, state, view, GetSpendHeight(view), nFees))",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style nit: braces for one-line `if`",
    "created_at": "2017-06-23T13:16:25Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123744780",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123744780"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123744780"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123744780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 530,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123775376",
    "pull_request_review_id": 45978893,
    "id": 123775376,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzc3NTM3Ng==",
    "diff_hunk": "@@ -201,15 +201,14 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx))",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style nit: braces for one-line if",
    "created_at": "2017-06-23T15:26:16Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123775376",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123775376"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123775376"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123775376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 207,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123777207",
    "pull_request_review_id": 45978893,
    "id": 123777207,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzc3NzIwNw==",
    "diff_hunk": "@@ -1622,9 +1619,8 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, nFees))",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "48e308d208995839d3119b40d189bf328a5b6445",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree with @jtimon that it makes more sense for ConnectBlock to pass in pindex->nHeight, rather than get the spend height from the view, even though those are the same.  We could add an assert that the view's best block has the same hash as pindex->pprev if that makes the code clearer -- but we have bigger problems than just coinbase maturity if the view is out of sync with our chain!",
    "created_at": "2017-06-23T15:34:20Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123777207",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123777207"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123777207"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123777207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1622,
    "side": "RIGHT",
    "in_reply_to_id": 122035311
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123777278",
    "pull_request_review_id": 45978893,
    "id": 123777278,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzc3NzI3OA==",
    "diff_hunk": "@@ -1622,9 +1619,8 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, nFees))",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 57,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style nit: curly braces for one-line if",
    "created_at": "2017-06-23T15:34:40Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123777278",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123777278"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123777278"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123777278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1622,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123887895",
    "pull_request_review_id": 46135995,
    "id": 123887895,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzg4Nzg5NQ==",
    "diff_hunk": "@@ -24,7 +26,7 @@ namespace Consensus {\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees);",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 14,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If the fee is returned, then we can't also return a bool, and we would need to duplicate the check in ConnectBlock, AcceptToMemeoryPool and CTxMemPool::check. And at that point the additional complexity wouldn't be worth it IMO.\r\n\r\nWe could also pass a fees input/output parameter that doesn't accumulate (although you can already enjoy that functionality by simply passing 0 to the variable). In that case, the duplication would only need to duplicateMoneyrange check in ConnectBlock, but I don't really see it as an improvement over this.\r\n \r\nAgreed, accumulated_fees would be more readable with only 2 more lines needing to change",
    "created_at": "2017-06-25T00:23:05Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123887895",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123887895"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r123887895"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/123887895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 123744310
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124069710",
    "pull_request_review_id": 46327834,
    "id": 124069710,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDA2OTcxMA==",
    "diff_hunk": "@@ -22,9 +24,12 @@ namespace Consensus {\n /**\n  * Check whether all inputs of this transaction are valid (no double spends and amounts)\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n+ * @param[in,out] accumulated_fees this serves to get the fees of the tx as output. ",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 13,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "47316266a663a3f18347d625cff9f57deb45fb6c",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: extra space at EOL here.",
    "created_at": "2017-06-26T17:26:51Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124069710",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124069710"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124069710"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124069710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124160827",
    "pull_request_review_id": 46425951,
    "id": 124160827,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDE2MDgyNw==",
    "diff_hunk": "@@ -24,7 +26,7 @@ namespace Consensus {\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees);",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 14,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jtimon You can 'return' the fee in a tuple, or as a pass-by-reference value. So for example `CheckTxInputs` would have `CAmount& return_fee` field, and `return_fee` would just be *assigned* that transaction's fee. The caller can then do the `accumulated_fee += return_fee` logic. This involves no duplication, and still makes `CheckTxInputs` purely operate on data for a single transaction.",
    "created_at": "2017-06-27T01:39:41Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124160827",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124160827"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124160827"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124160827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 123744310
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124178299",
    "pull_request_review_id": 46443942,
    "id": 124178299,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDE3ODI5OQ==",
    "diff_hunk": "@@ -24,7 +26,7 @@ namespace Consensus {\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees);",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 14,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If the concern is that the addition with other fees is not done within the function, as documented the caller can set the in/out argument to zero before calling. I could also always return only the value for the single transaction without accumulating anything (although I don't see the gain, it's just more code), at that point the argument would be out only, not in/out.\r\n\r\nFrom there, to return the output argument as a tuple or pair I think it's just making things uglier and unnecessarily complicated.\r\n\r\ninstead of:\r\n```\r\nCAmount tx_fee = 0; // You will initialize the variable even if the function starts setting it to zero\r\nif (!CheckTxInputs(..., tx_fee))\r\n   return false;\r\naccumulated_fee += tx_fee;\r\n```\r\n\r\nYou would have something like:\r\n\r\n```\r\nstruct CheckTxInputsReturn\r\n{\r\n   bool fValid;\r\n   CAmount tx_fee;\r\n}\r\n\r\nCheckTxInputsReturn ret = CheckTxInputs(...);\r\nif (!ret.fValid)\r\n   return false;\r\naccumulated_fee += ret.tx_fee;\r\n```\r\n\r\nI think that's incredibly ugly. Specially since I don't see the problem with how it is currently used when you don't want to accumulate any fees:\r\n\r\n```\r\nCAmount tx_fee = 0;\r\nif (!CheckTxInputs(..., tx_fee))\r\n   return false;\r\n```\r\n\r\nPlease, I invite you to write your suggestions on top of this and see for yourselves that they are not an improvement but actually the contrary.\r\nIf people agree that those IMO much uglier solutions are better, I will squash your suggestions, no problem.",
    "created_at": "2017-06-27T04:56:57Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124178299",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124178299"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124178299"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124178299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 123744310
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124178585",
    "pull_request_review_id": 46444246,
    "id": 124178585,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDE3ODU4NQ==",
    "diff_hunk": "@@ -24,7 +26,7 @@ namespace Consensus {\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees);",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 14,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was just clarifying that @sdaftuar's suggestion does not imply duplication of logic. I personally think that it's a bit cleaner to do the summing of fees outside of the validation of a single function, but it's an unimportant nit for sure.",
    "created_at": "2017-06-27T05:00:37Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124178585",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124178585"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124178585"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124178585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 123744310
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124179812",
    "pull_request_review_id": 46445574,
    "id": 124179812,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDE3OTgxMg==",
    "diff_hunk": "@@ -24,7 +26,7 @@ namespace Consensus {\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& nFees);",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 14,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "4d9e9a5b7cb3e65bcf96ea5090ab6abaeba27640",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, sorry, the duplication comment was a mistake. Before I was checking the moneyRange for the accumulated fees and not just for the single tx fees, and I thought that check would need to be duplicated outside, but that was a change in functionality that I shouldn't be doing (and btw was missed in review).\r\nPedantically adding that check would be a softfork, but it should be impossible that the MoneyRange check on the accumulated fees fails anyway.\r\n\r\nI can not accumulate anything if you guys prefer that, that's a simple change (even though I still can't understand why would you prefer that), reading your previous comment again better, you were also considering the pass by reference (what is done now), not necessarily the tuple (which is what I would be against in principle because of its ugliness).",
    "created_at": "2017-06-27T05:17:06Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124179812",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124179812"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124179812"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124179812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 123744310
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124332429",
    "pull_request_review_id": 46327834,
    "id": 124332429,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDMzMjQyOQ==",
    "diff_hunk": "@@ -22,9 +24,10 @@ namespace Consensus {\n /**\n  * Check whether all inputs of this transaction are valid (no double spends and amounts)\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n+ * @param[out] nTxFee this serves to get the fees of the tx as output. \n  * Preconditions: tx.IsCoinBase() is false.\n  */\n-bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& accumulated_fees);",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 17,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "7b78d8b7e0191d8fa54747c5e77a9791a7247838",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Need to change var name here, too.",
    "created_at": "2017-06-27T16:51:21Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124332429",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124332429"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124332429"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124332429/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124346132",
    "pull_request_review_id": 46327834,
    "id": 124346132,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDM0NjEzMg==",
    "diff_hunk": "@@ -1635,9 +1633,11 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            CAmount tx_fees = 0;\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, tx_fees)) {\n+                return error(\"%s: Consensus::CheckTxInputs: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n+            }\n+            nFees += tx_fees;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 60,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "7b78d8b7e0191d8fa54747c5e77a9791a7247838",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "While you're at it, can you please re-add the MoneyRange checks here that Gavin removed years ago (and maybe update the PR title to indicate that you're fixing Gavin's near-bug while also decreasing the number of CCoinsView map lookups).",
    "created_at": "2017-06-27T17:44:14Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124346132",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124346132"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124346132"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124346132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1640,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124364449",
    "pull_request_review_id": 46646220,
    "id": 124364449,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDM2NDQ0OQ==",
    "diff_hunk": "@@ -1635,9 +1633,11 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            CAmount tx_fees = 0;\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, tx_fees)) {\n+                return error(\"%s: Consensus::CheckTxInputs: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n+            }\n+            nFees += tx_fees;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 60,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "7b78d8b7e0191d8fa54747c5e77a9791a7247838",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Specifically, commit 8d7849b6db5f54dc32fe4f8c6c7283068473cd21 broke the check at https://github.com/bitcoin/bitcoin/commit/8d7849b6db#diff-7ec3c68a81efff79b6ca22ac1f1eabbaR1110 and made it useless, which very narrowly didn't cause a major consensus failure and re-introduction of the original bitcoin-printing overflow bug.",
    "created_at": "2017-06-27T18:53:37Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124364449",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124364449"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r124364449"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124364449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1640,
    "side": "RIGHT",
    "in_reply_to_id": 124346132
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126784667",
    "pull_request_review_id": 49303160,
    "id": 126784667,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjc4NDY2Nw==",
    "diff_hunk": "@@ -1635,9 +1633,15 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            CAmount tx_fees = 0;\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, tx_fees)) {\n+                return error(\"%s: Consensus::CheckTxInputs: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n+            }\n+            nFees += tx_fees;\n+            if (!MoneyRange(nFees)) {\n+                 state.DoS(100, false, REJECT_INVALID, \"bad-txns-accumulated-fee-outofrange\");\n+                 return error(\"%s: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 63,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "3161a7c9ef6e19696a79776b38e3e5e4b6a67940",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not use the normal formatting here of return state.DoS(100, error(), ...)?",
    "created_at": "2017-07-11T19:25:52Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r126784667",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126784667"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r126784667"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126784667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1643,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127103970",
    "pull_request_review_id": 49653638,
    "id": 127103970,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzEwMzk3MA==",
    "diff_hunk": "@@ -1635,9 +1633,15 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n \n         if (!tx.IsCoinBase())\n         {\n-            if (!view.HaveInputs(tx))\n-                return state.DoS(100, error(\"ConnectBlock(): inputs missing/spent\"),\n-                                 REJECT_INVALID, \"bad-txns-inputs-missingorspent\");\n+            CAmount tx_fees = 0;\n+            if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, tx_fees)) {\n+                return error(\"%s: Consensus::CheckTxInputs: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n+            }\n+            nFees += tx_fees;\n+            if (!MoneyRange(nFees)) {\n+                 state.DoS(100, false, REJECT_INVALID, \"bad-txns-accumulated-fee-outofrange\");\n+                 return error(\"%s: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 63,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "3161a7c9ef6e19696a79776b38e3e5e4b6a67940",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No reason, will change",
    "created_at": "2017-07-13T00:23:10Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r127103970",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127103970"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r127103970"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/127103970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1643,
    "side": "RIGHT",
    "in_reply_to_id": 126784667
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133807917",
    "pull_request_review_id": 57031463,
    "id": 133807917,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzgwNzkxNw==",
    "diff_hunk": "@@ -205,46 +205,49 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& tx_fees)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    tx_fees = 0; // Initialize output value\n+\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);\n+        assert(!coin.IsSpent());\n+\n+        // If prev is coinbase, check that it's matured\n+        if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n+            return state.Invalid(false,\n+                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+                strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n+        }\n \n+        // Check for negative or overflow input values\n+        nValueIn += coin.out.nValue;\n+        if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn)) {\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n         }\n+    }\n+\n+    const CAmount value_out = tx.GetValueOut();\n+    if (nValueIn < value_out) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n+            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n+    }\n \n-        if (nValueIn < tx.GetValueOut())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n-                strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n-\n-        // Tally transaction fees\n-        CAmount nTxFee = nValueIn - tx.GetValueOut();\n-        if (nTxFee < 0)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n-        nFees += nTxFee;\n-        if (!MoneyRange(nFees))\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-outofrange\");\n+    // Tally transaction fees\n+    tx_fees = nValueIn - value_out;\n+    if (tx_fees < 0) {",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 79,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "736cf73ab3144915a3427bb7d23bd31386abe8c0",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't this redundant given the check on line 239?",
    "created_at": "2017-08-17T19:33:18Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r133807917",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133807917"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r133807917"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133807917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 246,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133897830",
    "pull_request_review_id": 57130901,
    "id": 133897830,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzg5NzgzMA==",
    "diff_hunk": "@@ -205,46 +205,49 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& tx_fees)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    tx_fees = 0; // Initialize output value\n+\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);\n+        assert(!coin.IsSpent());\n+\n+        // If prev is coinbase, check that it's matured\n+        if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n+            return state.Invalid(false,\n+                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+                strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n+        }\n \n+        // Check for negative or overflow input values\n+        nValueIn += coin.out.nValue;\n+        if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn)) {\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n         }\n+    }\n+\n+    const CAmount value_out = tx.GetValueOut();\n+    if (nValueIn < value_out) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n+            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n+    }\n \n-        if (nValueIn < tx.GetValueOut())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n-                strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n-\n-        // Tally transaction fees\n-        CAmount nTxFee = nValueIn - tx.GetValueOut();\n-        if (nTxFee < 0)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n-        nFees += nTxFee;\n-        if (!MoneyRange(nFees))\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-outofrange\");\n+    // Tally transaction fees\n+    tx_fees = nValueIn - value_out;\n+    if (tx_fees < 0) {",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 79,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "736cf73ab3144915a3427bb7d23bd31386abe8c0",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I think so, unless I'm missing something about some weird overflow. Besides it is also included in MoneyRange, so actually both checks are redundant, but at some point IIRC someone asked to not unify in  bad-txns-fee-outofrange. But I think we can choose to ditch either bad-txns-in-belowout or bad-txns-fee-negative. I don't have a strong preference.",
    "created_at": "2017-08-18T07:42:20Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r133897830",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133897830"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r133897830"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/133897830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 246,
    "side": "RIGHT",
    "in_reply_to_id": 133807917
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680000",
    "pull_request_review_id": 60258677,
    "id": 136680000,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjY4MDAwMA==",
    "diff_hunk": "@@ -22,9 +24,10 @@ namespace Consensus {\n /**\n  * Check whether all inputs of this transaction are valid (no double spends and amounts)\n  * This does not modify the UTXO set. This does not check scripts and sigs.\n+ * @param[out] tx_fees this serves to get the fees of the tx as output. ",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 13,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "434f86b0bbbb793ec91deeb94013421b29445e7a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "` * @params[out] tx_fees  Set to the transaction fee if successful`.",
    "created_at": "2017-09-01T23:16:28Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r136680000",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680000"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r136680000"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680000/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680606",
    "pull_request_review_id": 60258677,
    "id": 136680606,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjY4MDYwNg==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& tx_fees)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    tx_fees = 0; // Initialize output value\n+\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n \n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);\n+        assert(!coin.IsSpent());\n+\n+        // If prev is coinbase, check that it's matured\n+        if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n+            return state.Invalid(false,\n+                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+                strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n         }\n \n-        if (nValueIn < tx.GetValueOut())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n-                strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n-\n-        // Tally transaction fees\n-        CAmount nTxFee = nValueIn - tx.GetValueOut();\n-        if (nTxFee < 0)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n-        nFees += nTxFee;\n-        if (!MoneyRange(nFees))\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-outofrange\");\n+        // Check for negative or overflow input values\n+        nValueIn += coin.out.nValue;\n+        if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn)) {\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+        }\n+    }\n+\n+    const CAmount value_out = tx.GetValueOut();\n+    if (nValueIn < value_out) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n+            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n+    }\n+\n+    // Tally transaction fees\n+    tx_fees = nValueIn - value_out;",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "434f86b0bbbb793ec91deeb94013421b29445e7a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why was/is plural?",
    "created_at": "2017-09-01T23:24:06Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r136680606",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680606"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r136680606"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 245,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680632",
    "pull_request_review_id": 60258677,
    "id": 136680632,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjY4MDYzMg==",
    "diff_hunk": "@@ -611,6 +611,15 @@ void CTxMemPool::clear()\n     _clear();\n }\n \n+static void CheckInputsAndUpdateCoins(const CTransaction& tx, CCoinsViewCache& mempoolDuplicate, const int64_t nSpendHeight)",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "434f86b0bbbb793ec91deeb94013421b29445e7a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use snake_case on new code.",
    "created_at": "2017-09-01T23:24:42Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r136680632",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680632"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r136680632"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136680632/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 614,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136681168",
    "pull_request_review_id": 60258677,
    "id": 136681168,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjY4MTE2OA==",
    "diff_hunk": "@@ -531,6 +528,12 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // CoinsViewCache instead of create its own\n         if (!CheckSequenceLocks(tx, STANDARD_LOCKTIME_VERIFY_FLAGS, &lp))\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"non-BIP68-final\");\n+\n+        } // end LOCK(pool.cs)\n+\n+        CAmount nFees = 0;",
    "path": "src/validation.cpp",
    "position": 24,
    "original_position": 24,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "434f86b0bbbb793ec91deeb94013421b29445e7a",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`tx_fees` or just `fees`?",
    "created_at": "2017-09-01T23:31:44Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r136681168",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136681168"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r136681168"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136681168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 534,
    "original_line": 534,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137134137",
    "pull_request_review_id": 60762512,
    "id": 137134137,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzEzNDEzNw==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& tx_fees)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    tx_fees = 0; // Initialize output value\n+\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n \n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);\n+        assert(!coin.IsSpent());\n+\n+        // If prev is coinbase, check that it's matured\n+        if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n+            return state.Invalid(false,\n+                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+                strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n         }\n \n-        if (nValueIn < tx.GetValueOut())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n-                strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n-\n-        // Tally transaction fees\n-        CAmount nTxFee = nValueIn - tx.GetValueOut();\n-        if (nTxFee < 0)\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n-        nFees += nTxFee;\n-        if (!MoneyRange(nFees))\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-outofrange\");\n+        // Check for negative or overflow input values\n+        nValueIn += coin.out.nValue;\n+        if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn)) {\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+        }\n+    }\n+\n+    const CAmount value_out = tx.GetValueOut();\n+    if (nValueIn < value_out) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n+            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n+    }\n+\n+    // Tally transaction fees\n+    tx_fees = nValueIn - value_out;",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "434f86b0bbbb793ec91deeb94013421b29445e7a",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "no good reason, let's make it singular",
    "created_at": "2017-09-05T22:48:18Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137134137",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137134137"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137134137"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137134137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 245,
    "side": "RIGHT",
    "in_reply_to_id": 136680606
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137135132",
    "pull_request_review_id": 60763532,
    "id": 137135132,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzEzNTEzMg==",
    "diff_hunk": "@@ -531,6 +528,12 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // CoinsViewCache instead of create its own\n         if (!CheckSequenceLocks(tx, STANDARD_LOCKTIME_VERIFY_FLAGS, &lp))\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"non-BIP68-final\");\n+\n+        } // end LOCK(pool.cs)\n+\n+        CAmount nFees = 0;",
    "path": "src/validation.cpp",
    "position": 24,
    "original_position": 24,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "434f86b0bbbb793ec91deeb94013421b29445e7a",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That would be more extra disruption only for style. We can do that at any time. Including potentially more rebase work fixing conflicts with other things touching AcceptToMemoryPoolWorker. Can we leave that for later? Note we're not creating a new variable but just moving its declaration here.",
    "created_at": "2017-09-05T22:54:54Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137135132",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137135132"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137135132"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137135132/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 534,
    "original_line": 534,
    "side": "RIGHT",
    "in_reply_to_id": 136681168
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153110",
    "pull_request_review_id": 60783228,
    "id": 137153110,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzE1MzExMA==",
    "diff_hunk": "@@ -207,44 +207,45 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n \n bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n+    // for an attacker to attempt to split the network.\n+    if (!inputs.HaveInputs(tx))\n+        return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n+\n+    CAmount nValueIn = 0;\n+    CAmount nFees = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++) {",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 36,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "cac4df7ca3daabf12cd19baf5cfb7dcde40e2f47",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`++i`.",
    "created_at": "2017-09-06T01:26:32Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137153110",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153110"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137153110"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153110/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 217,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153520",
    "pull_request_review_id": 60783228,
    "id": 137153520,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzE1MzUyMA==",
    "diff_hunk": "@@ -205,15 +205,17 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-    // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-    // for an attacker to attempt to split the network.\n-    if (!inputs.HaveInputs(tx))\n-        return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n+    txfee = 0; // Initialize output value",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "a97f07af78b14281644e03285ab7a1cd3844a223",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why? Update only if successfully?",
    "created_at": "2017-09-06T01:30:45Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137153520",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153520"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137153520"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153615",
    "pull_request_review_id": 60783228,
    "id": 137153615,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzE1MzYxNQ==",
    "diff_hunk": "@@ -233,18 +235,15 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n         }\n     }\n \n-    if (nValueIn < tx.GetValueOut()) {\n+    const CAmount value_out = tx.GetValueOut();\n+    if (nValueIn < value_out) {\n         return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n-            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n+            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n     }\n \n     // Tally transaction fees\n-    CAmount nTxFee = nValueIn - tx.GetValueOut();\n-    if (nTxFee < 0) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n-    }\n-    nFees += nTxFee;\n-    if (!MoneyRange(nFees)) {\n+    txfee = nValueIn - value_out;",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "a97f07af78b14281644e03285ab7a1cd3844a223",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Update before `return true;`.",
    "created_at": "2017-09-06T01:31:48Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137153615",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153615"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137153615"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 245,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153659",
    "pull_request_review_id": 60783228,
    "id": 137153659,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzE1MzY1OQ==",
    "diff_hunk": "@@ -233,18 +235,15 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n         }\n     }\n \n-    if (nValueIn < tx.GetValueOut()) {\n+    const CAmount value_out = tx.GetValueOut();\n+    if (nValueIn < value_out) {\n         return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n-            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n+            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n     }\n \n     // Tally transaction fees\n-    CAmount nTxFee = nValueIn - tx.GetValueOut();\n-    if (nTxFee < 0) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n-    }\n-    nFees += nTxFee;\n-    if (!MoneyRange(nFees)) {\n+    txfee = nValueIn - value_out;\n+    if (!MoneyRange(txfee)) {",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "a97f07af78b14281644e03285ab7a1cd3844a223",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```cpp\r\nif (!MoneyRange(nValueIn - value_out)) {\r\n```",
    "created_at": "2017-09-06T01:32:14Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137153659",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153659"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137153659"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137153659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 246,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137320049",
    "pull_request_review_id": 60971392,
    "id": 137320049,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzMyMDA0OQ==",
    "diff_hunk": "@@ -205,15 +205,17 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-    // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-    // for an attacker to attempt to split the network.\n-    if (!inputs.HaveInputs(tx))\n-        return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n+    txfee = 0; // Initialize output value",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "a97f07af78b14281644e03285ab7a1cd3844a223",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "And if not set to to 0? I think this was discussed already...",
    "created_at": "2017-09-06T16:28:45Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137320049",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137320049"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137320049"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137320049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 210,
    "side": "RIGHT",
    "in_reply_to_id": 137153520
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137320780",
    "pull_request_review_id": 60972230,
    "id": 137320780,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzMyMDc4MA==",
    "diff_hunk": "@@ -233,18 +235,15 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n         }\n     }\n \n-    if (nValueIn < tx.GetValueOut()) {\n+    const CAmount value_out = tx.GetValueOut();\n+    if (nValueIn < value_out) {\n         return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n-            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n+            strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(value_out)));\n     }\n \n     // Tally transaction fees\n-    CAmount nTxFee = nValueIn - tx.GetValueOut();\n-    if (nTxFee < 0) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n-    }\n-    nFees += nTxFee;\n-    if (!MoneyRange(nFees)) {\n+    txfee = nValueIn - value_out;\n+    if (!MoneyRange(txfee)) {",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "a97f07af78b14281644e03285ab7a1cd3844a223",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Mhmm, right, that's what we're saying in the doxygen docs now...ok, I guess.",
    "created_at": "2017-09-06T16:31:27Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137320780",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137320780"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r137320780"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137320780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 246,
    "side": "RIGHT",
    "in_reply_to_id": 137153659
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138863585",
    "pull_request_review_id": 62715591,
    "id": 138863585,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODg2MzU4NQ==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {",
    "path": "src/consensus/tx_verify.cpp",
    "position": 48,
    "original_position": 48,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Suggest using const auto& to iterate over tx.vin. (This is already the case in other functions in this file)",
    "created_at": "2017-09-14T11:15:17Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138863585",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138863585"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138863585"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138863585/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 217,
    "original_line": 217,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138864183",
    "pull_request_review_id": 62715591,
    "id": 138864183,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODg2NDE4Mw==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The current code has an explicit comment about not triggering the DoS code on purpose, did you remove it (and invoke the DoS code) intentionally?",
    "created_at": "2017-09-14T11:18:38Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138864183",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138864183"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138864183"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138864183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 212,
    "original_line": 212,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138864880",
    "pull_request_review_id": 62715591,
    "id": 138864880,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODg2NDg4MA==",
    "diff_hunk": "@@ -8,6 +8,8 @@\n #include <stdint.h>\n #include <vector>\n \n+#include \"amount.h\"",
    "path": "src/consensus/tx_verify.h",
    "position": null,
    "original_position": 4,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Local includes should come before system includes",
    "created_at": "2017-09-14T11:22:19Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138864880",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138864880"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138864880"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138864880/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138878958",
    "pull_request_review_id": 62732790,
    "id": 138878958,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODg3ODk1OA==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The comment was moved to the separated HaveInputs call in AcceptToMemoryPoolWorker.\r\nPerhaps lost in rebase, I'll look at it.\r\nPerhaps it's fine since we now have: https://github.com/bitcoin/bitcoin/pull/8498/commits/c93ceb2dbde1c2474ee04946fb4594b668613dbe#diff-24efdb00bfbe56b140fb006b562cc70bR514",
    "created_at": "2017-09-14T12:32:17Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138878958",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138878958"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138878958"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138878958/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 212,
    "original_line": 212,
    "side": "RIGHT",
    "in_reply_to_id": 138864183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138879230",
    "pull_request_review_id": 62733098,
    "id": 138879230,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODg3OTIzMA==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {",
    "path": "src/consensus/tx_verify.cpp",
    "position": 48,
    "original_position": 48,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This line wasn't touched besides indentation until @promag asked s/i++/++i/\r\nNot sure it's worth it to make that change here, to be honest...",
    "created_at": "2017-09-14T12:33:30Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138879230",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138879230"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138879230"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138879230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 217,
    "original_line": 217,
    "side": "RIGHT",
    "in_reply_to_id": 138863585
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138912377",
    "pull_request_review_id": 62771828,
    "id": 138912377,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODkxMjM3Nw==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's not just the comment, as you can see in the diff previously the code used `state.Invalid` (and stated it does so on purpose), and now both the comment is gone and the code uses `state.DoS`\r\n\r\nI don't know to say on my own whether that change is valid, but it definitely requires explanation due to the fact that previously there was a specific comment suggesting using `state.DoS` there is bad.",
    "created_at": "2017-09-14T14:36:17Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138912377",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138912377"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r138912377"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/138912377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 212,
    "original_line": 212,
    "side": "RIGHT",
    "in_reply_to_id": 138864183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139014770",
    "pull_request_review_id": 62891068,
    "id": 139014770,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTAxNDc3MA==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);",
    "path": "src/consensus/tx_verify.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please dont add needless auto& unless you have to. If you're saving 5 chars of typing it just makes things less readable.",
    "created_at": "2017-09-14T21:22:45Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139014770",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139014770"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139014770"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139014770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 219,
    "original_line": 219,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139015520",
    "pull_request_review_id": 62891932,
    "id": 139015520,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTAxNTUyMA==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It should be OK, the DoS from ConnectBlock is important, but the DoS shouldn't be trigger'able in ATMP - we should have already returned false int he pfMissingInputs branch further up.",
    "created_at": "2017-09-14T21:26:21Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139015520",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139015520"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139015520"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139015520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 212,
    "original_line": 212,
    "side": "RIGHT",
    "in_reply_to_id": 138864183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139019344",
    "pull_request_review_id": 62896418,
    "id": 139019344,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTAxOTM0NA==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);",
    "path": "src/consensus/tx_verify.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@TheBlueMatt I disagree, and AFAIK so do most of the C++ gurus. The (character) typing isn't the issue here, rather code flexibility. See https://softwareengineering.stackexchange.com/questions/180216/does-auto-make-c-code-harder-to-understand for an example of a discussion on the topic.",
    "created_at": "2017-09-14T21:46:09Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139019344",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139019344"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139019344"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139019344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 219,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 139014770
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139225809",
    "pull_request_review_id": 63133757,
    "id": 139225809,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTIyNTgwOQ==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);",
    "path": "src/consensus/tx_verify.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "auto, here, AFAIU, is going to be slightly more likely to force you to change the line if you change AccessCoin's return type (at least because its a const-ref type, so conversion should only be an inheritance thing). In consensus code, making sure you're forced to change all the places something is used if you change a type strikes me as a very, very good idea. If you want to take Herb's stance on it, I'd also be ok with his recommended auto coin = const Coin&{inputs.AccessCoin(prevout)}; to force it, though I find that somewhat unreadable (which is bias towards what I'm used to, I admit).",
    "created_at": "2017-09-15T18:57:38Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139225809",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139225809"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139225809"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139225809/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 219,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 139014770
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139251146",
    "pull_request_review_id": 63164111,
    "id": 139251146,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTI1MTE0Ng==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);",
    "path": "src/consensus/tx_verify.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Consensus code seems hard enough to change as it is without adding extra hurdles.\r\n\r\n> In consensus code, making sure you're forced to change all the places something is used if\r\n> you change a type strikes me as a very, very good idea.\r\n\r\nBy that logic, instead of\r\n`const COutPoint &prevout = tx.vin[i].prevout;`\r\n\r\nit would be better to write\r\n```\r\nconst CTxIn& txin = tx.vin[i];\r\nconst COutPoint &prevout = txin.prevout;\r\n```\r\nSince in the first version, `tx.vin[i]` is used without specifying its type :)",
    "created_at": "2017-09-15T21:10:55Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139251146",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139251146"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r139251146"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/139251146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 219,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 139014770
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140095511",
    "pull_request_review_id": 64119679,
    "id": 140095511,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDA5NTUxMQ==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);",
    "path": "src/consensus/tx_verify.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Let's please leave this for another PR",
    "created_at": "2017-09-20T21:17:48Z",
    "updated_at": "2017-09-20T21:27:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140095511",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140095511"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140095511"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140095511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 219,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 139014770
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140352837",
    "pull_request_review_id": 64415438,
    "id": 140352837,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDM1MjgzNw==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@TheBlueMatt \r\n> It should be OK, the DoS from ConnectBlock is important\r\n\r\nWhich DoS? The one previously returned from `CheckTxInputs` in case of missing inputs? If so, IIUC it wouldn't trigger after this change, there would just be an error returned, since it replaced the previous DoS in `ConnectBlock` https://github.com/bitcoin/bitcoin/commit/c93ceb2dbde1c2474ee04946fb4594b668613dbe#diff-24efdb00bfbe56b140fb006b562cc70bR1638",
    "created_at": "2017-09-21T20:38:42Z",
    "updated_at": "2017-09-21T20:38:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140352837",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140352837"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140352837"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140352837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 212,
    "original_line": 212,
    "side": "RIGHT",
    "in_reply_to_id": 138864183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140353044",
    "pull_request_review_id": 64415698,
    "id": 140353044,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDM1MzA0NA==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {",
    "path": "src/consensus/tx_verify.cpp",
    "position": 48,
    "original_position": 48,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jtimon IMHO it would fit nicely in the minor changes commit",
    "created_at": "2017-09-21T20:39:41Z",
    "updated_at": "2017-09-21T20:39:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140353044",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140353044"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140353044"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140353044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 217,
    "original_line": 217,
    "side": "RIGHT",
    "in_reply_to_id": 138863585
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140353143",
    "pull_request_review_id": 64415809,
    "id": 140353143,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDM1MzE0Mw==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);",
    "path": "src/consensus/tx_verify.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK, deleting this comment.",
    "created_at": "2017-09-21T20:40:08Z",
    "updated_at": "2017-09-21T20:40:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140353143",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140353143"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140353143"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140353143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 219,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 139014770
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356187",
    "pull_request_review_id": 64419200,
    "id": 140356187,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDM1NjE4Nw==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "DoS values persist through the state object (and should only be set once through the entire call tree). Thus, when ConnectBlock calls CheckTxInputs, which sets DoS, ConnectBlock *should* return only error() and not call DoS again, but the DoS points will still be returned through the state object.",
    "created_at": "2017-09-21T20:53:05Z",
    "updated_at": "2017-09-21T20:53:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140356187",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356187"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140356187"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 212,
    "original_line": 212,
    "side": "RIGHT",
    "in_reply_to_id": 138864183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356672",
    "pull_request_review_id": 64419776,
    "id": 140356672,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDM1NjY3Mg==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": 43,
    "original_position": 43,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "danra",
      "id": 84245,
      "node_id": "MDQ6VXNlcjg0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/84245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danra",
      "html_url": "https://github.com/danra",
      "followers_url": "https://api.github.com/users/danra/followers",
      "following_url": "https://api.github.com/users/danra/following{/other_user}",
      "gists_url": "https://api.github.com/users/danra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danra/subscriptions",
      "organizations_url": "https://api.github.com/users/danra/orgs",
      "repos_url": "https://api.github.com/users/danra/repos",
      "events_url": "https://api.github.com/users/danra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@TheBlueMatt Ah, I see. Thanks!",
    "created_at": "2017-09-21T20:55:17Z",
    "updated_at": "2017-09-21T20:55:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140356672",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356672"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140356672"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 212,
    "original_line": 212,
    "side": "RIGHT",
    "in_reply_to_id": 138864183
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356686",
    "pull_request_review_id": 64419789,
    "id": 140356686,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDM1NjY4Ng==",
    "diff_hunk": "@@ -205,46 +205,46 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     return true;\n }\n \n-bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight, CAmount& txfee)\n {\n-        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n-        // for an attacker to attempt to split the network.\n-        if (!inputs.HaveInputs(tx))\n-            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n-\n-        CAmount nValueIn = 0;\n-        CAmount nFees = 0;\n-        for (unsigned int i = 0; i < tx.vin.size(); i++)\n-        {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const Coin& coin = inputs.AccessCoin(prevout);\n-            assert(!coin.IsSpent());\n-\n-            // If prev is coinbase, check that it's matured\n-            if (coin.IsCoinBase()) {\n-                if (nSpendHeight - coin.nHeight < COINBASE_MATURITY)\n-                    return state.Invalid(false,\n-                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n-                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\n-            }\n-\n-            // Check for negative or overflow input values\n-            nValueIn += coin.out.nValue;\n-            if (!MoneyRange(coin.out.nValue) || !MoneyRange(nValueIn))\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+    // are the actual inputs available?\n+    if (!inputs.HaveInputs(tx)) {\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-missingorspent\", false,\n+                         strprintf(\"%s: inputs missing/spent\", __func__));\n+    }\n+\n+    CAmount nValueIn = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i) {\n+        const COutPoint &prevout = tx.vin[i].prevout;\n+        const Coin& coin = inputs.AccessCoin(prevout);",
    "path": "src/consensus/tx_verify.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "4e955c58e13cfe089208f6b23b195d395ad99baa",
    "original_commit_id": "b989b704d4618387fff644b8918834810c0565ee",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please dont delete comments. Just because a PR author decided against taking a suggestion doesnt mean review content should be deleted. Others may wish to agree with the suggestion or otherwise just view the history of what was discussed. Unless a comment is updated immediately afterwards, generally I'd prefer they not be edited.",
    "created_at": "2017-09-21T20:55:19Z",
    "updated_at": "2017-09-21T20:55:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140356686",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356686"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8498#discussion_r140356686"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8498"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140356686/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 219,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 139014770
  }
]