[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111430575",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6272#issuecomment-111430575",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6272",
    "id": 111430575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQzMDU3NQ==",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T09:43:02Z",
    "updated_at": "2015-06-12T09:43:02Z",
    "author_association": "NONE",
    "body": "This is a different, but better apporach than what I tried to do. Flow is straight forward, which I really like. I didn't yet test the code by myself, but from review this is (after fixing the nit) an utACK for now. I'm going to test this now.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111430575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111446369",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6272#issuecomment-111446369",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6272",
    "id": 111446369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ0NjM2OQ==",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T10:49:14Z",
    "updated_at": "2015-06-12T10:49:14Z",
    "author_association": "NONE",
    "body": "My node connects normally via proxy, the pull compiles without problems, so this has my ACK.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/111446369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112409143",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6272#issuecomment-112409143",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6272",
    "id": 112409143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjQwOTE0Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-16T12:35:35Z",
    "updated_at": "2015-06-16T12:35:35Z",
    "author_association": "MEMBER",
    "body": "Added more proxy tests (these test the output of `getnetworkinfo`)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/112409143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32302578",
    "pull_request_review_id": null,
    "id": 32302578,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzAyNTc4",
    "diff_hunk": "@@ -984,31 +984,37 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         }\n     }\n \n-    proxyType addrProxy;\n-    bool fProxy = false;\n-    if (mapArgs.count(\"-proxy\")) {\n-        addrProxy = proxyType(CService(mapArgs[\"-proxy\"], 9050), GetBoolArg(\"-proxyrandomize\", true));\n+    bool proxyRandomize = GetBoolArg(\"-proxyrandomize\", true);\n+    // -proxy sets a proxy for all outgoing network traffic\n+    // -noproxy (or -proxy=0) as well as the empty string can be used to not set a proxy, this is the default\n+    std::string proxyArg = GetArg(\"-proxy\", \"\");\n+    if (proxyArg != \"\" && proxyArg != \"0\") {\n+        proxyType addrProxy = proxyType(CService(proxyArg, 9050), proxyRandomize);\n         if (!addrProxy.IsValid())\n-            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), mapArgs[\"-proxy\"]));\n+            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), proxyArg));\n \n         SetProxy(NET_IPV4, addrProxy);\n         SetProxy(NET_IPV6, addrProxy);\n+        SetProxy(NET_TOR, addrProxy);\n         SetNameProxy(addrProxy);\n-        fProxy = true;\n+        SetReachable(NET_TOR); // by default, -proxy sets onion as reachable, unless -noonion later\n     }\n \n-    // -onion can override normal proxy, -noonion disables connecting to .onion entirely\n-    if (!(mapArgs.count(\"-onion\") && mapArgs[\"-onion\"] == \"0\") &&\n-        (fProxy || mapArgs.count(\"-onion\"))) {\n-        proxyType addrOnion;\n-        if (!mapArgs.count(\"-onion\"))\n-            addrOnion = addrProxy;\n-        else\n-            addrOnion = proxyType(CService(mapArgs[\"-onion\"], 9050), GetBoolArg(\"-proxyrandomize\", true));\n-        if (!addrOnion.IsValid())\n-            return InitError(strprintf(_(\"Invalid -onion address: '%s'\"), mapArgs[\"-onion\"]));\n-        SetProxy(NET_TOR, addrOnion);\n-        SetReachable(NET_TOR);\n+    // -onion can override normal proxy for .onion addresses\n+    // -noonion (or -onion=0) disables connecting to .onion entirely\n+    // An empty string is used to not override the onion proxy (in which case it defaults to -proxy set above, or none)\n+    std::string onionArg = GetArg(\"-onion\", \"\");\n+    if (onionArg != \"\") {\n+        if (onionArg == \"0\") { // Handle -noonion/-onion=0\n+            SetReachable(NET_TOR, false); // set onions as unreachable\n+        } else {\n+            proxyType addrOnion;",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "edbdf8855ded4142d78c0f9b5ef8c3233c61a5f0",
    "original_commit_id": "8a0a181c8a6ff75dfadf41afc241739aaf693d9d",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Above you did this as one-liner, so I suggest `proxyType addrOnion = proxyType(CService(onionArg, 9050), proxyRandomize);`\n",
    "created_at": "2015-06-12T09:40:12Z",
    "updated_at": "2015-06-15T10:45:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6272#discussion_r32302578",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6272",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32302578"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6272#discussion_r32302578"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32302578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1011,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32304375",
    "pull_request_review_id": null,
    "id": 32304375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzA0Mzc1",
    "diff_hunk": "@@ -984,31 +984,37 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         }\n     }\n \n-    proxyType addrProxy;\n-    bool fProxy = false;\n-    if (mapArgs.count(\"-proxy\")) {\n-        addrProxy = proxyType(CService(mapArgs[\"-proxy\"], 9050), GetBoolArg(\"-proxyrandomize\", true));\n+    bool proxyRandomize = GetBoolArg(\"-proxyrandomize\", true);\n+    // -proxy sets a proxy for all outgoing network traffic\n+    // -noproxy (or -proxy=0) as well as the empty string can be used to not set a proxy, this is the default\n+    std::string proxyArg = GetArg(\"-proxy\", \"\");\n+    if (proxyArg != \"\" && proxyArg != \"0\") {\n+        proxyType addrProxy = proxyType(CService(proxyArg, 9050), proxyRandomize);\n         if (!addrProxy.IsValid())\n-            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), mapArgs[\"-proxy\"]));\n+            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), proxyArg));\n \n         SetProxy(NET_IPV4, addrProxy);\n         SetProxy(NET_IPV6, addrProxy);\n+        SetProxy(NET_TOR, addrProxy);\n         SetNameProxy(addrProxy);\n-        fProxy = true;\n+        SetReachable(NET_TOR); // by default, -proxy sets onion as reachable, unless -noonion later\n     }\n \n-    // -onion can override normal proxy, -noonion disables connecting to .onion entirely\n-    if (!(mapArgs.count(\"-onion\") && mapArgs[\"-onion\"] == \"0\") &&\n-        (fProxy || mapArgs.count(\"-onion\"))) {\n-        proxyType addrOnion;\n-        if (!mapArgs.count(\"-onion\"))\n-            addrOnion = addrProxy;\n-        else\n-            addrOnion = proxyType(CService(mapArgs[\"-onion\"], 9050), GetBoolArg(\"-proxyrandomize\", true));\n-        if (!addrOnion.IsValid())\n-            return InitError(strprintf(_(\"Invalid -onion address: '%s'\"), mapArgs[\"-onion\"]));\n-        SetProxy(NET_TOR, addrOnion);\n-        SetReachable(NET_TOR);\n+    // -onion can override normal proxy for .onion addresses\n+    // -noonion (or -onion=0) disables connecting to .onion entirely\n+    // An empty string is used to not override the onion proxy (in which case it defaults to -proxy set above, or none)\n+    std::string onionArg = GetArg(\"-onion\", \"\");\n+    if (onionArg != \"\") {\n+        if (onionArg == \"0\") { // Handle -noonion/-onion=0\n+            SetReachable(NET_TOR, false); // set onions as unreachable\n+        } else {\n+            proxyType addrOnion;",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "edbdf8855ded4142d78c0f9b5ef8c3233c61a5f0",
    "original_commit_id": "8a0a181c8a6ff75dfadf41afc241739aaf693d9d",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea.\n",
    "created_at": "2015-06-12T10:07:19Z",
    "updated_at": "2015-06-15T10:45:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6272#discussion_r32304375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32304375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6272#discussion_r32304375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/32304375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1011,
    "side": "RIGHT"
  }
]