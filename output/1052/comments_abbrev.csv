sipa,2012-04-07T15:31:05Z,"Updated; I like this even more: TRY_LOCK(cs, name); if (name) { ... }\n",https://github.com/bitcoin/bitcoin/pull/1052#issuecomment-5009030,5009030,
laanwj,2012-04-07T15:32:08Z,Yes this is much better :)\n,https://github.com/bitcoin/bitcoin/pull/1052#issuecomment-5009036,5009036,
Diapolo,2012-04-07T17:11:40Z,"To understand that stuff, LOCK() is used, when code needs to be thread safe and UNLOCK() is used if that part has been processed?\n",https://github.com/bitcoin/bitcoin/pull/1052#issuecomment-5010064,5010064,
sipa,2012-04-07T17:17:32Z,"LOCK() implements what is called a scoped lock: it makes sure that inside the current block of code (surrounded by { }), a lock on a particular mutex is taken, and released when that block of code exits. Because of that, there is no need for an UNLOCK().\n",https://github.com/bitcoin/bitcoin/pull/1052#issuecomment-5010097,5010097,
gavinandresen,2012-04-09T13:43:39Z,ACK.\n,https://github.com/bitcoin/bitcoin/pull/1052#issuecomment-5025265,5025265,
laanwj,2012-04-07T14:32:24Z,This code becomes reasonably ugly.\nWould it be possible to redefine TRY_CRITICAL_BLOCK to use the scoped locks and keep this code (approximately) the same?\n,https://github.com/bitcoin/bitcoin/pull/1052#discussion_r657823,657823,src/net.cpp
laanwj,2012-04-07T14:35:06Z,"Hm I'd prefer passing the name of the lock (""criticalblock"") as a macro parameter to LOCK, TRY_LOCK and IS_LOCKED. Especially the bare IS_LOCKED (with hardcoded name) look too much like magic to my taste, as there is no visual clue what lock it refers to.\n",https://github.com/bitcoin/bitcoin/pull/1052#discussion_r657825,657825,src/util.h
sipa,2012-04-07T14:37:21Z,"You could just have several scoped locks (like with your suggestion below to include a name for the lock), and test whether they all succeed. That would however be different from the code above (which unlocks everything as soon as a failure occurs).\n\nEDIT: The problem to do it correctly with only one line of code is that you do need a conditional block of code somewhere that depends on the lock,",https://github.com/bitcoin/bitcoin/pull/1052#discussion_r657827,657827,src/net.cpp
sipa,2012-04-07T14:38:45Z,"Yes, it's a balance between code size and clean code. Note that the current master already has hardcoded names as well...\n",https://github.com/bitcoin/bitcoin/pull/1052#discussion_r657828,657828,src/util.h
laanwj,2012-04-07T14:45:57Z,"Well yes but we're trying to improve. IMO it'd be best to completely get rid of the macros, if possible. But making them less ""magical"" would already be good.\n\nMaybe add the name argument only for TRY_LOCK? For LOCK and LOCK2 you never need to refer to them anyway.\n",https://github.com/bitcoin/bitcoin/pull/1052#discussion_r657836,657836,src/util.h
sipa,2012-04-07T14:51:46Z,"I considered removing all macros and go to pure boost::interprocess, but there is no way to keep Gavin's fancy deadlock detection then, which needs **FILE** and **LINE** to track code locations. I'm fine with just an argument for TRY_LOCK and IS_LOCKED.\n",https://github.com/bitcoin/bitcoin/pull/1052#discussion_r657841,657841,src/util.h
laanwj,2012-04-07T14:53:30Z,"You mean boost::thread, please no more boost::interprocess :)\n\nOK, let's do that then.\n",https://github.com/bitcoin/bitcoin/pull/1052#discussion_r657847,657847,src/util.h
gavinandresen,2012-04-08T23:46:03Z,Where is IS_LOCKED defined?\n,https://github.com/bitcoin/bitcoin/pull/1052#discussion_r658985,658985,src/test/util_tests.cpp
sipa,2012-04-09T00:02:15Z,"Oh, right. Leftover from an older version. Fixed now.\n",https://github.com/bitcoin/bitcoin/pull/1052#discussion_r659006,659006,src/test/util_tests.cpp
