[
  {
    "sha": "b14bd4df58171454c2aa580ffad94982943483f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTRiZDRkZjU4MTcxNDU0YzJhYTU4MGZmYWQ5NDk4Mjk0MzQ4M2Y1",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-09-02T20:59:47Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-09-26T13:20:22Z"
      },
      "message": "Skip verifying transaction signatures during initial block-chain download",
      "tree": {
        "sha": "e2f38571215752c09136205620785521e2d93057",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2f38571215752c09136205620785521e2d93057"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b14bd4df58171454c2aa580ffad94982943483f5",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b14bd4df58171454c2aa580ffad94982943483f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b14bd4df58171454c2aa580ffad94982943483f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b14bd4df58171454c2aa580ffad94982943483f5/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b8a5ab622e5c9386c872036646bf94da983b190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b8a5ab622e5c9386c872036646bf94da983b190",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b8a5ab622e5c9386c872036646bf94da983b190"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "be6fc9c53fad3c842c370faafbd15cdb10dc3972",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b14bd4df58171454c2aa580ffad94982943483f5/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b14bd4df58171454c2aa580ffad94982943483f5/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b14bd4df58171454c2aa580ffad94982943483f5",
        "patch": "@@ -810,6 +810,9 @@ bool CTransaction::ConnectInputs(CTxDB& txdb, map<uint256, CTxIndex>& mapTestPoo\n                                  CBlockIndex* pindexBlock, int64& nFees, bool fBlock, bool fMiner, int64 nMinFee)\n {\n     // Take over previous transactions' spent pointers\n+    // fBlock is true when this is called from AcceptBlock when a new best-block is added to the blockchain\n+    // fMiner is true when called from the internal bitcoin miner\n+    // ... both are false when called from CTransaction::AcceptToMemoryPool\n     if (!IsCoinBase())\n     {\n         int64 nValueIn = 0;\n@@ -863,9 +866,13 @@ bool CTransaction::ConnectInputs(CTxDB& txdb, map<uint256, CTxIndex>& mapTestPoo\n                     if (pindex->nBlockPos == txindex.pos.nBlockPos && pindex->nFile == txindex.pos.nFile)\n                         return DoS(10, error(\"ConnectInputs() : tried to spend coinbase at depth %d\", pindexBlock->nHeight - pindex->nHeight));\n \n-            // Verify signature\n-            if (!VerifySignature(txPrev, *this, i))\n-                return DoS(100,error(\"ConnectInputs() : %s VerifySignature failed\", GetHash().ToString().substr(0,10).c_str()));\n+            // Skip ECDSA signature verification when connecting blocks (fBlock=true) during initial download\n+            // (before the last blockchain checkpoint). This is safe because block merkle hashes are\n+            // still computed and checked, and any change will be caught at the next checkpoint.\n+            if (!(fBlock && IsInitialBlockDownload()))\n+                // Verify signature\n+                if (!VerifySignature(txPrev, *this, i))\n+                    return DoS(100,error(\"ConnectInputs() : %s VerifySignature failed\", GetHash().ToString().substr(0,10).c_str()));\n \n             // Check for conflicts (double-spend)\n             // This doesn't trigger the DoS code on purpose; if it did, it would make it easier"
      }
    ]
  }
]