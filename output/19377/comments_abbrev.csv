naumenkogs,2020-06-25 08:28:07,utACK 059c8e6b31d55cad2ccf1dbb1cec0163cd58108d,https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-649367100,649367100,
jnewbery,2020-06-25 15:16:14,"@hebasto can you provide motivation for this change? In practice, only one orphan transactions is ever evicted at a time (in `LimitOrphanTxSize()` which is only called after the 101st orphan has been added. Picking a random element from a 101-entry container is always going to be fast, whatever the underlying data structure, so I don't think there's any benefit to having a microbenchmark for this.",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-649615148,649615148,
hebasto,2020-06-25 15:30:42,"@jnewbery \n> @hebasto can you provide motivation for this change?\n\nIt was motivated by discussion with @sipa in #19374.",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-649625787,649625787,
jnewbery,2020-06-25 16:19:00,"I'm a -0.5 on this. I don't think it's worth adding a microbench for a different usage pattern than is used in the product, and for something that is always going to be quick.",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-649670008,649670008,
MarcoFalke,2020-06-25 16:42:04,"microbenchmarks are never going to match the exact usage pattern in the end product. This is true for all existing microbenchmarks (like the mempool eviction one, etc ...). Absent the details, I think having a benchmark is slightly preferable to not having a benchmark because it might catch accidental performance regressions.\n\nAnd since we don't have any user-facing compatibility concerns for ",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-649683627,649683627,
DrahtBot,2020-06-25 17:14:29,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22284 by jonatack\n\nIf you consider this pull request important, please also help to review the conflicting pull request",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-649710571,649710571,
jnewbery,2020-06-25 17:57:07,"> In general I think that the cost of a pull request that adds a test that passes can only be negative or null (when it is testing nothing). And it should always be an uncontroversial option to remove a not-too-useful test that is in the way of other changes/refactoring/features.\n\nI'm sorry - this is wrong. All code added to the repo has a cost - in maintenance, in review, in discussion as to ",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-649731654,649731654,
hebasto,2020-06-26 07:02:50,"Updated 059c8e6b31d55cad2ccf1dbb1cec0163cd58108d -> 2ee8c0b4be9e524f51572aba9ce4aafccbc0efef ([pr19377.01](https://github.com/hebasto/bitcoin/commits/pr19377.01) -> [pr19377.02](https://github.com/hebasto/bitcoin/commits/pr19377.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19377.01..pr19377.02)):\n\n- addressed all @MarcoFalke's comments",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-650013735,650013735,
hebasto,2020-08-02 20:25:03,Rebased 2ee8c0b4be9e524f51572aba9ce4aafccbc0efef -> b0a576128669c7ebe61a53a3c3a9d1e21c4c844e ([pr19377.02](https://github.com/hebasto/bitcoin/commits/pr19377.02) -> [pr19377.03](https://github.com/hebasto/bitcoin/commits/pr19377.03)) due to the conflict with #18011.,https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-667720527,667720527,
jnewbery,2021-06-22 19:07:00,"> Had a look as this ""conflicts"" with #22284, rebased it to current master and began building; it needs updating here and line 17 above:\n\nThis also conflicts with #21527, which is blocking quite a lot of important work in net_processing.",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-866256247,866256247,
hebasto,2021-06-23 00:20:02,"Marked this as a ""draft"" for now.",https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-866423256,866423256,
MarcoFalke,2020-06-25 18:13:51,Why is net_processing changed in a pull that adds a benchmark? Seems unnecessary to me,https://github.com/bitcoin/bitcoin/pull/19377#discussion_r445747233,445747233,src/net_processing.cpp
MarcoFalke,2020-06-25 18:14:29,Why is this needed? values should not matter for performance,https://github.com/bitcoin/bitcoin/pull/19377#discussion_r445747582,445747582,src/bench/orphan_tx_pool.cpp
MarcoFalke,2020-06-25 18:16:51,Why is `extern` needed here?,https://github.com/bitcoin/bitcoin/pull/19377#discussion_r445748885,445748885,src/bench/orphan_tx_pool.cpp
hebasto,2020-06-25 18:21:33,"To benchmark `EvictOrphanTxs()` without sweeping out functionality of the current `LimitOrphanTxSize()`.\n\nWhat could you suggest to change?",https://github.com/bitcoin/bitcoin/pull/19377#discussion_r445751382,445751382,src/net_processing.cpp
MarcoFalke,2020-06-25 20:44:41,"If you explicitly want to disable the time based eviction, it could be done with mocktime in the benchmark, no?",https://github.com/bitcoin/bitcoin/pull/19377#discussion_r445827424,445827424,src/net_processing.cpp
hebasto,2020-06-26 07:03:24,[Updated](https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-650013735).,https://github.com/bitcoin/bitcoin/pull/19377#discussion_r446004476,446004476,src/net_processing.cpp
hebasto,2020-06-26 07:03:32,[Updated](https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-650013735).,https://github.com/bitcoin/bitcoin/pull/19377#discussion_r446004534,446004534,src/bench/orphan_tx_pool.cpp
hebasto,2020-06-26 07:03:42,[Updated](https://github.com/bitcoin/bitcoin/pull/19377#issuecomment-650013735).,https://github.com/bitcoin/bitcoin/pull/19377#discussion_r446004622,446004622,src/bench/orphan_tx_pool.cpp
jonatack,2021-06-20 17:52:25,"Concept ACK. Had a look as this ""conflicts"" with #22284, rebased it to current master and began building; it needs updating here and line 17 above:\n\n```rake\nbench/orphan_tx_pool.cpp:17:83: error: use of undeclared identifier 'g_cs_orphans'\nbool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans);\n                                                     ",https://github.com/bitcoin/bitcoin/pull/19377#discussion_r654968129,654968129,src/bench/orphan_tx_pool.cpp
