darosior,2020-09-24 12:05:47,"> An empty stack is a `SCRIPT_ERR_EVAL_FALSE`, yes?\n\nNo, it's `SCRIPT_ERR_CLEANSTACK`.\n\nThat's actually the point of this change :)\nRelevant line:\nhttps://github.com/bitcoin/bitcoin/blob/1b313cacc99a1b372238f9036abed5491f9d28f7/src/script/interpreter.cpp#L1519-L1522",https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698301252,698301252,
glozow,2020-09-24 12:19:11,"@darosior \nI meant to clarify that, if we want a clean stack (i.e. script flag `SCRIPT_VERIFY_CLEANSTACK`), we want to end up with 1 item exactly.\nWe never want 0 items, as that would be a `SCRIPT_ERR_EVAL_FALSE`.\nI wouldn't ACK without thinking there's a point :)",https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698307599,698307599,
theStack,2020-09-24 14:04:07,"ACK https://github.com/bitcoin/bitcoin/commit/c2f00b7e2f6c17083b7c72555f5a366c9ff8c673\n\n> An empty stack is a `SCRIPT_ERR_EVAL_FALSE`, yes?\n\nThat was also my initial thought. After digging deeper into the `VerifyScript()` function though I think this is only true for native txs (w/o SegWit). With SegWit involved, in the following part, in the function `ExecuteWitnessScript()` it could happ",https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698366121,698366121,
sipa,2020-09-24 17:38:34,"For context, I believe the current behavior is:\n* For non-segwit spends, SCRIPT_ERR_CLEANSTACK is only returned when SCRIPT_VERIFY_CLEANSTACK is enabled, and refers strictly to stacks larger than 1 (because if the size was 0, SCRIPT_ERR_EVAL_FALSE would have been triggered already).\n* For segwit spends, SCRIPT_ERR_CLEANSTACK is returned for any script size different from exactly 1, and doesn't",https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698487304,698487304,
instagibbs,2020-09-24 17:45:34,@sipa if we do that might as well do minimalif too and any others similar,https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698490764,698490764,
sipa,2020-09-24 17:46:43,@instagibbs I don't think there are any others like that currently. Splitting out the consensus-defined MINIMALIF behavior in #19953 into a separate error code does make sense.,https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698491338,698491338,
instagibbs,2020-09-24 17:53:12,filed an issue in case someone wants to do it later(or sanket now if he wants),https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698494808,698494808,
sanket1729,2020-09-24 19:39:20,"@theStack, yup I faced when evaluating Segwit script. \n\nI can take on #20009. I think still PR is conceptually independent, so I will keep this open. \nLet me know if I should close this and address this issue along with the separation of Errors. ",https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698547898,698547898,
instagibbs,2020-09-25 13:40:25,re-ACK https://github.com/bitcoin/bitcoin/pull/20006/commits/af57766182013e17c23245671a33463f754ccd28,https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-698934923,698934923,
glozow,2020-09-26 14:32:43,reACK https://github.com/bitcoin/bitcoin/commit/af57766182013e17c23245671a33463f754ccd28,https://github.com/bitcoin/bitcoin/pull/20006#issuecomment-699503187,699503187,
instagibbs,2020-09-24 13:38:45,"since this is trivial change anyways, maybe ""must be exactly one"", somehow reads better to me",https://github.com/bitcoin/bitcoin/pull/20006#discussion_r494324066,494324066,src/script/script_error.cpp
sanket1729,2020-09-24 17:34:14,Agreed. This sounds better. ,https://github.com/bitcoin/bitcoin/pull/20006#discussion_r494493207,494493207,src/script/script_error.cpp
