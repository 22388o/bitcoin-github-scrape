theuni,2017-05-08T20:21:02Z,"utACK, other than the nits",https://github.com/bitcoin/bitcoin/pull/10248#issuecomment-299979350,299979350,
sipa,2017-05-17T21:13:52Z,I think I've addressed or responded to all comments.,https://github.com/bitcoin/bitcoin/pull/10248#issuecomment-302233443,302233443,
sipa,2017-06-01T23:47:16Z,The first commits of this PR are merged as part of #10195. I'm going to change the title to just reflect the effect of the last remaining commit.,https://github.com/bitcoin/bitcoin/pull/10248#issuecomment-305650767,305650767,
laanwj,2017-06-22T17:54:39Z,utACK cf68a48,https://github.com/bitcoin/bitcoin/pull/10248#issuecomment-310454858,310454858,
TheBlueMatt,2017-04-21T21:04:35Z,I believe this comment is wrong if this is pulled out of #10195.,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r112776518,112776518,src/validation.cpp
sipa,2017-05-03T03:21:06Z,Indeed; fixed.,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r114467039,114467039,src/validation.cpp
ryanofsky,2017-05-03T21:36:23Z,"In commit ""Introduce CHashVerifier to hash read data""\n\nCould replace these two lines with just `read(data, now);`",https://github.com/bitcoin/bitcoin/pull/10248#discussion_r114659669,114659669,src/hash.h
ryanofsky,2017-05-03T21:51:02Z,"In commit ""Deduplicate addrdb.cpp and use CHashWriter/Verifier""\n\nNot your change, but it isn't clear to me why this why this function is a part of the CAddrDB class and is non-static. It doesn't seem to access any state or be directly related to the class.",https://github.com/bitcoin/bitcoin/pull/10248#discussion_r114662171,114662171,src/addrdb.cpp
ryanofsky,2017-05-03T22:02:11Z,"In commit ""Deduplicate addrdb.cpp and use CHashWriter/Verifier""\n\nIt seems this logic to read the file into a memory buffer before deserializing it has gone away. Any idea why it was written that way in the first place?",https://github.com/bitcoin/bitcoin/pull/10248#discussion_r114664069,114664069,src/addrdb.cpp
theuni,2017-05-08T20:11:04Z,please check for ```nSize == 0``` to avoid problems like #10250,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r115341160,115341160,src/hash.h
theuni,2017-05-08T20:12:02Z,"Pass a reference instead, so that it can't be null?",https://github.com/bitcoin/bitcoin/pull/10248#discussion_r115341363,115341363,src/hash.h
sipa,2017-05-17T20:30:35Z,I don't like using references for objects that persist. This risks calling CHashVerifier(function_that_returns_a_Source()).,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r117102439,117102439,src/hash.h
sipa,2017-05-17T20:31:22Z,It seems that the invoked read and write method already need to deal with nSize==0 anyway?,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r117102602,117102602,src/hash.h
sipa,2017-05-17T21:05:49Z,I believe it's to protect against the case where the data is unusually expensive to deserialize. I'm not particularly worried about (non-adverserial) corruption that causes expensive deserialization without causing an error somewhere along the way.,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r117109996,117109996,src/addrdb.cpp
sipa,2017-05-17T21:13:35Z,I've made it static.,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r117111628,117111628,src/addrdb.cpp
sipa,2017-05-17T21:15:22Z,Done.,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r117111980,117111980,src/hash.h
laanwj,2017-06-06T10:24:57Z,IIRC the point was to be able to check the checksum before starting any deserialization work,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r120317771,120317771,src/addrdb.cpp
TheBlueMatt,2017-06-07T17:37:00Z,Seems it may be nicer to add a more analygous hasher to CHashVerifyer here - why not hash while writing the data instead of serializing twice?,https://github.com/bitcoin/bitcoin/pull/10248#discussion_r120694343,120694343,src/addrdb.cpp
sipa,2017-06-07T19:53:36Z,"Indeed. I don't think that's particularly interesting, but if that remains a requirement, I'll drop this PR.",https://github.com/bitcoin/bitcoin/pull/10248#discussion_r120728079,120728079,src/addrdb.cpp
