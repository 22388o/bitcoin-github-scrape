jgarzik,2014-06-04T18:51:51Z,"1) would prefer umask call not get moved\n2) seems overly complex for what it does\n3) poorly named.  should be ""system default perms"" not necessarily ""lax"" perms... they might not be lax, and the point of the feature is not to be lax, but to pass through the system default.\n",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45134751,45134751,
runeksvendsen,2014-06-05T10:32:30Z,"Hey Jeff\n\nI agree that it's a bit messy. Here's another version. It keeps the umask call in the same place, only adds 11 lines of code, and I've changed the option name to ""-sysperms"". But you can name it anything you want, I'm not good with names.\nThe only downside is that nothing is logged to debug.log when this option is in effect. But this needed to change anyway, as the first version of th",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45203977,45203977,
luke-jr,2014-06-05T15:54:55Z,"IMO we really shouldn't be changing umask at all, just opening sensitive files with the correct mode...\n",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45237781,45237781,
laanwj,2014-06-06T18:35:32Z,"@luke-jr I agree that would be much more elegant. The wallet (and associated environment files) should have the minimum possible permissions, whereas the block files and leveldb indices should be readable by anyone (or at least - as defined by the inherited umask).\nA possible obstacle would be the degree of configurability that leveldb and berkeleydb give us over created files. I'm not sure for e",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45370181,45370181,
runeksvendsen,2014-06-08T10:45:38Z,"I agree that the best solution is to not change the umask at all, but selective create sensitive files with the appropriate permissions. And when that is implemented, the code that this patch changes should be removed as a part of it. But until it's done the proper way, this patch offers a way to get around the problems associated with ignoring system default permissions.\n",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45433794,45433794,
laanwj,2014-06-08T10:59:21Z,"@runeksvendsen Agreed. This is the simplest solution for now, and offers blanket protection. It's easy to forget setting the umask for some wallet-related thing or another.\n",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45434052,45434052,
cozz,2014-06-08T16:07:34Z,So why not just skip umask in the disablewallet case? Why do we need -sysperms?\n,https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45440738,45440738,
runeksvendsen,2014-06-08T17:47:54Z,"@laanwj  I can do that. I thought about that as well, but I didn't do it because I thought the other approach would be clearer, and I was unsure about how an empty if-clause is handled (in case ENABLE_WALLET isn't set).\n\nWith the wallet functionality enabled, if debug.log does not exist and only -sysperms is passed (and not -disablewallet), debug.log will be created with system default permissio",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45443284,45443284,
laanwj,2014-06-08T19:02:10Z,"@runeksvendsen empty if clauses are perfectly safe, if you surround them with braces like done here.\n\n@cozz well this is more explicit; having the umask setting be a property of enable-wallet mode doesn't pass the principle of least surprise for me.\n",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-45445231,45445231,
BitcoinPullTester,2014-06-25T23:36:42Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4286_7e09b36ea5316671dfc86df62d90f78597b22fe9/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-47172355,47172355,
gmaxwell,2014-07-14T13:05:35Z,"In the future please try to get the ""this is useful"" text describing the motivation into the commit message. I was scratching my head at this. :)\n",https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-48896955,48896955,
runeksvendsen,2014-07-17T20:31:32Z,@gmaxwell Good to know. I will do that in the future.\n,https://github.com/bitcoin/bitcoin/pull/4286#issuecomment-49361403,49361403,
laanwj,2014-06-08T10:58:25Z,For sake of explicitness you could make it a fatal error if `-sysperms` is specified but the wallet is enabled. I like that slightly more than ignoring the conflict.\n,https://github.com/bitcoin/bitcoin/pull/4286#discussion_r13523683,13523683,src/init.cpp
laanwj,2014-06-08T16:12:51Z,"What about (same logic, reduces the number of GetBoolArg calls to one for each option):\n\n``` c++\n    if (GetBoolArg(""-sysperms"", false)) {\n#ifdef ENABLE_WALLET\n        if (!GetBoolArg(""-disablewallet"", false))\n            return InitError(""E...."")\n#endif\n    } else {\n        umask(077);\n    }\n```\n",https://github.com/bitcoin/bitcoin/pull/4286#discussion_r13524881,13524881,src/init.cpp
laanwj,2014-06-25T10:35:25Z,NIT: leave the command-line options sorted within their category\n,https://github.com/bitcoin/bitcoin/pull/4286#discussion_r14178418,14178418,src/init.cpp
