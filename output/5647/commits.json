[
  {
    "sha": "3ff735c99ae75c21397079f49859b81e89a2f5f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZmY3MzVjOTlhZTc1YzIxMzk3MDc5ZjQ5ODU5YjgxZTg5YTJmNWY4",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-01-12T17:53:10Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-01-12T19:58:17Z"
      },
      "message": "Increase block download timeout base from 10 to 20 minutes.\n\nThis harmonizes the block fetch timeout with the existing ping timeout\n and eliminates a guaranteed eventual failure from congestion collapse\n for a network operating right at its limit.\n\nIt's unlikely that we wouldn't suffer other failures if we were really\n anywhere near the network's limit, and a complete avoidance of congestion\n collapse risk requires (I think) an exponential back-off. So this isn't\n a major concern, but I think it's also useful for reducing the complexity\n of understanding out timeouts.",
      "tree": {
        "sha": "b25c414bbd034b0d82f4ae9dd12c5df4f59f1150",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b25c414bbd034b0d82f4ae9dd12c5df4f59f1150"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ff735c99ae75c21397079f49859b81e89a2f5f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ff735c99ae75c21397079f49859b81e89a2f5f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ff735c99ae75c21397079f49859b81e89a2f5f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ff735c99ae75c21397079f49859b81e89a2f5f8/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90c71548c795787b008bc337cb9332f75d1bccdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90c71548c795787b008bc337cb9332f75d1bccdb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90c71548c795787b008bc337cb9332f75d1bccdb"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0f536cbc6bbf85442546769dbcf71b5afe8822a5",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ff735c99ae75c21397079f49859b81e89a2f5f8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ff735c99ae75c21397079f49859b81e89a2f5f8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3ff735c99ae75c21397079f49859b81e89a2f5f8",
        "patch": "@@ -4534,12 +4534,12 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             LogPrintf(\"Peer=%d is stalling block download, disconnecting\\n\", pto->id);\n             pto->fDisconnect = true;\n         }\n-        // In case there is a block that has been in flight from this peer for (1 + 0.5 * N) times the block interval\n+        // In case there is a block that has been in flight from this peer for (2 + 0.5 * N) times the block interval\n         // (with N the number of validated blocks that were in flight at the time it was requested), disconnect due to\n         // timeout. We compensate for in-flight blocks to prevent killing off peers due to our own downstream link\n         // being saturated. We only count validated in-flight blocks so peers can't advertize nonexisting block hashes\n         // to unreasonably increase our timeout.\n-        if (!pto->fDisconnect && state.vBlocksInFlight.size() > 0 && state.vBlocksInFlight.front().nTime < nNow - 500000 * Params().TargetSpacing() * (2 + state.vBlocksInFlight.front().nValidatedQueuedBefore)) {\n+        if (!pto->fDisconnect && state.vBlocksInFlight.size() > 0 && state.vBlocksInFlight.front().nTime < nNow - 500000 * Params().TargetSpacing() * (4 + state.vBlocksInFlight.front().nValidatedQueuedBefore)) {\n             LogPrintf(\"Timeout downloading block %s from peer=%d, disconnecting\\n\", state.vBlocksInFlight.front().hash.ToString(), pto->id);\n             pto->fDisconnect = true;\n         }"
      }
    ]
  }
]