achow101,2017-12-05T04:18:26Z,tACK 3113573c847c76943c065b72d3e7a9edc643fed1,https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-349190738,349190738,
jamesob,2017-12-05T17:54:33Z,"tACK https://github.com/bitcoin/bitcoin/pull/11824/commits/3113573c847c76943c065b72d3e7a9edc643fed1\n\nI've been running `-reindex` for over twelve hours and haven't seen an OOM:\n```\njob@ali:~$ sudo egrep ""Kill.*bitcoind"" /var/log/syslog || echo ""cool""\ncool\n```",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-349386105,349386105,
jamesob,2017-12-05T22:25:16Z,"Just hit another OOM, but also realized I was on an outdated version of this branch (HEAD was `151b17da1 Block ActivateBestChain to empty validationinterface queue`). @TheBlueMatt do you recall what changed between `151b17da1` and current HEAD and if it would explain the difference between another OOM or not?\n\nIn any case, I'm pulling down the tip of this branch and starting another -reindex.",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-349462251,349462251,
TheBlueMatt,2017-12-05T22:27:56Z,"@jamesob No, the only differences there were in test_bitcoin.cpp, so that should have had no affect.",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-349462871,349462871,
achow101,2017-12-05T22:38:17Z,I haven't seen any OOMs and my node is almost fully reindexed. Granted it did go down sometime last night as it ran out of disk space. It's been running for ~6 hours now and was running for ~14 hours before then.,https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-349465237,349465237,
TheBlueMatt,2017-12-05T23:25:56Z,"Well this definitely fixes *a* bug...just did a reindex to 150k with 0.15, 0.15.1 master and this branch, peak memory usage on this branch and 0.15 and 0.15.1 were all about the same, master was 3x higher...I'll look more into our memory footprint and see what else is hiding.",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-349475729,349475729,
jamesob,2017-12-06T19:01:22Z,"tACK (again) https://github.com/bitcoin/bitcoin/pull/11824/commits/3113573c847c76943c065b72d3e7a9edc643fed1\n\nDefinitely hitting fewer OOMs reindexing on this branch than I was a week ago. :)",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-349740565,349740565,
jamesob,2017-12-08T22:54:14Z,My bitcoind process has been running for 37 hours on this branch; memory usage has held steady through and after a partial reindex.,https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-350392554,350392554,
TheBlueMatt,2017-12-09T18:22:15Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-350495791,350495791,
TheBlueMatt,2017-12-15T20:39:04Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-352106229,352106229,
jonasschnelli,2017-12-17T07:39:48Z,"Haven't looked at the code, but can confirm that a -reindex OOM/leak issue (#11822) was fixed once I merged in that PR.",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-352237747,352237747,
Damballahwedo,2017-12-24T17:33:38Z,"Don't send me anymore pub mail. How can't unsubscribe.\n\nOn Dec 24, 2017 9:22 AM, ""Matt Corallo"" <notifications@github.com> wrote:\n\n> *@TheBlueMatt* commented on this pull request.\n> ------------------------------\n>\n> In src/validation.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158606648>:\n>\n> > @@ -2566,6 +2567,16 @@ bool CChainState::ActivateBestChain(CValidationSt",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-353795683,353795683,
sipa,2017-12-29T09:31:23Z,"utACK 97d2b09c124e6e5803f7fd4503348d9710d1260f (and also some experimental evidence that this indeed removes the runaway memory usage).\n\nConfirmed only indentation/naming changes since af5a003.",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-354421728,354421728,
Sjors,2017-12-29T10:09:24Z,"I'm about to try this as well, will let you know if I still see extreme memory use during a reindex.",https://github.com/bitcoin/bitcoin/pull/11824#issuecomment-354426080,354426080,
dcousens,2017-12-05T00:16:39Z,"Should this be parameterized? Or at least a configurable constant?\nIs there any advantage to tweaking it?",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r154814580,154814580,src/validation.cpp
TheBlueMatt,2017-12-05T00:17:45Z,"During normal (read: non-IBD/reindex) usage, this should virtually never reach 10. During IBD/reindex, your memory is probably better speint in more dbcache than storing blocks you recently connected to eventually give to your wallet. I dont think more knobs is helpful here.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r154814746,154814746,src/validation.cpp
achow101,2017-12-05T03:58:38Z,It seems to me that this expects to see transactions first and then blocks. But can't a `getdata` message have the types in any order?,https://github.com/bitcoin/bitcoin/pull/11824#discussion_r154841745,154841745,src/net_processing.cpp
TheBlueMatt,2017-12-05T04:05:07Z,"No, we are allowed to (in fact always have) not finish the full queue before returning, and we do for blocks (always did). A peer shouldn't be able to make us spin giving them 100 blocks before processing any other peers' requests.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r154842507,154842507,src/net_processing.cpp
achow101,2017-12-05T04:19:14Z,"Ok, I see now. I didn't see the break for when the type was a block.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r154843830,154843830,src/net_processing.cpp
ryanofsky,2017-12-22T13:16:25Z,"https://github.com/bitcoin/bitcoin/pull/11824#discussion_r154841745\n\nIn commit ""Block ActivateBestChain to empty validationinterface queue""\n\nPlease add a code comment here saying this, I had exactly the same question as achow.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158490075,158490075,src/net_processing.cpp
ryanofsky,2017-12-22T13:22:25Z,"In commit ""Avoid cs_main in net_processing ActivateBestChain calls""\n\nThis change would be easier to understand if ProcessGetBlockData refactoring happened in a different commit than than the cs_main ActivateBestChain unlock.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158490923,158490923,src/net_processing.cpp
ryanofsky,2017-12-22T13:29:48Z,"In commit ""Avoid cs_main in net_processing ActivateBestChain calls""\n\nbest_chain_active argument is unused, should remove or use or explain",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158491959,158491959,src/net_processing.cpp
ryanofsky,2017-12-22T13:53:53Z,"In commit ""Avoid cs_main in net_processing ActivateBestChain calls""\n\nThis is pretty convoluted. If the point is just to release cs_main before calling ActivateBestChain, why not just use LEAVE_CRITICAL_SECTION / ENTER_CRITICAL_SECTION to release it? Is the problem just lack of a [`reverse_lock`](http://www.boost.org/doc/libs/1_66_0/doc/html/thread/synchronization.html#thread.synchronization.ot",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158495743,158495743,src/net_processing.cpp
ryanofsky,2017-12-22T14:10:27Z,"In commit ""Require no cs_main lock for ProcessNewBlock/ActivateBestChain""\n\nMaybe simplify this using mapWallet.at() instead of .find() and BOOST_CHECK.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158498123,158498123,src/wallet/test/wallet_tests.cpp
ryanofsky,2017-12-22T14:14:44Z,"https://github.com/bitcoin/bitcoin/pull/11824#discussion_r154814580\n\nIn commit ""Block ActivateBestChain to empty validationinterface queue""\n\n> During normal (read: non-IBD/reindex) usage, this should virtually never reach 10. During IBD/reindex, your memory is probably better speint in more dbcache than storing blocks you recently connected to eventually give to your wallet.\n\nPlease wr",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158498783,158498783,src/validation.cpp
ryanofsky,2017-12-22T14:20:16Z,"In commit ""Block ActivateBestChain to empty validationinterface queue""\n\nCould add a CValidationInterface::WaitForPendingCallbacks() method to wrap this up since this is also needed in other places.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158499695,158499695,src/validation.cpp
TheBlueMatt,2017-12-24T17:21:09Z,Done.,https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158606647,158606647,src/wallet/test/wallet_tests.cpp
TheBlueMatt,2017-12-24T17:21:10Z,"Done, in a new commit.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158606648,158606648,src/validation.cpp
TheBlueMatt,2017-12-24T17:21:11Z,"Valid point, refactored a bit, though LEAVE_CRITICAL_SECTION also isnt sufficient as you need to do the mapBlockIndex lookup again, which I went ahead and did.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158606650,158606650,src/net_processing.cpp
TheBlueMatt,2017-12-24T17:21:13Z,"Oops, was a bug, fixed in the refactor.",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158606651,158606651,src/net_processing.cpp
TheBlueMatt,2017-12-24T17:21:14Z,Done. I think.,https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158606652,158606652,src/net_processing.cpp
TheBlueMatt,2017-12-24T17:21:17Z,Done.,https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158606654,158606654,src/validation.cpp
sipa,2017-12-25T14:12:21Z,Indentation?,https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158645539,158645539,src/test/miner_tests.cpp
sipa,2017-12-25T14:12:52Z,Indentation?,https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158645554,158645554,src/wallet/test/wallet_tests.cpp
sipa,2017-12-25T14:15:27Z,It would be nice to introduce a named constant for this instead.,https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158645642,158645642,src/validation.cpp
sipa,2017-12-25T14:19:24Z,"If I understand this correctly, it's not actually waiting until a drain, as new events can be added to the queue before the callback added in this function is executed.\n\nIt's more a synchronization point (guaranteeing that at least all pre-existing events are executed first).",https://github.com/bitcoin/bitcoin/pull/11824#discussion_r158645785,158645785,src/validationinterface.h
