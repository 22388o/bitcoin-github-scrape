promag,2020-05-20 21:06:27,@MarcoFalke can't find the issue where this was discussed ðŸ˜ž ,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-631727028,631727028,
MarcoFalke,2020-05-20 21:30:02,#18856 ,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-631737450,631737450,
promag,2020-05-20 21:32:03,Thanks! I was filtering for your issues...,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-631738304,631738304,
MarcoFalke,2020-05-20 21:32:27,"Concept ACK, assuming that it does what we do in the python code. Haven't looked at the code here.\n\n```py\nself.network_event_loop.call_soon_threadsafe(self.network_event_loop.stop)",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-631738501,631738501,
promag,2020-05-21 08:58:08,@hebasto included 38e2be4 from #17457. If you run `QT_QPA_PLATFORM=cocoa src/qt/test/test_bitcoin-qt` without this commit you will see the warning.,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-631971304,631971304,
tarboss,2020-05-21 15:34:07,"setting env variable: QT_QPA_PLATFORM=windows ->same warning\nQWARN  : AppTests::appTests() QObject::connect: Cannot queue arguments of type 'size_t'\n(Make sure 'size_t' is registered using qRegisterMetaType().)\n\nalso on windows 10 & msvc the first test exits silent becoz\nfs::remove_all(m_path_root); in BasicTestingSetup::~BasicTestingSetup() says cannot remove dir,its not empty, but u ca",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-632157696,632157696,
promag,2020-05-21 15:37:04,"> setting env variable: QT_QPA_PLATFORM=windows ->same warning\n> QWARN : AppTests::appTests() QObject::connect: Cannot queue arguments of type 'size_t'\n> (Make sure 'size_t' is registered using qRegisterMetaType().)\n\n@tarboss 38e2be4be00914e8be7ae9c7215985c9b481b0ae fixes it right?\n",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-632161397,632161397,
tarboss,2020-05-21 15:40:35,"at least that warning \n\n********* Start testing of AppTests *********\nConfig: Using QtTest library 5.9.8, Qt 5.9.8 (x86_64-little_endian-llp64 static debug build; by MSVC 2017)\nPASS   : AppTests::initTestCase()\nQINFO  : AppTests::appTests() Backing up GUI settings to ""C:\\Users\\tester\\AppData\\Local\\Temp\\test_common_Bitcoin Core\\b516affdfbc77f1640d7e3e97f95db107556a19c4535813c07f5a2",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-632164897,632164897,
promag,2020-05-21 17:25:04,This might result in a connection reset by peer or something like that because one request job can be enqueued but not handled (no response sent).,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-632237977,632237977,
laanwj,2020-05-26 12:54:40,"~~I'm confused as to why the Qt change is in here. Please add an explanation to the opening post, or open a separate PR for it.~~\n\n~~ACK 1d39b7cf00f9d4a64d93caa9d47a177d759c2d6a~~\n\nACK fec477712f9b37dc16b61a54e037073974633f67",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-634006309,634006309,
promag,2020-05-26 13:09:30,"@laanwj see https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-631971304. I can drop the commit, again.",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-634014363,634014363,
MarcoFalke,2020-05-26 13:18:49,I prefer a new pull as well. The gui test thing doesn't need backport,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-634019510,634019510,
promag,2020-05-26 13:22:23,"Done, and rebased.",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-634021469,634021469,
MarcoFalke,2020-06-06 19:22:26,"Testing with diff:\n\n```diff\ndiff --git a/src/httpserver.cpp b/src/httpserver.cpp\nindex 5e78fd1d71..fe3a3a8aab 100644\n--- a/src/httpserver.cpp\n+++ b/src/httpserver.cpp\n@@ -264,6 +264,7 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n     // Dispatch to worker thread\n     if (i != iend) {\n         std::unique_ptr<HTTPWorkItem> item(new HTTPWorkItem(std::move",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-640106647,640106647,
promag,2020-06-11 21:47:34,Thanks for these instructions @MarcoFalke.,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-642943808,642943808,
promag,2020-06-23 08:59:54,"@MarcoFalke updated, see https://github.com/bitcoin/bitcoin/pull/19033#discussion_r443870143.",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-648009247,648009247,
promag,2020-06-28 22:11:37,"Please remove tag ""waiting for author"".",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-650828923,650828923,
MarcoFalke,2020-07-09 19:07:14,"Concept ACK. Fixing bugs is good, but I can't review this. Happy to test some time",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-656300133,656300133,
promag,2020-07-09 19:10:05,"Ops, bad rebase! Should have db867b59d9ce29bcc2c872986085d99af4d1bcfc rebased. Will fix..",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-656301352,656301352,
promag,2020-07-12 01:00:00,@laanwj ping.,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-657156618,657156618,
fjahr,2020-07-15 22:31:15,"Code review ACK 4e353cb618745cdb5d98e58e7dcd400ded01299a\n\nCouldn't reproduce it locally per Marco's instructions right now (some local Valgrind issue so I couldn't run the tests under it) but this looks like a correct fix for the race to me.",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-659048154,659048154,
promag,2020-09-07 10:52:49,Ping.,https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-688246235,688246235,
promag,2020-12-14 23:35:45,"Thanks for reviewing @LarryRuane! I'll hold on your suggestion to keep your and @fjahr ACK. I also think the error and log messages can be improved in a follow to avoid dragging this. In any case I hope my above comments are clear to you, otherwise let me know.\n\n@hebasto mind to test again? It would be great to push this early on the release cycle.",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-744808991,744808991,
achow101,2021-06-14 18:58:26,"ACK 4e353cb618745cdb5d98e58e7dcd400ded01299a\n\nReviewed the code and it makes sense. However I was unable to reproduce the race condition so I cannot test this.",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-860918662,860918662,
LarryRuane,2021-06-15 00:09:05,"(re-)ACK 4e353cb618745cdb5d98e58e7dcd400ded01299a\nTested again rebased on master d75a1df6178aabf6f19271786e48bc5d57eddb54, Ubuntu 20.04, was able to reproduce the bug using the [one-line patch](https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-640106647) Marco suggested, and the PR still fixes it.",https://github.com/bitcoin/bitcoin/pull/19033#issuecomment-861071512,861071512,
laanwj,2020-05-21 17:06:05,"`workQueue` is not created if `eventBase` couldn't be created, so it seems this `else {}` clause is redundant?",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r428789325,428789325,src/httpserver.cpp
promag,2020-05-21 17:22:52,"@laanwj changed approach, please take a new look.",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r428798578,428798578,src/httpserver.cpp
laanwj,2020-06-18 15:16:57,"I don't think this is the correct fix. By the time `eventHTTP` / `eventBase` is freed it needs to be sure that there are no workers any more, and that there's nothing in the work queue. After all, work in progress would refer to them.",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r442305166,442305166,src/httpserver.cpp
promag,2020-06-22 22:59:38,"In latest commit:\n - prevent adding stuff to queue after interrupt\n - after interrupt queue is drained\n\nSo at this point queue is empty and concurrent `http_request_cb` fail to enqueue.",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r443870143,443870143,src/httpserver.cpp
LarryRuane,2020-12-14 19:34:08,"This is a necessary change, but because of this it, the following can appear in the `debug.log`:\n```\n2020-12-14T19:03:41Z WARNING: request rejected because http work queue depth exceeded, it can be increased with the -rpcworkqueue= setting\n```\nwhich is harmless, but a bit confusing and definitely misleading. I suggest adding this guard around that `LogPrintf`:\n```\n        if (workQueue",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r542688642,542688642,src/httpserver.cpp
LarryRuane,2020-12-14 20:32:21,"Good change! This ensures that the queue is empty before exiting the thread, so there are no leftover items in the work queue when the destructor runs; without this, I got the following to appear in `debug.log` during testing:\n```\n2020-12-14T19:11:40Z ~HTTPRequest: Unhandled request\n```",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r542750662,542750662,src/httpserver.cpp
LarryRuane,2020-12-14 20:44:19,"Agree that this is the correct fix, because this now occurs _after_ the call to `g_thread_http.join()` (just above, line 468). This join ensures that no new items can be enqueued.\n\nSuggestion, you may want to keep all of the `workQueue` shutdown code together and move it to just after the call to `g_thread_http.join()`, that is, after line 469 (with the current line numbering, in other words j",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r542762895,542762895,src/httpserver.cpp
promag,2020-12-14 23:18:17,"Well in that case the RPC error is also misleading. I'd like to avoid more calls to `ShutdownRequested`. Maybe just reword the error to something along ""work queue full or shutdown in progress"".",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r542916874,542916874,src/httpserver.cpp
promag,2020-12-14 23:21:47,"Right, I would have to test to make sure but I think without this the client wouldn't get a response. I also think that very last response would now have `connection: close` header, see `HTTPRequest::WriteReply` - another case I'd like to remove the call to `ShutdownRequested`.",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r542918577,542918577,src/httpserver.cpp
promag,2020-12-14 23:32:21,"It can't be ðŸ˜„  this is the goal of this PR - destroy the work queue after event base finish. After `g_thread_http.join()` there can be stuff pending on the event base, and if you delete the `workQueue` before the event base finishes then all pending `workItems` will be destroyed (because they are `unique_ptr`) and then it's only problems from here on.",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r542923069,542923069,src/httpserver.cpp
LarryRuane,2020-12-15 01:03:24,"Ah, okay, I didn't understand about the event base; so maybe we could do all the shutdown (deconstruct) of the `workQueue` down here, where you now have the `delete`. Would this work?\n<details>\n<summary>suggestion</summary>\n\n```\nvoid StopHTTPServer()\n{\n    LogPrint(BCLog::HTTP, ""Stopping HTTP server\n"");\n    // Unlisten sockets, these are what make the event loop running, which mea",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r542965416,542965416,src/httpserver.cpp
LarryRuane,2020-12-15 01:05:49,"Yes, I tested this, and without the changes to `Enqueue` and `Run`, `bitcoin-cli` prints the following:\n```\nerror: Could not connect to the server 127.0.0.1:8332 (error code 1 - ""EOF reached"")\n\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\n```\n(I think this is the client not getting a response.)\n\nWith your changes to `Enqueue` and `Ru",https://github.com/bitcoin/bitcoin/pull/19033#discussion_r542966408,542966408,src/httpserver.cpp
