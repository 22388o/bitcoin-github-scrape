[
  {
    "sha": "5e737a009234cbd7cf53748d3d28a2da5221192f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTczN2EwMDkyMzRjYmQ3Y2Y1Mzc0OGQzZDI4YTJkYTUyMjExOTJm",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-10-11T22:19:44Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-10-14T20:47:42Z"
      },
      "message": "rpc, wallet: Expose database format in getwalletinfo",
      "tree": {
        "sha": "6683dfbc179aecb368de0f8fc94fd29d86ce485c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6683dfbc179aecb368de0f8fc94fd29d86ce485c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e737a009234cbd7cf53748d3d28a2da5221192f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e737a009234cbd7cf53748d3d28a2da5221192f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e737a009234cbd7cf53748d3d28a2da5221192f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e737a009234cbd7cf53748d3d28a2da5221192f/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4a29d0a90b821c443c10891d9326c534d15cf97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4a29d0a90b821c443c10891d9326c534d15cf97",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a29d0a90b821c443c10891d9326c534d15cf97"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9073c1b6b369b5d57ca66471436f8ca02a292464",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=5e737a009234cbd7cf53748d3d28a2da5221192f",
        "patch": "@@ -146,6 +146,7 @@ class BerkeleyDatabase : public WalletDatabase\n     /** Return path to main database filename */\n     std::string Filename() override { return (env->Directory() / strFile).string(); }\n \n+    std::string Format() override { return \"bdb\"; }\n     /**\n      * Pointer to shared database environment.\n      *"
      },
      {
        "sha": "940d1cd2422a733ee960fc28b4c3989e5c963c0f",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=5e737a009234cbd7cf53748d3d28a2da5221192f",
        "patch": "@@ -144,6 +144,8 @@ class WalletDatabase\n     /** Return path to main database file for logs and error messages. */\n     virtual std::string Filename() = 0;\n \n+    virtual std::string Format() = 0;\n+\n     std::atomic<unsigned int> nUpdateCounter;\n     unsigned int nLastSeen;\n     unsigned int nLastFlushed;\n@@ -190,6 +192,7 @@ class DummyDatabase : public WalletDatabase\n     void IncrementUpdateCounter() override { ++nUpdateCounter; }\n     void ReloadDbEnv() override {}\n     std::string Filename() override { return \"dummy\"; }\n+    std::string Format() override { return \"dummy\"; }\n     std::unique_ptr<DatabaseBatch> MakeBatch(bool flush_on_close = true) override { return MakeUnique<DummyBatch>(); }\n };\n "
      },
      {
        "sha": "faba057f6a8a40d75747afdca6de9654ff5cc6d6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=5e737a009234cbd7cf53748d3d28a2da5221192f",
        "patch": "@@ -2422,6 +2422,7 @@ static RPCHelpMan getwalletinfo()\n                         {\n                         {RPCResult::Type::STR, \"walletname\", \"the wallet name\"},\n                         {RPCResult::Type::NUM, \"walletversion\", \"the wallet version\"},\n+                        {RPCResult::Type::STR, \"format\", \"the database format (bdb or sqlite)\"},\n                         {RPCResult::Type::STR_AMOUNT, \"balance\", \"DEPRECATED. Identical to getbalances().mine.trusted\"},\n                         {RPCResult::Type::STR_AMOUNT, \"unconfirmed_balance\", \"DEPRECATED. Identical to getbalances().mine.untrusted_pending\"},\n                         {RPCResult::Type::STR_AMOUNT, \"immature_balance\", \"DEPRECATED. Identical to getbalances().mine.immature\"},\n@@ -2465,6 +2466,7 @@ static RPCHelpMan getwalletinfo()\n     int64_t kp_oldest = pwallet->GetOldestKeyPoolTime();\n     obj.pushKV(\"walletname\", pwallet->GetName());\n     obj.pushKV(\"walletversion\", pwallet->GetVersion());\n+    obj.pushKV(\"format\", pwallet->GetDatabase().Format());\n     obj.pushKV(\"balance\", ValueFromAmount(bal.m_mine_trusted));\n     obj.pushKV(\"unconfirmed_balance\", ValueFromAmount(bal.m_mine_untrusted_pending));\n     obj.pushKV(\"immature_balance\", ValueFromAmount(bal.m_mine_immature));"
      },
      {
        "sha": "63c10b7a0d81772b94928ff93015593b9336e9ec",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=5e737a009234cbd7cf53748d3d28a2da5221192f",
        "patch": "@@ -33,7 +33,7 @@ class WalletStorage\n public:\n     virtual ~WalletStorage() = default;\n     virtual const std::string GetDisplayName() const = 0;\n-    virtual WalletDatabase& GetDatabase() = 0;\n+    virtual WalletDatabase& GetDatabase() const = 0;\n     virtual bool IsWalletFlagSet(uint64_t) const = 0;\n     virtual void UnsetBlankWalletFlag(WalletBatch&) = 0;\n     virtual bool CanSupportFeature(enum WalletFeature) const = 0;"
      },
      {
        "sha": "693a2ef55a3cf9c4192782bdc72b1f6302fda111",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=5e737a009234cbd7cf53748d3d28a2da5221192f",
        "patch": "@@ -105,6 +105,7 @@ class SQLiteDatabase : public WalletDatabase\n     void IncrementUpdateCounter() override { ++nUpdateCounter; }\n \n     std::string Filename() override { return m_file_path; }\n+    std::string Format() override { return \"sqlite\"; }\n \n     /** Make a SQLiteBatch connected to this database */\n     std::unique_ptr<DatabaseBatch> MakeBatch(bool flush_on_close = true) override;"
      },
      {
        "sha": "74de55dcb522bd9f301b93624debe4b1baea6b1e",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e737a009234cbd7cf53748d3d28a2da5221192f/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=5e737a009234cbd7cf53748d3d28a2da5221192f",
        "patch": "@@ -739,7 +739,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     {\n         return *database;\n     }\n-    WalletDatabase& GetDatabase() override { return *database; }\n+    WalletDatabase& GetDatabase() const override { return *database; }\n \n     /**\n      * Select a set of coins such that nValueRet >= nTargetValue and at least"
      }
    ]
  },
  {
    "sha": "624bab00dd2cc8e2ebd77dc0a669bc8d507c3721",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjRiYWIwMGRkMmNjOGUyZWJkNzdkYzBhNjY5YmM4ZDUwN2MzNzIx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-15T14:46:34Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-15T14:46:34Z"
      },
      "message": "test: add coverage for getwalletinfo format field",
      "tree": {
        "sha": "b1aef14c0e63f0e1277815461dfc11c89a7b4980",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1aef14c0e63f0e1277815461dfc11c89a7b4980"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/624bab00dd2cc8e2ebd77dc0a669bc8d507c3721",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+IYMsACgkQT1chs9Dj\nkh3g6BAAwEI7kvNmJbNJV6RV/Yr5k3rDTyZ5XtDvHmyZ5wSIsnohbVf4vqLu+dyt\nIjkzhfqCUzNAJsQaZvVUdzjiCoBqiHDrfqr+S+eTirJIipPBbdfyZP6sRYSikQ7j\n4MuTT3L70qt3qBUfrMsCQLEnMcH5CTeMNF8uHGRykE5r+PY8v/DqDIX8gkR9iEnZ\n/QyP/qukxvk1ZM6pmuHaTiq0MO484bmQ9jjagQNbY7GSXMKRB9hT0b3k6rKQI28g\nQmv11aEO7u4CDO4vjgyu7cxYq3OPxZpJndWkN/FcUHQfnNs1mbj50RCJSb41AoLw\nuM2iCcy7NJ6akVB3Pf32M9Rz26Cw8yUXv7vJYGfiXk28p/pbUbUZaC/qRHzZlhUx\n6LEDJSNAeEZcvcgmzAB7QtmGGsHTVf8b+wDJsF5Wkjcc7U6UAHPPR5cTpIaPypMn\nkHW5hHEM3Y0gUUgZvXsbyB/uGe9Ja+sBGQewzboVYXUa8B4YlL31i6tw9B1EoSmG\nPNCHJVTWF2UYkZaXcC9aM/a0kP1k7By2nxmBwvUmFS+8jHM6o3KIC3QgTMTD0dXr\nnIzJD1Z4o29ngs6DoAqOFd/iuoYKwIKTZh4BcRFf4YuCxiqoaxFGaOQu8YUBr+0t\nkPPQi50BxKGU8jE0GFoJ3+11lCSnAdm+fx5FDLDT9CK0iZeQH28=\n=kC2g\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIC7TFJYkauzXpJ1zxqo/KQVzQiIAR23j4TEnJe2OOw9eCP/wEGqdC+Noux+6\nR3RPuqrSDc0I8SC575TG0REGwCL6fdWzrzK6OGoKHBsLEi2JDQYYn76PuAjxBF+I\nYM7wCPCYz9FQMR6GAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQcwTARa1rPt8udMggOHcKDgjwIN0NIEmBuvDQ3/Wa\n3qTIC0vxdIgdHnXs6bhTqudyOTKUCPEEX4hgzfAIwXEQtwo0OtUAg9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//w\nEKSn6BBxOwaN4L89KKrtYpYI8QRfiGDM8AhZWNmqBDfWDACD3+MNLvkMjiMiaHR0\ncHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQyVzN6QAbifw7vzXUVJD9\njAjxBF+IYMzwCFf9qnjtf6hcAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b1aef14c0e63f0e1277815461dfc11c89a7b4980\nparent 5e737a009234cbd7cf53748d3d28a2da5221192f\nauthor Jon Atack <jon@atack.com> 1602773194 +0200\ncommitter Jon Atack <jon@atack.com> 1602773194 +0200\n\ntest: add coverage for getwalletinfo format field\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/624bab00dd2cc8e2ebd77dc0a669bc8d507c3721",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/624bab00dd2cc8e2ebd77dc0a669bc8d507c3721",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/624bab00dd2cc8e2ebd77dc0a669bc8d507c3721/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e737a009234cbd7cf53748d3d28a2da5221192f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e737a009234cbd7cf53748d3d28a2da5221192f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e737a009234cbd7cf53748d3d28a2da5221192f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "51e9ec8f40e3673c83b3baa90adbc4cca95e9190",
        "filename": "test/functional/wallet_descriptor.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/624bab00dd2cc8e2ebd77dc0a669bc8d507c3721/test/functional/wallet_descriptor.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/624bab00dd2cc8e2ebd77dc0a669bc8d507c3721/test/functional/wallet_descriptor.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_descriptor.py?ref=624bab00dd2cc8e2ebd77dc0a669bc8d507c3721",
        "patch": "@@ -21,6 +21,9 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n+        wallet_info = self.nodes[0].getwalletinfo()\n+        assert_equal(wallet_info['format'], 'bdb')\n+\n         # Make a descriptor wallet\n         self.log.info(\"Making a descriptor wallet\")\n         self.nodes[0].createwallet(wallet_name=\"desc1\", descriptors=True)\n@@ -29,6 +32,7 @@ def run_test(self):\n         # A descriptor wallet should have 100 addresses * 3 types = 300 keys\n         self.log.info(\"Checking wallet info\")\n         wallet_info = self.nodes[0].getwalletinfo()\n+        assert_equal(wallet_info['format'], 'sqlite')\n         assert_equal(wallet_info['keypoolsize'], 300)\n         assert_equal(wallet_info['keypoolsize_hd_internal'], 300)\n         assert 'keypoololdest' not in wallet_info"
      }
    ]
  }
]