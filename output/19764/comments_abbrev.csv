Empact,2020-08-19 15:52:44,"Could improve the documentation of these changes by including *why* each change was made, in addition to *what* was done. https://chris.beams.io/posts/git-commit/#why-not-how\n\nSpeaking as someone who is only so familiar with the build system who would like to learn more.",https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-676509947,676509947,
DrahtBot,2020-08-20 19:51:56,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19245 ([WIP DONOTMERGE] Replace boost::filesystem with std::filesystem (in c++17) by kiminuo)\n\nIf you consider this pul",https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-677870015,677870015,
dongcarl,2020-08-25 16:43:34,"@Empact I updated the description with more justification and context, please let me know if anything's unclear!",https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-680140918,680140918,
theuni,2020-08-27 20:06:56,"Concept ACK.\n\n> Bit of a bummer (for slower systems) that we'll have to extract Boost twice now. Do you think using bcp is on the roadmap after this?\n\nVery true, I had completely forgotten about this overhead when we discussed this. +1 for looking into reducing the size of the contents of the tarballs.\n\nAlso, it's worth investigating switching from the boost .tar.bz2 to the .tar.gz. Ma",https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-682164623,682164623,
hebasto,2020-09-16 08:17:27,Concept ACK. It would be nice to document `native_*` packages usage in [`packages.md`](https://github.com/bitcoin/bitcoin/blob/master/depends/packages.md) (maybe in a follow up pull).,https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-693251408,693251408,
dongcarl,2020-09-23 19:11:51,Rebased over #19868 and dropped my solution.,https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-697913064,697913064,
practicalswift,2020-09-23 20:18:35,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-697949826,697949826,
dongcarl,2020-11-06 15:38:23,:facepalm: Rebased and removed the patch! Should be good to go!,https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-723146153,723146153,
DrahtBot,2020-11-09 07:05:46,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 7e373294a5ae819099c39d9d03d1f5a311d63cfc<br>(master) | commit be7cd174e98a82f0d62c6382760e895a040a931a<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`09a0121d77ec4be2...`](https://drahtbot.space/guix/bitcoin/bitcoin/7e373294a5ae819099c39d9d03d1f5a311d63cfc/bitcoin-7e373294a5ae-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-723808033,723808033,
DrahtBot,2020-11-11 08:11:37,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 7e373294a5ae819099c39d9d03d1f5a311d63cfc<br>(master) | commit be7cd174e98a82f0d62c6382760e895a040a931a<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`83c77088c64ce35f...`](https://drahtbot.space/gitian/bitcoin/bitcoin/7e373294a5ae819099c39d9d03d1f5a311d63cfc/bitcoin-7e373294a5ae-aarch64-l,https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-725274119,725274119,
fanquake,2020-11-12 05:15:21,"> Rebased and removed the patch! Should be good to go!\n\nThanks. We'll merge this post branch-off.",https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-725842762,725842762,
dongcarl,2020-11-23 20:52:56,Pushed a pure-rebase. Still ready for merge!,https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-732419718,732419718,
laanwj,2020-11-24 09:31:43,Concept and code review ACK f190343c96520db254d6689f8f24c9eb36bead6b,https://github.com/bitcoin/bitcoin/pull/19764#issuecomment-732773236,732773236,
fanquake,2020-08-20 06:09:39,"Can drop this comment along with the `sed`.\n\n```suggestion\n```",https://github.com/bitcoin/bitcoin/pull/19764#discussion_r473632769,473632769,depends/packages/boost.mk
fanquake,2020-08-20 06:13:24,"You've dropped `_archiver_`, but haven't replaced it with `_ar` until the following commit (94c18d5aa8ca7325365c1dd4ab310961383dde64), which means 0fc10d153ea1eaa05c39f9706369f11f5ab3944d doesn't compile.",https://github.com/bitcoin/bitcoin/pull/19764#discussion_r473635242,473635242,depends/packages/boost.mk
fanquake,2020-08-20 06:29:49,"Even though this option shouldn't affect us, given we don't build iostreams, this is a nice simplification. Easier to pass `sNO_COMPRESSION` and not worry about new types being added in future, as we were already missing `NO_LZMA` and `NO_ZSTD`.",https://github.com/bitcoin/bitcoin/pull/19764#discussion_r473646920,473646920,depends/packages/boost.mk
fanquake,2020-08-20 06:48:03,"This doesn't seem to be working as expected. When I pass `CC=clang CXX=clang++`, `native_b2` is still built using the GCC toolset (Boost is built with Clang). I modified this to use a similar change as you've made above, i.e:\n```diff\ndiff --git a/depends/packages/native_b2.mk b/depends/packages/native_b2.mk\nindex 184c203d9..aaa37cdcf 100644\n--- a/depends/packages/native_b2.mk\n+++ b/depen",https://github.com/bitcoin/bitcoin/pull/19764#discussion_r473660356,473660356,depends/packages/native_b2.mk
dongcarl,2020-08-25 16:38:09,"Ah, the reason why setting `CC=clang` and `CXX=clang++` doesn't work is because `CC` and `CXX` only control the `host_{CC,CXX}`, and since `native_b2` is a `native` package, its `$(package)_cxx` derives its value from `build_CXX`. So setting `build_CXX=clang` should work.\n\nAs for the case of just setting `$(package)_toolset_$(host_os)=clang`, `$(package)_toolset_$(host_os)` strictly depends on",https://github.com/bitcoin/bitcoin/pull/19764#discussion_r476585786,476585786,depends/packages/native_b2.mk
dongcarl,2020-08-25 16:42:34,Dropped!,https://github.com/bitcoin/bitcoin/pull/19764#discussion_r476588461,476588461,depends/packages/boost.mk
dongcarl,2020-08-25 16:42:43,Resolved!,https://github.com/bitcoin/bitcoin/pull/19764#discussion_r476588556,476588556,depends/packages/boost.mk
theuni,2020-08-27 20:18:40,What does this fix?,https://github.com/bitcoin/bitcoin/pull/19764#discussion_r478671982,478671982,depends/funcs.mk
dongcarl,2020-08-28 00:41:12,"`$($(1)_dependencies)` doesn't include `$($($(1)_type)_native_toolchain) $($($(1)_type)_native_binutils)`, meaning that:\n```sh\n$ make -C depends/ HOST=x86_64-apple-darwin16 print-zlib_dependencies\nmake: Entering directory '/home/dongcarl/src/bitcoin/master/depends'\nzlib_dependencies =\nmake: Leaving directory '/home/dongcarl/src/bitcoin/master/depends'\n```\nwhile\n```\n$ make -C depe",https://github.com/bitcoin/bitcoin/pull/19764#discussion_r478768995,478768995,depends/funcs.mk
hebasto,2020-09-04 10:44:36,Please see an alternative #19868.,https://github.com/bitcoin/bitcoin/pull/19764#discussion_r483538875,483538875,depends/funcs.mk
fanquake,2020-10-01 05:59:38,"Yep, thanks for clarifying.",https://github.com/bitcoin/bitcoin/pull/19764#discussion_r498000146,498000146,depends/packages/native_b2.mk
