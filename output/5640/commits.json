[
  {
    "sha": "c6b7b29f232c651f898eeffb93f36c8f537c56d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNmI3YjI5ZjIzMmM2NTFmODk4ZWVmZmI5M2YzNmM4ZjUzN2M1NmQy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-11T10:08:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-12T07:59:03Z"
      },
      "message": "Improve robustness of DER recoding code\n\nAdd some defensive programming on top of #5634.\n\nThis copies the respective OpenSSL code in ECDSA_verify in\nOpenSSL pre-1.0.1k (e.g. https://github.com/openssl/openssl/blob/OpenSSL_1_0_1j/crypto/ecdsa/ecs_vrf.c#L89)\nmore closely.\n\nAs reported by @sergiodemianlerner.",
      "tree": {
        "sha": "23fd890755438012c9a2eb460a022842dcbe7105",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23fd890755438012c9a2eb460a022842dcbe7105"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6b7b29f232c651f898eeffb93f36c8f537c56d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6b7b29f232c651f898eeffb93f36c8f537c56d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c6b7b29f232c651f898eeffb93f36c8f537c56d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6b7b29f232c651f898eeffb93f36c8f537c56d2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f73a8f64d1555b4053f2a0a5c79083e50a0ce21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f73a8f64d1555b4053f2a0a5c79083e50a0ce21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f73a8f64d1555b4053f2a0a5c79083e50a0ce21"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 12,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5e3aec25baf70f7478f99aaa4747be300ab1b83d",
        "filename": "src/ecwrapper.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6b7b29f232c651f898eeffb93f36c8f537c56d2/src/ecwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6b7b29f232c651f898eeffb93f36c8f537c56d2/src/ecwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecwrapper.cpp?ref=c6b7b29f232c651f898eeffb93f36c8f537c56d2",
        "patch": "@@ -124,7 +124,18 @@ bool CECKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSi\n     unsigned char *norm_der = NULL;\n     ECDSA_SIG *norm_sig = ECDSA_SIG_new();\n     const unsigned char* sigptr = &vchSig[0];\n-    d2i_ECDSA_SIG(&norm_sig, &sigptr, vchSig.size());\n+    assert(norm_sig);\n+    if (d2i_ECDSA_SIG(&norm_sig, &sigptr, vchSig.size()) == NULL)\n+    {\n+        /* As of OpenSSL 1.0.0p d2i_ECDSA_SIG frees and nulls the pointer on\n+         * error. But OpenSSL's own use of this function redundantly frees the\n+         * result. As ECDSA_SIG_free(NULL) is a no-op, and in the absence of a\n+         * clear contract for the function behaving the same way is more\n+         * conservative.\n+         */\n+        ECDSA_SIG_free(norm_sig);\n+        return false;\n+    }\n     int derlen = i2d_ECDSA_SIG(norm_sig, &norm_der);\n     ECDSA_SIG_free(norm_sig);\n     if (derlen <= 0)"
      }
    ]
  }
]