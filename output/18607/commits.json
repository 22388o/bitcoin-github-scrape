[
  {
    "sha": "fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTg2YTRiYmZjMDAwNTkzYWU0YWQ5ZGNkYWVjM2ZkMGMwNDA2MDg2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-12T21:02:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-12T21:04:03Z"
      },
      "message": "rpc: Rename first arg of generateblock RPC to \"output\"",
      "tree": {
        "sha": "f84cb37f299b3413b5e5f1c03b0aeccbe11a2789",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f84cb37f299b3413b5e5f1c03b0aeccbe11a2789"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiwPgwAt8YRUP16gQCzGHfgm9BxexJzKrO/xhetCwUZ9M3wC80GyumXcRl7Ev9B\n0rR2qgqPTTidAQC9MuOdNFMWN5/ogTltfOjG0N+L7pwBk9bUNqxV4HIDMbGXcO0p\nekTwgsI3pfMdjtesau0k+Eeys4Z+FDUO9r87cyizqrr5LUWG9uXWqGkwI38CEl3x\nE6XLfXeIMUmmvh0uRzjdJqZ9gu9W7WIx7rnUtftWc+1hwCIOUU4Lw7p2YHSVMj0w\nAFfoDc6xcPrIs82YUhI/lygP/gryaTMf6oi/ptCAaGd5Ea56p9qZiv7DLForHFCV\ngK3FpvmE5KUV9DY33PHGbkeXmp47EnDgw//+HvrCmQeD6DPONfGHXmyrRKktB/OG\nDLX71jfEWyME4RRNW8cgbnWl5uEkUDztBxDt78Hdf/t8hfreIJ5hCrOKnrDGF3bL\nF/mlPjwT5ax3OcXvhDf+Ji3DVHedRwm2CTwV06VC2x76jOmVYFJia0smUlHBzvgM\nlDkCWISn\n=pFBM\n-----END PGP SIGNATURE-----",
        "payload": "tree f84cb37f299b3413b5e5f1c03b0aeccbe11a2789\nparent ed3b8eada8038fdfd661e8bde934a5e355ddcd9b\nauthor MarcoFalke <falke.marco@gmail.com> 1586725342 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1586725443 -0400\n\nrpc: Rename first arg of generateblock RPC to \"output\"\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed3b8eada8038fdfd661e8bde934a5e355ddcd9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed3b8eada8038fdfd661e8bde934a5e355ddcd9b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed3b8eada8038fdfd661e8bde934a5e355ddcd9b"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "05d3fd6afb59ea4c229d7ff9edc9ecff0a03ccf7",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086",
        "patch": "@@ -277,19 +277,19 @@ static UniValue generateblock(const JSONRPCRequest& request)\n     RPCHelpMan{\"generateblock\",\n         \"\\nMine a block with a set of ordered transactions immediately to a specified address or descriptor (before the RPC call returns)\\n\",\n         {\n-            {\"address/descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n+            {\"output\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address or descriptor to send the newly generated bitcoin to.\"},\n             {\"transactions\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"An array of hex strings which are either txids or raw transactions.\\n\"\n                 \"Txids must reference transactions currently in the mempool.\\n\"\n                 \"All transactions must be valid and in valid order, otherwise the block will be rejected.\",\n                 {\n                     {\"rawtx/txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::OMITTED, \"\"},\n                 },\n-            }\n+            },\n         },\n         RPCResult{\n             RPCResult::Type::OBJ, \"\", \"\",\n             {\n-                {RPCResult::Type::STR_HEX, \"hash\", \"hash of generated block\"}\n+                {RPCResult::Type::STR_HEX, \"hash\", \"hash of generated block\"},\n             }\n         },\n         RPCExamples{\n@@ -1188,7 +1188,7 @@ static const CRPCCommand commands[] =\n \n     { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      {\"nblocks\",\"address\",\"maxtries\"} },\n     { \"generating\",         \"generatetodescriptor\",   &generatetodescriptor,   {\"num_blocks\",\"descriptor\",\"maxtries\"} },\n-    { \"generating\",         \"generateblock\",          &generateblock,    {\"address\",\"transactions\"} },\n+    { \"generating\",         \"generateblock\",          &generateblock,          {\"output\",\"transactions\"} },\n \n     { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       {\"conf_target\", \"estimate_mode\"} },\n "
      },
      {
        "sha": "5298f385ba8168ec7dda15fcb1b162f6480c70a8",
        "filename": "test/functional/rpc_generateblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086/test/functional/rpc_generateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086/test/functional/rpc_generateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_generateblock.py?ref=fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086",
        "patch": "@@ -23,7 +23,7 @@ def run_test(self):\n \n         self.log.info('Generate an empty block to address')\n         address = node.getnewaddress()\n-        hash = node.generateblock(address, [])['hash']\n+        hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(hash, 2)\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], address)"
      }
    ]
  },
  {
    "sha": "fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTViMWYwNjdmY2Y4YmViYjIzNDU1ZGQ4YTE2Y2RlNTA2OGU3OWNk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-12T21:09:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-16T12:45:05Z"
      },
      "message": "rpc: Document all aliases for second arg of getblock",
      "tree": {
        "sha": "17dc98f13fa5b4015128b86265989a927f68bcdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/17dc98f13fa5b4015128b86265989a927f68bcdb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiceQwAy26+CtuNxvFd8kx/W+r+44vJzJ7+Nk66TAIw6qjhVWdT8QBWVS4roY3x\nm8txZTdSuatidLMWn98MQdq3wE6eaklHdVQkx0YbQ6kUZqKvhpqNAg3fh3feA/LU\nglfOULPfkhVwb2T3N7bsfbsC5nO/EprRN1V9n87pmnEnaxJjjGtgw3Ayh2gb89f5\nqotZher/VXCYO4EbQqf/iGWXZD2YUqHvVCbIGjo9jnC49g55USkKDJ0jjldcmbQp\n26+sOFqdxVjyA9Pkf3OWVp70EvqO85hxawUDIF6sEAgo1Qtez3QWclBq2ULwpw57\nioTQdbnOXtW1XT2D7wLEiQx9PhM9tH7qxkn1d+zfbXkVV8Scb23KFWTpNnr7sAm9\nGQI/6s0cUJy0jGvDy+7XeCgkGoYdIkrvAbCGYM2MF8dYsF2mofaQ79KV3a4UwhX2\nU46jCKVnyS+T883D3r2rRyBqLKPi6QAXmM8A1lH1cP4OZYcC1760j1PRQB8dRTEB\nwZq6YNE+\n=PmJk\n-----END PGP SIGNATURE-----",
        "payload": "tree 17dc98f13fa5b4015128b86265989a927f68bcdb\nparent fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086\nauthor MarcoFalke <falke.marco@gmail.com> 1586725763 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1587041105 -0400\n\nrpc: Document all aliases for second arg of getblock\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa86a4bbfc000593ae4ad9dcdaec3fd0c0406086"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 39,
      "deletions": 14
    },
    "files": [
      {
        "sha": "e02b3c6e8edfb0cbde865d2f11a412261e56909d",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
        "patch": "@@ -812,7 +812,7 @@ static UniValue getblock(const JSONRPCRequest& request)\n                 \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction. \\n\",\n                 {\n                     {\"blockhash\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The block hash\"},\n-                    {\"verbosity\", RPCArg::Type::NUM, /* default */ \"1\", \"0 for hex-encoded data, 1 for a json object, and 2 for json object with transaction data\"},\n+                    {\"verbosity|verbose\", RPCArg::Type::NUM, /* default */ \"1\", \"0 for hex-encoded data, 1 for a json object, and 2 for json object with transaction data\"},\n                 },\n                 {\n                     RPCResult{\"for verbosity = 0\","
      },
      {
        "sha": "e228739c46f264cf4ea39b7a34da41ed56bff467",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 8,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
        "patch": "@@ -13,6 +13,9 @@\n \n #include <tuple>\n \n+#include <boost/algorithm/string/classification.hpp>\n+#include <boost/algorithm/string/split.hpp>\n+\n const std::string UNIX_EPOCH_TIME = \"UNIX epoch time\";\n const std::string EXAMPLE_ADDRESS[2] = {\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\", \"bc1q02ad21edsxd23d32dfgqqsz4vv4nmtfzuklhy3\"};\n \n@@ -330,7 +333,7 @@ struct Sections {\n             if (outer_type == OuterType::NONE) return; // Nothing more to do for non-recursive types on first recursion\n             auto left = indent;\n             if (arg.m_type_str.size() != 0 && push_name) {\n-                left += \"\\\"\" + arg.m_name + \"\\\": \" + arg.m_type_str.at(0);\n+                left += \"\\\"\" + arg.GetName() + \"\\\": \" + arg.m_type_str.at(0);\n             } else {\n                 left += push_name ? arg.ToStringObj(/* oneline */ false) : arg.ToString(/* oneline */ false);\n             }\n@@ -341,7 +344,7 @@ struct Sections {\n         case RPCArg::Type::OBJ:\n         case RPCArg::Type::OBJ_USER_KEYS: {\n             const auto right = outer_type == OuterType::NONE ? \"\" : arg.ToDescriptionString();\n-            PushSection({indent + (push_name ? \"\\\"\" + arg.m_name + \"\\\": \" : \"\") + \"{\", right});\n+            PushSection({indent + (push_name ? \"\\\"\" + arg.GetName() + \"\\\": \" : \"\") + \"{\", right});\n             for (const auto& arg_inner : arg.m_inner) {\n                 Push(arg_inner, current_indent + 2, OuterType::OBJ);\n             }\n@@ -353,7 +356,7 @@ struct Sections {\n         }\n         case RPCArg::Type::ARR: {\n             auto left = indent;\n-            left += push_name ? \"\\\"\" + arg.m_name + \"\\\": \" : \"\";\n+            left += push_name ? \"\\\"\" + arg.GetName() + \"\\\": \" : \"\";\n             left += \"[\";\n             const auto right = outer_type == OuterType::NONE ? \"\" : arg.ToDescriptionString();\n             PushSection({left, right});\n@@ -419,8 +422,12 @@ RPCHelpMan::RPCHelpMan(std::string name, std::string description, std::vector<RP\n {\n     std::set<std::string> named_args;\n     for (const auto& arg : m_args) {\n+        std::vector<std::string> names;\n+        boost::split(names, arg.m_names, boost::is_any_of(\"|\"));\n         // Should have unique named arguments\n-        CHECK_NONFATAL(named_args.insert(arg.m_name).second);\n+        for (const std::string& name : names) {\n+            CHECK_NONFATAL(named_args.insert(name).second);\n+        }\n     }\n }\n \n@@ -489,7 +496,7 @@ std::string RPCHelpMan::ToString() const\n         if (i == 0) ret += \"\\nArguments:\\n\";\n \n         // Push named argument name and description\n-        sections.m_sections.emplace_back(::ToString(i + 1) + \". \" + arg.m_name, arg.ToDescriptionString());\n+        sections.m_sections.emplace_back(::ToString(i + 1) + \". \" + arg.GetFirstName(), arg.ToDescriptionString());\n         sections.m_max_pad = std::max(sections.m_max_pad, sections.m_sections.back().m_left.size());\n \n         // Recursively push nested args\n@@ -506,6 +513,17 @@ std::string RPCHelpMan::ToString() const\n     return ret;\n }\n \n+std::string RPCArg::GetFirstName() const\n+{\n+    return m_names.substr(0, m_names.find(\"|\"));\n+}\n+\n+std::string RPCArg::GetName() const\n+{\n+    CHECK_NONFATAL(std::string::npos == m_names.find(\"|\"));\n+    return m_names;\n+}\n+\n bool RPCArg::IsOptional() const\n {\n     if (m_fallback.which() == 1) {\n@@ -681,7 +699,7 @@ std::string RPCArg::ToStringObj(const bool oneline) const\n {\n     std::string res;\n     res += \"\\\"\";\n-    res += m_name;\n+    res += GetFirstName();\n     if (oneline) {\n         res += \"\\\":\";\n     } else {\n@@ -723,13 +741,13 @@ std::string RPCArg::ToString(const bool oneline) const\n     switch (m_type) {\n     case Type::STR_HEX:\n     case Type::STR: {\n-        return \"\\\"\" + m_name + \"\\\"\";\n+        return \"\\\"\" + GetFirstName() + \"\\\"\";\n     }\n     case Type::NUM:\n     case Type::RANGE:\n     case Type::AMOUNT:\n     case Type::BOOL: {\n-        return m_name;\n+        return GetFirstName();\n     }\n     case Type::OBJ:\n     case Type::OBJ_USER_KEYS: {"
      },
      {
        "sha": "ef813978bda6f53c9332e6b2de2cae874a01f194",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
        "patch": "@@ -142,7 +142,7 @@ struct RPCArg {\n         OMITTED,\n     };\n     using Fallback = boost::variant<Optional, /* default value for optional args */ std::string>;\n-    const std::string m_name; //!< The name of the arg (can be empty for inner args)\n+    const std::string m_names; //!< The name of the arg (can be empty for inner args, can contain multiple aliases separated by | for named request arguments)\n     const Type m_type;\n     const std::vector<RPCArg> m_inner; //!< Only used for arrays or dicts\n     const Fallback m_fallback;\n@@ -157,7 +157,7 @@ struct RPCArg {\n         const std::string description,\n         const std::string oneline_description = \"\",\n         const std::vector<std::string> type_str = {})\n-        : m_name{std::move(name)},\n+        : m_names{std::move(name)},\n           m_type{std::move(type)},\n           m_fallback{std::move(fallback)},\n           m_description{std::move(description)},\n@@ -175,7 +175,7 @@ struct RPCArg {\n         const std::vector<RPCArg> inner,\n         const std::string oneline_description = \"\",\n         const std::vector<std::string> type_str = {})\n-        : m_name{std::move(name)},\n+        : m_names{std::move(name)},\n           m_type{std::move(type)},\n           m_inner{std::move(inner)},\n           m_fallback{std::move(fallback)},\n@@ -188,6 +188,12 @@ struct RPCArg {\n \n     bool IsOptional() const;\n \n+    /** Return the first of all aliases */\n+    std::string GetFirstName() const;\n+\n+    /** Return the name, throws when there are aliases */\n+    std::string GetName() const;\n+\n     /**\n      * Return the type string of the argument.\n      * Set oneline to allow it to be overridden by a custom oneline type string (m_oneline_description)."
      },
      {
        "sha": "aa58c0af9d4e865be0973551a22ed7301e17f436",
        "filename": "test/functional/rpc_generateblock.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/test/functional/rpc_generateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd/test/functional/rpc_generateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_generateblock.py?ref=fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
        "patch": "@@ -11,6 +11,7 @@\n     assert_raises_rpc_error,\n )\n \n+\n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n@@ -24,13 +25,13 @@ def run_test(self):\n         self.log.info('Generate an empty block to address')\n         address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n-        block = node.getblock(hash, 2)\n+        block = node.getblock(blockhash=hash, verbose=2)\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], address)\n \n         self.log.info('Generate an empty block to a descriptor')\n         hash = node.generateblock('addr(' + address + ')', [])['hash']\n-        block = node.getblock(hash, 2)\n+        block = node.getblock(blockhash=hash, verbosity=2)\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], address)\n "
      }
    ]
  },
  {
    "sha": "fa168d754221a83cab0d2984a02c41cf6819e873",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE2OGQ3NTQyMjFhODNjYWIwZDI5ODRhMDJjNDFjZjY4MTllODcz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-12T21:12:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-16T12:45:33Z"
      },
      "message": "rpc: Document all aliases for first arg of listtransactions",
      "tree": {
        "sha": "3b91f534b27782c54b8fd209cc0b182b8f64c453",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b91f534b27782c54b8fd209cc0b182b8f64c453"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa168d754221a83cab0d2984a02c41cf6819e873",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhOnAv/aeNzltkBAeQJHxOSjO5GNGlH+jhFSkpjpGHHJH32KTAR9QS53j9TvllO\nrIZiex/eYyaS4gVW3BmKiqmKqksju9J1/oUaRZay9uJHjgvysE5E8h8bK92Giill\nsWRpXp8JvrlKUbcf6h0TAlexRmrMUI51JZ8u7lIjlijlxKPExzYQI91HP4MIV8tM\nelTituQHoF1Px1a7QRlH3vGkOy1QEdN1bL/mVitOoL4mgJpTPjH1I3DhbIpTX+Jj\nqvEF921m/WS29srYX4A5sL+QHeqRLuDTXGe1nMs+fW7eoM4UXJDjaqaueDqbdYl0\neWzQX5xgLcQgwTufBgK+mZM0b99qB7xC7Ahee+P2xlivE7FaE1R/MYhIAlEAPfNz\ntNE48dcGPkuEtXsf+YIacHpxWdW8916aSTEICNldFPmvV1NG+rU0cgMZrf1tI2qz\nczld19cPLi9mXi7V0nByczhaQiaLBqbB/ISRf/xw04/+fotjeyCLzLPkeG5StZbr\nRRBmS9dr\n=AeOF\n-----END PGP SIGNATURE-----",
        "payload": "tree 3b91f534b27782c54b8fd209cc0b182b8f64c453\nparent fa5b1f067fcf8bebb23455dd8a16cde5068e79cd\nauthor MarcoFalke <falke.marco@gmail.com> 1586725952 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1587041133 -0400\n\nrpc: Document all aliases for first arg of listtransactions\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa168d754221a83cab0d2984a02c41cf6819e873",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa168d754221a83cab0d2984a02c41cf6819e873",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa168d754221a83cab0d2984a02c41cf6819e873/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5b1f067fcf8bebb23455dd8a16cde5068e79cd"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4d984a9dab6cc1e4561e09d84c4e623f16ade5f6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa168d754221a83cab0d2984a02c41cf6819e873/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa168d754221a83cab0d2984a02c41cf6819e873/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fa168d754221a83cab0d2984a02c41cf6819e873",
        "patch": "@@ -1399,8 +1399,8 @@ UniValue listtransactions(const JSONRPCRequest& request)\n                 \"\\nIf a label name is provided, this will return only incoming transactions paying to addresses with the specified label.\\n\"\n                 \"\\nReturns up to 'count' most recent transactions skipping the first 'from' transactions.\\n\",\n                 {\n-                    {\"label\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If set, should be a valid label name to return only incoming transactions\\n\"\n-            \"              with the specified label, or \\\"*\\\" to disable filtering and return all transactions.\"},\n+                    {\"label|dummy\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If set, should be a valid label name to return only incoming transactions\\n\"\n+                          \"with the specified label, or \\\"*\\\" to disable filtering and return all transactions.\"},\n                     {\"count\", RPCArg::Type::NUM, /* default */ \"10\", \"The number of transactions to return\"},\n                     {\"skip\", RPCArg::Type::NUM, /* default */ \"0\", \"The number of transactions to skip\"},\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Include transactions to watch-only addresses (see 'importaddress')\"},"
      },
      {
        "sha": "8ff663ccd23ab04d3b49ec8911de57b07e02fc75",
        "filename": "test/functional/wallet_listtransactions.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa168d754221a83cab0d2984a02c41cf6819e873/test/functional/wallet_listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa168d754221a83cab0d2984a02c41cf6819e873/test/functional/wallet_listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listtransactions.py?ref=fa168d754221a83cab0d2984a02c41cf6819e873",
        "patch": "@@ -97,6 +97,8 @@ def run_test(self):\n         txid = self.nodes[1].sendtoaddress(multisig[\"address\"], 0.1)\n         self.nodes[1].generate(1)\n         self.sync_all()\n+        assert_equal(len(self.nodes[0].listtransactions(label=\"watchonly\", include_watchonly=True)), 1)\n+        assert_equal(len(self.nodes[0].listtransactions(dummy=\"watchonly\", include_watchonly=True)), 1)\n         assert len(self.nodes[0].listtransactions(label=\"watchonly\", count=100, include_watchonly=False)) == 0\n         assert_array_result(self.nodes[0].listtransactions(label=\"watchonly\", count=100, include_watchonly=True),\n                             {\"category\": \"receive\", \"amount\": Decimal(\"0.1\")},"
      }
    ]
  }
]