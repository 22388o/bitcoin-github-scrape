[
  {
    "sha": "04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNGY1OGZmZDlkMmRlZWQ3ZjNiYTg3MmUyNDJkOTY3YTU1MGZmMWQ2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T15:30:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T15:30:19Z"
      },
      "message": "qt: Better status text for mined transactions\n\nFixes ancient issue #614.",
      "tree": {
        "sha": "cf15631d0e46fbb4da3502ab70408bd3e8021762",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf15631d0e46fbb4da3502ab70408bd3e8021762"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f58ffd9d2deed7f3ba872e242d967a550ff1d6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65515c0d05678334a52f686eaaa2bac1ff285a5a"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 23,
      "deletions": 21
    },
    "files": [
      {
        "sha": "b29be7e0cbc129e5b309545a9e009019e3df905d",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 21,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04f58ffd9d2deed7f3ba872e242d967a550ff1d6/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04f58ffd9d2deed7f3ba872e242d967a550ff1d6/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
        "patch": "@@ -285,38 +285,40 @@ QString TransactionTableModel::formatTxStatus(const TransactionRecord *wtx) cons\n {\n     QString status;\n \n-    switch(wtx->status.status)\n-    {\n-    case TransactionStatus::OpenUntilBlock:\n-        status = tr(\"Open for %n more block(s)\",\"\",wtx->status.open_for);\n-        break;\n-    case TransactionStatus::OpenUntilDate:\n-        status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));\n-        break;\n-    case TransactionStatus::Offline:\n-        status = tr(\"Offline (%1 confirmations)\").arg(wtx->status.depth);\n-        break;\n-    case TransactionStatus::Unconfirmed:\n-        status = tr(\"Unconfirmed (%1 of %2 confirmations)\").arg(wtx->status.depth).arg(TransactionRecord::NumConfirmations);\n-        break;\n-    case TransactionStatus::HaveConfirmations:\n-        status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n-        break;\n-    }\n     if(wtx->type == TransactionRecord::Generated)\n     {\n         switch(wtx->status.maturity)\n         {\n         case TransactionStatus::Immature:\n-            status += \"\\n\" + tr(\"Mined balance will be available when it matures in %n more block(s)\", \"\", wtx->status.matures_in);\n+            status = tr(\"Immature (%1 confirmations, will be available after %2)\").arg(wtx->status.depth).arg(wtx->status.depth + wtx->status.matures_in);\n             break;\n         case TransactionStatus::Mature:\n+            status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n             break;\n         case TransactionStatus::MaturesWarning:\n-            status += \"\\n\" + tr(\"This block was not received by any other nodes and will probably not be accepted!\");\n+            status = tr(\"This block was not received by any other nodes and will probably not be accepted!\");\n             break;\n         case TransactionStatus::NotAccepted:\n-            status += \"\\n\" + tr(\"Generated but not accepted\");\n+            status = tr(\"Generated but not accepted\");\n+            break;\n+        }\n+    } else {\n+        switch(wtx->status.status)\n+        {\n+        case TransactionStatus::OpenUntilBlock:\n+            status = tr(\"Open for %n more block(s)\",\"\",wtx->status.open_for);\n+            break;\n+        case TransactionStatus::OpenUntilDate:\n+            status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));\n+            break;\n+        case TransactionStatus::Offline:\n+            status = tr(\"Offline (%1 confirmations)\").arg(wtx->status.depth);\n+            break;\n+        case TransactionStatus::Unconfirmed:\n+            status = tr(\"Unconfirmed (%1 of %2 confirmations)\").arg(wtx->status.depth).arg(TransactionRecord::NumConfirmations);\n+            break;\n+        case TransactionStatus::HaveConfirmations:\n+            status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n             break;\n         }\n     }"
      }
    ]
  }
]