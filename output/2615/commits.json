[
  {
    "sha": "b4b017059514ed0157877984363ed94f5ab098e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNGIwMTcwNTk1MTRlZDAxNTc4Nzc5ODQzNjNlZDk0ZjVhYjA5OGU5",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2013-05-10T20:20:51Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2013-05-24T10:51:46Z"
      },
      "message": "osx: make use of the 10.8+ user notification center to display growl like notifications\n\n- if 10.8, use user notification center, if <10.8, use growl\n\nSigned-off-by: Jonas Schnelli <jonas.schnelli@include7.ch>",
      "tree": {
        "sha": "b8bd52d5059231402fcd6df591e6169e6571e712",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8bd52d5059231402fcd6df591e6169e6571e712"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4b017059514ed0157877984363ed94f5ab098e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4b017059514ed0157877984363ed94f5ab098e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4b017059514ed0157877984363ed94f5ab098e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4b017059514ed0157877984363ed94f5ab098e9/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b5d399593adbdf8b9b4fb49ef39d51d4eac03cd"
      }
    ],
    "stats": {
      "total": 149,
      "additions": 128,
      "deletions": 21
    },
    "files": [
      {
        "sha": "f41da5306756c594b5477c1429a10a6c8e43edc1",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4b017059514ed0157877984363ed94f5ab098e9/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4b017059514ed0157877984363ed94f5ab098e9/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=b4b017059514ed0157877984363ed94f5ab098e9",
        "patch": "@@ -393,8 +393,8 @@ win32:!contains(MINGW_THREAD_BUGFIX, 0) {\n     DEFINES += _FILE_OFFSET_BITS=64\n }\n \n-macx:HEADERS += src/qt/macdockiconhandler.h\n-macx:OBJECTIVE_SOURCES += src/qt/macdockiconhandler.mm\n+macx:HEADERS += src/qt/macdockiconhandler.h src/qt/macnotificationhandler.h\n+macx:OBJECTIVE_SOURCES += src/qt/macdockiconhandler.mm src/qt/macnotificationhandler.mm\n macx:LIBS += -framework Foundation -framework ApplicationServices -framework AppKit\n macx:DEFINES += MAC_OSX MSG_NOSIGNAL=0\n macx:ICON = src/qt/res/icons/bitcoin.icns"
      },
      {
        "sha": "cd8064c61ca6b2396af0b000ad725c91ff7a2ab1",
        "filename": "src/qt/macnotificationhandler.h",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4b017059514ed0157877984363ed94f5ab098e9/src/qt/macnotificationhandler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4b017059514ed0157877984363ed94f5ab098e9/src/qt/macnotificationhandler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.h?ref=b4b017059514ed0157877984363ed94f5ab098e9",
        "patch": "@@ -0,0 +1,25 @@\n+#ifndef MACNOTIFICATIONHANDLER_H\n+#define MACNOTIFICATIONHANDLER_H\n+#include <QObject>\n+\n+/** Macintosh-specific notification handler (supports UserNotificationCenter and Growl).\n+ */\n+class MacNotificationHandler : public QObject\n+{\n+    Q_OBJECT\n+\n+public:\n+    /** shows a 10.8+ UserNotification in the UserNotificationCenter\n+     */\n+    void showNotification(const QString &title, const QString &text);\n+\n+    /** executes AppleScript */\n+    void sendAppleScript(const QString &script);\n+\n+    /** check if OS can handle UserNotifications */\n+    bool hasUserNotificationCenterSupport(void);\n+    static MacNotificationHandler *instance();\n+};\n+\n+\n+#endif // MACNOTIFICATIONHANDLER_H"
      },
      {
        "sha": "8bb9b887a11b1869863f3046a596d56b5d9f3a9c",
        "filename": "src/qt/macnotificationhandler.mm",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4b017059514ed0157877984363ed94f5ab098e9/src/qt/macnotificationhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4b017059514ed0157877984363ed94f5ab098e9/src/qt/macnotificationhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.mm?ref=b4b017059514ed0157877984363ed94f5ab098e9",
        "patch": "@@ -0,0 +1,65 @@\n+#include \"macnotificationhandler.h\"\n+\n+#undef slots\n+#include <Cocoa/Cocoa.h>\n+\n+void MacNotificationHandler::showNotification(const QString &title, const QString &text)\n+{\n+    // check if users OS has support for NSUserNotification\n+    if(this->hasUserNotificationCenterSupport()) {\n+        // okay, seems like 10.8+\n+        QByteArray utf8 = title.toUtf8();\n+        char* cString = (char *)utf8.constData();\n+        NSString *titleMac = [[NSString alloc] initWithUTF8String:cString];\n+\n+        utf8 = text.toUtf8();\n+        cString = (char *)utf8.constData();\n+        NSString *textMac = [[NSString alloc] initWithUTF8String:cString];\n+\n+        // do everything weak linked (because we will keep <10.8 compatibility)\n+        id userNotification = [[NSClassFromString(@\"NSUserNotification\") alloc] init];\n+        [userNotification performSelector:@selector(setTitle:) withObject:titleMac];\n+        [userNotification performSelector:@selector(setInformativeText:) withObject:textMac];\n+\n+        id notificationCenterInstance = [NSClassFromString(@\"NSUserNotificationCenter\") performSelector:@selector(defaultUserNotificationCenter)];\n+        [notificationCenterInstance performSelector:@selector(deliverNotification:) withObject:userNotification];\n+\n+        [titleMac release];\n+        [textMac release];\n+        [userNotification release];\n+    }\n+}\n+\n+// sendAppleScript just take a QString and executes it as apple script\n+void MacNotificationHandler::sendAppleScript(const QString &script)\n+{\n+    QByteArray utf8 = script.toUtf8();\n+    char* cString = (char *)utf8.constData();\n+    NSString *scriptApple = [[NSString alloc] initWithUTF8String:cString];\n+\n+    NSAppleScript *as = [[NSAppleScript alloc] initWithSource:scriptApple];\n+    NSDictionary *err = nil;\n+    [as executeAndReturnError:&err];\n+    [as release];\n+    [scriptApple release];\n+}\n+\n+bool MacNotificationHandler::hasUserNotificationCenterSupport(void)\n+{\n+    Class possibleClass = NSClassFromString(@\"NSUserNotificationCenter\");\n+\n+    // check if users OS has support for NSUserNotification\n+    if(possibleClass!=nil) {\n+        return true;\n+    }\n+    return false;\n+}\n+\n+\n+MacNotificationHandler *MacNotificationHandler::instance()\n+{\n+    static MacNotificationHandler *s_instance = NULL;\n+    if (!s_instance)\n+        s_instance = new MacNotificationHandler();\n+    return s_instance;\n+}"
      },
      {
        "sha": "7cfaef6079e8d2222a6d89647a4be2ddd019d69c",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 14,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4b017059514ed0157877984363ed94f5ab098e9/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4b017059514ed0157877984363ed94f5ab098e9/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=b4b017059514ed0157877984363ed94f5ab098e9",
        "patch": "@@ -18,7 +18,7 @@\n \n #ifdef Q_OS_MAC\n #include <ApplicationServices/ApplicationServices.h>\n-extern bool qt_mac_execute_apple_script(const QString &script, AEDesc *ret);\n+#include \"macnotificationhandler.h\"\n #endif\n \n // https://wiki.ubuntu.com/NotificationDevelopmentGuidelines recommends at least 128\n@@ -47,19 +47,25 @@ Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon,\n     }\n #endif\n #ifdef Q_OS_MAC\n-    // Check if Growl is installed (based on Qt's tray icon implementation)\n-    CFURLRef cfurl;\n-    OSStatus status = LSGetApplicationForInfo(kLSUnknownType, kLSUnknownCreator, CFSTR(\"growlTicket\"), kLSRolesAll, 0, &cfurl);\n-    if (status != kLSApplicationNotFoundErr) {\n-        CFBundleRef bundle = CFBundleCreate(0, cfurl);\n-        if (CFStringCompare(CFBundleGetIdentifier(bundle), CFSTR(\"com.Growl.GrowlHelperApp\"), kCFCompareCaseInsensitive | kCFCompareBackwards) == kCFCompareEqualTo) {\n-            if (CFStringHasSuffix(CFURLGetString(cfurl), CFSTR(\"/Growl.app/\")))\n-                mode = Growl13;\n-            else\n-                mode = Growl12;\n+    // check if users OS has support for NSUserNotification\n+    if( MacNotificationHandler::instance()->hasUserNotificationCenterSupport()) {\n+        mode = UserNotificationCenter;\n+    }\n+    else {\n+        // Check if Growl is installed (based on Qt's tray icon implementation)\n+        CFURLRef cfurl;\n+        OSStatus status = LSGetApplicationForInfo(kLSUnknownType, kLSUnknownCreator, CFSTR(\"growlTicket\"), kLSRolesAll, 0, &cfurl);\n+        if (status != kLSApplicationNotFoundErr) {\n+            CFBundleRef bundle = CFBundleCreate(0, cfurl);\n+            if (CFStringCompare(CFBundleGetIdentifier(bundle), CFSTR(\"com.Growl.GrowlHelperApp\"), kCFCompareCaseInsensitive | kCFCompareBackwards) == kCFCompareEqualTo) {\n+                if (CFStringHasSuffix(CFURLGetString(cfurl), CFSTR(\"/Growl.app/\")))\n+                    mode = Growl13;\n+                else\n+                    mode = Growl12;\n+            }\n+            CFRelease(cfurl);\n+            CFRelease(bundle);\n         }\n-        CFRelease(cfurl);\n-        CFRelease(bundle);\n     }\n #endif\n }\n@@ -269,8 +275,14 @@ void Notificator::notifyGrowl(Class cls, const QString &title, const QString &te\n     quotedTitle.replace(\"\\\\\", \"\\\\\\\\\").replace(\"\\\"\", \"\\\\\");\n     quotedText.replace(\"\\\\\", \"\\\\\\\\\").replace(\"\\\"\", \"\\\\\");\n     QString growlApp(this->mode == Notificator::Growl13 ? \"Growl\" : \"GrowlHelperApp\");\n-    qt_mac_execute_apple_script(script.arg(notificationApp, quotedTitle, quotedText, notificationIcon, growlApp), 0);\n+    MacNotificationHandler::instance()->sendAppleScript(script.arg(notificationApp, quotedTitle, quotedText, notificationIcon, growlApp));\n+}\n+\n+void Notificator::notifyMacUserNotificationCenter(Class cls, const QString &title, const QString &text, const QIcon &icon) {\n+    // icon is not supported by the user notification center yet. OSX will use the app icon.\n+    MacNotificationHandler::instance()->showNotification(title, text);\n }\n+\n #endif\n \n void Notificator::notify(Class cls, const QString &title, const QString &text, const QIcon &icon, int millisTimeout)\n@@ -286,6 +298,9 @@ void Notificator::notify(Class cls, const QString &title, const QString &text, c\n         notifySystray(cls, title, text, icon, millisTimeout);\n         break;\n #ifdef Q_OS_MAC\n+    case UserNotificationCenter:\n+        notifyMacUserNotificationCenter(cls, title, text, icon);\n+        break;\n     case Growl12:\n     case Growl13:\n         notifyGrowl(cls, title, text, icon);"
      },
      {
        "sha": "d1fe37fea554e3528a5d2f0b582fb26a78eade5c",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4b017059514ed0157877984363ed94f5ab098e9/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4b017059514ed0157877984363ed94f5ab098e9/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=b4b017059514ed0157877984363ed94f5ab098e9",
        "patch": "@@ -46,11 +46,12 @@ public slots:\n private:\n     QWidget *parent;\n     enum Mode {\n-        None,           /**< Ignore informational notifications, and show a modal pop-up dialog for Critical notifications. */\n-        Freedesktop,    /**< Use DBus org.freedesktop.Notifications */\n-        QSystemTray,    /**< Use QSystemTray::showMessage */\n-        Growl12,        /**< Use the Growl 1.2 notification system (Mac only) */\n-        Growl13         /**< Use the Growl 1.3 notification system (Mac only) */\n+        None,                       /**< Ignore informational notifications, and show a modal pop-up dialog for Critical notifications. */\n+        Freedesktop,                /**< Use DBus org.freedesktop.Notifications */\n+        QSystemTray,                /**< Use QSystemTray::showMessage */\n+        Growl12,                    /**< Use the Growl 1.2 notification system (Mac only) */\n+        Growl13,                    /**< Use the Growl 1.3 notification system (Mac only) */\n+        UserNotificationCenter      /**< Use the 10.8+ User Notification Center (Mac only) */\n     };\n     QString programName;\n     Mode mode;\n@@ -63,6 +64,7 @@ public slots:\n     void notifySystray(Class cls, const QString &title, const QString &text, const QIcon &icon, int millisTimeout);\n #ifdef Q_OS_MAC\n     void notifyGrowl(Class cls, const QString &title, const QString &text, const QIcon &icon);\n+    void notifyMacUserNotificationCenter(Class cls, const QString &title, const QString &text, const QIcon &icon);\n #endif\n };\n "
      }
    ]
  }
]