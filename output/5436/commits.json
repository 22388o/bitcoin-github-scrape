[
  {
    "sha": "11d7a7d505717b2574e43f157c10a681f3f8c134",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWQ3YTdkNTA1NzE3YjI1NzRlNDNmMTU3YzEwYTY4MWYzZjhjMTM0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-12-06T22:14:25Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-12-06T22:15:22Z"
      },
      "message": "[RPC] add rpc-test for http keep-alive (persistent connections)",
      "tree": {
        "sha": "6b7bfb022c0a2f3f7272b8c9b49459f9e72c596f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b7bfb022c0a2f3f7272b8c9b49459f9e72c596f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11d7a7d505717b2574e43f157c10a681f3f8c134",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11d7a7d505717b2574e43f157c10a681f3f8c134",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11d7a7d505717b2574e43f157c10a681f3f8c134",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11d7a7d505717b2574e43f157c10a681f3f8c134/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4383319e4e0cb96818d2be734f7280181daac9fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4383319e4e0cb96818d2be734f7280181daac9fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4383319e4e0cb96818d2be734f7280181daac9fa"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 77,
      "deletions": 0
    },
    "files": [
      {
        "sha": "071935759b29f06c65295c5d6597b166d29865fa",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11d7a7d505717b2574e43f157c10a681f3f8c134/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11d7a7d505717b2574e43f157c10a681f3f8c134/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=11d7a7d505717b2574e43f157c10a681f3f8c134",
        "patch": "@@ -24,6 +24,7 @@ if [ \"x${ENABLE_BITCOIND}${ENABLE_UTILS}${ENABLE_WALLET}\" = \"x111\" ]; then\n   ${BUILDDIR}/qa/rpc-tests/getchaintips.py --srcdir \"${BUILDDIR}/src\"\n   ${BUILDDIR}/qa/rpc-tests/rest.py --srcdir \"${BUILDDIR}/src\"\n   ${BUILDDIR}/qa/rpc-tests/mempool_spendcoinbase.py --srcdir \"${BUILDDIR}/src\"\n+  ${BUILDDIR}/qa/rpc-tests/httpbasics.py --srcdir \"${BUILDDIR}/src\"\n   #${BUILDDIR}/qa/rpc-tests/forknotify.py --srcdir \"${BUILDDIR}/src\"\n else\n   echo \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      },
      {
        "sha": "a94edaffa53dacafe7cb15ce661859726b3146d3",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "added",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11d7a7d505717b2574e43f157c10a681f3f8c134/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11d7a7d505717b2574e43f157c10a681f3f8c134/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=11d7a7d505717b2574e43f157c10a681f3f8c134",
        "patch": "@@ -0,0 +1,76 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test REST interface\n+#\n+\n+from test_framework import BitcoinTestFramework\n+from util import *\n+import base64\n+\n+try:\n+    import http.client as httplib\n+except ImportError:\n+    import httplib\n+try:\n+    import urllib.parse as urlparse\n+except ImportError:\n+    import urlparse\n+\n+class RESTTest (BitcoinTestFramework):        \n+    def run_test(self):        \n+        \n+        #################################################\n+        # lowlevel check for http persistent connection #\n+        #################################################\n+        url = urlparse.urlparse(self.nodes[0].url)\n+        authpair = url.username + ':' + url.password\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair)}\n+        \n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('GET', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        out1 = conn.getresponse().read();\n+        assert_equal('\"error\":null' in out1, True)\n+        assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n+        \n+        #send 2nd request without closing connection\n+        conn.request('GET', '/', '{\"method\": \"getchaintips\"}', headers)\n+        out2 = conn.getresponse().read();\n+        assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n+        assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n+        conn.close()\n+        \n+        #same should be if we add keep-alive because this should be the std. behaviour\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair), \"Connection\": \"keep-alive\"}\n+        \n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('GET', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        out1 = conn.getresponse().read();\n+        assert_equal('\"error\":null' in out1, True)\n+        assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n+        \n+        #send 2nd request without closing connection\n+        conn.request('GET', '/', '{\"method\": \"getchaintips\"}', headers)\n+        out2 = conn.getresponse().read();\n+        assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n+        assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n+        conn.close()\n+        \n+        #now do the same with \"Connection: close\"\n+        headers = {\"Authorization\": \"Basic \" + base64.b64encode(authpair), \"Connection\":\"close\"}\n+        \n+        conn = httplib.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('GET', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        out1 = conn.getresponse().read();\n+        assert_equal('\"error\":null' in out1, True)\n+        assert_equal(conn.sock!=None, False) #now the connection must be closed after the response        \n+        \n+        \n+if __name__ == '__main__':\n+    RESTTest ().main ()"
      }
    ]
  }
]