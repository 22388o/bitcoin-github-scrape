[
  {
    "sha": "a58f5887b380b8f057ad4a908da4ff53bd59b8bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNThmNTg4N2IzODBiOGYwNTdhZDRhOTA4ZGE0ZmY1M2JkNTliOGJm",
    "commit": {
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2019-09-18T15:11:10Z"
      },
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2019-09-18T15:11:10Z"
      },
      "message": "Return self from ECKey, ECPubKey functions in test_framework",
      "tree": {
        "sha": "9daa9165dbded5472c0e44f62228f2c27c98a0bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9daa9165dbded5472c0e44f62228f2c27c98a0bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a58f5887b380b8f057ad4a908da4ff53bd59b8bf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl2CSQ4ZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf2IuEADCXVFsn7yYiSq153at1nK+\nTomJkwsrmcW78VqaK53MO7sJe+7NC93F3oApVAro7MUHJAqvjcydlI0K09TaxrDU\nCUIiKwxJPU+BFjdmjW6HXBTSWcAhZfgwYivsp4jek+nu+ihKsT/RRaK6nNxsEshw\n/CUzrMXE0EjHYq5FApy+bo0MS81ZNrnbYKp2q2WqkPCRRt0kXFQHQGMeaYPF++rL\ntHEVEcRUlMywQ/0VXhrPUE2HCdd0G+jD0iZ1acP/94bDqcEz5OXDDMD0oNv/f3Pa\n3MYxX2orVJ0IpyaLg4WxEcmH6OBCgWgHEV+z37ZrUdCvgNndTkseDHsv+6NyHsjB\ngRe87LpW0CQZEor08E0rJEBBf6F5oQeLcHfQuQFpQJ+cFrMX3ypm1FJ0PUS4vnC3\nY1+xkIzO6XBmEx0fH1hlfV+c0Yu2BFm1+HZ0HiS7e3aY69eCMbhNKTjEnSpvaUTE\nvABrYbpggKcdK7vx4BxNDHw4OvkKt9XhOZzjUk54E1feSb+eGaRVXmA7XStYQZY5\naL9poUaN1eO+sCnL5EKD5PhM9qmOKJZBZV9OBHFUXI17I/P7luHW+dMWIapKBgQz\nuDcSgLafukEAwZRTmctl2RfXwh815RPlO5gtkilqu1ES98id12P4VoiTWOkvDUX3\nZyU9WIxVoHL+3u9xHRkUJw==\n=i09p\n-----END PGP SIGNATURE-----",
        "payload": "tree 9daa9165dbded5472c0e44f62228f2c27c98a0bd\nparent 72d30d668afd54537a707c0995241b5a38844cb9\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1568819470 +0300\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1568819470 +0300\n\nReturn self from ECKey, ECPubKey functions in test_framework\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a58f5887b380b8f057ad4a908da4ff53bd59b8bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a58f5887b380b8f057ad4a908da4ff53bd59b8bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a58f5887b380b8f057ad4a908da4ff53bd59b8bf/comments",
    "author": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72d30d668afd54537a707c0995241b5a38844cb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72d30d668afd54537a707c0995241b5a38844cb9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72d30d668afd54537a707c0995241b5a38844cb9"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ef4ccc1b8f8c997b8f6ebe5259aca90b4c73be3d",
        "filename": "test/functional/test_framework/key.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a58f5887b380b8f057ad4a908da4ff53bd59b8bf/test/functional/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a58f5887b380b8f057ad4a908da4ff53bd59b8bf/test/functional/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/key.py?ref=a58f5887b380b8f057ad4a908da4ff53bd59b8bf",
        "patch": "@@ -247,6 +247,7 @@ def set(self, data):\n                 self.valid = False\n         else:\n             self.valid = False\n+        return self\n \n     @property\n     def is_compressed(self):\n@@ -336,10 +337,12 @@ def set(self, secret, compressed):\n         if self.valid:\n             self.secret = secret\n             self.compressed = compressed\n+        return self\n \n     def generate(self, compressed=True):\n         \"\"\"Generate a random private key (compressed or uncompressed).\"\"\"\n         self.set(random.randrange(1, SECP256K1_ORDER).to_bytes(32, 'big'), compressed)\n+        return self\n \n     def get_bytes(self):\n         \"\"\"Retrieve the 32-byte representation of this key.\"\"\""
      }
    ]
  }
]