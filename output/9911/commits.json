[
  {
    "sha": "bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjJhYWVlZWVhZTIwN2MzZWFlYjEyYmNhZTRmYjcwMGI2MDFhYjUx",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-03-03T15:20:33Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-03-18T06:59:50Z"
      },
      "message": "Prevent -Wshadow warnings with gcc versions 4.8.5, 5.3.1 and 6.2.1.",
      "tree": {
        "sha": "934aac40037cffad17956cf79d8cca5b0081b17a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/934aac40037cffad17956cf79d8cca5b0081b17a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d857f307be8712b9b251e770d8425717409654b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d857f307be8712b9b251e770d8425717409654b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d857f307be8712b9b251e770d8425717409654b"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 27,
      "deletions": 27
    },
    "files": [
      {
        "sha": "1387b9cf54a6236cee10096d857c6ebb1cc3e361",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
        "patch": "@@ -404,8 +404,8 @@ class CDataStream\n         return (*this);\n     }\n \n-    void GetAndClear(CSerializeData &data) {\n-        data.insert(data.end(), begin(), end());\n+    void GetAndClear(CSerializeData &d) {\n+        d.insert(d.end(), begin(), end());\n         clear();\n     }\n "
      },
      {
        "sha": "ce63f5a17a85b40e6671e01dcf69508701922f06",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
        "patch": "@@ -32,7 +32,7 @@\n // Uncomment if you want to output updated JSON tests.\n // #define UPDATE_JSON_TESTS\n \n-static const unsigned int flags = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC;\n+static const unsigned int gFlags = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC;\n \n unsigned int ParseScriptFlags(std::string strFlags);\n std::string FormatScriptFlags(unsigned int flags);\n@@ -1070,18 +1070,18 @@ BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG12)\n     CMutableTransaction txTo12 = BuildSpendingTransaction(CScript(), CScriptWitness(), txFrom12);\n \n     CScript goodsig1 = sign_multisig(scriptPubKey12, key1, txTo12);\n-    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey12, NULL, flags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey12, NULL, gFlags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n     txTo12.vout[0].nValue = 2;\n-    BOOST_CHECK(!VerifyScript(goodsig1, scriptPubKey12, NULL, flags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(goodsig1, scriptPubKey12, NULL, gFlags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     CScript goodsig2 = sign_multisig(scriptPubKey12, key2, txTo12);\n-    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey12, NULL, flags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey12, NULL, gFlags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     CScript badsig1 = sign_multisig(scriptPubKey12, key3, txTo12);\n-    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey12, NULL, flags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey12, NULL, gFlags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n }\n \n@@ -1103,54 +1103,54 @@ BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG23)\n     std::vector<CKey> keys;\n     keys.push_back(key1); keys.push_back(key2);\n     CScript goodsig1 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key1); keys.push_back(key3);\n     CScript goodsig2 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key2); keys.push_back(key3);\n     CScript goodsig3 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(VerifyScript(goodsig3, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig3, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key2); keys.push_back(key2); // Can't re-use sig\n     CScript badsig1 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key2); keys.push_back(key1); // sigs must be in correct order\n     CScript badsig2 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig2, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig2, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key3); keys.push_back(key2); // sigs must be in correct order\n     CScript badsig3 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig3, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig3, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key4); keys.push_back(key2); // sigs must match pubkeys\n     CScript badsig4 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig4, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig4, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key1); keys.push_back(key4); // sigs must match pubkeys\n     CScript badsig5 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig5, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig5, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear(); // Must have signatures\n     CScript badsig6 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig6, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig6, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_INVALID_STACK_OPERATION, ScriptErrorString(err));\n }\n "
      },
      {
        "sha": "19e1b1a368a51b7bea02277d5abff7e93e9f2ee9",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
        "patch": "@@ -662,26 +662,26 @@ void TorController::reconnect_cb(evutil_socket_t fd, short what, void *arg)\n }\n \n /****** Thread ********/\n-struct event_base *base;\n+struct event_base *gBase;\n boost::thread torControlThread;\n \n static void TorControlThread()\n {\n-    TorController ctrl(base, GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL));\n+    TorController ctrl(gBase, GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL));\n \n-    event_base_dispatch(base);\n+    event_base_dispatch(gBase);\n }\n \n void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler)\n {\n-    assert(!base);\n+    assert(!gBase);\n #ifdef WIN32\n     evthread_use_windows_threads();\n #else\n     evthread_use_pthreads();\n #endif\n-    base = event_base_new();\n-    if (!base) {\n+    gBase = event_base_new();\n+    if (!gBase) {\n         LogPrintf(\"tor: Unable to create event_base\\n\");\n         return;\n     }\n@@ -691,18 +691,18 @@ void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n void InterruptTorControl()\n {\n-    if (base) {\n+    if (gBase) {\n         LogPrintf(\"tor: Thread interrupt\\n\");\n-        event_base_loopbreak(base);\n+        event_base_loopbreak(gBase);\n     }\n }\n \n void StopTorControl()\n {\n-    if (base) {\n+    if (gBase) {\n         torControlThread.join();\n-        event_base_free(base);\n-        base = 0;\n+        event_base_free(gBase);\n+        gBase = 0;\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "c4b60b3d9c1b45240f45842e0f39ae8a8467ce58",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGI2MGIzZDljMWI0NTI0MGY0NTg0MmUwZjM5YWU4YTg0NjdjZTU4",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-03-08T21:13:15Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-03-18T06:59:50Z"
      },
      "message": "Make some global variables less-global (static)",
      "tree": {
        "sha": "12878331b872bd32cb748338b3b2722f67d44be4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12878331b872bd32cb748338b3b2722f67d44be4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4b60b3d9c1b45240f45842e0f39ae8a8467ce58",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b60b3d9c1b45240f45842e0f39ae8a8467ce58",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4b60b3d9c1b45240f45842e0f39ae8a8467ce58",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b60b3d9c1b45240f45842e0f39ae8a8467ce58/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb2aaeeeeae207c3eaeb12bcae4fb700b601ab51"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d24020e51f5dd515be7ddccb6d5fcda6f91015bc",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4b60b3d9c1b45240f45842e0f39ae8a8467ce58/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4b60b3d9c1b45240f45842e0f39ae8a8467ce58/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=c4b60b3d9c1b45240f45842e0f39ae8a8467ce58",
        "patch": "@@ -662,8 +662,8 @@ void TorController::reconnect_cb(evutil_socket_t fd, short what, void *arg)\n }\n \n /****** Thread ********/\n-struct event_base *gBase;\n-boost::thread torControlThread;\n+static struct event_base *gBase;\n+static boost::thread torControlThread;\n \n static void TorControlThread()\n {"
      }
    ]
  },
  {
    "sha": "b42ff60c7e5b71a135b622602a01fc3bf0bd99bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDJmZjYwYzdlNWI3MWExMzViNjIyNjAyYTAxZmMzYmYwYmQ5OWJm",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-03-15T14:40:37Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-03-18T06:59:50Z"
      },
      "message": "Fix shadowing of local variables.",
      "tree": {
        "sha": "2597e70fb1ba6a53dc39d86fa5fa845cf8ecdb43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2597e70fb1ba6a53dc39d86fa5fa845cf8ecdb43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b42ff60c7e5b71a135b622602a01fc3bf0bd99bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b42ff60c7e5b71a135b622602a01fc3bf0bd99bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b42ff60c7e5b71a135b622602a01fc3bf0bd99bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b42ff60c7e5b71a135b622602a01fc3bf0bd99bf/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4b60b3d9c1b45240f45842e0f39ae8a8467ce58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b60b3d9c1b45240f45842e0f39ae8a8467ce58",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4b60b3d9c1b45240f45842e0f39ae8a8467ce58"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2f958c885cfa77364b464d208b5334de84b246fe",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b42ff60c7e5b71a135b622602a01fc3bf0bd99bf/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b42ff60c7e5b71a135b622602a01fc3bf0bd99bf/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=b42ff60c7e5b71a135b622602a01fc3bf0bd99bf",
        "patch": "@@ -46,7 +46,7 @@ struct FakeCheckCheckCompletion {\n \n struct FailingCheck {\n     bool fails;\n-    FailingCheck(bool fails) : fails(fails){};\n+    FailingCheck(bool _fails) : fails(_fails){};\n     FailingCheck() : fails(true){};\n     bool operator()()\n     {\n@@ -411,15 +411,15 @@ BOOST_AUTO_TEST_CASE(test_CheckQueueControl_Locks)\n             std::unique_lock<std::mutex> l(m);\n             tg.create_thread([&]{\n                     CCheckQueueControl<FakeCheck> control(queue.get());\n-                    std::unique_lock<std::mutex> l(m);\n+                    std::unique_lock<std::mutex> ll(m);\n                     has_lock = true;\n                     cv.notify_one();\n-                    cv.wait(l, [&]{return has_tried;});\n+                    cv.wait(ll, [&]{return has_tried;});\n                     done = true;\n                     cv.notify_one();\n                     // Wait until the done is acknowledged\n                     //\n-                    cv.wait(l, [&]{return done_ack;});\n+                    cv.wait(ll, [&]{return done_ack;});\n                     });\n             // Wait for thread to get the lock\n             cv.wait(l, [&](){return has_lock;});"
      }
    ]
  },
  {
    "sha": "d7f80b6dcb237ebee649fc01533c68ba59bc9abd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkN2Y4MGI2ZGNiMjM3ZWJlZTY0OWZjMDE1MzNjNjhiYTU5YmM5YWJk",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-03-18T06:19:16Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-03-18T06:59:51Z"
      },
      "message": "Rename first iterator to prevent shadowing.",
      "tree": {
        "sha": "a51da26d1e56bdf8bd7b98b86b4f09125b784cd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a51da26d1e56bdf8bd7b98b86b4f09125b784cd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7f80b6dcb237ebee649fc01533c68ba59bc9abd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7f80b6dcb237ebee649fc01533c68ba59bc9abd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d7f80b6dcb237ebee649fc01533c68ba59bc9abd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7f80b6dcb237ebee649fc01533c68ba59bc9abd/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b42ff60c7e5b71a135b622602a01fc3bf0bd99bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b42ff60c7e5b71a135b622602a01fc3bf0bd99bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b42ff60c7e5b71a135b622602a01fc3bf0bd99bf"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0801bd730004505dd836619e565f339c8453f7e0",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7f80b6dcb237ebee649fc01533c68ba59bc9abd/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7f80b6dcb237ebee649fc01533c68ba59bc9abd/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=d7f80b6dcb237ebee649fc01533c68ba59bc9abd",
        "patch": "@@ -604,11 +604,11 @@ bool CDB::PeriodicFlush(std::string strFile)\n     {\n         // Don't do this if any databases are in use\n         int nRefCount = 0;\n-        std::map<std::string, int>::iterator mi = bitdb.mapFileUseCount.begin();\n-        while (mi != bitdb.mapFileUseCount.end())\n+        std::map<std::string, int>::iterator mit = bitdb.mapFileUseCount.begin();\n+        while (mit != bitdb.mapFileUseCount.end())\n         {\n-            nRefCount += (*mi).second;\n-            mi++;\n+            nRefCount += (*mit).second;\n+            mit++;\n         }\n \n         if (nRefCount == 0)"
      }
    ]
  }
]