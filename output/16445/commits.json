[
  {
    "sha": "c3dfc9103260935261eaf6cfbacf0623003f116d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2RmYzkxMDMyNjA5MzUyNjFlYWY2Y2ZiYWNmMDYyMzAwM2YxMTZk",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2019-07-23T19:10:36Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2019-07-23T19:59:27Z"
      },
      "message": "test: Skip flaky p2p_invalid_messages test on macOS",
      "tree": {
        "sha": "f14bf1af3af39c5d57c6dac77701d5a7ebfcf33e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f14bf1af3af39c5d57c6dac77701d5a7ebfcf33e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3dfc9103260935261eaf6cfbacf0623003f116d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3dfc9103260935261eaf6cfbacf0623003f116d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3dfc9103260935261eaf6cfbacf0623003f116d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3dfc9103260935261eaf6cfbacf0623003f116d/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fcccdac785e09ad5627b3bf4811dfba353693e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fcccdac785e09ad5627b3bf4811dfba353693e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fcccdac785e09ad5627b3bf4811dfba353693e8"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 18,
      "deletions": 10
    },
    "files": [
      {
        "sha": "d5c68e622bb5479fe5af86ab97652fe5dbeab88c",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 18,
        "deletions": 10,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3dfc9103260935261eaf6cfbacf0623003f116d/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3dfc9103260935261eaf6cfbacf0623003f116d/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=c3dfc9103260935261eaf6cfbacf0623003f116d",
        "patch": "@@ -6,6 +6,7 @@\n import asyncio\n import os\n import struct\n+import sys\n \n from test_framework import messages\n from test_framework.mininode import P2PDataStore, NetworkThread\n@@ -92,18 +93,25 @@ def run_test(self):\n         #\n         # Send an oversized message, ensure we're disconnected.\n         #\n-        msg_over_size = msg_unrecognized(str_data=\"b\" * (valid_data_limit + 1))\n-        assert len(msg_over_size.serialize()) == (msg_limit + 1)\n+        # Under macOS this test is skipped due to an unexpected error code\n+        # returned from the closing socket which python/asyncio does not\n+        # yet know how to handle.\n+        #\n+        if sys.platform != 'darwin':\n+            msg_over_size = msg_unrecognized(str_data=\"b\" * (valid_data_limit + 1))\n+            assert len(msg_over_size.serialize()) == (msg_limit + 1)\n \n-        with node.assert_debug_log([\"Oversized message from peer=4, disconnecting\"]):\n-            # An unknown message type (or *any* message type) over\n-            # MAX_PROTOCOL_MESSAGE_LENGTH should result in a disconnect.\n-            node.p2p.send_message(msg_over_size)\n-            node.p2p.wait_for_disconnect(timeout=4)\n+            with node.assert_debug_log([\"Oversized message from peer=4, disconnecting\"]):\n+                # An unknown message type (or *any* message type) over\n+                # MAX_PROTOCOL_MESSAGE_LENGTH should result in a disconnect.\n+                node.p2p.send_message(msg_over_size)\n+                node.p2p.wait_for_disconnect(timeout=4)\n \n-        node.disconnect_p2ps()\n-        conn = node.add_p2p_connection(P2PDataStore())\n-        conn.wait_for_verack()\n+            node.disconnect_p2ps()\n+            conn = node.add_p2p_connection(P2PDataStore())\n+            conn.wait_for_verack()\n+        else:\n+            self.log.info(\"Skipping test p2p_invalid_messages/1 (oversized message) under macOS\")\n \n         #\n         # 2."
      }
    ]
  }
]