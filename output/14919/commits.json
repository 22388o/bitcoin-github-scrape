[
  {
    "sha": "52b380b5bd1cd99adf93e6965e74d28089c4c976",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MmIzODBiNWJkMWNkOTlhZGY5M2U2OTY1ZTc0ZDI4MDg5YzRjOTc2",
    "commit": {
      "author": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2018-12-11T00:37:30Z"
      },
      "committer": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2018-12-13T06:35:02Z"
      },
      "message": "test: Prevent \"Duplicate-wallet filename specified\"\n\nwallet_multiwallet.py --usecli may sometimes fails with\n\"Duplicate -wallet filename specified\"\nUnloadwallet RPC command just notify the unload intention\nand it may delay a little bit until actual unloading.\n\nThis patch make loadwallet to retry if JSONRPCException occurs.",
      "tree": {
        "sha": "91e1170e88fd54499ca86a435e6d833ab39ff58c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91e1170e88fd54499ca86a435e6d833ab39ff58c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52b380b5bd1cd99adf93e6965e74d28089c4c976",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52b380b5bd1cd99adf93e6965e74d28089c4c976",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/52b380b5bd1cd99adf93e6965e74d28089c4c976",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52b380b5bd1cd99adf93e6965e74d28089c4c976/comments",
    "author": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d0a14703e288d72ff19d4d89defbc853233899f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d0a14703e288d72ff19d4d89defbc853233899f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d0a14703e288d72ff19d4d89defbc853233899f"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 16,
      "deletions": 8
    },
    "files": [
      {
        "sha": "adeb19fc30af9178db56496f833e2b32efbd755f",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b380b5bd1cd99adf93e6965e74d28089c4c976/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b380b5bd1cd99adf93e6965e74d28089c4c976/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=52b380b5bd1cd99adf93e6965e74d28089c4c976",
        "patch": "@@ -201,20 +201,26 @@ def str_to_b64str(string):\n def satoshi_round(amount):\n     return Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n \n-def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=None):\n+def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=None, ignore_exceptions=()):\n     if attempts == float('inf') and timeout == float('inf'):\n         timeout = 60\n     attempt = 0\n     time_end = time.time() + timeout\n \n+    class dummy(Exception):\n+        pass\n+\n     while attempt < attempts and time.time() < time_end:\n-        if lock:\n-            with lock:\n+        try:\n+            if lock:\n+                with lock:\n+                    if predicate():\n+                        return\n+            else:\n                 if predicate():\n                     return\n-        else:\n-            if predicate():\n-                return\n+        except ignore_exceptions + (dummy,):\n+            pass\n         attempt += 1\n         time.sleep(0.05)\n "
      },
      {
        "sha": "648ade6de51020419aaad85cb3f354f0d80aa7c5",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b380b5bd1cd99adf93e6965e74d28089c4c976/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b380b5bd1cd99adf93e6965e74d28089c4c976/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=52b380b5bd1cd99adf93e6965e74d28089c4c976",
        "patch": "@@ -15,7 +15,9 @@\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n+    wait_until,\n )\n+from test_framework.authproxy import JSONRPCException\n \n \n class MultiWalletTest(BitcoinTestFramework):\n@@ -308,11 +310,11 @@ def wallet_file(name):\n             rpc.backupwallet(backup)\n             self.nodes[0].unloadwallet(wallet_name)\n             shutil.copyfile(empty_wallet, wallet_file(wallet_name))\n-            self.nodes[0].loadwallet(wallet_name)\n+            wait_until(lambda: self.nodes[0].loadwallet(wallet_name), ignore_exceptions=(JSONRPCException,))\n             assert_equal(rpc.getaddressinfo(addr)['ismine'], False)\n             self.nodes[0].unloadwallet(wallet_name)\n             shutil.copyfile(backup, wallet_file(wallet_name))\n-            self.nodes[0].loadwallet(wallet_name)\n+            wait_until(lambda: self.nodes[0].loadwallet(wallet_name), ignore_exceptions=(JSONRPCException,))\n             assert_equal(rpc.getaddressinfo(addr)['ismine'], True)\n \n "
      }
    ]
  }
]