DrahtBot,2019-10-29 00:33:58,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17526](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17526.html) (Use Single Random Draw In addition to knaps",https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-547205040,547205040,
instagibbs,2019-10-30 13:32:06,"This change might have broken wallet_bumpfee.py somewhat randomly: https://travis-ci.org/bitcoin/bitcoin/jobs/604712627?utm_medium=notification&utm_source=github_status\n\nN.B. bumpfee uses preselected inputs to create the transaction, so it might be the case that BnB ended up ""hitting"" where it previously hadn't and got rid of the change output earlier than expected in the test.",https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-547904173,547904173,
achow101,2019-10-30 16:19:13,"> This change might have broken wallet_bumpfee.py somewhat randomly:\n\nI'm not sure why it would fail randomly since BnB should be deterministic. I also can't reproduce this at all..",https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-547989385,547989385,
instagibbs,2019-10-30 17:23:32,"Honestly I do not understand the error either. It seems either the original input was dropped somehow, or that it picked up additional inputs too early. I'll try to reproduce locally.\n",https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-548020506,548020506,
instagibbs,2019-10-30 17:52:43,ok I'm able to reproduce consistently.... it's adding 15 inputs for some reason when it shouldn't be adding any. investigating,https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-548034341,548034341,
instagibbs,2019-10-31 14:23:09,code review ACK https://github.com/bitcoin/bitcoin/pull/17290/commits/7e6cf109c2bc3f824f23fa58cad0bf5fe8184a9f,https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-548399595,548399595,
instagibbs,2019-11-04 14:04:12,"> I find it a bit concerning that no test breaks when I remove this\n\nThat's a sanity check where the transaction in the wallet somehow doesn't match the coin requested. Maybe it warrants a log print statement, but that can be done later.",https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-549367860,549367860,
instagibbs,2019-11-20 17:14:53,reACK https://github.com/bitcoin/bitcoin/pull/17290/commits/b007efdf1910db1d38671d6435d2f379bbf847d2,https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-556122561,556122561,
Sjors,2019-11-22 09:12:56,re-ACK b007efdf1910db1d38671d6435d2f379bbf847d2,https://github.com/bitcoin/bitcoin/pull/17290#issuecomment-557453832,557453832,
instagibbs,2019-10-29 20:17:13,are these `bnb_used` lines really necessary? We aren't using knapsack solver either on `SelectCoins` failure,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r340302591,340302591,src/wallet/wallet.cpp
instagibbs,2019-10-29 20:19:33,nit: `value_to_select`,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r340303721,340303721,src/wallet/wallet.cpp
instagibbs,2019-10-29 20:24:21,s/are/can/,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r340305893,340305893,src/wallet/test/coinselector_tests.cpp
achow101,2019-10-29 21:11:46,Yes. The `CreateTransaction` loop ends up infinitely looping without them,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r340327670,340327670,src/wallet/wallet.cpp
achow101,2019-10-29 23:02:30,Done,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r340366077,340366077,src/wallet/wallet.cpp
achow101,2019-10-29 23:02:34,Done,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r340366102,340366102,src/wallet/test/coinselector_tests.cpp
instagibbs,2019-10-30 18:21:36,"```\n-            value_to_select -= coin.effective_value;\n+            if (coin_selection_params.use_bnb) {\n+                value_to_select -= coin.effective_value;\n+            } else {\n+                value_to_select -= coin.txout.nValue;\n+            }\n```",https://github.com/bitcoin/bitcoin/pull/17290#discussion_r340785052,340785052,src/wallet/wallet.cpp
achow101,2019-10-30 18:32:19,Changed.,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r340790842,340790842,src/wallet/wallet.cpp
Sjors,2019-11-04 11:48:38,I find it a bit concerning that no test breaks when I remove this: https://github.com/Sjors/bitcoin/commit/398877e79bafb6d96bb4d2602568621d759eaf2d,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r342011583,342011583,src/wallet/wallet.cpp
Sjors,2019-11-04 12:37:32,"Would be nice to cover this case as well (used by the GUI and #16377), where coins are selected, but no extra inputs are allowed. Can wait for a followup though.",https://github.com/bitcoin/bitcoin/pull/17290#discussion_r342028224,342028224,src/wallet/wallet.cpp
achow101,2019-11-04 16:41:05,"Since the same boolean variable is used throughout the tests, it carries over whatever value it had previously. We are expecting SelectCoins and SelectCoinsMinConf to modify it.",https://github.com/bitcoin/bitcoin/pull/17290#discussion_r342150029,342150029,src/wallet/wallet.cpp
meshcollider,2019-11-20 07:14:29,`spendable`?,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r348320936,348320936,src/wallet/test/coinselector_tests.cpp
achow101,2019-11-20 17:12:22,Added,https://github.com/bitcoin/bitcoin/pull/17290#discussion_r348637294,348637294,src/wallet/test/coinselector_tests.cpp
