[
  {
    "sha": "d2ecb70d6441ae6ff03ccffa64622da56f5c2511",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmVjYjcwZDY0NDFhZTZmZjAzY2NmZmE2NDYyMmRhNTZmNWMyNTEx",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2019-07-31T16:38:14Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2019-07-31T16:38:14Z"
      },
      "message": "validation: flush state after initial sync",
      "tree": {
        "sha": "013023e5cc060a02a7856596dd07c1dc53495176",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/013023e5cc060a02a7856596dd07c1dc53495176"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2ecb70d6441ae6ff03ccffa64622da56f5c2511",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2ecb70d6441ae6ff03ccffa64622da56f5c2511",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2ecb70d6441ae6ff03ccffa64622da56f5c2511",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2ecb70d6441ae6ff03ccffa64622da56f5c2511/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7821821a23b68cc9ec49d69829ad4c939cb762e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7821821a23b68cc9ec49d69829ad4c939cb762e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7821821a23b68cc9ec49d69829ad4c939cb762e8"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 41,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6d439bc2f38888c9ddac1dd98c80dcc177da312b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2ecb70d6441ae6ff03ccffa64622da56f5c2511/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2ecb70d6441ae6ff03ccffa64622da56f5c2511/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d2ecb70d6441ae6ff03ccffa64622da56f5c2511",
        "patch": "@@ -84,6 +84,9 @@ static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n // Dump addresses to banlist.dat every 15 minutes (900s)\n static constexpr int DUMP_BANS_INTERVAL = 60 * 15;\n \n+//! Check if initial sync is done with no change in block height or queued downloads every 30s\n+static constexpr int SYNC_CHECK_INTERVAL = 30;\n+\n std::unique_ptr<CConnman> g_connman;\n std::unique_ptr<PeerLogicValidation> peerLogic;\n std::unique_ptr<BanMan> g_banman;\n@@ -1202,6 +1205,34 @@ bool AppInitLockDataDirectory()\n     return true;\n }\n \n+/**\n+ * Once initial sync is finished and no change in block height or queued downloads,\n+ * flush state to protect against data loss\n+ */\n+static void FlushAfterSync()\n+{\n+    if (::ChainstateActive().IsInitialBlockDownload()) {\n+        scheduler.scheduleFromNow(FlushAfterSync, SYNC_CHECK_INTERVAL * 1000);\n+        return;\n+    }\n+\n+    static int last_chain_height = -1;\n+    LOCK(cs_main);\n+    int current_height = ::ChainActive().Height();\n+    if (last_chain_height == -1 || last_chain_height != current_height) {\n+        last_chain_height = current_height;\n+        scheduler.scheduleFromNow(FlushAfterSync, SYNC_CHECK_INTERVAL * 1000);\n+        return;\n+    }\n+\n+    if (GetNumberOfPeersWithValidatedDownloads() > 0) {\n+        scheduler.scheduleFromNow(FlushAfterSync, SYNC_CHECK_INTERVAL * 1000);\n+        return;\n+    }\n+\n+    ::ChainstateActive().ForceFlushStateToDisk();\n+}\n+\n bool AppInitMain(InitInterfaces& interfaces)\n {\n     const CChainParams& chainparams = Params();\n@@ -1820,5 +1851,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n         g_banman->DumpBanlist();\n     }, DUMP_BANS_INTERVAL * 1000);\n \n+    scheduler.scheduleFromNow(FlushAfterSync, SYNC_CHECK_INTERVAL * 1000);\n+\n     return true;\n }"
      },
      {
        "sha": "33489fdd038f11afc2fe4fcb2e0a83b9697da4db",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2ecb70d6441ae6ff03ccffa64622da56f5c2511/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2ecb70d6441ae6ff03ccffa64622da56f5c2511/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=d2ecb70d6441ae6ff03ccffa64622da56f5c2511",
        "patch": "@@ -825,6 +825,11 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n     return true;\n }\n \n+int GetNumberOfPeersWithValidatedDownloads()\n+{\n+    return nPeersWithValidatedDownloads;\n+}\n+\n //////////////////////////////////////////////////////////////////////////////\n //\n // mapOrphanTransactions"
      },
      {
        "sha": "c83aab3e5d3bf8ce39e0aa3d26c359f1c3dc41a5",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2ecb70d6441ae6ff03ccffa64622da56f5c2511/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2ecb70d6441ae6ff03ccffa64622da56f5c2511/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=d2ecb70d6441ae6ff03ccffa64622da56f5c2511",
        "patch": "@@ -93,4 +93,7 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n /** Relay transaction to every node */\n void RelayTransaction(const uint256&, const CConnman& connman);\n \n+/** Get number of peers from which we're downloading blocks */\n+int GetNumberOfPeersWithValidatedDownloads() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n #endif // BITCOIN_NET_PROCESSING_H"
      }
    ]
  }
]