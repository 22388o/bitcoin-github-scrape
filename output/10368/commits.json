[
  {
    "sha": "5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTVlNGU5Y2MxOWUzMDE4NmJhMGExNWExY2Y4OTI1MTZkNDE5YmFm",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-09T06:46:26Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-09T06:46:26Z"
      },
      "message": "[wallet] Remove CTransaction&() helper conversion operator from wallet implementation.",
      "tree": {
        "sha": "dd937f14c45ed899f4af1d0c941705e0e10cd38a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd937f14c45ed899f4af1d0c941705e0e10cd38a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlkRZcMACgkQV692LbM1\nMyISHw/9GEPqht0dPkfuWFy5pC+R4qCOiXdtc5zquD3I/iuNY1Ytw88sSTFb7lqg\n9VpzRDxARJElQarPlz8ssyxpXDB4sfjA5cySYSae8afyiX1ZZzuN80PFJsFAxhgf\nI02VoZ/tEKP8MxXRdZf8uKg0xtLSrTNBVH5JNfcmkj1qLjy2BQ4sKWStYz2RinxG\ns3NSMT1jPl4S5QLDsJ85sUXTrdsfAmQponUjcZVPalpOkVbASY+5E/hB+1DNNMu3\nNs+kyX0KDbSJBsRTh2TDgqkyHfSFu6KkhAroM61AcnbrmP3LWAmKdGynhmk2zILC\nv/TeU59CnN/4CxM8+mNXMdal1d8VATswksnJDyJGS5XJvnLJLFEvsqh7QBYUx3i6\nI75veiV2JC9aZDLqM1axvuourEEv5Pl58OgxpoXhj8HGccuWEyEfrAIRaseL7+sr\nQgMz3aFSWWrJ92SS8plnbd1Rc374nRfU7DO/zovISI6ulvsW17SxlME/kuf7gauX\nY9fD5+6iTeU+KiaYpbAd9MvTHYgHYKVmQtEU8T+EezvAPVfwfJpvmlTudr0QIhX9\nC0k92A7ellsGEJyw6UUBkCh8f5d0PcWY7wq1ewV/MleqDIjUeKxgCOyKlTxUjTGw\n3Xdfa6N4OumBcIHYzvj5SeWvDdKSBRx7U+/QUoAE6G0Olb699Bk=\n=+yBW\n-----END PGP SIGNATURE-----",
        "payload": "tree dd937f14c45ed899f4af1d0c941705e0e10cd38a\nparent 6a796b2b53fe542e0f340f250f4f20d69efed8d0\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1494312386 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1494312386 +0900\n\n[wallet] Remove CTransaction&() helper conversion operator from wallet implementation.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a796b2b53fe542e0f340f250f4f20d69efed8d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a796b2b53fe542e0f340f250f4f20d69efed8d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a796b2b53fe542e0f340f250f4f20d69efed8d0"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 22,
      "deletions": 26
    },
    "files": [
      {
        "sha": "08077f2da43bac6b36e28c1a4a2ca05e1dc43b5e",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -24,7 +24,7 @@\n QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n {\n     AssertLockHeld(cs_main);\n-    if (!CheckFinalTx(wtx))\n+    if (!CheckFinalTx(*wtx.tx))\n     {\n         if (wtx.tx->nLockTime < LOCKTIME_THRESHOLD)\n             return tr(\"Open for %n more block(s)\", \"\", wtx.tx->nLockTime - chainActive.Height());"
      },
      {
        "sha": "ca9316686cd624c45162870fa67979133efa2868",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -183,7 +183,7 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n     status.depth = wtx.GetDepthInMainChain();\n     status.cur_num_blocks = chainActive.Height();\n \n-    if (!CheckFinalTx(wtx))\n+    if (!CheckFinalTx(*wtx.tx))\n     {\n         if (wtx.tx->nLockTime < LOCKTIME_THRESHOLD)\n         {"
      },
      {
        "sha": "5755910943d3c6b0aa4e96404de66e5d14dbf9e2",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -228,7 +228,7 @@ class TransactionTablePriv\n         std::map<uint256, CWalletTx>::iterator mi = wallet->mapWallet.find(rec->hash);\n         if(mi != wallet->mapWallet.end())\n         {\n-            std::string strHex = EncodeHexTx(static_cast<CTransaction>(mi->second));\n+            std::string strHex = EncodeHexTx(*mi->second.tx);\n             return QString::fromStdString(strHex);\n         }\n         return QString();"
      },
      {
        "sha": "e55710281f4d7cfe85c46c7446136279eaf78b83",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -34,7 +34,7 @@ CWalletTx *WalletModelTransaction::getTransaction()\n \n unsigned int WalletModelTransaction::getTransactionSize()\n {\n-    return (!walletTransaction ? 0 : ::GetVirtualTransactionSize(*walletTransaction));\n+    return (!walletTransaction ? 0 : ::GetVirtualTransactionSize(*walletTransaction->tx));\n }\n \n CAmount WalletModelTransaction::getTransactionFee()"
      },
      {
        "sha": "678342fde4c4562eb70b5a8c73f2d5f11353c214",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -80,7 +80,7 @@ CFeeBumper::CFeeBumper(const CWallet *pWallet, const uint256 txidIn, int newConf\n         return;\n     }\n \n-    if (!SignalsOptInRBF(wtx)) {\n+    if (!SignalsOptInRBF(*wtx.tx)) {\n         vErrors.push_back(\"Transaction is not BIP 125 replaceable\");\n         currentResult = BumpFeeResult::WALLET_ERROR;\n         return;\n@@ -94,7 +94,7 @@ CFeeBumper::CFeeBumper(const CWallet *pWallet, const uint256 txidIn, int newConf\n \n     // check that original tx consists entirely of our inputs\n     // if not, we can't bump the fee, because the wallet has no way of knowing the value of the other inputs (thus the fee)\n-    if (!pWallet->IsAllFromMe(wtx, ISMINE_SPENDABLE)) {\n+    if (!pWallet->IsAllFromMe(*wtx.tx, ISMINE_SPENDABLE)) {\n         vErrors.push_back(\"Transaction contains inputs that don't belong to this wallet\");\n         currentResult = BumpFeeResult::WALLET_ERROR;\n         return;"
      },
      {
        "sha": "f1cd6793eae2a9988b185199f06ec9bc9a363739",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -339,7 +339,7 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n \n     LOCK2(cs_main, pwallet->cs_wallet);\n \n-    if (pwallet->IsMine(wtx)) {\n+    if (pwallet->IsMine(*wtx.tx)) {\n         pwallet->AddToWallet(wtx, false);\n         return NullUniValue;\n     }"
      },
      {
        "sha": "bfd006c14ceac03f9a7ff9053470c2da6947448e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -87,7 +87,7 @@ void WalletTxToJSON(const CWalletTx& wtx, UniValue& entry)\n     std::string rbfStatus = \"no\";\n     if (confirms <= 0) {\n         LOCK(mempool.cs);\n-        RBFTransactionState rbfState = IsRBFOptIn(wtx, mempool);\n+        RBFTransactionState rbfState = IsRBFOptIn(*wtx.tx, mempool);\n         if (rbfState == RBF_TRANSACTIONSTATE_UNKNOWN)\n             rbfStatus = \"unknown\";\n         else if (rbfState == RBF_TRANSACTIONSTATE_REPLACEABLE_BIP125)\n@@ -1867,7 +1867,7 @@ UniValue gettransaction(const JSONRPCRequest& request)\n     ListTransactions(pwallet, wtx, \"*\", 0, false, details, filter);\n     entry.push_back(Pair(\"details\", details));\n \n-    std::string strHex = EncodeHexTx(static_cast<CTransaction>(wtx), RPCSerializationFlags());\n+    std::string strHex = EncodeHexTx(*wtx.tx, RPCSerializationFlags());\n     entry.push_back(Pair(\"hex\", strHex));\n \n     return entry;"
      },
      {
        "sha": "0dfc42db40c4c04e174ed3887ad456b94b8b6599",
        "filename": "src/wallet/test/accounting_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/test/accounting_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/test/accounting_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/accounting_tests.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -84,7 +84,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n \n     wtx.mapValue[\"comment\"] = \"y\";\n     {\n-        CMutableTransaction tx(wtx);\n+        CMutableTransaction tx(*wtx.tx);\n         --tx.nLockTime;  // Just to change the hash :)\n         wtx.SetTx(MakeTransactionRef(std::move(tx)));\n     }\n@@ -94,7 +94,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n \n     wtx.mapValue[\"comment\"] = \"x\";\n     {\n-        CMutableTransaction tx(wtx);\n+        CMutableTransaction tx(*wtx.tx);\n         --tx.nLockTime;  // Just to change the hash :)\n         wtx.SetTx(MakeTransactionRef(std::move(tx)));\n     }"
      },
      {
        "sha": "1cdc41ce96bde1bd26793f0825ae03886a90a76f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -1592,7 +1592,7 @@ CAmount CWalletTx::GetDebit(const isminefilter& filter) const\n             debit += nDebitCached;\n         else\n         {\n-            nDebitCached = pwallet->GetDebit(*this, ISMINE_SPENDABLE);\n+            nDebitCached = pwallet->GetDebit(*tx, ISMINE_SPENDABLE);\n             fDebitCached = true;\n             debit += nDebitCached;\n         }\n@@ -1603,7 +1603,7 @@ CAmount CWalletTx::GetDebit(const isminefilter& filter) const\n             debit += nWatchDebitCached;\n         else\n         {\n-            nWatchDebitCached = pwallet->GetDebit(*this, ISMINE_WATCH_ONLY);\n+            nWatchDebitCached = pwallet->GetDebit(*tx, ISMINE_WATCH_ONLY);\n             fWatchDebitCached = true;\n             debit += nWatchDebitCached;\n         }\n@@ -1625,7 +1625,7 @@ CAmount CWalletTx::GetCredit(const isminefilter& filter) const\n             credit += nCreditCached;\n         else\n         {\n-            nCreditCached = pwallet->GetCredit(*this, ISMINE_SPENDABLE);\n+            nCreditCached = pwallet->GetCredit(*tx, ISMINE_SPENDABLE);\n             fCreditCached = true;\n             credit += nCreditCached;\n         }\n@@ -1636,7 +1636,7 @@ CAmount CWalletTx::GetCredit(const isminefilter& filter) const\n             credit += nWatchCreditCached;\n         else\n         {\n-            nWatchCreditCached = pwallet->GetCredit(*this, ISMINE_WATCH_ONLY);\n+            nWatchCreditCached = pwallet->GetCredit(*tx, ISMINE_WATCH_ONLY);\n             fWatchCreditCached = true;\n             credit += nWatchCreditCached;\n         }\n@@ -1650,7 +1650,7 @@ CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n     {\n         if (fUseCache && fImmatureCreditCached)\n             return nImmatureCreditCached;\n-        nImmatureCreditCached = pwallet->GetCredit(*this, ISMINE_SPENDABLE);\n+        nImmatureCreditCached = pwallet->GetCredit(*tx, ISMINE_SPENDABLE);\n         fImmatureCreditCached = true;\n         return nImmatureCreditCached;\n     }\n@@ -1694,7 +1694,7 @@ CAmount CWalletTx::GetImmatureWatchOnlyCredit(const bool& fUseCache) const\n     {\n         if (fUseCache && fImmatureWatchCreditCached)\n             return nImmatureWatchCreditCached;\n-        nImmatureWatchCreditCached = pwallet->GetCredit(*this, ISMINE_WATCH_ONLY);\n+        nImmatureWatchCreditCached = pwallet->GetCredit(*tx, ISMINE_WATCH_ONLY);\n         fImmatureWatchCreditCached = true;\n         return nImmatureWatchCreditCached;\n     }\n@@ -1735,7 +1735,7 @@ CAmount CWalletTx::GetChange() const\n {\n     if (fChangeCached)\n         return nChangeCached;\n-    nChangeCached = pwallet->GetChange(*this);\n+    nChangeCached = pwallet->GetChange(*tx);\n     fChangeCached = true;\n     return nChangeCached;\n }\n@@ -1749,7 +1749,7 @@ bool CWalletTx::InMempool() const\n bool CWalletTx::IsTrusted() const\n {\n     // Quick answer in most cases\n-    if (!CheckFinalTx(*this))\n+    if (!CheckFinalTx(*tx))\n         return false;\n     int nDepth = GetDepthInMainChain();\n     if (nDepth >= 1)\n@@ -1988,7 +1988,7 @@ void CWallet::AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe, const\n             const uint256& wtxid = it->first;\n             const CWalletTx* pcoin = &(*it).second;\n \n-            if (!CheckFinalTx(*pcoin))\n+            if (!CheckFinalTx(*pcoin->tx))\n                 continue;\n \n             if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n@@ -2676,7 +2676,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n         wtxNew.SetTx(MakeTransactionRef(std::move(txNew)));\n \n         // Limit size\n-        if (GetTransactionWeight(wtxNew) >= MAX_STANDARD_TX_WEIGHT)\n+        if (GetTransactionWeight(*wtxNew.tx) >= MAX_STANDARD_TX_WEIGHT)\n         {\n             strFailReason = _(\"Transaction too large\");\n             return false;"
      },
      {
        "sha": "b251a300e41c282c608fd91e4cee56f2d4d0fb7a",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -209,10 +209,6 @@ class CMerkleTx\n         Init();\n     }\n \n-    /** Helper conversion operator to allow passing CMerkleTx where CTransaction is expected.\n-     *  TODO: adapt callers and remove this operator. */\n-    operator const CTransaction&() const { return *tx; }\n-\n     void Init()\n     {\n         hashBlock = uint256();"
      },
      {
        "sha": "7d0c3909b4c88ae4a3c934e976088b740fd6a534",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a5e4e9cc19e30186ba0a15a1cf892516d419baf/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=5a5e4e9cc19e30186ba0a15a1cf892516d419baf",
        "patch": "@@ -304,7 +304,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             CWalletTx wtx;\n             ssValue >> wtx;\n             CValidationState state;\n-            if (!(CheckTransaction(wtx, state) && (wtx.GetHash() == hash) && state.IsValid()))\n+            if (!(CheckTransaction(*wtx.tx, state) && (wtx.GetHash() == hash) && state.IsValid()))\n                 return false;\n \n             // Undo serialize changes in 31600"
      }
    ]
  }
]