TheBlueMatt,2017-11-27T20:29:59Z,"Obviously this cleans up some of the interface gook from #10286, and adds some more docs that probably could have been there. Next up after this one is moving alll the remaining events all into the background thread, with associated net_processing cleanups in the process.",https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-347317891,347317891,
TheBlueMatt,2017-12-13T22:34:05Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-351547020,351547020,
theuni,2017-12-19T00:13:16Z,"Concept ACK.\n\nThough I'm nervous about backgrounding more stuff before safeguarding against outside (unsynchronized) access. For example, the mempool/feeestimator may now be significantly ahead of what the wallet has processed. So calling CreateTransaction when we're in the middle of connecting 10 blocks seems... dangerous, even with the BlockUntilSyncedToCurrentChain hack.\n",https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-352598832,352598832,
TheBlueMatt,2017-12-19T00:34:39Z,"Hmm? If anything the fee estimator should be at much lower risk there than for wallet...at worst you'll get out of date fee estimates...something you'd get anyway because you're calling the fee estimator in the middle of syncing stuff. Note that #11824 also keeps the queue depth at no more than 10, though I dont really want to rely on that and would prefer to implement the dump/reload-from-disk pr",https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-352602229,352602229,
TheBlueMatt,2018-03-27T21:13:25Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-376677416,376677416,
sdaftuar,2018-04-10T19:42:46Z,"I've started reviewing and testing the first few commits in this PR, but I already agree with @jimpo above, that this would be easier to review if it was split up.\n\nPerhaps we could first have a PR that changed the callback interface around, and then another PR that reworks the fee estimator to take advantage of the new interface?\n\n(also this needs rebase)",https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-380223276,380223276,
ajtowns,2018-04-12T02:50:02Z,"ConceptACK for what it's worth, but definitely split this up -- it overflows my mental stack, and both times I've tried to review it it's already had conflicts with master that make a review not crazy useful...\n\nBreaking out the trivial bits, at least ""Clarify validationinterface notification ordering"" and ""Remove useless scoped (sic?) in AcceptToMemoryPool"" seems like a good first move. Maybe",https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-380658484,380658484,
jnewbery,2018-04-12T14:20:21Z,"I haven't looked at the changes but a +700/-600 diff is somewhat intimidating.\n\nI'd love to help you make progress on this and will happily review PRs that are a subset of this.",https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-380822298,380822298,
promag,2018-04-12T14:38:21Z,"Tested ACK.\n\nI'm kidding :trollface: please please split up 👍 ",https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-380828696,380828696,
MarcoFalke,2018-04-12T15:16:23Z,@bugthebluematt ^,https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-380841918,380841918,
TheBlueMatt,2018-04-13T18:59:22Z,Now based on #12979.,https://github.com/bitcoin/bitcoin/pull/11775#issuecomment-381231388,381231388,
jimpo,2017-11-29T03:31:46Z,"commit: Split removeRecursive into calculate/remove steps\n\nstyle: Capitalize function name.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r153686716,153686716,src/txmempool.h
jimpo,2018-04-02T17:23:54Z,"commit: Split removeRecursive into calculate/remove steps\n\nShould this AssertLockHeld?",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178595675,178595675,src/txmempool.cpp
jimpo,2018-04-02T17:30:57Z,"commit: Track the set of transactions removed/conflicted in removeForBlock\n\nI think this `reserve` call could be less performant than skipping it if there are a sufficient number of conflicting inputs. https://stackoverflow.com/a/1742961",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178597496,178597496,src/txmempool.cpp
jimpo,2018-04-02T18:08:13Z,"commit: BlockConnected(vtxConflicted) -> New MempoolInterface callback\n\nWhy not just move that logic here from BlockConnected as well?",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178607413,178607413,src/wallet/wallet.cpp
jimpo,2018-04-02T18:14:45Z,"commit: Add txn_replaced to Added callback, remove lReplaced ATMP arg\n\nnit: Space after `if`",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178609180,178609180,src/init.cpp
jimpo,2018-04-02T18:23:08Z,"commit: Add txn_replaced to Added callback, remove lReplaced ATMP arg\n\nIt wasn't obvious to me what ATMP stood for. I think it would be better to spell out `AddToMemoryPool` for clarity.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178611267,178611267,src/txmempool.cpp
jimpo,2018-04-02T18:39:47Z,"commit: Add txn_replaced to Added callback, remove lReplaced ATMP arg\n\nThis method takes a `std::shared_ptr` while `MempoolUpdatedForBlockConnect` takes rvalue refs and constructs the `std::shared_ptr`s itself. I think these should be consistent.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178615598,178615598,src/validationinterface.cpp
jimpo,2018-04-02T18:46:53Z,"commit: Make fee estimation not need CTxMemPoolEntry is block processing\n\ntypo: thransaction",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178617351,178617351,src/validationinterface.h
jimpo,2018-04-02T18:47:07Z,"commit: Make fee estimation not need CTxMemPoolEntry is block processing\n\nnit: space after bang",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178617393,178617393,src/validationinterface.h
jimpo,2018-04-02T18:49:24Z,"commit: Make fee estimation not need CTxMemPoolEntry is block processing\n\nnit: Remove braces or move statement body onto newline.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178617924,178617924,src/txmempool.cpp
jimpo,2018-04-02T18:50:52Z,"commit: Make fee estimation not need CTxMemPoolEntry is block processing\n\nnit: Move closing brace onto newline.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178618284,178618284,src/txmempool.cpp
jimpo,2018-04-02T18:53:07Z,"commit: Make fee estimation not need CTxMemPoolEntry is block processing\n\nstyle: s/inBlock/in_block/",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178618859,178618859,src/policy/fees.cpp
jimpo,2018-04-02T18:59:34Z,"commit: Make fee estimation not need CTxMemPoolEntry is block processing\n\nAny particular reason to move this up here rather than leave it in the second `private` section where it is now?",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178620537,178620537,src/policy/fees.h
jimpo,2018-04-02T19:06:06Z,"commit: Make fee estimation not need CTxMemPoolEntry is block processing\n\nI'd move this erase immediately after the `removeTx` above and define `double fee_per_k = (double)pos->second.m_fee_per_k;` as a variable up there as well.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178622043,178622043,src/policy/fees.cpp
jimpo,2018-04-02T19:11:06Z,"commit: Make fee estimation not need CTxMemPoolEntry is block processing\n\nI don't really like that this method has the same name as the other `removeTx` because it's responsibilities are different.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178623164,178623164,src/policy/fees.h
jimpo,2018-04-02T20:10:45Z,"commit: Track witness hash malleation in fee estimator\n\nWhy don't we want to record the blocks to confirm in this case?",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178636650,178636650,src/policy/fees.cpp
jimpo,2018-04-02T20:22:18Z,"commit: Process fee estimates in the background via MempoolInterface\n\nUse SyncWithValidationInterfaceQueue?",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178639530,178639530,src/test/policyestimator_tests.cpp
jimpo,2018-04-02T20:23:09Z,"commit: Process fee estimates in the background via MempoolInterface\n\nMake the callbacks protected?",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r178639756,178639756,src/policy/fees.h
TheBlueMatt,2018-04-05T18:02:29Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550906,179550906,src/policy/fees.h
TheBlueMatt,2018-04-05T18:02:30Z,This was written before that existed. Fixed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550914,179550914,src/test/policyestimator_tests.cpp
TheBlueMatt,2018-04-05T18:02:30Z,Because we don't know how long its been around/it waited.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550928,179550928,src/policy/fees.cpp
TheBlueMatt,2018-04-05T18:02:32Z,"Happy to rename it, but honestly I dont remember what the different responsibilities are. Its been so long since I wrote this I dont know how it works anymore. Any suggestions?",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550944,179550944,src/policy/fees.h
TheBlueMatt,2018-04-05T18:02:33Z,"Would also need to copy blockHeight as well, at which point you'd just be copying the whole struct so that you can remove it.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550956,179550956,src/policy/fees.cpp
TheBlueMatt,2018-04-05T18:02:34Z,Probably just a change in code between when I wrote this and now.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550962,179550962,src/policy/fees.h
TheBlueMatt,2018-04-05T18:02:36Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550965,179550965,src/policy/fees.cpp
TheBlueMatt,2018-04-05T18:02:36Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550967,179550967,src/txmempool.cpp
TheBlueMatt,2018-04-05T18:02:38Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550974,179550974,src/txmempool.cpp
TheBlueMatt,2018-04-05T18:02:39Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550986,179550986,src/validationinterface.h
TheBlueMatt,2018-04-05T18:02:41Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550992,179550992,src/validationinterface.h
TheBlueMatt,2018-04-05T18:02:42Z,"Obviousy avoiding the move is a bit more performant, hence its use here. The use of the move in MempoolUpdatedForBlockConnect was to reduce diff size.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550993,179550993,src/validationinterface.cpp
TheBlueMatt,2018-04-05T18:02:42Z,Done.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179550998,179550998,src/txmempool.cpp
TheBlueMatt,2018-04-05T18:02:44Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179551004,179551004,src/init.cpp
TheBlueMatt,2018-04-05T18:02:44Z,"Because we still need it in BlockConnected - there may be txn that weren't in our mempool that got confirmed, so copying it would be useless.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179551005,179551005,src/wallet/wallet.cpp
TheBlueMatt,2018-04-05T18:02:46Z,Good catch. Removed.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179551014,179551014,src/txmempool.cpp
TheBlueMatt,2018-04-05T18:02:46Z,Done (bonus: also fixed the whitespace issues in that commit).,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179551017,179551017,src/txmempool.cpp
TheBlueMatt,2018-04-05T18:02:48Z,"This PR was created long before the introduction of that part of the style guide, so it matches the capitalization of removeRecursive.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179551028,179551028,src/txmempool.h
jimpo,2018-04-06T00:41:27Z,"Actually, it's fine leaving this one as is because in the later commit (Process fee estimates in the background via MempoolInterface), the other `removeTx` gets renamed to `removeTxNotInBlock`.\n\nNot really necessary, but maybe rename the other function to `removeTxNotInBlock` in this commit instead of a later commit to avoid the confusion here.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179636457,179636457,src/policy/fees.h
jimpo,2018-04-06T00:45:20Z,"Yeah, I think copying the struct for the sake of simplifying the control flow (by only erasing in one place) is actually good. Also would just make it more readable to have a descriptive variable name like `tx_info` instead of `pos->second`.",https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179636911,179636911,src/policy/fees.cpp
jimpo,2018-04-06T22:08:14Z,I don't understand. We have the record of when the tx entered the mempool (albeit with different witness data). How does the malleated witness change things?,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179887104,179887104,src/policy/fees.cpp
TheBlueMatt,2018-04-07T15:16:53Z,Because clearly there was a propagation issue. We dont know whether the lower-feerate version (or some other version) was the one most miners saw or the higher-feerate version. Better to just ignore it.,https://github.com/bitcoin/bitcoin/pull/11775#discussion_r179919250,179919250,src/policy/fees.cpp
