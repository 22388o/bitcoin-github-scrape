[
  {
    "sha": "6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDExYzlkNzJkMWRmNWMyY2QwOWRlNmY4NWMyMWViNGY3ZWIxYmE4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-08-20T12:31:00Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-08-21T12:18:40Z"
      },
      "message": "QA: fix rpc_setban.py race",
      "tree": {
        "sha": "e56dbef9314a39a2a31c72e5767bc9538ee8f956",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e56dbef9314a39a2a31c72e5767bc9538ee8f956"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl1dNqEACgkQHrd2uwPH\nki0GABAA0frFaXvRHj0ocWTNyV4N7ZWw8/ZuiHe9rMhNdqt7boSgYbupxsU+qe7B\nB0nRUaoFLVeaowilgACOfd9YGaStNb50r1S2zlBE0BryItRQ7maGBp3bCo/6G3fW\nMWcpJFnjLI7uBLt9jlg+tdnu0xPBE++QYHqefcxzG/C6wSCyR+x0HTNEJNHX28/A\n5doYLBHRHWSYRFD9zlTGlHqt0njaUTRGjq/aReHJ5EZMOr87A+3EB3mT81sa5ZT2\n/+3h32KzQYKPM/xutR3sH2Ga6m708quBQ4kcHeuODX53WK7rFneA10dfJlX0kB18\nLHAMQH+j8yHe8jejHgb3hgZw3lG8VMnQyyV0aMXRtSHRRC6KBFoph3/BEg9erXMJ\ntVPfPsCNw7VRqnAOE/NXdRhY/UFVIEBjrYY01FtSlz1y9PK0FbS8xAeB0+YkaxWB\nkMQyjkWBaS/s3ace94eFovSR2UQSEXcbAKywuLQm8277PswkRtiJGyy4Q+tnzlMP\nu8vlEI4sg/hYXiBAuVTH1CvP80yz/ndzL7lygjTI6mA90d+lX2D+l2F/ZGDkVNVS\ncqA7dBFF9UlKWhwsgYQOL1bxhIbOv03UXVwMPL58bqFUruuH2gXdKwC87sd753Mq\n4pWQrzZ/EU+cL/uYOOsHzMxWqrDIImgVQCBzIo2FguoOa0EFhA4=\n=X4AO\n-----END PGP SIGNATURE-----",
        "payload": "tree e56dbef9314a39a2a31c72e5767bc9538ee8f956\nparent e00ecb3d7aaee463643e486ca03c318e192b8058\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1566304260 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1566389920 +0200\n\nQA: fix rpc_setban.py race\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e00ecb3d7aaee463643e486ca03c318e192b8058",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e00ecb3d7aaee463643e486ca03c318e192b8058",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e00ecb3d7aaee463643e486ca03c318e192b8058"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 18,
      "deletions": 9
    },
    "files": [
      {
        "sha": "423741fd27404f194faa6899e264f0353613eb83",
        "filename": "test/functional/rpc_setban.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8/test/functional/rpc_setban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8/test/functional/rpc_setban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_setban.py?ref=6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8",
        "patch": "@@ -26,7 +26,7 @@ def run_test(self):\n         self.nodes[1].setban(\"127.0.0.1\", \"add\")\n \n         # Node 0 should not be able to reconnect\n-        with self.nodes[1].assert_debug_log(expected_msgs=['dropped (banned)\\n']):\n+        with self.nodes[1].assert_debug_log(expected_msgs=['dropped (banned)\\n'],timeout=5):\n             self.restart_node(1, [])\n             self.nodes[0].addnode(\"127.0.0.1:\" + str(p2p_port(1)), \"onetry\")\n "
      },
      {
        "sha": "9667cf4ea400203b610c3be6e2b7e71daec07f9d",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 17,
        "deletions": 8,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=6011c9d72d1df5c2cd09de6f85c21eb4f7eb1ba8",
        "patch": "@@ -307,21 +307,30 @@ def wait_until_stopped(self, timeout=BITCOIND_PROC_WAIT_TIMEOUT):\n         wait_until(self.is_node_stopped, timeout=timeout)\n \n     @contextlib.contextmanager\n-    def assert_debug_log(self, expected_msgs):\n+    def assert_debug_log(self, expected_msgs, timeout=2):\n+        time_end = time.time() + timeout\n         debug_log = os.path.join(self.datadir, self.chain, 'debug.log')\n         with open(debug_log, encoding='utf-8') as dl:\n             dl.seek(0, 2)\n             prev_size = dl.tell()\n         try:\n             yield\n         finally:\n-            with open(debug_log, encoding='utf-8') as dl:\n-                dl.seek(prev_size)\n-                log = dl.read()\n-            print_log = \" - \" + \"\\n - \".join(log.splitlines())\n-            for expected_msg in expected_msgs:\n-                if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n-                    self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n+            while True:\n+                found = True\n+                with open(debug_log, encoding='utf-8') as dl:\n+                    dl.seek(prev_size)\n+                    log = dl.read()\n+                print_log = \" - \" + \"\\n - \".join(log.splitlines())\n+                for expected_msg in expected_msgs:\n+                    if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n+                        found = False\n+                if found:\n+                    return\n+                if time.time() >= time_end:\n+                    break\n+                time.sleep(0.05)\n+            self._raise_assertion_error('Expected messages \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(str(expected_msgs), print_log))\n \n     @contextlib.contextmanager\n     def assert_memory_usage_stable(self, *, increase_allowed=0.03):"
      }
    ]
  }
]