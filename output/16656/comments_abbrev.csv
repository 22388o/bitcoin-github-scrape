MarcoFalke,2019-08-19 15:48:22,I'd rather do this without a sleep. Wouldn't creating a dummy connection and waiting for it to open synchronize as well?,https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-522636961,522636961,
jonasschnelli,2019-08-19 16:01:20,Maybe the better way would be to add a timeout to `assert_debug_log` and check every second until the timeout is hit,https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-522642446,522642446,
emilengler,2019-08-19 16:10:56,"2 seconds are too much in my opinion.\nI don't know the CI performance but I would go for 0.5 seconds",https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-522646274,522646274,
MarcoFalke,2019-08-19 16:18:38,"> Maybe the better way would be to add a timeout to assert_debug_log and check every second until the timeout is hit\n\nI am fine with either. Though, I suggest to set the default timeout for `assert_debug_log` to `0`, as all existing calls to it are already synchronized.",https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-522649119,522649119,
jonasschnelli,2019-08-20 09:03:39,Switch to a retry/timeout approach with no delay for existing calls.,https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-522924459,522924459,
DrahtBot,2019-08-20 12:14:46,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16673](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16673.html) (Relog configuration args on debug.log rotat",https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-522986512,522986512,
emilengler,2019-08-20 14:26:56,"0.05 seconds are definitely better.\nConcept ACK 6bdd6a0\nHaven't tested it but the Travis linter is screaming around, you should check that out.",https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523040093,523040093,
NicolasDorier,2019-08-20 14:45:05,"Sorry about that. Concept ACK, ~just I don't understand the yield part in the try block.~",https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523048131,523048131,
NicolasDorier,2019-08-20 14:48:16,@jonasschnelli the `while true` and the break conditions must be inside the finally block if the problem is that the log just comes too late.,https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523049569,523049569,
jonasschnelli,2019-08-20 15:27:07,"> the while true and the break conditions must be inside the finally block if the problem is that the log just comes too late.\n\nWhy? I guess we can get a fresh file position as well... ",https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523066826,523066826,
NicolasDorier,2019-08-20 15:39:55,"@jonasschnelli no you don't.\n\nWhat you want to say is: \n\n1. Open the log at position `prev_size` (before try/finally)\n2. Do stuff (`yield`) the ""stuff"" is what is inside the `with` block of the caller.\n3. Starting from `prev_size`, until the pattern is found in the log, read the rest of logs (finally), \n4. repeat 3 until found or timeout\n\n`prev_size` should not change at all from",https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523072320,523072320,
jonasschnelli,2019-08-20 16:17:15,"@NicolasDorier \nOh. I see your point now. My understanding of pythons `yield` was incorrect.\nWill fix...",https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523087674,523087674,
NicolasDorier,2019-08-20 16:28:52,just discovered it myself. I wonder why we don't have this in C#... will complain to Microsoft. :p,https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523092126,523092126,
jonasschnelli,2019-08-21 10:27:32,Fixed @NicolasDorier's point.,https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523397724,523397724,
NicolasDorier,2019-08-21 13:48:07,ACK,https://github.com/bitcoin/bitcoin/pull/16656#issuecomment-523465067,523465067,
MarcoFalke,2019-08-20 14:34:26,"```\ntest/functional/test_framework/test_node.py:332:22: E703 statement ends with a semicolon",https://github.com/bitcoin/bitcoin/pull/16656#discussion_r315725360,315725360,test/functional/test_framework/test_node.py
MarcoFalke,2019-08-20 14:36:51,"It looks like you are resetting prev_size in a loop, thus introducing another race where we just miss the debug log lines between .read() and .tell(), no?",https://github.com/bitcoin/bitcoin/pull/16656#discussion_r315726889,315726889,test/functional/test_framework/test_node.py
NicolasDorier,2019-08-20 14:42:10,I don't understand this.,https://github.com/bitcoin/bitcoin/pull/16656#discussion_r315729933,315729933,test/functional/test_framework/test_node.py
NicolasDorier,2019-08-20 14:45:51,"Actually nevermind this was already there before. (Also I understand now, this is continuing when going out of the `with` block. Sweet.)",https://github.com/bitcoin/bitcoin/pull/16656#discussion_r315732069,315732069,test/functional/test_framework/test_node.py
MarcoFalke,2019-08-21 11:01:43,"How is this supposed to work?\n\n`found` is latched to False and never set to True, so this will never succeed and always time out (unless it passed on the first try)\n\nI think you can just use `wait_until`, so that you don't have to reinvent the wheel",https://github.com/bitcoin/bitcoin/pull/16656#discussion_r316124767,316124767,test/functional/test_framework/test_node.py
jonasschnelli,2019-08-21 12:07:00,"Argh. Right.\nMoved the `found = True` back into the loop. Fixed.\n\nI'm happy if someone wants to further optimize this.",https://github.com/bitcoin/bitcoin/pull/16656#discussion_r316147537,316147537,test/functional/test_framework/test_node.py
MarcoFalke,2019-08-21 12:15:17,no need for this. python doesn't have scope blocks,https://github.com/bitcoin/bitcoin/pull/16656#discussion_r316150774,316150774,test/functional/test_framework/test_node.py
MarcoFalke,2019-08-21 12:16:50,This will print only the last message,https://github.com/bitcoin/bitcoin/pull/16656#discussion_r316151358,316151358,test/functional/test_framework/test_node.py
jonasschnelli,2019-08-21 12:18:50,Fixed,https://github.com/bitcoin/bitcoin/pull/16656#discussion_r316152130,316152130,test/functional/test_framework/test_node.py
jonasschnelli,2019-08-21 12:18:56,Fixed,https://github.com/bitcoin/bitcoin/pull/16656#discussion_r316152170,316152170,test/functional/test_framework/test_node.py
