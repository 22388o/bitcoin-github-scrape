fanquake,2019-02-26T11:52:02Z,"edit: Also, looks like you are referencing this PR in the title.\n\nThis is failing on both Windows builds:\n\n[Win32](https://travis-ci.org/bitcoin/bitcoin/jobs/498675434)\n```\n  GEN      qt/moc_bantablemodel.cpp\nrpc/server.cpp: In function ‘UniValue getrpcinfo(const JSONRPCRequest&)’:\nrpc/server.cpp:317:72: error: no matching function for call to ‘UniValue::UniValue(UniValue::VType, c",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-467409182,467409182,
darosior,2019-02-26T12:09:51Z,I changed `c_str()` to `native()` in order to return a `string_type`.,https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-467414316,467414316,
Sjors,2019-02-26T15:17:00Z,"Concept ACK. Can you add a test, e.g. in `test/functional/interface_rpc.py`? You can get the expected log path with `os.path.join(self.nodes[0].datadir, 'debug.log')`\n\nUsing `native()` didn't work. Maybe @ken2812221 knows why the win32 and win64 builds fail?\n\nIt's better to remove `fixes #15438` from the commit message. It's already in the pull request description, which automatically gets",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-467478381,467478381,
darosior,2019-02-26T20:55:33Z,"@Sjors `os.path.join(self.nodes[0].datadir, 'debug.log')` does not link to the good file. It outputs `/tmp/bitcoin_func_test_tj4444vh/node0/debug.log` instead of `/tmp/bitcoin_func_test_tj4444vh/node0/regtest/debug.log`.",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-467609776,467609776,
DrahtBot,2019-02-26T21:37:56Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-467624275,467624275,
Sjors,2019-02-27T14:11:18Z,"tACK 59c91b9, but let's wait for discussion in #15438 to settle.\n\nThe lack of escape characters (e.g. space) is annoying, but I'm not sure if it's appropriate to add them. \n\n```sh\nbitcoin-cli getrpcinfo | jq -r '.logpath'\n/Users/bitcoin/Library/Application Support/Bitcoin/testnet3/debug.log\n\ntail -f ""`bitcoin-cli getrpcinfo | jq -r '.logpath'`""\n```",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-467875665,467875665,
ryanofsky,2019-02-27T15:48:19Z,"> The lack of escape characters (e.g. space) is annoying, but I'm not sure if it's appropriate to add them.\n\nWhat kind of escaping would you want to add here? UniValue already adds JSON escaping, so I would think any extra layers of escaping would just break your tail command and be more annoying.",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-467914785,467914785,
Sjors,2019-02-27T16:07:31Z,@ryanofsky only escaping spaces in the path,https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-467922715,467922715,
promag,2019-03-03T16:08:02Z,"NACK, I think #15493 is a better solution for OP.",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-469036983,469036983,
laanwj,2019-05-16T19:20:16Z,"> What kind of escaping would you want to add here? UniValue already adds JSON escaping, so I would think any extra layers of escaping would just break your tail command and be more annoying.\n\nDefinite *don't* add any extra escaping. If we add this field, it needs to be usable from other JSON clients as well which don't do any other unquoting besides parsing JSON. \nString sanitization is onl",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-493198322,493198322,
darosior,2019-05-16T21:02:33Z,"Rebased, but is it still needed or #15493 will be prefered ?",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-493230927,493230927,
laanwj,2019-07-03T12:35:41Z,"I think getting the log path through RPC can be useful (say, if you have some kind of monitoring program such as [bitcoind-ncurses](https://github.com/esotericnonsense/bitcoind-ncurses2) that connects to the RPC and needs to show the logs) and  #15493 doesn't entirely replace that use case.\n\nTested ACK 8a6810d0d2759c69f63b53c48aa79e0cfdd88ffb",https://github.com/bitcoin/bitcoin/pull/15483#issuecomment-508074299,508074299,
ken2812221,2019-02-26T19:33:34Z,Could use `m_file_path.string()` instead. It might fix the issue.,https://github.com/bitcoin/bitcoin/pull/15483#discussion_r260451446,260451446,src/rpc/server.cpp
darosior,2019-02-26T21:18:21Z,"Thanks, it fixed it.",https://github.com/bitcoin/bitcoin/pull/15483#discussion_r260491332,260491332,src/rpc/server.cpp
promag,2019-02-26T21:32:15Z,Use `assert_equal`?,https://github.com/bitcoin/bitcoin/pull/15483#discussion_r260496672,260496672,test/functional/interface_rpc.py
MarcoFalke,2019-02-26T22:02:19Z,"Yes, please. Otherwise a failure can not be debugged",https://github.com/bitcoin/bitcoin/pull/15483#discussion_r260507724,260507724,test/functional/interface_rpc.py
darosior,2019-02-27T10:33:06Z,Fixed,https://github.com/bitcoin/bitcoin/pull/15483#discussion_r260686174,260686174,test/functional/interface_rpc.py
