[
  {
    "sha": "8688671484ec5bda0ebdfadf1f39fcd3dc88c147",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Njg4NjcxNDg0ZWM1YmRhMGViZGZhZGYxZjM5ZmNkM2RjODhjMTQ3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-04-21T14:00:49Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-06-14T07:31:11Z"
      },
      "message": "Add atomic cache for balances",
      "tree": {
        "sha": "db15abc3cde49e65d729b65dedff94888c5a295a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db15abc3cde49e65d729b65dedff94888c5a295a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8688671484ec5bda0ebdfadf1f39fcd3dc88c147",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAllA5kAACgkQHrd2uwPH\nki2a1hAAl6q8VJmCJjsxswt0555enwHHLbQTLyyPQ1keXoEVcGYQU3JevAMgxUCp\nSWRCJ0PXrPF73VBdmkmqrWiInMZhZ/7SOcxjeTELK6z15bbYJ/A9cLhfRKTqD5Pv\nnVhTyQJGcgpu0FQAuvvrLjjAdg/R4lDRYTxZ9Fokb9kmoBDmHztw/cTAQTGp2BJO\nKro9bDQnWHXyXnvTF0SEdtdQWIK1uYsAIGnpvj1DUbNT3hL6BrZHW3U8qnhIukPp\n6o/J5Phz8GmmQPNWdWkCm3c7Q/yh+ioukn7CqkpYbLlvfu54pT6IXGMhe4bZ0/qs\noryU0c4CXBkLPtxbQiN/nJHRcEQDEZjwsnmENbEGmZpItA0w9/MkKXRT7lBWgUdx\ncawHXnsCNbP7EaQt0JMXKu/1lbQQ5u58S8YroD+BcwKk1Fkic4ayrhCth49Jy3Ro\n1OT6ry+NG433nDK2IN/8+NYmy9FJvJZwZh/DaTUJrOVQxPMpZex20+bbOL0k6HL0\n+a4a9sq8fx6HOctsTihlqtgowW7oI+fHZu7bqT1kOi81FNCE+nOkq+CDkfG1l5kr\ntdhvVfha8Mud6xFH/zJROXOkBrZ7jercb+1eQnZNcuxlMvGtXKtd2aWflzx5nHBh\n82BiGMchLyYnAbXI0t0ammlb+Eov8v0siOpRN3VkrUCDxu+E4n8=\n=edfI\n-----END PGP SIGNATURE-----",
        "payload": "tree db15abc3cde49e65d729b65dedff94888c5a295a\nparent 1ad3d4e1261f4a444d982a1470c257c78233bda3\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1492783249 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1497425471 +0200\n\nAdd atomic cache for balances\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8688671484ec5bda0ebdfadf1f39fcd3dc88c147",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8688671484ec5bda0ebdfadf1f39fcd3dc88c147",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8688671484ec5bda0ebdfadf1f39fcd3dc88c147/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1ad3d4e1261f4a444d982a1470c257c78233bda3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ad3d4e1261f4a444d982a1470c257c78233bda3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1ad3d4e1261f4a444d982a1470c257c78233bda3"
      }
    ],
    "stats": {
      "total": 100,
      "additions": 87,
      "deletions": 13
    },
    "files": [
      {
        "sha": "811fa5db9f4a56b34967636432249947610d33fa",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 63,
        "deletions": 13,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8688671484ec5bda0ebdfadf1f39fcd3dc88c147/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8688671484ec5bda0ebdfadf1f39fcd3dc88c147/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8688671484ec5bda0ebdfadf1f39fcd3dc88c147",
        "patch": "@@ -723,6 +723,7 @@ DBErrors CWallet::ReorderTransactions()\n     }\n     walletdb.WriteOrderPosNext(nOrderPosNext);\n \n+    MarkBalancesDirty();\n     return DB_LOAD_OK;\n }\n \n@@ -812,11 +813,10 @@ bool CWallet::GetAccountPubkey(CPubKey &pubKey, std::string strAccount, bool bFo\n \n void CWallet::MarkDirty()\n {\n-    {\n-        LOCK(cs_wallet);\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet)\n-            item.second.MarkDirty();\n-    }\n+    LOCK(cs_wallet);\n+    MarkBalancesDirty();\n+    for (std::pair<const uint256, CWalletTx>& item : mapWallet)\n+        item.second.MarkDirty();\n }\n \n bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n@@ -843,6 +843,7 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n         success = false;\n     }\n \n+    MarkBalancesDirty();\n     NotifyTransactionChanged(this, originalHash, CT_UPDATED);\n \n     return success;\n@@ -907,6 +908,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n \n     // Break debit/credit balance caches:\n     wtx.MarkDirty();\n+    MarkBalancesDirty();\n \n     // Notify UI of new or updated transaction\n     NotifyTransactionChanged(this, hash, fInsertedNew ? CT_NEW : CT_UPDATED);\n@@ -1053,6 +1055,7 @@ bool CWallet::AbandonTransaction(const uint256& hashTx)\n         }\n     }\n \n+    MarkBalancesDirty();\n     return true;\n }\n \n@@ -1113,6 +1116,7 @@ void CWallet::MarkConflicted(const uint256& hashBlock, const uint256& hashTx)\n             }\n         }\n     }\n+    MarkBalancesDirty();\n }\n \n void CWallet::SyncTransaction(const CTransactionRef& ptx, const CBlockIndex *pindex, int posInBlock) {\n@@ -1152,6 +1156,7 @@ void CWallet::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const\n     for (size_t i = 0; i < pblock->vtx.size(); i++) {\n         SyncTransaction(pblock->vtx[i], pindex, i);\n     }\n+    MarkBalancesDirty();\n }\n \n void CWallet::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) {\n@@ -1160,6 +1165,7 @@ void CWallet::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) {\n     for (const CTransactionRef& ptx : pblock->vtx) {\n         SyncTransaction(ptx);\n     }\n+    MarkBalancesDirty();\n }\n \n \n@@ -1856,9 +1862,23 @@ void CWallet::ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman\n  * @{\n  */\n \n+void CWallet::MarkBalancesDirty()\n+{\n+    fBalanceDirty = true;\n+    fUnconfirmedBalanceDirty = true;\n+    fImmatureBalanceDirty = true;\n+    fWatchOnlyBalanceDirty = true;\n+    fUnconfirmedWatchOnlyBalanceDirty = true;\n+    fImmatureWatchOnlyBalanceDirty = true;\n+    BalancesChanged(); //emit signal\n+}\n \n CAmount CWallet::GetBalance() const\n {\n+    if (!fBalanceDirty) {\n+        return nBalanceCache;\n+    }\n+\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n@@ -1868,13 +1888,18 @@ CAmount CWallet::GetBalance() const\n             if (pcoin->IsTrusted())\n                 nTotal += pcoin->GetAvailableCredit();\n         }\n+        nBalanceCache = nTotal;\n+        fBalanceDirty = false;\n     }\n-\n-    return nTotal;\n+    return nBalanceCache;\n }\n \n CAmount CWallet::GetUnconfirmedBalance() const\n {\n+    if (!fUnconfirmedBalanceDirty) {\n+        return nUnconfirmedBalanceCache;\n+    }\n+\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n@@ -1884,12 +1909,18 @@ CAmount CWallet::GetUnconfirmedBalance() const\n             if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n                 nTotal += pcoin->GetAvailableCredit();\n         }\n+        nUnconfirmedBalanceCache = nTotal;\n+        fUnconfirmedBalanceDirty = false;\n     }\n-    return nTotal;\n+    return nUnconfirmedBalanceCache;\n }\n \n CAmount CWallet::GetImmatureBalance() const\n {\n+    if (!fImmatureBalanceDirty) {\n+        return nImmatureBalanceCache;\n+    }\n+\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n@@ -1898,12 +1929,18 @@ CAmount CWallet::GetImmatureBalance() const\n             const CWalletTx* pcoin = &(*it).second;\n             nTotal += pcoin->GetImmatureCredit();\n         }\n+        nImmatureBalanceCache = nTotal;\n+        fImmatureBalanceDirty = false;\n     }\n-    return nTotal;\n+    return nImmatureBalanceCache;\n }\n \n CAmount CWallet::GetWatchOnlyBalance() const\n {\n+    if (!fWatchOnlyBalanceDirty) {\n+        return nWatchOnlyBalanceCache;\n+    }\n+\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n@@ -1913,13 +1950,18 @@ CAmount CWallet::GetWatchOnlyBalance() const\n             if (pcoin->IsTrusted())\n                 nTotal += pcoin->GetAvailableWatchOnlyCredit();\n         }\n+        nWatchOnlyBalanceCache = nTotal;\n+        fWatchOnlyBalanceDirty = false;\n     }\n-\n-    return nTotal;\n+    return nWatchOnlyBalanceCache;\n }\n \n CAmount CWallet::GetUnconfirmedWatchOnlyBalance() const\n {\n+    if (!fUnconfirmedWatchOnlyBalanceDirty) {\n+        return nUnconfirmedWatchOnlyBalanceCache;\n+    }\n+\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n@@ -1929,12 +1971,18 @@ CAmount CWallet::GetUnconfirmedWatchOnlyBalance() const\n             if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n                 nTotal += pcoin->GetAvailableWatchOnlyCredit();\n         }\n+        nUnconfirmedWatchOnlyBalanceCache = nTotal;\n+        fUnconfirmedWatchOnlyBalanceDirty = false;\n     }\n-    return nTotal;\n+    return nUnconfirmedWatchOnlyBalanceCache;\n }\n \n CAmount CWallet::GetImmatureWatchOnlyBalance() const\n {\n+    if (!fImmatureWatchOnlyBalanceDirty) {\n+        return nImmatureWatchOnlyBalanceCache;\n+    }\n+\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n@@ -1943,8 +1991,10 @@ CAmount CWallet::GetImmatureWatchOnlyBalance() const\n             const CWalletTx* pcoin = &(*it).second;\n             nTotal += pcoin->GetImmatureWatchOnlyCredit();\n         }\n+        nImmatureWatchOnlyBalanceCache = nTotal;\n+        fImmatureWatchOnlyBalanceDirty = false;\n     }\n-    return nTotal;\n+    return nImmatureWatchOnlyBalanceCache;\n }\n \n // Calculate total balance in a different way from GetBalance. The biggest"
      },
      {
        "sha": "572e87124d72c4c363e3bedc2f1aa3e0a513a1f7",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8688671484ec5bda0ebdfadf1f39fcd3dc88c147/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8688671484ec5bda0ebdfadf1f39fcd3dc88c147/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=8688671484ec5bda0ebdfadf1f39fcd3dc88c147",
        "patch": "@@ -791,6 +791,12 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n         nRelockTime = 0;\n         fAbortRescan = false;\n         fScanningWallet = false;\n+        fBalanceDirty = true;\n+        fUnconfirmedBalanceDirty = true;\n+        fImmatureBalanceDirty = true;\n+        fWatchOnlyBalanceDirty = true;\n+        fUnconfirmedWatchOnlyBalanceDirty = true;\n+        fImmatureWatchOnlyBalanceDirty = true;\n     }\n \n     std::map<uint256, CWalletTx> mapWallet;\n@@ -922,6 +928,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     void ReacceptWalletTransactions();\n     void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime, CConnman* connman);\n+\n+    void MarkBalancesDirty();\n     CAmount GetBalance() const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;\n@@ -931,6 +939,22 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetLegacyBalance(const isminefilter& filter, int minDepth, const std::string* account) const;\n     CAmount GetAvailableBalance(const CCoinControl* coinControl = nullptr) const;\n \n+    mutable std::atomic<CAmount> nBalanceCache;\n+    mutable std::atomic<CAmount> nUnconfirmedBalanceCache;\n+    mutable std::atomic<CAmount> nImmatureBalanceCache;\n+    mutable std::atomic<CAmount> nWatchOnlyBalanceCache;\n+    mutable std::atomic<CAmount> nUnconfirmedWatchOnlyBalanceCache;\n+    mutable std::atomic<CAmount> nImmatureWatchOnlyBalanceCache;\n+    mutable std::atomic<bool> fBalanceDirty;\n+    mutable std::atomic<bool> fUnconfirmedBalanceDirty;\n+    mutable std::atomic<bool> fImmatureBalanceDirty;\n+    mutable std::atomic<bool> fWatchOnlyBalanceDirty;\n+    mutable std::atomic<bool> fUnconfirmedWatchOnlyBalanceDirty;\n+    mutable std::atomic<bool> fImmatureWatchOnlyBalanceDirty;\n+\n+    /** Notification for balance changes */\n+    boost::signals2::signal<void ()> BalancesChanged;\n+\n     /**\n      * Insert additional inputs into the transaction by\n      * calling CreateTransaction();"
      }
    ]
  },
  {
    "sha": "1e9340865401fed656ea067eb8bb744189c3d2f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTkzNDA4NjU0MDFmZWQ2NTZlYTA2N2ViOGJiNzQ0MTg5YzNkMmY0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-04-21T14:27:13Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-06-14T07:31:15Z"
      },
      "message": "[Qt] use the BalancesChanged signal instead of a 250ms poll timer\nremove unused polling code",
      "tree": {
        "sha": "9810ae03813315a06106ff30a6245835a2c4e88e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9810ae03813315a06106ff30a6245835a2c4e88e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e9340865401fed656ea067eb8bb744189c3d2f4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAllA5kMACgkQHrd2uwPH\nki3x0BAAy1Q2cX3JD8BCH36/AZ4KxJosf8Q5OQLjtbxoDWETtP9MPUKlLn3ixIf4\ns0dpJ+iL2h4npejxatYAHQUgyDooi9VtANFU17H9lYi1wLS5Ub8aQQ3Jzhe/wv3x\neD8b5kRgrjSimFCqxBFmNiWMY6v+opY8qhM9ElPi2i69YSll8XNGX4qwL8sduiwp\nZOw3VkeIOYj1vHWxy4InBklZivNA9aPhdsewzdO600uCCC2XM3tKfS6VK/4W6O7H\nMw/ygRMXhhRrIyVkT3+Ui4iHGLBmKu87oz2+vOV71U00NaGDu1Nb0q9gn3Tly4DE\nxv0FJcSBwiKjWAgSLITRuzVKj4LKCc4nT0evwxFLir3ECr5f3GO+NAgLCfXVlk12\nMXeuhdb2fq/o6e8LJ5dScYcjhrSQvRVpXTRiJgGAF26pjuXznKQkH2m438gzml56\nmnFMVZgtEjCljvJVKv8LFPe0rkAOYO930nnC2U+Q9Tk0rakeryQ+nqhYvlh7vJzA\npxiX4GSxwgjcSfh4FgRpHcz1FCSpBhUCIU5L1NnP1nnSlvaXhI2QQ8HlcRF6Zs1T\ntDanxt+iERK3z8h0DrvcJ5UmNPqSYV6wo0queBPDa9/87BAiGSfg9VbM+3rnbff0\nT31dUJmLUCRuGScAYI2OhYQa1PXKRg178FDhycbXEyGA92eZg4I=\n=MS/A\n-----END PGP SIGNATURE-----",
        "payload": "tree 9810ae03813315a06106ff30a6245835a2c4e88e\nparent 8688671484ec5bda0ebdfadf1f39fcd3dc88c147\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1492784833 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1497425475 +0200\n\n[Qt] use the BalancesChanged signal instead of a 250ms poll timer\nremove unused polling code\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9340865401fed656ea067eb8bb744189c3d2f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e9340865401fed656ea067eb8bb744189c3d2f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9340865401fed656ea067eb8bb744189c3d2f4/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8688671484ec5bda0ebdfadf1f39fcd3dc88c147",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8688671484ec5bda0ebdfadf1f39fcd3dc88c147",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8688671484ec5bda0ebdfadf1f39fcd3dc88c147"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 10,
      "deletions": 61
    },
    "files": [
      {
        "sha": "b933369869ebc1462d679e958dd52574a12a165f",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 49,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e9340865401fed656ea067eb8bb744189c3d2f4/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e9340865401fed656ea067eb8bb744189c3d2f4/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=1e9340865401fed656ea067eb8bb744189c3d2f4",
        "patch": "@@ -32,7 +32,6 @@\n #include <QDebug>\n #include <QMessageBox>\n #include <QSet>\n-#include <QTimer>\n \n #include <boost/foreach.hpp>\n \n@@ -45,17 +44,11 @@ WalletModel::WalletModel(const PlatformStyle *platformStyle, CWallet *_wallet, O\n     cachedNumBlocks(0)\n {\n     fHaveWatchOnly = wallet->HaveWatchOnly();\n-    fForceCheckBalanceChanged = false;\n \n     addressTableModel = new AddressTableModel(wallet, this);\n     transactionTableModel = new TransactionTableModel(platformStyle, wallet, this);\n     recentRequestsTableModel = new RecentRequestsTableModel(wallet, this);\n \n-    // This timer will be fired repeatedly to update the balance\n-    pollTimer = new QTimer(this);\n-    connect(pollTimer, SIGNAL(timeout()), this, SLOT(pollBalanceChanged()));\n-    pollTimer->start(MODEL_UPDATE_DELAY);\n-\n     subscribeToCoreSignals();\n }\n \n@@ -112,31 +105,6 @@ void WalletModel::updateStatus()\n         Q_EMIT encryptionStatusChanged(newEncryptionStatus);\n }\n \n-void WalletModel::pollBalanceChanged()\n-{\n-    // Get required locks upfront. This avoids the GUI from getting stuck on\n-    // periodical polls if the core is holding the locks for a longer time -\n-    // for example, during a wallet rescan.\n-    TRY_LOCK(cs_main, lockMain);\n-    if(!lockMain)\n-        return;\n-    TRY_LOCK(wallet->cs_wallet, lockWallet);\n-    if(!lockWallet)\n-        return;\n-\n-    if(fForceCheckBalanceChanged || chainActive.Height() != cachedNumBlocks)\n-    {\n-        fForceCheckBalanceChanged = false;\n-\n-        // Balance and number of transactions might have changed\n-        cachedNumBlocks = chainActive.Height();\n-\n-        checkBalanceChanged();\n-        if(transactionTableModel)\n-            transactionTableModel->updateConfirmations();\n-    }\n-}\n-\n void WalletModel::checkBalanceChanged()\n {\n     CAmount newBalance = getBalance();\n@@ -166,12 +134,6 @@ void WalletModel::checkBalanceChanged()\n     }\n }\n \n-void WalletModel::updateTransaction()\n-{\n-    // Balance and number of transactions might have changed\n-    fForceCheckBalanceChanged = true;\n-}\n-\n void WalletModel::updateAddressBook(const QString &address, const QString &label,\n         bool isMine, const QString &purpose, int status)\n {\n@@ -367,7 +329,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n         }\n         Q_EMIT coinsSent(wallet, rcp, transaction_array);\n     }\n-    checkBalanceChanged(); // update balance immediately, otherwise there could be a short noticeable delay until pollBalanceChanged hits\n+    checkBalanceChanged();\n \n     return SendCoinsReturn(OK);\n }\n@@ -476,14 +438,6 @@ static void NotifyAddressBookChanged(WalletModel *walletmodel, CWallet *wallet,\n                               Q_ARG(int, status));\n }\n \n-static void NotifyTransactionChanged(WalletModel *walletmodel, CWallet *wallet, const uint256 &hash, ChangeType status)\n-{\n-    Q_UNUSED(wallet);\n-    Q_UNUSED(hash);\n-    Q_UNUSED(status);\n-    QMetaObject::invokeMethod(walletmodel, \"updateTransaction\", Qt::QueuedConnection);\n-}\n-\n static void ShowProgress(WalletModel *walletmodel, const std::string &title, int nProgress)\n {\n     // emits signal \"showProgress\"\n@@ -498,24 +452,29 @@ static void NotifyWatchonlyChanged(WalletModel *walletmodel, bool fHaveWatchonly\n                               Q_ARG(bool, fHaveWatchonly));\n }\n \n+static void NotifyBalanceChanged(WalletModel *walletmodel)\n+{\n+    QMetaObject::invokeMethod(walletmodel, \"checkBalanceChanged\", Qt::QueuedConnection);\n+}\n+\n void WalletModel::subscribeToCoreSignals()\n {\n     // Connect signals to wallet\n     wallet->NotifyStatusChanged.connect(boost::bind(&NotifyKeyStoreStatusChanged, this, _1));\n     wallet->NotifyAddressBookChanged.connect(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5, _6));\n-    wallet->NotifyTransactionChanged.connect(boost::bind(NotifyTransactionChanged, this, _1, _2, _3));\n     wallet->ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     wallet->NotifyWatchonlyChanged.connect(boost::bind(NotifyWatchonlyChanged, this, _1));\n+    wallet->BalancesChanged.connect(boost::bind(NotifyBalanceChanged, this));\n }\n \n void WalletModel::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from wallet\n     wallet->NotifyStatusChanged.disconnect(boost::bind(&NotifyKeyStoreStatusChanged, this, _1));\n     wallet->NotifyAddressBookChanged.disconnect(boost::bind(NotifyAddressBookChanged, this, _1, _2, _3, _4, _5, _6));\n-    wallet->NotifyTransactionChanged.disconnect(boost::bind(NotifyTransactionChanged, this, _1, _2, _3));\n     wallet->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n     wallet->NotifyWatchonlyChanged.disconnect(boost::bind(NotifyWatchonlyChanged, this, _1));\n+    wallet->BalancesChanged.disconnect(boost::bind(NotifyBalanceChanged, this));\n }\n \n // WalletModel::UnlockContext implementation"
      },
      {
        "sha": "d65f86b293e042e8fb841dc3b0bb9522554bbddb",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 12,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e9340865401fed656ea067eb8bb744189c3d2f4/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e9340865401fed656ea067eb8bb744189c3d2f4/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=1e9340865401fed656ea067eb8bb744189c3d2f4",
        "patch": "@@ -30,10 +30,6 @@ class CPubKey;\n class CWallet;\n class uint256;\n \n-QT_BEGIN_NAMESPACE\n-class QTimer;\n-QT_END_NAMESPACE\n-\n class SendCoinsRecipient\n {\n public:\n@@ -221,7 +217,6 @@ class WalletModel : public QObject\n private:\n     CWallet *wallet;\n     bool fHaveWatchOnly;\n-    bool fForceCheckBalanceChanged;\n \n     // Wallet has an options model for wallet-specific options\n     // (transaction fee, for example)\n@@ -241,11 +236,8 @@ class WalletModel : public QObject\n     EncryptionStatus cachedEncryptionStatus;\n     int cachedNumBlocks;\n \n-    QTimer *pollTimer;\n-\n     void subscribeToCoreSignals();\n     void unsubscribeFromCoreSignals();\n-    void checkBalanceChanged();\n \n Q_SIGNALS:\n     // Signal that balance in wallet changed\n@@ -275,14 +267,12 @@ class WalletModel : public QObject\n public Q_SLOTS:\n     /* Wallet status might have changed */\n     void updateStatus();\n-    /* New transaction, or transaction changed status */\n-    void updateTransaction();\n     /* New, updated or removed address book entry */\n     void updateAddressBook(const QString &address, const QString &label, bool isMine, const QString &purpose, int status);\n     /* Watch-only added */\n     void updateWatchOnlyFlag(bool fHaveWatchonly);\n-    /* Current, immature or unconfirmed balance might have changed - emit 'balanceChanged' if so */\n-    void pollBalanceChanged();\n+    /* Update balance */\n+    void checkBalanceChanged();\n };\n \n #endif // BITCOIN_QT_WALLETMODEL_H"
      }
    ]
  },
  {
    "sha": "187b3eea4a9da6e589099289632ce0425e269e37",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODdiM2VlYTRhOWRhNmU1ODkwOTkyODk2MzJjZTA0MjVlMjY5ZTM3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-04-21T14:36:10Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-06-14T07:31:16Z"
      },
      "message": "[Qt] rename checkBalanceChanged to updateBalance",
      "tree": {
        "sha": "ae7d113d78b5e2429d87f5d5eaf7c5ae43131d01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae7d113d78b5e2429d87f5d5eaf7c5ae43131d01"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/187b3eea4a9da6e589099289632ce0425e269e37",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAllA5kQACgkQHrd2uwPH\nki3pDxAAzdgHpS05F8sb2ymhThUe0xXbLAtp9WR5gfJ1nfTe3nm+TKF3EwUvw2wd\nHh8usmorInsL0RJ/RxmHSWsioFu9BxqWxI4QUqLtiwPd5PXmq5I64HysJro08tNQ\n/T/emJJRqMv5RT961O1GjpegAfsqOXkGLO5m8nBd/giUW8XlMHpICvTMHg2C2szY\nf6n1jQcLQ7eFAVDEHoEy5YuWHjmk1lx6ROMWMmZlCb4R9E8jUA9u92L7p6n+69D1\nCKUO4fDLPW1V+i3dDNYx/vwIL9YgtjEezGUvUNjczAq0l6ygVeajfv/alKv7Mc9E\nsBJOBNNgdD5iYRMZl6UODA1ga5BvDen+QHCh+Y1d2cWoBS2Mg3yCR1e9dsXlBcmG\nSOuRoKJdPYBXPdGBTVt0kEkXgDavI7jGzPkUxz58GV6RLawfNO5nLG0nj1QO2lyU\nKNWHYpXtDFAmwkeMiecawIHTSQcP41DGkYsQrybm4LF88ecrnho0qUMBHgaZvnNi\nFEWIMRy1KjZfrYhqbr448X6hiV+xi9WjQJ39dhr+Ii7pCaPBtTm/06eBxHYp5Bb1\nu96CzlkRVUwA0zmqc3fDTs7yvmW+MCET8fuhOwVcvxjiI5uB+mTgO1Iths3SRUA3\nUrN0CE/5YUC0iJmlalVqVkrlU6IMUqZQ4TqyQM43hbguK6CPpsU=\n=JOt4\n-----END PGP SIGNATURE-----",
        "payload": "tree ae7d113d78b5e2429d87f5d5eaf7c5ae43131d01\nparent 1e9340865401fed656ea067eb8bb744189c3d2f4\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1492785370 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1497425476 +0200\n\n[Qt] rename checkBalanceChanged to updateBalance\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/187b3eea4a9da6e589099289632ce0425e269e37",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/187b3eea4a9da6e589099289632ce0425e269e37",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/187b3eea4a9da6e589099289632ce0425e269e37/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e9340865401fed656ea067eb8bb744189c3d2f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9340865401fed656ea067eb8bb744189c3d2f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e9340865401fed656ea067eb8bb744189c3d2f4"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "df8cefc2db9c0fe7b6fba73c09d0723c1c49e069",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/187b3eea4a9da6e589099289632ce0425e269e37/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/187b3eea4a9da6e589099289632ce0425e269e37/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=187b3eea4a9da6e589099289632ce0425e269e37",
        "patch": "@@ -105,7 +105,7 @@ void WalletModel::updateStatus()\n         Q_EMIT encryptionStatusChanged(newEncryptionStatus);\n }\n \n-void WalletModel::checkBalanceChanged()\n+void WalletModel::updateBalance()\n {\n     CAmount newBalance = getBalance();\n     CAmount newUnconfirmedBalance = getUnconfirmedBalance();\n@@ -329,7 +329,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n         }\n         Q_EMIT coinsSent(wallet, rcp, transaction_array);\n     }\n-    checkBalanceChanged();\n+    updateBalance();\n \n     return SendCoinsReturn(OK);\n }\n@@ -454,7 +454,7 @@ static void NotifyWatchonlyChanged(WalletModel *walletmodel, bool fHaveWatchonly\n \n static void NotifyBalanceChanged(WalletModel *walletmodel)\n {\n-    QMetaObject::invokeMethod(walletmodel, \"checkBalanceChanged\", Qt::QueuedConnection);\n+    QMetaObject::invokeMethod(walletmodel, \"updateBalance\", Qt::QueuedConnection);\n }\n \n void WalletModel::subscribeToCoreSignals()"
      },
      {
        "sha": "cc0144688991f5af039e9889ded0d2a94b6ab7c0",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/187b3eea4a9da6e589099289632ce0425e269e37/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/187b3eea4a9da6e589099289632ce0425e269e37/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=187b3eea4a9da6e589099289632ce0425e269e37",
        "patch": "@@ -272,7 +272,7 @@ public Q_SLOTS:\n     /* Watch-only added */\n     void updateWatchOnlyFlag(bool fHaveWatchonly);\n     /* Update balance */\n-    void checkBalanceChanged();\n+    void updateBalance();\n };\n \n #endif // BITCOIN_QT_WALLETMODEL_H"
      }
    ]
  }
]