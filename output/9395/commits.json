[
  {
    "sha": "ffeb1956cb4eec7be205c994d5cd89bb98283e9e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmViMTk1NmNiNGVlYzdiZTIwNWM5OTRkNWNkODliYjk4MjgzZTll",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-12-21T02:54:31Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T18:26:44Z"
      },
      "message": "add test for -walletrejectlongchains",
      "tree": {
        "sha": "c1a3e80d79fc7713e2366493770320181728c7ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1a3e80d79fc7713e2366493770320181728c7ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffeb1956cb4eec7be205c994d5cd89bb98283e9e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffeb1956cb4eec7be205c994d5cd89bb98283e9e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffeb1956cb4eec7be205c994d5cd89bb98283e9e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffeb1956cb4eec7be205c994d5cd89bb98283e9e/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "123ea7362478cfe801341e8fecade030a903ad3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/123ea7362478cfe801341e8fecade030a903ad3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/123ea7362478cfe801341e8fecade030a903ad3d"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 32,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f325ecb4a3a72f83e91e11f7e2539e4b3ba7af90",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 32,
        "deletions": 1,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffeb1956cb4eec7be205c994d5cd89bb98283e9e/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffeb1956cb4eec7be205c994d5cd89bb98283e9e/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=ffeb1956cb4eec7be205c994d5cd89bb98283e9e",
        "patch": "@@ -363,11 +363,42 @@ def run_test (self):\n         self.nodes[0].generate(1)\n \n         # Make a long chain of unconfirmed payments without hitting mempool limit\n+        # Each tx we make leaves only one output of change on a chain 1 longer\n+        # Since the amount to send is always much less than the outputs, we only ever need one output\n+        # So we should be able to generate exactly chainlimit txs for each original output\n+        sending_addr = self.nodes[1].getnewaddress()\n         txid_list = []\n         for i in range(chainlimit*2):\n-            txid_list.append(self.nodes[0].sendtoaddress(chain_addrs[0], Decimal('0.0001')))\n+            txid_list.append(self.nodes[0].sendtoaddress(sending_addr, Decimal('0.0001')))\n         assert_equal(self.nodes[0].getmempoolinfo()['size'], chainlimit*2)\n         assert_equal(len(txid_list), chainlimit*2)\n \n+        # Without walletrejectlongchains, we will still generate a txid\n+        # The tx will be stored in the wallet but not accepted to the mempool\n+        extra_txid = self.nodes[0].sendtoaddress(sending_addr, Decimal('0.0001'))\n+        assert(extra_txid not in self.nodes[0].getrawmempool())\n+        assert(extra_txid in [tx[\"txid\"] for tx in self.nodes[0].listtransactions()])\n+        self.nodes[0].abandontransaction(extra_txid)\n+        total_txs = len(self.nodes[0].listtransactions(\"*\",99999))\n+\n+        # Try with walletrejectlongchains\n+        # Double chain limit but require combining inputs, so we pass SelectCoinsMinConf\n+        stop_node(self.nodes[0],0)\n+        self.nodes[0] = start_node(0, self.options.tmpdir, [\"-walletrejectlongchains\", \"-limitancestorcount=\"+str(2*chainlimit)])\n+\n+        # wait for loadmempool\n+        timeout = 10\n+        while (timeout > 0 and len(self.nodes[0].getrawmempool()) < chainlimit*2):\n+            time.sleep(0.5)\n+            timeout -= 0.5\n+        assert_equal(len(self.nodes[0].getrawmempool()), chainlimit*2)\n+\n+        node0_balance = self.nodes[0].getbalance()\n+        # With walletrejectlongchains we will not create the tx and store it in our wallet.\n+        assert_raises_message(JSONRPCException, \"mempool chain\", self.nodes[0].sendtoaddress, sending_addr, node0_balance - Decimal('0.01'))\n+\n+        # Verify nothing new in wallet\n+        assert_equal(total_txs, len(self.nodes[0].listtransactions(\"*\",99999)))\n+\n if __name__ == '__main__':\n     WalletTest().main()"
      }
    ]
  }
]