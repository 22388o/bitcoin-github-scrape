[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631287170",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19020#issuecomment-631287170",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19020",
    "id": 631287170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTI4NzE3MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-20T07:20:24Z",
    "updated_at": "2020-05-20T19:06:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631287170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631337453",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19020#issuecomment-631337453",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19020",
    "id": 631337453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTMzNzQ1Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-20T08:52:27Z",
    "updated_at": "2020-05-20T08:53:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nAFAICT the suggested change is fully in line with with the recommendations in the C++ Core Guidelines (Stroustrup & Sutter):\r\n* [C.41: **A constructor should create a fully initialized object**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c41-a-constructor-should-create-a-fully-initialized-object): \"A constructor establishes the invariant for a class. A user of a class should be able to assume that a constructed object is usable.\"\r\n* [C.45: **Don't define a default constructor that only initializes data members; use in-class member initializers instead**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-default): \"Using in-class member initializers lets the compiler generate the function for you. The compiler-generated function can be more efficient.\"\r\n* [C.48: **Prefer in-class initializers to member initializers in constructors for constant initializers**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c48-prefer-in-class-initializers-to-member-initializers-in-constructors-for-constant-initializers): \"Makes it explicit that the same value is expected to be used in all constructors. Avoids repetition. Avoids maintenance problems. It leads to the shortest and most efficient code.\"\r\n* [C.49: **Prefer initialization to assignment in constructors**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c49-prefer-initialization-to-assignment-in-constructors): \"An initialization explicitly states that initialization, rather than assignment, is done and can be more elegant and efficient. Prevents \u201cuse before set\u201d errors.\"\r\n* [ES.20: **Always initialize an object**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-always): \"Avoid used-before-set errors and their associated undefined behavior. Avoid problems with comprehension of complex initialization. Simplify refactoring.\"\r\n* [ES.23: **Prefer the {}-initializer syntax**](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-list): \"Prefer {}. The rules for {} initialization are simpler, more general, less ambiguous, and safer than for other forms of initialization. Use = only when you are sure that there can be no narrowing conversions. For built-in arithmetic types, use = only with auto. Avoid () initialization, which allows parsing ambiguities.\"",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631337453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632165726",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19020#issuecomment-632165726",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19020",
    "id": 632165726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjE2NTcyNg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T15:42:13Z",
    "updated_at": "2020-05-21T15:42:13Z",
    "author_association": "MEMBER",
    "body": "ACK fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab\r\nNice cleanup. Checked that `nTime`'s (100000000) and `nServices` (`NODE_NONE`) initial value stays the same in all cases.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632165726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427620111",
    "pull_request_review_id": 414848068,
    "id": 427620111,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyMDExMQ==",
    "diff_hunk": "@@ -329,14 +329,11 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n class CAddress : public CService\n {\n public:\n-    CAddress();\n-    explicit CAddress(CService ipIn, ServiceFlags nServicesIn);\n-\n-    void Init();\n+    CAddress() : CService{} {};\n+    explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n     SERIALIZE_METHODS(CAddress, obj)\n     {\n-        SER_READ(obj, obj.Init());",
    "path": "src/protocol.h",
    "position": 16,
    "original_position": 13,
    "commit_id": "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
    "original_commit_id": "eac91b03763880417b81037f890dd5a463ce8dde",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This may be fine here, but it's not obvious. When deserializing, the receiving object is expected to be overwritten completely. As `nTime` is only conditionally deserialized, the alternative would need a reset for that value.",
    "created_at": "2020-05-19T21:48:19Z",
    "updated_at": "2020-05-20T12:27:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427620111",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427620111"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427620111"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427620111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 339,
    "original_line": 339,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427974238",
    "pull_request_review_id": 415287692,
    "id": 427974238,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3NDIzOA==",
    "diff_hunk": "@@ -329,14 +329,11 @@ static inline bool MayHaveUsefulAddressDB(ServiceFlags services)\n class CAddress : public CService\n {\n public:\n-    CAddress();\n-    explicit CAddress(CService ipIn, ServiceFlags nServicesIn);\n-\n-    void Init();\n+    CAddress() : CService{} {};\n+    explicit CAddress(CService ipIn, ServiceFlags nServicesIn) : CService{ipIn}, nServices{nServicesIn} {};\n \n     SERIALIZE_METHODS(CAddress, obj)\n     {\n-        SER_READ(obj, obj.Init());",
    "path": "src/protocol.h",
    "position": 16,
    "original_position": 13,
    "commit_id": "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
    "original_commit_id": "eac91b03763880417b81037f890dd5a463ce8dde",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, fixed.",
    "created_at": "2020-05-20T12:37:26Z",
    "updated_at": "2020-05-20T12:37:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427974238",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427974238"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r427974238"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427974238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 339,
    "original_line": 339,
    "side": "LEFT",
    "in_reply_to_id": 427620111
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428328107",
    "pull_request_review_id": 415739999,
    "id": 428328107,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyODEwNw==",
    "diff_hunk": "@@ -50,6 +50,7 @@ static_assert(sizeof(double) == 8, \"64-bit double assumed\");\n //             code.\n static_assert(sizeof(short) == 2, \"16-bit short assumed\");\n static_assert(sizeof(int) == 4, \"32-bit int assumed\");\n+static_assert(sizeof(unsigned) == 4, \"32-bit unsigned assumed\");",
    "path": "src/compat/assumptions.h",
    "position": 4,
    "original_position": 4,
    "commit_id": "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
    "original_commit_id": "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wouldn't `unsigned int` be the value to test for equivalence?",
    "created_at": "2020-05-20T21:50:36Z",
    "updated_at": "2020-05-20T21:50:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428328107",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428328107"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428328107"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428328107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 53,
    "original_line": 53,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428333857",
    "pull_request_review_id": 415746760,
    "id": 428333857,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzMzg1Nw==",
    "diff_hunk": "@@ -50,6 +50,7 @@ static_assert(sizeof(double) == 8, \"64-bit double assumed\");\n //             code.\n static_assert(sizeof(short) == 2, \"16-bit short assumed\");\n static_assert(sizeof(int) == 4, \"32-bit int assumed\");\n+static_assert(sizeof(unsigned) == 4, \"32-bit unsigned assumed\");",
    "path": "src/compat/assumptions.h",
    "position": 4,
    "original_position": 4,
    "commit_id": "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
    "original_commit_id": "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`unsigned` is a shorthand for `unsigned int`.",
    "created_at": "2020-05-20T22:03:42Z",
    "updated_at": "2020-05-20T22:03:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428333857",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428333857"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428333857"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428333857/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 53,
    "original_line": 53,
    "side": "RIGHT",
    "in_reply_to_id": 428328107
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428583512",
    "pull_request_review_id": 416055436,
    "id": 428583512,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU4MzUxMg==",
    "diff_hunk": "@@ -50,6 +50,7 @@ static_assert(sizeof(double) == 8, \"64-bit double assumed\");\n //             code.\n static_assert(sizeof(short) == 2, \"16-bit short assumed\");\n static_assert(sizeof(int) == 4, \"32-bit int assumed\");\n+static_assert(sizeof(unsigned) == 4, \"32-bit unsigned assumed\");",
    "path": "src/compat/assumptions.h",
    "position": 4,
    "original_position": 4,
    "commit_id": "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
    "original_commit_id": "fa8bbb1368be0f3fd9cc4446aead3f4c2188a4ab",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this check is redundant anyway, because prepending a type with unsigned shouldn't change it's bitlength. But I didn't feel like looking that up and adding the check has no downsides.",
    "created_at": "2020-05-21T10:57:33Z",
    "updated_at": "2020-05-21T10:57:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428583512",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428583512"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19020#discussion_r428583512"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19020"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428583512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 53,
    "original_line": 53,
    "side": "RIGHT",
    "in_reply_to_id": 428328107
  }
]