[
  {
    "sha": "6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDE0ZDZlMWI1YTBkZGE2ZTIwYzI3MjFmMGJkYjdlNmE2M2VjZTgx",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-01-23T21:19:15Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-02-09T21:54:01Z"
      },
      "message": "zmq test: dedup message reception handling in ZMQSubscriber",
      "tree": {
        "sha": "992e2ce361835709dd00afdfd35d753069108f50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/992e2ce361835709dd00afdfd35d753069108f50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d202054675c91b353d832c9c038247384a39030f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d202054675c91b353d832c9c038247384a39030f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d202054675c91b353d832c9c038247384a39030f"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "4c23c4d30c1f195fb69c3ee21f1caff93f415bbe",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81",
        "patch": "@@ -33,7 +33,8 @@ def __init__(self, socket, topic):\n \n         self.socket.setsockopt(zmq.SUBSCRIBE, self.topic)\n \n-    def receive(self):\n+    # Receive message from publisher and verify that topic and sequence match\n+    def _receive_from_publisher_and_check(self):\n         topic, body, seq = self.socket.recv_multipart()\n         # Topic should match the subscriber topic.\n         assert_equal(topic, self.topic)\n@@ -42,13 +43,11 @@ def receive(self):\n         self.sequence += 1\n         return body\n \n+    def receive(self):\n+        return self._receive_from_publisher_and_check()\n+\n     def receive_sequence(self):\n-        topic, body, seq = self.socket.recv_multipart()\n-        # Topic should match the subscriber topic.\n-        assert_equal(topic, self.topic)\n-        # Sequence should be incremental.\n-        assert_equal(struct.unpack('<I', seq)[-1], self.sequence)\n-        self.sequence += 1\n+        body = self._receive_from_publisher_and_check()\n         hash = body[:32].hex()\n         label = chr(body[32])\n         mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]"
      }
    ]
  },
  {
    "sha": "8666033630eeaf851ec69e018bb53eb23093f4b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjY2MDMzNjMwZWVhZjg1MWVjNjllMDE4YmI1M2ViMjMwOTNmNGI5",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-01-23T21:33:48Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-02-09T21:54:01Z"
      },
      "message": "zmq test: accept arbitrary sequence start number in ZMQSubscriber\n\nThe ZMQSubscriber reception methods currently assert that the first\nreceived publisher message has a sequence number of zero. In order to\nfix the current test flakiness via \"syncing up\" to nodes in the setup\nphase, we have to cope with the situation that messages get lost and the\nfirst actual received message has a sequence number larger than zero.",
      "tree": {
        "sha": "6f39c6844571062e7f244405a4de7c37942b460e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f39c6844571062e7f244405a4de7c37942b460e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8666033630eeaf851ec69e018bb53eb23093f4b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8666033630eeaf851ec69e018bb53eb23093f4b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8666033630eeaf851ec69e018bb53eb23093f4b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8666033630eeaf851ec69e018bb53eb23093f4b9/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6014d6e1b5a0dda6e20c2721f0bdb7e6a63ece81"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "527126fac38bdce90daeab847b4d68544e8cd82d",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8666033630eeaf851ec69e018bb53eb23093f4b9/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8666033630eeaf851ec69e018bb53eb23093f4b9/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=8666033630eeaf851ec69e018bb53eb23093f4b9",
        "patch": "@@ -27,7 +27,7 @@ def hash256_reversed(byte_str):\n \n class ZMQSubscriber:\n     def __init__(self, socket, topic):\n-        self.sequence = 0\n+        self.sequence = None  # no sequence number received yet\n         self.socket = socket\n         self.topic = topic\n \n@@ -39,7 +39,11 @@ def _receive_from_publisher_and_check(self):\n         # Topic should match the subscriber topic.\n         assert_equal(topic, self.topic)\n         # Sequence should be incremental.\n-        assert_equal(struct.unpack('<I', seq)[-1], self.sequence)\n+        received_seq = struct.unpack('<I', seq)[-1]\n+        if self.sequence is None:\n+            self.sequence = received_seq\n+        else:\n+            assert_equal(received_seq, self.sequence)\n         self.sequence += 1\n         return body\n "
      }
    ]
  },
  {
    "sha": "5c6546362dce8b468268578e345c37ed515a1855",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzY1NDYzNjJkY2U4YjQ2ODI2ODU3OGUzNDVjMzdlZDUxNWExODU1",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-01-25T23:30:24Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-02-09T22:55:23Z"
      },
      "message": "zmq test: fix flakiness by using more robust sync method\n\nAfter connecting the subscriber sockets to the node, there is no\nguarantee that the node's zmq publisher interfaces are ready yet, which\nmeans that potentially the first expected notification messages could\nget lost and the test fails. Currently this is handled by just waiting\nfor a short period of time (200ms), which works most of the time but is\nstill problematic, as in some rare cases the setup time takes much\nlonger, even in the range of multiple seconds.\n\nThe solution in this commit approaches the problem by using a more\nrobust method of syncing up, originally proposed by instagibbs:\n    1. Generate a block on the node\n    2. Try to receive a notification on all subscribers\n    3. If all subscribers get a message within the timeout (1 second),\n       we are done, otherwise repeat starting from step 1",
      "tree": {
        "sha": "2fc93bf72039faa667b52575e8e87f6505bcd272",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2fc93bf72039faa667b52575e8e87f6505bcd272"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c6546362dce8b468268578e345c37ed515a1855",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c6546362dce8b468268578e345c37ed515a1855",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c6546362dce8b468268578e345c37ed515a1855",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c6546362dce8b468268578e345c37ed515a1855/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8666033630eeaf851ec69e018bb53eb23093f4b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8666033630eeaf851ec69e018bb53eb23093f4b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8666033630eeaf851ec69e018bb53eb23093f4b9"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 37,
      "deletions": 12
    },
    "files": [
      {
        "sha": "3ec23e75dcbb7a18a60f4e1ba38be2a2f91f225d",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 37,
        "deletions": 12,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c6546362dce8b468268578e345c37ed515a1855/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c6546362dce8b468268578e345c37ed515a1855/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=5c6546362dce8b468268578e345c37ed515a1855",
        "patch": "@@ -87,23 +87,45 @@ def run_test(self):\n \n     # Restart node with the specified zmq notifications enabled, subscribe to\n     # all of them and return the corresponding ZMQSubscriber objects.\n-    def setup_zmq_test(self, services, recv_timeout=60, connect_nodes=False):\n+    def setup_zmq_test(self, services, *, recv_timeout=60, sync_blocks=True):\n         subscribers = []\n         for topic, address in services:\n             socket = self.ctx.socket(zmq.SUB)\n-            socket.set(zmq.RCVTIMEO, recv_timeout*1000)\n             subscribers.append(ZMQSubscriber(socket, topic.encode()))\n \n         self.restart_node(0, [\"-zmqpub%s=%s\" % (topic, address) for topic, address in services])\n \n-        if connect_nodes:\n-            self.connect_nodes(0, 1)\n-\n         for i, sub in enumerate(subscribers):\n             sub.socket.connect(services[i][1])\n \n-        # Relax so that the subscribers are ready before publishing zmq messages\n-        sleep(0.2)\n+        # Ensure that all zmq publisher notification interfaces are ready by\n+        # running the following \"sync up\" procedure:\n+        #   1. Generate a block on the node\n+        #   2. Try to receive a notification on all subscribers\n+        #   3. If all subscribers get a message within the timeout (1 second),\n+        #      we are done, otherwise repeat starting from step 1\n+        for sub in subscribers:\n+            sub.socket.set(zmq.RCVTIMEO, 1000)\n+        while True:\n+            self.nodes[0].generate(1)\n+            recv_failed = False\n+            for sub in subscribers:\n+                try:\n+                    sub.receive()\n+                except zmq.error.Again:\n+                    self.log.debug(\"Didn't receive sync-up notification, trying again.\")\n+                    recv_failed = True\n+            if not recv_failed:\n+                self.log.debug(\"ZMQ sync-up completed, all subscribers are ready.\")\n+                break\n+\n+        # set subscriber's desired timeout for the test\n+        for sub in subscribers:\n+            sub.socket.set(zmq.RCVTIMEO, recv_timeout*1000)\n+\n+        self.connect_nodes(0, 1)\n+        if sync_blocks:\n+            self.sync_blocks()\n \n         return subscribers\n \n@@ -113,9 +135,7 @@ def test_basic(self):\n         self.restart_node(0, [\"-zmqpubrawtx=foo\", \"-zmqpubhashtx=bar\"])\n \n         address = 'tcp://127.0.0.1:28332'\n-        subs = self.setup_zmq_test(\n-            [(topic, address) for topic in [\"hashblock\", \"hashtx\", \"rawblock\", \"rawtx\"]],\n-            connect_nodes=True)\n+        subs = self.setup_zmq_test([(topic, address) for topic in [\"hashblock\", \"hashtx\", \"rawblock\", \"rawtx\"]])\n \n         hashblock = subs[0]\n         hashtx = subs[1]\n@@ -192,6 +212,7 @@ def test_reorg(self):\n         hashblock, hashtx = self.setup_zmq_test(\n             [(topic, address) for topic in [\"hashblock\", \"hashtx\"]],\n             recv_timeout=2)  # 2 second timeout to check end of notifications\n+        self.disconnect_nodes(0, 1)\n \n         # Generate 1 block in nodes[0] with 1 mempool tx and receive all notifications\n         payment_txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n@@ -240,6 +261,7 @@ def test_sequence(self):\n         \"\"\"\n         self.log.info(\"Testing 'sequence' publisher\")\n         [seq] = self.setup_zmq_test([(\"sequence\", \"tcp://127.0.0.1:28333\")])\n+        self.disconnect_nodes(0, 1)\n \n         # Mempool sequence number starts at 1\n         seq_num = 1\n@@ -390,7 +412,7 @@ def test_mempool_sync(self):\n             return\n \n         self.log.info(\"Testing 'mempool sync' usage of sequence notifier\")\n-        [seq] = self.setup_zmq_test([(\"sequence\", \"tcp://127.0.0.1:28333\")], connect_nodes=True)\n+        [seq] = self.setup_zmq_test([(\"sequence\", \"tcp://127.0.0.1:28333\")])\n \n         # In-memory counter, should always start at 1\n         next_mempool_seq = self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"]\n@@ -490,10 +512,13 @@ def test_mempool_sync(self):\n \n     def test_multiple_interfaces(self):\n         # Set up two subscribers with different addresses\n+        # (note that after the reorg test, syncing would fail due to different\n+        # chain lengths on node0 and node1; for this test we only need node0, so\n+        # we can disable syncing blocks on the setup)\n         subscribers = self.setup_zmq_test([\n             (\"hashblock\", \"tcp://127.0.0.1:28334\"),\n             (\"hashblock\", \"tcp://127.0.0.1:28335\"),\n-        ])\n+        ], sync_blocks=False)\n \n         # Generate 1 block in nodes[0] and receive all notifications\n         self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)"
      }
    ]
  },
  {
    "sha": "ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjIxZmI3MzEzMDA1YThhMmQ0ZjAzZmI0MDU2ZjFmNjZjMWIwNGYw",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-01-25T23:52:17Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-02-09T22:55:32Z"
      },
      "message": "zmq test: speedup test by whitelisting peers (immediate tx relay)\n\nSpeeds up the zmq test roughly by a factor of 2x (~20 sec. instead of\n~40 sec.) and also avoids timeouts on the synchronization methods\n(sync_mempool() / sync_blocks()) that happened with a slight chance.\nThis is due to the fact that there is no upper bound on the trickle\nrelay time, so even the default of 60s is sometimes too low. Fixed by\nenabling immediate tx relay on node1.",
      "tree": {
        "sha": "ab1838f91de137bb47baa037a878b8e322cc9052",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab1838f91de137bb47baa037a878b8e322cc9052"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c6546362dce8b468268578e345c37ed515a1855",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c6546362dce8b468268578e345c37ed515a1855",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c6546362dce8b468268578e345c37ed515a1855"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d0967a93400849ecf15683624ac41cc3e13e70a7",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=ef21fb7313005a8a2d4f03fb4056f1f66c1b04f0",
        "patch": "@@ -67,6 +67,9 @@ def set_test_params(self):\n         self.num_nodes = 2\n         if self.is_wallet_compiled():\n             self.requires_wallet = True\n+        # This test isn't testing txn relay/timing, so set whitelist on the\n+        # peers for instant txn relay. This speeds up the test run time 2-3x.\n+        self.extra_args = [[\"-whitelist=noban@127.0.0.1\"]] * self.num_nodes\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_py3_zmq()\n@@ -93,7 +96,8 @@ def setup_zmq_test(self, services, *, recv_timeout=60, sync_blocks=True):\n             socket = self.ctx.socket(zmq.SUB)\n             subscribers.append(ZMQSubscriber(socket, topic.encode()))\n \n-        self.restart_node(0, [\"-zmqpub%s=%s\" % (topic, address) for topic, address in services])\n+        self.restart_node(0, [\"-zmqpub%s=%s\" % (topic, address) for topic, address in services] +\n+                             self.extra_args[0])\n \n         for i, sub in enumerate(subscribers):\n             sub.socket.connect(services[i][1])"
      }
    ]
  }
]