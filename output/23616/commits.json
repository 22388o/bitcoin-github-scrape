[
  {
    "sha": "372f061d8987ee55effcaf9caa476824a3659a84",
    "node_id": "C_kwDOABII59oAKDM3MmYwNjFkODk4N2VlNTVlZmZjYWY5Y2FhNDc2ODI0YTM2NTlhODQ",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-11-28T12:44:09Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-11-28T13:02:15Z"
      },
      "message": "build: Bump AX_PTHREAD macro to the latest version\n\nThis change silents autoconf >2.69 warnings about the obsolete $as_echo.",
      "tree": {
        "sha": "425796056b28c3495c4f467bfcc46548ff6db5e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/425796056b28c3495c4f467bfcc46548ff6db5e7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/372f061d8987ee55effcaf9caa476824a3659a84",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmGjfdcACgkQQQEIES5+\nqB8JSBAAic48tVqPcEOGNfu5ncac6+2e42pZjhP4jXQMuENdU9omtnOBmtu+hKNd\nYbcduhHUBmpeb8frDjV8/hXzS0fTDQ453b36zP+mge8wXNJXn/Uv/fN/IJkxVzjz\ny4SLyXJiFT3kIIECaQjbMnPn2LB1G7N39Fa5RFT/OM+PWAQ5IOWkOS/bepl44XZj\nMgVQMQYe4LWODULJY4qLvRAY9hW89QMa2DMp9aJyHTOo5KcxdLdc4YuB+Nvee07X\n2GsKB08zsv8sqhmbNDgBNPansbkye0MnbkolAL+yDe1hAnKW9nUFsyG7yA6j79fy\nSUaHGfqwDc2b9Fkg3PGIHXLtLSsZTVtDHAzUSrDCA8uet3lcXcF3T6XYcrSB/e0l\nQ74PU1s5CczG3ryR8PIOQbZ54fjMx9DzhQXEZPrKWBp7I+1BY3GD9saLZfe+MdiI\n2Pne0jN+xv3sL7K0HloMTtyE1QrTl6PV8kB/Bp6wtD5G38bGPBqms+nFj84DRw//\nrs20H0GjuhSv9KWoE5StWGry47qFY36s79A1zTaflJ/EqHrVMrolYDouJxDaOlLE\nA/U9d6tmdFCwg3Tfa/kzozZfEOc506CMbMwCEAkroHB2pV3NmHkyH5td5/XT4plb\nKDuGjgm3HNichvidTwu96yHsT0vlV0jnr5w7FIikqYYJjXRtPpU=\n=fz+N\n-----END PGP SIGNATURE-----",
        "payload": "tree 425796056b28c3495c4f467bfcc46548ff6db5e7\nparent 4f8b1f8759301d2553183e14f72444a0f1d80725\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1638103449 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1638104535 +0200\n\nbuild: Bump AX_PTHREAD macro to the latest version\n\nThis change silents autoconf >2.69 warnings about the obsolete $as_echo.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/372f061d8987ee55effcaf9caa476824a3659a84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/372f061d8987ee55effcaf9caa476824a3659a84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/372f061d8987ee55effcaf9caa476824a3659a84/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f8b1f8759301d2553183e14f72444a0f1d80725",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f8b1f8759301d2553183e14f72444a0f1d80725",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f8b1f8759301d2553183e14f72444a0f1d80725"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 22,
      "deletions": 7
    },
    "files": [
      {
        "sha": "2b2e1d9a4f9b560e1c4023f9ba48e36665b251ef",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "modified",
        "additions": 22,
        "deletions": 7,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/372f061d8987ee55effcaf9caa476824a3659a84/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/372f061d8987ee55effcaf9caa476824a3659a84/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=372f061d8987ee55effcaf9caa476824a3659a84",
        "patch": "@@ -14,20 +14,24 @@\n #   flags that are needed. (The user can also force certain compiler\n #   flags/libs to be tested by setting these environment variables.)\n #\n-#   Also sets PTHREAD_CC to any special C compiler that is needed for\n-#   multi-threaded programs (defaults to the value of CC otherwise). (This\n-#   is necessary on AIX to use the special cc_r compiler alias.)\n+#   Also sets PTHREAD_CC and PTHREAD_CXX to any special C compiler that is\n+#   needed for multi-threaded programs (defaults to the value of CC\n+#   respectively CXX otherwise). (This is necessary on e.g. AIX to use the\n+#   special cc_r/CC_r compiler alias.)\n #\n #   NOTE: You are assumed to not only compile your program with these flags,\n #   but also to link with them as well. For example, you might link with\n #   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#   $PTHREAD_CXX $CXXFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n #\n #   If you are only building threaded programs, you may wish to use these\n #   variables in your default LIBS, CFLAGS, and CC:\n #\n #     LIBS=\"$PTHREAD_LIBS $LIBS\"\n #     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CXXFLAGS=\"$CXXFLAGS $PTHREAD_CFLAGS\"\n #     CC=\"$PTHREAD_CC\"\n+#     CXX=\"$PTHREAD_CXX\"\n #\n #   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n #   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n@@ -83,7 +87,7 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 27\n+#serial 31\n \n AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n AC_DEFUN([AX_PTHREAD], [\n@@ -105,6 +109,7 @@ if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n         ax_pthread_save_CFLAGS=\"$CFLAGS\"\n         ax_pthread_save_LIBS=\"$LIBS\"\n         AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n+        AS_IF([test \"x$PTHREAD_CXX\" != \"x\"], [CXX=\"$PTHREAD_CXX\"])\n         CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n         LIBS=\"$PTHREAD_LIBS $LIBS\"\n         AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n@@ -386,7 +391,7 @@ if test \"x$ax_pthread_clang\" = \"xyes\"; then\n              # step\n              ax_pthread_save_ac_link=\"$ac_link\"\n              ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n-             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n+             ax_pthread_link_step=`AS_ECHO([\"$ac_link\"]) | sed \"$ax_pthread_sed\"`\n              ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n              ax_pthread_save_CFLAGS=\"$CFLAGS\"\n              for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n@@ -482,18 +487,28 @@ if test \"x$ax_pthread_ok\" = \"xyes\"; then\n                     [#handle absolute path differently from PATH based program lookup\n                      AS_CASE([\"x$CC\"],\n                          [x/*],\n-                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                         [\n+               AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])\n+               AS_IF([test \"x${CXX}\" != \"x\"], [AS_IF([AS_EXECUTABLE_P([${CXX}_r])],[PTHREAD_CXX=\"${CXX}_r\"])])\n+             ],\n+                         [\n+               AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])\n+               AS_IF([test \"x${CXX}\" != \"x\"], [AC_CHECK_PROGS([PTHREAD_CXX],[${CXX}_r],[$CXX])])\n+             ]\n+                     )\n+                    ])\n                 ;;\n             esac\n         fi\n fi\n \n test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+test -n \"$PTHREAD_CXX\" || PTHREAD_CXX=\"$CXX\"\n \n AC_SUBST([PTHREAD_LIBS])\n AC_SUBST([PTHREAD_CFLAGS])\n AC_SUBST([PTHREAD_CC])\n+AC_SUBST([PTHREAD_CXX])\n \n # Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n if test \"x$ax_pthread_ok\" = \"xyes\"; then"
      }
    ]
  }
]