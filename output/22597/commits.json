[
  {
    "sha": "059171009b0138555f311cedc2553015ff618323",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTkxNzEwMDliMDEzODU1NWYzMTFjZWRjMjU1MzAxNWZmNjE4MzIz",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-08-01T08:36:43Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-08-02T13:48:32Z"
      },
      "message": "consensus/params: simplify ValidDeployment check to avoid gcc warning",
      "tree": {
        "sha": "4e40cd538f4d0feeac76f639cd85f9f833340bae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e40cd538f4d0feeac76f639cd85f9f833340bae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/059171009b0138555f311cedc2553015ff618323",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/059171009b0138555f311cedc2553015ff618323",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/059171009b0138555f311cedc2553015ff618323",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/059171009b0138555f311cedc2553015ff618323/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6499928bfb19674f98724b4aa5238d874e6738e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6499928bfb19674f98724b4aa5238d874e6738e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6499928bfb19674f98724b4aa5238d874e6738e4"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 19,
      "deletions": 2
    },
    "files": [
      {
        "sha": "77bf7fd0d8ba93b3470be25722c9dd0e184258fc",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/059171009b0138555f311cedc2553015ff618323/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/059171009b0138555f311cedc2553015ff618323/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=059171009b0138555f311cedc2553015ff618323",
        "patch": "@@ -23,15 +23,15 @@ enum BuriedDeployment : int16_t {\n     DEPLOYMENT_CSV,\n     DEPLOYMENT_SEGWIT,\n };\n-constexpr bool ValidDeployment(BuriedDeployment dep) { return DEPLOYMENT_HEIGHTINCB <= dep && dep <= DEPLOYMENT_SEGWIT; }\n+constexpr bool ValidDeployment(BuriedDeployment dep) { return dep <= DEPLOYMENT_SEGWIT; }\n \n enum DeploymentPos : uint16_t {\n     DEPLOYMENT_TESTDUMMY,\n     DEPLOYMENT_TAPROOT, // Deployment of Schnorr/Taproot (BIPs 340-342)\n     // NOTE: Also add new deployments to VersionBitsDeploymentInfo in deploymentinfo.cpp\n     MAX_VERSION_BITS_DEPLOYMENTS\n };\n-constexpr bool ValidDeployment(DeploymentPos dep) { return DEPLOYMENT_TESTDUMMY <= dep && dep <= DEPLOYMENT_TAPROOT; }\n+constexpr bool ValidDeployment(DeploymentPos dep) { return dep < MAX_VERSION_BITS_DEPLOYMENTS; }\n \n /**\n  * Struct for each individual consensus rule change using BIP9."
      },
      {
        "sha": "bba86639a3570a1170b1afdde1a9a3c83faa66f2",
        "filename": "src/deploymentstatus.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/059171009b0138555f311cedc2553015ff618323/src/deploymentstatus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/059171009b0138555f311cedc2553015ff618323/src/deploymentstatus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/deploymentstatus.cpp?ref=059171009b0138555f311cedc2553015ff618323",
        "patch": "@@ -7,6 +7,8 @@\n #include <consensus/params.h>\n #include <versionbits.h>\n \n+#include <type_traits>\n+\n VersionBitsCache g_versionbitscache;\n \n /* Basic sanity checking for BuriedDeployment/DeploymentPos enums and\n@@ -15,3 +17,18 @@ VersionBitsCache g_versionbitscache;\n static_assert(ValidDeployment(Consensus::DEPLOYMENT_TESTDUMMY), \"sanity check of DeploymentPos failed (TESTDUMMY not valid)\");\n static_assert(!ValidDeployment(Consensus::MAX_VERSION_BITS_DEPLOYMENTS), \"sanity check of DeploymentPos failed (MAX value considered valid)\");\n static_assert(!ValidDeployment(static_cast<Consensus::BuriedDeployment>(Consensus::DEPLOYMENT_TESTDUMMY)), \"sanity check of BuriedDeployment failed (overlaps with DeploymentPos)\");\n+\n+/* ValidDeployment only checks upper bounds for ensuring validity.\n+ * This checks that the lowest possible value or the type is also a\n+ * (specific) valid deployment so that lower bounds don't need to be checked.\n+ */\n+\n+template<typename T, T x>\n+static constexpr bool is_minimum()\n+{\n+    using U = typename std::underlying_type<T>::type;\n+    return x == std::numeric_limits<U>::min();\n+}\n+\n+static_assert(is_minimum<Consensus::BuriedDeployment, Consensus::DEPLOYMENT_HEIGHTINCB>(), \"heightincb is not minimum value for BuriedDeployment\");\n+static_assert(is_minimum<Consensus::DeploymentPos, Consensus::DEPLOYMENT_TESTDUMMY>(), \"testdummy is not minimum value for DeploymentPos\");"
      }
    ]
  }
]