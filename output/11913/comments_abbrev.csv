laanwj,2017-12-16T04:28:47Z,"Concept ACK. Good to have less contention on the cs_main lock, it seems a good idea to release it during I/O.",https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-352160047,352160047,
jonasschnelli,2018-01-10T18:47:41Z,"Needs rebase on rebased #11281 \nConcept ACK",https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-356698465,356698465,
TheBlueMatt,2018-01-11T18:00:56Z,Awaiting re-rebase of #11281. Will probably just wait for that to get merged.,https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-357010167,357010167,
TheBlueMatt,2018-01-11T21:45:29Z,"@jimpo are you aware of any modern systems that have an issue reading from the middle of a file while it is being appended to? That sounds like it should be considered a critical kernel bug if anything, no?",https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-357071247,357071247,
jimpo,2018-01-11T22:05:10Z,I say that mostly because of the pruning race.,https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-357076454,357076454,
TheBlueMatt,2018-01-11T22:13:04Z,"Pruning should be atomic still, no? Either we opened the file, then any unlink operations on the underlying file will result in us being able to finish reading, or we didn't open the file, so we can return false. I'm skeptical it can ever result in *corrupt* data, or am I missing some way Windows operates? It's definitely worth auditing that ReadBlockFromDisk returning false is handled properly ev",https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-357078488,357078488,
promag,2018-02-03T14:55:18Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-362817896,362817896,
TheBlueMatt,2018-03-27T20:22:36Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-376662139,376662139,
TheBlueMatt,2018-04-28T01:32:59Z,"Rebased. In addition to RPC latency in some calls, this should also now make a nontrivial difference to -txindex nodes restart resync after an unclean shutdown (which, at least, should be useful to me).",https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-385129925,385129925,
promag,2018-05-03T13:40:36Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/11913#issuecomment-386299048,386299048,
promag,2017-12-19T16:07:22Z,Avoid lock here by receiving the pindex tip? (with the cost of jumping thru pprev).,https://github.com/bitcoin/bitcoin/pull/11913#discussion_r157798157,157798157,src/rpc/blockchain.cpp
TheBlueMatt,2017-12-19T16:57:58Z,"That still wouldn't solve it for the chainActive.Next() call, so you'd need cs_main either way. Less code diff to just do it as-is.",https://github.com/bitcoin/bitcoin/pull/11913#discussion_r157813699,157813699,src/rpc/blockchain.cpp
promag,2018-01-10T15:30:05Z,"Something along this should work:\n```cpp\nconst CBlockIndex* pindex = tip;\nconst CBlockIndex* pnext = nullptr;\nint confirmations = 0;\nwhile (pindex && pindex != blockindex && pindex->nHeight >= blockindex->nHeight) {\n    pnext = pindex;\n    pindex = pindex->pprev;\n    confirmations++;\n}\nif (pindex != blockindex) confirmations = -1;\n```\nThis approach avoids accessing `chainAc",https://github.com/bitcoin/bitcoin/pull/11913#discussion_r160710498,160710498,src/rpc/blockchain.cpp
promag,2018-01-11T13:21:57Z,Submitted suggestion as #12151.,https://github.com/bitcoin/bitcoin/pull/11913#discussion_r160955892,160955892,src/rpc/blockchain.cpp
jimpo,2018-01-11T20:08:46Z,"I find the indentation here confusing. I assume it's not indented to help reviewers, so maybe indent in a separate commit?",https://github.com/bitcoin/bitcoin/pull/11913#discussion_r161062423,161062423,src/net_processing.cpp
jimpo,2018-01-11T20:09:37Z,Add a `// releases cs_main` if there is no indentation.,https://github.com/bitcoin/bitcoin/pull/11913#discussion_r161062624,161062624,src/net_processing.cpp
jimpo,2018-01-11T20:09:54Z,This comment should get moved up to line 1066.,https://github.com/bitcoin/bitcoin/pull/11913#discussion_r161062682,161062682,src/net_processing.cpp
