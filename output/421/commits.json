[
  {
    "sha": "41675798321b6e1e1362088fd68fbfd3d4a6b310",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTY3NTc5ODMyMWI2ZTFlMTM2MjA4OGZkNjhmYmZkM2Q0YTZiMzEw",
    "commit": {
      "author": {
        "name": "phantomcircuit",
        "email": "phantomcircuit@covertinferno.org",
        "date": "2011-07-20T22:50:02Z"
      },
      "committer": {
        "name": "phantomcircuit",
        "email": "phantomcircuit@covertinferno.org",
        "date": "2011-07-20T23:04:53Z"
      },
      "message": "added option -forceresendtx",
      "tree": {
        "sha": "5cd905a550e7c49ac73fa58a2c4806ae63dc46b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5cd905a550e7c49ac73fa58a2c4806ae63dc46b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41675798321b6e1e1362088fd68fbfd3d4a6b310",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41675798321b6e1e1362088fd68fbfd3d4a6b310",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41675798321b6e1e1362088fd68fbfd3d4a6b310",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41675798321b6e1e1362088fd68fbfd3d4a6b310/comments",
    "author": {
      "login": "phantomcircuit",
      "id": 618289,
      "node_id": "MDQ6VXNlcjYxODI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/618289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phantomcircuit",
      "html_url": "https://github.com/phantomcircuit",
      "followers_url": "https://api.github.com/users/phantomcircuit/followers",
      "following_url": "https://api.github.com/users/phantomcircuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/phantomcircuit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phantomcircuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phantomcircuit/subscriptions",
      "organizations_url": "https://api.github.com/users/phantomcircuit/orgs",
      "repos_url": "https://api.github.com/users/phantomcircuit/repos",
      "events_url": "https://api.github.com/users/phantomcircuit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phantomcircuit/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phantomcircuit",
      "id": 618289,
      "node_id": "MDQ6VXNlcjYxODI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/618289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phantomcircuit",
      "html_url": "https://github.com/phantomcircuit",
      "followers_url": "https://api.github.com/users/phantomcircuit/followers",
      "following_url": "https://api.github.com/users/phantomcircuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/phantomcircuit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phantomcircuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phantomcircuit/subscriptions",
      "organizations_url": "https://api.github.com/users/phantomcircuit/orgs",
      "repos_url": "https://api.github.com/users/phantomcircuit/repos",
      "events_url": "https://api.github.com/users/phantomcircuit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phantomcircuit/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e3e21efeb52cd91d4507a9e8e07c68bafb65223",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e3e21efeb52cd91d4507a9e8e07c68bafb65223",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e3e21efeb52cd91d4507a9e8e07c68bafb65223"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4e91296d8e7cf74f8aee1dd166d3982124623da0",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41675798321b6e1e1362088fd68fbfd3d4a6b310/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41675798321b6e1e1362088fd68fbfd3d4a6b310/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=41675798321b6e1e1362088fd68fbfd3d4a6b310",
        "patch": "@@ -681,7 +681,7 @@ void CWallet::ResendWalletTransactions()\n         return;\n     bool fFirst = (nNextTime == 0);\n     nNextTime = GetTime() + GetRand(30 * 60);\n-    if (fFirst)\n+    if (fFirst && !GetBoolArg(\"-forceresendtx\"))\n         return;\n \n     // Only do it if there's been a new block since last time\n@@ -702,7 +702,7 @@ void CWallet::ResendWalletTransactions()\n             CWalletTx& wtx = item.second;\n             // Don't rebroadcast until it's had plenty of time that\n             // it should have gotten in already by now.\n-            if (nTimeBestReceived - (int64)wtx.nTimeReceived > 5 * 60)\n+            if (nTimeBestReceived - (int64)wtx.nTimeReceived > 5 * 60 || GetBoolArg(\"-forceresendtx\"))\n                 mapSorted.insert(make_pair(wtx.nTimeReceived, &wtx));\n         }\n         BOOST_FOREACH(PAIRTYPE(const unsigned int, CWalletTx*)& item, mapSorted)"
      }
    ]
  },
  {
    "sha": "13a5f75b5e3749a5a87637b402e5e1690294ba81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxM2E1Zjc1YjVlMzc0OWE1YTg3NjM3YjQwMmU1ZTE2OTAyOTRiYTgx",
    "commit": {
      "author": {
        "name": "phantomcircuit",
        "email": "phantomcircuit@covertinferno.org",
        "date": "2011-07-20T23:48:20Z"
      },
      "committer": {
        "name": "phantomcircuit",
        "email": "phantomcircuit@covertinferno.org",
        "date": "2011-07-20T23:48:20Z"
      },
      "message": "added resendtxs rpc call",
      "tree": {
        "sha": "a2993a90822c7174da65772a1f21ea77a27d0f41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2993a90822c7174da65772a1f21ea77a27d0f41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13a5f75b5e3749a5a87637b402e5e1690294ba81",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13a5f75b5e3749a5a87637b402e5e1690294ba81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13a5f75b5e3749a5a87637b402e5e1690294ba81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13a5f75b5e3749a5a87637b402e5e1690294ba81/comments",
    "author": {
      "login": "phantomcircuit",
      "id": 618289,
      "node_id": "MDQ6VXNlcjYxODI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/618289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phantomcircuit",
      "html_url": "https://github.com/phantomcircuit",
      "followers_url": "https://api.github.com/users/phantomcircuit/followers",
      "following_url": "https://api.github.com/users/phantomcircuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/phantomcircuit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phantomcircuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phantomcircuit/subscriptions",
      "organizations_url": "https://api.github.com/users/phantomcircuit/orgs",
      "repos_url": "https://api.github.com/users/phantomcircuit/repos",
      "events_url": "https://api.github.com/users/phantomcircuit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phantomcircuit/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phantomcircuit",
      "id": 618289,
      "node_id": "MDQ6VXNlcjYxODI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/618289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phantomcircuit",
      "html_url": "https://github.com/phantomcircuit",
      "followers_url": "https://api.github.com/users/phantomcircuit/followers",
      "following_url": "https://api.github.com/users/phantomcircuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/phantomcircuit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phantomcircuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phantomcircuit/subscriptions",
      "organizations_url": "https://api.github.com/users/phantomcircuit/orgs",
      "repos_url": "https://api.github.com/users/phantomcircuit/repos",
      "events_url": "https://api.github.com/users/phantomcircuit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phantomcircuit/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41675798321b6e1e1362088fd68fbfd3d4a6b310",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41675798321b6e1e1362088fd68fbfd3d4a6b310",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41675798321b6e1e1362088fd68fbfd3d4a6b310"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 20,
      "deletions": 7
    },
    "files": [
      {
        "sha": "02f1c53222e0758f905b172cb55403a1b66f4e5a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=13a5f75b5e3749a5a87637b402e5e1690294ba81",
        "patch": "@@ -144,10 +144,10 @@ void static Inventory(const uint256& hash)\n         pwallet->Inventory(hash);\n }\n \n-void static ResendWalletTransactions()\n+void ResendWalletTransactions(bool forceResend=false)\n {\n     BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->ResendWalletTransactions();\n+        pwallet->ResendWalletTransactions(forceResend);\n }\n \n \n@@ -2412,7 +2412,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             pto->PushMessage(\"ping\");\n \n         // Resend wallet transactions that haven't gotten in a block yet\n-        ResendWalletTransactions();\n+        ResendWalletTransactions(GetBoolArg(\"-forceresendtx\"));\n \n         // Address refresh broadcast\n         static int64 nLastRebroadcast;"
      },
      {
        "sha": "5d4fa626b7628ad6394f1211481c062958252c3a",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=13a5f75b5e3749a5a87637b402e5e1690294ba81",
        "patch": "@@ -102,6 +102,7 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n int GetTotalBlocksEstimate();\n bool IsInitialBlockDownload();\n std::string GetWarnings(std::string strFor);\n+void ResendWalletTransactions(bool forceResend);\n \n \n "
      },
      {
        "sha": "a5773a4ea3d1b5e0d813b3b9549b92f567919f0d",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=13a5f75b5e3749a5a87637b402e5e1690294ba81",
        "patch": "@@ -110,6 +110,17 @@ string AccountFromValue(const Value& value)\n /// Note: This interface may still be subject to change.\n ///\n \n+Value resendtxs(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() > 0)\n+        throw runtime_error(\n+            \"resendtxs\\n\"\n+            \"Forces all unsent transactions to be resent.\");\n+    \n+    ResendWalletTransactions(true);\n+    \n+    return 0;\n+}\n \n Value help(const Array& params, bool fHelp)\n {\n@@ -1739,6 +1750,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getwork\",                &getwork),\n     make_pair(\"listaccounts\",           &listaccounts),\n     make_pair(\"settxfee\",               &settxfee),\n+    make_pair(\"resendtxs\",              &resendtxs),\n };\n map<string, rpcfn_type> mapCallTable(pCallTable, pCallTable + sizeof(pCallTable)/sizeof(pCallTable[0]));\n "
      },
      {
        "sha": "4b54eaa548808ecd6c17b85341131b32ecc76d31",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=13a5f75b5e3749a5a87637b402e5e1690294ba81",
        "patch": "@@ -672,7 +672,7 @@ void CWalletTx::RelayWalletTransaction()\n    RelayWalletTransaction(txdb);\n }\n \n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResendWalletTransactions(bool forceResend=false)\n {\n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n@@ -681,7 +681,7 @@ void CWallet::ResendWalletTransactions()\n         return;\n     bool fFirst = (nNextTime == 0);\n     nNextTime = GetTime() + GetRand(30 * 60);\n-    if (fFirst && !GetBoolArg(\"-forceresendtx\"))\n+    if (fFirst && !forceResend)\n         return;\n \n     // Only do it if there's been a new block since last time\n@@ -702,7 +702,7 @@ void CWallet::ResendWalletTransactions()\n             CWalletTx& wtx = item.second;\n             // Don't rebroadcast until it's had plenty of time that\n             // it should have gotten in already by now.\n-            if (nTimeBestReceived - (int64)wtx.nTimeReceived > 5 * 60 || GetBoolArg(\"-forceresendtx\"))\n+            if (nTimeBestReceived - (int64)wtx.nTimeReceived > 5 * 60 || forceResend)\n                 mapSorted.insert(make_pair(wtx.nTimeReceived, &wtx));\n         }\n         BOOST_FOREACH(PAIRTYPE(const unsigned int, CWalletTx*)& item, mapSorted)"
      },
      {
        "sha": "361246e7de38f0237e01a75eae6733030b0308f5",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13a5f75b5e3749a5a87637b402e5e1690294ba81/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=13a5f75b5e3749a5a87637b402e5e1690294ba81",
        "patch": "@@ -74,7 +74,7 @@ class CWallet : public CCryptoKeyStore\n     void WalletUpdateSpent(const CTransaction& prevout);\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n-    void ResendWalletTransactions();\n+    void ResendWalletTransactions(bool forceResend);\n     int64 GetBalance() const;\n     bool CreateTransaction(const std::vector<std::pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n     bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);"
      }
    ]
  },
  {
    "sha": "155cfbbb8a119715e6ac39b123b9a0c4725e007d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTVjZmJiYjhhMTE5NzE1ZTZhYzM5YjEyM2I5YTBjNDcyNWUwMDdk",
    "commit": {
      "author": {
        "name": "phantomcircuit",
        "email": "phantomcircuit@covertinferno.org",
        "date": "2011-08-09T11:13:50Z"
      },
      "committer": {
        "name": "phantomcircuit",
        "email": "phantomcircuit@covertinferno.org",
        "date": "2011-08-09T11:13:50Z"
      },
      "message": "Merge branch 'master' of git://github.com/bitcoin/bitcoin into forceresendtx",
      "tree": {
        "sha": "67310fb2d3a4c56261d606e2691bebe8b650fc08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67310fb2d3a4c56261d606e2691bebe8b650fc08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/155cfbbb8a119715e6ac39b123b9a0c4725e007d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/155cfbbb8a119715e6ac39b123b9a0c4725e007d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/155cfbbb8a119715e6ac39b123b9a0c4725e007d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/155cfbbb8a119715e6ac39b123b9a0c4725e007d/comments",
    "author": {
      "login": "phantomcircuit",
      "id": 618289,
      "node_id": "MDQ6VXNlcjYxODI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/618289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phantomcircuit",
      "html_url": "https://github.com/phantomcircuit",
      "followers_url": "https://api.github.com/users/phantomcircuit/followers",
      "following_url": "https://api.github.com/users/phantomcircuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/phantomcircuit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phantomcircuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phantomcircuit/subscriptions",
      "organizations_url": "https://api.github.com/users/phantomcircuit/orgs",
      "repos_url": "https://api.github.com/users/phantomcircuit/repos",
      "events_url": "https://api.github.com/users/phantomcircuit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phantomcircuit/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "phantomcircuit",
      "id": 618289,
      "node_id": "MDQ6VXNlcjYxODI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/618289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phantomcircuit",
      "html_url": "https://github.com/phantomcircuit",
      "followers_url": "https://api.github.com/users/phantomcircuit/followers",
      "following_url": "https://api.github.com/users/phantomcircuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/phantomcircuit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phantomcircuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phantomcircuit/subscriptions",
      "organizations_url": "https://api.github.com/users/phantomcircuit/orgs",
      "repos_url": "https://api.github.com/users/phantomcircuit/repos",
      "events_url": "https://api.github.com/users/phantomcircuit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phantomcircuit/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13a5f75b5e3749a5a87637b402e5e1690294ba81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13a5f75b5e3749a5a87637b402e5e1690294ba81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13a5f75b5e3749a5a87637b402e5e1690294ba81"
      },
      {
        "sha": "2c3691d53d3f527638d4d9923c8a04488f459de0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c3691d53d3f527638d4d9923c8a04488f459de0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c3691d53d3f527638d4d9923c8a04488f459de0"
      }
    ],
    "stats": {
      "total": 863,
      "additions": 513,
      "deletions": 350
    },
    "files": [
      {
        "sha": "986a1e5d98d4889c8476da217a39bb80dcb2c63f",
        "filename": "locale/nl/LC_MESSAGES/bitcoin.po",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/locale/nl/LC_MESSAGES/bitcoin.po",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/locale/nl/LC_MESSAGES/bitcoin.po",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/nl/LC_MESSAGES/bitcoin.po?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -448,7 +448,7 @@ msgstr \"&Open Bitcoin\"\n \n #: ../../../src/ui.cpp:2682\n msgid \"&Send Bitcoins\"\n-msgstr \"&Open Bitcoin\"\n+msgstr \"&Verstuur Bitcoins\"\n \n #: ../../../src/ui.cpp:2683\n msgid \"O&ptions...\""
      },
      {
        "sha": "7d2c25841577d6927ad14199176e8c06d5504b74",
        "filename": "share/uiproject.fbp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/share/uiproject.fbp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/share/uiproject.fbp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/uiproject.fbp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -2090,7 +2090,7 @@\n                                                                 <property name=\"font\"></property>\r\n                                                                 <property name=\"hidden\">0</property>\r\n                                                                 <property name=\"id\">wxID_ANY</property>\r\n-                                                                <property name=\"label\">&amp;Connect through socks4 proxy: </property>\r\n+                                                                <property name=\"label\">&amp;Connect through socks4 proxy (requires restart to apply): </property>\r\n                                                                 <property name=\"maximum_size\"></property>\r\n                                                                 <property name=\"minimum_size\"></property>\r\n                                                                 <property name=\"name\">m_checkBoxUseProxy</property>\r"
      },
      {
        "sha": "04922c74d81b6333d5435896dadf81e3bd004f32",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 134,
        "deletions": 37,
        "changes": 171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -159,52 +159,149 @@ inline bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>\n \n \n \n-#define ADDRESSVERSION   ((unsigned char)(fTestNet ? 111 : 0))\n-\n-inline std::string Hash160ToAddress(uint160 hash160)\n+class CBase58Data\n {\n-    // add 1-byte version number to the front\n-    std::vector<unsigned char> vch(1, ADDRESSVERSION);\n-    vch.insert(vch.end(), UBEGIN(hash160), UEND(hash160));\n-    return EncodeBase58Check(vch);\n-}\n+protected:\n+    unsigned char nVersion;\n+    std::vector<unsigned char> vchData;\n \n-inline bool AddressToHash160(const char* psz, uint160& hash160Ret)\n-{\n-    std::vector<unsigned char> vch;\n-    if (!DecodeBase58Check(psz, vch))\n-        return false;\n-    if (vch.empty())\n-        return false;\n-    unsigned char nVersion = vch[0];\n-    if (vch.size() != sizeof(hash160Ret) + 1)\n-        return false;\n-    memcpy(&hash160Ret, &vch[1], sizeof(hash160Ret));\n-    return (nVersion <= ADDRESSVERSION);\n-}\n+    CBase58Data()\n+    {\n+        nVersion = 0;\n+        vchData.clear();\n+    }\n \n-inline bool AddressToHash160(const std::string& str, uint160& hash160Ret)\n-{\n-    return AddressToHash160(str.c_str(), hash160Ret);\n-}\n+    ~CBase58Data()\n+    {\n+        if (!vchData.empty())\n+            memset(&vchData[0], 0, vchData.size());\n+    }\n \n-inline bool IsValidBitcoinAddress(const char* psz)\n-{\n-    uint160 hash160;\n-    return AddressToHash160(psz, hash160);\n-}\n+    void SetData(int nVersionIn, const void* pdata, size_t nSize)\n+    {\n+        nVersion = nVersionIn;\n+        vchData.resize(nSize);\n+        if (!vchData.empty())\n+            memcpy(&vchData[0], pdata, nSize);\n+    }\n \n-inline bool IsValidBitcoinAddress(const std::string& str)\n-{\n-    return IsValidBitcoinAddress(str.c_str());\n-}\n+    void SetData(int nVersionIn, const unsigned char *pbegin, const unsigned char *pend)\n+    {\n+        SetData(nVersionIn, (void*)pbegin, pend - pbegin);\n+    }\n+\n+public:\n+    bool SetString(const char* psz)\n+    {\n+        std::vector<unsigned char> vchTemp;\n+        DecodeBase58Check(psz, vchTemp);\n+        if (vchTemp.empty())\n+        {\n+            vchData.clear();\n+            nVersion = 0;\n+            return false;\n+        }\n+        nVersion = vchTemp[0];\n+        vchData.resize(vchTemp.size() - 1);\n+        if (!vchData.empty())\n+            memcpy(&vchData[0], &vchTemp[1], vchData.size());\n+        memset(&vchTemp[0], 0, vchTemp.size());\n+        return true;\n+    }\n+\n+    bool SetString(const std::string& str)\n+    {\n+        return SetString(str.c_str());\n+    }\n \n+    std::string ToString() const\n+    {\n+        std::vector<unsigned char> vch(1, nVersion);\n+        vch.insert(vch.end(), vchData.begin(), vchData.end());\n+        return EncodeBase58Check(vch);\n+    }\n+\n+    int CompareTo(const CBase58Data& b58) const\n+    {\n+        if (nVersion < b58.nVersion) return -1;\n+        if (nVersion > b58.nVersion) return  1;\n+        if (vchData < b58.vchData)   return -1;\n+        if (vchData > b58.vchData)   return  1;\n+        return 0;\n+    }\n \n+    bool operator==(const CBase58Data& b58) const { return CompareTo(b58) == 0; }\n+    bool operator<=(const CBase58Data& b58) const { return CompareTo(b58) <= 0; }\n+    bool operator>=(const CBase58Data& b58) const { return CompareTo(b58) >= 0; }\n+    bool operator< (const CBase58Data& b58) const { return CompareTo(b58) <  0; }\n+    bool operator> (const CBase58Data& b58) const { return CompareTo(b58) >  0; }\n+};\n \n \n-inline std::string PubKeyToAddress(const std::vector<unsigned char>& vchPubKey)\n+class CBitcoinAddress : public CBase58Data\n {\n-    return Hash160ToAddress(Hash160(vchPubKey));\n-}\n+public:\n+    bool SetHash160(const uint160& hash160)\n+    {\n+        SetData(fTestNet ? 111 : 0, &hash160, 20);\n+        return true;\n+    }\n+\n+    bool SetPubKey(const std::vector<unsigned char>& vchPubKey)\n+    {\n+        return SetHash160(Hash160(vchPubKey));\n+    }\n+\n+    bool IsValid() const\n+    {\n+        int nExpectedSize = 20;\n+        bool fExpectTestNet = false;\n+        switch(nVersion)\n+        {\n+            case 0:\n+                break;\n+\n+            case 111:\n+                fExpectTestNet = true;\n+                break;\n+\n+            default:\n+                return false;\n+        }\n+        return fExpectTestNet == fTestNet && vchData.size() == nExpectedSize;\n+    }\n+\n+    CBitcoinAddress()\n+    {\n+    }\n+\n+    CBitcoinAddress(uint160 hash160In)\n+    {\n+        SetHash160(hash160In);\n+    }\n+\n+    CBitcoinAddress(const std::vector<unsigned char>& vchPubKey)\n+    {\n+        SetPubKey(vchPubKey);\n+    }\n+\n+    CBitcoinAddress(const std::string& strAddress)\n+    {\n+        SetString(strAddress);\n+    }\n+\n+    CBitcoinAddress(const char* pszAddress)\n+    {\n+        SetString(pszAddress);\n+    }\n+\n+    uint160 GetHash160() const\n+    {\n+        assert(vchData.size() == 20);\n+        uint160 hash160;\n+        memcpy(&hash160, &vchData[0], 20);\n+        return hash160;\n+    }\n+};\n \n #endif"
      },
      {
        "sha": "9c8c9c4f7360bf5e258d620dd5af440d5f543b03",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -528,7 +528,7 @@ bool CAddrDB::LoadAddresses()\n                 char psz[1000];\n                 while (fgets(psz, sizeof(psz), filein))\n                 {\n-                    CAddress addr(psz, NODE_NETWORK);\n+                    CAddress addr(psz, false, NODE_NETWORK);\n                     addr.nTime = 0; // so it won't relay unless successfully connected\n                     if (addr.IsValid())\n                         AddAddress(addr);"
      },
      {
        "sha": "acfcc44d100cf5f14aa378dde5e7b481f56069b5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -247,7 +247,8 @@ bool AppInit2(int argc, char* argv[])\n     fPrintToDebugger = GetBoolArg(\"-printtodebugger\");\n \n     fTestNet = GetBoolArg(\"-testnet\");\n-    fNoListen = GetBoolArg(\"-nolisten\");\n+    bool fTOR = (fUseProxy && addrProxy.port == htons(9050));\n+    fNoListen = GetBoolArg(\"-nolisten\") || fTOR;\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\");\n \n     for (int i = 1; i < argc; i++)\n@@ -425,7 +426,6 @@ bool AppInit2(int argc, char* argv[])\n         printf(\"mapBlockIndex.size() = %d\\n\",   mapBlockIndex.size());\n         printf(\"nBestHeight = %d\\n\",            nBestHeight);\n         printf(\"setKeyPool.size() = %d\\n\",      pwalletMain->setKeyPool.size());\n-        printf(\"mapPubKeys.size() = %d\\n\",      mapPubKeys.size());\n         printf(\"mapWallet.size() = %d\\n\",       pwalletMain->mapWallet.size());\n         printf(\"mapAddressBook.size() = %d\\n\",  pwalletMain->mapAddressBook.size());\n "
      },
      {
        "sha": "f880d16123b69679add6b10cf7a7c2e072e662da",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -4,10 +4,17 @@\n #ifndef BITCOIN_KEY_H\n #define BITCOIN_KEY_H\n \n+#include <stdexcept>\n+#include <vector>\n+\n #include <openssl/ec.h>\n #include <openssl/ecdsa.h>\n #include <openssl/obj_mac.h>\n \n+#include \"serialize.h\"\n+#include \"uint256.h\"\n+#include \"base58.h\"\n+\n // secp160k1\n // const unsigned int PRIVATE_KEY_SIZE = 192;\n // const unsigned int PUBLIC_KEY_SIZE  = 41;\n@@ -220,6 +227,11 @@ class CKey\n             return false;\n         return true;\n     }\n+\n+    CBitcoinAddress GetAddress() const\n+    {\n+        return CBitcoinAddress(GetPubKey());\n+    }\n };\n \n #endif"
      },
      {
        "sha": "1828d6dddc13b05dc996ada069a46351d98d71d5",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 19,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -16,14 +16,19 @@ std::vector<unsigned char> CKeyStore::GenerateNewKey()\n     return key.GetPubKey();\n }\n \n+bool CKeyStore::GetPubKey(const CBitcoinAddress &address, std::vector<unsigned char> &vchPubKeyOut) const\n+{\n+    CKey key;\n+    if (!GetKey(address, key))\n+        return false;\n+    vchPubKeyOut = key.GetPubKey();\n+    return true;\n+}\n+\n bool CBasicKeyStore::AddKey(const CKey& key)\n {\n-    CRITICAL_BLOCK(cs_mapPubKeys)\n     CRITICAL_BLOCK(cs_KeyStore)\n-    {\n-        mapKeys[key.GetPubKey()] = key.GetPrivKey();\n-        mapPubKeys[Hash160(key.GetPubKey())] = key.GetPubKey();\n-    }\n+        mapKeys[key.GetAddress()] = key.GetSecret();\n     return true;\n }\n \n@@ -44,11 +49,11 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n         if (!SetCrypted())\n             return false;\n \n-        std::map<std::vector<unsigned char>, std::vector<unsigned char> >::const_iterator mi = mapCryptedKeys.begin();\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n         for (; mi != mapCryptedKeys.end(); ++mi)\n         {\n-            const std::vector<unsigned char> &vchPubKey = (*mi).first;\n-            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second;\n+            const std::vector<unsigned char> &vchPubKey = (*mi).second.first;\n+            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n             CSecret vchSecret;\n             if(!DecryptSecret(vMasterKeyIn, vchCryptedSecret, Hash(vchPubKey.begin(), vchPubKey.end()), vchSecret))\n                 return false;\n@@ -88,31 +93,30 @@ bool CCryptoKeyStore::AddKey(const CKey& key)\n \n bool CCryptoKeyStore::AddCryptedKey(const std::vector<unsigned char> &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n {\n-    CRITICAL_BLOCK(cs_mapPubKeys)\n     CRITICAL_BLOCK(cs_KeyStore)\n     {\n         if (!SetCrypted())\n             return false;\n \n-        mapCryptedKeys[vchPubKey] = vchCryptedSecret;\n-        mapPubKeys[Hash160(vchPubKey)] = vchPubKey;\n+        mapCryptedKeys[CBitcoinAddress(vchPubKey)] = make_pair(vchPubKey, vchCryptedSecret);\n     }\n     return true;\n }\n \n-bool CCryptoKeyStore::GetPrivKey(const std::vector<unsigned char> &vchPubKey, CKey& keyOut) const\n+bool CCryptoKeyStore::GetKey(const CBitcoinAddress &address, CKey& keyOut) const\n {\n     CRITICAL_BLOCK(cs_vMasterKey)\n     {\n         if (!IsCrypted())\n-            return CBasicKeyStore::GetPrivKey(vchPubKey, keyOut);\n+            return CBasicKeyStore::GetKey(address, keyOut);\n \n-        std::map<std::vector<unsigned char>, std::vector<unsigned char> >::const_iterator mi = mapCryptedKeys.find(vchPubKey);\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n         if (mi != mapCryptedKeys.end())\n         {\n-            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second;\n+            const std::vector<unsigned char> &vchPubKey = (*mi).second.first;\n+            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n             CSecret vchSecret;\n-            if (!DecryptSecret(vMasterKey, (*mi).second, Hash((*mi).first.begin(), (*mi).first.end()), vchSecret))\n+            if (!DecryptSecret(vMasterKey, vchCryptedSecret, Hash(vchPubKey.begin(), vchPubKey.end()), vchSecret))\n                 return false;\n             keyOut.SetSecret(vchSecret);\n             return true;\n@@ -121,6 +125,23 @@ bool CCryptoKeyStore::GetPrivKey(const std::vector<unsigned char> &vchPubKey, CK\n     return false;\n }\n \n+bool CCryptoKeyStore::GetPubKey(const CBitcoinAddress &address, std::vector<unsigned char>& vchPubKeyOut) const\n+{\n+    CRITICAL_BLOCK(cs_vMasterKey)\n+    {\n+        if (!IsCrypted())\n+            return CKeyStore::GetPubKey(address, vchPubKeyOut);\n+\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n+        if (mi != mapCryptedKeys.end())\n+        {\n+            vchPubKeyOut = (*mi).second.first;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n {\n     CRITICAL_BLOCK(cs_KeyStore)\n@@ -133,12 +154,13 @@ bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n         CKey key;\n         BOOST_FOREACH(KeyMap::value_type& mKey, mapKeys)\n         {\n-            if (!key.SetPrivKey(mKey.second))\n+            if (!key.SetSecret(mKey.second))\n                 return false;\n+            const std::vector<unsigned char> vchPubKey = key.GetPubKey();\n             std::vector<unsigned char> vchCryptedSecret;\n-            if (!EncryptSecret(vMasterKeyIn, key.GetSecret(), Hash(mKey.first.begin(), mKey.first.end()), vchCryptedSecret))\n+            if (!EncryptSecret(vMasterKeyIn, key.GetSecret(), Hash(vchPubKey.begin(), vchPubKey.end()), vchCryptedSecret))\n                 return false;\n-            if (!AddCryptedKey(mKey.first, vchCryptedSecret))\n+            if (!AddCryptedKey(vchPubKey, vchCryptedSecret))\n                 return false;\n         }\n         mapKeys.clear();"
      },
      {
        "sha": "436053a9e3fa9c9147980c159d488e2cf5a8d739",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 17,
        "deletions": 13,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -12,12 +12,13 @@ class CKeyStore\n     mutable CCriticalSection cs_KeyStore;\n \n     virtual bool AddKey(const CKey& key) =0;\n-    virtual bool HaveKey(const std::vector<unsigned char> &vchPubKey) const =0;\n-    virtual bool GetPrivKey(const std::vector<unsigned char> &vchPubKey, CKey& keyOut) const =0;\n+    virtual bool HaveKey(const CBitcoinAddress &address) const =0;\n+    virtual bool GetKey(const CBitcoinAddress &address, CKey& keyOut) const =0;\n+    virtual bool GetPubKey(const CBitcoinAddress &address, std::vector<unsigned char>& vchPubKeyOut) const;\n     virtual std::vector<unsigned char> GenerateNewKey();\n };\n \n-typedef std::map<std::vector<unsigned char>, CPrivKey> KeyMap;\n+typedef std::map<CBitcoinAddress, CSecret> KeyMap;\n \n class CBasicKeyStore : public CKeyStore\n {\n@@ -26,26 +27,28 @@ class CBasicKeyStore : public CKeyStore\n \n public:\n     bool AddKey(const CKey& key);\n-    bool HaveKey(const std::vector<unsigned char> &vchPubKey) const\n+    bool HaveKey(const CBitcoinAddress &address) const\n     {\n-        return (mapKeys.count(vchPubKey) > 0);\n+        return (mapKeys.count(address) > 0);\n     }\n-    bool GetPrivKey(const std::vector<unsigned char> &vchPubKey, CKey& keyOut) const\n+    bool GetKey(const CBitcoinAddress &address, CKey& keyOut) const\n     {\n-        std::map<std::vector<unsigned char>, CPrivKey>::const_iterator mi = mapKeys.find(vchPubKey);\n+        KeyMap::const_iterator mi = mapKeys.find(address);\n         if (mi != mapKeys.end())\n         {\n-            keyOut.SetPrivKey((*mi).second);\n+            keyOut.SetSecret((*mi).second);\n             return true;\n         }\n         return false;\n     }\n };\n \n+typedef std::map<CBitcoinAddress, std::pair<std::vector<unsigned char>, std::vector<unsigned char> > > CryptedKeyMap;\n+\n class CCryptoKeyStore : public CBasicKeyStore\n {\n private:\n-    std::map<std::vector<unsigned char>, std::vector<unsigned char> > mapCryptedKeys;\n+    CryptedKeyMap mapCryptedKeys;\n \n     CKeyingMaterial vMasterKey;\n \n@@ -103,13 +106,14 @@ class CCryptoKeyStore : public CBasicKeyStore\n     virtual bool AddCryptedKey(const std::vector<unsigned char> &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     std::vector<unsigned char> GenerateNewKey();\n     bool AddKey(const CKey& key);\n-    bool HaveKey(const std::vector<unsigned char> &vchPubKey) const\n+    bool HaveKey(const CBitcoinAddress &address) const\n     {\n         if (!IsCrypted())\n-            return CBasicKeyStore::HaveKey(vchPubKey);\n-        return mapCryptedKeys.count(vchPubKey) > 0;\n+            return CBasicKeyStore::HaveKey(address);\n+        return mapCryptedKeys.count(address) > 0;\n     }\n-    bool GetPrivKey(const std::vector<unsigned char> &vchPubKey, CKey& keyOut) const;\n+    bool GetKey(const CBitcoinAddress &address, CKey& keyOut) const;\n+    bool GetPubKey(const CBitcoinAddress &address, std::vector<unsigned char>& vchPubKeyOut) const;\n };\n \n #endif"
      },
      {
        "sha": "e2e494b9e0588492396a8c97a217d5f175144e11",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -21,9 +21,6 @@ set<CWallet*> setpwalletRegistered;\n \n CCriticalSection cs_main;\n \n-CCriticalSection cs_mapPubKeys;\n-map<uint160, vector<unsigned char> > mapPubKeys;\n-\n map<uint256, CTransaction> mapTransactions;\n CCriticalSection cs_mapTransactions;\n unsigned int nTransactionsUpdated = 0;\n@@ -317,6 +314,15 @@ bool CTransaction::CheckTransaction() const\n             return error(\"CTransaction::CheckTransaction() : txout total out of range\");\n     }\n \n+    // Check for duplicate inputs\n+    set<COutPoint> vInOutPoints;\n+    BOOST_FOREACH(const CTxIn& txin, vin)\n+    {\n+        if (vInOutPoints.count(txin.prevout))\n+            return false;\n+        vInOutPoints.insert(txin.prevout);\n+    }\n+\n     if (IsCoinBase())\n     {\n         if (vin[0].scriptSig.size() < 2 || vin[0].scriptSig.size() > 100)\n@@ -2570,6 +2576,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                     vGetData.clear();\n                 }\n             }\n+            mapAlreadyAskedFor[inv] = nNow;\n             pto->mapAskFor.erase(pto->mapAskFor.begin());\n         }\n         if (!vGetData.empty())"
      },
      {
        "sha": "6e4985e080564c5fc71eb0718d9f448bf74e2571",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1569,7 +1569,5 @@ class CAlert : public CUnsignedAlert\n \n \n extern std::map<uint256, CTransaction> mapTransactions;\n-extern std::map<uint160, std::vector<unsigned char> > mapPubKeys;\n-extern CCriticalSection cs_mapPubKeys;\n \n #endif"
      },
      {
        "sha": "e2ef4213aa46191ade06778ed383272f6cd074c5",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -90,7 +90,7 @@ bitcoind.exe: $(OBJS:obj/%=obj/nogui/%) obj/ui_res.o\n obj/test/%.o: obj/test/%.cpp $(HEADERS)\n \ti586-mingw32msvc-g++ -c $(CFLAGS) -o $@ $<\n \n-test_bitcoin.exe: obj/test/test_bitcoin.o\n+test_bitcoin.exe: obj/test/test_bitcoin.o $(filter-out obj/nogui/init.o,$(OBJS:obj/%=obj/nogui/%))\n \ti586-mingw32msvc-g++ $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS) -lboost_unit_test_framework-mt-s\n \n "
      },
      {
        "sha": "96f81b30674a7e3c1e580f08fe0d6df7248e53ba",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -86,7 +86,7 @@ bitcoind.exe: $(OBJS:obj/%=obj/nogui/%) obj/ui_res.o\n obj/test/%.o: obj/test/%.cpp $(HEADERS)\n \tg++ -c $(CFLAGS) -o $@ $<\n \n-test_bitcoin: obj/test/test_bitcoin.o\n+test_bitcoin.exe: obj/test/test_bitcoin.o $(filter-out obj/nogui/init.o,$(OBJS:obj/%=obj/nogui/%))\n \tg++ $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)\n \n clean:"
      },
      {
        "sha": "699911d4e62548c1b8cccd9aa92132e8fc17d59a",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -79,7 +79,7 @@ bitcoind: $(OBJS:obj/%=obj/nogui/%)\n obj/test/%.o: test/%.cpp $(HEADERS)\n \t$(CXX) -c $(CFLAGS) -o $@ $<\n \n-test_bitcoin: obj/test/test_bitcoin.o\n+test_bitcoin: obj/test/test_bitcoin.o $(filter-out obj/nogui/init.o,$(OBJS:obj/%=obj/nogui/%))\n \t$(CXX) $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS) -lboost_unit_test_framework\n \n clean:"
      },
      {
        "sha": "ba9d0ca11d2c06cc4fd5e68861999c2c86e13f76",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -78,10 +78,10 @@ bitcoind: $(OBJS:obj/%=obj/nogui/%)\n \t$(CXX) $(CXXFLAGS) -o $@ $^ $(LIBS)\n \n obj/test/%.o: test/%.cpp $(HEADERS)\n-\t$(CXX) -c $(CFLAGS) -o $@ $<\n+\t$(CXX) -c $(CXXFLAGS) -o $@ $<\n \n-test_bitcoin: obj/test/test_bitcoin.o\n-\t$(CXX) $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS) -lboost_unit_test_framework\n+test_bitcoin: obj/test/test_bitcoin.o $(filter-out obj/nogui/init.o,$(OBJS:obj/%=obj/nogui/%))\n+\t$(CXX) $(CXXFLAGS) -o $@ $(LIBPATHS) $^ -Wl,-Bstatic -lboost_unit_test_framework $(LIBS)\n \n clean:\n \t-rm -f bitcoin bitcoind test_bitcoin"
      },
      {
        "sha": "d697788213559f9177f290f6d57b17069d374aa2",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1092,13 +1092,14 @@ void ThreadMapPort2(void* parg)\n     {\n         char intClient[16];\n         char intPort[6];\n+        string strDesc = \"Bitcoin \" + FormatFullVersion();\n \n #ifndef __WXMSW__\n         r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-\t                        port, port, lanaddr, 0, \"TCP\", 0);\n+\t                        port, port, lanaddr, strDesc.c_str(), \"TCP\", 0);\n #else\n         r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-\t                        port, port, lanaddr, 0, \"TCP\", 0, \"0\");\n+\t                        port, port, lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n #endif\n         if(r!=UPNPCOMMAND_SUCCESS)\n             printf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\","
      },
      {
        "sha": "d896defc826b2ceb717a5fadea35871513923c4c",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -6,6 +6,7 @@\n \n #include <deque>\n #include <boost/array.hpp>\n+#include <boost/foreach.hpp>\n #include <openssl/rand.h>\n \n #ifndef __WXMSW__"
      },
      {
        "sha": "2a1bcf149e63473bde7171b9e0c6682f1f98f8e3",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 81,
        "deletions": 95,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -353,21 +353,19 @@ Value getnewaddress(const Array& params, bool fHelp)\n         strAccount = AccountFromValue(params[0]);\n \n     // Generate a new key that is added to wallet\n-    string strAddress = PubKeyToAddress(pwalletMain->GetOrReuseKeyFromPool());\n+    CBitcoinAddress address(pwalletMain->GetOrReuseKeyFromPool());\n \n     // This could be done in the same main CS as GetKeyFromKeyPool.\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n-       pwalletMain->SetAddressBookName(strAddress, strAccount);\n+       pwalletMain->SetAddressBookName(address, strAccount);\n \n-    return strAddress;\n+    return address.ToString();\n }\n \n \n // requires cs_main, cs_mapWallet, cs_mapAddressBook locks\n-string GetAccountAddress(string strAccount, bool bForceNew=false)\n+CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n {\n-    string strAddress;\n-\n     CWalletDB walletdb(pwalletMain->strWalletFile);\n \n     CAccount account;\n@@ -404,16 +402,13 @@ string GetAccountAddress(string strAccount, bool bForceNew=false)\n             else\n             {\n                 account.vchPubKey = pwalletMain->GetOrReuseKeyFromPool();\n-                string strAddress = PubKeyToAddress(account.vchPubKey);\n-                pwalletMain->SetAddressBookName(strAddress, strAccount);\n+                pwalletMain->SetAddressBookName(CBitcoinAddress(account.vchPubKey), strAccount);\n                 walletdb.WriteAccount(strAccount, account);\n             }\n         }\n     }\n \n-    strAddress = PubKeyToAddress(account.vchPubKey);\n-\n-    return strAddress;\n+    return CBitcoinAddress(account.vchPubKey);\n }\n \n Value getaccountaddress(const Array& params, bool fHelp)\n@@ -432,7 +427,7 @@ Value getaccountaddress(const Array& params, bool fHelp)\n     CRITICAL_BLOCK(pwalletMain->cs_mapWallet)\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n     {\n-        ret = GetAccountAddress(strAccount);\n+        ret = GetAccountAddress(strAccount).ToString();\n     }\n \n     return ret;\n@@ -447,10 +442,8 @@ Value setaccount(const Array& params, bool fHelp)\n             \"setaccount <bitcoinaddress> <account>\\n\"\n             \"Sets the account associated with the given address.\");\n \n-    string strAddress = params[0].get_str();\n-    uint160 hash160;\n-    bool isValid = AddressToHash160(strAddress, hash160);\n-    if (!isValid)\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n         throw JSONRPCError(-5, \"Invalid bitcoin address\");\n \n \n@@ -463,14 +456,14 @@ Value setaccount(const Array& params, bool fHelp)\n     CRITICAL_BLOCK(pwalletMain->cs_mapWallet)\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n     {\n-        if (pwalletMain->mapAddressBook.count(strAddress))\n+        if (pwalletMain->mapAddressBook.count(address))\n         {\n-            string strOldAccount = pwalletMain->mapAddressBook[strAddress];\n-            if (strAddress == GetAccountAddress(strOldAccount))\n+            string strOldAccount = pwalletMain->mapAddressBook[address];\n+            if (address == GetAccountAddress(strOldAccount))\n                 GetAccountAddress(strOldAccount, true);\n         }\n \n-        pwalletMain->SetAddressBookName(strAddress, strAccount);\n+        pwalletMain->SetAddressBookName(address, strAccount);\n     }\n \n     return Value::null;\n@@ -484,12 +477,14 @@ Value getaccount(const Array& params, bool fHelp)\n             \"getaccount <bitcoinaddress>\\n\"\n             \"Returns the account associated with the given address.\");\n \n-    string strAddress = params[0].get_str();\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(-5, \"Invalid bitcoin address\");\n \n     string strAccount;\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n     {\n-        map<string, string>::iterator mi = pwalletMain->mapAddressBook.find(strAddress);\n+        map<CBitcoinAddress, string>::iterator mi = pwalletMain->mapAddressBook.find(address);\n         if (mi != pwalletMain->mapAddressBook.end() && !(*mi).second.empty())\n             strAccount = (*mi).second;\n     }\n@@ -510,17 +505,12 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n     Array ret;\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(string, string)& item, pwalletMain->mapAddressBook)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n         {\n-            const string& strAddress = item.first;\n+            const CBitcoinAddress& address = item.first;\n             const string& strName = item.second;\n             if (strName == strAccount)\n-            {\n-                // We're only adding valid bitcoin addresses and not ip addresses\n-                CScript scriptPubKey;\n-                if (scriptPubKey.SetBitcoinAddress(strAddress))\n-                    ret.push_back(strAddress);\n-            }\n+                ret.push_back(address.ToString());\n         }\n     }\n     return ret;\n@@ -554,7 +544,9 @@ Value sendtoaddress(const Array& params, bool fHelp)\n             \"sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\\n\"\n             \"<amount> is a real and is rounded to the nearest 0.00000001\");\n \n-    string strAddress = params[0].get_str();\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(-5, \"Invalid bitcoin address\");\n \n     // Amount\n     int64 nAmount = AmountFromValue(params[1]);\n@@ -572,7 +564,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n         if(pwalletMain->IsLocked())\n             throw JSONRPCError(-14, \"Error: The wallet passphrase entered was incorrect.\");\n \n-        string strError = pwalletMain->SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n+        string strError = pwalletMain->SendMoneyToBitcoinAddress(address, nAmount, wtx);\n         if (strError != \"\")\n             throw JSONRPCError(-4, strError);\n     }\n@@ -589,10 +581,11 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n             \"Returns the total amount received by <bitcoinaddress> in transactions with at least [minconf] confirmations.\");\n \n     // Bitcoin address\n-    string strAddress = params[0].get_str();\n+    CBitcoinAddress address = CBitcoinAddress(params[0].get_str());\n     CScript scriptPubKey;\n-    if (!scriptPubKey.SetBitcoinAddress(strAddress))\n+    if (!address.IsValid())\n         throw JSONRPCError(-5, \"Invalid bitcoin address\");\n+    scriptPubKey.SetBitcoinAddress(address);\n     if (!IsMine(*pwalletMain,scriptPubKey))\n         return (double)0.0;\n \n@@ -622,22 +615,16 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n }\n \n \n-void GetAccountPubKeys(string strAccount, set<CScript>& setPubKey)\n+void GetAccountAddresses(string strAccount, set<CBitcoinAddress>& setAddress)\n {\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(string, string)& item, pwalletMain->mapAddressBook)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n         {\n-            const string& strAddress = item.first;\n+            const CBitcoinAddress& address = item.first;\n             const string& strName = item.second;\n             if (strName == strAccount)\n-            {\n-                // We're only counting our own valid bitcoin addresses and not ip addresses\n-                CScript scriptPubKey;\n-                if (scriptPubKey.SetBitcoinAddress(strAddress))\n-                    if (IsMine(*pwalletMain,scriptPubKey))\n-                        setPubKey.insert(scriptPubKey);\n-            }\n+                setAddress.insert(address);\n         }\n     }\n }\n@@ -657,8 +644,8 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n \n     // Get the set of pub keys that have the label\n     string strAccount = AccountFromValue(params[0]);\n-    set<CScript> setPubKey;\n-    GetAccountPubKeys(strAccount, setPubKey);\n+    set<CBitcoinAddress> setAddress;\n+    GetAccountAddresses(strAccount, setAddress);\n \n     // Tally\n     int64 nAmount = 0;\n@@ -671,9 +658,12 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n                 continue;\n \n             BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-                if (setPubKey.count(txout.scriptPubKey))\n+            {\n+                CBitcoinAddress address;\n+                if (ExtractAddress(txout.scriptPubKey, pwalletMain, address) && setAddress.count(address))\n                     if (wtx.GetDepthInMainChain() >= nMinDepth)\n                         nAmount += txout.nValue;\n+            }\n         }\n     }\n \n@@ -744,13 +734,13 @@ Value getbalance(const Array& params, bool fHelp)\n             int64 allGeneratedImmature, allGeneratedMature, allFee;\n             allGeneratedImmature = allGeneratedMature = allFee = 0;\n             string strSentAccount;\n-            list<pair<string, int64> > listReceived;\n-            list<pair<string, int64> > listSent;\n+            list<pair<CBitcoinAddress, int64> > listReceived;\n+            list<pair<CBitcoinAddress, int64> > listSent;\n             wtx.GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount);\n             if (wtx.GetDepthInMainChain() >= nMinDepth)\n-                BOOST_FOREACH(const PAIRTYPE(string,int64)& r, listReceived)\n+                BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64)& r, listReceived)\n                     nBalance += r.second;\n-            BOOST_FOREACH(const PAIRTYPE(string,int64)& r, listSent)\n+            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64)& r, listSent)\n                 nBalance -= r.second;\n             nBalance -= allFee;\n             nBalance += allGeneratedMature;\n@@ -827,7 +817,9 @@ Value sendfrom(const Array& params, bool fHelp)\n             \"<amount> is a real and is rounded to the nearest 0.00000001\");\n \n     string strAccount = AccountFromValue(params[0]);\n-    string strAddress = params[1].get_str();\n+    CBitcoinAddress address(params[1].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(-5, \"Invalid bitcoin address\");\n     int64 nAmount = AmountFromValue(params[2]);\n     int nMinDepth = 1;\n     if (params.size() > 3)\n@@ -853,7 +845,7 @@ Value sendfrom(const Array& params, bool fHelp)\n             throw JSONRPCError(-6, \"Account has insufficient funds\");\n \n         // Send\n-        string strError = pwalletMain->SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n+        string strError = pwalletMain->SendMoneyToBitcoinAddress(address, nAmount, wtx);\n         if (strError != \"\")\n             throw JSONRPCError(-4, strError);\n     }\n@@ -885,22 +877,22 @@ Value sendmany(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"comment\"] = params[3].get_str();\n \n-    set<string> setAddress;\n+    set<CBitcoinAddress> setAddress;\n     vector<pair<CScript, int64> > vecSend;\n \n     int64 totalAmount = 0;\n     BOOST_FOREACH(const Pair& s, sendTo)\n     {\n-        uint160 hash160;\n-        string strAddress = s.name_;\n+        CBitcoinAddress address(s.name_);\n+        if (!address.IsValid())\n+            throw JSONRPCError(-5, string(\"Invalid bitcoin address:\")+s.name_);\n \n-        if (setAddress.count(strAddress))\n-            throw JSONRPCError(-8, string(\"Invalid parameter, duplicated address: \")+strAddress);\n-        setAddress.insert(strAddress);\n+        if (setAddress.count(address))\n+            throw JSONRPCError(-8, string(\"Invalid parameter, duplicated address: \")+s.name_);\n+        setAddress.insert(address);\n \n         CScript scriptPubKey;\n-        if (!scriptPubKey.SetBitcoinAddress(strAddress))\n-            throw JSONRPCError(-5, string(\"Invalid bitcoin address:\")+strAddress);\n+        scriptPubKey.SetBitcoinAddress(address);\n         int64 nAmount = AmountFromValue(s.value_); \n         totalAmount += nAmount;\n \n@@ -961,7 +953,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n         fIncludeEmpty = params[1].get_bool();\n \n     // Tally\n-    map<uint160, tallyitem> mapTally;\n+    map<CBitcoinAddress, tallyitem> mapTally;\n     CRITICAL_BLOCK(pwalletMain->cs_mapWallet)\n     {\n         for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n@@ -976,12 +968,11 @@ Value ListReceived(const Array& params, bool fByAccounts)\n \n             BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n             {\n-                // Only counting our own bitcoin addresses and not ip addresses\n-                uint160 hash160 = txout.scriptPubKey.GetBitcoinAddressHash160();\n-                if (hash160 == 0 || !mapPubKeys.count(hash160)) // IsMine\n+                CBitcoinAddress address;\n+                if (!ExtractAddress(txout.scriptPubKey, pwalletMain, address) || !address.IsValid())\n                     continue;\n \n-                tallyitem& item = mapTally[hash160];\n+                tallyitem& item = mapTally[address];\n                 item.nAmount += txout.nValue;\n                 item.nConf = min(item.nConf, nDepth);\n             }\n@@ -993,14 +984,11 @@ Value ListReceived(const Array& params, bool fByAccounts)\n     map<string, tallyitem> mapAccountTally;\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(string, string)& item, pwalletMain->mapAddressBook)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n         {\n-            const string& strAddress = item.first;\n+            const CBitcoinAddress& address = item.first;\n             const string& strAccount = item.second;\n-            uint160 hash160;\n-            if (!AddressToHash160(strAddress, hash160))\n-                continue;\n-            map<uint160, tallyitem>::iterator it = mapTally.find(hash160);\n+            map<CBitcoinAddress, tallyitem>::iterator it = mapTally.find(address);\n             if (it == mapTally.end() && !fIncludeEmpty)\n                 continue;\n \n@@ -1021,7 +1009,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n             else\n             {\n                 Object obj;\n-                obj.push_back(Pair(\"address\",       strAddress));\n+                obj.push_back(Pair(\"address\",       address.ToString()));\n                 obj.push_back(Pair(\"account\",       strAccount));\n                 obj.push_back(Pair(\"label\",         strAccount)); // deprecated\n                 obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n@@ -1084,8 +1072,8 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n {\n     int64 nGeneratedImmature, nGeneratedMature, nFee;\n     string strSentAccount;\n-    list<pair<string, int64> > listReceived;\n-    list<pair<string, int64> > listSent;\n+    list<pair<CBitcoinAddress, int64> > listReceived;\n+    list<pair<CBitcoinAddress, int64> > listSent;\n     wtx.GetAmounts(nGeneratedImmature, nGeneratedMature, listReceived, listSent, nFee, strSentAccount);\n \n     bool fAllAccounts = (strAccount == string(\"*\"));\n@@ -1113,11 +1101,11 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     // Sent\n     if ((!listSent.empty() || nFee != 0) && (fAllAccounts || strAccount == strSentAccount))\n     {\n-        BOOST_FOREACH(const PAIRTYPE(string, int64)& s, listSent)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64)& s, listSent)\n         {\n             Object entry;\n             entry.push_back(Pair(\"account\", strSentAccount));\n-            entry.push_back(Pair(\"address\", s.first));\n+            entry.push_back(Pair(\"address\", s.first.ToString()));\n             entry.push_back(Pair(\"category\", \"send\"));\n             entry.push_back(Pair(\"amount\", ValueFromAmount(-s.second)));\n             entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee)));\n@@ -1131,7 +1119,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     if (listReceived.size() > 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n         CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n         {\n-            BOOST_FOREACH(const PAIRTYPE(string, int64)& r, listReceived)\n+            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64)& r, listReceived)\n             {\n                 string account;\n                 if (pwalletMain->mapAddressBook.count(r.first))\n@@ -1140,7 +1128,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n                 {\n                     Object entry;\n                     entry.push_back(Pair(\"account\", account));\n-                    entry.push_back(Pair(\"address\", r.first));\n+                    entry.push_back(Pair(\"address\", r.first.ToString()));\n                     entry.push_back(Pair(\"category\", \"receive\"));\n                     entry.push_back(Pair(\"amount\", ValueFromAmount(r.second)));\n                     if (fLong)\n@@ -1251,9 +1239,8 @@ Value listaccounts(const Array& params, bool fHelp)\n     CRITICAL_BLOCK(pwalletMain->cs_mapWallet)\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(string, string)& entry, pwalletMain->mapAddressBook) {\n-            uint160 hash160;\n-            if(AddressToHash160(entry.first, hash160) && mapPubKeys.count(hash160)) // This address belongs to me\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& entry, pwalletMain->mapAddressBook) {\n+            if (pwalletMain->HaveKey(entry.first)) // This address belongs to me\n                 mapAccountBalances[entry.second] = 0;\n         }\n \n@@ -1262,16 +1249,16 @@ Value listaccounts(const Array& params, bool fHelp)\n             const CWalletTx& wtx = (*it).second;\n             int64 nGeneratedImmature, nGeneratedMature, nFee;\n             string strSentAccount;\n-            list<pair<string, int64> > listReceived;\n-            list<pair<string, int64> > listSent;\n+            list<pair<CBitcoinAddress, int64> > listReceived;\n+            list<pair<CBitcoinAddress, int64> > listSent;\n             wtx.GetAmounts(nGeneratedImmature, nGeneratedMature, listReceived, listSent, nFee, strSentAccount);\n             mapAccountBalances[strSentAccount] -= nFee;\n-            BOOST_FOREACH(const PAIRTYPE(string, int64)& s, listSent)\n+            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64)& s, listSent)\n                 mapAccountBalances[strSentAccount] -= s.second;\n             if (wtx.GetDepthInMainChain() >= nMinDepth)\n             {\n                 mapAccountBalances[\"\"] += nGeneratedMature;\n-                BOOST_FOREACH(const PAIRTYPE(string, int64)& r, listReceived)\n+                BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64)& r, listReceived)\n                     if (pwalletMain->mapAddressBook.count(r.first))\n                         mapAccountBalances[pwalletMain->mapAddressBook[r.first]] += r.second;\n                     else\n@@ -1563,23 +1550,22 @@ Value validateaddress(const Array& params, bool fHelp)\n             \"validateaddress <bitcoinaddress>\\n\"\n             \"Return information about <bitcoinaddress>.\");\n \n-    string strAddress = params[0].get_str();\n-    uint160 hash160;\n-    bool isValid = AddressToHash160(strAddress, hash160);\n+    CBitcoinAddress address(params[0].get_str());\n+    bool isValid = address.IsValid();\n \n     Object ret;\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n         // Call Hash160ToAddress() so we always return current ADDRESSVERSION\n         // version of the address:\n-        string currentAddress = Hash160ToAddress(hash160);\n+        string currentAddress = address.ToString();\n         ret.push_back(Pair(\"address\", currentAddress));\n-        ret.push_back(Pair(\"ismine\", (mapPubKeys.count(hash160) > 0)));\n+        ret.push_back(Pair(\"ismine\", (pwalletMain->HaveKey(address) > 0)));\n         CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n         {\n-            if (pwalletMain->mapAddressBook.count(currentAddress))\n-                ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[currentAddress]));\n+            if (pwalletMain->mapAddressBook.count(address))\n+                ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[address]));\n         }\n     }\n     return ret;\n@@ -1768,7 +1754,7 @@ string pAllowInSafeMode[] =\n     \"getinfo\",\n     \"getnewaddress\",\n     \"getaccountaddress\",\n-    \"setlabel\",\n+    \"setlabel\", // deprecated\n     \"getaccount\",\n     \"getlabel\", // deprecated\n     \"getaddressesbyaccount\",\n@@ -2399,7 +2385,7 @@ int CommandLineRPC(int argc, char *argv[])\n         if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"getreceivedbylabel\"     && n > 1) ConvertTo<boost::int64_t>(params[1]); // deprecated\n         if (strMethod == \"getallreceived\"         && n > 0) ConvertTo<boost::int64_t>(params[0]); // deprecated\n-        if (strMethod == \"getallreceived\"         && n > 1) ConvertTo<bool>(params[1]);\n+        if (strMethod == \"getallreceived\"         && n > 1) ConvertTo<bool>(params[1]); // deprecated\n         if (strMethod == \"listreceivedbyaddress\"  && n > 0) ConvertTo<boost::int64_t>(params[0]);\n         if (strMethod == \"listreceivedbyaddress\"  && n > 1) ConvertTo<bool>(params[1]);\n         if (strMethod == \"listreceivedbyaccount\"  && n > 0) ConvertTo<boost::int64_t>(params[0]);"
      },
      {
        "sha": "0fc4611fdad864fa6637596ddd0dc2f427e20762",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 55,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1041,7 +1041,9 @@ bool Solver(const CKeyStore& keystore, const CScript& scriptPubKey, uint256 hash\n                 // Sign\n                 const valtype& vchPubKey = item.second;\n                 CKey key;\n-                if (!keystore.GetPrivKey(vchPubKey, key))\n+                if (!keystore.GetKey(Hash160(vchPubKey), key))\n+                    return false;\n+                if (key.GetPubKey() != vchPubKey)\n                     return false;\n                 if (hash != 0)\n                 {\n@@ -1055,20 +1057,16 @@ bool Solver(const CKeyStore& keystore, const CScript& scriptPubKey, uint256 hash\n             else if (item.first == OP_PUBKEYHASH)\n             {\n                 // Sign and give pubkey\n-                map<uint160, valtype>::iterator mi = mapPubKeys.find(uint160(item.second));\n-                if (mi == mapPubKeys.end())\n-                    return false;\n-                const vector<unsigned char>& vchPubKey = (*mi).second;\n                 CKey key;\n-                if (!keystore.GetPrivKey(vchPubKey, key))\n+                if (!keystore.GetKey(uint160(item.second), key))\n                     return false;\n                 if (hash != 0)\n                 {\n                     vector<unsigned char> vchSig;\n                     if (!key.Sign(hash, vchSig))\n                         return false;\n                     vchSig.push_back((unsigned char)nHashType);\n-                    scriptSigRet << vchSig << vchPubKey;\n+                    scriptSigRet << vchSig << key.GetPubKey();\n                 }\n             }\n             else\n@@ -1102,19 +1100,16 @@ bool IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n         {\n             if (item.first == OP_PUBKEY)\n             {\n-                // Sign\n                 const valtype& vchPubKey = item.second;\n-                if (!keystore.HaveKey(vchPubKey))\n+                vector<unsigned char> vchPubKeyFound;\n+                if (!keystore.GetPubKey(Hash160(vchPubKey), vchPubKeyFound))\n+                    return false;\n+                if (vchPubKeyFound != vchPubKey)\n                     return false;\n             }\n             else if (item.first == OP_PUBKEYHASH)\n             {\n-                // Sign and give pubkey\n-                map<uint160, valtype>::iterator mi = mapPubKeys.find(uint160(item.second));\n-                if (mi == mapPubKeys.end())\n-                    return false;\n-                const vector<unsigned char>& vchPubKey = (*mi).second;\n-                if (!keystore.HaveKey(vchPubKey))\n+                if (!keystore.HaveKey(uint160(item.second)))\n                     return false;\n             }\n             else\n@@ -1127,58 +1122,33 @@ bool IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n     return true;\n }\n \n-\n-bool ExtractPubKey(const CScript& scriptPubKey, const CKeyStore* keystore, vector<unsigned char>& vchPubKeyRet)\n+// requires either keystore==0, or a lock on keystore->cs_KeyStore\n+bool static ExtractAddressInner(const CScript& scriptPubKey, const CKeyStore* keystore, CBitcoinAddress& addressRet)\n {\n-    vchPubKeyRet.clear();\n-\n     vector<pair<opcodetype, valtype> > vSolution;\n     if (!Solver(scriptPubKey, vSolution))\n         return false;\n \n-    CRITICAL_BLOCK(cs_mapPubKeys)\n+    BOOST_FOREACH(PAIRTYPE(opcodetype, valtype)& item, vSolution)\n     {\n-        BOOST_FOREACH(PAIRTYPE(opcodetype, valtype)& item, vSolution)\n-        {\n-            valtype vchPubKey;\n-            if (item.first == OP_PUBKEY)\n-            {\n-                vchPubKey = item.second;\n-            }\n-            else if (item.first == OP_PUBKEYHASH)\n-            {\n-                map<uint160, valtype>::iterator mi = mapPubKeys.find(uint160(item.second));\n-                if (mi == mapPubKeys.end())\n-                    continue;\n-                vchPubKey = (*mi).second;\n-            }\n-            if (keystore == NULL || keystore->HaveKey(vchPubKey))\n-            {\n-                vchPubKeyRet = vchPubKey;\n-                return true;\n-            }\n-        }\n+        if (item.first == OP_PUBKEY)\n+            addressRet.SetPubKey(item.second);\n+        else if (item.first == OP_PUBKEYHASH)\n+            addressRet.SetHash160((uint160)item.second);\n+        if (keystore == NULL || keystore->HaveKey(addressRet))\n+            return true;\n     }\n     return false;\n }\n \n \n-bool ExtractHash160(const CScript& scriptPubKey, uint160& hash160Ret)\n+bool ExtractAddress(const CScript& scriptPubKey, const CKeyStore* keystore, CBitcoinAddress& addressRet)\n {\n-    hash160Ret = 0;\n-\n-    vector<pair<opcodetype, valtype> > vSolution;\n-    if (!Solver(scriptPubKey, vSolution))\n-        return false;\n-\n-    BOOST_FOREACH(PAIRTYPE(opcodetype, valtype)& item, vSolution)\n-    {\n-        if (item.first == OP_PUBKEYHASH)\n-        {\n-            hash160Ret = uint160(item.second);\n-            return true;\n-        }\n-    }\n+    if (keystore)\n+        CRITICAL_BLOCK(keystore->cs_KeyStore)\n+            return ExtractAddressInner(scriptPubKey, keystore, addressRet);\n+    else\n+        return ExtractAddressInner(scriptPubKey, NULL, addressRet);\n     return false;\n }\n "
      },
      {
        "sha": "4b48bca7cd0d8ad282263ce72e1ab1dfbff898a4",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 9,
        "deletions": 25,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -10,6 +10,8 @@\n #include <string>\n #include <vector>\n \n+#include <boost/foreach.hpp>\n+\n class CTransaction;\n \n enum\n@@ -622,7 +624,7 @@ class CScript : public std::vector<unsigned char>\n     }\n \n \n-    uint160 GetBitcoinAddressHash160() const\n+    CBitcoinAddress GetBitcoinAddress() const\n     {\n         opcodetype opcode;\n         std::vector<unsigned char> vch;\n@@ -634,36 +636,18 @@ class CScript : public std::vector<unsigned char>\n         if (!GetOp(pc, opcode, vch) || opcode != OP_EQUALVERIFY) return 0;\n         if (!GetOp(pc, opcode, vch) || opcode != OP_CHECKSIG) return 0;\n         if (pc != end()) return 0;\n-        return hash160;\n+        return CBitcoinAddress(hash160);\n     }\n \n-    std::string GetBitcoinAddress() const\n-    {\n-        uint160 hash160 = GetBitcoinAddressHash160();\n-        if (hash160 == 0)\n-            return \"\";\n-        return Hash160ToAddress(hash160);\n-    }\n-\n-    void SetBitcoinAddress(const uint160& hash160)\n+    void SetBitcoinAddress(const CBitcoinAddress& address)\n     {\n         this->clear();\n-        *this << OP_DUP << OP_HASH160 << hash160 << OP_EQUALVERIFY << OP_CHECKSIG;\n+        *this << OP_DUP << OP_HASH160 << address.GetHash160() << OP_EQUALVERIFY << OP_CHECKSIG;\n     }\n \n     void SetBitcoinAddress(const std::vector<unsigned char>& vchPubKey)\n     {\n-        SetBitcoinAddress(Hash160(vchPubKey));\n-    }\n-\n-    bool SetBitcoinAddress(const std::string& strAddress)\n-    {\n-        this->clear();\n-        uint160 hash160;\n-        if (!AddressToHash160(strAddress, hash160))\n-            return false;\n-        SetBitcoinAddress(hash160);\n-        return true;\n+        SetBitcoinAddress(CBitcoinAddress(vchPubKey));\n     }\n \n \n@@ -707,11 +691,11 @@ class CScript : public std::vector<unsigned char>\n \n \n \n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, const CTransaction& txTo, unsigned int nIn, int nHashType);\n \n bool IsStandard(const CScript& scriptPubKey);\n bool IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n-bool ExtractPubKey(const CScript& scriptPubKey, const CKeyStore* pkeystore, std::vector<unsigned char>& vchPubKeyRet);\n-bool ExtractHash160(const CScript& scriptPubKey, uint160& hash160Ret);\n+bool ExtractAddress(const CScript& scriptPubKey, const CKeyStore* pkeystore, CBitcoinAddress& addressRet);\n bool SignSignature(const CKeyStore& keystore, const CTransaction& txFrom, CTransaction& txTo, unsigned int nIn, int nHashType=SIGHASH_ALL, CScript scriptPrereq=CScript());\n bool VerifySignature(const CTransaction& txFrom, const CTransaction& txTo, unsigned int nIn, int nHashType=0);\n "
      },
      {
        "sha": "c2bfa2780e58734692db11b47a8c298f9a9f7a21",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -34,6 +34,7 @@ typedef unsigned long long  uint64;\n // Note that VirtualLock does not provide this as a guarantee on Windows,\n // but, in practice, memory that has been VirtualLock'd almost never gets written to\n // the pagefile except in rare circumstances where memory is extremely low.\n+#include <windows.h>\n #define mlock(p, n) VirtualLock((p), (n));\n #define munlock(p, n) VirtualUnlock((p), (n));\n #else"
      },
      {
        "sha": "5e74648c4baf2bb045a8e60aa518d78cbc2e33c6",
        "filename": "src/test/script_tests.cpp",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -0,0 +1,37 @@\n+#include <vector>\n+#include <boost/test/unit_test.hpp>\n+#include <boost/foreach.hpp>\n+\n+#include \"../main.h\"\n+#include \"../wallet.h\"\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(script_tests)\n+\n+BOOST_AUTO_TEST_CASE(script_PushData)\n+{\n+    // Check that PUSHDATA1, PUSHDATA2, and PUSHDATA4 create the same value on\n+    // the stack as the 1-75 opcodes do.\n+    static const unsigned char direct[] = { 1, 0x5a };\n+    static const unsigned char pushdata1[] = { OP_PUSHDATA1, 1, 0x5a };\n+    static const unsigned char pushdata2[] = { OP_PUSHDATA2, 1, 0, 0x5a };\n+    static const unsigned char pushdata4[] = { OP_PUSHDATA4, 1, 0, 0, 0, 0x5a };\n+\n+    vector<vector<unsigned char> > directStack;\n+    BOOST_CHECK(EvalScript(directStack, CScript(&direct[0], &direct[sizeof(direct)]), CTransaction(), 0, 0));\n+\n+    vector<vector<unsigned char> > pushdata1Stack;\n+    BOOST_CHECK(EvalScript(pushdata1Stack, CScript(&pushdata1[0], &pushdata1[sizeof(pushdata1)]), CTransaction(), 0, 0));\n+    BOOST_CHECK(pushdata1Stack == directStack);\n+\n+    vector<vector<unsigned char> > pushdata2Stack;\n+    BOOST_CHECK(EvalScript(pushdata2Stack, CScript(&pushdata2[0], &pushdata2[sizeof(pushdata2)]), CTransaction(), 0, 0));\n+    BOOST_CHECK(pushdata2Stack == directStack);\n+\n+    vector<vector<unsigned char> > pushdata4Stack;\n+    BOOST_CHECK(EvalScript(pushdata4Stack, CScript(&pushdata4[0], &pushdata4[sizeof(pushdata4)]), CTransaction(), 0, 0));\n+    BOOST_CHECK(pushdata4Stack == directStack);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "0230bb6ecadc9df860d27c7d5143a7e1e520405f",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1,6 +1,18 @@\n-#define BOOST_TEST_MODULE uint160\n+#define BOOST_TEST_MODULE Bitcoin Test Suite\n #include <boost/test/unit_test.hpp>\n \n+#include \"../main.h\"\n+#include \"../wallet.h\"\n+\n #include \"uint160_tests.cpp\"\n #include \"uint256_tests.cpp\"\n+#include \"script_tests.cpp\"\n+#include \"transaction_tests.cpp\"\n+\n+\n+CWallet* pwalletMain;\n \n+void Shutdown(void* parg)\n+{\n+\texit(0);\n+}"
      },
      {
        "sha": "e6eb0f054f6b863330f72a6d172872ba412a2f61",
        "filename": "src/test/transaction_tests.cpp",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -0,0 +1,25 @@\n+#include <boost/test/unit_test.hpp>\n+\n+#include \"../main.h\"\n+#include \"../wallet.h\"\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(transaction_tests)\n+\n+BOOST_AUTO_TEST_CASE(basic_transaction_tests)\n+{\n+    // Random real transaction (e2769b09e784f32f62ef849763d4f45b98e07ba658647343b915ff832b110436)\n+    unsigned char ch[] = {0x01, 0x00, 0x00, 0x00, 0x01, 0x6b, 0xff, 0x7f, 0xcd, 0x4f, 0x85, 0x65, 0xef, 0x40, 0x6d, 0xd5, 0xd6, 0x3d, 0x4f, 0xf9, 0x4f, 0x31, 0x8f, 0xe8, 0x20, 0x27, 0xfd, 0x4d, 0xc4, 0x51, 0xb0, 0x44, 0x74, 0x01, 0x9f, 0x74, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x49, 0x30, 0x46, 0x02, 0x21, 0x00, 0xda, 0x0d, 0xc6, 0xae, 0xce, 0xfe, 0x1e, 0x06, 0xef, 0xdf, 0x05, 0x77, 0x37, 0x57, 0xde, 0xb1, 0x68, 0x82, 0x09, 0x30, 0xe3, 0xb0, 0xd0, 0x3f, 0x46, 0xf5, 0xfc, 0xf1, 0x50, 0xbf, 0x99, 0x0c, 0x02, 0x21, 0x00, 0xd2, 0x5b, 0x5c, 0x87, 0x04, 0x00, 0x76, 0xe4, 0xf2, 0x53, 0xf8, 0x26, 0x2e, 0x76, 0x3e, 0x2d, 0xd5, 0x1e, 0x7f, 0xf0, 0xbe, 0x15, 0x77, 0x27, 0xc4, 0xbc, 0x42, 0x80, 0x7f, 0x17, 0xbd, 0x39, 0x01, 0x41, 0x04, 0xe6, 0xc2, 0x6e, 0xf6, 0x7d, 0xc6, 0x10, 0xd2, 0xcd, 0x19, 0x24, 0x84, 0x78, 0x9a, 0x6c, 0xf9, 0xae, 0xa9, 0x93, 0x0b, 0x94, 0x4b, 0x7e, 0x2d, 0xb5, 0x34, 0x2b, 0x9d, 0x9e, 0x5b, 0x9f, 0xf7, 0x9a, 0xff, 0x9a, 0x2e, 0xe1, 0x97, 0x8d, 0xd7, 0xfd, 0x01, 0xdf, 0xc5, 0x22, 0xee, 0x02, 0x28, 0x3d, 0x3b, 0x06, 0xa9, 0xd0, 0x3a, 0xcf, 0x80, 0x96, 0x96, 0x8d, 0x7d, 0xbb, 0x0f, 0x91, 0x78, 0xff, 0xff, 0xff, 0xff, 0x02, 0x8b, 0xa7, 0x94, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xba, 0xde, 0xec, 0xfd, 0xef, 0x05, 0x07, 0x24, 0x7f, 0xc8, 0xf7, 0x42, 0x41, 0xd7, 0x3b, 0xc0, 0x39, 0x97, 0x2d, 0x7b, 0x88, 0xac, 0x40, 0x94, 0xa8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xc1, 0x09, 0x32, 0x48, 0x3f, 0xec, 0x93, 0xed, 0x51, 0xf5, 0xfe, 0x95, 0xe7, 0x25, 0x59, 0xf2, 0xcc, 0x70, 0x43, 0xf9, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00, 0x00};\n+    vector<unsigned char> vch(ch, ch + sizeof(ch) -1);\n+    CDataStream stream(vch);\n+    CTransaction tx;\n+    stream >> tx;\n+    BOOST_CHECK_MESSAGE(tx.CheckTransaction(), \"Simple deserialized transaction should be valid.\");\n+\n+    // Check that duplicate txins fail\n+    tx.vin.push_back(tx.vin[0]);\n+    BOOST_CHECK_MESSAGE(!tx.CheckTransaction(), \"Transaction with duplicate txins should be invalid.\");\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "42c8275afe007fb76e58a33f3ed5d1809515af99",
        "filename": "src/test/uint160_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/uint160_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/uint160_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint160_tests.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1,8 +1,10 @@\n+#include <boost/test/unit_test.hpp>\n+\n #include \"../uint256.h\"\n \n BOOST_AUTO_TEST_SUITE(uint160_tests)\n \n-BOOST_AUTO_TEST_CASE(equality)\n+BOOST_AUTO_TEST_CASE(uint160_equality)\n {\n     uint160 num1 = 10;\n     uint160 num2 = 11;"
      },
      {
        "sha": "c5d45e215eb1d6218d92d320690bc6f3b22c8435",
        "filename": "src/test/uint256_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/uint256_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/test/uint256_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint256_tests.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1,8 +1,10 @@\n+#include <boost/test/unit_test.hpp>\n+\n #include \"../uint256.h\"\n \n BOOST_AUTO_TEST_SUITE(uint256_tests)\n \n-BOOST_AUTO_TEST_CASE(equality)\n+BOOST_AUTO_TEST_CASE(uint256_equality)\n {\n     uint256 num1 = 10;\n     uint256 num2 = 11;"
      },
      {
        "sha": "c3c234439c7380ad3b907eef10a667f78b4e41f2",
        "filename": "src/ui.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 43,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/ui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/ui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -235,12 +235,13 @@ void SetDefaultReceivingAddress(const string& strAddress)\n         return;\n     if (strAddress != pframeMain->m_textCtrlAddress->GetValue())\n     {\n-        uint160 hash160;\n-        if (!AddressToHash160(strAddress, hash160))\n+        CBitcoinAddress address(strAddress);\n+        if (!address.IsValid())\n             return;\n-        if (!mapPubKeys.count(hash160))\n+        vector<unsigned char> vchPubKey;\n+        if (!pwalletMain->GetPubKey(address, vchPubKey))\n             return;\n-        pwalletMain->SetDefaultKey(mapPubKeys[hash160]);\n+        pwalletMain->SetDefaultKey(vchPubKey);\n         pframeMain->m_textCtrlAddress->SetValue(strAddress);\n     }\n }\n@@ -366,7 +367,7 @@ CMainFrame::CMainFrame(wxWindow* parent) : CMainFrameBase(parent)\n     // Fill your address text box\n     vector<unsigned char> vchPubKey;\n     if (CWalletDB(pwalletMain->strWalletFile,\"r\").ReadDefaultKey(vchPubKey))\n-        m_textCtrlAddress->SetValue(PubKeyToAddress(vchPubKey));\n+        m_textCtrlAddress->SetValue(CBitcoinAddress(vchPubKey).ToString());\n \n     if (pwalletMain->IsCrypted())\n         m_menuOptions->Remove(m_menuOptionsEncryptWallet);\n@@ -703,24 +704,23 @@ bool CMainFrame::InsertTransaction(const CWalletTx& wtx, bool fNew, int nIndex)\n             {\n                 if (pwalletMain->IsMine(txout))\n                 {\n-                    vector<unsigned char> vchPubKey;\n-                    if (ExtractPubKey(txout.scriptPubKey, pwalletMain, vchPubKey))\n+                    CBitcoinAddress address;\n+                    if (ExtractAddress(txout.scriptPubKey, pwalletMain, address))\n                     {\n                         CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n                         {\n                             //strDescription += _(\"Received payment to \");\n                             //strDescription += _(\"Received with address \");\n                             strDescription += _(\"Received with: \");\n-                            string strAddress = PubKeyToAddress(vchPubKey);\n-                            map<string, string>::iterator mi = pwalletMain->mapAddressBook.find(strAddress);\n+                            map<CBitcoinAddress, string>::iterator mi = pwalletMain->mapAddressBook.find(address);\n                             if (mi != pwalletMain->mapAddressBook.end() && !(*mi).second.empty())\n                             {\n                                 string strLabel = (*mi).second;\n-                                strDescription += strAddress.substr(0,12) + \"... \";\n+                                strDescription += address.ToString().substr(0,12) + \"... \";\n                                 strDescription += \"(\" + strLabel + \")\";\n                             }\n                             else\n-                                strDescription += strAddress;\n+                                strDescription += address.ToString();\n                         }\n                     }\n                     break;\n@@ -776,6 +776,7 @@ bool CMainFrame::InsertTransaction(const CWalletTx& wtx, bool fNew, int nIndex)\n                 if (pwalletMain->IsMine(txout))\n                     continue;\n \n+                CBitcoinAddress address;\n                 string strAddress;\n                 if (!mapValue[\"to\"].empty())\n                 {\n@@ -785,15 +786,14 @@ bool CMainFrame::InsertTransaction(const CWalletTx& wtx, bool fNew, int nIndex)\n                 else\n                 {\n                     // Sent to Bitcoin Address\n-                    uint160 hash160;\n-                    if (ExtractHash160(txout.scriptPubKey, hash160))\n-                        strAddress = Hash160ToAddress(hash160);\n+                    if (ExtractAddress(txout.scriptPubKey, NULL, address))\n+                        strAddress = address.ToString();\n                 }\n \n                 string strDescription = _(\"To: \");\n                 CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n-                    if (pwalletMain->mapAddressBook.count(strAddress) && !pwalletMain->mapAddressBook[strAddress].empty())\n-                        strDescription += pwalletMain->mapAddressBook[strAddress] + \" \";\n+                    if (pwalletMain->mapAddressBook.count(address) && !pwalletMain->mapAddressBook[address].empty())\n+                        strDescription += pwalletMain->mapAddressBook[address] + \" \";\n                 strDescription += strAddress;\n                 if (!mapValue[\"message\"].empty())\n                 {\n@@ -1114,7 +1114,7 @@ void CMainFrame::OnPaintListCtrl(wxPaintEvent& event)\n     m_statusBar->SetStatusText(strStatus, 2);\n \n     // Update receiving address\n-    string strDefaultAddress = PubKeyToAddress(pwalletMain->vchDefaultKey);\n+    string strDefaultAddress = CBitcoinAddress(pwalletMain->vchDefaultKey).ToString();\n     if (m_textCtrlAddress->GetValue() != strDefaultAddress)\n         m_textCtrlAddress->SetValue(strDefaultAddress);\n }\n@@ -1393,7 +1393,7 @@ void CMainFrame::OnButtonNew(wxCommandEvent& event)\n             return;\n \n         // Generate new key\n-        strAddress = PubKeyToAddress(pwalletMain->GetOrReuseKeyFromPool());\n+        strAddress = CBitcoinAddress(pwalletMain->GetOrReuseKeyFromPool()).ToString();\n \n         if (fWasLocked)\n             pwalletMain->Lock();\n@@ -1502,17 +1502,16 @@ CTxDetailsDialog::CTxDetailsDialog(wxWindow* parent, CWalletTx wtx) : CTxDetails\n                 {\n                     if (pwalletMain->IsMine(txout))\n                     {\n-                        vector<unsigned char> vchPubKey;\n-                        if (ExtractPubKey(txout.scriptPubKey, pwalletMain, vchPubKey))\n+                        CBitcoinAddress address;\n+                        if (ExtractAddress(txout.scriptPubKey, pwalletMain, address))\n                         {\n-                            string strAddress = PubKeyToAddress(vchPubKey);\n-                            if (pwalletMain->mapAddressBook.count(strAddress))\n+                            if (pwalletMain->mapAddressBook.count(address))\n                             {\n                                 strHTML += string() + _(\"<b>From:</b> \") + _(\"unknown\") + \"<br>\";\n                                 strHTML += _(\"<b>To:</b> \");\n-                                strHTML += HtmlEscape(strAddress);\n-                                if (!pwalletMain->mapAddressBook[strAddress].empty())\n-                                    strHTML += _(\" (yours, label: \") + pwalletMain->mapAddressBook[strAddress] + \")\";\n+                                strHTML += HtmlEscape(address.ToString());\n+                                if (!pwalletMain->mapAddressBook[address].empty())\n+                                    strHTML += _(\" (yours, label: \") + pwalletMain->mapAddressBook[address] + \")\";\n                                 else\n                                     strHTML += _(\" (yours)\");\n                                 strHTML += \"<br>\";\n@@ -1588,13 +1587,13 @@ CTxDetailsDialog::CTxDetailsDialog(wxWindow* parent, CWalletTx wtx) : CTxDetails\n                     if (wtx.mapValue[\"to\"].empty())\n                     {\n                         // Offline transaction\n-                        uint160 hash160;\n-                        if (ExtractHash160(txout.scriptPubKey, hash160))\n+                        CBitcoinAddress address;\n+                        if (ExtractAddress(txout.scriptPubKey, pwalletMain, address))\n                         {\n-                            string strAddress = Hash160ToAddress(hash160);\n+                            string strAddress = address.ToString();\n                             strHTML += _(\"<b>To:</b> \");\n-                            if (pwalletMain->mapAddressBook.count(strAddress) && !pwalletMain->mapAddressBook[strAddress].empty())\n-                                strHTML += pwalletMain->mapAddressBook[strAddress] + \" \";\n+                            if (pwalletMain->mapAddressBook.count(address) && !pwalletMain->mapAddressBook[address].empty())\n+                                strHTML += pwalletMain->mapAddressBook[address] + \" \";\n                             strHTML += strAddress;\n                             strHTML += \"<br>\";\n                         }\n@@ -2155,8 +2154,8 @@ void CSendDialog::OnButtonSend(wxCommandEvent& event)\n         }\n \n         // Parse bitcoin address\n-        uint160 hash160;\n-        bool fBitcoinAddress = AddressToHash160(strAddress, hash160);\n+        CBitcoinAddress address(strAddress);\n+        bool fBitcoinAddress = address.IsValid();\n \n         if (fBitcoinAddress)\n         {\n@@ -2169,7 +2168,7 @@ void CSendDialog::OnButtonSend(wxCommandEvent& event)\n \n                 // Send to bitcoin address\n                 CScript scriptPubKey;\n-                scriptPubKey << OP_DUP << OP_HASH160 << hash160 << OP_EQUALVERIFY << OP_CHECKSIG;\n+                scriptPubKey.SetBitcoinAddress(address);\n \n                 string strError = pwalletMain->SendMoney(scriptPubKey, nValue, wtx, true);\n                 if (strError == \"\")\n@@ -2213,7 +2212,7 @@ void CSendDialog::OnButtonSend(wxCommandEvent& event)\n         }\n \n         CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n-            if (!pwalletMain->mapAddressBook.count(strAddress))\n+            if (!pwalletMain->mapAddressBook.count(address))\n                 pwalletMain->SetAddressBookName(strAddress, \"\");\n \n         EndModal(true);\n@@ -2625,15 +2624,14 @@ CAddressBookDialog::CAddressBookDialog(wxWindow* parent, const wxString& strInit\n     CRITICAL_BLOCK(pwalletMain->cs_mapAddressBook)\n     {\n         string strDefaultReceiving = (string)pframeMain->m_textCtrlAddress->GetValue();\n-        BOOST_FOREACH(const PAIRTYPE(string, string)& item, pwalletMain->mapAddressBook)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n         {\n-            string strAddress = item.first;\n+            const CBitcoinAddress& address = item.first;\n             string strName = item.second;\n-            uint160 hash160;\n-            bool fMine = (AddressToHash160(strAddress, hash160) && mapPubKeys.count(hash160));\n+            bool fMine = pwalletMain->HaveKey(address);\n             wxListCtrl* plistCtrl = fMine ? m_listCtrlReceiving : m_listCtrlSending;\n-            int nIndex = InsertLine(plistCtrl, strName, strAddress);\n-            if (strAddress == (fMine ? strDefaultReceiving : string(strInitSelected)))\n+            int nIndex = InsertLine(plistCtrl, strName, address.ToString());\n+            if (address.ToString() == (fMine ? strDefaultReceiving : string(strInitSelected)))\n                 plistCtrl->SetItemState(nIndex, wxLIST_STATE_SELECTED|wxLIST_STATE_FOCUSED, wxLIST_STATE_SELECTED|wxLIST_STATE_FOCUSED);\n         }\n     }\n@@ -2740,8 +2738,8 @@ void CAddressBookDialog::OnButtonCopy(wxCommandEvent& event)\n \n bool CAddressBookDialog::CheckIfMine(const string& strAddress, const string& strTitle)\n {\n-    uint160 hash160;\n-    bool fMine = (AddressToHash160(strAddress, hash160) && mapPubKeys.count(hash160));\n+    CBitcoinAddress address(strAddress);\n+    bool fMine = address.IsValid() && pwalletMain->HaveKey(address);\n     if (fMine)\n         wxMessageBox(_(\"This is one of your own addresses for receiving payments and cannot be entered in the address book.  \"), strTitle);\n     return fMine;\n@@ -2827,7 +2825,7 @@ void CAddressBookDialog::OnButtonNew(wxCommandEvent& event)\n                 return;\n \n             // Generate new key\n-            strAddress = PubKeyToAddress(pwalletMain->GetOrReuseKeyFromPool());\n+            strAddress = CBitcoinAddress(pwalletMain->GetOrReuseKeyFromPool()).ToString();\n \n             if (fWasLocked)\n                 pwalletMain->Lock();"
      },
      {
        "sha": "6d219ad6678bc27053b85b4dc5a3a300838de385",
        "filename": "src/uibase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/uibase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/uibase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uibase.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -367,7 +367,7 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \twxBoxSizer* bSizer102;\n \tbSizer102 = new wxBoxSizer( wxHORIZONTAL );\n \t\n-\tm_checkBoxUseProxy = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Connect through socks4 proxy: \"), wxDefaultPosition, wxDefaultSize, 0 );\n+\tm_checkBoxUseProxy = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Connect through socks4 proxy (requires restart to apply): \"), wxDefaultPosition, wxDefaultSize, 0 );\n \tbSizer102->Add( m_checkBoxUseProxy, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );\n \t\n \tbSizer69->Add( bSizer102, 1, wxEXPAND, 5 );"
      },
      {
        "sha": "8588201daea026eb467e27d20cbbfe3eb2f3a198",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -623,7 +623,10 @@ inline pthread_t CreateThread(void(*pfn)(void*), void* parg, bool fWantHandle=fa\n         return (pthread_t)0;\n     }\n     if (!fWantHandle)\n+    {\n+        pthread_detach(hthread);\n         return (pthread_t)-1;\n+    }\n     return hthread;\n }\n "
      },
      {
        "sha": "650b811caa7a69ebafb2ed82a23656651ec44ffb",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 32,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -124,7 +124,6 @@ class CCorruptAddress\n \n bool CWallet::EncryptWallet(const string& strWalletPassphrase)\n {\n-    CRITICAL_BLOCK(cs_mapPubKeys)\n     CRITICAL_BLOCK(cs_KeyStore)\n     CRITICAL_BLOCK(cs_vMasterKey)\n     CRITICAL_BLOCK(cs_pwalletdbEncryption)\n@@ -271,7 +270,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)\n             if (txout.scriptPubKey == scriptDefaultKey)\n             {\n                 SetDefaultKey(GetOrReuseKeyFromPool());\n-                SetAddressBookName(PubKeyToAddress(vchDefaultKey), \"\");\n+                SetAddressBookName(CBitcoinAddress(vchDefaultKey), \"\");\n             }\n         }\n \n@@ -407,8 +406,8 @@ int CWalletTx::GetRequestCount() const\n     return nRequests;\n }\n \n-void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, list<pair<string, int64> >& listReceived,\n-                           list<pair<string, int64> >& listSent, int64& nFee, string& strSentAccount) const\n+void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, list<pair<CBitcoinAddress, int64> >& listReceived,\n+                           list<pair<CBitcoinAddress, int64> >& listSent, int64& nFee, string& strSentAccount) const\n {\n     nGeneratedImmature = nGeneratedMature = nFee = 0;\n     listReceived.clear();\n@@ -436,14 +435,9 @@ void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, l\n     // but non-standard clients might (so return a list of address/amount pairs)\n     BOOST_FOREACH(const CTxOut& txout, vout)\n     {\n-        string address;\n-        uint160 hash160;\n+        CBitcoinAddress address;\n         vector<unsigned char> vchPubKey;\n-        if (ExtractHash160(txout.scriptPubKey, hash160))\n-            address = Hash160ToAddress(hash160);\n-        else if (ExtractPubKey(txout.scriptPubKey, NULL, vchPubKey))\n-            address = PubKeyToAddress(vchPubKey);\n-        else\n+        if (!ExtractAddress(txout.scriptPubKey, NULL, address))\n         {\n             printf(\"CWalletTx::GetAmounts: Unknown transaction type found, txid %s\\n\",\n                    this->GetHash().ToString().c_str());\n@@ -471,25 +465,25 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, int64& nGenerated, i\n     int64 allGeneratedImmature, allGeneratedMature, allFee;\n     allGeneratedImmature = allGeneratedMature = allFee = 0;\n     string strSentAccount;\n-    list<pair<string, int64> > listReceived;\n-    list<pair<string, int64> > listSent;\n+    list<pair<CBitcoinAddress, int64> > listReceived;\n+    list<pair<CBitcoinAddress, int64> > listSent;\n     GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount);\n \n     if (strAccount == \"\")\n         nGenerated = allGeneratedMature;\n     if (strAccount == strSentAccount)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(string,int64)& s, listSent)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64)& s, listSent)\n             nSent += s.second;\n         nFee = allFee;\n     }\n     CRITICAL_BLOCK(pwallet->cs_mapAddressBook)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(string,int64)& r, listReceived)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64)& r, listReceived)\n         {\n             if (pwallet->mapAddressBook.count(r.first))\n             {\n-                map<string, string>::const_iterator mi = pwallet->mapAddressBook.find(r.first);\n+                map<CBitcoinAddress, string>::const_iterator mi = pwallet->mapAddressBook.find(r.first);\n                 if (mi != pwallet->mapAddressBook.end() && (*mi).second == strAccount)\n                     nReceived += r.second;\n             }\n@@ -941,9 +935,17 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CW\n                     dPriority += (double)nCredit * pcoin.first->GetDepthInMainChain();\n                 }\n \n-                // Fill a vout back to self with any change\n-                int64 nChange = nValueIn - nTotalValue;\n-                if (nChange >= CENT)\n+                int64 nChange = nValueIn - nValue - nFeeRet;\n+                // if sub-cent change is required, the fee must be raised to at least MIN_TX_FEE\n+                // or until nChange becomes zero\n+                if (nFeeRet < MIN_TX_FEE && nChange > 0 && nChange < CENT)\n+                {\n+                    int64 nMoveToFee = min(nChange, MIN_TX_FEE - nFeeRet);\n+                    nChange -= nMoveToFee;\n+                    nFeeRet += nMoveToFee;\n+                }\n+\n+                if (nChange > 0)\n                 {\n                     // Note: We use a new key here to keep it from being obvious which side is the change.\n                     //  The drawback is that by not reusing a previous key, the change may be lost if a\n@@ -958,7 +960,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CW\n \n                     // Fill a vout to ourself, using same address type as the payment\n                     CScript scriptChange;\n-                    if (vecSend[0].first.GetBitcoinAddressHash160() != 0)\n+                    if (vecSend[0].first.GetBitcoinAddress().IsValid())\n                         scriptChange.SetBitcoinAddress(vchPubKey);\n                     else\n                         scriptChange << vchPubKey << OP_CHECKSIG;\n@@ -1107,7 +1109,7 @@ string CWallet::SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew,\n \n \n // requires cs_main lock\n-string CWallet::SendMoneyToBitcoinAddress(string strAddress, int64 nValue, CWalletTx& wtxNew, bool fAskFee)\n+string CWallet::SendMoneyToBitcoinAddress(const CBitcoinAddress& address, int64 nValue, CWalletTx& wtxNew, bool fAskFee)\n {\n     // Check amount\n     if (nValue <= 0)\n@@ -1117,8 +1119,7 @@ string CWallet::SendMoneyToBitcoinAddress(string strAddress, int64 nValue, CWall\n \n     // Parse bitcoin address\n     CScript scriptPubKey;\n-    if (!scriptPubKey.SetBitcoinAddress(strAddress))\n-        return _(\"Invalid bitcoin address\");\n+    scriptPubKey.SetBitcoinAddress(address);\n \n     return SendMoney(scriptPubKey, nValue, wtxNew, fAskFee);\n }\n@@ -1136,13 +1137,13 @@ int CWallet::LoadWallet(bool& fFirstRunRet)\n         return nLoadWalletRet;\n     fFirstRunRet = vchDefaultKey.empty();\n \n-    if (!HaveKey(vchDefaultKey))\n+    if (!HaveKey(Hash160(vchDefaultKey)))\n     {\n         // Create new keyUser and set as default key\n         RandAddSeedPerfmon();\n \n         SetDefaultKey(GetOrReuseKeyFromPool());\n-        if (!SetAddressBookName(PubKeyToAddress(vchDefaultKey), \"\"))\n+        if (!SetAddressBookName(CBitcoinAddress(vchDefaultKey), \"\"))\n             return DB_LOAD_FAIL;\n     }\n \n@@ -1151,20 +1152,20 @@ int CWallet::LoadWallet(bool& fFirstRunRet)\n }\n \n \n-bool CWallet::SetAddressBookName(const string& strAddress, const string& strName)\n+bool CWallet::SetAddressBookName(const CBitcoinAddress& address, const string& strName)\n {\n-    mapAddressBook[strAddress] = strName;\n+    mapAddressBook[address] = strName;\n     if (!fFileBacked)\n         return false;\n-    return CWalletDB(strWalletFile).WriteName(strAddress, strName);\n+    return CWalletDB(strWalletFile).WriteName(address.ToString(), strName);\n }\n \n-bool CWallet::DelAddressBookName(const string& strAddress)\n+bool CWallet::DelAddressBookName(const CBitcoinAddress& address)\n {\n-    mapAddressBook.erase(strAddress);\n+    mapAddressBook.erase(address);\n     if (!fFileBacked)\n         return false;\n-    return CWalletDB(strWalletFile).EraseName(strAddress);\n+    return CWalletDB(strWalletFile).EraseName(address.ToString());\n }\n \n \n@@ -1263,7 +1264,7 @@ void CWallet::ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool)\n         setKeyPool.erase(setKeyPool.begin());\n         if (!walletdb.ReadPool(nIndex, keypool))\n             throw runtime_error(\"ReserveKeyFromKeyPool() : read failed\");\n-        if (!HaveKey(keypool.vchPubKey))\n+        if (!HaveKey(Hash160(keypool.vchPubKey)))\n             throw runtime_error(\"ReserveKeyFromKeyPool() : unknown key in key pool\");\n         assert(!keypool.vchPubKey.empty());\n         printf(\"keypool reserve %\"PRI64d\"\\n\", nIndex);"
      },
      {
        "sha": "abe22f472c2396afcdba449e58165af7930d1730",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -53,7 +53,7 @@ class CWallet : public CCryptoKeyStore\n     std::map<uint256, int> mapRequestCount;\n     mutable CCriticalSection cs_mapRequestCount;\n \n-    std::map<std::string, std::string> mapAddressBook;\n+    std::map<CBitcoinAddress, std::string> mapAddressBook;\n     mutable CCriticalSection cs_mapAddressBook;\n \n     std::vector<unsigned char> vchDefaultKey;\n@@ -81,7 +81,7 @@ class CWallet : public CCryptoKeyStore\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n     bool BroadcastTransaction(CWalletTx& wtxNew);\n     std::string SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n-    std::string SendMoneyToBitcoinAddress(std::string strAddress, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n+    std::string SendMoneyToBitcoinAddress(const CBitcoinAddress& address, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n \n     bool TopUpKeyPool();\n     void ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool);\n@@ -104,10 +104,10 @@ class CWallet : public CCryptoKeyStore\n     }\n     bool IsChange(const CTxOut& txout) const\n     {\n-        std::vector<unsigned char> vchPubKey;\n-        if (ExtractPubKey(txout.scriptPubKey, this, vchPubKey))\n+        CBitcoinAddress address;\n+        if (ExtractAddress(txout.scriptPubKey, this, address))\n             CRITICAL_BLOCK(cs_mapAddressBook)\n-                if (!mapAddressBook.count(PubKeyToAddress(vchPubKey)))\n+                if (!mapAddressBook.count(address))\n                     return true;\n         return false;\n     }\n@@ -171,10 +171,10 @@ class CWallet : public CCryptoKeyStore\n //    bool BackupWallet(const std::string& strDest);\n \n     // requires cs_mapAddressBook lock\n-    bool SetAddressBookName(const std::string& strAddress, const std::string& strName);\n+    bool SetAddressBookName(const CBitcoinAddress& address, const std::string& strName);\n \n     // requires cs_mapAddressBook lock\n-    bool DelAddressBookName(const std::string& strAddress);\n+    bool DelAddressBookName(const CBitcoinAddress& address);\n \n     void UpdatedTransaction(const uint256 &hashTx)\n     {\n@@ -464,8 +464,8 @@ class CWalletTx : public CMerkleTx\n         return nChangeCached;\n     }\n \n-    void GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, std::list<std::pair<std::string /* address */, int64> >& listReceived,\n-                    std::list<std::pair<std::string /* address */, int64> >& listSent, int64& nFee, std::string& strSentAccount) const;\n+    void GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, std::list<std::pair<CBitcoinAddress, int64> >& listReceived,\n+                    std::list<std::pair<CBitcoinAddress, int64> >& listSent, int64& nFee, std::string& strSentAccount) const;\n \n     void GetAccountAmounts(const std::string& strAccount, int64& nGenerated, int64& nReceived, \n                            int64& nSent, int64& nFee) const;"
      }
    ]
  },
  {
    "sha": "06c55f8d7da2e7d7ab8e029797c2a936b5152761",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmM1NWY4ZDdkYTJlN2Q3YWI4ZTAyOTc5N2MyYTkzNmI1MTUyNzYx",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-08-31T16:55:08Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-08-31T16:55:08Z"
      },
      "message": "Merge branch 'master' of git://github.com/bitcoin/bitcoin into forceresendtx",
      "tree": {
        "sha": "529add0f2fbf2d89763086386a9bfff06f337e49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/529add0f2fbf2d89763086386a9bfff06f337e49"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06c55f8d7da2e7d7ab8e029797c2a936b5152761",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06c55f8d7da2e7d7ab8e029797c2a936b5152761",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06c55f8d7da2e7d7ab8e029797c2a936b5152761",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06c55f8d7da2e7d7ab8e029797c2a936b5152761/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/155cfbbb8a119715e6ac39b123b9a0c4725e007d"
      },
      {
        "sha": "21189a42a735ff66166c17c53eb44998346059d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21189a42a735ff66166c17c53eb44998346059d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/21189a42a735ff66166c17c53eb44998346059d6"
      }
    ],
    "stats": {
      "total": 3185,
      "additions": 1894,
      "deletions": 1291
    },
    "files": [
      {
        "sha": "61ea50e4fed266a01622cad5c6a154d40fccca02",
        "filename": "contrib/boost-win32.yml",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/boost-win32.yml?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: \"boost\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+packages: \n+- \"mingw32\"\n+- \"faketime\"\n+- \"zip\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"boost_1_47_0.tar.bz2\"\n+script: |\n+  TMPDIR=\"$HOME/tmpdir\"\n+  mkdir -p $TMPDIR/bin/$GBUILD_BITS $TMPDIR/include\n+  tar xjf boost_1_47_0.tar.bz2\n+  cd boost_1_47_0\n+  echo \"using gcc : 4.4 : i586-mingw32msvc-g++\n+        :\n+        <rc>i586-mingw32msvc-windres\n+        <archiver>i586-mingw32msvc-ar\n+        <cxxflags>-frandom-seed=boost1\n+  ;\" > user-config.jam\n+  ./bootstrap.sh --without-icu\n+  ./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete $MAKEOPTS stage\n+  for lib in chrono date_time exception filesystem graph iostreams math_c99f math_c99l math_c99 math_tr1f math_tr1l math_tr1 prg_exec_monitor program_options random regex serialization signals system test_exec_monitor thread_win32 unit_test_framework wave wserialization; do\n+      mkdir $lib\n+      (cd $lib ; ar xf ../stage/lib/libboost_${lib}-mt-s.a)\n+      mv $lib $TMPDIR/bin/$GBUILD_BITS\n+  done\n+  cp -a boost $TMPDIR/include\n+  cd $TMPDIR\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  zip -r boost-win32-1.47.0-gitian.zip *\n+  cp boost-win32-1.47.0-gitian.zip $OUTDIR"
      },
      {
        "sha": "963c38139332aa886b27867b71cbf7157c0eb44f",
        "filename": "contrib/gitian-win32.yml",
        "status": "modified",
        "additions": 42,
        "deletions": 35,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-win32.yml?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -9,25 +9,44 @@ packages:\n - \"git-core\"\n - \"unzip\"\n - \"nsis\"\n+- \"faketime\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"wxWidgets-2.9.1.tar.bz2\"\n-- \"boost_1_43_0.tar.bz2\"\n+- \"wxwidgets-win32-2.9.2-gitian.zip\"\n+- \"boost-win32-1.47.0-gitian.zip\"\n - \"openssl-1.0.0d.tar.gz\"\n-- \"db-4.7.25.NC.tar.gz\"\n-- \"upnpc-exe-win32-20110215.zip\"\n-- \"miniupnpc-1.5.20110215.tar.gz\"\n-- \"WSPiApi.h\"\n+- \"db-4.8.30.NC.tar.gz\"\n+- \"miniupnpc-1.6.tar.gz\"\n script: |\n   #\n-  tar xjf wxWidgets-2.9.1.tar.bz2\n-  cd wxWidgets-2.9.1\n-  ./configure --host=i586-mingw32msvc --build=i686-linux --disable-shared --enable-monolithic --without-libpng --disable-svg\n-  perl -i -p -e \"s/__TIME__/\\\"$REFERENCE_TIME\\\"/;s/__DATE__/\\\"$REFERENCE_DATE\\\"/\" include/wx/chartype.h\n-  make $MAKEOPTS\n+  mkdir wxWidgets-2.9.2\n+  cd wxWidgets-2.9.2\n+  mkdir lib\n+  unzip ../wxwidgets-win32-2.9.2-gitian.zip\n+  cd bin/$GBUILD_BITS\n+  for lib in wx_mswu; do\n+    i586-mingw32msvc-ar rc ../../lib/lib${lib}-2.9-i586-mingw32msvc.a $lib/*.o\n+    i586-mingw32msvc-ranlib ../../lib/lib${lib}-2.9-i586-mingw32msvc.a\n+  done\n+  cp -a wx ../../lib\n+  cd ../..\n+  mv include/wx-2.9/wx include\n+  cd ..\n+  #\n+  mkdir boost_1_47_0\n+  cd boost_1_47_0\n+  mkdir -p stage/lib\n+  unzip ../boost-win32-1.47.0-gitian.zip\n+  cd bin/$GBUILD_BITS\n+  for lib in *; do\n+    i586-mingw32msvc-ar rc ../../stage/lib/libboost_${lib}-mt-s.a $lib/*.o\n+    i586-mingw32msvc-ranlib ../../stage/lib/libboost_${lib}-mt-s.a\n+  done\n+  cd ../..\n+  mv include/boost .\n   cd ..\n   #\n   tar xzf openssl-1.0.0d.tar.gz\n@@ -36,33 +55,19 @@ script: |\n   make\n   cd ..\n   #\n-  tar xzf db-4.7.25.NC.tar.gz\n-  cd db-4.7.25.NC/build_unix\n+  tar xzf db-4.8.30.NC.tar.gz\n+  cd db-4.8.30.NC/build_unix\n   ../dist/configure --enable-mingw --enable-cxx --host=i586-mingw32msvc CFLAGS=\"-I/usr/i586-mingw32msvc/include\"\n   make $MAKEOPTS\n   cd ../..\n   #\n-  tar xjf boost_1_43_0.tar.bz2\n-  cd boost_1_43_0\n-  echo \"using gcc : 4.4 : i586-mingw32msvc-g++\n-        :\n-        <rc>i586-mingw32msvc-windres\n-        <archiver>i586-mingw32msvc-ar\n-  ;\" > user-config.jam\n-  ./bootstrap.sh --without-icu\n-  ./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete $MAKEOPTS stage\n+  tar xzf miniupnpc-1.6.tar.gz\n+  cd miniupnpc-1.6\n+  sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw\n+  sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw\n+  make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar\n   cd ..\n-  #\n-  mkdir upnpc-exe-win32-20110215\n-  cd upnpc-exe-win32-20110215\n-  unzip ../upnpc-exe-win32-20110215.zip\n-  mkdir miniupnpc\n-  cd miniupnpc\n-  tar xzf ../../miniupnpc-1.5.20110215.tar.gz\n-  mv ./miniupnpc-1.5.20110215/* ./\n-  cd ../..\n-  #\n-  cp WSPiApi.h $HOME/build\n+  mv miniupnpc-1.6 miniupnpc\n   #\n   cd bitcoin\n   mkdir -p $OUTDIR/src\n@@ -72,8 +77,10 @@ script: |\n   cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt\n   cp $OUTDIR/src/COPYING $OUTDIR/license.txt\n   cd src\n-  sed 's/$(DEBUGFLAGS)//' < makefile.linux-mingw > makefile.linux-mingw.2 && mv makefile.linux-mingw.2 makefile.linux-mingw\n-  sed 's|//#include <WSPiApi.h>|#include <WSPiApi.h>|' < net.cpp > net.cpp.2 && mv net.cpp.2 net.cpp\n+  sed 's/$(DEBUGFLAGS)/-frandom-seed=bitcoin/' -i makefile.linux-mingw\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n   make -f makefile.linux-mingw $MAKEOPTS DEPSDIR=$HOME/build bitcoin.exe USE_UPNP=1\n   make -f makefile.linux-mingw $MAKEOPTS DEPSDIR=$HOME/build bitcoind.exe USE_UPNP=0\n   i586-mingw32msvc-strip bitcoin.exe"
      },
      {
        "sha": "9f03ba1bc4136b493a9f4deb0d57341b5f3284a8",
        "filename": "contrib/gitian.yml",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian.yml?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -6,40 +6,40 @@ architectures:\n - \"i386\"\n - \"amd64\"\n packages: \n-- \"libdb4.7++-dev\"\n+- \"libdb4.8++-dev\"\n - \"libxxf86vm-dev\"\n - \"libgtk2.0-dev\"\n - \"libboost-all-dev\"\n - \"libssl-dev\"\n - \"git-core\"\n+- \"unzip\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"wxWidgets-2.9.1.tar.bz2\"\n-- \"miniupnpc-1.5.tar.gz\"\n-- \"toplevel.h.diff\"\n-- \"toplevel.cpp.diff\"\n+- \"wxWidgets-2.9.2-gitian.zip\"\n+- \"miniupnpc-1.6.tar.gz\"\n script: |\n   INSTDIR=\"$HOME/install\"\n   export LIBRARY_PATH=\"$INSTDIR/lib\"\n   #\n-  tar xzf miniupnpc-1.5.tar.gz\n-  cd miniupnpc-1.5\n+  tar xzf miniupnpc-1.6.tar.gz\n+  cd miniupnpc-1.6\n   INSTALLPREFIX=$INSTDIR make $MAKEOPTS install\n   cd ..\n   #\n-  tar xjf wxWidgets-2.9.1.tar.bz2\n-  cd wxWidgets-2.9.1\n-  cd include/wx/gtk\n-  patch < ../../../../toplevel.h.diff\n-  cd ../../../src/gtk\n-  patch < ../../../toplevel.cpp.diff\n-  cd ../..\n-  ./configure --prefix=$INSTDIR --enable-monolithic --disable-shared\n-  perl -i -p -e \"s/__TIME__/\\\"$REFERENCE_TIME\\\"/;s/__DATE__/\\\"$REFERENCE_DATE\\\"/\" include/wx/chartype.h\n-  make $MAKEOPTS install\n+  mkdir -p $INSTDIR/bin $INSTDIR/lib/wx $INSTDIR/include\n+  mkdir wxWidgets-2.9.2\n+  cd wxWidgets-2.9.2\n+  unzip ../wxWidgets-2.9.2-gitian.zip\n+  cp -a bin/$GBUILD_BITS/wx/config/gtk2-unicode-static-2.9 $INSTDIR/bin/wx-config\n+  for lib in wx_gtk2u wxregexu wxtiff; do\n+    ar rc $INSTDIR/lib/lib${lib}-2.9.a bin/$GBUILD_BITS/$lib/*.o\n+    ranlib $INSTDIR/lib/lib${lib}-2.9.a\n+  done\n+  cp -a include/wx-2.9/* $INSTDIR/include\n+  cp -a bin/$GBUILD_BITS/wx/include $INSTDIR/lib/wx\n   cd ..\n   #\n   cd bitcoin\n@@ -50,7 +50,7 @@ script: |\n   cp $OUTDIR/src/doc/README $OUTDIR\n   cp $OUTDIR/src/COPYING $OUTDIR\n   cd src\n-  sed 's/$(DEBUGFLAGS)//' < makefile.unix > makefile.unix.2 && mv makefile.unix.2 makefile.unix\n+  sed 's/$(DEBUGFLAGS)//' -i makefile.unix\n   PATH=$INSTDIR/bin:$PATH make -f makefile.unix CXX=\"g++ -I$INSTDIR/include -L$INSTDIR/lib\" $MAKEOPTS bitcoin USE_UPNP=1\n   PATH=$INSTDIR/bin:$PATH make -f makefile.unix CXX=\"g++ -I$INSTDIR/include -L$INSTDIR/lib\" $MAKEOPTS bitcoind USE_UPNP=0\n   mkdir -p $OUTDIR/bin/$GBUILD_BITS"
      },
      {
        "sha": "d1596575dd1bd86428a46296383ef4a26d3b25ed",
        "filename": "contrib/pyminer/README",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/pyminer/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/pyminer/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/README?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -0,0 +1,6 @@\n+\n+This is a 'getwork' CPU mining client for bitcoin.\n+\n+It is pure-python, and therefore very, very slow.  The purpose is to\n+provide a reference implementation of a miner, for study.\n+"
      },
      {
        "sha": "103e7c1372598d2a4d2ef758aa39dc70b52560fc",
        "filename": "contrib/pyminer/example-config.cfg",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/pyminer/example-config.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/pyminer/example-config.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/example-config.cfg?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -0,0 +1,32 @@\n+\n+#\n+# RPC login details\n+#\n+host=127.0.0.1\n+port=8332\n+\n+rpcuser=myusername\n+rpcpass=mypass\n+\n+\n+#\n+# mining details\n+#\n+\n+threads=4\n+\n+# periodic rate for requesting new work, if solution not found\n+scantime=60\n+\n+\n+#\n+# misc.\n+#\n+\n+# not really used right now\n+logdir=/tmp/pyminer\n+\n+# set to 1, to enable hashmeter output\n+hashmeter=0\n+\n+"
      },
      {
        "sha": "2887aba591f06eaa11798eb6489eadc1c594ee47",
        "filename": "contrib/pyminer/pyminer.py",
        "status": "added",
        "additions": 252,
        "deletions": 0,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/pyminer/pyminer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/pyminer/pyminer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/pyminer.py?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -0,0 +1,252 @@\n+#!/usr/bin/python\n+#\n+# Copyright (c) 2011 The Bitcoin developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file license.txt or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+import time\n+import json\n+import pprint\n+import hashlib\n+import struct\n+import re\n+import base64\n+import httplib\n+import sys\n+from multiprocessing import Process\n+\n+ERR_SLEEP = 15\n+MAX_NONCE = 1000000L\n+\n+settings = {}\n+pp = pprint.PrettyPrinter(indent=4)\n+\n+class BitcoinRPC:\n+\tOBJID = 1\n+\n+\tdef __init__(self, host, port, username, password):\n+\t\tauthpair = \"%s:%s\" % (username, password)\n+\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n+\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n+\tdef rpc(self, method, params=None):\n+\t\tself.OBJID += 1\n+\t\tobj = { 'version' : '1.1',\n+\t\t\t'method' : method,\n+\t\t\t'id' : self.OBJID }\n+\t\tif params is None:\n+\t\t\tobj['params'] = []\n+\t\telse:\n+\t\t\tobj['params'] = params\n+\t\tself.conn.request('POST', '/', json.dumps(obj),\n+\t\t\t{ 'Authorization' : self.authhdr,\n+\t\t\t  'Content-type' : 'application/json' })\n+\n+\t\tresp = self.conn.getresponse()\n+\t\tif resp is None:\n+\t\t\tprint \"JSON-RPC: no response\"\n+\t\t\treturn None\n+\n+\t\tbody = resp.read()\n+\t\tresp_obj = json.loads(body)\n+\t\tif resp_obj is None:\n+\t\t\tprint \"JSON-RPC: cannot JSON-decode body\"\n+\t\t\treturn None\n+\t\tif 'error' in resp_obj and resp_obj['error'] != None:\n+\t\t\treturn resp_obj['error']\n+\t\tif 'result' not in resp_obj:\n+\t\t\tprint \"JSON-RPC: no result in object\"\n+\t\t\treturn None\n+\n+\t\treturn resp_obj['result']\n+\tdef getblockcount(self):\n+\t\treturn self.rpc('getblockcount')\n+\tdef getwork(self, data=None):\n+\t\treturn self.rpc('getwork', data)\n+\n+def uint32(x):\n+\treturn x & 0xffffffffL\n+\n+def bytereverse(x):\n+\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+\t\t\t(((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+\n+def bufreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n+\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n+\treturn ''.join(out_words)\n+\n+def wordreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tout_words.append(in_buf[i:i+4])\n+\tout_words.reverse()\n+\treturn ''.join(out_words)\n+\n+class Miner:\n+\tdef __init__(self, id):\n+\t\tself.id = id\n+\t\tself.max_nonce = MAX_NONCE\n+\n+\tdef work(self, datastr, targetstr):\n+\t\t# decode work data hex string to binary\n+\t\tstatic_data = datastr.decode('hex')\n+\t\tstatic_data = bufreverse(static_data)\n+\n+\t\t# the first 76b of 80b do not change\n+\t\tblk_hdr = static_data[:76]\n+\n+\t\t# decode 256-bit target value\n+\t\ttargetbin = targetstr.decode('hex')\n+\t\ttargetbin = targetbin[::-1]\t# byte-swap and dword-swap\n+\t\ttargetbin_str = targetbin.encode('hex')\n+\t\ttarget = long(targetbin_str, 16)\n+\n+\t\t# pre-hash first 76b of block header\n+\t\tstatic_hash = hashlib.sha256()\n+\t\tstatic_hash.update(blk_hdr)\n+\n+\t\tfor nonce in xrange(self.max_nonce):\n+\n+\t\t\t# encode 32-bit nonce value\n+\t\t\tnonce_bin = struct.pack(\"<I\", nonce)\n+\n+\t\t\t# hash final 4b, the nonce value\n+\t\t\thash1_o = static_hash.copy()\n+\t\t\thash1_o.update(nonce_bin)\n+\t\t\thash1 = hash1_o.digest()\n+\n+\t\t\t# sha256 hash of sha256 hash\n+\t\t\thash_o = hashlib.sha256()\n+\t\t\thash_o.update(hash1)\n+\t\t\thash = hash_o.digest()\n+\n+\t\t\t# quick test for winning solution: high 32 bits zero?\n+\t\t\tif hash[-4:] != '\\0\\0\\0\\0':\n+\t\t\t\tcontinue\n+\n+\t\t\t# convert binary hash to 256-bit Python long\n+\t\t\thash = bufreverse(hash)\n+\t\t\thash = wordreverse(hash)\n+\n+\t\t\thash_str = hash.encode('hex')\n+\t\t\tl = long(hash_str, 16)\n+\n+\t\t\t# proof-of-work test:  hash < target\n+\t\t\tif l < target:\n+\t\t\t\tprint time.asctime(), \"PROOF-OF-WORK found: %064x\" % (l,)\n+\t\t\t\treturn (nonce + 1, nonce_bin)\n+\t\t\telse:\n+\t\t\t\tprint time.asctime(), \"PROOF-OF-WORK false positive %064x\" % (l,)\n+#\t\t\t\treturn (nonce + 1, nonce_bin)\n+\n+\t\treturn (nonce + 1, None)\n+\n+\tdef submit_work(self, rpc, original_data, nonce_bin):\n+\t\tnonce_bin = bufreverse(nonce_bin)\n+\t\tnonce = nonce_bin.encode('hex')\n+\t\tsolution = original_data[:152] + nonce + original_data[160:256]\n+\t\tparam_arr = [ solution ]\n+\t\tresult = rpc.getwork(param_arr)\n+\t\tprint time.asctime(), \"--> Upstream RPC result:\", result\n+\n+\tdef iterate(self, rpc):\n+\t\twork = rpc.getwork()\n+\t\tif work is None:\n+\t\t\ttime.sleep(ERR_SLEEP)\n+\t\t\treturn\n+\t\tif 'data' not in work or 'target' not in work:\n+\t\t\ttime.sleep(ERR_SLEEP)\n+\t\t\treturn\n+\n+\t\ttime_start = time.time()\n+\n+\t\t(hashes_done, nonce_bin) = self.work(work['data'],\n+\t\t\t\t\t\t     work['target'])\n+\n+\t\ttime_end = time.time()\n+\t\ttime_diff = time_end - time_start\n+\n+\t\tself.max_nonce = long(\n+\t\t\t(hashes_done * settings['scantime']) / time_diff)\n+\t\tif self.max_nonce > 0xfffffffaL:\n+\t\t\tself.max_nonce = 0xfffffffaL\n+\n+\t\tif settings['hashmeter']:\n+\t\t\tprint \"HashMeter(%d): %d hashes, %.2f Khash/sec\" % (\n+\t\t\t      self.id, hashes_done,\n+\t\t\t      (hashes_done / 1000.0) / time_diff)\n+\n+\t\tif nonce_bin is not None:\n+\t\t\tself.submit_work(rpc, work['data'], nonce_bin)\n+\n+\tdef loop(self):\n+\t\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\t\t\t\t settings['rpcuser'], settings['rpcpass'])\n+\t\tif rpc is None:\n+\t\t\treturn\n+\n+\t\twhile True:\n+\t\t\tself.iterate(rpc)\n+\n+def miner_thread(id):\n+\tminer = Miner(id)\n+\tminer.loop()\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint \"Usage: pyminer.py CONFIG-FILE\"\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'host' not in settings:\n+\t\tsettings['host'] = '127.0.0.1'\n+\tif 'port' not in settings:\n+\t\tsettings['port'] = 8332\n+\tif 'threads' not in settings:\n+\t\tsettings['threads'] = 1\n+\tif 'hashmeter' not in settings:\n+\t\tsettings['hashmeter'] = 0\n+\tif 'scantime' not in settings:\n+\t\tsettings['scantime'] = 30L\n+\tif 'rpcuser' not in settings or 'rpcpass' not in settings:\n+\t\tprint \"Missing username and/or password in cfg file\"\n+\t\tsys.exit(1)\n+\n+\tsettings['port'] = int(settings['port'])\n+\tsettings['threads'] = int(settings['threads'])\n+\tsettings['hashmeter'] = int(settings['hashmeter'])\n+\tsettings['scantime'] = long(settings['scantime'])\n+\n+\tthr_list = []\n+\tfor thr_id in range(settings['threads']):\n+\t\tp = Process(target=miner_thread, args=(thr_id,))\n+\t\tp.start()\n+\t\tthr_list.append(p)\n+\t\ttime.sleep(1)\t\t\t# stagger threads\n+\n+\tprint settings['threads'], \"mining threads started\"\n+\n+\tprint time.asctime(), \"Miner Starts - %s:%s\" % (settings['host'], settings['port'])\n+\ttry:\n+\t\tfor thr_proc in thr_list:\n+\t\t\tthr_proc.join()\n+\texcept KeyboardInterrupt:\n+\t\tpass\n+\tprint time.asctime(), \"Miner Stops - %s:%s\" % (settings['host'], settings['port'])\n+"
      },
      {
        "sha": "2afb4a9e91aea19fc40bce6187538ed3871ad817",
        "filename": "contrib/wx-patches/README",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/contrib/wx-patches/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/contrib/wx-patches/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wx-patches/README?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1,4 +0,0 @@\n-This folder contains two patches which are applied to wxWidgets\n-2.9.1 before building the wxWidgets which is used for release\n-versions of bitcoin.  They make the GUI show up on newer OSs\n-with new libgtks, such as Ubuntu 11.04."
      },
      {
        "sha": "359abf28d44f28cb945ab90296108e81bf997d03",
        "filename": "contrib/wx-patches/toplevel.cpp.diff",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/contrib/wx-patches/toplevel.cpp.diff",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/contrib/wx-patches/toplevel.cpp.diff",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wx-patches/toplevel.cpp.diff?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1,86 +0,0 @@\n---- /wxWidgets/trunk/src/gtk/toplevel.cpp (revision 67326)\r\n-+++ /wxWidgets/trunk/src/gtk/toplevel.cpp (revision 67496)\r\n-@@ -72,4 +72,8 @@\r\n- // send any activate events at all\r\n- static int g_sendActivateEvent = -1;\r\n-+\r\n-+// Whether _NET_REQUEST_FRAME_EXTENTS support is working\r\n-+//   0 == not tested yet, 1 == working, 2 == broken\r\n-+static int gs_requestFrameExtentsStatus;\r\n- \r\n- //-----------------------------------------------------------------------------\r\n-@@ -432,4 +436,12 @@\r\n-     if (event->state == GDK_PROPERTY_NEW_VALUE && event->atom == property)\r\n-     {\r\n-+        if (win->m_netFrameExtentsTimerId)\r\n-+        {\r\n-+            // WM support for _NET_REQUEST_FRAME_EXTENTS is working\r\n-+            gs_requestFrameExtentsStatus = 1;\r\n-+            g_source_remove(win->m_netFrameExtentsTimerId);\r\n-+            win->m_netFrameExtentsTimerId = 0;\r\n-+        }\r\n-+\r\n-         wxSize decorSize = win->m_decorSize;\r\n-         int left, right, top, bottom;\r\n-@@ -439,4 +451,22 @@\r\n-         win->GTKUpdateDecorSize(decorSize);\r\n-     }\r\n-+    return false;\r\n-+}\r\n-+}\r\n-+\r\n-+extern \"C\" {\r\n-+static gboolean request_frame_extents_timeout(void* data)\r\n-+{\r\n-+    // WM support for _NET_REQUEST_FRAME_EXTENTS is broken\r\n-+    gs_requestFrameExtentsStatus = 2;\r\n-+    gdk_threads_enter();\r\n-+    wxTopLevelWindowGTK* win = static_cast<wxTopLevelWindowGTK*>(data);\r\n-+    win->m_netFrameExtentsTimerId = 0;\r\n-+    wxSize decorSize = win->m_decorSize;\r\n-+    int left, right, top, bottom;\r\n-+    if (wxGetFrameExtents(gtk_widget_get_window(win->m_widget), &left, &right, &top, &bottom))\r\n-+        decorSize.Set(left + right, top + bottom);\r\n-+    win->GTKUpdateDecorSize(decorSize);\r\n-+    gdk_threads_leave();\r\n-     return false;\r\n- }\r\n-@@ -459,4 +489,5 @@\r\n-     m_deferShowAllowed = true;\r\n-     m_updateDecorSize = true;\r\n-+    m_netFrameExtentsTimerId = 0;\r\n- \r\n-     m_urgency_hint = -2;\r\n-@@ -811,5 +842,6 @@\r\n-     if (deferShow)\r\n-     {\r\n--        deferShow = m_deferShowAllowed && !GTK_WIDGET_REALIZED(m_widget);\r\n-+        deferShow = gs_requestFrameExtentsStatus != 2 &&\r\n-+            m_deferShowAllowed && !gtk_widget_get_realized(m_widget);\r\n-         if (deferShow)\r\n-         {\r\n-@@ -829,11 +861,4 @@\r\n-             // GetSize()/SetSize() because it makes window bigger between each\r\n-             // restore and save.\r\n--            m_updateDecorSize = deferShow;\r\n--        }\r\n--        if (deferShow)\r\n--        {\r\n--            // Fluxbox support for _NET_REQUEST_FRAME_EXTENTS is broken\r\n--            const char* name = gdk_x11_screen_get_window_manager_name(screen);\r\n--            deferShow = strcmp(name, \"Fluxbox\") != 0;\r\n-             m_updateDecorSize = deferShow;\r\n-         }\r\n-@@ -875,4 +900,12 @@\r\n-             (XEvent*)&xevent);\r\n- \r\n-+        if (gs_requestFrameExtentsStatus == 0)\r\n-+        {\r\n-+            // if WM does not respond to request within 1 second,\r\n-+            // we assume support for _NET_REQUEST_FRAME_EXTENTS is not working\r\n-+            m_netFrameExtentsTimerId =\r\n-+                g_timeout_add(1000, request_frame_extents_timeout, this);\r\n-+        }\r\n-+\r\n-         // defer calling gtk_widget_show()\r\n-         m_isShown = true;\r"
      },
      {
        "sha": "c2718d46377de80c47eed6d85626b04d52a3a71d",
        "filename": "contrib/wx-patches/toplevel.h.diff",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/155cfbbb8a119715e6ac39b123b9a0c4725e007d/contrib/wx-patches/toplevel.h.diff",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/155cfbbb8a119715e6ac39b123b9a0c4725e007d/contrib/wx-patches/toplevel.h.diff",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wx-patches/toplevel.h.diff?ref=155cfbbb8a119715e6ac39b123b9a0c4725e007d",
        "patch": "@@ -1,9 +0,0 @@\n---- /wxWidgets/trunk/include/wx/gtk/toplevel.h (revision 65373)\r\n-+++ /wxWidgets/trunk/include/wx/gtk/toplevel.h (revision 67496)\r\n-@@ -114,4 +114,6 @@\r\n-     // wxUSER_ATTENTION_ERROR difference, -2 for no hint, -1 for ERROR hint, rest for GtkTimeout handle.\r\n-     int m_urgency_hint;\r\n-+    // timer for detecting WM with broken _NET_REQUEST_FRAME_EXTENTS handling\r\n-+    unsigned m_netFrameExtentsTimerId;\r\n- \r\n-     // return the size of the window without WM decorations\r"
      },
      {
        "sha": "3d49d7b35e403b75fe944675e7d305a320f31d6d",
        "filename": "contrib/wxwidgets-win32.yml",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/wxwidgets-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/wxwidgets-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wxwidgets-win32.yml?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -0,0 +1,40 @@\n+---\n+name: \"wxwidgets\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+packages: \n+- \"mingw32\"\n+- \"faketime\"\n+- \"zip\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"wxWidgets-2.9.2.tar.bz2\"\n+script: |\n+  INSTDIR=\"$HOME/install\"\n+  TMPDIR=\"$HOME/tmpdir\"\n+  export LIBRARY_PATH=\"$INSTDIR/lib\"\n+  #\n+  tar xjf wxWidgets-2.9.2.tar.bz2\n+  cd wxWidgets-2.9.2\n+  CXXFLAGS=-frandom-seed=wx1 ./configure --host=i586-mingw32msvc --build=i686-linux --prefix=$INSTDIR --disable-shared --enable-monolithic --without-libpng --disable-svg\n+  perl -i -p -e \"s/__TIME__/\\\"$REFERENCE_TIME\\\"/;s/__DATE__/\\\"$REFERENCE_DATE\\\"/\" include/wx/chartype.h\n+  make $MAKEOPTS install\n+  mkdir $TMPDIR\n+  cd $TMPDIR\n+  cp -af $INSTDIR/include .\n+  mkdir -p $TMPDIR/bin/$GBUILD_BITS\n+  cd $TMPDIR/bin/$GBUILD_BITS\n+  cp -af $INSTDIR/lib/wx .\n+  for lib in wx_mswu; do\n+      mkdir $lib\n+      (cd $lib ; ar xf $INSTDIR/lib/lib${lib}-2.9-i586-mingw32msvc.a)\n+  done\n+  chmod -R +w $TMPDIR\n+  cd $TMPDIR\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  zip -r wxwidgets-win32-2.9.2-gitian.zip *\n+  cp wxwidgets-win32-2.9.2-gitian.zip $OUTDIR"
      },
      {
        "sha": "a2406936d3dc1bacf5e6c9c31b511f22690d7dd8",
        "filename": "contrib/wxwidgets.yml",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/wxwidgets.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/contrib/wxwidgets.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wxwidgets.yml?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -0,0 +1,42 @@\n+---\n+name: \"wxwidgets\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages: \n+- \"libxxf86vm-dev\"\n+- \"libgtk2.0-dev\"\n+- \"faketime\"\n+- \"zip\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"wxWidgets-2.9.2.tar.bz2\"\n+script: |\n+  INSTDIR=\"$HOME/install\"\n+  TMPDIR=\"$HOME/tmpdir\"\n+  export LIBRARY_PATH=\"$INSTDIR/lib\"\n+  #\n+  tar xjf wxWidgets-2.9.2.tar.bz2\n+  cd wxWidgets-2.9.2\n+  ./configure --prefix=$INSTDIR --enable-monolithic --disable-shared\n+  perl -i -p -e \"s/__TIME__/\\\"$REFERENCE_TIME\\\"/;s/__DATE__/\\\"$REFERENCE_DATE\\\"/\" include/wx/chartype.h\n+  make $MAKEOPTS install\n+  mkdir $TMPDIR\n+  cd $TMPDIR\n+  cp -af $INSTDIR/include .\n+  mkdir -p $TMPDIR/bin/$GBUILD_BITS\n+  cd $TMPDIR/bin/$GBUILD_BITS\n+  cp -af $INSTDIR/lib/wx .\n+  for lib in wxtiff wxregexu wx_gtk2u; do\n+      mkdir $lib\n+      (cd $lib ; ar xf $INSTDIR/lib/lib${lib}-2.9.a)\n+  done\n+  chmod -R +w $TMPDIR\n+  cd $TMPDIR\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  zip -r wxWidgets-2.9.2-gitian.zip *\n+  cp wxWidgets-2.9.2-gitian.zip $OUTDIR"
      },
      {
        "sha": "831d660695a1e73974ff00393c92720695d0f792",
        "filename": "doc/README",
        "status": "modified",
        "additions": 45,
        "deletions": 1,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/doc/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/doc/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -36,7 +36,7 @@ every time you wish to send Bitcoins.  If you lose this passphrase,\n you will lose access to spend all of the bitcoins in your wallet,\n no one, not even the Bitcoin developers can recover your Bitcoins.\n This means you are responsible for your own security, store your\n-password in a secure location and do not forget it.\n+passphrase in a secure location and do not forget it.\n \n Remember that the encryption built into bitcoin only encrypts the\n actual keys which are required to send your bitcoins, not the full\n@@ -67,6 +67,50 @@ entering your wallet passphrase in the Bitcoin client and using the\n same passphrase only as your wallet passphrase.\n \n \n+Technical details of wallet encryption\n+--------------------------------------\n+Wallet encryption uses AES-256-CBC to encrypt only the private keys\n+that are held in a wallet.  The keys are encrypted with a master key\n+which is entirely random.  This master key is then encrypted with\n+AES-256-CBC with a key derived from the passphrase using SHA512 and\n+OpenSSL's EVP_BytesToKey and a dynamic number of rounds determined by\n+the speed of the machine which does the initial encryption (and is\n+updated based on the speed of a computer which does a subsequent\n+passphrase change).  Although the underlying code supports multiple\n+encrypted copies of the same master key (and thus multiple passphrases)\n+the client does not yet have a method to add additional passphrases.\n+\n+At runtime, the client loads the wallet as it normally would, however\n+the keystore stores the keys in encrypted form.  When the passphrase\n+is required (to top up keypool or send coins) it will either be queried\n+by a GUI prompt, or must first be entered with the walletpassphrase\n+RPC command.  This will change the wallet to \"unlocked\" state where the\n+unencrypted master key is stored in memory (in the case of GUI, only for\n+long enough to complete the requested operation, in RPC, for as long as\n+is specified by the second parameter to walletpassphrase).  The wallet is\n+then locked (or can be manually locked using the walletlock RPC command)\n+and the unencrypted master key is removed from memory.\n+\n+Implementation details of wallet encryption\n+-------------------------------------------\n+When the wallet is locked, calls to sendtoaddress, sendfrom, sendmany,\n+and keypoolrefill will return Error -13: \"Error: Please enter the wallet \n+passphrase with walletpassphrase first.\"\n+\n+When the wallet is unlocked, calls to walletpassphrase will fail.\n+\n+When a wallet is encrypted, the passphrase is required to top up the\n+keypool, thus, if the passphrase is rarely entered, it is possible that\n+keypool might run out.  In this case, the default key will be used as the\n+target for payouts for mining, and calls to getnewaddress and getaccount\n+address will return an error.  In order to prevent such cases, the keypool\n+is automatically refilled when walletpassphrase is called with a correct\n+passphrase and when topupkeypool is called (while the wallet is unlocked).\n+Note that the keypool continues to be topped up on various occasions when\n+a new key from pool is used and the wallet is unlocked (or unencrypted).\n+\n+\n+\n See the documentation at the bitcoin wiki:\n   https://en.bitcoin.it/wiki/Main_Page\n "
      },
      {
        "sha": "d08e3a23b7c7072338318c5d25f36d2b38279550",
        "filename": "doc/build-msw.txt",
        "status": "modified",
        "additions": 16,
        "deletions": 20,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/doc/build-msw.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/doc/build-msw.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.txt?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -27,11 +27,11 @@ Dependencies\n Libraries you need to download separately and build:\n \n                 default path               download\n-wxWidgets       \\wxwidgets-2.9.1-mgw       http://www.wxwidgets.org/downloads/\n+wxWidgets       \\wxwidgets-2.9.2-mgw       http://www.wxwidgets.org/downloads/\n OpenSSL         \\openssl-1.0.0d-mgw        http://www.openssl.org/source/\n-Berkeley DB     \\db-4.7.25.NC-mgw          http://www.oracle.com/technology/software/products/berkeley-db/index.html\n-Boost           \\boost-1.43.0-mgw          http://www.boost.org/users/download/\n-miniupnpc       \\upnpc-exe-win32-20110215  http://miniupnp.tuxfamily.org/files/\n+Berkeley DB     \\db-4.8.30.NC-mgw          http://www.oracle.com/technology/software/products/berkeley-db/index.html\n+Boost           \\boost-1.47.0-mgw          http://www.boost.org/users/download/\n+miniupnpc       \\miniupnpc-1.6-mgw         http://miniupnp.tuxfamily.org/files/\n \n Their licenses:\n wxWidgets      LGPL 2.1 with very liberal exceptions\n@@ -41,11 +41,11 @@ Boost          MIT-like license\n miniupnpc      New (3-clause) BSD license\n \n Versions used in this release:\n-wxWidgets    2.9.1\n+wxWidgets    2.9.2\n OpenSSL      1.0.0d\n-Berkeley DB  4.7.25.NC\n-Boost        1.43.0\n-miniupnpc    1.5-20110215\n+Berkeley DB  4.8.30.NC\n+Boost        1.47.0\n+miniupnpc    1.6\n \n \n Notes\n@@ -57,7 +57,7 @@ classes that do the rote work of constructing all the UI elements.\n wxWidgets\n ---------\n DOS shell:\n-cd \\wxWidgets-2.9.1-mgw\\build\\msw\n+cd \\wxWidgets-2.9.2-mgw\\build\\msw\n mingw32-make -f makefile.gcc\n \n OpenSSL\n@@ -73,30 +73,26 @@ make\n Berkeley DB\n -----------\n MSYS shell:\n-cd /c/db-4.7.25.NC-mgw/build_unix\n+cd /c/db-4.8.30.NC-mgw/build_unix\n sh ../dist/configure --enable-mingw --enable-cxx\n make\n \n-\n Boost\n -----\n DOS prompt:\n downloaded boost jam 3.1.18\n-cd \\boost-1.43.0-mgw\n+cd \\boost-1.47.0-mgw\n bjam toolset=gcc --build-type=complete stage\n \n-Note:\n-building with boost 1.45.0 failed because of boost ticket 4614, 4258\n-builds fine with boost 1.43.0\n-\n MiniUPnPc\n ---------\n-Building miniupnpc failed on Windows Server 2003, thus it is expected that a binary copy will be used.\n-See http://miniupnp.tuxfamily.org/forum/viewtopic.php?t=642\n UPnP support is optional, make with USE_UPNP= to disable it.\n \n-Get upnpc-exe-win32-20110215.zip and unzip it to \\upnpc-exe-win32-20110215\n-Get miniupnpc-1.5.20110215.tar.gz and copy *.h to \\upnpc-exe-win32-20110215\\miniupnpc\n+MSYS shell:\n+cd /c/miniupnpc-1.6-mgw\n+make -f Makefile.mingw\n+mkdir miniupnpc\n+cp *.h miniupnpc/\n \n Bitcoin\n -------"
      },
      {
        "sha": "52d876d82b3c0d35acbcd72e72588dcff5fbc615",
        "filename": "doc/build-osx.txt",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/doc/build-osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/doc/build-osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.txt?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -135,26 +135,26 @@ The process for miniupnpc (optional) is similar to that of OpenSSL.\n Download from http://miniupnp.tuxfamily.org/files/.\n \n cd ~/bitcoin/deps\n-tar xvf ~/Downloads/miniupnpc-1.5.tar\n-mv miniupnpc-1.5 miniupnpc-1.5-x86_64\n-tar xvf ~/Downloads/miniupnpc-1.5.tar\n-mv miniupnpc-1.5 miniupnpc-1.5-i386\n+tar xvf ~/Downloads/miniupnpc-1.6.tar\n+mv miniupnpc-1.6 miniupnpc-1.6-x86_64\n+tar xvf ~/Downloads/miniupnpc-1.6.tar\n+mv miniupnpc-1.6 miniupnpc-1.6-i386\n # build x86_64 (64 bit intel) binary\n-cd miniupnpc-1.5-x86_64\n+cd miniupnpc-1.6-x86_64\n export CFLAGS=\"-arch x86_64\"\n export LDFLAGS=\"-arch x86_64\"\n export PREFIX=\"/Users/macuser/bitcoin/deps\"\n make && make install\n # build i386 (32 bit intel) binary\n-cd miniupnpc-1.5-i386\n+cd miniupnpc-1.6-i386\n export CFLAGS=\"-arch i386\"\n export LDFLAGS=\"-arch i386\"\n export PREFIX=\"/Users/macuser/bitcoin/deps\"\n make\n \n # combine the libs\n cd ~/bitcoin/deps\n-lipo -arch i386 miniupnpc-1.5-i386/libminiupnpc.a -arch x86_64 miniupnpc-1.5-x86_64/libminiupnpc.a -o lib/libminiupnpc.a -create\n+lipo -arch i386 miniupnpc-1.6-i386/libminiupnpc.a -arch x86_64 miniupnpc-1.6-x86_64/libminiupnpc.a -o lib/libminiupnpc.a -create\n \n Verify your binaries\n \n@@ -175,8 +175,8 @@ Berkeley DB\n Download from http://freshmeat.net/projects/berkeleydb/\n \n cd ~/bitcoin/deps\n-tar xvf ~/Downloads/db-4.8.26.tar\n-cd db-4.8.26/build_unix\n+tar xvf ~/Downloads/db-4.8.30.tar\n+cd db-4.8.30/build_unix\n ../dist/configure --prefix=/Users/macosuser/bitcoin/deps --enable-cxx && make && make install\n \n "
      },
      {
        "sha": "8f0c568eda7e5023534e641028b7e60e10808214",
        "filename": "doc/build-unix.txt",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/doc/build-unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/doc/build-unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.txt?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -25,8 +25,8 @@ Dependencies\n sudo apt-get install build-essential\n sudo apt-get install libgtk2.0-dev\n sudo apt-get install libssl-dev\n-sudo apt-get install libdb4.7-dev\n-sudo apt-get install libdb4.7++-dev\n+sudo apt-get install libdb4.8-dev\n+sudo apt-get install libdb4.8++-dev\n Boost 1.40+: sudo apt-get install libboost-all-dev\n or Boost 1.37: sudo apt-get install libboost1.37-dev\n \n@@ -55,10 +55,10 @@ miniupnpc      New (3-clause) BSD license\n Versions used in this release:\n GCC          4.3.3\n OpenSSL      0.9.8g\n-wxWidgets    2.9.0\n-Berkeley DB  4.7.25.NC\n+wxWidgets    2.9.2\n+Berkeley DB  4.8.30.NC\n Boost        1.37\n-miniupnpc    1.5\n+miniupnpc    1.6\n \n \n Notes\n@@ -74,8 +74,8 @@ symbols, which reduces the executable size by about 90%.\n wxWidgets\n ---------\n cd /usr/local\n-tar -xzvf wxWidgets-2.9.0.tar.gz\n-cd wxWidgets-2.9.0\n+tar -xzvf wxWidgets-2.9.2.tar.gz\n+cd wxWidgets-2.9.2\n mkdir buildgtk\n cd buildgtk\n ../configure --with-gtk --enable-debug --disable-shared --enable-monolithic --without-libpng --disable-svg\n@@ -87,17 +87,16 @@ ldconfig\n \n miniupnpc\n ---------\n-tar -xzvf miniupnpc-1.5.tar.gz\n-cd miniupnpc-1.5\n+tar -xzvf miniupnpc-1.6.tar.gz\n+cd miniupnpc-1.6\n make\n sudo su\n make install\n \n \n Berkeley DB\n -----------\n-You need Berkeley DB 4.7.  Don't use 4.8, the database/log0000* files\n-are incompatible.  If you have to build Berkeley DB yourself:\n+You need Berkeley DB 4.8.  If you have to build Berkeley DB yourself:\n ../dist/configure --enable-cxx\n make\n "
      },
      {
        "sha": "2275d901bf8cd5f2fa08904b61bdd792683c4226",
        "filename": "locale/cs/LC_MESSAGES/bitcoin.po",
        "status": "modified",
        "additions": 710,
        "deletions": 602,
        "changes": 1312,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/locale/cs/LC_MESSAGES/bitcoin.po",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/locale/cs/LC_MESSAGES/bitcoin.po",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/cs/LC_MESSAGES/bitcoin.po?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -5,8 +5,8 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: \\n\"\n \"Report-Msgid-Bugs-To: \\n\"\n-\"POT-Creation-Date: 2011-05-26 21:44+0200\\n\"\n-\"PO-Revision-Date: 2011-05-26 22:31+0100\\n\"\n+\"POT-Creation-Date: 2011-08-16 15:51+0100\\n\"\n+\"PO-Revision-Date: 2011-08-16 16:03+0100\\n\"\n \"Last-Translator: xHire <xhire@mujmalysvet.cz>\\n\"\n \"Language-Team: \\n\"\n \"Language: cs\\n\"\n@@ -17,114 +17,541 @@ msgstr \"\"\n \"X-Poedit-Basepath: .\\n\"\n \"X-Poedit-SearchPath-0: ../../..\\n\"\n \n-#: ../../../src/net.cpp:1503\n+#: ../../../src/uibase.cpp:25\n+#: ../../../src/ui.cpp:2985\n+msgid \"E&xit\"\n+msgstr \"&Konec\"\n+\n+#: ../../../src/uibase.cpp:28\n+msgid \"&File\"\n+msgstr \"&Soubor\"\n+\n+#: ../../../src/uibase.cpp:32\n+msgid \"&Your Receiving Addresses...\"\n+msgstr \"Tv\u00e1 Bitcoinov\u00e1 &adresa...\"\n+\n+#: ../../../src/uibase.cpp:35\n+msgid \"&Encrypt Wallet...\"\n+msgstr \"&Za\u0161ifruj pen\u011b\u017eenku...\"\n+\n+#: ../../../src/uibase.cpp:38\n+msgid \"&Change Wallet Encryption Passphrase...\"\n+msgstr \"Zm\u011b\u0148 &heslo pro \u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky...\"\n+\n+#: ../../../src/uibase.cpp:42\n+msgid \"&Options...\"\n+msgstr \"M&o\u017enosti\"\n+\n+#: ../../../src/uibase.cpp:45\n+msgid \"&Settings\"\n+msgstr \"Nas&taven\u00ed\"\n+\n+#: ../../../src/uibase.cpp:49\n+msgid \"&About...\"\n+msgstr \"&O programu\"\n+\n+#: ../../../src/uibase.cpp:52\n+msgid \"&Help\"\n+msgstr \"&N\u00e1pov\u011bda\"\n+\n+#: ../../../src/uibase.cpp:61\n+#: ../../../src/ui.cpp:2143\n+#: ../../../src/ui.cpp:2148\n+#: ../../../src/ui.cpp:2153\n+#: ../../../src/ui.cpp:2202\n+msgid \"Send Coins\"\n+msgstr \"Po\u0161li mince\"\n+\n+#: ../../../src/uibase.cpp:62\n+msgid \"Address Book\"\n+msgstr \"Adres\u00e1\u0159\"\n+\n+#: ../../../src/uibase.cpp:75\n+msgid \"Your Bitcoin Address:\"\n+msgstr \"Tv\u00e1 Bitcoinov\u00e1 adresa:\"\n+\n+#: ../../../src/uibase.cpp:82\n+msgid \" &New... \"\n+msgstr \" &Nov\u00e1...\"\n+\n+#: ../../../src/uibase.cpp:85\n+#: ../../../src/uibase.cpp:790\n+#: ../../../src/uibase.cpp:893\n+msgid \" &Copy to Clipboard \"\n+msgstr \" &Kop\u00edrovat do schr\u00e1nky\"\n+\n+#: ../../../src/uibase.cpp:99\n+msgid \"Balance:\"\n+msgstr \"Stav \u00fa\u010dtu:\"\n+\n+#: ../../../src/uibase.cpp:115\n+msgid \" All\"\n+msgstr \" V\u0161e\"\n+\n+#: ../../../src/uibase.cpp:115\n+msgid \" Sent\"\n+msgstr \" Odeslan\u00e9\"\n+\n+#: ../../../src/uibase.cpp:115\n+msgid \" Received\"\n+msgstr \" P\u0159ijat\u00e9\"\n+\n+#: ../../../src/uibase.cpp:115\n+msgid \" In Progress\"\n+msgstr \" Pracuje se na tom\"\n+\n+#: ../../../src/uibase.cpp:136\n+msgid \"All Transactions\"\n+msgstr \"V\u0161echny transakce\"\n+\n+#: ../../../src/uibase.cpp:147\n+msgid \"Sent/Received\"\n+msgstr \"Odeslan\u00e9/P\u0159ijat\u00e9\"\n+\n+#: ../../../src/uibase.cpp:158\n+msgid \"Sent\"\n+msgstr \"Odeslan\u00e9\"\n+\n+#: ../../../src/uibase.cpp:169\n+msgid \"Received\"\n+msgstr \"P\u0159ijat\u00e9\"\n+\n+#: ../../../src/uibase.cpp:312\n+#: ../../../src/uibase.cpp:453\n+#: ../../../src/uibase.cpp:552\n+#: ../../../src/uibase.cpp:732\n+#: ../../../src/uibase.cpp:793\n+#: ../../../src/uibase.cpp:902\n+#: ../../../src/uibase.cpp:991\n+msgid \"OK\"\n+msgstr \"&Budi\u017e\"\n+\n+#: ../../../src/uibase.cpp:355\n+msgid \"&Start Bitcoin on system startup\"\n+msgstr \"&Spustit Bitcoin p\u0159i startu syst\u00e9mu\"\n+\n+#: ../../../src/uibase.cpp:358\n+msgid \"&Minimize to the tray instead of the taskbar\"\n+msgstr \"&Minimalizov\u00e1vat do ikony v panelu\"\n+\n+#: ../../../src/uibase.cpp:361\n+msgid \"Map port using &UPnP\"\n+msgstr \"Namapovat port p\u0159es &UPnP\"\n+\n+#: ../../../src/uibase.cpp:364\n+msgid \"M&inimize to the tray on close\"\n+msgstr \"Zav\u0159en\u00edm &minimalizovat do ikony\"\n+\n+#: ../../../src/uibase.cpp:370\n+msgid \"&Connect through socks4 proxy (requires restart to apply): \"\n+msgstr \"&P\u0159ipojit p\u0159es socks4 proxy (vy\u017eaduje restart aplikace):\"\n+\n+#: ../../../src/uibase.cpp:381\n+msgid \"Proxy &IP:\"\n+msgstr \"&IP adresa proxy:\"\n+\n+#: ../../../src/uibase.cpp:389\n+msgid \" &Port:\"\n+msgstr \" &Port:\"\n+\n+#: ../../../src/uibase.cpp:402\n+msgid \"Optional transaction fee per KB that helps make sure your transactions are processed quickly.  Most transactions are 1KB.  Fee 0.01 recommended.\"\n+msgstr \"Dobrovoln\u00fd transak\u010dn\u00ed poplatek za ka\u017ed\u00fd zapo\u010dat\u00fd KB napom\u00e1h\u00e1 tomu, aby tv\u00e9 transakce byly rychle zpracov\u00e1ny. V\u011bt\u0161ina transakc\u00ed m\u00e1 do 1 KB. Doporu\u010den\u00e1 v\u00fd\u0161e poplatku je 0.01.\"\n+\n+#: ../../../src/uibase.cpp:409\n+msgid \"Pay transaction fee:\"\n+msgstr \"V\u00fd\u0161e transak\u010dn\u00edho poplatku:\"\n+\n+#: ../../../src/uibase.cpp:430\n+msgid \"// [don't translate] Test panel 2 for future expansion\"\n+msgstr \"\"\n+\n+#: ../../../src/uibase.cpp:434\n+msgid \"// [don't translate] Let's not start multiple pages until the first page is filled up\"\n+msgstr \"\"\n+\n+#: ../../../src/uibase.cpp:456\n+#: ../../../src/uibase.cpp:678\n+#: ../../../src/uibase.cpp:737\n+#: ../../../src/uibase.cpp:796\n+#: ../../../src/uibase.cpp:905\n+#: ../../../src/uibase.cpp:994\n+msgid \"Cancel\"\n+msgstr \"&Zru\u0161it\"\n+\n+#: ../../../src/uibase.cpp:459\n+msgid \"&Apply\"\n+msgstr \"&Pou\u017e\u00edt\"\n+\n+#: ../../../src/uibase.cpp:518\n+msgid \"Bitcoin \"\n+msgstr \"Bitcoin\"\n+\n+#: ../../../src/uibase.cpp:524\n+msgid \"version\"\n+msgstr \"verze\"\n+\n+#: ../../../src/uibase.cpp:535\n+msgid \"\"\n+\"Copyright (c) 2009-2011 Bitcoin Developers\\n\"\n+\"\\n\"\n+\"This is experimental software.\\n\"\n+\"\\n\"\n+\"Distributed under the MIT/X11 software license, see the accompanying file \\n\"\n+\"license.txt or http://www.opensource.org/licenses/mit-license.php.\\n\"\n+\"\\n\"\n+\"This product includes software developed by the OpenSSL Project for use in the \\n\"\n+\"OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\n\"\n+\"Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.\"\n+msgstr \"\"\n+\"Copyright (c) 2009-2011 V\u00fdvoj\u00e1\u0159i Bitcoinu\\n\"\n+\"\\n\"\n+\"Tohle je experiment\u00e1ln\u00ed program.\\n\"\n+\"\\n\"\n+\"\u0160\u00ed\u0159en pod licenc\u00ed MIT/X11, viz p\u0159ilo\u017een\u00fd soubor license.txt nebo \\n\"\n+\"http://www.opensource.org/licenses/mit-license.php.\\n\"\n+\"\\n\"\n+\"Tento produkt zahrnuje programy vyvinut\u00e9 OpenSSL Projektem pro pou\u017eit\u00ed \\n\"\n+\"v OpenSSL Toolkitu (http://www.openssl.org/) a kryptografick\u00fd program od \\n\"\n+\"Erika Younga (eay@cryptsoft.com) a program UPnP od Thomase Bernarda.\"\n+\n+#: ../../../src/uibase.cpp:591\n+msgid \"Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"\n+msgstr \"Vlo\u017e Bitcoinovou adresu (nap\u0159. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"\n+\n+#: ../../../src/uibase.cpp:605\n+msgid \"Pay &To:\"\n+msgstr \"&Komu:\"\n+\n+#: ../../../src/uibase.cpp:620\n+msgid \"&Paste\"\n+msgstr \"&Vlo\u017eit\"\n+\n+#: ../../../src/uibase.cpp:623\n+msgid \" Address &Book...\"\n+msgstr \" &Adres\u00e1\u0159...\"\n+\n+#: ../../../src/uibase.cpp:630\n+msgid \"&Amount:\"\n+msgstr \"&\u010c\u00e1stka\"\n+\n+#: ../../../src/uibase.cpp:640\n+msgid \"T&ransfer:\"\n+msgstr \"&P\u0159evod:\"\n+\n+#: ../../../src/uibase.cpp:646\n+msgid \" Standard\"\n+msgstr \" Standard\"\n+\n+#: ../../../src/uibase.cpp:673\n+msgid \"&Send\"\n+msgstr \"&Poslat\"\n+\n+#: ../../../src/uibase.cpp:721\n+msgid \"\"\n+\"\\n\"\n+\"\\n\"\n+\"Connecting...\"\n+msgstr \"\"\n+\"\\n\"\n+\"\\n\"\n+\"P\u0159ipojuji...\"\n+\n+#: ../../../src/uibase.cpp:771\n+msgid \"These are your Bitcoin addresses for receiving payments.  You may want to give a different one to each sender so you can keep track of who is paying you.  The highlighted address is displayed in the main window.\"\n+msgstr \"Tohle jsou tv\u00e9 Bitcoinov\u00e9 adresy na p\u0159\u00edjem plateb.  Asi bude\u0161 cht\u00edt d\u00e1t jinou adresu ka\u017ed\u00e9mu odes\u00edlateli, abys v\u011bd\u011bl, kdo ti kolik platil.  Ozna\u010den\u00e1 adresa bude zobrazena v hlavn\u00edm okn\u011b.\"\n+\n+#: ../../../src/uibase.cpp:784\n+#: ../../../src/uibase.cpp:896\n+msgid \"&Edit...\"\n+msgstr \"&Upravit...\"\n+\n+#: ../../../src/uibase.cpp:787\n+#: ../../../src/uibase.cpp:899\n+msgid \" &New Address... \"\n+msgstr \" &Nov\u00e1 adresa...\"\n+\n+#: ../../../src/uibase.cpp:847\n+#: ../../../src/ui.cpp:2620\n+msgid \"Bitcoin Address\"\n+msgstr \"Bitcoinov\u00e1 adresa\"\n+\n+#: ../../../src/uibase.cpp:859\n+msgid \"Sending\"\n+msgstr \"Ciz\u00ed adresy (pro odes\u00edl\u00e1n\u00ed)\"\n+\n+#: ../../../src/uibase.cpp:867\n+msgid \"These are your Bitcoin addresses for receiving payments.  You can give a different one to each sender to keep track of who is paying you.  The highlighted address will be displayed in the main window.\"\n+msgstr \"Tohle jsou tv\u00e9 Bitcoinov\u00e9 adresy na p\u0159\u00edjem plateb.  M\u016f\u017ee\u0161 d\u00e1t jinou adresu ka\u017ed\u00e9mu odes\u00edlateli, abys v\u011bd\u011bl, kdo ti kolik platil.  Ozna\u010den\u00e1 adresa bude zobrazena v hlavn\u00edm okn\u011b.\"\n+\n+#: ../../../src/uibase.cpp:880\n+msgid \"Receiving\"\n+msgstr \"Tvoje adresy (pro p\u0159\u00edjem)\"\n+\n+#: ../../../src/uibase.cpp:890\n+msgid \"&Delete\"\n+msgstr \"&Smazat\"\n+\n+#: ../../../src/rpc.cpp:2088\n+#: ../../../src/rpc.cpp:2090\n #, c-format\n-msgid \"Unable to bind to port %d on this computer.  Bitcoin is probably already running.\"\n-msgstr \"Neda\u0159\u00ed se mi p\u0159ipojit na port %d na tomhle po\u010d\u00edta\u010di.  Bitcoin u\u017e pravd\u011bpodobn\u011b jednou b\u011b\u017e\u00ed.\"\n+msgid \"To use the %s option\"\n+msgstr \"Pro pou\u017eit\u00ed volby %s\"\n+\n+#: ../../../src/rpc.cpp:2092\n+#, c-format\n+msgid \"\"\n+\"Warning: %s, you must set rpcpassword=<password>\\n\"\n+\"in the configuration file: %s\\n\"\n+\"If the file does not exist, create it with owner-readable-only file permissions.\\n\"\n+msgstr \"\"\n+\"Varov\u00e1n\u00ed: %s, mus\u00ed\u0161 nastavit rpcpassword=<heslo>\\n\"\n+\"v konfigura\u010dn\u00edm souboru: %s\\n\"\n+\"Pokud tenhle soubor neexistuje, vytvo\u0159 ho s opr\u00e1vn\u011bn\u00edm pro \u010dten\u00ed pouze pro vlastn\u00edka.\\n\"\n \n-#: ../../../src/ui.cpp:204\n+#: ../../../src/rpc.cpp:2265\n+#, c-format\n+msgid \"\"\n+\"You must set rpcpassword=<password> in the configuration file:\\n\"\n+\"%s\\n\"\n+\"If the file does not exist, create it with owner-readable-only file permissions.\"\n+msgstr \"\"\n+\"Mus\u00ed\u0161 nastavit rpcpassword=<heslo> v konfigura\u010dn\u00edm souboru:\\n\"\n+\"%s\\n\"\n+\"Pokud tenhle soubor neexistuje, vytvo\u0159 ho s opr\u00e1vn\u011bn\u00edm pro \u010dten\u00ed pouze pro vlastn\u00edka.\"\n+\n+#: ../../../src/util.cpp:870\n+msgid \"Warning: Please check that your computer's date and time are correct.  If your clock is wrong Bitcoin will not work properly.\"\n+msgstr \"Varov\u00e1n\u00ed: Pros\u00edm zkontroluj, \u017ee datum a \u010das jsou na tv\u00e9m po\u010d\u00edta\u010di spr\u00e1vn\u011b nastaveny. Pokud jsou nastaveny \u0161patn\u011b, Bitcoin nebude fungovat spr\u00e1vn\u011b.\"\n+\n+#: ../../../src/util.cpp:904\n+msgid \"beta\"\n+msgstr \"beta\"\n+\n+#: ../../../src/wallet.cpp:1084\n+msgid \"Error: Wallet locked, unable to create transaction  \"\n+msgstr \"Chyba: Pen\u011b\u017eenka je zam\u010den\u00e1, tak\u017ee nen\u00ed mo\u017en\u00e9 vytvo\u0159it transakci\"\n+\n+#: ../../../src/wallet.cpp:1092\n+#, c-format\n+msgid \"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds  \"\n+msgstr \"Chyba: Tato transakce vy\u017eaduje transak\u010dn\u00ed poplatek nejm\u00e9n\u011b %s kv\u016fli sv\u00e9mu objemu, komplexnosti nebo utr\u00e1cen\u00ed ned\u00e1vno p\u0159ijat\u00e9 hotovosti\"\n+\n+#: ../../../src/wallet.cpp:1094\n+msgid \"Error: Transaction creation failed  \"\n+msgstr \"Chyba: Vytvo\u0159en\u00ed transakce selhalo\"\n+\n+#: ../../../src/wallet.cpp:1100\n+#: ../../../src/ui.cpp:2176\n+#: ../../../src/ui.cpp:2185\n+#: ../../../src/ui.cpp:2336\n+#: ../../../src/ui.cpp:2500\n+msgid \"Sending...\"\n+msgstr \"Pos\u00edl\u00e1m...\"\n+\n+#: ../../../src/wallet.cpp:1104\n+msgid \"Error: The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n+msgstr \"Chyba: Transakce byla odm\u00edtnuta.  Tohle m\u016f\u017ee nastat, pokud n\u011bjak\u00e9 mince z tv\u00e9 pen\u011b\u017eenky u\u017e jednou byly utraceny, nap\u0159\u00edklad pokud pou\u017e\u00edv\u00e1\u0161 kopii souboru wallet.dat a mince byly utraceny v druh\u00e9 kopii, ale nebyly ozna\u010deny jako utracen\u00e9 v t\u00e9to.\"\n+\n+#: ../../../src/wallet.cpp:1117\n+msgid \"Invalid amount\"\n+msgstr \"Neplatn\u00e1 \u010d\u00e1stka\"\n+\n+#: ../../../src/wallet.cpp:1119\n+#: ../../../src/ui.cpp:2403\n+#: ../../../src/ui.cpp:2474\n+msgid \"Insufficient funds\"\n+msgstr \"Nedostatek pen\u011bz\"\n+\n+#: ../../../src/ui.cpp:217\n #, c-format\n msgid \"This transaction is over the size limit.  You can still send it for a fee of %s, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?\"\n msgstr \"Tahle transakce p\u0159esahuje velikostn\u00ed limit.  Po\u0159\u00e1d ji ale m\u016f\u017ee\u0161 poslat, pokud za ni zaplat\u00ed\u0161 poplatek %s, kter\u00fd p\u016fjde uzl\u016fm, kter\u00e9 tvou transakci zpracuj\u00ed, a nav\u00edc tak podpo\u0159\u00ed\u0161 s\u00ed\u0165.  Chce\u0161 zaplatit poplatek?\"\n \n-#: ../../../src/ui.cpp:303\n+#: ../../../src/ui.cpp:261\n+#: ../../../src/ui.cpp:1247\n+msgid \"Enter the current passphrase to the wallet.\"\n+msgstr \"Zadej platn\u00e9 heslo pro pen\u011b\u017eenku.\"\n+\n+#: ../../../src/ui.cpp:262\n+#: ../../../src/ui.cpp:1183\n+#: ../../../src/ui.cpp:1200\n+#: ../../../src/ui.cpp:1248\n+#: ../../../src/ui.cpp:1274\n+#: ../../../src/ui.cpp:1294\n+msgid \"Passphrase\"\n+msgstr \"Heslo\"\n+\n+#: ../../../src/ui.cpp:268\n+msgid \"Please supply the current wallet decryption passphrase.\"\n+msgstr \"Zadej platn\u00e9 heslo pro de\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky.\"\n+\n+#: ../../../src/ui.cpp:276\n+#: ../../../src/ui.cpp:1259\n+#: ../../../src/ui.cpp:1316\n+msgid \"The passphrase entered for the wallet decryption was incorrect.\"\n+msgstr \"Nezadal jsi spr\u00e1vn\u00e9 heslo pro de\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky.\"\n+\n+#: ../../../src/ui.cpp:353\n msgid \"Status\"\n msgstr \"Stav\"\n \n-#: ../../../src/ui.cpp:304\n+#: ../../../src/ui.cpp:354\n msgid \"Date\"\n msgstr \"Datum\"\n \n-#: ../../../src/ui.cpp:305\n+#: ../../../src/ui.cpp:355\n msgid \"Description\"\n msgstr \"Popis\"\n \n-#: ../../../src/ui.cpp:306\n+#: ../../../src/ui.cpp:356\n msgid \"Debit\"\n msgstr \"V\u00fddaje\"\n \n-#: ../../../src/ui.cpp:307\n+#: ../../../src/ui.cpp:357\n msgid \"Credit\"\n msgstr \"P\u0159\u00edjmy\"\n \n-#: ../../../src/ui.cpp:513\n+#: ../../../src/ui.cpp:568\n #, c-format\n msgid \"Open for %d blocks\"\n msgstr \"Otev\u0159eno pro %d blok\u016f\"\n \n-#: ../../../src/ui.cpp:515\n+#: ../../../src/ui.cpp:570\n #, c-format\n msgid \"Open until %s\"\n msgstr \"Ot\u0159ev\u0159eno dokud %s\"\n \n-#: ../../../src/ui.cpp:521\n+#: ../../../src/ui.cpp:576\n #, c-format\n msgid \"%d/offline?\"\n msgstr \"%d/offline?\"\n \n-#: ../../../src/ui.cpp:523\n+#: ../../../src/ui.cpp:578\n #, c-format\n msgid \"%d/unconfirmed\"\n msgstr \"%d/nepotvrzeno\"\n \n-#: ../../../src/ui.cpp:525\n+#: ../../../src/ui.cpp:580\n #, c-format\n msgid \"%d confirmations\"\n msgstr \"%d potvrzen\u00ed\"\n \n-#: ../../../src/ui.cpp:610\n+#: ../../../src/ui.cpp:665\n msgid \"Generated\"\n msgstr \"Vygenerov\u00e1no\"\n \n-#: ../../../src/ui.cpp:618\n+#: ../../../src/ui.cpp:673\n #, c-format\n msgid \"Generated (%s matures in %d more blocks)\"\n msgstr \"Vygenerov\u00e1no (%s dozraje po %d bloc\u00edch)\"\n \n-#: ../../../src/ui.cpp:622\n+#: ../../../src/ui.cpp:677\n msgid \"Generated - Warning: This block was not received by any other nodes and will probably not be accepted!\"\n msgstr \"Vygenerovan\u00fd - Varov\u00e1n\u00ed: Tehnle blok nebyl obdr\u017een \u017e\u00e1dn\u00fdm jin\u00fdm uzlem a pravd\u011bpodobn\u011b nebude akceptov\u00e1n!\"\n \n-#: ../../../src/ui.cpp:626\n+#: ../../../src/ui.cpp:681\n msgid \"Generated (not accepted)\"\n msgstr \"Vygenerov\u00e1no (neakceptov\u00e1no)\"\n \n-#: ../../../src/ui.cpp:636\n+#: ../../../src/ui.cpp:691\n msgid \"From: \"\n msgstr \"Od: \"\n \n-#: ../../../src/ui.cpp:660\n+#: ../../../src/ui.cpp:715\n msgid \"Received with: \"\n msgstr \"P\u0159ijato adresou: \"\n \n-#: ../../../src/ui.cpp:706\n+#: ../../../src/ui.cpp:760\n msgid \"Payment to yourself\"\n msgstr \"Platba pro sebe sama\"\n \n-#: ../../../src/ui.cpp:740\n+#: ../../../src/ui.cpp:794\n msgid \"To: \"\n msgstr \"Pro: \"\n \n-#: ../../../src/ui.cpp:1055\n+#: ../../../src/ui.cpp:1109\n msgid \"    Generating\"\n msgstr \"    Generuji\"\n \n-#: ../../../src/ui.cpp:1057\n+#: ../../../src/ui.cpp:1111\n msgid \"(not connected)\"\n msgstr \"(nep\u0159ipojen)\"\n \n-#: ../../../src/ui.cpp:1060\n+#: ../../../src/ui.cpp:1114\n #, c-format\n msgid \"     %d connections     %d blocks     %d transactions\"\n msgstr \"     %d spojen\u00ed     %d blok\u016f     %d transakc\u00ed\"\n \n-#: ../../../src/ui.cpp:1165\n-#: ../../../src/ui.cpp:2529\n+#: ../../../src/ui.cpp:1171\n+msgid \"Wallet already encrypted.\"\n+msgstr \"Pen\u011b\u017eenka je u\u017e za\u0161ifrovan\u00e1.\"\n+\n+#: ../../../src/ui.cpp:1182\n+msgid \"\"\n+\"Enter the new passphrase to the wallet.\\n\"\n+\"Please use a passphrase of 10 or more random characters, or eight or more words.\"\n+msgstr \"\"\n+\"Zadej nov\u00e9 heslo pro pen\u011b\u017eenku.\\n\"\n+\"Pou\u017eij alespo\u0148 10 n\u00e1hodn\u00fdch znak\u016f nebo alespo\u0148 8 slov.\"\n+\n+#: ../../../src/ui.cpp:1189\n+#: ../../../src/ui.cpp:1282\n+msgid \"Error: The supplied passphrase was too short.\"\n+msgstr \"Chyba: Zadan\u00e9 heslo je p\u0159\u00edli\u0161 kr\u00e1tk\u00e9.\"\n+\n+#: ../../../src/ui.cpp:1193\n+msgid \"\"\n+\"WARNING: If you encrypt your wallet and lose your passphrase, you will LOSE ALL OF YOUR BITCOINS!\\n\"\n+\"Are you sure you wish to encrypt your wallet?\"\n+msgstr \"\"\n+\"VAROV\u00c1N\u00cd: Pokud za\u0161ifruje\u0161 pen\u011b\u017eenku a ztrat\u00ed\u0161 \u010di zapomene\u0161 heslo, P\u0158IJDE\u0160 O V\u0160ECHNY BITCOINY!\\n\"\n+\"Jsi si jist\u00fd, \u017ee chce\u0161 pen\u011b\u017eenku za\u0161ifrovat?\"\n+\n+#: ../../../src/ui.cpp:1199\n+msgid \"Please re-enter your new wallet passphrase.\"\n+msgstr \"Zadej je\u0161t\u011b jednou nov\u00e9 heslo pro pen\u011b\u017eenku.\"\n+\n+#: ../../../src/ui.cpp:1208\n+#: ../../../src/ui.cpp:1304\n+msgid \"Error: the supplied passphrases didn't match.\"\n+msgstr \"Chyba: zadan\u00e1 hesla nejsou shodn\u00e1.\"\n+\n+#: ../../../src/ui.cpp:1218\n+msgid \"Wallet encryption failed.\"\n+msgstr \"Za\u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky selhalo.\"\n+\n+#: ../../../src/ui.cpp:1225\n+msgid \"\"\n+\"Wallet Encrypted.\\n\"\n+\"Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.\"\n+msgstr \"\"\n+\"Pen\u011b\u017eenka je za\u0161ifrov\u00e1na.\\n\"\n+\"Pamatuj, \u017ee pouh\u00e9 \u0161ifrov\u00e1n\u00ed pen\u011b\u017eenky nem\u016f\u017ee pln\u011b ochr\u00e1nit tv\u00e9 bitcoiny p\u0159ed kr\u00e1de\u017e\u00ed malwarem, kter\u00fdm se m\u016f\u017ee po\u010d\u00edta\u010d nakazit.\"\n+\n+#: ../../../src/ui.cpp:1236\n+msgid \"Wallet is unencrypted, please encrypt it first.\"\n+msgstr \"Pen\u011b\u017eenka nen\u00ed za\u0161ifrovan\u00e1, mus\u00ed\u0161 ji prvn\u011b za\u0161ifrovat.\"\n+\n+#: ../../../src/ui.cpp:1273\n+msgid \"Enter the new passphrase for the wallet.\"\n+msgstr \"Zadej nov\u00e9 heslo pro pen\u011b\u017eenku.\"\n+\n+#: ../../../src/ui.cpp:1293\n+msgid \"Re-enter the new passphrase for the wallet.\"\n+msgstr \"Zadej je\u0161t\u011b jednou nov\u00e9 heslo pro pen\u011b\u017eenku.\"\n+\n+#: ../../../src/ui.cpp:1325\n+msgid \"Wallet Passphrase Changed.\"\n+msgstr \"Heslo pen\u011b\u017eenky bylo zm\u011bn\u011bno.\"\n+\n+#: ../../../src/ui.cpp:1382\n+#: ../../../src/ui.cpp:2815\n msgid \"New Receiving Address\"\n msgstr \"Nov\u00e1 Bitcoinov\u00e1 adresa\"\n \n-#: ../../../src/ui.cpp:1166\n-#: ../../../src/ui.cpp:2530\n+#: ../../../src/ui.cpp:1383\n+#: ../../../src/ui.cpp:2816\n msgid \"\"\n \"You should use a new address for each payment you receive.\\n\"\n \"\\n\"\n@@ -134,838 +561,519 @@ msgstr \"\"\n \"\\n\"\n \"Ozna\u010den\u00ed\"\n \n-#: ../../../src/ui.cpp:1235\n+#: ../../../src/ui.cpp:1467\n msgid \"<b>Status:</b> \"\n msgstr \"<b>Stav:</b> \"\n \n-#: ../../../src/ui.cpp:1240\n+#: ../../../src/ui.cpp:1472\n msgid \", has not been successfully broadcast yet\"\n msgstr \", je\u0161t\u011b nebylo rozesl\u00e1no\"\n \n-#: ../../../src/ui.cpp:1242\n+#: ../../../src/ui.cpp:1474\n #, c-format\n msgid \", broadcast through %d node\"\n msgstr \", rozesl\u00e1no p\u0159es %d uzel\"\n \n-#: ../../../src/ui.cpp:1244\n+#: ../../../src/ui.cpp:1476\n #, c-format\n msgid \", broadcast through %d nodes\"\n msgstr \", rozesl\u00e1no p\u0159es %d uzl\u016f\"\n \n-#: ../../../src/ui.cpp:1248\n+#: ../../../src/ui.cpp:1480\n msgid \"<b>Date:</b> \"\n msgstr \"<b>Datum:</b> \"\n \n-#: ../../../src/ui.cpp:1256\n+#: ../../../src/ui.cpp:1488\n msgid \"<b>Source:</b> Generated<br>\"\n msgstr \"<b>Zdroj:</b> Vygenerov\u00e1no<br>\"\n \n-#: ../../../src/ui.cpp:1262\n-#: ../../../src/ui.cpp:1280\n+#: ../../../src/ui.cpp:1494\n+#: ../../../src/ui.cpp:1511\n msgid \"<b>From:</b> \"\n msgstr \"<b>Od:</b> \"\n \n-#: ../../../src/ui.cpp:1280\n+#: ../../../src/ui.cpp:1511\n msgid \"unknown\"\n msgstr \"nezn\u00e1mo\"\n \n-#: ../../../src/ui.cpp:1281\n-#: ../../../src/ui.cpp:1305\n-#: ../../../src/ui.cpp:1364\n+#: ../../../src/ui.cpp:1512\n+#: ../../../src/ui.cpp:1536\n+#: ../../../src/ui.cpp:1595\n msgid \"<b>To:</b> \"\n msgstr \"<b>Pro:</b> \"\n \n-#: ../../../src/ui.cpp:1284\n+#: ../../../src/ui.cpp:1515\n msgid \" (yours, label: \"\n msgstr \" (tvoje, ozna\u010den\u00ed: \"\n \n-#: ../../../src/ui.cpp:1286\n+#: ../../../src/ui.cpp:1517\n msgid \" (yours)\"\n msgstr \" (tvoje)\"\n \n-#: ../../../src/ui.cpp:1323\n-#: ../../../src/ui.cpp:1335\n-#: ../../../src/ui.cpp:1381\n-#: ../../../src/ui.cpp:1398\n+#: ../../../src/ui.cpp:1554\n+#: ../../../src/ui.cpp:1566\n+#: ../../../src/ui.cpp:1612\n+#: ../../../src/ui.cpp:1629\n msgid \"<b>Credit:</b> \"\n msgstr \"<b>P\u0159\u00edjem:</b> \"\n \n-#: ../../../src/ui.cpp:1325\n+#: ../../../src/ui.cpp:1556\n #, c-format\n msgid \"(%s matures in %d more blocks)\"\n msgstr \"(%s dozraje po %d bloc\u00edch)\"\n \n-#: ../../../src/ui.cpp:1327\n+#: ../../../src/ui.cpp:1558\n msgid \"(not accepted)\"\n msgstr \"(neakceptov\u00e1no)\"\n \n-#: ../../../src/ui.cpp:1372\n-#: ../../../src/ui.cpp:1380\n-#: ../../../src/ui.cpp:1395\n+#: ../../../src/ui.cpp:1603\n+#: ../../../src/ui.cpp:1611\n+#: ../../../src/ui.cpp:1626\n msgid \"<b>Debit:</b> \"\n msgstr \"<b>V\u00fddaj:</b> \"\n \n-#: ../../../src/ui.cpp:1386\n+#: ../../../src/ui.cpp:1617\n msgid \"<b>Transaction fee:</b> \"\n msgstr \"<b>Transak\u010dn\u00ed poplatek:</b> \"\n \n-#: ../../../src/ui.cpp:1402\n+#: ../../../src/ui.cpp:1633\n msgid \"<b>Net amount:</b> \"\n msgstr \"<b>\u010cist\u00e1 \u010d\u00e1stka:</b> \"\n \n-#: ../../../src/ui.cpp:1409\n+#: ../../../src/ui.cpp:1640\n msgid \"Message:\"\n msgstr \"Zpr\u00e1va:\"\n \n-#: ../../../src/ui.cpp:1411\n+#: ../../../src/ui.cpp:1642\n msgid \"Comment:\"\n msgstr \"Koment\u00e1\u0159:\"\n \n-#: ../../../src/ui.cpp:1414\n+#: ../../../src/ui.cpp:1645\n msgid \"Generated coins must wait 120 blocks before they can be spent.  When you generated this block, it was broadcast to the network to be added to the block chain.  If it fails to get into the chain, it will change to \\\"not accepted\\\" and not be spendable.  This may occasionally happen if another node generates a block within a few seconds of yours.\"\n msgstr \"Vygenerovan\u00e9 mince mus\u00ed \u010dekat 120 blok\u016f, ne\u017e mohou b\u00fdt utraceny.  Kdy\u017e jsi vygeneroval tenhle blok, tak byl rozposl\u00e1n do s\u00edt\u011b, aby byl p\u0159id\u00e1n do \u0159et\u011bzce blok\u016f.  Pokud se mu nepoda\u0159\u00ed dostat se do \u0159et\u011bzce, zm\u011bn\u00ed se na \\\"neakceptovan\u00fd\\\" a nebude utratiteln\u00fd.  To se ob\u010das m\u016f\u017ee p\u0159ihodit, pokud jin\u00fd uzel vygeneruje blok zhruba ve stejn\u00e9m okam\u017eiku jako ty.\"\n \n-#: ../../../src/ui.cpp:1594\n+#: ../../../src/ui.cpp:1825\n msgid \"Cannot write autostart/bitcoin.desktop file\"\n msgstr \"Nemohu zapisovat do souboru autostart/bitcoin.desktop\"\n \n-#: ../../../src/ui.cpp:1630\n+#: ../../../src/ui.cpp:1861\n msgid \"Main\"\n msgstr \"Hlavn\u00ed\"\n \n-#: ../../../src/ui.cpp:1638\n+#: ../../../src/ui.cpp:1871\n msgid \"&Start Bitcoin on window system startup\"\n-msgstr \"&Spustit Bitcoin p\u0159i startu okenn\u00edho syst\u00e9mu\"\n-\n-#: ../../../src/ui.cpp:1645\n-msgid \"&Minimize on close\"\n-msgstr \"&Zav\u0159en\u00edm pouze skr\u00fdt\"\n-\n-#: ../../../src/ui.cpp:1787\n-#, c-format\n-msgid \"version %s\"\n-msgstr \"verze %s\"\n-\n-#: ../../../src/ui.cpp:1899\n-msgid \"Error in amount  \"\n-msgstr \"Chyba v \u010d\u00e1stce\"\n-\n-#: ../../../src/ui.cpp:1899\n-#: ../../../src/ui.cpp:1904\n-#: ../../../src/ui.cpp:1909\n-#: ../../../src/ui.cpp:1944\n-#: ../../../src/uibase.cpp:55\n-msgid \"Send Coins\"\n-msgstr \"Po\u0161li mince\"\n-\n-#: ../../../src/ui.cpp:1904\n-msgid \"Amount exceeds your balance  \"\n-msgstr \"\u010c\u00e1stka p\u0159ekra\u010duje stav \u00fa\u010dtu\"\n-\n-#: ../../../src/ui.cpp:1909\n-msgid \"Total exceeds your balance when the \"\n-msgstr \"Celkov\u00e1 \u010d\u00e1stka p\u0159esahuje stav tv\u00e9ho \u00fa\u010dtu, kdy\u017e \"\n-\n-#: ../../../src/ui.cpp:1909\n-msgid \" transaction fee is included  \"\n-msgstr \" transak\u010dn\u00ed poplatek je zahrnut\"\n-\n-#: ../../../src/ui.cpp:1927\n-msgid \"Payment sent  \"\n-msgstr \"Platba odesl\u00e1na\"\n-\n-#: ../../../src/ui.cpp:1927\n-#: ../../../src/ui.cpp:1932\n-#: ../../../src/ui.cpp:2076\n-#: ../../../src/ui.cpp:2229\n-#: ../../../src/main.cpp:3997\n-msgid \"Sending...\"\n-msgstr \"Pos\u00edl\u00e1m...\"\n-\n-#: ../../../src/ui.cpp:1944\n-msgid \"Invalid address  \"\n-msgstr \"Neplatn\u00e1 adresa\"\n-\n-#: ../../../src/ui.cpp:1997\n-#, c-format\n-msgid \"Sending %s to %s\"\n-msgstr \"Pos\u00edl\u00e1m %s %s\"\n-\n-#: ../../../src/ui.cpp:2070\n-#: ../../../src/ui.cpp:2103\n-msgid \"CANCELLED\"\n-msgstr \"ZRU\u0160ENO\"\n-\n-#: ../../../src/ui.cpp:2074\n-msgid \"Cancelled\"\n-msgstr \"Zru\u0161eno\"\n-\n-#: ../../../src/ui.cpp:2076\n-msgid \"Transfer cancelled  \"\n-msgstr \"P\u0159evod zru\u0161en\"\n-\n-#: ../../../src/ui.cpp:2129\n-msgid \"Error: \"\n-msgstr \"Chyba: \"\n-\n-#: ../../../src/ui.cpp:2143\n-#: ../../../src/ui.cpp:2214\n-#: ../../../src/main.cpp:4016\n-msgid \"Insufficient funds\"\n-msgstr \"Nedostatek pen\u011bz\"\n-\n-#: ../../../src/ui.cpp:2148\n-msgid \"Connecting...\"\n-msgstr \"P\u0159ipojuji...\"\n-\n-#: ../../../src/ui.cpp:2153\n-msgid \"Unable to connect\"\n-msgstr \"Nemohu se p\u0159ipojit\"\n-\n-#: ../../../src/ui.cpp:2158\n-msgid \"Requesting public key...\"\n-msgstr \"Po\u017eaduji ve\u0159ejn\u00fd kl\u00ed\u010d...\"\n-\n-#: ../../../src/ui.cpp:2170\n-msgid \"Received public key...\"\n-msgstr \"P\u0159ijat ve\u0159ejn\u00fd kl\u00ed\u010d...\"\n-\n-#: ../../../src/ui.cpp:2184\n-msgid \"Recipient is not accepting transactions sent by IP address\"\n-msgstr \"P\u0159\u00edjemce neakceptuje transakce poslan\u00e9 IP adresou\"\n-\n-#: ../../../src/ui.cpp:2186\n-msgid \"Transfer was not accepted\"\n-msgstr \"P\u0159evod nebyl akceptov\u00e1n\"\n-\n-#: ../../../src/ui.cpp:2195\n-msgid \"Invalid response received\"\n-msgstr \"P\u0159i\u0161la neplatn\u00e1 odpov\u011b\u010f\"\n-\n-#: ../../../src/ui.cpp:2210\n-msgid \"Creating transaction...\"\n-msgstr \"Vytv\u00e1\u0159\u00edm transakci...\"\n-\n-#: ../../../src/ui.cpp:2222\n-#, c-format\n-msgid \"This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds\"\n-msgstr \"Tato transakce vy\u017eaduje transak\u010dn\u00ed poplatek nejm\u00e9n\u011b %s kv\u016fli sv\u00e9mu objemu, komplexnosti nebo utr\u00e1cen\u00ed ned\u00e1vno p\u0159ijat\u00e9 hotovosti\"\n-\n-#: ../../../src/ui.cpp:2224\n-msgid \"Transaction creation failed\"\n-msgstr \"Vytvo\u0159en\u00ed transakce selhalo\"\n-\n-#: ../../../src/ui.cpp:2231\n-msgid \"Transaction aborted\"\n-msgstr \"Transakce zru\u0161ena\"\n-\n-#: ../../../src/ui.cpp:2239\n-msgid \"Lost connection, transaction cancelled\"\n-msgstr \"Spojen\u00ed se ztratilo, tak\u017ee transakce byla zru\u0161ena\"\n-\n-#: ../../../src/ui.cpp:2255\n-msgid \"Sending payment...\"\n-msgstr \"Pos\u00edl\u00e1m platbu...\"\n-\n-#: ../../../src/ui.cpp:2261\n-msgid \"The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n-msgstr \"Transakce byla odm\u00edtnuta.  Tohle m\u016f\u017ee nastat, pokud n\u011bjak\u00e9 mince z tv\u00e9 pen\u011b\u017eenky u\u017e jednou byly utraceny, nap\u0159\u00edklad pokud pou\u017e\u00edv\u00e1\u0161 kopii souboru wallet.dat a mince byly utraceny v druh\u00e9 kopii, ale nebyly ozna\u010deny jako utracen\u00e9 v t\u00e9to.\"\n-\n-#: ../../../src/ui.cpp:2270\n-msgid \"Waiting for confirmation...\"\n-msgstr \"\u010cek\u00e1m na potvrzen\u00ed...\"\n-\n-#: ../../../src/ui.cpp:2288\n-msgid \"\"\n-\"The payment was sent, but the recipient was unable to verify it.\\n\"\n-\"The transaction is recorded and will credit to the recipient,\\n\"\n-\"but the comment information will be blank.\"\n-msgstr \"\"\n-\"Platba byla posl\u00e1na, ale p\u0159\u00edjemce nen\u00ed schopen ji ov\u011b\u0159it.\\n\"\n-\"Transakce je zaznamen\u00e1na a bude p\u0159ips\u00e1na p\u0159\u00edjemci,\\n\"\n-\"ale pozn\u00e1mka u platby bude pr\u00e1zdn\u00e1.\"\n-\n-#: ../../../src/ui.cpp:2297\n-msgid \"Payment was sent, but an invalid response was received\"\n-msgstr \"Platba byla odesl\u00e1na, ale p\u0159i\u0161la neplatn\u00e1 odpov\u011b\u010f\"\n-\n-#: ../../../src/ui.cpp:2303\n-msgid \"Payment completed\"\n-msgstr \"Platba je kompletn\u00ed\"\n-\n-#: ../../../src/ui.cpp:2334\n-#: ../../../src/ui.cpp:2480\n-#: ../../../src/ui.cpp:2517\n-msgid \"Name\"\n-msgstr \"Jm\u00e9no\"\n-\n-#: ../../../src/ui.cpp:2335\n-#: ../../../src/ui.cpp:2480\n-#: ../../../src/ui.cpp:2517\n-msgid \"Address\"\n-msgstr \"Adresa\"\n-\n-#: ../../../src/ui.cpp:2337\n-#: ../../../src/ui.cpp:2492\n-msgid \"Label\"\n-msgstr \"Ozna\u010den\u00ed\"\n-\n-#: ../../../src/ui.cpp:2338\n-#: ../../../src/uibase.cpp:837\n-msgid \"Bitcoin Address\"\n-msgstr \"Bitcoinov\u00e1 adresa\"\n-\n-#: ../../../src/ui.cpp:2462\n-msgid \"This is one of your own addresses for receiving payments and cannot be entered in the address book.  \"\n-msgstr \"Tohle je jedna z tv\u00fdch vlastn\u00edch adres pro p\u0159\u00edjem plateb a nem\u016f\u017ee b\u00fdt zad\u00e1na do adres\u00e1\u0159e.\"\n-\n-#: ../../../src/ui.cpp:2480\n-#: ../../../src/ui.cpp:2486\n-msgid \"Edit Address\"\n-msgstr \"Upravit adresu\"\n-\n-#: ../../../src/ui.cpp:2492\n-msgid \"Edit Address Label\"\n-msgstr \"Upravit ozna\u010den\u00ed adresy\"\n-\n-#: ../../../src/ui.cpp:2517\n-#: ../../../src/ui.cpp:2523\n-msgid \"Add Address\"\n-msgstr \"P\u0159idat adresu\"\n-\n-#: ../../../src/ui.cpp:2600\n-msgid \"Bitcoin\"\n-msgstr \"Bitcoin\"\n-\n-#: ../../../src/ui.cpp:2602\n-msgid \"Bitcoin - Generating\"\n-msgstr \"Bitcoin - Generov\u00e1n\u00ed\"\n-\n-#: ../../../src/ui.cpp:2604\n-msgid \"Bitcoin - (not connected)\"\n-msgstr \"Bitcoin - (nep\u0159ipojen)\"\n-\n-#: ../../../src/ui.cpp:2683\n-msgid \"&Open Bitcoin\"\n-msgstr \"&Otev\u0159\u00edt Bitcoin\"\n-\n-#: ../../../src/ui.cpp:2684\n-msgid \"&Send Bitcoins\"\n-msgstr \"&Poslat Bitcoiny\"\n-\n-#: ../../../src/ui.cpp:2685\n-msgid \"O&ptions...\"\n-msgstr \"&Mo\u017enosti...\"\n-\n-#: ../../../src/ui.cpp:2688\n-#: ../../../src/uibase.cpp:25\n-msgid \"E&xit\"\n-msgstr \"&Konec\"\n-\n-#: ../../../src/ui.cpp:2904\n-msgid \"Program has crashed and will terminate.  \"\n-msgstr \"Program havaroval a bude ukon\u010den.\"\n-\n-#: ../../../src/main.cpp:1866\n-msgid \"Warning: Disk space is low  \"\n-msgstr \"Upozorn\u011bn\u00ed: Na disku je m\u00e1lo m\u00edsta\"\n-\n-#: ../../../src/main.cpp:3990\n-#, c-format\n-msgid \"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds  \"\n-msgstr \"Chyba: Tato transakce vy\u017eaduje transak\u010dn\u00ed poplatek nejm\u00e9n\u011b %s kv\u016fli sv\u00e9mu objemu, komplexnosti nebo utr\u00e1cen\u00ed ned\u00e1vno p\u0159ijat\u00e9 hotovosti\"\n-\n-#: ../../../src/main.cpp:3992\n-msgid \"Error: Transaction creation failed  \"\n-msgstr \"Chyba: Vytvo\u0159en\u00ed transakce selhalo\"\n-\n-#: ../../../src/main.cpp:4001\n-msgid \"Error: The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n-msgstr \"Chyba: Transakce byla odm\u00edtnuta.  Tohle m\u016f\u017ee nastat, pokud n\u011bjak\u00e9 mince z tv\u00e9 pen\u011b\u017eenky u\u017e jednou byly utraceny, nap\u0159\u00edklad pokud pou\u017e\u00edv\u00e1\u0161 kopii souboru wallet.dat a mince byly utraceny v druh\u00e9 kopii, ale nebyly ozna\u010deny jako utracen\u00e9 v t\u00e9to.\"\n-\n-#: ../../../src/main.cpp:4014\n-msgid \"Invalid amount\"\n-msgstr \"Neplatn\u00e1 \u010d\u00e1stka\"\n-\n-#: ../../../src/main.cpp:4021\n-msgid \"Invalid bitcoin address\"\n-msgstr \"Neplatn\u00e1 Bitcoinov\u00e1 adresa\"\n-\n-#: ../../../src/rpc.cpp:1802\n-#: ../../../src/rpc.cpp:1804\n-#, c-format\n-msgid \"To use the %s option\"\n-msgstr \"Pro pou\u017eit\u00ed volby %s\"\n-\n-#: ../../../src/rpc.cpp:1806\n-#, c-format\n-msgid \"\"\n-\"Warning: %s, you must set rpcpassword=<password>\\n\"\n-\"in the configuration file: %s\\n\"\n-\"If the file does not exist, create it with owner-readable-only file permissions.\\n\"\n-msgstr \"\"\n-\"Varov\u00e1n\u00ed: %s, mus\u00ed\u0161 nastavit rpcpassword=<heslo>\\n\"\n-\"v konfigura\u010dn\u00edm souboru: %s\\n\"\n-\"Pokud tenhle soubor neexistuje, vytvo\u0159 ho s opr\u00e1vn\u011bn\u00edm pro \u010dten\u00ed pouze pro vlastn\u00edka.\\n\"\n-\n-#: ../../../src/rpc.cpp:1974\n-#, c-format\n-msgid \"\"\n-\"You must set rpcpassword=<password> in the configuration file:\\n\"\n-\"%s\\n\"\n-\"If the file does not exist, create it with owner-readable-only file permissions.\"\n-msgstr \"\"\n-\"Mus\u00ed\u0161 nastavit rpcpassword=<heslo> v konfigura\u010dn\u00edm souboru:\\n\"\n-\"%s\\n\"\n-\"Pokud tenhle soubor neexistuje, vytvo\u0159 ho s opr\u00e1vn\u011bn\u00edm pro \u010dten\u00ed pouze pro vlastn\u00edka.\"\n-\n-#: ../../../src/util.cpp:866\n-msgid \"Warning: Please check that your computer's date and time are correct.  If your clock is wrong Bitcoin will not work properly.\"\n-msgstr \"Varov\u00e1n\u00ed: Pros\u00edm zkontroluj, \u017ee datum a \u010das jsou na tv\u00e9m po\u010d\u00edta\u010di spr\u00e1vn\u011b nastaveny. Pokud jsou nastaveny \u0161patn\u011b, Bitcoin nebude fungovat spr\u00e1vn\u011b.\"\n-\n-#: ../../../src/util.cpp:899\n-msgid \"beta\"\n-msgstr \"beta\"\n-\n-#: ../../../src/uibase.cpp:28\n-msgid \"&File\"\n-msgstr \"&Soubor\"\n-\n-#: ../../../src/uibase.cpp:32\n-msgid \"&Your Receiving Addresses...\"\n-msgstr \"Tv\u00e1 Bitcoinov\u00e1 &adresa...\"\n-\n-#: ../../../src/uibase.cpp:36\n-msgid \"&Options...\"\n-msgstr \"M&o\u017enosti\"\n-\n-#: ../../../src/uibase.cpp:39\n-msgid \"&Settings\"\n-msgstr \"Nas&taven\u00ed\"\n-\n-#: ../../../src/uibase.cpp:43\n-msgid \"&About...\"\n-msgstr \"&O programu\"\n-\n-#: ../../../src/uibase.cpp:46\n-msgid \"&Help\"\n-msgstr \"&N\u00e1pov\u011bda\"\n-\n-#: ../../../src/uibase.cpp:56\n-msgid \"Address Book\"\n-msgstr \"Adres\u00e1\u0159\"\n+msgstr \"&Spustit Bitcoin p\u0159i startu okenn\u00edho syst\u00e9mu\"\n \n-#: ../../../src/uibase.cpp:69\n-msgid \"Your Bitcoin Address:\"\n-msgstr \"Tv\u00e1 Bitcoinov\u00e1 adresa:\"\n+#: ../../../src/ui.cpp:1878\n+msgid \"&Minimize on close\"\n+msgstr \"&Zav\u0159en\u00edm pouze skr\u00fdt\"\n \n-#: ../../../src/uibase.cpp:76\n-msgid \" &New... \"\n-msgstr \" &Nov\u00e1...\"\n+#: ../../../src/ui.cpp:2020\n+#, c-format\n+msgid \"version %s\"\n+msgstr \"verze %s\"\n \n-#: ../../../src/uibase.cpp:79\n-#: ../../../src/uibase.cpp:780\n-#: ../../../src/uibase.cpp:883\n-msgid \" &Copy to Clipboard \"\n-msgstr \" &Kop\u00edrovat do schr\u00e1nky\"\n+#: ../../../src/ui.cpp:2143\n+msgid \"Error in amount  \"\n+msgstr \"Chyba v \u010d\u00e1stce\"\n \n-#: ../../../src/uibase.cpp:93\n-msgid \"Balance:\"\n-msgstr \"Stav \u00fa\u010dtu:\"\n+#: ../../../src/ui.cpp:2148\n+msgid \"Amount exceeds your balance  \"\n+msgstr \"\u010c\u00e1stka p\u0159ekra\u010duje stav \u00fa\u010dtu\"\n \n-#: ../../../src/uibase.cpp:109\n-msgid \" All\"\n-msgstr \" V\u0161e\"\n+#: ../../../src/ui.cpp:2153\n+msgid \"Total exceeds your balance when the \"\n+msgstr \"Celkov\u00e1 \u010d\u00e1stka p\u0159esahuje stav tv\u00e9ho \u00fa\u010dtu, kdy\u017e \"\n \n-#: ../../../src/uibase.cpp:109\n-msgid \" Sent\"\n-msgstr \" Odeslan\u00e9\"\n+#: ../../../src/ui.cpp:2153\n+msgid \" transaction fee is included  \"\n+msgstr \" transak\u010dn\u00ed poplatek je zahrnut\"\n \n-#: ../../../src/uibase.cpp:109\n-msgid \" Received\"\n-msgstr \" P\u0159ijat\u00e9\"\n+#: ../../../src/ui.cpp:2176\n+msgid \"Payment sent  \"\n+msgstr \"Platba odesl\u00e1na\"\n \n-#: ../../../src/uibase.cpp:109\n-msgid \" In Progress\"\n-msgstr \" Pracuje se na tom\"\n+#: ../../../src/ui.cpp:2202\n+msgid \"Invalid address  \"\n+msgstr \"Neplatn\u00e1 adresa\"\n \n-#: ../../../src/uibase.cpp:130\n-msgid \"All Transactions\"\n-msgstr \"V\u0161echny transakce\"\n+#: ../../../src/ui.cpp:2257\n+#, c-format\n+msgid \"Sending %s to %s\"\n+msgstr \"Pos\u00edl\u00e1m %s %s\"\n \n-#: ../../../src/uibase.cpp:141\n-msgid \"Sent/Received\"\n-msgstr \"Odeslan\u00e9/P\u0159ijat\u00e9\"\n+#: ../../../src/ui.cpp:2330\n+#: ../../../src/ui.cpp:2363\n+msgid \"CANCELLED\"\n+msgstr \"ZRU\u0160ENO\"\n \n-#: ../../../src/uibase.cpp:152\n-msgid \"Sent\"\n-msgstr \"Odeslan\u00e9\"\n+#: ../../../src/ui.cpp:2334\n+msgid \"Cancelled\"\n+msgstr \"Zru\u0161eno\"\n \n-#: ../../../src/uibase.cpp:163\n-msgid \"Received\"\n-msgstr \"P\u0159ijat\u00e9\"\n+#: ../../../src/ui.cpp:2336\n+msgid \"Transfer cancelled  \"\n+msgstr \"P\u0159evod zru\u0161en\"\n \n-#: ../../../src/uibase.cpp:302\n-#: ../../../src/uibase.cpp:443\n-#: ../../../src/uibase.cpp:542\n-#: ../../../src/uibase.cpp:722\n-#: ../../../src/uibase.cpp:783\n-#: ../../../src/uibase.cpp:892\n-#: ../../../src/uibase.cpp:981\n-msgid \"OK\"\n-msgstr \"&Budi\u017e\"\n+#: ../../../src/ui.cpp:2389\n+msgid \"Error: \"\n+msgstr \"Chyba: \"\n \n-#: ../../../src/uibase.cpp:345\n-msgid \"&Start Bitcoin on system startup\"\n-msgstr \"&Spustit Bitcoin p\u0159i startu syst\u00e9mu\"\n+#: ../../../src/ui.cpp:2408\n+msgid \"Connecting...\"\n+msgstr \"P\u0159ipojuji...\"\n \n-#: ../../../src/uibase.cpp:348\n-msgid \"&Minimize to the tray instead of the taskbar\"\n-msgstr \"&Minimalizov\u00e1vat do ikony v panelu\"\n+#: ../../../src/ui.cpp:2413\n+msgid \"Unable to connect\"\n+msgstr \"Nemohu se p\u0159ipojit\"\n \n-#: ../../../src/uibase.cpp:351\n-msgid \"Map port using &UPnP\"\n-msgstr \"Namapovat port p\u0159es &UPnP\"\n+#: ../../../src/ui.cpp:2418\n+msgid \"Requesting public key...\"\n+msgstr \"Po\u017eaduji ve\u0159ejn\u00fd kl\u00ed\u010d...\"\n \n-#: ../../../src/uibase.cpp:354\n-msgid \"M&inimize to the tray on close\"\n-msgstr \"Zav\u0159en\u00edm &minimalizovat do ikony\"\n+#: ../../../src/ui.cpp:2430\n+msgid \"Received public key...\"\n+msgstr \"P\u0159ijat ve\u0159ejn\u00fd kl\u00ed\u010d...\"\n \n-#: ../../../src/uibase.cpp:360\n-msgid \"&Connect through socks4 proxy: \"\n-msgstr \"&P\u0159ipojit p\u0159es socks4 proxy:\"\n+#: ../../../src/ui.cpp:2444\n+msgid \"Recipient is not accepting transactions sent by IP address\"\n+msgstr \"P\u0159\u00edjemce neakceptuje transakce poslan\u00e9 IP adresou\"\n \n-#: ../../../src/uibase.cpp:371\n-msgid \"Proxy &IP:\"\n-msgstr \"&IP adresa proxy:\"\n+#: ../../../src/ui.cpp:2446\n+msgid \"Transfer was not accepted\"\n+msgstr \"P\u0159evod nebyl akceptov\u00e1n\"\n \n-#: ../../../src/uibase.cpp:379\n-msgid \" &Port:\"\n-msgstr \" &Port:\"\n+#: ../../../src/ui.cpp:2455\n+msgid \"Invalid response received\"\n+msgstr \"P\u0159i\u0161la neplatn\u00e1 odpov\u011b\u010f\"\n \n-#: ../../../src/uibase.cpp:392\n-msgid \"Optional transaction fee per KB that helps make sure your transactions are processed quickly.  Most transactions are 1KB.  Fee 0.01 recommended.\"\n-msgstr \"Dobrovoln\u00fd transak\u010dn\u00ed poplatek za ka\u017ed\u00fd zapo\u010dat\u00fd KB napom\u00e1h\u00e1 tomu, aby tv\u00e9 transakce byly rychle zpracov\u00e1ny. V\u011bt\u0161ina transakc\u00ed m\u00e1 do 1 KB. Doporu\u010den\u00e1 v\u00fd\u0161e poplatku je 0.01.\"\n+#: ../../../src/ui.cpp:2470\n+msgid \"Creating transaction...\"\n+msgstr \"Vytv\u00e1\u0159\u00edm transakci...\"\n \n-#: ../../../src/uibase.cpp:399\n-msgid \"Pay transaction fee:\"\n-msgstr \"V\u00fd\u0161e transak\u010dn\u00edho poplatku:\"\n+#: ../../../src/ui.cpp:2489\n+#, c-format\n+msgid \"This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds\"\n+msgstr \"Tato transakce vy\u017eaduje transak\u010dn\u00ed poplatek nejm\u00e9n\u011b %s kv\u016fli sv\u00e9mu objemu, komplexnosti nebo utr\u00e1cen\u00ed ned\u00e1vno p\u0159ijat\u00e9 hotovosti\"\n \n-#: ../../../src/uibase.cpp:420\n-msgid \"// [don't translate] Test panel 2 for future expansion\"\n-msgstr \"\"\n+#: ../../../src/ui.cpp:2491\n+msgid \"Transaction creation failed\"\n+msgstr \"Vytvo\u0159en\u00ed transakce selhalo\"\n \n-#: ../../../src/uibase.cpp:424\n-msgid \"// [don't translate] Let's not start multiple pages until the first page is filled up\"\n-msgstr \"\"\n+#: ../../../src/ui.cpp:2502\n+msgid \"Transaction aborted\"\n+msgstr \"Transakce zru\u0161ena\"\n \n-#: ../../../src/uibase.cpp:446\n-#: ../../../src/uibase.cpp:668\n-#: ../../../src/uibase.cpp:727\n-#: ../../../src/uibase.cpp:786\n-#: ../../../src/uibase.cpp:895\n-#: ../../../src/uibase.cpp:984\n-msgid \"Cancel\"\n-msgstr \"&Zru\u0161it\"\n+#: ../../../src/ui.cpp:2510\n+msgid \"Lost connection, transaction cancelled\"\n+msgstr \"Spojen\u00ed se ztratilo, tak\u017ee transakce byla zru\u0161ena\"\n \n-#: ../../../src/uibase.cpp:449\n-msgid \"&Apply\"\n-msgstr \"&Pou\u017e\u00edt\"\n+#: ../../../src/ui.cpp:2526\n+msgid \"Sending payment...\"\n+msgstr \"Pos\u00edl\u00e1m platbu...\"\n \n-#: ../../../src/uibase.cpp:508\n-msgid \"Bitcoin \"\n-msgstr \"Bitcoin\"\n+#: ../../../src/ui.cpp:2532\n+msgid \"The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n+msgstr \"Transakce byla odm\u00edtnuta.  Tohle m\u016f\u017ee nastat, pokud n\u011bjak\u00e9 mince z tv\u00e9 pen\u011b\u017eenky u\u017e jednou byly utraceny, nap\u0159\u00edklad pokud pou\u017e\u00edv\u00e1\u0161 kopii souboru wallet.dat a mince byly utraceny v druh\u00e9 kopii, ale nebyly ozna\u010deny jako utracen\u00e9 v t\u00e9to.\"\n \n-#: ../../../src/uibase.cpp:514\n-msgid \"version\"\n-msgstr \"verze\"\n+#: ../../../src/ui.cpp:2541\n+msgid \"Waiting for confirmation...\"\n+msgstr \"\u010cek\u00e1m na potvrzen\u00ed...\"\n \n-#: ../../../src/uibase.cpp:525\n+#: ../../../src/ui.cpp:2559\n msgid \"\"\n-\"Copyright (c) 2009-2011 Bitcoin Developers\\n\"\n-\"\\n\"\n-\"This is experimental software.\\n\"\n-\"\\n\"\n-\"Distributed under the MIT/X11 software license, see the accompanying file \\n\"\n-\"license.txt or http://www.opensource.org/licenses/mit-license.php.\\n\"\n-\"\\n\"\n-\"This product includes software developed by the OpenSSL Project for use in the \\n\"\n-\"OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\n\"\n-\"Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.\"\n+\"The payment was sent, but the recipient was unable to verify it.\\n\"\n+\"The transaction is recorded and will credit to the recipient,\\n\"\n+\"but the comment information will be blank.\"\n msgstr \"\"\n-\"Copyright (c) 2009-2011 V\u00fdvoj\u00e1\u0159i Bitcoinu\\n\"\n-\"\\n\"\n-\"Tohle je experiment\u00e1ln\u00ed program.\\n\"\n-\"\\n\"\n-\"\u0160\u00ed\u0159en pod licenc\u00ed MIT/X11, viz p\u0159ilo\u017een\u00fd soubor license.txt nebo \\n\"\n-\"http://www.opensource.org/licenses/mit-license.php.\\n\"\n-\"\\n\"\n-\"Tento produkt zahrnuje programy vyvinut\u00e9 OpenSSL Projektem pro pou\u017eit\u00ed \\n\"\n-\"v OpenSSL Toolkitu (http://www.openssl.org/) a kryptografick\u00fd program od \\n\"\n-\"Erika Younga (eay@cryptsoft.com) a program UPnP od Thomase Bernarda.\"\n+\"Platba byla posl\u00e1na, ale p\u0159\u00edjemce nen\u00ed schopen ji ov\u011b\u0159it.\\n\"\n+\"Transakce je zaznamen\u00e1na a bude p\u0159ips\u00e1na p\u0159\u00edjemci,\\n\"\n+\"ale pozn\u00e1mka u platby bude pr\u00e1zdn\u00e1.\"\n \n-#: ../../../src/uibase.cpp:581\n-msgid \"Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"\n-msgstr \"Vlo\u017e Bitcoinovou adresu (nap\u0159. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"\n+#: ../../../src/ui.cpp:2568\n+msgid \"Payment was sent, but an invalid response was received\"\n+msgstr \"Platba byla odesl\u00e1na, ale p\u0159i\u0161la neplatn\u00e1 odpov\u011b\u010f\"\n \n-#: ../../../src/uibase.cpp:595\n-msgid \"Pay &To:\"\n-msgstr \"&Komu:\"\n+#: ../../../src/ui.cpp:2574\n+msgid \"Payment completed\"\n+msgstr \"Platba je kompletn\u00ed\"\n \n-#: ../../../src/uibase.cpp:610\n-msgid \"&Paste\"\n-msgstr \"&Vlo\u017eit\"\n+#: ../../../src/ui.cpp:2616\n+#: ../../../src/ui.cpp:2763\n+#: ../../../src/ui.cpp:2803\n+msgid \"Name\"\n+msgstr \"Jm\u00e9no\"\n \n-#: ../../../src/uibase.cpp:613\n-msgid \" Address &Book...\"\n-msgstr \" &Adres\u00e1\u0159...\"\n+#: ../../../src/ui.cpp:2617\n+#: ../../../src/ui.cpp:2763\n+#: ../../../src/ui.cpp:2803\n+msgid \"Address\"\n+msgstr \"Adresa\"\n \n-#: ../../../src/uibase.cpp:620\n-msgid \"&Amount:\"\n-msgstr \"&\u010c\u00e1stka\"\n+#: ../../../src/ui.cpp:2619\n+#: ../../../src/ui.cpp:2775\n+msgid \"Label\"\n+msgstr \"Ozna\u010den\u00ed\"\n \n-#: ../../../src/uibase.cpp:630\n-msgid \"T&ransfer:\"\n-msgstr \"&P\u0159evod:\"\n+#: ../../../src/ui.cpp:2745\n+msgid \"This is one of your own addresses for receiving payments and cannot be entered in the address book.  \"\n+msgstr \"Tohle je jedna z tv\u00fdch vlastn\u00edch adres pro p\u0159\u00edjem plateb a nem\u016f\u017ee b\u00fdt zad\u00e1na do adres\u00e1\u0159e.\"\n \n-#: ../../../src/uibase.cpp:636\n-msgid \" Standard\"\n-msgstr \" Standard\"\n+#: ../../../src/ui.cpp:2763\n+#: ../../../src/ui.cpp:2769\n+msgid \"Edit Address\"\n+msgstr \"Upravit adresu\"\n \n-#: ../../../src/uibase.cpp:663\n-msgid \"&Send\"\n-msgstr \"&Poslat\"\n+#: ../../../src/ui.cpp:2775\n+msgid \"Edit Address Label\"\n+msgstr \"Upravit ozna\u010den\u00ed adresy\"\n \n-#: ../../../src/uibase.cpp:711\n-msgid \"\"\n-\"\\n\"\n-\"\\n\"\n-\"Connecting...\"\n-msgstr \"\"\n-\"\\n\"\n-\"\\n\"\n-\"P\u0159ipojuji...\"\n+#: ../../../src/ui.cpp:2803\n+#: ../../../src/ui.cpp:2809\n+msgid \"Add Address\"\n+msgstr \"P\u0159idat adresu\"\n \n-#: ../../../src/uibase.cpp:761\n-msgid \"These are your Bitcoin addresses for receiving payments.  You may want to give a different one to each sender so you can keep track of who is paying you.  The highlighted address is displayed in the main window.\"\n-msgstr \"Tohle jsou tv\u00e9 Bitcoinov\u00e9 adresy na p\u0159\u00edjem plateb.  Asi bude\u0161 cht\u00edt d\u00e1t jinou adresu ka\u017ed\u00e9mu odes\u00edlateli, abys v\u011bd\u011bl, kdo ti kolik platil.  Ozna\u010den\u00e1 adresa bude zobrazena v hlavn\u00edm okn\u011b.\"\n+#: ../../../src/ui.cpp:2897\n+msgid \"Bitcoin\"\n+msgstr \"Bitcoin\"\n \n-#: ../../../src/uibase.cpp:774\n-#: ../../../src/uibase.cpp:886\n-msgid \"&Edit...\"\n-msgstr \"&Upravit...\"\n+#: ../../../src/ui.cpp:2899\n+msgid \"Bitcoin - Generating\"\n+msgstr \"Bitcoin - Generov\u00e1n\u00ed\"\n \n-#: ../../../src/uibase.cpp:777\n-#: ../../../src/uibase.cpp:889\n-msgid \" &New Address... \"\n-msgstr \" &Nov\u00e1 adresa...\"\n+#: ../../../src/ui.cpp:2901\n+msgid \"Bitcoin - (not connected)\"\n+msgstr \"Bitcoin - (nep\u0159ipojen)\"\n \n-#: ../../../src/uibase.cpp:849\n-msgid \"Sending\"\n-msgstr \"Ciz\u00ed adresy (pro odes\u00edl\u00e1n\u00ed)\"\n+#: ../../../src/ui.cpp:2980\n+msgid \"&Open Bitcoin\"\n+msgstr \"&Otev\u0159\u00edt Bitcoin\"\n \n-#: ../../../src/uibase.cpp:857\n-msgid \"These are your Bitcoin addresses for receiving payments.  You can give a different one to each sender to keep track of who is paying you.  The highlighted address will be displayed in the main window.\"\n-msgstr \"Tohle jsou tv\u00e9 Bitcoinov\u00e9 adresy na p\u0159\u00edjem plateb.  M\u016f\u017ee\u0161 d\u00e1t jinou adresu ka\u017ed\u00e9mu odes\u00edlateli, abys v\u011bd\u011bl, kdo ti kolik platil.  Ozna\u010den\u00e1 adresa bude zobrazena v hlavn\u00edm okn\u011b.\"\n+#: ../../../src/ui.cpp:2981\n+msgid \"&Send Bitcoins\"\n+msgstr \"&Poslat Bitcoiny\"\n \n-#: ../../../src/uibase.cpp:870\n-msgid \"Receiving\"\n-msgstr \"Tvoje adresy (pro p\u0159\u00edjem)\"\n+#: ../../../src/ui.cpp:2982\n+msgid \"O&ptions...\"\n+msgstr \"&Mo\u017enosti...\"\n \n-#: ../../../src/uibase.cpp:880\n-msgid \"&Delete\"\n-msgstr \"&Smazat\"\n+#: ../../../src/ui.cpp:3211\n+msgid \"Program has crashed and will terminate.  \"\n+msgstr \"Program havaroval a bude ukon\u010den.\"\n \n-#: ../../../src/init.cpp:142\n+#: ../../../src/init.cpp:163\n msgid \"Bitcoin version\"\n msgstr \"Bitcoin verze\"\n \n-#: ../../../src/init.cpp:143\n+#: ../../../src/init.cpp:164\n msgid \"Usage:\"\n msgstr \"U\u017eit\u00ed:\"\n \n-#: ../../../src/init.cpp:145\n+#: ../../../src/init.cpp:166\n msgid \"Send command to -server or bitcoind\\n\"\n msgstr \"Poslat p\u0159\u00edkaz pro -server nebo bitcoind\\n\"\n \n-#: ../../../src/init.cpp:146\n+#: ../../../src/init.cpp:167\n msgid \"List commands\\n\"\n msgstr \"V\u00fdpis p\u0159\u00edkaz\u016f\\n\"\n \n-#: ../../../src/init.cpp:147\n+#: ../../../src/init.cpp:168\n msgid \"Get help for a command\\n\"\n msgstr \"Z\u00edskat n\u00e1pov\u011bdu pro p\u0159\u00edkaz\\n\"\n \n-#: ../../../src/init.cpp:148\n+#: ../../../src/init.cpp:169\n msgid \"Options:\\n\"\n msgstr \"Mo\u017enosti:\\n\"\n \n-#: ../../../src/init.cpp:149\n+#: ../../../src/init.cpp:170\n msgid \"Specify configuration file (default: bitcoin.conf)\\n\"\n msgstr \"Konfigura\u010dn\u00ed soubor (v\u00fdchoz\u00ed: bitcoin.conf)\\n\"\n \n-#: ../../../src/init.cpp:150\n+#: ../../../src/init.cpp:171\n msgid \"Specify pid file (default: bitcoind.pid)\\n\"\n msgstr \"PID soubor (v\u00fdchoz\u00ed: bitcoind.pid)\\n\"\n \n-#: ../../../src/init.cpp:151\n+#: ../../../src/init.cpp:172\n msgid \"Generate coins\\n\"\n msgstr \"Generovat mince\\n\"\n \n-#: ../../../src/init.cpp:152\n+#: ../../../src/init.cpp:173\n msgid \"Don't generate coins\\n\"\n msgstr \"Negenerovat mince\\n\"\n \n-#: ../../../src/init.cpp:153\n+#: ../../../src/init.cpp:174\n msgid \"Start minimized\\n\"\n msgstr \"Startovat minimalizovan\u011b\\n\"\n \n-#: ../../../src/init.cpp:154\n+#: ../../../src/init.cpp:175\n msgid \"Specify data directory\\n\"\n msgstr \"Adres\u00e1\u0159 pro data\\n\"\n \n-#: ../../../src/init.cpp:155\n+#: ../../../src/init.cpp:176\n+msgid \"Specify connection timeout (in milliseconds)\\n\"\n+msgstr \"Zadej \u010dasov\u00fd limit spojen\u00ed (v milisekund\u00e1ch)\\n\"\n+\n+#: ../../../src/init.cpp:177\n msgid \"Connect through socks4 proxy\\n\"\n msgstr \"P\u0159ipojovat se skrz socks4 proxy\\n\"\n \n-#: ../../../src/init.cpp:156\n+#: ../../../src/init.cpp:178\n msgid \"Allow DNS lookups for addnode and connect\\n\"\n msgstr \"Povolit DNS dotazy pro addnode (p\u0159id\u00e1n\u00ed uzlu) a connect (p\u0159ipojen\u00ed)\\n\"\n \n-#: ../../../src/init.cpp:157\n+#: ../../../src/init.cpp:179\n msgid \"Add a node to connect to\\n\"\n msgstr \"P\u0159idat uzel, ke kter\u00e9mu se p\u0159ipojit\\n\"\n \n-#: ../../../src/init.cpp:158\n+#: ../../../src/init.cpp:180\n msgid \"Connect only to the specified node\\n\"\n msgstr \"P\u0159ipojovat se pouze k udan\u00e9mu uzlu\\n\"\n \n-#: ../../../src/init.cpp:159\n+#: ../../../src/init.cpp:181\n msgid \"Don't accept connections from outside\\n\"\n msgstr \"Nep\u0159ij\u00edmat p\u0159ipojen\u00ed zven\u010d\u00ed\\n\"\n \n-#: ../../../src/init.cpp:162\n+#: ../../../src/init.cpp:184\n msgid \"Don't attempt to use UPnP to map the listening port\\n\"\n msgstr \"Nesna\u017eit se pou\u017e\u00edt UPnP k namapov\u00e1n\u00ed naslouchac\u00edho portu\\n\"\n \n-#: ../../../src/init.cpp:164\n+#: ../../../src/init.cpp:186\n msgid \"Attempt to use UPnP to map the listening port\\n\"\n msgstr \"Sna\u017eit se pou\u017e\u00edt UPnP k namapov\u00e1n\u00ed naslouchac\u00edho portu\\n\"\n \n-#: ../../../src/init.cpp:167\n+#: ../../../src/init.cpp:189\n msgid \"Fee per KB to add to transactions you send\\n\"\n msgstr \"Poplatek za KB, kter\u00fd se p\u0159id\u00e1 ke ka\u017ed\u00e9 odeslan\u00e9 transakci\\n\"\n \n-#: ../../../src/init.cpp:169\n+#: ../../../src/init.cpp:191\n msgid \"Accept command line and JSON-RPC commands\\n\"\n msgstr \"Akceptovat p\u0159\u00edkazy z p\u0159\u00edkazov\u00e9 \u0159\u00e1dky a p\u0159es JSON-RPC\\n\"\n \n-#: ../../../src/init.cpp:172\n+#: ../../../src/init.cpp:194\n msgid \"Run in the background as a daemon and accept commands\\n\"\n msgstr \"B\u011b\u017eet na pozad\u00ed jako d\u00e9mon a akceptovat p\u0159\u00edkazy\\n\"\n \n-#: ../../../src/init.cpp:174\n+#: ../../../src/init.cpp:196\n msgid \"Use the test network\\n\"\n msgstr \"Pou\u017e\u00edt testovac\u00ed s\u00ed\u0165\\n\"\n \n-#: ../../../src/init.cpp:175\n+#: ../../../src/init.cpp:197\n msgid \"Username for JSON-RPC connections\\n\"\n msgstr \"U\u017eivatelsk\u00e9 jm\u00e9no pro JSON-RPC spojen\u00ed\\n\"\n \n-#: ../../../src/init.cpp:176\n+#: ../../../src/init.cpp:198\n msgid \"Password for JSON-RPC connections\\n\"\n msgstr \"Heslo pro JSON-RPC spojen\u00ed\\n\"\n \n-#: ../../../src/init.cpp:177\n+#: ../../../src/init.cpp:199\n msgid \"Listen for JSON-RPC connections on <port> (default: 8332)\\n\"\n msgstr \"\u010cekat na JSON-RPC spojen\u00ed na <portu> (v\u00fdchoz\u00ed: 8332)\\n\"\n \n-#: ../../../src/init.cpp:178\n+#: ../../../src/init.cpp:200\n msgid \"Allow JSON-RPC connections from specified IP address\\n\"\n msgstr \"Povolit JSON-RPC spojen\u00ed ze specifikovan\u00e9 IP adresy\\n\"\n \n-#: ../../../src/init.cpp:179\n+#: ../../../src/init.cpp:201\n msgid \"Send commands to node running on <ip> (default: 127.0.0.1)\\n\"\n msgstr \"Pos\u00edlat p\u0159\u00edkazy uzlu b\u011b\u017e\u00edc\u00edm na <ip> (v\u00fdchoz\u00ed: 127.0.0.1)\\n\"\n \n-#: ../../../src/init.cpp:180\n+#: ../../../src/init.cpp:202\n msgid \"Set key pool size to <n> (default: 100)\\n\"\n msgstr \"Nastavit z\u00e1sobn\u00edk kl\u00ed\u010d\u016f na velikost <n> (v\u00fdchoz\u00ed: 100)\\n\"\n \n-#: ../../../src/init.cpp:181\n+#: ../../../src/init.cpp:203\n msgid \"Rescan the block chain for missing wallet transactions\\n\"\n msgstr \"P\u0159eskenovat \u0159et\u011bzec blok\u016f na chyb\u011bj\u00edc\u00ed transakce pen\u011b\u017eenky\\n\"\n \n-#: ../../../src/init.cpp:185\n+#: ../../../src/init.cpp:207\n msgid \"\"\n \"\\n\"\n \"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\\n\"\n msgstr \"\"\n \"\\n\"\n \"Mo\u017enosti SSL: (viz instrukce nastaven\u00ed SSL v Bitcoin Wiki)\\n\"\n \n-#: ../../../src/init.cpp:186\n+#: ../../../src/init.cpp:208\n msgid \"Use OpenSSL (https) for JSON-RPC connections\\n\"\n msgstr \"Pou\u017e\u00edt OpenSSL (https) pro JSON-RPC spojen\u00ed\\n\"\n \n-#: ../../../src/init.cpp:187\n+#: ../../../src/init.cpp:209\n msgid \"Server certificate file (default: server.cert)\\n\"\n msgstr \"Soubor se serverov\u00fdm certifik\u00e1tem (v\u00fdchoz\u00ed: server.cert)\\n\"\n \n-#: ../../../src/init.cpp:188\n+#: ../../../src/init.cpp:210\n msgid \"Server private key (default: server.pem)\\n\"\n msgstr \"Soubor se serverov\u00fdm soukrom\u00fdm kl\u00ed\u010dem (v\u00fdchoz\u00ed: server.pem)\\n\"\n \n-#: ../../../src/init.cpp:189\n+#: ../../../src/init.cpp:211\n msgid \"Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\\n\"\n msgstr \"Akceptovateln\u00e9 \u0161ifry (v\u00fdchoz\u00ed: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\\n\"\n \n-#: ../../../src/init.cpp:193\n+#: ../../../src/init.cpp:215\n msgid \"This help message\\n\"\n msgstr \"Tato n\u00e1pov\u011bda\\n\"\n \n-#: ../../../src/init.cpp:330\n+#: ../../../src/init.cpp:353\n #, c-format\n msgid \"Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.\"\n msgstr \"Neda\u0159\u00ed se mi z\u00edskat z\u00e1mek na datov\u00fd adres\u00e1\u0159 %s. Bitcoin pravd\u011bpodobn\u011b u\u017e jednou b\u011b\u017e\u00ed.\"\n \n-#: ../../../src/init.cpp:356\n+#: ../../../src/init.cpp:379\n msgid \"Error loading addr.dat      \\n\"\n msgstr \"Chyba p\u0159i na\u010d\u00edt\u00e1n\u00ed addr.dat      \\n\"\n \n-#: ../../../src/init.cpp:362\n+#: ../../../src/init.cpp:385\n msgid \"Error loading blkindex.dat      \\n\"\n msgstr \"Chyba p\u0159i na\u010d\u00edt\u00e1n\u00ed blkindex.dat      \\n\"\n \n-#: ../../../src/init.cpp:369\n+#: ../../../src/init.cpp:396\n+msgid \"Error loading wallet.dat: Wallet corrupted      \\n\"\n+msgstr \"Chyba p\u0159i na\u010d\u00edt\u00e1n\u00ed wallet.dat: pen\u011b\u017eenka je po\u0161kozen\u00e1      \\n\"\n+\n+#: ../../../src/init.cpp:398\n+msgid \"Error loading wallet.dat: Wallet requires newer version of Bitcoin      \\n\"\n+msgstr \"Chyba p\u0159i na\u010d\u00edt\u00e1n\u00ed wallet.dat: pen\u011b\u017eenka vy\u017eaduje nov\u011bj\u0161\u00ed verzi Bitcoinu      \\n\"\n+\n+#: ../../../src/init.cpp:400\n msgid \"Error loading wallet.dat      \\n\"\n msgstr \"Chyba p\u0159i na\u010d\u00edt\u00e1n\u00ed wallet.dat      \\n\"\n \n-#: ../../../src/init.cpp:449\n+#: ../../../src/init.cpp:489\n msgid \"Invalid -proxy address\"\n msgstr \"Neplatn\u00e1 -proxy adresa\"\n \n-#: ../../../src/init.cpp:472\n+#: ../../../src/init.cpp:514\n msgid \"Invalid amount for -paytxfee=<amount>\"\n msgstr \"Neplatn\u00e1 \u010d\u00e1stka pro -paytxfee=<\u010d\u00e1stka>\"\n \n-#: ../../../src/init.cpp:476\n+#: ../../../src/init.cpp:518\n msgid \"Warning: -paytxfee is set very high.  This is the transaction fee you will pay if you send a transaction.\"\n msgstr \"Varov\u00e1n\u00ed: -paytxfee je nastaveno velmi vysoko. Toto je transak\u010dn\u00ed poplatek, kter\u00fd zaplat\u00ed\u0161 za ka\u017edou poslanou transakci.\"\n \n-#: ../../../src/uibase.h:147\n+#: ../../../src/net.cpp:1622\n+#, c-format\n+msgid \"Unable to bind to port %d on this computer.  Bitcoin is probably already running.\"\n+msgstr \"Neda\u0159\u00ed se mi p\u0159ipojit na port %d na tomhle po\u010d\u00edta\u010di.  Bitcoin u\u017e pravd\u011bpodobn\u011b jednou b\u011b\u017e\u00ed.\"\n+\n+#: ../../../src/main.cpp:1437\n+msgid \"Warning: Disk space is low  \"\n+msgstr \"Upozorn\u011bn\u00ed: Na disku je m\u00e1lo m\u00edsta\"\n+\n+#: ../../../src/uibase.h:151\n msgid \"Transaction Details\"\n msgstr \"Detaily transakce\"\n \n-#: ../../../src/uibase.h:199\n+#: ../../../src/uibase.h:203\n msgid \"Options\"\n msgstr \"Mo\u017enosti\"\n \n-#: ../../../src/uibase.h:228\n+#: ../../../src/uibase.h:232\n msgid \"About Bitcoin\"\n msgstr \"O Bitcoinu\"\n \n-#: ../../../src/uibase.h:337\n+#: ../../../src/uibase.h:341\n msgid \"Your Bitcoin Addresses\"\n msgstr \"Tv\u00e1 Bitcoinov\u00e1 adresa\"\n \n+#~ msgid \"Invalid bitcoin address\"\n+#~ msgstr \"Neplatn\u00e1 Bitcoinov\u00e1 adresa\""
      },
      {
        "sha": "17b5f10468e9fd5007175c030649943cae3a7308",
        "filename": "locale/pl/LC_MESSAGES/bitcoin.po",
        "status": "modified",
        "additions": 266,
        "deletions": 370,
        "changes": 636,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/locale/pl/LC_MESSAGES/bitcoin.po",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/locale/pl/LC_MESSAGES/bitcoin.po",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/pl/LC_MESSAGES/bitcoin.po?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -2,10 +2,10 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: Bitcoin\\n\"\n \"Report-Msgid-Bugs-To: \\n\"\n-\"POT-Creation-Date: 2011-07-14 18:55+0100\\n\"\n+\"POT-Creation-Date: 2011-06-28 20:11+0100\\n\"\n \"PO-Revision-Date: \\n\"\n-\"Last-Translator: Dawid Spiechowicz <spiechu@gmail.com>\\n\"\n-\"Language-Team: Spiechu <spiechu@gmail.com>\\n\"\n+\"Last-Translator: Krystian Maksymowicz <krystian.maksymowicz@gmail.com>\\n\"\n+\"Language-Team: Spiechu <spiechu@gmail.com>, Krystian Maksymowicz <krystian.maksymowicz@gmail.com>\\n\"\n \"MIME-Version: 1.0\\n\"\n \"Content-Type: text/plain; charset=UTF-8\\n\"\n \"Content-Transfer-Encoding: 8bit\\n\"\n@@ -18,26 +18,26 @@ msgstr \"\"\n \"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\\n\"\n \"X-Poedit-SearchPath-0: ../../..\\n\"\n \n-#: ../../../src/net.cpp:1615\n+#: ../../../src/net.cpp:1590\n #, c-format\n msgid \"Unable to bind to port %d on this computer.  Bitcoin is probably already running.\"\n-msgstr \"Nie mo\u017cna powi\u0105za\u0107 z portem %d tego komputera. Prawdopodobnie program Bitcoin jest ju\u017c uruchomiony.\"\n+msgstr \"Powi\u0105zanie z portem %d nie powiod\u0142o si\u0119. Prawdopodobnie Bitcoin jest ju\u017c uruchomiony.\"\n \n #: ../../../src/init.cpp:162\n msgid \"Bitcoin version\"\n msgstr \"Wersja Bitcoin\"\n \n #: ../../../src/init.cpp:163\n msgid \"Usage:\"\n-msgstr \"U\u017cycie:\"\n+msgstr \"Zastosowanie:\"\n \n #: ../../../src/init.cpp:165\n msgid \"Send command to -server or bitcoind\\n\"\n msgstr \"Wy\u015blij polecenie do -server lub bitcoind\\n\"\n \n #: ../../../src/init.cpp:166\n msgid \"List commands\\n\"\n-msgstr \"Wy\u015bwietl komendy\\n\"\n+msgstr \"Lista komend\\n\"\n \n #: ../../../src/init.cpp:167\n msgid \"Get help for a command\\n\"\n@@ -53,7 +53,7 @@ msgstr \"Okre\u015bl plik konfiguracyjny (domy\u015blnie: bitcoin.conf)\\n\"\n \n #: ../../../src/init.cpp:170\n msgid \"Specify pid file (default: bitcoind.pid)\\n\"\n-msgstr \"Wybierz plik pid (domy\u015blnie: bitcoind.pid)\\n\"\n+msgstr \"Okre\u015bl plik pid (domy\u015blnie: bitcoind.pid)\\n\"\n \n #: ../../../src/init.cpp:171\n msgid \"Generate coins\\n\"\n@@ -69,20 +69,22 @@ msgstr \"Uruchom zminimalizowany\\n\"\n \n #: ../../../src/init.cpp:174\n msgid \"Specify data directory\\n\"\n-msgstr \"Wybierz katalog z danymi\\n\"\n+msgstr \"Okre\u015bl katalog danych\\n\"\n \n #: ../../../src/init.cpp:175\n msgid \"Specify connection timeout (in milliseconds)\\n\"\n-msgstr \"Ustaw czas up\u0142ywu po\u0142\u0105czenia (w milisekundach)\\n\"\n+msgstr \"Ustaw limit czasu po\u0142\u0105czenia (w milisekundach)\\n\"\n \n #: ../../../src/init.cpp:176\n msgid \"Connect through socks4 proxy\\n\"\n-msgstr \"Po\u0142\u0105cz przez socks4 proxy\\n\"\n+msgstr \"Po\u0142\u0105cz przez proxy socks4\\n\"\n \n+# 2do\n #: ../../../src/init.cpp:177\n msgid \"Allow DNS lookups for addnode and connect\\n\"\n-msgstr \"Umo\u017cliwiaj wyszukiwanie DNS dla dodania w\u0119z\u0142a i po\u0142\u0105czenia\\n\"\n+msgstr \"Umo\u017cliwiaj wyszukiwanie DNS przy dodawaniu w\u0119z\u0142a i po\u0142\u0105czenia\\n\"\n \n+# 2do\n #: ../../../src/init.cpp:178\n msgid \"Add a node to connect to\\n\"\n msgstr \"Dodaj w\u0119ze\u0142 do kt\u00f3rego po\u0142\u0105czy\u0107\\n\"\n@@ -188,37 +190,29 @@ msgstr \"B\u0142\u0105d \u0142adowania addr.dat      \\n\"\n msgid \"Error loading blkindex.dat      \\n\"\n msgstr \"B\u0142\u0105d \u0142adowania blkindex.dat      \\n\"\n \n-#: ../../../src/init.cpp:394\n-msgid \"Error loading wallet.dat: Wallet corrupted      \\n\"\n-msgstr \"B\u0142\u0105d \u0142adowania wallet.dat: Portfel uszkodzony      \\n\"\n-\n-#: ../../../src/init.cpp:396\n-msgid \"Error loading wallet.dat: Wallet requires newer version of Bitcoin      \\n\"\n-msgstr \"B\u0142\u0105d \u0142adowania wallet.dat: Portfel wymaga nowszej wersji Bitcoin      \\n\"\n-\n-#: ../../../src/init.cpp:398\n+#: ../../../src/init.cpp:391\n msgid \"Error loading wallet.dat      \\n\"\n msgstr \"B\u0142\u0105d \u0142adowania wallet.dat      \\n\"\n \n-#: ../../../src/init.cpp:488\n+#: ../../../src/init.cpp:481\n msgid \"Invalid -proxy address\"\n msgstr \"Niew\u0142a\u015bciwy adres -proxy\"\n \n-#: ../../../src/init.cpp:513\n+#: ../../../src/init.cpp:504\n msgid \"Invalid amount for -paytxfee=<amount>\"\n msgstr \"Nieprawid\u0142owa kwota w -paytxfee=<amount>\"\n \n-#: ../../../src/init.cpp:517\n+#: ../../../src/init.cpp:508\n msgid \"Warning: -paytxfee is set very high.  This is the transaction fee you will pay if you send a transaction.\"\n msgstr \"Ostrze\u017cenie: ustawienie -paytxfee jest bardzo wysokie. To jest prowizja transakcji, kt\u00f3r\u0105 zap\u0142acisz je\u017celi wy\u015blesz transakcj\u0119.\"\n \n-#: ../../../src/rpc.cpp:2100\n-#: ../../../src/rpc.cpp:2102\n+#: ../../../src/rpc.cpp:1822\n+#: ../../../src/rpc.cpp:1824\n #, c-format\n msgid \"To use the %s option\"\n msgstr \"U\u017cycie opcji %s\"\n \n-#: ../../../src/rpc.cpp:2104\n+#: ../../../src/rpc.cpp:1826\n #, c-format\n msgid \"\"\n \"Warning: %s, you must set rpcpassword=<password>\\n\"\n@@ -229,7 +223,7 @@ msgstr \"\"\n \"w pliku konfiguracyjnym: %s\\n\"\n \"Je\u017celi plik nie istnieje, utw\u00f3rz go z uprawnieniami tylko do odczytu dla w\u0142a\u015bciciela.\\n\"\n \n-#: ../../../src/rpc.cpp:2277\n+#: ../../../src/rpc.cpp:1994\n #, c-format\n msgid \"\"\n \"You must set rpcpassword=<password> in the configuration file:\\n\"\n@@ -240,454 +234,368 @@ msgstr \"\"\n \"%s\\n\"\n \"Je\u017celi plik nie istnieje, utw\u00f3rz go z uprawnieniami tylko do odczytu dla w\u0142a\u015bciciela.\"\n \n-#: ../../../src/util.cpp:869\n+#: ../../../src/util.cpp:874\n msgid \"Warning: Please check that your computer's date and time are correct.  If your clock is wrong Bitcoin will not work properly.\"\n-msgstr \"Ostrze\u017cenie: Sprawd\u017a czy ustawienia daty i czasu komputera s\u0105 prawid\u0142owe. Je\u017celi zegar jest \u017ale ustawiony, Bitcoin nie b\u0119dzie poprawnie dzia\u0142a\u0142.\"\n+msgstr \"Ostrze\u017cenie: Sprawd\u017a czy ustawienia daty i czasu komputera s\u0105 prawid\u0142owe. Je\u017celi zegar jest \u017ale ustawiony, Bitcoin nie b\u0119dzie dzia\u0142a\u0142 poprawnie.\"\n \n-#: ../../../src/util.cpp:903\n+#: ../../../src/util.cpp:908\n msgid \"beta\"\n msgstr \"beta\"\n \n #: ../../../src/ui.cpp:216\n #, c-format\n msgid \"This transaction is over the size limit.  You can still send it for a fee of %s, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?\"\n-msgstr \"Ta transakcja jest poza limitem wielko\u015bci. W dalszym ci\u0105gu mo\u017cesz wys\u0142a\u0107 j\u0105 z prowizj\u0105 %s, kt\u00f3ra dotrze do w\u0119z\u0142\u00f3w przetwarzaj\u0105cych twoj\u0105 transakcj\u0119 i pomo\u017ce utrzyma\u0107 sie\u0107. Chcesz zap\u0142aci\u0107 prowizj\u0119?\"\n-\n-#: ../../../src/ui.cpp:259\n-#: ../../../src/ui.cpp:1246\n-msgid \"Enter the current passphrase to the wallet.\"\n-msgstr \"Wpisz obecne has\u0142o do portfela.\"\n-\n-#: ../../../src/ui.cpp:260\n-#: ../../../src/ui.cpp:1182\n-#: ../../../src/ui.cpp:1199\n-#: ../../../src/ui.cpp:1247\n-#: ../../../src/ui.cpp:1273\n-#: ../../../src/ui.cpp:1293\n-msgid \"Passphrase\"\n-msgstr \"Has\u0142o\"\n-\n-#: ../../../src/ui.cpp:266\n-msgid \"Please supply the current wallet decryption passphrase.\"\n-msgstr \"Prosz\u0119 dostarczy\u0107 has\u0142o do odszyfrowania portfela.\"\n-\n-#: ../../../src/ui.cpp:274\n-#: ../../../src/ui.cpp:1258\n-#: ../../../src/ui.cpp:1315\n-msgid \"The passphrase entered for the wallet decryption was incorrect.\"\n-msgstr \"Wpisane has\u0142o do odszyfrowania portfela jest nieprawid\u0142owe.\"\n+msgstr \"Ta transakcja przekracza limit wielko\u015bci. W dalszym ci\u0105gu mo\u017cesz j\u0105 wys\u0142a\u0107 z prowizj\u0105 %s, kt\u00f3ra dotrze do w\u0119z\u0142\u00f3w przetwarzaj\u0105cych twoj\u0105 transakcj\u0119 i pomo\u017ce utrzyma\u0107 ca\u0142\u0105 sie\u0107. Chcesz zap\u0142aci\u0107 prowizj\u0119?\"\n \n-#: ../../../src/ui.cpp:351\n+#: ../../../src/ui.cpp:316\n msgid \"Status\"\n-msgstr \"Status\"\n+msgstr \"Stan\"\n \n-#: ../../../src/ui.cpp:352\n+#: ../../../src/ui.cpp:317\n msgid \"Date\"\n msgstr \"Data\"\n \n-#: ../../../src/ui.cpp:353\n+#: ../../../src/ui.cpp:318\n msgid \"Description\"\n msgstr \"Opis\"\n \n-#: ../../../src/ui.cpp:354\n+#: ../../../src/ui.cpp:319\n msgid \"Debit\"\n-msgstr \"Obci\u0105\u017cenie\"\n+msgstr \"Debet\"\n \n-#: ../../../src/ui.cpp:355\n+#: ../../../src/ui.cpp:320\n msgid \"Credit\"\n-msgstr \"Suma\"\n+msgstr \"Kredyt\"\n \n-#: ../../../src/ui.cpp:566\n+#: ../../../src/ui.cpp:526\n #, c-format\n msgid \"Open for %d blocks\"\n msgstr \"Otw\u00f3rz na %d blok\u00f3w\"\n \n-#: ../../../src/ui.cpp:568\n+#: ../../../src/ui.cpp:528\n #, c-format\n msgid \"Open until %s\"\n msgstr \"Otwarte dop\u00f3ki %s\"\n \n-#: ../../../src/ui.cpp:574\n+#: ../../../src/ui.cpp:534\n #, c-format\n msgid \"%d/offline?\"\n msgstr \"%d/offline?\"\n \n-#: ../../../src/ui.cpp:576\n+#: ../../../src/ui.cpp:536\n #, c-format\n msgid \"%d/unconfirmed\"\n-msgstr \"%d/niepotwierdzono\"\n+msgstr \"%d/niepotwierdzona\"\n \n-#: ../../../src/ui.cpp:578\n+#: ../../../src/ui.cpp:538\n #, c-format\n msgid \"%d confirmations\"\n msgstr \"%d potwierdze\u0144\"\n \n-#: ../../../src/ui.cpp:663\n+#: ../../../src/ui.cpp:623\n msgid \"Generated\"\n msgstr \"Wygenerowano\"\n \n-#: ../../../src/ui.cpp:671\n+#: ../../../src/ui.cpp:631\n #, c-format\n msgid \"Generated (%s matures in %d more blocks)\"\n msgstr \"Wygenerowano (%s dojrza\u0142ych w %d wi\u0119cej blok\u00f3w)\"\n \n-#: ../../../src/ui.cpp:675\n+#: ../../../src/ui.cpp:635\n msgid \"Generated - Warning: This block was not received by any other nodes and will probably not be accepted!\"\n msgstr \"Wygenerowano - Ostrze\u017cenie: Ten blok nie zosta\u0142 otrzymany przez \u017caden inny w\u0119ze\u0142 i prawdopodobnie nie zostanie zaakceptowany!\"\n \n-#: ../../../src/ui.cpp:679\n+#: ../../../src/ui.cpp:639\n msgid \"Generated (not accepted)\"\n msgstr \"Wygenerowano (nie zaakceptowano)\"\n \n-#: ../../../src/ui.cpp:689\n+#: ../../../src/ui.cpp:649\n msgid \"From: \"\n msgstr \"Od:\"\n \n-#: ../../../src/ui.cpp:713\n+#: ../../../src/ui.cpp:673\n msgid \"Received with: \"\n msgstr \"Otrzymano z:\"\n \n-#: ../../../src/ui.cpp:759\n+#: ../../../src/ui.cpp:719\n msgid \"Payment to yourself\"\n msgstr \"P\u0142atno\u015b\u0107 dla siebie samego\"\n \n-#: ../../../src/ui.cpp:793\n+#: ../../../src/ui.cpp:753\n msgid \"To: \"\n msgstr \"Do:\"\n \n-#: ../../../src/ui.cpp:1108\n+#: ../../../src/ui.cpp:1068\n msgid \"    Generating\"\n msgstr \"    Generowanie\"\n \n-#: ../../../src/ui.cpp:1110\n+#: ../../../src/ui.cpp:1070\n msgid \"(not connected)\"\n msgstr \"(nie po\u0142\u0105czony)\"\n \n-#: ../../../src/ui.cpp:1113\n+#: ../../../src/ui.cpp:1073\n #, c-format\n msgid \"     %d connections     %d blocks     %d transactions\"\n msgstr \"     %d po\u0142\u0105cze\u0144     %d blok\u00f3w     %d transakcji\"\n \n-#: ../../../src/ui.cpp:1170\n-msgid \"Wallet already encrypted.\"\n-msgstr \"Portfel ju\u017c zaszyfrowany.\"\n-\n-#: ../../../src/ui.cpp:1181\n-msgid \"\"\n-\"Enter the new passphrase to the wallet.\\n\"\n-\"Please use a passphrase of 10 or more random characters, or eight or more words.\"\n-msgstr \"\"\n-\"Wpisz nowe has\u0142o dla portfela.\\n\"\n-\"Prosz\u0119 u\u017cy\u0107 has\u0142a sk\u0142adaj\u0105cego si\u0119 z 10 lub wi\u0119cej losowych znak\u00f3w albo o\u015bmiu lub wi\u0119cej s\u0142\u00f3w.\"\n-\n-#: ../../../src/ui.cpp:1188\n-#: ../../../src/ui.cpp:1281\n-msgid \"Error: The supplied passphrase was too short.\"\n-msgstr \"B\u0142\u0105d: Dostarczone has\u0142o jest za kr\u00f3tkie.\"\n-\n-#: ../../../src/ui.cpp:1192\n-msgid \"\"\n-\"WARNING: If you encrypt your wallet and lose your passphrase, you will LOSE ALL OF YOUR BITCOINS!\\n\"\n-\"Are you sure you wish to encrypt your wallet?\"\n-msgstr \"\"\n-\"OSTRZE\u017bENIE: Je\u017celi zaszyfrujesz sw\u00f3j portfel i zgubisz has\u0142o, STRACISZ WSZYSTKIE SWOJE BITCOINY!\\n\"\n-\"Czy jeste\u015b pewny, \u017ce chcesz zaszyfrowa\u0107 sw\u00f3j portfel?\"\n-\n-#: ../../../src/ui.cpp:1198\n-msgid \"Please re-enter your new wallet passphrase.\"\n-msgstr \"Prosz\u0119 powt\u00f3rzy\u0107 nowe has\u0142o do portfela.\"\n-\n-#: ../../../src/ui.cpp:1207\n-#: ../../../src/ui.cpp:1303\n-msgid \"Error: the supplied passphrases didn't match.\"\n-msgstr \"B\u0142\u0105d: dostarczone has\u0142a si\u0119 nie zgadzaj\u0105.\"\n-\n-#: ../../../src/ui.cpp:1217\n-msgid \"Wallet encryption failed.\"\n-msgstr \"Szyfrowanie portfela nie powiod\u0142o si\u0119.\"\n-\n-#: ../../../src/ui.cpp:1224\n-msgid \"\"\n-\"Wallet Encrypted.\\n\"\n-\"Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.\"\n-msgstr \"\"\n-\"Portfel zaszyfrowany.\\n\"\n-\"Pami\u0119taj, \u017ce zaszyfrowanie portfela nie chroni w pe\u0142ni twoich bitcoin\u00f3w przed kradzie\u017c\u0105 przeprowadzon\u0105 przez z\u0142o\u015bliwe oprogramowanie infekuj\u0105ce tw\u00f3j komputer.\"\n-\n-#: ../../../src/ui.cpp:1235\n-msgid \"Wallet is unencrypted, please encrypt it first.\"\n-msgstr \"Portfel jest niezaszyfrowany, prosz\u0119 najpierw zaszyfrowa\u0107.\"\n-\n-#: ../../../src/ui.cpp:1272\n-msgid \"Enter the new passphrase for the wallet.\"\n-msgstr \"Wprowad\u017a nowe has\u0142o dla portfela.\"\n-\n-#: ../../../src/ui.cpp:1292\n-msgid \"Re-enter the new passphrase for the wallet.\"\n-msgstr \"Powt\u00f3rnie wprowad\u017a nowe has\u0142o dla portfela.\"\n-\n-#: ../../../src/ui.cpp:1324\n-msgid \"Wallet Passphrase Changed.\"\n-msgstr \"Has\u0142o dla portfela zosta\u0142o zmienione.\"\n-\n-#: ../../../src/ui.cpp:1381\n-#: ../../../src/ui.cpp:2816\n+#: ../../../src/ui.cpp:1178\n+#: ../../../src/ui.cpp:2571\n msgid \"New Receiving Address\"\n-msgstr \"Nowy Adres Odbiorczy\"\n+msgstr \"Nowy adres odbiorczy\"\n \n-#: ../../../src/ui.cpp:1382\n-#: ../../../src/ui.cpp:2817\n+#: ../../../src/ui.cpp:1179\n+#: ../../../src/ui.cpp:2572\n msgid \"\"\n \"You should use a new address for each payment you receive.\\n\"\n \"\\n\"\n \"Label\"\n msgstr \"\"\n-\"Powiniene\u015b u\u017cy\u0107 nowego adresu dla ka\u017cdej p\u0142atno\u015bci, kt\u00f3r\u0105 otrzymasz.\\n\"\n+\"Powiniene\u015b u\u017cywa\u0107 nowych adres\u00f3w dla ka\u017cdej otrzymywanej p\u0142atno\u015bci.\\n\"\n \"\\n\"\n \"Etykieta\"\n \n-#: ../../../src/ui.cpp:1466\n+#: ../../../src/ui.cpp:1251\n msgid \"<b>Status:</b> \"\n msgstr \"<b>Status:</b>\"\n \n-#: ../../../src/ui.cpp:1471\n+#: ../../../src/ui.cpp:1256\n msgid \", has not been successfully broadcast yet\"\n msgstr \", nie zosta\u0142 jeszcze prawid\u0142owo rozg\u0142oszony\"\n \n-#: ../../../src/ui.cpp:1473\n+#: ../../../src/ui.cpp:1258\n #, c-format\n msgid \", broadcast through %d node\"\n msgstr \", rozg\u0142asza przez %d w\u0119ze\u0142\"\n \n-#: ../../../src/ui.cpp:1475\n+#: ../../../src/ui.cpp:1260\n #, c-format\n msgid \", broadcast through %d nodes\"\n msgstr \", rozg\u0142asza przez %d w\u0119z\u0142\u00f3w\"\n \n-#: ../../../src/ui.cpp:1479\n+#: ../../../src/ui.cpp:1264\n msgid \"<b>Date:</b> \"\n msgstr \"<b>Data:</b>\"\n \n-#: ../../../src/ui.cpp:1487\n+#: ../../../src/ui.cpp:1272\n msgid \"<b>Source:</b> Generated<br>\"\n msgstr \"<b>\u0179r\u00f3d\u0142o:</b> Wygenerowano<br>\"\n \n-#: ../../../src/ui.cpp:1493\n-#: ../../../src/ui.cpp:1511\n+#: ../../../src/ui.cpp:1278\n+#: ../../../src/ui.cpp:1296\n msgid \"<b>From:</b> \"\n msgstr \"<b>Od:</b>\"\n \n-#: ../../../src/ui.cpp:1511\n+#: ../../../src/ui.cpp:1296\n msgid \"unknown\"\n msgstr \"nieznany\"\n \n-#: ../../../src/ui.cpp:1512\n-#: ../../../src/ui.cpp:1536\n-#: ../../../src/ui.cpp:1595\n+#: ../../../src/ui.cpp:1297\n+#: ../../../src/ui.cpp:1321\n+#: ../../../src/ui.cpp:1380\n msgid \"<b>To:</b> \"\n msgstr \"<b>Do:</b>\"\n \n-#: ../../../src/ui.cpp:1515\n+#: ../../../src/ui.cpp:1300\n msgid \" (yours, label: \"\n msgstr \" (twoja, etykieta: \"\n \n-#: ../../../src/ui.cpp:1517\n+#: ../../../src/ui.cpp:1302\n msgid \" (yours)\"\n msgstr \" (twoja)\"\n \n-#: ../../../src/ui.cpp:1554\n-#: ../../../src/ui.cpp:1566\n-#: ../../../src/ui.cpp:1612\n-#: ../../../src/ui.cpp:1629\n+#: ../../../src/ui.cpp:1339\n+#: ../../../src/ui.cpp:1351\n+#: ../../../src/ui.cpp:1397\n+#: ../../../src/ui.cpp:1414\n msgid \"<b>Credit:</b> \"\n-msgstr \"<b>Suma:</b>\"\n+msgstr \"<b>Kredyt:</b>\"\n \n-#: ../../../src/ui.cpp:1556\n+#: ../../../src/ui.cpp:1341\n #, c-format\n msgid \"(%s matures in %d more blocks)\"\n msgstr \"(%s dojrza\u0142ych w %d wi\u0119cej blok\u00f3w)\"\n \n-#: ../../../src/ui.cpp:1558\n+#: ../../../src/ui.cpp:1343\n msgid \"(not accepted)\"\n msgstr \"(nie zaakceptowano)\"\n \n-#: ../../../src/ui.cpp:1603\n-#: ../../../src/ui.cpp:1611\n-#: ../../../src/ui.cpp:1626\n+#: ../../../src/ui.cpp:1388\n+#: ../../../src/ui.cpp:1396\n+#: ../../../src/ui.cpp:1411\n msgid \"<b>Debit:</b> \"\n-msgstr \"<b>Obci\u0105\u017cenie:</b>\"\n+msgstr \"<b>Debet:</b>\"\n \n-#: ../../../src/ui.cpp:1617\n+#: ../../../src/ui.cpp:1402\n msgid \"<b>Transaction fee:</b> \"\n msgstr \"<b>Prowizja transakcji:</b>\"\n \n-#: ../../../src/ui.cpp:1633\n+#: ../../../src/ui.cpp:1418\n msgid \"<b>Net amount:</b> \"\n msgstr \"<b>Kwota netto:</b>\"\n \n-#: ../../../src/ui.cpp:1640\n+#: ../../../src/ui.cpp:1425\n msgid \"Message:\"\n msgstr \"Wiadomo\u015b\u0107:\"\n \n-#: ../../../src/ui.cpp:1642\n+#: ../../../src/ui.cpp:1427\n msgid \"Comment:\"\n msgstr \"Komentarz:\"\n \n-#: ../../../src/ui.cpp:1645\n+#: ../../../src/ui.cpp:1430\n msgid \"Generated coins must wait 120 blocks before they can be spent.  When you generated this block, it was broadcast to the network to be added to the block chain.  If it fails to get into the chain, it will change to \\\"not accepted\\\" and not be spendable.  This may occasionally happen if another node generates a block within a few seconds of yours.\"\n-msgstr \"Wygenerowane monety musz\u0105 poczeka\u0107 120 blok\u00f3w zanim mog\u0105 zosta\u0107 wydane. Gdy wygenerowa\u0142e\u015b ten blok, zosta\u0142 rozg\u0142oszony do sieci z przeznaczeniem do dodania do \u0142a\u0144cucha blok\u00f3w. Je\u017celi nie uda si\u0119 doda\u0107 bloku do \u0142a\u0144cucha, zostanie oznaczony jako \\\"nie zaakceptowany\\\" i nie b\u0119dzie m\u00f3g\u0142 zosta\u0107 wydany. Sporadycznie dzieje si\u0119 tak je\u017celi inny w\u0119ze\u0142 wygeneruje blok nie dalej ni\u017c kilka sekund od ciebie.\"\n+msgstr \"Wygenerowane monety musz\u0105 poczeka\u0107 120 blok\u00f3w zanim b\u0119d\u0105 mog\u0142y by\u0107 wydane. Wygenerowany blok zosta\u0142 zosta\u0142 rozg\u0142oszony w sieci z przeznaczeniem dodawania nowych blok\u00f3w do \u0142a\u0144cucha. Je\u017celi nie uda si\u0119 go doda\u0107 do \u0142a\u0144cucha, zostanie oznaczony jako \\\"nie zaakceptowany\\\" i nie b\u0119dzie m\u00f3g\u0142 by\u0107 wydany. Sporadycznie dzieje si\u0119 tak je\u017celi inny w\u0119ze\u0142 wygeneruje blok nie dalej ni\u017c kilka sekund od ciebie.\"\n \n-#: ../../../src/ui.cpp:1825\n+#: ../../../src/ui.cpp:1610\n msgid \"Cannot write autostart/bitcoin.desktop file\"\n msgstr \"Nie mog\u0119 zapisa\u0107 pliku autostart/bitcoin.desktop\"\n \n-#: ../../../src/ui.cpp:1861\n+#: ../../../src/ui.cpp:1646\n msgid \"Main\"\n msgstr \"G\u0142\u00f3wne\"\n \n-#: ../../../src/ui.cpp:1871\n+#: ../../../src/ui.cpp:1656\n msgid \"&Start Bitcoin on window system startup\"\n msgstr \"&Uruchom Bitcoin przy starcie systemu\"\n \n-#: ../../../src/ui.cpp:1878\n+#: ../../../src/ui.cpp:1663\n msgid \"&Minimize on close\"\n msgstr \"&Minimalizuj przy zamkni\u0119ciu\"\n \n-#: ../../../src/ui.cpp:2020\n+#: ../../../src/ui.cpp:1805\n #, c-format\n msgid \"version %s\"\n msgstr \"wersja %s\"\n \n-#: ../../../src/ui.cpp:2143\n+#: ../../../src/ui.cpp:1928\n msgid \"Error in amount  \"\n msgstr \"Nieprawid\u0142owa kwota\"\n \n-#: ../../../src/ui.cpp:2143\n-#: ../../../src/ui.cpp:2148\n-#: ../../../src/ui.cpp:2153\n-#: ../../../src/ui.cpp:2202\n-#: ../../../src/uibase.cpp:61\n+#: ../../../src/ui.cpp:1928\n+#: ../../../src/ui.cpp:1933\n+#: ../../../src/ui.cpp:1938\n+#: ../../../src/ui.cpp:1973\n+#: ../../../src/uibase.cpp:55\n msgid \"Send Coins\"\n msgstr \"Wy\u015blij Monety\"\n \n-#: ../../../src/ui.cpp:2148\n+#: ../../../src/ui.cpp:1933\n msgid \"Amount exceeds your balance  \"\n msgstr \"Kwota przekracza tw\u00f3j stan konta\"\n \n-#: ../../../src/ui.cpp:2153\n+#: ../../../src/ui.cpp:1938\n msgid \"Total exceeds your balance when the \"\n msgstr \"Przekroczenie twojego stanu konta gdy\"\n \n-#: ../../../src/ui.cpp:2153\n+#: ../../../src/ui.cpp:1938\n msgid \" transaction fee is included  \"\n msgstr \" prowizja jest wliczona\"\n \n-#: ../../../src/ui.cpp:2176\n+#: ../../../src/ui.cpp:1956\n msgid \"Payment sent  \"\n msgstr \"Wys\u0142ano p\u0142atno\u015b\u0107\"\n \n-#: ../../../src/ui.cpp:2176\n-#: ../../../src/ui.cpp:2185\n-#: ../../../src/ui.cpp:2336\n-#: ../../../src/ui.cpp:2500\n-#: ../../../src/wallet.cpp:1097\n+#: ../../../src/ui.cpp:1956\n+#: ../../../src/ui.cpp:1961\n+#: ../../../src/ui.cpp:2107\n+#: ../../../src/ui.cpp:2260\n+#: ../../../src/wallet.cpp:924\n msgid \"Sending...\"\n msgstr \"Wysy\u0142anie...\"\n \n-#: ../../../src/ui.cpp:2202\n+#: ../../../src/ui.cpp:1973\n msgid \"Invalid address  \"\n msgstr \"Nieprawid\u0142owy adres\"\n \n-#: ../../../src/ui.cpp:2257\n+#: ../../../src/ui.cpp:2028\n #, c-format\n msgid \"Sending %s to %s\"\n msgstr \"Wysy\u0142anie %s do %s\"\n \n-#: ../../../src/ui.cpp:2330\n-#: ../../../src/ui.cpp:2363\n+#: ../../../src/ui.cpp:2101\n+#: ../../../src/ui.cpp:2134\n msgid \"CANCELLED\"\n msgstr \"ANULOWANO\"\n \n-#: ../../../src/ui.cpp:2334\n+#: ../../../src/ui.cpp:2105\n msgid \"Cancelled\"\n msgstr \"Anulowano\"\n \n-#: ../../../src/ui.cpp:2336\n+#: ../../../src/ui.cpp:2107\n msgid \"Transfer cancelled  \"\n-msgstr \"Transfer anulowano\"\n+msgstr \"Transfer anulowany\"\n \n-#: ../../../src/ui.cpp:2389\n+#: ../../../src/ui.cpp:2160\n msgid \"Error: \"\n msgstr \"B\u0142\u0105d:\"\n \n-#: ../../../src/ui.cpp:2403\n-#: ../../../src/ui.cpp:2474\n-#: ../../../src/wallet.cpp:1116\n+#: ../../../src/ui.cpp:2174\n+#: ../../../src/ui.cpp:2245\n+#: ../../../src/wallet.cpp:943\n msgid \"Insufficient funds\"\n msgstr \"Niewystarczaj\u0105ce fundusze\"\n \n-#: ../../../src/ui.cpp:2408\n+#: ../../../src/ui.cpp:2179\n msgid \"Connecting...\"\n msgstr \"\u0141\u0105czenie...\"\n \n-#: ../../../src/ui.cpp:2413\n+#: ../../../src/ui.cpp:2184\n msgid \"Unable to connect\"\n msgstr \"Nie mo\u017cna po\u0142\u0105czy\u0107\"\n \n-#: ../../../src/ui.cpp:2418\n+#: ../../../src/ui.cpp:2189\n msgid \"Requesting public key...\"\n msgstr \"\u017b\u0105danie klucza publicznego...\"\n \n-#: ../../../src/ui.cpp:2430\n+#: ../../../src/ui.cpp:2201\n msgid \"Received public key...\"\n msgstr \"Otrzymano klucz publiczny...\"\n \n-#: ../../../src/ui.cpp:2444\n+#: ../../../src/ui.cpp:2215\n msgid \"Recipient is not accepting transactions sent by IP address\"\n msgstr \"Adresat nie akceptuje transakcji wysy\u0142anych przez adres IP\"\n \n-#: ../../../src/ui.cpp:2446\n+#: ../../../src/ui.cpp:2217\n msgid \"Transfer was not accepted\"\n msgstr \"Transfer nie zosta\u0142 zaakceptowany\"\n \n-#: ../../../src/ui.cpp:2455\n+#: ../../../src/ui.cpp:2226\n msgid \"Invalid response received\"\n msgstr \"Otrzymano niepoprawn\u0105 odpowied\u017a\"\n \n-#: ../../../src/ui.cpp:2470\n+#: ../../../src/ui.cpp:2241\n msgid \"Creating transaction...\"\n msgstr \"Tworzenie transakcji...\"\n \n-#: ../../../src/ui.cpp:2489\n+#: ../../../src/ui.cpp:2253\n #, c-format\n msgid \"This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds\"\n-msgstr \"Ta transakcja wymaga prowizji co najmniej %s z uwagi na kwot\u0119, z\u0142o\u017cono\u015b\u0107 lub u\u017cycie niedawno otrzymanych funduszy\"\n+msgstr \"Ta transakcja wymaga prowizji co najmniej %s z uwagi na jej kwot\u0119, z\u0142o\u017cono\u015b\u0107 lub wykorzystanie niedawno otrzymanych funduszy\"\n \n-#: ../../../src/ui.cpp:2491\n+#: ../../../src/ui.cpp:2255\n msgid \"Transaction creation failed\"\n msgstr \"B\u0142\u0105d tworzenia transakcji \"\n \n-#: ../../../src/ui.cpp:2502\n+#: ../../../src/ui.cpp:2262\n msgid \"Transaction aborted\"\n-msgstr \"Transakcj\u0119 przerwano\"\n+msgstr \"Przerwano transakcj\u0119\"\n \n-#: ../../../src/ui.cpp:2510\n+#: ../../../src/ui.cpp:2270\n msgid \"Lost connection, transaction cancelled\"\n msgstr \"Utracono po\u0142\u0105czenie, transakcja anulowana\"\n \n-#: ../../../src/ui.cpp:2526\n+#: ../../../src/ui.cpp:2286\n msgid \"Sending payment...\"\n msgstr \"Wysy\u0142anie p\u0142atno\u015bci...\"\n \n-#: ../../../src/ui.cpp:2532\n+#: ../../../src/ui.cpp:2292\n msgid \"The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n msgstr \"Transakcja zosta\u0142a odrzucona. Mo\u017ce si\u0119 tak zdarzy\u0107 je\u017celi cz\u0119\u015b\u0107 monet w twoim portfelu zosta\u0142o wydanych, np. gdy u\u017cyto kopii pliku wallet.dat i monety zosta\u0142y wydane w kopii, a tutaj nie zosta\u0142y oznaczone jako wydane.\"\n \n-#: ../../../src/ui.cpp:2541\n+#: ../../../src/ui.cpp:2301\n msgid \"Waiting for confirmation...\"\n msgstr \"Oczekiwanie na potwierdzenie...\"\n \n-#: ../../../src/ui.cpp:2559\n+#: ../../../src/ui.cpp:2319\n msgid \"\"\n \"The payment was sent, but the recipient was unable to verify it.\\n\"\n \"The transaction is recorded and will credit to the recipient,\\n\"\n@@ -697,86 +605,86 @@ msgstr \"\"\n \"Transakcja zosta\u0142a zarejestrowana i zostanie przypisana do odbiorcy,\\n\"\n \"ale informacja w komentarzu b\u0119dzie pusta.\"\n \n-#: ../../../src/ui.cpp:2568\n+#: ../../../src/ui.cpp:2328\n msgid \"Payment was sent, but an invalid response was received\"\n msgstr \"P\u0142atno\u015b\u0107 zosta\u0142a wys\u0142ana, ale otrzymano nieprawid\u0142ow\u0105 odpowied\u017a\"\n \n-#: ../../../src/ui.cpp:2574\n+#: ../../../src/ui.cpp:2334\n msgid \"Payment completed\"\n msgstr \"P\u0142atno\u015b\u0107 zako\u0144czona\"\n \n-#: ../../../src/ui.cpp:2616\n-#: ../../../src/ui.cpp:2764\n-#: ../../../src/ui.cpp:2804\n+#: ../../../src/ui.cpp:2376\n+#: ../../../src/ui.cpp:2522\n+#: ../../../src/ui.cpp:2559\n msgid \"Name\"\n msgstr \"Nazwa\"\n \n-#: ../../../src/ui.cpp:2617\n-#: ../../../src/ui.cpp:2764\n-#: ../../../src/ui.cpp:2804\n+#: ../../../src/ui.cpp:2377\n+#: ../../../src/ui.cpp:2522\n+#: ../../../src/ui.cpp:2559\n msgid \"Address\"\n msgstr \"Adres\"\n \n-#: ../../../src/ui.cpp:2619\n-#: ../../../src/ui.cpp:2776\n+#: ../../../src/ui.cpp:2379\n+#: ../../../src/ui.cpp:2534\n msgid \"Label\"\n msgstr \"Etykieta\"\n \n-#: ../../../src/ui.cpp:2620\n-#: ../../../src/uibase.cpp:847\n+#: ../../../src/ui.cpp:2380\n+#: ../../../src/uibase.cpp:837\n msgid \"Bitcoin Address\"\n msgstr \"Adres Bitcoin\"\n \n-#: ../../../src/ui.cpp:2746\n+#: ../../../src/ui.cpp:2504\n msgid \"This is one of your own addresses for receiving payments and cannot be entered in the address book.  \"\n-msgstr \"To jest jeden z twoich adres\u00f3w na otrzymywane p\u0142atno\u015bci i nie mo\u017ce zosta\u0107 wpisany do ksi\u0119gi adresowej.\"\n+msgstr \"To jest jeden z twoich adres\u00f3w na otrzymywane p\u0142atno\u015bci i nie mo\u017ce zosta\u0107 wpisany do ksi\u0105\u017cki adresowej.\"\n \n-#: ../../../src/ui.cpp:2764\n-#: ../../../src/ui.cpp:2770\n+#: ../../../src/ui.cpp:2522\n+#: ../../../src/ui.cpp:2528\n msgid \"Edit Address\"\n-msgstr \"Edytuj Adres\"\n+msgstr \"Edytuj adres\"\n \n-#: ../../../src/ui.cpp:2776\n+#: ../../../src/ui.cpp:2534\n msgid \"Edit Address Label\"\n-msgstr \"Edytuj Etykiet\u0119 Adresu\"\n+msgstr \"Edytuj etykiet\u0119 adresu\"\n \n-#: ../../../src/ui.cpp:2804\n-#: ../../../src/ui.cpp:2810\n+#: ../../../src/ui.cpp:2559\n+#: ../../../src/ui.cpp:2565\n msgid \"Add Address\"\n-msgstr \"Dodaj Adres\"\n+msgstr \"Dodaj adres\"\n \n-#: ../../../src/ui.cpp:2898\n+#: ../../../src/ui.cpp:2642\n msgid \"Bitcoin\"\n msgstr \"Bitcoin\"\n \n-#: ../../../src/ui.cpp:2900\n+#: ../../../src/ui.cpp:2644\n msgid \"Bitcoin - Generating\"\n msgstr \"Bitcoin - Generowanie\"\n \n-#: ../../../src/ui.cpp:2902\n+#: ../../../src/ui.cpp:2646\n msgid \"Bitcoin - (not connected)\"\n msgstr \"Bitcoin - (nie po\u0142\u0105czony)\"\n \n-#: ../../../src/ui.cpp:2981\n+#: ../../../src/ui.cpp:2725\n msgid \"&Open Bitcoin\"\n msgstr \"&Otw\u00f3rz Bitcoin\"\n \n-#: ../../../src/ui.cpp:2982\n+#: ../../../src/ui.cpp:2726\n msgid \"&Send Bitcoins\"\n msgstr \"&Wy\u015blij Bitcoiny\"\n \n-#: ../../../src/ui.cpp:2983\n+#: ../../../src/ui.cpp:2727\n msgid \"O&ptions...\"\n msgstr \"O&pcje...\"\n \n-#: ../../../src/ui.cpp:2986\n+#: ../../../src/ui.cpp:2730\n #: ../../../src/uibase.cpp:25\n msgid \"E&xit\"\n msgstr \"W&yj\u015bcie\"\n \n-#: ../../../src/ui.cpp:3212\n+#: ../../../src/ui.cpp:2956\n msgid \"Program has crashed and will terminate.  \"\n-msgstr \"Program uleg\u0142 awarii i zostanie przerwany.\"\n+msgstr \"Program uleg\u0142 awarii i zostanie zamkni\u0119ty.\"\n \n #: ../../../src/main.cpp:1430\n msgid \"Warning: Disk space is low  \"\n@@ -788,162 +696,154 @@ msgstr \"&Plik\"\n \n #: ../../../src/uibase.cpp:32\n msgid \"&Your Receiving Addresses...\"\n-msgstr \"&Tw\u00f3j Adres Odbiorczy...\"\n+msgstr \"&Tw\u00f3j adres odbiorczy...\"\n \n-#: ../../../src/uibase.cpp:35\n-msgid \"&Encrypt Wallet...\"\n-msgstr \"&Zaszyfruj portfel...\"\n-\n-#: ../../../src/uibase.cpp:38\n-msgid \"&Change Wallet Encryption Passphrase...\"\n-msgstr \"&Zmie\u0144 has\u0142o szyfrowania portfela...\"\n-\n-#: ../../../src/uibase.cpp:42\n+#: ../../../src/uibase.cpp:36\n msgid \"&Options...\"\n msgstr \"&Opcje...\"\n \n-#: ../../../src/uibase.cpp:45\n+#: ../../../src/uibase.cpp:39\n msgid \"&Settings\"\n msgstr \"&Ustawienia\"\n \n-#: ../../../src/uibase.cpp:49\n+#: ../../../src/uibase.cpp:43\n msgid \"&About...\"\n msgstr \"&O programie...\"\n \n-#: ../../../src/uibase.cpp:52\n+#: ../../../src/uibase.cpp:46\n msgid \"&Help\"\n msgstr \"&Pomoc\"\n \n-#: ../../../src/uibase.cpp:62\n+#: ../../../src/uibase.cpp:56\n msgid \"Address Book\"\n-msgstr \"Ksi\u0119ga Adresowa\"\n+msgstr \"Ksi\u0105\u017cka adresowa\"\n \n-#: ../../../src/uibase.cpp:75\n+#: ../../../src/uibase.cpp:69\n msgid \"Your Bitcoin Address:\"\n-msgstr \"Tw\u00f3j Adres Bitcoin:\"\n+msgstr \"Tw\u00f3j adres Bitcoin:\"\n \n-#: ../../../src/uibase.cpp:82\n+#: ../../../src/uibase.cpp:76\n msgid \" &New... \"\n msgstr \" &Nowy...\"\n \n-#: ../../../src/uibase.cpp:85\n-#: ../../../src/uibase.cpp:790\n-#: ../../../src/uibase.cpp:893\n+#: ../../../src/uibase.cpp:79\n+#: ../../../src/uibase.cpp:780\n+#: ../../../src/uibase.cpp:883\n msgid \" &Copy to Clipboard \"\n msgstr \" &Kopiuj do schowka \"\n \n-#: ../../../src/uibase.cpp:99\n+#: ../../../src/uibase.cpp:93\n msgid \"Balance:\"\n msgstr \"Saldo:\"\n \n-#: ../../../src/uibase.cpp:115\n+#: ../../../src/uibase.cpp:109\n msgid \" All\"\n msgstr \" Wszystko\"\n \n-#: ../../../src/uibase.cpp:115\n+#: ../../../src/uibase.cpp:109\n msgid \" Sent\"\n-msgstr \"Wys\u0142ano\"\n+msgstr \" Wys\u0142ano\"\n \n-#: ../../../src/uibase.cpp:115\n+#: ../../../src/uibase.cpp:109\n msgid \" Received\"\n-msgstr \"Otrzymano\"\n+msgstr \" Otrzymano\"\n \n-#: ../../../src/uibase.cpp:115\n+#: ../../../src/uibase.cpp:109\n msgid \" In Progress\"\n-msgstr \"W Trakcie\"\n+msgstr \"W realizacji\"\n \n-#: ../../../src/uibase.cpp:136\n+#: ../../../src/uibase.cpp:130\n msgid \"All Transactions\"\n-msgstr \"Wszystkie Transakcje\"\n+msgstr \"Wszystkie transakcje\"\n \n-#: ../../../src/uibase.cpp:147\n+#: ../../../src/uibase.cpp:141\n msgid \"Sent/Received\"\n-msgstr \"Wys\u0142ano/Otrzymano\"\n+msgstr \"Wys\u0142ane/Otrzymane\"\n \n-#: ../../../src/uibase.cpp:158\n+#: ../../../src/uibase.cpp:152\n msgid \"Sent\"\n-msgstr \"Wys\u0142ano\"\n+msgstr \"Wys\u0142ane\"\n \n-#: ../../../src/uibase.cpp:169\n+#: ../../../src/uibase.cpp:163\n msgid \"Received\"\n-msgstr \"Otrzymano\"\n-\n-#: ../../../src/uibase.cpp:312\n-#: ../../../src/uibase.cpp:453\n-#: ../../../src/uibase.cpp:552\n-#: ../../../src/uibase.cpp:732\n-#: ../../../src/uibase.cpp:793\n-#: ../../../src/uibase.cpp:902\n-#: ../../../src/uibase.cpp:991\n+msgstr \"Otrzymane\"\n+\n+#: ../../../src/uibase.cpp:302\n+#: ../../../src/uibase.cpp:443\n+#: ../../../src/uibase.cpp:542\n+#: ../../../src/uibase.cpp:722\n+#: ../../../src/uibase.cpp:783\n+#: ../../../src/uibase.cpp:892\n+#: ../../../src/uibase.cpp:981\n msgid \"OK\"\n msgstr \"OK\"\n \n-#: ../../../src/uibase.cpp:355\n+#: ../../../src/uibase.cpp:345\n msgid \"&Start Bitcoin on system startup\"\n msgstr \"&Uruchom Bitcoin wraz ze startem systemu\"\n \n-#: ../../../src/uibase.cpp:358\n+#: ../../../src/uibase.cpp:348\n msgid \"&Minimize to the tray instead of the taskbar\"\n-msgstr \"&Zminimalizuj do traya zamiast do paska zada\u0144\"\n+msgstr \"&Minimalizuj do obszaru powiadomie\u0144 zamiast paska zada\u0144\"\n \n-#: ../../../src/uibase.cpp:361\n+#: ../../../src/uibase.cpp:351\n msgid \"Map port using &UPnP\"\n msgstr \"Mapuj port u\u017cywaj\u0105c &UPnP\"\n \n-#: ../../../src/uibase.cpp:364\n+#: ../../../src/uibase.cpp:354\n msgid \"M&inimize to the tray on close\"\n-msgstr \"Zm&inimalizuj do traya przy zamkni\u0119ciu\"\n+msgstr \"M&inimalizuj do obszaru powiadomie\u0144 przy zamkni\u0119ciu\"\n \n-#: ../../../src/uibase.cpp:370\n+#: ../../../src/uibase.cpp:360\n msgid \"&Connect through socks4 proxy: \"\n-msgstr \"&Po\u0142\u0105cz przez socks4 proxy:\"\n+msgstr \"&Po\u0142\u0105cz przez proxy socks4:\"\n \n-#: ../../../src/uibase.cpp:381\n+#: ../../../src/uibase.cpp:371\n msgid \"Proxy &IP:\"\n msgstr \"Proxy &IP:\"\n \n-#: ../../../src/uibase.cpp:389\n+#: ../../../src/uibase.cpp:379\n msgid \" &Port:\"\n msgstr \" &Port:\"\n \n-#: ../../../src/uibase.cpp:402\n+#: ../../../src/uibase.cpp:392\n msgid \"Optional transaction fee per KB that helps make sure your transactions are processed quickly.  Most transactions are 1KB.  Fee 0.01 recommended.\"\n-msgstr \"Opcjonalna prowizja okre\u015blona dla KB transakcji, kt\u00f3ra zapewni, \u017ce twoje transakcje b\u0119d\u0105 szybko przetworzone. Wi\u0119kszo\u015b\u0107 transakcji to 1KB. Rekomendowana prowizja to 0.01.\"\n+msgstr \"Opcjonalna prowizja okre\u015blona na ka\u017cdy KB transakcji, zapewniaj\u0105ca szybkie przetworzenie. Wi\u0119kszo\u015b\u0107 transakcji to 1KB. Rekomendowana prowizja to 0.01.\"\n \n-#: ../../../src/uibase.cpp:409\n+#: ../../../src/uibase.cpp:399\n msgid \"Pay transaction fee:\"\n-msgstr \"P\u0142a\u0107 prowizj\u0119 transakcji:\"\n+msgstr \"P\u0142a\u0107 prowizj\u0119 od transakcji:\"\n \n-#: ../../../src/uibase.cpp:430\n+#: ../../../src/uibase.cpp:420\n msgid \"// [don't translate] Test panel 2 for future expansion\"\n msgstr \"\"\n \n-#: ../../../src/uibase.cpp:434\n+#: ../../../src/uibase.cpp:424\n msgid \"// [don't translate] Let's not start multiple pages until the first page is filled up\"\n msgstr \"\"\n \n-#: ../../../src/uibase.cpp:456\n-#: ../../../src/uibase.cpp:678\n-#: ../../../src/uibase.cpp:737\n-#: ../../../src/uibase.cpp:796\n-#: ../../../src/uibase.cpp:905\n-#: ../../../src/uibase.cpp:994\n+#: ../../../src/uibase.cpp:446\n+#: ../../../src/uibase.cpp:668\n+#: ../../../src/uibase.cpp:727\n+#: ../../../src/uibase.cpp:786\n+#: ../../../src/uibase.cpp:895\n+#: ../../../src/uibase.cpp:984\n msgid \"Cancel\"\n msgstr \"Anuluj\"\n \n-#: ../../../src/uibase.cpp:459\n+#: ../../../src/uibase.cpp:449\n msgid \"&Apply\"\n msgstr \"&Zastosuj\"\n \n-#: ../../../src/uibase.cpp:518\n+#: ../../../src/uibase.cpp:508\n msgid \"Bitcoin \"\n-msgstr \"Bitcoin\"\n+msgstr \"Bitcoin \"\n \n-#: ../../../src/uibase.cpp:524\n+#: ../../../src/uibase.cpp:514\n msgid \"version\"\n msgstr \"wersja\"\n \n-#: ../../../src/uibase.cpp:535\n+#: ../../../src/uibase.cpp:525\n msgid \"\"\n \"Copyright (c) 2009-2011 Bitcoin Developers\\n\"\n \"\\n\"\n@@ -967,39 +867,39 @@ msgstr \"\"\n \"OpenSSL Toolkit (http://www.openssl.org/) i oprogramowanie kryptograficzne napisane przez \\n\"\n \"Erica Younga (eay@cryptsoft.com) oraz oprogramowanie UPnP napisane przez Thomasa Bernarda.\"\n \n-#: ../../../src/uibase.cpp:591\n+#: ../../../src/uibase.cpp:581\n msgid \"Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"\n msgstr \"Wprowad\u017a adres Bitcoin (np. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"\n \n-#: ../../../src/uibase.cpp:605\n+#: ../../../src/uibase.cpp:595\n msgid \"Pay &To:\"\n-msgstr \"Wp\u0142a\u0107 &Dla:\"\n+msgstr \"Wp\u0142a\u0107 &dla:\"\n \n-#: ../../../src/uibase.cpp:620\n+#: ../../../src/uibase.cpp:610\n msgid \"&Paste\"\n msgstr \"&Wklej\"\n \n-#: ../../../src/uibase.cpp:623\n+#: ../../../src/uibase.cpp:613\n msgid \" Address &Book...\"\n-msgstr \" Ksi\u0119ga &Adresowa...\"\n+msgstr \" Ksi\u0105\u017cka &adresowa...\"\n \n-#: ../../../src/uibase.cpp:630\n+#: ../../../src/uibase.cpp:620\n msgid \"&Amount:\"\n-msgstr \"&Kwota:\"\n+msgstr \"&Saldo:\"\n \n-#: ../../../src/uibase.cpp:640\n+#: ../../../src/uibase.cpp:630\n msgid \"T&ransfer:\"\n msgstr \"T&ransfer:\"\n \n-#: ../../../src/uibase.cpp:646\n+#: ../../../src/uibase.cpp:636\n msgid \" Standard\"\n msgstr \" Standard\"\n \n-#: ../../../src/uibase.cpp:673\n+#: ../../../src/uibase.cpp:663\n msgid \"&Send\"\n msgstr \"&Wy\u015blij\"\n \n-#: ../../../src/uibase.cpp:721\n+#: ../../../src/uibase.cpp:711\n msgid \"\"\n \"\\n\"\n \"\\n\"\n@@ -1009,74 +909,70 @@ msgstr \"\"\n \"\\n\"\n \"\u0141\u0105czenie...\"\n \n-#: ../../../src/uibase.cpp:771\n+#: ../../../src/uibase.cpp:761\n msgid \"These are your Bitcoin addresses for receiving payments.  You may want to give a different one to each sender so you can keep track of who is paying you.  The highlighted address is displayed in the main window.\"\n-msgstr \"To s\u0105 twoje adresy Bitcoin dla otrzymywania p\u0142atno\u015bci. Mo\u017cesz chcie\u0107 poda\u0107 r\u00f3\u017cne dla ka\u017cdego p\u0142ac\u0105cego aby kontrolowa\u0107 kto ci p\u0142aci. Wyr\u00f3\u017cniony adres b\u0119dzie wy\u015bwietlany w oknie g\u0142\u00f3wnym.\"\n+msgstr \"To s\u0105 twoje adresy Bitcoin dla otrzymywania p\u0142atno\u015bci. Mo\u017cesz chcie\u0107 podawa\u0107 inny dla ka\u017cdego p\u0142ac\u0105cego aby kontrolowa\u0107 kto ci p\u0142aci. Wyr\u00f3\u017cniony adres b\u0119dzie wy\u015bwietlany w oknie g\u0142\u00f3wnym.\"\n \n-#: ../../../src/uibase.cpp:784\n-#: ../../../src/uibase.cpp:896\n+#: ../../../src/uibase.cpp:774\n+#: ../../../src/uibase.cpp:886\n msgid \"&Edit...\"\n msgstr \"&Edytuj...\"\n \n-#: ../../../src/uibase.cpp:787\n-#: ../../../src/uibase.cpp:899\n+#: ../../../src/uibase.cpp:777\n+#: ../../../src/uibase.cpp:889\n msgid \" &New Address... \"\n-msgstr \" &Nowy Adres...\"\n+msgstr \" &Nowy adres...\"\n \n-#: ../../../src/uibase.cpp:859\n+#: ../../../src/uibase.cpp:849\n msgid \"Sending\"\n msgstr \"Wysy\u0142anie\"\n \n-#: ../../../src/uibase.cpp:867\n+#: ../../../src/uibase.cpp:857\n msgid \"These are your Bitcoin addresses for receiving payments.  You can give a different one to each sender to keep track of who is paying you.  The highlighted address will be displayed in the main window.\"\n msgstr \"To s\u0105 twoje adresy Bitcoin dla otrzymywania p\u0142atno\u015bci. Mo\u017cesz poda\u0107 r\u00f3\u017cne dla ka\u017cdego p\u0142ac\u0105cego aby kontrolowa\u0107 kto ci p\u0142aci. Wyr\u00f3\u017cniony adres b\u0119dzie wy\u015bwietlany w oknie g\u0142\u00f3wnym.\"\n \n-#: ../../../src/uibase.cpp:880\n+#: ../../../src/uibase.cpp:870\n msgid \"Receiving\"\n msgstr \"Otrzymywanie\"\n \n-#: ../../../src/uibase.cpp:890\n+#: ../../../src/uibase.cpp:880\n msgid \"&Delete\"\n msgstr \"&Usu\u0144\"\n \n-#: ../../../src/wallet.cpp:1081\n-msgid \"Error: Wallet locked, unable to create transaction  \"\n-msgstr \"B\u0142\u0105d: Portfel zablokowany, nie mo\u017cna utworzy\u0107 transakcji\"\n-\n-#: ../../../src/wallet.cpp:1089\n+#: ../../../src/wallet.cpp:917\n #, c-format\n msgid \"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds  \"\n msgstr \"B\u0142\u0105d: Ta transakcja wymaga prowizji co najmniej %s z uwagi na kwot\u0119, z\u0142o\u017cono\u015b\u0107 lub u\u017cycie niedawno otrzymanych funduszy\"\n \n-#: ../../../src/wallet.cpp:1091\n+#: ../../../src/wallet.cpp:919\n msgid \"Error: Transaction creation failed  \"\n msgstr \"B\u0142\u0105d: Nie uda\u0142o si\u0119 utworzy\u0107 transakcji\"\n \n-#: ../../../src/wallet.cpp:1101\n+#: ../../../src/wallet.cpp:928\n msgid \"Error: The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n msgstr \"B\u0142\u0105d: Transakcja zosta\u0142a odrzucona. Mo\u017ce si\u0119 tak zdarzy\u0107 je\u017celi cz\u0119\u015b\u0107 monet w twoim portfelu zosta\u0142o wydanych, np. gdy u\u017cyto kopii pliku wallet.dat i monety zosta\u0142y wydane w kopii, a tutaj nie zosta\u0142y oznaczone jako wydane.\"\n \n-#: ../../../src/wallet.cpp:1114\n+#: ../../../src/wallet.cpp:941\n msgid \"Invalid amount\"\n msgstr \"Niew\u0142a\u015bciwa kwota\"\n \n-#: ../../../src/wallet.cpp:1121\n+#: ../../../src/wallet.cpp:948\n msgid \"Invalid bitcoin address\"\n msgstr \"Niew\u0142a\u015bciwy adres bitcoin\"\n \n-#: ../../../src/uibase.h:151\n+#: ../../../src/uibase.h:147\n msgid \"Transaction Details\"\n-msgstr \"Szczeg\u00f3\u0142y Transakcji\"\n+msgstr \"Szczeg\u00f3\u0142y transakcji\"\n \n-#: ../../../src/uibase.h:203\n+#: ../../../src/uibase.h:199\n msgid \"Options\"\n msgstr \"Opcje\"\n \n-#: ../../../src/uibase.h:232\n+#: ../../../src/uibase.h:228\n msgid \"About Bitcoin\"\n msgstr \"O Bitcoin\"\n \n-#: ../../../src/uibase.h:341\n+#: ../../../src/uibase.h:337\n msgid \"Your Bitcoin Addresses\"\n-msgstr \"Twoje Adresy Bitcoin\"\n+msgstr \"Twoje adresy bitcoin\"\n "
      },
      {
        "sha": "592756ff74fd436629a3fad31015dd0a3b6b9b9d",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin Developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "1a2406b935841dbc393d7f0ee9d7abd31b892d80",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_BIGNUM_H"
      },
      {
        "sha": "72542705a69962e744e0a65e44a1c7060b34e29d",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -610,7 +611,7 @@ bool CWalletDB::WriteAccount(const string& strAccount, const CAccount& account)\n \n bool CWalletDB::WriteAccountingEntry(const CAccountingEntry& acentry)\n {\n-    return Write(make_tuple(string(\"acentry\"), acentry.strAccount, ++nAccountingEntryNumber), acentry);\n+    return Write(boost::make_tuple(string(\"acentry\"), acentry.strAccount, ++nAccountingEntryNumber), acentry);\n }\n \n int64 CWalletDB::GetAccountCreditDebit(const string& strAccount)\n@@ -638,7 +639,7 @@ void CWalletDB::ListAccountCreditDebit(const string& strAccount, list<CAccountin\n         // Read next record\n         CDataStream ssKey;\n         if (fFlags == DB_SET_RANGE)\n-            ssKey << make_tuple(string(\"acentry\"), (fAllAccounts? string(\"\") : strAccount), uint64(0));\n+            ssKey << boost::make_tuple(string(\"acentry\"), (fAllAccounts? string(\"\") : strAccount), uint64(0));\n         CDataStream ssValue;\n         int ret = ReadAtCursor(pcursor, ssKey, ssValue, fFlags);\n         fFlags = DB_NEXT;"
      },
      {
        "sha": "73ea1902ccf8d040546022ed8321483710d9f8c6",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_DB_H"
      },
      {
        "sha": "d0c74348202ac8d06c46a373286926fb2325678d",
        "filename": "src/headers.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/headers.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/headers.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/headers.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "dbc2c4133229bc1583b3c88da6f13c1b42ccfe48",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #include \"headers.h\""
      },
      {
        "sha": "4017f25707be925c080fa92d7cb1ab7c8e10974d",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_INIT_H"
      },
      {
        "sha": "5278488dcd93528c38bd7a0edb2d1accb08e4972",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "6945b2cecb7a30f42ce6c037b8c0b478a69a1c8c",
        "filename": "src/irc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/irc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/irc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_IRC_H"
      },
      {
        "sha": "d2e668945618426314af804be7ebfbf765054bf2",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_KEY_H"
      },
      {
        "sha": "4c6848b47ad8a5b52bbf819cb1bd7d934b2273b4",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n-// Copyright (c) 2009-2011 Satoshi Nakamoto & Bitcoin developers\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "0324cc6e1b9f399683bbfdebf984ac4ceef55068",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n-// Copyright (c) 2009-2011 Satoshi Nakamoto & Bitcoin developers\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_KEYSTORE_H"
      },
      {
        "sha": "8c9c764b846a2fb820fbe54d6e98c4c37f2325a9",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 42,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #include \"headers.h\"\n@@ -1384,47 +1385,6 @@ bool static ProcessBlock(CNode* pfrom, CBlock* pblock)\n \n \n \n-template<typename Stream>\n-bool static ScanMessageStart(Stream& s)\n-{\n-    // Scan ahead to the next pchMessageStart, which should normally be immediately\n-    // at the file pointer.  Leaves file pointer at end of pchMessageStart.\n-    s.clear(0);\n-    short prevmask = s.exceptions(0);\n-    const char* p = BEGIN(pchMessageStart);\n-    try\n-    {\n-        loop\n-        {\n-            char c;\n-            s.read(&c, 1);\n-            if (s.fail())\n-            {\n-                s.clear(0);\n-                s.exceptions(prevmask);\n-                return false;\n-            }\n-            if (*p != c)\n-                p = BEGIN(pchMessageStart);\n-            if (*p == c)\n-            {\n-                if (++p == END(pchMessageStart))\n-                {\n-                    s.clear(0);\n-                    s.exceptions(prevmask);\n-                    return true;\n-                }\n-            }\n-        }\n-    }\n-    catch (...)\n-    {\n-        s.clear(0);\n-        s.exceptions(prevmask);\n-        return false;\n-    }\n-}\n-\n bool CheckDiskSpace(uint64 nAdditionalBytes)\n {\n     uint64 nFreeBytesAvailable = filesystem::space(GetDataDir()).available;\n@@ -1775,7 +1735,7 @@ bool static AlreadyHave(CTxDB& txdb, const CInv& inv)\n // The message start string is designed to be unlikely to occur in normal data.\n // The characters are rarely used upper ascii, not valid as UTF-8, and produce\n // a large 4-byte int at any alignment.\n-char pchMessageStart[4] = { 0xf9, 0xbe, 0xb4, 0xd9 };\n+unsigned char pchMessageStart[4] = { 0xf9, 0xbe, 0xb4, 0xd9 };\n \n \n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)"
      },
      {
        "sha": "64ca91dab2b458f0181c9a2f0be8b6ab6286f533",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_MAIN_H"
      },
      {
        "sha": "ddf9769055b92e29e5e3e38a63479dbc53f2cf25",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -7,19 +7,19 @@ DEPSDIR:=/usr/i586-mingw32msvc\n USE_UPNP:=0\n \n INCLUDEPATHS= \\\n- -I\"$(DEPSDIR)/boost_1_43_0\" \\\n- -I\"$(DEPSDIR)/db-4.7.25.NC/build_unix\" \\\n+ -I\"$(DEPSDIR)/boost_1_47_0\" \\\n+ -I\"$(DEPSDIR)/db-4.8.30.NC/build_unix\" \\\n  -I\"$(DEPSDIR)/openssl-1.0.0d/include\" \\\n- -I\"$(DEPSDIR)/wxWidgets-2.9.1/lib/gcc_lib/mswud\" \\\n- -I\"$(DEPSDIR)/wxWidgets-2.9.1/include\" \\\n- -I\"$(DEPSDIR)/wxWidgets-2.9.1/lib/wx/include/i586-mingw32msvc-msw-unicode-static-2.9/\" \\\n+ -I\"$(DEPSDIR)/wxWidgets-2.9.2/lib/gcc_lib/mswud\" \\\n+ -I\"$(DEPSDIR)/wxWidgets-2.9.2/include\" \\\n+ -I\"$(DEPSDIR)/wxWidgets-2.9.2/lib/wx/include/i586-mingw32msvc-msw-unicode-static-2.9/\" \\\n  -I\"$(DEPSDIR)\"\n \n LIBPATHS= \\\n- -L\"$(DEPSDIR)/boost_1_43_0/stage/lib\" \\\n- -L\"$(DEPSDIR)/db-4.7.25.NC/build_unix\" \\\n+ -L\"$(DEPSDIR)/boost_1_47_0/stage/lib\" \\\n+ -L\"$(DEPSDIR)/db-4.8.30.NC/build_unix\" \\\n  -L\"$(DEPSDIR)/openssl-1.0.0d\" \\\n- -L\"$(DEPSDIR)/wxWidgets-2.9.1/lib\"\n+ -L\"$(DEPSDIR)/wxWidgets-2.9.2/lib\"\n \n WXLIBS= -l wx_mswu-2.9-i586-mingw32msvc\n \n@@ -32,16 +32,15 @@ LIBS= \\\n  -l ssl \\\n  -l crypto\n \n-DEFS=-D_MT -DWIN32 -D__WXMSW__ -D_WINDOWS -DNOPCH -DUSE_SSL\n+DEFS=-D_MT -DWIN32 -D__WXMSW__ -D_WINDOWS -DNOPCH -DUSE_SSL -DBOOST_THREAD_USE_LIB\n DEBUGFLAGS=-g -D__WXDEBUG__\n CFLAGS=-O2 -w -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n HEADERS=headers.h strlcpy.h serialize.h uint256.h util.h key.h bignum.h base58.h \\\n     script.h db.h net.h irc.h keystore.h main.h wallet.h rpc.h uibase.h ui.h noui.h \\\n     crypter.h init.h\n \n ifdef USE_UPNP\n-\tINCLUDEPATHS += -I\"$(DEPSDIR)/upnpc-exe-win32-20110215\"\n-\tLIBPATHS += -L\"$(DEPSDIR)/upnpc-exe-win32-20110215\"\n+\tLIBPATHS += -L\"$(DEPSDIR)/miniupnpc\"\n \tLIBS += -l miniupnpc -l iphlpapi\n \tDEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)\n endif"
      },
      {
        "sha": "05d0fd0cf7250d098b48c2118393dec5c12aa912",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -5,40 +5,40 @@\n USE_UPNP:=0\n \n INCLUDEPATHS= \\\n- -I\"C:\\boost-1.43.0-mgw\" \\\n- -I\"C:\\db-4.7.25.NC-mgw\\build_unix\" \\\n+ -I\"C:\\boost-1.47.0-mgw\" \\\n+ -I\"C:\\db-4.8.30.NC-mgw\\build_unix\" \\\n  -I\"C:\\openssl-1.0.0d-mgw\\include\" \\\n- -I\"C:\\wxWidgets-2.9.1-mgw\\lib\\gcc_lib\\mswud\" \\\n- -I\"C:\\wxWidgets-2.9.1-mgw\\include\"\n+ -I\"C:\\wxWidgets-2.9.2-mgw\\lib\\gcc_lib\\mswud\" \\\n+ -I\"C:\\wxWidgets-2.9.2-mgw\\include\"\n \n LIBPATHS= \\\n- -L\"C:\\boost-1.43.0-mgw\\stage\\lib\" \\\n- -L\"C:\\db-4.7.25.NC-mgw\\build_unix\" \\\n+ -L\"C:\\boost-1.47.0-mgw\\stage\\lib\" \\\n+ -L\"C:\\db-4.8.30.NC-mgw\\build_unix\" \\\n  -L\"C:\\openssl-1.0.0d-mgw\" \\\n- -L\"C:\\wxWidgets-2.9.1-mgw\\lib\\gcc_lib\"\n+ -L\"C:\\wxWidgets-2.9.2-mgw\\lib\\gcc_lib\"\n \n WXLIBS= \\\n  -l wxmsw29ud_html -l wxmsw29ud_core -l wxmsw29ud_adv -l wxbase29ud -l wxtiffd -l wxjpegd -l wxpngd -l wxzlibd\n \n LIBS= \\\n- -l boost_system-mgw45-mt-s-1_43 \\\n- -l boost_filesystem-mgw45-mt-s-1_43 \\\n- -l boost_program_options-mgw45-mt-s-1_43 \\\n- -l boost_thread-mgw45-mt-s-1_43 \\\n+ -l boost_system-mgw45-mt-s-1_47 \\\n+ -l boost_filesystem-mgw45-mt-s-1_47 \\\n+ -l boost_program_options-mgw45-mt-s-1_47 \\\n+ -l boost_thread-mgw45-mt-s-1_47 \\\n  -l db_cxx \\\n  -l ssl \\\n  -l crypto\n \n-DEFS=-DWIN32 -D__WXMSW__ -D_WINDOWS -DNOPCH -DUSE_SSL\n+DEFS=-DWIN32 -D__WXMSW__ -D_WINDOWS -DNOPCH -DUSE_SSL -DBOOST_THREAD_USE_LIB\n DEBUGFLAGS=-g -D__WXDEBUG__\n CFLAGS=-mthreads -O2 -w -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)\n HEADERS=headers.h strlcpy.h serialize.h uint256.h util.h key.h bignum.h base58.h \\\n     script.h db.h net.h irc.h keystore.h main.h wallet.h rpc.h uibase.h ui.h noui.h \\\n     init.h crypter.h\n \n ifdef USE_UPNP\n- INCLUDEPATHS += -I\"C:\\upnpc-exe-win32-20110215\"\n- LIBPATHS += -L\"C:\\upnpc-exe-win32-20110215\"\n+ INCLUDEPATHS += -I\"C:\\miniupnpc-1.6-mgw\"\n+ LIBPATHS += -L\"C:\\miniupnpc-1.6-mgw\"\n  LIBS += -l miniupnpc -l iphlpapi\n  DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)\n endif\n@@ -83,8 +83,8 @@ obj/nogui/%.o: %.cpp $(HEADERS)\n bitcoind.exe: $(OBJS:obj/%=obj/nogui/%) obj/ui_res.o\n \tg++ $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)\n \n-obj/test/%.o: obj/test/%.cpp $(HEADERS)\n-\tg++ -c $(CFLAGS) -o $@ $<\n+obj/test/test_bitcoin.o: $(wildcard test/*.cpp) $(HEADERS)\n+\tg++ -c $(CFLAGS) -o $@ test/test_bitcoin.cpp\n \n test_bitcoin.exe: obj/test/test_bitcoin.o $(filter-out obj/nogui/init.o,$(OBJS:obj/%=obj/nogui/%))\n \tg++ $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)"
      },
      {
        "sha": "363a85fc7b95835e7fb5c608dd2bd4429c2aa64f",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -76,8 +76,8 @@ obj/nogui/%.o: %.cpp $(HEADERS)\n bitcoind: $(OBJS:obj/%=obj/nogui/%)\n \t$(CXX) $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)\n \n-obj/test/%.o: test/%.cpp $(HEADERS)\n-\t$(CXX) -c $(CFLAGS) -o $@ $<\n+obj/test/test_bitcoin.o: $(wildcard test/*.cpp) $(HEADERS)\n+\t$(CXX) -c $(CFLAGS) -o $@ test/test_bitcoin.cpp\n \n test_bitcoin: obj/test/test_bitcoin.o $(filter-out obj/nogui/init.o,$(OBJS:obj/%=obj/nogui/%))\n \t$(CXX) $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS) -lboost_unit_test_framework"
      },
      {
        "sha": "597eea0dc852e65e2c3049705389a69bf98df57e",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -10,7 +10,7 @@ WXLIBS=$(shell wx-config --libs)\n \n USE_UPNP:=0\n \n-DEFS=-DNOPCH -DFOURWAYSSE2 -DUSE_SSL\n+DEFS=-DNOPCH -DUSE_SSL\n \n # for boost 1.37, add -mt to the boost libraries\n LIBS= \\\n@@ -77,8 +77,8 @@ obj/nogui/%.o: %.cpp $(HEADERS)\n bitcoind: $(OBJS:obj/%=obj/nogui/%)\n \t$(CXX) $(CXXFLAGS) -o $@ $^ $(LIBS)\n \n-obj/test/%.o: test/%.cpp $(HEADERS)\n-\t$(CXX) -c $(CXXFLAGS) -o $@ $<\n+obj/test/test_bitcoin.o: $(wildcard test/*.cpp) $(HEADERS)\n+\t$(CXX) -c $(CFLAGS) -o $@ test/test_bitcoin.cpp\n \n test_bitcoin: obj/test/test_bitcoin.o $(filter-out obj/nogui/init.o,$(OBJS:obj/%=obj/nogui/%))\n \t$(CXX) $(CXXFLAGS) -o $@ $(LIBPATHS) $^ -Wl,-Bstatic -lboost_unit_test_framework $(LIBS)"
      },
      {
        "sha": "c498c4010673be3d4130eebaca9a7adad50c9dfc",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 14,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -11,11 +12,6 @@\n \n #ifdef __WXMSW__\n #include <string.h>\n-// This file can be downloaded as a part of the Windows Platform SDK\n-// and is required for Bitcoin binaries to work properly on versions\n-// of Windows before XP.  If you are doing builds of Bitcoin for\n-// public release, you should uncomment this line.\n-//#include <WSPiApi.h>\n #endif\n \n #ifdef USE_UPNP\n@@ -98,7 +94,7 @@ bool ConnectSocket(const CAddress& addrConnect, SOCKET& hSocketRet, int nTimeout\n     SOCKET hSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n     if (hSocket == INVALID_SOCKET)\n         return false;\n-#ifdef BSD\n+#ifdef SO_NOSIGPIPE\n     int set = 1;\n     setsockopt(hSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&set, sizeof(int));\n #endif\n@@ -1078,10 +1074,11 @@ void ThreadMapPort2(void* parg)\n     const char * rootdescurl = 0;\n     const char * multicastif = 0;\n     const char * minissdpdpath = 0;\n+    int error = 0;\n     struct UPNPDev * devlist = 0;\n     char lanaddr[64];\n \n-    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0);\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n \n     struct UPNPUrls urls;\n     struct IGDdatas data;\n@@ -1093,14 +1090,9 @@ void ThreadMapPort2(void* parg)\n         char intClient[16];\n         char intPort[6];\n         string strDesc = \"Bitcoin \" + FormatFullVersion();\n-\n-#ifndef __WXMSW__\n-        r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-\t                        port, port, lanaddr, strDesc.c_str(), \"TCP\", 0);\n-#else\n         r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n \t                        port, port, lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n-#endif\n+\n         if(r!=UPNPCOMMAND_SUCCESS)\n             printf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n                 port, port, lanaddr, r, strupnperror(r));\n@@ -1143,6 +1135,11 @@ void MapPort(bool fMapPort)\n             printf(\"Error: ThreadMapPort(ThreadMapPort) failed\\n\");\n     }\n }\n+#else\n+void MapPort(bool /* unused fMapPort */)\n+{\n+    // Intentionally left blank.\n+}\n #endif\n \n \n@@ -1579,7 +1576,7 @@ bool BindListenPort(string& strError)\n         return false;\n     }\n \n-#ifdef BSD\n+#ifdef SO_NOSIGPIPE\n     // Different way of disabling SIGPIPE on BSD\n     setsockopt(hListenSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&nOne, sizeof(int));\n #endif"
      },
      {
        "sha": "3b098e1a8260cdfa5a391874a12dc2a191d478b2",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_NET_H\n@@ -67,7 +68,7 @@ bool StopNode();\n //  (4) size\n //  (4) checksum\n \n-extern char pchMessageStart[4];\n+extern unsigned char pchMessageStart[4];\n \n class CMessageHeader\n {\n@@ -676,7 +677,7 @@ class CNode\n \n     void BeginMessage(const char* pszCommand)\n     {\n-        cs_vSend.Enter();\n+        cs_vSend.Enter(\"cs_vSend\", __FILE__, __LINE__);\n         if (nHeaderStart != -1)\n             AbortMessage();\n         nHeaderStart = vSend.size();"
      },
      {
        "sha": "cbe6fa4c7b1c13ece392adb8a813b918d8f7894c",
        "filename": "src/noui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/noui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/noui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_NOUI_H"
      },
      {
        "sha": "40b60a7345e7ad6fa78a6f21c068f621dc35dd12",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -562,7 +563,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     CRITICAL_BLOCK(pwalletMain->cs_vMasterKey)\n     {\n         if(pwalletMain->IsLocked())\n-            throw JSONRPCError(-14, \"Error: The wallet passphrase entered was incorrect.\");\n+            throw JSONRPCError(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n         string strError = pwalletMain->SendMoneyToBitcoinAddress(address, nAmount, wtx);\n         if (strError != \"\")\n@@ -837,7 +838,7 @@ Value sendfrom(const Array& params, bool fHelp)\n     CRITICAL_BLOCK(pwalletMain->cs_vMasterKey)\n     {\n         if(pwalletMain->IsLocked())\n-            throw JSONRPCError(-14, \"Error: The wallet passphrase entered was incorrect.\");\n+            throw JSONRPCError(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n         // Check funds\n         int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n@@ -904,7 +905,7 @@ Value sendmany(const Array& params, bool fHelp)\n     CRITICAL_BLOCK(pwalletMain->cs_vMasterKey)\n     {\n         if(pwalletMain->IsLocked())\n-            throw JSONRPCError(-14, \"Error: The wallet passphrase entered was incorrect.\");\n+            throw JSONRPCError(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n         // Check funds\n         int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n@@ -1198,7 +1199,8 @@ Value listtransactions(const Array& params, bool fHelp)\n \n         // Now: iterate backwards until we have nCount items to return:\n         TxItems::reverse_iterator it = txByTime.rbegin();\n-        for (std::advance(it, nFrom); it != txByTime.rend(); ++it)\n+        if (txByTime.size() > nFrom) std::advance(it, nFrom);\n+        for (; it != txByTime.rend(); ++it)\n         {\n             CWalletTx *const pwtx = (*it).second.first;\n             if (pwtx != 0)"
      },
      {
        "sha": "f2674007973e74231d949cd2a70d8bb3fa870fc7",
        "filename": "src/rpc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/rpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/rpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d0c6a11491e90ee39d80279e2b5c96e0fb528562",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #include \"headers.h\""
      },
      {
        "sha": "e61ea2fd7eb7280f750dd7b75da46ba20f40a0cf",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef H_BITCOIN_SCRIPT"
      },
      {
        "sha": "c55775242b083c1773150f9ab824246b875a2d44",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_SERIALIZE_H"
      },
      {
        "sha": "13feb86b9770ddb5910ad5cd07b3f9137d8e724f",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 136,
        "deletions": 0,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -6,6 +6,9 @@\n #include \"../wallet.h\"\n \n using namespace std;\n+extern uint256 SignatureHash(CScript scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType);\n+extern bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const CTransaction& txTo, unsigned int nIn, int nHashType);\n+extern bool VerifySignature(const CTransaction& txFrom, const CTransaction& txTo, unsigned int nIn, int nHashType);\n \n BOOST_AUTO_TEST_SUITE(script_tests)\n \n@@ -34,4 +37,137 @@ BOOST_AUTO_TEST_CASE(script_PushData)\n     BOOST_CHECK(pushdata4Stack == directStack);\n }\n \n+CScript\n+sign_multisig(CScript scriptPubKey, std::vector<CKey> keys, CTransaction transaction)\n+{\n+    uint256 hash = SignatureHash(scriptPubKey, transaction, 0, SIGHASH_ALL);\n+\n+    CScript result;\n+    //\n+    // NOTE: CHECKMULTISIG has an unfortunate bug; it requires\n+    // one extra item on the stack, before the signatures.\n+    // Putting OP_0 on the stack is the workaround;\n+    // fixing the bug would mean splitting the blockchain (old\n+    // clients would not accept new CHECKMULTISIG transactions,\n+    // and vice-versa)\n+    //\n+    result << OP_0;\n+    BOOST_FOREACH(CKey key, keys)\n+    {\n+        vector<unsigned char> vchSig;\n+        BOOST_CHECK(key.Sign(hash, vchSig));\n+        vchSig.push_back((unsigned char)SIGHASH_ALL);\n+        result << vchSig;\n+    }\n+    return result;\n+}\n+CScript\n+sign_multisig(CScript scriptPubKey, CKey key, CTransaction transaction)\n+{\n+    std::vector<CKey> keys;\n+    keys.push_back(key);\n+    return sign_multisig(scriptPubKey, keys, transaction);\n+}\n+\n+BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG12)\n+{\n+    CKey key1, key2, key3;\n+    key1.MakeNewKey();\n+    key2.MakeNewKey();\n+    key3.MakeNewKey();\n+\n+    CScript scriptPubKey12;\n+    scriptPubKey12 << OP_1 << key1.GetPubKey() << key2.GetPubKey() << OP_2 << OP_CHECKMULTISIG;\n+\n+    CTransaction txFrom12;\n+    txFrom12.vout.resize(1);\n+    txFrom12.vout[0].scriptPubKey = scriptPubKey12;\n+\n+    CTransaction txTo12;\n+    txTo12.vin.resize(1);\n+    txTo12.vout.resize(1);\n+    txTo12.vin[0].prevout.n = 0;\n+    txTo12.vin[0].prevout.hash = txFrom12.GetHash();\n+    txTo12.vout[0].nValue = 1;\n+\n+    CScript goodsig1 = sign_multisig(scriptPubKey12, key1, txTo12);\n+    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey12, txTo12, 0, 0));\n+    txTo12.vout[0].nValue = 2;\n+    BOOST_CHECK(!VerifyScript(goodsig1, scriptPubKey12, txTo12, 0, 0));\n+\n+    CScript goodsig2 = sign_multisig(scriptPubKey12, key2, txTo12);\n+    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey12, txTo12, 0, 0));\n+\n+    CScript badsig1 = sign_multisig(scriptPubKey12, key3, txTo12);\n+    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey12, txTo12, 0, 0));\n+}\n+\n+BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG23)\n+{\n+    CKey key1, key2, key3, key4;\n+    key1.MakeNewKey();\n+    key2.MakeNewKey();\n+    key3.MakeNewKey();\n+    key4.MakeNewKey();\n+\n+    CScript scriptPubKey23;\n+    scriptPubKey23 << OP_2 << key1.GetPubKey() << key2.GetPubKey() << key3.GetPubKey() << OP_3 << OP_CHECKMULTISIG;\n+\n+    CTransaction txFrom23;\n+    txFrom23.vout.resize(1);\n+    txFrom23.vout[0].scriptPubKey = scriptPubKey23;\n+\n+    CTransaction txTo23;\n+    txTo23.vin.resize(1);\n+    txTo23.vout.resize(1);\n+    txTo23.vin[0].prevout.n = 0;\n+    txTo23.vin[0].prevout.hash = txFrom23.GetHash();\n+    txTo23.vout[0].nValue = 1;\n+\n+    std::vector<CKey> keys;\n+    keys.push_back(key1); keys.push_back(key2);\n+    CScript goodsig1 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey23, txTo23, 0, 0));\n+\n+    keys.clear();\n+    keys.push_back(key1); keys.push_back(key3);\n+    CScript goodsig2 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey23, txTo23, 0, 0));\n+\n+    keys.clear();\n+    keys.push_back(key2); keys.push_back(key3);\n+    CScript goodsig3 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(VerifyScript(goodsig3, scriptPubKey23, txTo23, 0, 0));\n+\n+    keys.clear();\n+    keys.push_back(key2); keys.push_back(key2); // Can't re-use sig\n+    CScript badsig1 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey23, txTo23, 0, 0));\n+\n+    keys.clear();\n+    keys.push_back(key2); keys.push_back(key1); // sigs must be in correct order\n+    CScript badsig2 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(!VerifyScript(badsig2, scriptPubKey23, txTo23, 0, 0));\n+\n+    keys.clear();\n+    keys.push_back(key3); keys.push_back(key2); // sigs must be in correct order\n+    CScript badsig3 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(!VerifyScript(badsig3, scriptPubKey23, txTo23, 0, 0));\n+\n+    keys.clear();\n+    keys.push_back(key4); keys.push_back(key2); // sigs must match pubkeys\n+    CScript badsig4 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(!VerifyScript(badsig4, scriptPubKey23, txTo23, 0, 0));\n+\n+    keys.clear();\n+    keys.push_back(key1); keys.push_back(key4); // sigs must match pubkeys\n+    CScript badsig5 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(!VerifyScript(badsig5, scriptPubKey23, txTo23, 0, 0));\n+\n+    keys.clear(); // Must have signatures\n+    CScript badsig6 = sign_multisig(scriptPubKey23, keys, txTo23);\n+    BOOST_CHECK(!VerifyScript(badsig6, scriptPubKey23, txTo23, 0, 0));\n+}    \n+\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "372808f1ae28afa00cd9dfa9f429e5f76762ecd2",
        "filename": "src/ui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/ui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/ui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "2a128a7bac3713a72b0e15ed63af56fb6d99f2c0",
        "filename": "src/ui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/ui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/ui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_UI_H"
      },
      {
        "sha": "3e20201387b5d76a0d00e006076e2fb1bfe380ac",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_UINT256_H"
      },
      {
        "sha": "24c7ed4487fd40e835fa93db730610d394c9a070",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #include \"headers.h\"\n@@ -908,4 +909,122 @@ string FormatFullVersion()\n \n \n \n+#ifdef DEBUG_LOCKORDER\n+//\n+// Early deadlock detection.\n+// Problem being solved:\n+//    Thread 1 locks  A, then B, then C\n+//    Thread 2 locks  D, then C, then A\n+//     --> may result in deadlock between the two threads, depending on when they run.\n+// Solution implemented here:\n+// Keep track of pairs of locks: (A before B), (A before C), etc.\n+// Complain if any thread trys to lock in a different order.\n+//\n+\n+struct CLockLocation\n+{\n+    std::string mutexName;\n+    std::string sourceFile;\n+    int sourceLine;\n+\n+    CLockLocation(const char* pszName, const char* pszFile, int nLine)\n+    {\n+        mutexName = pszName;\n+        sourceFile = pszFile;\n+        sourceLine = nLine;\n+    }\n+};\n+\n+typedef std::vector< std::pair<CCriticalSection*, CLockLocation> > LockStack;\n+\n+static boost::interprocess::interprocess_mutex dd_mutex;\n+static std::map<std::pair<CCriticalSection*, CCriticalSection*>, LockStack> lockorders;\n+static boost::thread_specific_ptr<LockStack> lockstack;\n+\n+\n+static void potential_deadlock_detected(const LockStack& s1, const LockStack& s2)\n+{\n+    printf(\"POTENTIAL DEADLOCK DETECTED\\n\");\n+    printf(\"Previous lock order was:\\n\");\n+    BOOST_FOREACH(const PAIRTYPE(CCriticalSection*, CLockLocation)& i, s2)\n+    {\n+        printf(\" %s  %s:%d\\n\", i.second.mutexName.c_str(), i.second.sourceFile.c_str(), i.second.sourceLine);\n+    }\n+    printf(\"Current lock order is:\\n\");\n+    BOOST_FOREACH(const PAIRTYPE(CCriticalSection*, CLockLocation)& i, s1)\n+    {\n+        printf(\" %s  %s:%d\\n\", i.second.mutexName.c_str(), i.second.sourceFile.c_str(), i.second.sourceLine);\n+    }\n+}\n+\n+static void push_lock(CCriticalSection* c, const CLockLocation& locklocation)\n+{\n+    bool fOrderOK = true;\n+    if (lockstack.get() == NULL)\n+        lockstack.reset(new LockStack);\n+\n+    dd_mutex.lock();\n+\n+    (*lockstack).push_back(std::make_pair(c, locklocation));\n+\n+    BOOST_FOREACH(const PAIRTYPE(CCriticalSection*, CLockLocation)& i, (*lockstack))\n+    {\n+        if (i.first == c) break;\n+\n+        std::pair<CCriticalSection*, CCriticalSection*> p1 = std::make_pair(i.first, c);\n+        if (lockorders.count(p1))\n+            continue;\n+        lockorders[p1] = (*lockstack);\n+\n+        std::pair<CCriticalSection*, CCriticalSection*> p2 = std::make_pair(c, i.first);\n+        if (lockorders.count(p2))\n+        {\n+            potential_deadlock_detected(lockorders[p2], lockorders[p1]);\n+            break;\n+        }\n+    }\n+    dd_mutex.unlock();\n+}\n+\n+static void pop_lock()\n+{\n+    (*lockstack).pop_back();\n+}\n+\n+void CCriticalSection::Enter(const char* pszName, const char* pszFile, int nLine)\n+{\n+    push_lock(this, CLockLocation(pszName, pszFile, nLine));\n+    mutex.lock();\n+}\n+void CCriticalSection::Leave()\n+{\n+    mutex.unlock();\n+    pop_lock();\n+}\n+bool CCriticalSection::TryEnter(const char* pszName, const char* pszFile, int nLine)\n+{\n+    push_lock(this, CLockLocation(pszName, pszFile, nLine));\n+    bool result = mutex.try_lock();\n+    if (!result) pop_lock();\n+    return result;\n+}\n+\n+#else\n+\n+void CCriticalSection::Enter(const char*, const char*, int)\n+{\n+    mutex.lock();\n+}\n+\n+void CCriticalSection::Leave()\n+{\n+    mutex.unlock();\n+}\n+\n+bool CCriticalSection::TryEnter(const char*, const char*, int)\n+{\n+    bool result = mutex.try_lock();\n+    return result;\n+}\n \n+#endif /* DEBUG_LOCKORDER */"
      },
      {
        "sha": "1e4ceb2468717106e64957a4e33a9b9de7cefb45",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 31,
        "deletions": 26,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_UTIL_H\n@@ -222,64 +223,68 @@ std::string FormatFullVersion();\n \n \n \n-// Wrapper to automatically initialize critical sections\n+// Wrapper to automatically initialize mutex\n class CCriticalSection\n {\n-#ifdef __WXMSW__\n-protected:\n-    CRITICAL_SECTION cs;\n-public:\n-    explicit CCriticalSection() { InitializeCriticalSection(&cs); }\n-    ~CCriticalSection() { DeleteCriticalSection(&cs); }\n-    void Enter() { EnterCriticalSection(&cs); }\n-    void Leave() { LeaveCriticalSection(&cs); }\n-    bool TryEnter() { return TryEnterCriticalSection(&cs); }\n-#else\n protected:\n     boost::interprocess::interprocess_recursive_mutex mutex;\n public:\n     explicit CCriticalSection() { }\n     ~CCriticalSection() { }\n-    void Enter() { mutex.lock(); }\n-    void Leave() { mutex.unlock(); }\n-    bool TryEnter() { return mutex.try_lock(); }\n-#endif\n-public:\n-    const char* pszFile;\n-    int nLine;\n+    void Enter(const char* pszName, const char* pszFile, int nLine);\n+    void Leave();\n+    bool TryEnter(const char* pszName, const char* pszFile, int nLine);\n };\n \n // Automatically leave critical section when leaving block, needed for exception safety\n class CCriticalBlock\n {\n protected:\n     CCriticalSection* pcs;\n+\n public:\n-    CCriticalBlock(CCriticalSection& csIn) { pcs = &csIn; pcs->Enter(); }\n-    ~CCriticalBlock() { pcs->Leave(); }\n+    CCriticalBlock(CCriticalSection& csIn, const char* pszName, const char* pszFile, int nLine)\n+    {\n+        pcs = &csIn;\n+        pcs->Enter(pszName, pszFile, nLine);\n+    }\n+    ~CCriticalBlock()\n+    {\n+        pcs->Leave();\n+    }\n };\n \n // WARNING: This will catch continue and break!\n // break is caught with an assertion, but there's no way to detect continue.\n // I'd rather be careful than suffer the other more error prone syntax.\n // The compiler will optimise away all this loop junk.\n #define CRITICAL_BLOCK(cs)     \\\n-    for (bool fcriticalblockonce=true; fcriticalblockonce; assert(\"break caught by CRITICAL_BLOCK!\" && !fcriticalblockonce), fcriticalblockonce=false)  \\\n-    for (CCriticalBlock criticalblock(cs); fcriticalblockonce && (cs.pszFile=__FILE__, cs.nLine=__LINE__, true); fcriticalblockonce=false, cs.pszFile=NULL, cs.nLine=0)\n+    for (bool fcriticalblockonce=true; fcriticalblockonce; assert((\"break caught by CRITICAL_BLOCK!\" && !fcriticalblockonce)), fcriticalblockonce=false) \\\n+        for (CCriticalBlock criticalblock(cs, #cs, __FILE__, __LINE__); fcriticalblockonce; fcriticalblockonce=false)\n \n class CTryCriticalBlock\n {\n protected:\n     CCriticalSection* pcs;\n+\n public:\n-    CTryCriticalBlock(CCriticalSection& csIn) { pcs = (csIn.TryEnter() ? &csIn : NULL); }\n-    ~CTryCriticalBlock() { if (pcs) pcs->Leave(); }\n+    CTryCriticalBlock(CCriticalSection& csIn, const char* pszName, const char* pszFile, int nLine)\n+    {\n+        pcs = (csIn.TryEnter(pszName, pszFile, nLine) ? &csIn : NULL);\n+    }\n+    ~CTryCriticalBlock()\n+    {\n+        if (pcs)\n+        {\n+            pcs->Leave();\n+        }\n+    }\n     bool Entered() { return pcs != NULL; }\n };\n \n #define TRY_CRITICAL_BLOCK(cs)     \\\n-    for (bool fcriticalblockonce=true; fcriticalblockonce; assert(\"break caught by TRY_CRITICAL_BLOCK!\" && !fcriticalblockonce), fcriticalblockonce=false)  \\\n-    for (CTryCriticalBlock criticalblock(cs); fcriticalblockonce && (fcriticalblockonce = criticalblock.Entered()) && (cs.pszFile=__FILE__, cs.nLine=__LINE__, true); fcriticalblockonce=false, cs.pszFile=NULL, cs.nLine=0)\n+    for (bool fcriticalblockonce=true; fcriticalblockonce; assert((\"break caught by TRY_CRITICAL_BLOCK!\" && !fcriticalblockonce)), fcriticalblockonce=false) \\\n+        for (CTryCriticalBlock criticalblock(cs, #cs, __FILE__, __LINE__); fcriticalblockonce && (fcriticalblockonce = criticalblock.Entered()); fcriticalblockonce=false)\n \n \n "
      },
      {
        "sha": "9f9765919d8f1bec77ddfeba19704c992eef4727",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n-// Copyright (c) 2009-2011 Satoshi Nakamoto & Bitcoin developers\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "2016f31a5a026d1c88a50cdd8439f70c6fdd0843",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06c55f8d7da2e7d7ab8e029797c2a936b5152761/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=06c55f8d7da2e7d7ab8e029797c2a936b5152761",
        "patch": "@@ -1,4 +1,5 @@\n-// Copyright (c) 2009-2011 Satoshi Nakamoto & Bitcoin developers\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2011 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file license.txt or http://www.opensource.org/licenses/mit-license.php.\n #ifndef BITCOIN_WALLET_H"
      }
    ]
  }
]