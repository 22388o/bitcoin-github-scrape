[
  {
    "sha": "faa921f78788be0f236c6b10ed3f92dcf148d1cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWE5MjFmNzg3ODhiZTBmMjM2YzZiMTBlZDNmOTJkY2YxNDhkMWNi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-04T10:25:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-11T08:38:18Z"
      },
      "message": "move-only: Add util/hash_type\n\nCan be reviewed with --color-moved=dimmed-zebra",
      "tree": {
        "sha": "ff190b5831f15cdddf718e722659c51075b1c9c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff190b5831f15cdddf718e722659c51075b1c9c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa921f78788be0f236c6b10ed3f92dcf148d1cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhkzwv9Ft0aUj4P5LKWHxtpNXz9s+qUrjg/L9gGyapq5+WC5Rb+dzvPMTb1gBnu\nFON8oRk0t5J7GWKdt7Ovpck7L/GwhhHd6TpdPa42DcaY+RE6t2MOfMdkpwRC7BnW\nGcxB9Xetzd1NVJVDzVRHD0FixjDEG98eRvAedMlvF/63Wn1bQOeVoBOs90gARH61\nKHHlGrmoi1zSFsOPJKCDUPiXKBN8gnKoElo3296TPe+81vEJbivctfbHqkdk3Z6v\nTI4JO4UzE4gfBOgMqLc5eYH9/RufvYGvVOTZR3jYe+Iiq0mZ8RaoFrBFc+ySb3qs\nMXUYkegMlaLwXzGWWNfQaTHvOnIgk5Oyx8iwEdvpYf0bKhH/PpZxpNj5Sg9JIpai\nvgJRJBE/WZj39nwPl9pDmp6Uft8z9euhzqTvS22NIt07uIGbKT6Fs3RbZLzpkEYa\nZSawemO9COv/RQLWwHlTKjNWpJMJipjmUzYITQM/jDnraQnhjKG/cOym9qO7CE1d\ntZODeT9n\n=ZhZ+\n-----END PGP SIGNATURE-----",
        "payload": "tree ff190b5831f15cdddf718e722659c51075b1c9c5\nparent d2f6d2976f50e7944b1582f022c7ba8dfbc0bfa7\nauthor MarcoFalke <falke.marco@gmail.com> 1617531956 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620722298 +0200\n\nmove-only: Add util/hash_type\n\nCan be reviewed with --color-moved=dimmed-zebra\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa921f78788be0f236c6b10ed3f92dcf148d1cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faa921f78788be0f236c6b10ed3f92dcf148d1cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa921f78788be0f236c6b10ed3f92dcf148d1cb/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2f6d2976f50e7944b1582f022c7ba8dfbc0bfa7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2f6d2976f50e7944b1582f022c7ba8dfbc0bfa7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2f6d2976f50e7944b1582f022c7ba8dfbc0bfa7"
      }
    ],
    "stats": {
      "total": 138,
      "additions": 74,
      "deletions": 64
    },
    "files": [
      {
        "sha": "2b389e4b0ab0a42bb5650d9735600630af043414",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa921f78788be0f236c6b10ed3f92dcf148d1cb/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa921f78788be0f236c6b10ed3f92dcf148d1cb/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=faa921f78788be0f236c6b10ed3f92dcf148d1cb",
        "patch": "@@ -246,6 +246,7 @@ BITCOIN_CORE_H = \\\n   util/fees.h \\\n   util/getuniquepath.h \\\n   util/golombrice.h \\\n+  util/hash_type.h \\\n   util/hasher.h \\\n   util/macros.h \\\n   util/message.h \\"
      },
      {
        "sha": "12ab9979a8509bfae296f4337e0ee2c4d0e147f5",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 64,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa921f78788be0f236c6b10ed3f92dcf148d1cb/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa921f78788be0f236c6b10ed3f92dcf148d1cb/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=faa921f78788be0f236c6b10ed3f92dcf148d1cb",
        "patch": "@@ -8,6 +8,7 @@\n \n #include <script/interpreter.h>\n #include <uint256.h>\n+#include <util/hash_type.h>\n \n #include <string>\n #include <variant>\n@@ -18,70 +19,6 @@ class CKeyID;\n class CScript;\n struct ScriptHash;\n \n-template<typename HashType>\n-class BaseHash\n-{\n-protected:\n-    HashType m_hash;\n-\n-public:\n-    BaseHash() : m_hash() {}\n-    explicit BaseHash(const HashType& in) : m_hash(in) {}\n-\n-    unsigned char* begin()\n-    {\n-        return m_hash.begin();\n-    }\n-\n-    const unsigned char* begin() const\n-    {\n-        return m_hash.begin();\n-    }\n-\n-    unsigned char* end()\n-    {\n-        return m_hash.end();\n-    }\n-\n-    const unsigned char* end() const\n-    {\n-        return m_hash.end();\n-    }\n-\n-    operator std::vector<unsigned char>() const\n-    {\n-        return std::vector<unsigned char>{m_hash.begin(), m_hash.end()};\n-    }\n-\n-    std::string ToString() const\n-    {\n-        return m_hash.ToString();\n-    }\n-\n-    bool operator==(const BaseHash<HashType>& other) const noexcept\n-    {\n-        return m_hash == other.m_hash;\n-    }\n-\n-    bool operator!=(const BaseHash<HashType>& other) const noexcept\n-    {\n-        return !(m_hash == other.m_hash);\n-    }\n-\n-    bool operator<(const BaseHash<HashType>& other) const noexcept\n-    {\n-        return m_hash < other.m_hash;\n-    }\n-\n-    size_t size() const\n-    {\n-        return m_hash.size();\n-    }\n-\n-    unsigned char* data() { return m_hash.data(); }\n-    const unsigned char* data() const { return m_hash.data(); }\n-};\n-\n /** A reference to a CScript: the Hash160 of its serialization (see script.h) */\n class CScriptID : public BaseHash<uint160>\n {"
      },
      {
        "sha": "13b831cf19d3b159963e399bedc49ab6ca3d7006",
        "filename": "src/util/hash_type.h",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa921f78788be0f236c6b10ed3f92dcf148d1cb/src/util/hash_type.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa921f78788be0f236c6b10ed3f92dcf148d1cb/src/util/hash_type.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/hash_type.h?ref=faa921f78788be0f236c6b10ed3f92dcf148d1cb",
        "patch": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2020-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_HASH_TYPE_H\n+#define BITCOIN_UTIL_HASH_TYPE_H\n+\n+template <typename HashType>\n+class BaseHash\n+{\n+protected:\n+    HashType m_hash;\n+\n+public:\n+    BaseHash() : m_hash() {}\n+    explicit BaseHash(const HashType& in) : m_hash(in) {}\n+\n+    unsigned char* begin()\n+    {\n+        return m_hash.begin();\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return m_hash.begin();\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return m_hash.end();\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return m_hash.end();\n+    }\n+\n+    operator std::vector<unsigned char>() const\n+    {\n+        return std::vector<unsigned char>{m_hash.begin(), m_hash.end()};\n+    }\n+\n+    std::string ToString() const\n+    {\n+        return m_hash.ToString();\n+    }\n+\n+    bool operator==(const BaseHash<HashType>& other) const noexcept\n+    {\n+        return m_hash == other.m_hash;\n+    }\n+\n+    bool operator!=(const BaseHash<HashType>& other) const noexcept\n+    {\n+        return !(m_hash == other.m_hash);\n+    }\n+\n+    bool operator<(const BaseHash<HashType>& other) const noexcept\n+    {\n+        return m_hash < other.m_hash;\n+    }\n+\n+    size_t size() const\n+    {\n+        return m_hash.size();\n+    }\n+\n+    unsigned char* data() { return m_hash.data(); }\n+    const unsigned char* data() const { return m_hash.data(); }\n+};\n+\n+#endif // BITCOIN_UTIL_HASH_TYPE_H"
      }
    ]
  },
  {
    "sha": "00000077098a23e0ac9781f5f799c90fd2fd97de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDAwMDA3NzA5OGEyM2UwYWM5NzgxZjVmNzk5YzkwZmQyZmQ5N2Rl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-04T10:40:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-11T08:39:44Z"
      },
      "message": "refactor: Remove unused code",
      "tree": {
        "sha": "20ec351280031b3bde5fe56d402abd9b9ea937de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20ec351280031b3bde5fe56d402abd9b9ea937de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00000077098a23e0ac9781f5f799c90fd2fd97de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUityAv/QquHk5f3cAIndCrBm5JSB7qjLqbTNa/PG5xIqLuTL8vcXbxUdngAf0jv\nTXPFKMUiC90frr/khVG2vcTSEn9lkaWETruvnx7H4ARKm1OrsTI79yP8ShR+Ds5c\nCM8HLaSYTvj3H5QNIhe8rOwaenECIOtsHrhDK4ok7nJftrEqYw/TM1YUyquPRoUH\np+avrNKmynt842Y72GJjSeG6+meUAMIKLgn8/ULgNdvNwxG/XIPEtaRW6rLs4nGw\nGYpFDQ2FdtqljNGLfaKFY40RVMaaES6QEw7ImKNC+buz46OOSn+T1wnm9e/llj/n\nInsA/ia/8JD0sqY7riyWRsAwfQ4PJWHQppYRUC1vMoFbUaNqiOf1o7a7gb7xRay/\nGC0mavFNdPNcbCdjbwtIXOO2atomQfXa0Ef6nxBYianNhT95xM6pplsNOc7xjI+c\nbUvGedoqtXP7H6YC4oKe7oTqSiPAinl4wIl6UhRjnVpAbtuGpBikOKmkKXn6EdK1\n4Bpv6jR2\n=mA38\n-----END PGP SIGNATURE-----",
        "payload": "tree 20ec351280031b3bde5fe56d402abd9b9ea937de\nparent faa921f78788be0f236c6b10ed3f92dcf148d1cb\nauthor MarcoFalke <falke.marco@gmail.com> 1617532809 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620722384 +0200\n\nrefactor: Remove unused code\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00000077098a23e0ac9781f5f799c90fd2fd97de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00000077098a23e0ac9781f5f799c90fd2fd97de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00000077098a23e0ac9781f5f799c90fd2fd97de/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faa921f78788be0f236c6b10ed3f92dcf148d1cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa921f78788be0f236c6b10ed3f92dcf148d1cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faa921f78788be0f236c6b10ed3f92dcf148d1cb"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 0,
      "deletions": 10
    },
    "files": [
      {
        "sha": "8535e1cdd949382e622c7a209c4ee938f4999d89",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00000077098a23e0ac9781f5f799c90fd2fd97de/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00000077098a23e0ac9781f5f799c90fd2fd97de/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=00000077098a23e0ac9781f5f799c90fd2fd97de",
        "patch": "@@ -559,9 +559,3 @@ void SelectParams(const std::string& network)\n     SelectBaseParams(network);\n     globalChainParams = CreateChainParams(gArgs, network);\n }\n-\n-std::ostream& operator<<(std::ostream& o, const AssumeutxoData& aud)\n-{\n-    o << strprintf(\"AssumeutxoData(%s, %s)\", aud.hash_serialized.ToString(), aud.nChainTx);\n-    return o;\n-}"
      },
      {
        "sha": "ae0b0f3c21c6926a09c4dacab0a8361c5be8a49b",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00000077098a23e0ac9781f5f799c90fd2fd97de/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00000077098a23e0ac9781f5f799c90fd2fd97de/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=00000077098a23e0ac9781f5f799c90fd2fd97de",
        "patch": "@@ -41,8 +41,6 @@ struct AssumeutxoData {\n     const unsigned int nChainTx;\n };\n \n-std::ostream& operator<<(std::ostream& o, const AssumeutxoData& aud);\n-\n using MapAssumeutxo = std::map<int, const AssumeutxoData>;\n \n /**"
      },
      {
        "sha": "816b4864a386debb1f3ae6d63c271c2b815e2ff0",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00000077098a23e0ac9781f5f799c90fd2fd97de/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00000077098a23e0ac9781f5f799c90fd2fd97de/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=00000077098a23e0ac9781f5f799c90fd2fd97de",
        "patch": "@@ -20,8 +20,6 @@\n #include <functional>\n #include <unordered_map>\n \n-class ChainstateManager;\n-\n /**\n  * A UTXO entry.\n  *"
      }
    ]
  },
  {
    "sha": "fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTU2NjhiZmIzNGUyNzc4OTM2YWYzMGU5ZmI2YmQzYzZiY2Y0MWZk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-04T12:20:13Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-11T08:40:40Z"
      },
      "message": "refactor: Use type-safe assumeutxo hash\n\nThis avoids accidentally mixing it up with other hashes (like block\nhashes).",
      "tree": {
        "sha": "8e1325421d4e9e1570a812e5a7cff8839592bbb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e1325421d4e9e1570a812e5a7cff8839592bbb0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgSnQv/RO422tYOdhWerR6jrzByIRRPoFJZOA6HXs32GE2jAlc5lxFhrWjq2gEa\n5eHq3Qv9PlFvMN37vsIVArCc4mAm/FJ1zMKrHLZmkCIbqZDLz63nPq2W6PNSV7ZN\nqAxMqSIMktsZkfS5uYFdyNMTZbN7/ij1RvOauJiKnQjp6B/iFlgpOAng2HphAadd\nhiQVi2YL2BYNHddE98AyE0sQb2gPrJLcwlx7kgsSBZv/4GaJARok2tJcx5v2y+Ce\ns2zrBUMDBxTtJ6ovOygt3/AWD/GMqI3pSAO7YkwN4otMahOeMGI0d1SroK5tAiMI\nv5/caq7zWsL5gkSi2U4APvoflD6DQqZrzH6CuYsa1r1PQfo5/hTTpd2V4b+HeODt\nTjM3SXnS0UnZAPujzWEdoX0YJWxYYr+djCyJdIeLtxm5C1HNjwiruMrOQ+c6dsvB\nmzJYjn5cCLF2efTOY865RJV0/T5cwW4z5W1qg7eVJJ1eOFXHUlxOEGMmtWV1bNOJ\nOxGFA7p+\n=dVIY\n-----END PGP SIGNATURE-----",
        "payload": "tree 8e1325421d4e9e1570a812e5a7cff8839592bbb0\nparent 00000077098a23e0ac9781f5f799c90fd2fd97de\nauthor MarcoFalke <falke.marco@gmail.com> 1617538813 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620722440 +0200\n\nrefactor: Use type-safe assumeutxo hash\n\nThis avoids accidentally mixing it up with other hashes (like block\nhashes).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00000077098a23e0ac9781f5f799c90fd2fd97de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00000077098a23e0ac9781f5f799c90fd2fd97de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00000077098a23e0ac9781f5f799c90fd2fd97de"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 11,
      "deletions": 6
    },
    "files": [
      {
        "sha": "fc5a9d84cce5c6fd7567f1f16589bc0ad16e914c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
        "patch": "@@ -451,11 +451,11 @@ class CRegTestParams : public CChainParams {\n         m_assumeutxo_data = MapAssumeutxo{\n             {\n                 110,\n-                {uint256S(\"0x1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\"), 110},\n+                {AssumeutxoHash{uint256S(\"0x1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\")}, 110},\n             },\n             {\n                 210,\n-                {uint256S(\"0x9c5ed99ef98544b34f8920b6d1802f72ac28ae6e2bd2bd4c316ff10c230df3f2\"), 210},\n+                {AssumeutxoHash{uint256S(\"0x9c5ed99ef98544b34f8920b6d1802f72ac28ae6e2bd2bd4c316ff10c230df3f2\")}, 210},\n             },\n         };\n "
      },
      {
        "sha": "5c2351eea69afe64967803c52ec296ca55f49e51",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
        "patch": "@@ -10,6 +10,7 @@\n #include <consensus/params.h>\n #include <primitives/block.h>\n #include <protocol.h>\n+#include <util/hash_type.h>\n \n #include <memory>\n #include <vector>\n@@ -25,14 +26,18 @@ struct CCheckpointData {\n     }\n };\n \n+struct AssumeutxoHash : public BaseHash<uint256> {\n+    explicit AssumeutxoHash(const uint256& hash) : BaseHash(hash) {}\n+};\n+\n /**\n  * Holds configuration for use during UTXO snapshot load and validation. The contents\n  * here are security critical, since they dictate which UTXO snapshots are recognized\n  * as valid.\n  */\n struct AssumeutxoData {\n     //! The expected hash of the deserialized UTXO set.\n-    const uint256 hash_serialized;\n+    const AssumeutxoHash hash_serialized;\n \n     //! Used to populate the nChainTx value, which is used during BlockManager::LoadBlockIndex().\n     //!"
      },
      {
        "sha": "1e5baec01aed279b1228e375b6e964cd4be3af8f",
        "filename": "src/test/validation_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/src/test/validation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/src/test/validation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_tests.cpp?ref=fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
        "patch": "@@ -135,11 +135,11 @@ BOOST_AUTO_TEST_CASE(test_assumeutxo)\n     }\n \n     const auto out110 = *ExpectedAssumeutxo(110, *params);\n-    BOOST_CHECK_EQUAL(out110.hash_serialized, uint256S(\"1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\"));\n+    BOOST_CHECK_EQUAL(out110.hash_serialized.ToString(), \"1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\");\n     BOOST_CHECK_EQUAL(out110.nChainTx, (unsigned int)110);\n \n     const auto out210 = *ExpectedAssumeutxo(210, *params);\n-    BOOST_CHECK_EQUAL(out210.hash_serialized, uint256S(\"9c5ed99ef98544b34f8920b6d1802f72ac28ae6e2bd2bd4c316ff10c230df3f2\"));\n+    BOOST_CHECK_EQUAL(out210.hash_serialized.ToString(), \"9c5ed99ef98544b34f8920b6d1802f72ac28ae6e2bd2bd4c316ff10c230df3f2\");\n     BOOST_CHECK_EQUAL(out210.nChainTx, (unsigned int)210);\n }\n "
      },
      {
        "sha": "354ff182e2b26a179886b8579d823e1c6fe85c6d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
        "patch": "@@ -4939,7 +4939,7 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     const AssumeutxoData& au_data = *maybe_au_data;\n \n-    if (stats.hashSerialized != au_data.hash_serialized) {\n+    if (AssumeutxoHash{stats.hashSerialized} != au_data.hash_serialized) {\n         LogPrintf(\"[snapshot] bad snapshot content hash: expected %s, got %s\\n\",\n             au_data.hash_serialized.ToString(), stats.hashSerialized.ToString());\n         return false;"
      }
    ]
  },
  {
    "sha": "fae33f98e6a8d5934edbdce2eb8688112eac41a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWUzM2Y5OGU2YThkNTkzNGVkYmRjZTJlYjg2ODgxMTJlYWM0MWE4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-04T06:23:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-11T08:41:03Z"
      },
      "message": "Fix assumeutxo crash due to invalid base_blockhash\n\nCan be reviewed with --color-moved=dimmed-zebra --color-moved-ws=ignore-all-space",
      "tree": {
        "sha": "ea6a7d0ee4a8d6137fc35752e5d1c676125dd4bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea6a7d0ee4a8d6137fc35752e5d1c676125dd4bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae33f98e6a8d5934edbdce2eb8688112eac41a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg7OgwAzgscr/Ka90S7GqYs1EzZSHIEjZDyw8uikahohc5CdhDwUuYkJb2UZ6ly\n2/DGDaFnLwbwggvshSV4IY+g26tHZRJMjDt0mrza8LxtMltLsKZXuScxIaPPdrkP\n3vuWQ8iA1nmxMHOwQObztgPQ7+DYUuIErKovE6+bNh5gWUajpURntlzbUW8uyr66\nROvUYjdhjTcVSwuwS2owppPePrSoHG3l+3CJdZU8ol4EdnZH7qeZ/s5Ojj2Y4DH9\nSAc66sMh7eui6iaBB66/+/ux4B5Msxm3/QRjM5fvxf5JN/hGcmfGAspA3HWESM7n\ni2YavhTuBn+sNyC2DME7zKT6S4FE5flQ0/5lNtoTH/B7PDmxtBZlktp+fu83/vQl\nbTD0YVMo40tIwT/sZas27n4vHhcgpUACUj1P5dHNp3uTcBPBQbpefXgnFVJ7/MAc\nAMyClXyyN4GUp1tYQnJYTETCKbuZnr1pTGIgwkX0WCw8FZii8NA9GxZWY2ofX1uf\n4/QkxuUY\n=ID6L\n-----END PGP SIGNATURE-----",
        "payload": "tree ea6a7d0ee4a8d6137fc35752e5d1c676125dd4bf\nparent fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd\nauthor MarcoFalke <falke.marco@gmail.com> 1617517386 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620722463 +0200\n\nFix assumeutxo crash due to invalid base_blockhash\n\nCan be reviewed with --color-moved=dimmed-zebra --color-moved-ws=ignore-all-space\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae33f98e6a8d5934edbdce2eb8688112eac41a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae33f98e6a8d5934edbdce2eb8688112eac41a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae33f98e6a8d5934edbdce2eb8688112eac41a8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5668bfb34e2778936af30e9fb6bd3c6bcf41fd"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 25,
      "deletions": 21
    },
    "files": [
      {
        "sha": "272f6163c90c99f36225ab72bf995284cc6e5d6b",
        "filename": "src/test/validation_chainstatemanager_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae33f98e6a8d5934edbdce2eb8688112eac41a8/src/test/validation_chainstatemanager_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae33f98e6a8d5934edbdce2eb8688112eac41a8/src/test/validation_chainstatemanager_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstatemanager_tests.cpp?ref=fae33f98e6a8d5934edbdce2eb8688112eac41a8",
        "patch": "@@ -260,6 +260,11 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n             // Coins count is smaller than coins in file\n             metadata.m_coins_count -= 1;\n     }));\n+    BOOST_REQUIRE(!CreateAndActivateUTXOSnapshot(\n+        m_node, m_path_root, [](CAutoFile& auto_infile, SnapshotMetadata& metadata) {\n+            // Wrong hash\n+            metadata.m_base_blockhash = uint256::ZERO;\n+    }));\n     BOOST_REQUIRE(!CreateAndActivateUTXOSnapshot(\n         m_node, m_path_root, [](CAutoFile& auto_infile, SnapshotMetadata& metadata) {\n             // Wrong hash"
      },
      {
        "sha": "65bfbbf999bc4a0bcb9965aada9dfb7e2eac2022",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 21,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae33f98e6a8d5934edbdce2eb8688112eac41a8/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae33f98e6a8d5934edbdce2eb8688112eac41a8/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fae33f98e6a8d5934edbdce2eb8688112eac41a8",
        "patch": "@@ -4815,6 +4815,26 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     uint256 base_blockhash = metadata.m_base_blockhash;\n \n+    CBlockIndex* snapshot_start_block = WITH_LOCK(::cs_main, return m_blockman.LookupBlockIndex(base_blockhash));\n+\n+    if (!snapshot_start_block) {\n+        // Needed for GetUTXOStats and ExpectedAssumeutxo to determine the height and to avoid a crash when base_blockhash.IsNull()\n+        LogPrintf(\"[snapshot] Did not find snapshot start blockheader %s\\n\",\n+                  base_blockhash.ToString());\n+        return false;\n+    }\n+\n+    int base_height = snapshot_start_block->nHeight;\n+    auto maybe_au_data = ExpectedAssumeutxo(base_height, ::Params());\n+\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo height in snapshot metadata not recognized \" /* Continued */\n+                  \"(%d) - refusing to load snapshot\\n\", base_height);\n+        return false;\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+\n     COutPoint outpoint;\n     Coin coin;\n     const uint64_t coins_count = metadata.m_coins_count;\n@@ -4905,15 +4925,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     assert(coins_cache.GetBestBlock() == base_blockhash);\n \n-    CBlockIndex* snapshot_start_block = WITH_LOCK(::cs_main, return m_blockman.LookupBlockIndex(base_blockhash));\n-\n-    if (!snapshot_start_block) {\n-        // Needed for GetUTXOStats to determine the height\n-        LogPrintf(\"[snapshot] Did not find snapshot start blockheader %s\\n\",\n-                  base_blockhash.ToString());\n-        return false;\n-    }\n-\n     CCoinsStats stats{CoinStatsHashType::HASH_SERIALIZED};\n     auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n \n@@ -4927,18 +4938,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     }\n \n     // Assert that the deserialized chainstate contents match the expected assumeutxo value.\n-\n-    int base_height = snapshot_start_block->nHeight;\n-    auto maybe_au_data = ExpectedAssumeutxo(base_height, ::Params());\n-\n-    if (!maybe_au_data) {\n-        LogPrintf(\"[snapshot] assumeutxo height in snapshot metadata not recognized \" /* Continued */\n-            \"(%d) - refusing to load snapshot\\n\", base_height);\n-        return false;\n-    }\n-\n-    const AssumeutxoData& au_data = *maybe_au_data;\n-\n     if (AssumeutxoHash{stats.hashSerialized} != au_data.hash_serialized) {\n         LogPrintf(\"[snapshot] bad snapshot content hash: expected %s, got %s\\n\",\n             au_data.hash_serialized.ToString(), stats.hashSerialized.ToString());"
      }
    ]
  },
  {
    "sha": "fa340b87944764ea4e8e04038fe7471fd452bc23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTM0MGI4Nzk0NDc2NGVhNGU4ZTA0MDM4ZmU3NDcxZmQ0NTJiYzIz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-03T15:26:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-11T09:21:05Z"
      },
      "message": "refactor: Avoid magic value of all-zeros in assumeutxo base_blockhash\n\nJust use std::optional",
      "tree": {
        "sha": "1affc018b491df13daa027814cfea21bee8462df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1affc018b491df13daa027814cfea21bee8462df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa340b87944764ea4e8e04038fe7471fd452bc23",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhwjAv/QSKrJAHvJ6/dUosTMwkw9vv2/ifZQmJgJI+BirMvQp01ezazlPZGV4Dg\nXjDP3zvLMqi9vwHUVdOfulGHxsMtkSEbfpLZn33HDO7OZm+MbT5U8eaqmJ6UkmAu\nyPXRrkejXXlk7vFP1KuTLHEv7Y2CBpgCNXu4OpNzvcJotJNFYtjQLrfue5Fe3YOD\nCMepk9xHvRZ9NFh1vYeyD9KhMTWK762FOEfe+j4xmVQLvSS2bCrrOEFVy6NjgNUk\nPAMEeCa/9we8qkTRblyK0AanPxiIUOvNsmCnx8VWbH7hAnviGN8oAkGcT0rwWzWW\n1yiIAhVTpt5SXG0InLExz4ZBPgWu0k1DhHrmoKM6YmS70zQEYciwtkkQ99SLtEWK\nHzktLdKasKkCZ4tkCewLHhp82b89Ykw+EVz+8WjAmAu+BCcie5KYFsudGRZ45pYl\nNobSr63Fl8lB09AprpA0PnzdyvdBlIlBL/7ehWUqaAasvO9sY63CUWP0FHEtkB/i\nnAE9kxf2\n=Ybnx\n-----END PGP SIGNATURE-----",
        "payload": "tree 1affc018b491df13daa027814cfea21bee8462df\nparent fae33f98e6a8d5934edbdce2eb8688112eac41a8\nauthor MarcoFalke <falke.marco@gmail.com> 1617463599 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620724865 +0200\n\nrefactor: Avoid magic value of all-zeros in assumeutxo base_blockhash\n\nJust use std::optional\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa340b87944764ea4e8e04038fe7471fd452bc23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa340b87944764ea4e8e04038fe7471fd452bc23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa340b87944764ea4e8e04038fe7471fd452bc23/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fae33f98e6a8d5934edbdce2eb8688112eac41a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae33f98e6a8d5934edbdce2eb8688112eac41a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fae33f98e6a8d5934edbdce2eb8688112eac41a8"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 20,
      "deletions": 22
    },
    "files": [
      {
        "sha": "0b912acb088a520bedc7facd0c0851a1bcd8f774",
        "filename": "src/test/validation_chainstatemanager_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa340b87944764ea4e8e04038fe7471fd452bc23/src/test/validation_chainstatemanager_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa340b87944764ea4e8e04038fe7471fd452bc23/src/test/validation_chainstatemanager_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstatemanager_tests.cpp?ref=fa340b87944764ea4e8e04038fe7471fd452bc23",
        "patch": "@@ -226,10 +226,8 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n \n     // Snapshot should refuse to load at this height.\n     BOOST_REQUIRE(!CreateAndActivateUTXOSnapshot(m_node, m_path_root));\n-    BOOST_CHECK(chainman.ActiveChainstate().m_from_snapshot_blockhash.IsNull());\n-    BOOST_CHECK_EQUAL(\n-        chainman.ActiveChainstate().m_from_snapshot_blockhash,\n-        chainman.SnapshotBlockhash().value_or(uint256()));\n+    BOOST_CHECK(!chainman.ActiveChainstate().m_from_snapshot_blockhash);\n+    BOOST_CHECK(!chainman.SnapshotBlockhash());\n \n     // Mine 10 more blocks, putting at us height 110 where a valid assumeutxo value can\n     // be found.\n@@ -274,9 +272,9 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n     BOOST_REQUIRE(CreateAndActivateUTXOSnapshot(m_node, m_path_root));\n \n     // Ensure our active chain is the snapshot chainstate.\n-    BOOST_CHECK(!chainman.ActiveChainstate().m_from_snapshot_blockhash.IsNull());\n+    BOOST_CHECK(!chainman.ActiveChainstate().m_from_snapshot_blockhash->IsNull());\n     BOOST_CHECK_EQUAL(\n-        chainman.ActiveChainstate().m_from_snapshot_blockhash,\n+        *chainman.ActiveChainstate().m_from_snapshot_blockhash,\n         *chainman.SnapshotBlockhash());\n \n     const AssumeutxoData& au_data = *ExpectedAssumeutxo(snapshot_height, ::Params());\n@@ -352,7 +350,7 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, TestChain100Setup)\n \n     // Snapshot blockhash should be unchanged.\n     BOOST_CHECK_EQUAL(\n-        chainman.ActiveChainstate().m_from_snapshot_blockhash,\n+        *chainman.ActiveChainstate().m_from_snapshot_blockhash,\n         loaded_snapshot_blockhash);\n }\n "
      },
      {
        "sha": "4f9b8687b77df51bfaef2b7bfc1f446244eff3ba",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa340b87944764ea4e8e04038fe7471fd452bc23/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa340b87944764ea4e8e04038fe7471fd452bc23/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa340b87944764ea4e8e04038fe7471fd452bc23",
        "patch": "@@ -1158,7 +1158,7 @@ void CoinsViews::InitCache()\n     m_cacheview = std::make_unique<CCoinsViewCache>(&m_catcherview);\n }\n \n-CChainState::CChainState(CTxMemPool& mempool, BlockManager& blockman, uint256 from_snapshot_blockhash)\n+CChainState::CChainState(CTxMemPool& mempool, BlockManager& blockman, std::optional<uint256> from_snapshot_blockhash)\n     : m_mempool(mempool),\n       m_blockman(blockman),\n       m_from_snapshot_blockhash(from_snapshot_blockhash) {}\n@@ -1169,8 +1169,8 @@ void CChainState::InitCoinsDB(\n     bool should_wipe,\n     std::string leveldb_name)\n {\n-    if (!m_from_snapshot_blockhash.IsNull()) {\n-        leveldb_name += \"_\" + m_from_snapshot_blockhash.ToString();\n+    if (m_from_snapshot_blockhash) {\n+        leveldb_name += \"_\" + m_from_snapshot_blockhash->ToString();\n     }\n \n     m_coins_views = std::make_unique<CoinsViews>(\n@@ -3877,7 +3877,7 @@ bool CVerifyDB::VerifyDB(\n     int reportDone = 0;\n     LogPrintf(\"[0%%]...\"); /* Continued */\n \n-    bool is_snapshot_cs = !chainstate.m_from_snapshot_blockhash.IsNull();\n+    const bool is_snapshot_cs{!chainstate.m_from_snapshot_blockhash};\n \n     for (pindex = chainstate.m_chain.Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n         const int percentageDone = std::max(1, std::min(99, (int)(((double)(chainstate.m_chain.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n@@ -4458,8 +4458,8 @@ std::string CChainState::ToString()\n {\n     CBlockIndex* tip = m_chain.Tip();\n     return strprintf(\"Chainstate [%s] @ height %d (%s)\",\n-        m_from_snapshot_blockhash.IsNull() ? \"ibd\" : \"snapshot\",\n-        tip ? tip->nHeight : -1, tip ? tip->GetBlockHash().ToString() : \"null\");\n+                     m_from_snapshot_blockhash ? \"snapshot\" : \"ibd\",\n+                     tip ? tip->nHeight : -1, tip ? tip->GetBlockHash().ToString() : \"null\");\n }\n \n bool CChainState::ResizeCoinsCaches(size_t coinstip_size, size_t coinsdb_size)\n@@ -4662,10 +4662,10 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     return std::min<double>(pindex->nChainTx / fTxTotal, 1.0);\n }\n \n-std::optional<uint256> ChainstateManager::SnapshotBlockhash() const {\n+std::optional<uint256> ChainstateManager::SnapshotBlockhash() const\n+{\n     LOCK(::cs_main);\n-    if (m_active_chainstate != nullptr &&\n-            !m_active_chainstate->m_from_snapshot_blockhash.IsNull()) {\n+    if (m_active_chainstate && m_active_chainstate->m_from_snapshot_blockhash) {\n         // If a snapshot chainstate exists, it will always be our active.\n         return m_active_chainstate->m_from_snapshot_blockhash;\n     }\n@@ -4688,9 +4688,9 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n     return out;\n }\n \n-CChainState& ChainstateManager::InitializeChainstate(CTxMemPool& mempool, const uint256& snapshot_blockhash)\n+CChainState& ChainstateManager::InitializeChainstate(CTxMemPool& mempool, const std::optional<uint256>& snapshot_blockhash)\n {\n-    bool is_snapshot = !snapshot_blockhash.IsNull();\n+    bool is_snapshot = snapshot_blockhash.has_value();\n     std::unique_ptr<CChainState>& to_modify =\n         is_snapshot ? m_snapshot_chainstate : m_ibd_chainstate;\n "
      },
      {
        "sha": "1b50644185db51883b5655626acfec60470d71c4",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa340b87944764ea4e8e04038fe7471fd452bc23/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa340b87944764ea4e8e04038fe7471fd452bc23/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa340b87944764ea4e8e04038fe7471fd452bc23",
        "patch": "@@ -553,7 +553,7 @@ class CChainState\n     //! CChainState instances.\n     BlockManager& m_blockman;\n \n-    explicit CChainState(CTxMemPool& mempool, BlockManager& blockman, uint256 from_snapshot_blockhash = uint256());\n+    explicit CChainState(CTxMemPool& mempool, BlockManager& blockman, std::optional<uint256> from_snapshot_blockhash = std::nullopt);\n \n     /**\n      * Initialize the CoinsViews UTXO set database management data structures. The in-memory\n@@ -584,9 +584,9 @@ class CChainState\n     /**\n      * The blockhash which is the base of the snapshot this chainstate was created from.\n      *\n-     * IsNull() if this chainstate was not created from a snapshot.\n+     * std::nullopt if this chainstate was not created from a snapshot.\n      */\n-    const uint256 m_from_snapshot_blockhash{};\n+    const std::optional<uint256> m_from_snapshot_blockhash;\n \n     /**\n      * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n@@ -866,7 +866,7 @@ class ChainstateManager\n     //                                  constructor\n     //! @param[in] snapshot_blockhash   If given, signify that this chainstate\n     //!                                 is based on a snapshot.\n-    CChainState& InitializeChainstate(CTxMemPool& mempool, const uint256& snapshot_blockhash = uint256())\n+    CChainState& InitializeChainstate(CTxMemPool& mempool, const std::optional<uint256>& snapshot_blockhash = std::nullopt)\n         EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Get all chainstates currently being used."
      }
    ]
  }
]