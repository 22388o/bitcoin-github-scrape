MarcoFalke,2021-04-03 14:52:33,Introduced in #19806,https://github.com/bitcoin/bitcoin/pull/21584#issuecomment-812875881,812875881,
DrahtBot,2021-04-04 06:43:17,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21620 (ChainstateManager locking improvements by jamesob)\n\nIf you consider this pull request important, please also hel",https://github.com/bitcoin/bitcoin/pull/21584#issuecomment-812983482,812983482,
MarcoFalke,2021-04-13 08:54:54,"Force pushed in an attempt to address feedback.\n\n> is it actually still a crash fix\n\nYes. You can check by running the added test without the fix and observing the crash.",https://github.com/bitcoin/bitcoin/pull/21584#issuecomment-818570104,818570104,
DrahtBot,2021-05-03 09:32:34,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @jamesob @sipa have been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/21584#issuecomment-831141937,831141937,
laanwj,2021-05-05 13:08:34,"Code review ACK, haven't tested the fix but it is much better to use `std::optional` instead of special-casing a hash value.\nNeeds rebase, though.",https://github.com/bitcoin/bitcoin/pull/21584#issuecomment-832673073,832673073,
MarcoFalke,2021-05-11 09:54:52,Rebased. Should be trivial to re-ACK ,https://github.com/bitcoin/bitcoin/pull/21584#issuecomment-838187108,838187108,
laanwj,2021-05-12 18:59:17,Code review re-ACK fa340b87944764ea4e8e04038fe7471fd452bc23,https://github.com/bitcoin/bitcoin/pull/21584#issuecomment-840023619,840023619,
ryanofsky,2021-04-12 22:13:52,"In commit ""refactor: Assumeutxo lookup by blockhash"" (fa3b1cd38eb98dd90be097bd8f0734a802de38f0)\n\nSeems like you could drop `// height = 110` to not repeat `110` next line. Could maybe write do `/* height = */` there to be clearer the value is a height.",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r611988631,611988631,src/chainparams.cpp
ryanofsky,2021-04-12 22:18:44,"In commit ""refactor: Assumeutxo lookup by blockhash"" (fa3b1cd38eb98dd90be097bd8f0734a802de38f0)\n\nInteresting this adds block hash information to the MapAssumeutxo map. Previously there was discussion about doing the opposite and removing block height information https://github.com/bitcoin/bitcoin/pull/19806#discussion_r508081070.\n\nIt seems to me like maybe it could be better not to add ext",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r611990689,611990689,src/chainparams.h
ryanofsky,2021-04-12 22:42:04,"In commit ""Fix assumeutxo crash due to invalid base_blockhash"" (fa8676b668cfd71eb299bd7e59cdec374c5d5407)\n\nAfter #21582, should this commit description be updated? This commit seems not to avoid a crash, but just be an optimization that makes the check for a known assumeutxo hash happen a little earlier than it used to.",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612000367,612000367,src/validation.cpp
ryanofsky,2021-04-12 22:44:53,"In commit ""refactor: Avoid magic value of all-zeros in assumeutxo base_blockhash"" (fae09976880051232a4082248e30cc7a3b801644)\n\nSeems fine to drop this line, but strictly speaking this check could still work and could be kept? (Just want to make sure I'm not missing something and it had to be removed for another reason)",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612001395,612001395,src/test/validation_chainstatemanager_tests.cpp
MarcoFalke,2021-04-13 06:25:14,";)\n\nThe value is not height but nChainTx",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612161383,612161383,src/chainparams.cpp
MarcoFalke,2021-04-13 08:50:12,Restored check,https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612256950,612256950,src/test/validation_chainstatemanager_tests.cpp
MarcoFalke,2021-04-13 08:51:20,huh? This absolutely avoids a crash. Do you have steps to not-reproduce the crash I added in that commit?,https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612257797,612257797,src/validation.cpp
MarcoFalke,2021-04-13 08:53:17,"There should be no difference in using block height or block hash, but I reverted to height, since that is used before.",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612259344,612259344,src/chainparams.h
ryanofsky,2021-04-13 18:12:53,"re: https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612257797\n\n> huh? This absolutely avoids a crash. Do you have steps to not-reproduce the crash I added in that commit?\n\nMarco. You're going to make me actually test a PR? What about my tried and true method of just asking stupid questions about PRs and hoping that it sometimes makes things better?\n\nBut just in case anyone el",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612673879,612673879,src/validation.cpp
MarcoFalke,2021-04-13 18:21:29,"Thanks Ryan, added your stack trace to https://github.com/bitcoin/bitcoin/pull/21584#issue-608396741 ",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612679319,612679319,src/validation.cpp
MarcoFalke,2021-04-13 18:22:50,"> You're going to make me actually test a PR\n\nThe commit that added the assert is mentioned in OP, so in theory it would be possible to review without testing ;)",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612680163,612680163,src/validation.cpp
ryanofsky,2021-04-13 18:31:05,"> The commit that added the assert is mentioned in OP, so in theory it would be possible to review without testing ;)\n\nNow I get it. Thanks! Another connection I didn't make the first time around.",https://github.com/bitcoin/bitcoin/pull/21584#discussion_r612685332,612685332,src/validation.cpp
