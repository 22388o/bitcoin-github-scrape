practicalswift,2019-08-20 20:02:41,"ACK fa09713060ced21905108161d53e6de79f104649 -- diff looks correct\n\nPerhaps put this handy function in real-world use outside of the tests as part of this PR?\n\nCould these be candidates?\n\nhttps://github.com/bitcoin/bitcoin/blob/70b12af87eb036623f5dd1f3a519efe6c156570d/src/rpc/util.cpp#L648-L652\n\nhttps://github.com/bitcoin/bitcoin/blob/70b12af87eb036623f5dd1f3a519efe6c156570d/src/sc",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-523172539,523172539,
MarcoFalke,2019-08-20 21:05:21,"> Perhaps put this handy function in real-world use outside of the tests as part of this PR?\n\nDone. (Now used in `rpc/util`. I checked that all generated rpc helps are identical before and after this change)",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-523194437,523194437,
practicalswift,2019-08-20 21:47:46,"Very nice!\n\nACK faebf6271467048dc8a9a0c526a0f8565023a966",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-523208326,523208326,
sipa,2019-08-20 22:07:44,"I think you can also use `std::accumulate(list.begin(), list.end(), """")`; it's also a lot more generic.",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-523213997,523213997,
DrahtBot,2019-08-20 22:08:00,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15934](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15934.html) (Separate settings merging from parsing by r",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-523214064,523214064,
MarcoFalke,2019-08-20 22:16:26,"> I think you can also use std::accumulate(list.begin(), list.end(), """"); it's also a lot more generic.\n\nIt seems less generic, since it does not accept a separator, nor a unary operator.",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-523216434,523216434,
emilengler,2019-08-21 14:22:36,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-523479529,523479529,
NicolasDorier,2019-08-22 05:56:32,"@sipa accumulate is not recommended https://stackoverflow.com/questions/15347123/how-to-construct-a-stdstring-from-a-stdvectorstring/18703743\n\n```\nDon't use std::accumulate for string concatenation, it is a classic Schlemiel the Painter's algorithm, even worse than the usual example using strcat in C. Without C++11 move semantics, it incurs two unnecessary copies of the accumulator for each ",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-523759998,523759998,
hebasto,2020-05-10 18:56:12,"@MarcoFalke \nOn Linux I can compile, link, and pass unit tests without `util/string.cpp`.\nHas this source file any special mission?",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-626372760,626372760,
MarcoFalke,2020-05-10 19:11:08,"No, it has no meaning. Just a placeholder when someone wants to add stuff. For example the things in `strencodings` that have nothing to do with encoding/decoding strings can be moved here. Not saying that should be done now, but it can be done in the future.",https://github.com/bitcoin/bitcoin/pull/16670#issuecomment-626374734,626374734,
