[
  {
    "sha": "6db187778e5881e66135c1435e21d541b06b04d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGIxODc3NzhlNTg4MWU2NjEzNWMxNDM1ZTIxZDU0MWIwNmIwNGQ4",
    "commit": {
      "author": {
        "name": "Dagur Valberg Johannsson",
        "email": "dagurval@pvv.ntnu.no",
        "date": "2018-03-07T10:31:58Z"
      },
      "committer": {
        "name": "Dagur Valberg Johannsson",
        "email": "dagurval@pvv.ntnu.no",
        "date": "2018-03-07T10:39:05Z"
      },
      "message": "[qa] Fix race condition in p2p_compactblocks\n\nFixes a race where node1 processes the previous block submitted,\nbetween the two getblockcount calls on node1.\n\nWhen that happens on the last block, then the test would fail on\n\"getblockhash()\" with error \"Block height out of range\".",
      "tree": {
        "sha": "d3728067c3548caf63e3f39cbf31470e44159b7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3728067c3548caf63e3f39cbf31470e44159b7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6db187778e5881e66135c1435e21d541b06b04d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6db187778e5881e66135c1435e21d541b06b04d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6db187778e5881e66135c1435e21d541b06b04d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6db187778e5881e66135c1435e21d541b06b04d8/comments",
    "author": {
      "login": "dagurval",
      "id": 92707,
      "node_id": "MDQ6VXNlcjkyNzA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/92707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dagurval",
      "html_url": "https://github.com/dagurval",
      "followers_url": "https://api.github.com/users/dagurval/followers",
      "following_url": "https://api.github.com/users/dagurval/following{/other_user}",
      "gists_url": "https://api.github.com/users/dagurval/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dagurval/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dagurval/subscriptions",
      "organizations_url": "https://api.github.com/users/dagurval/orgs",
      "repos_url": "https://api.github.com/users/dagurval/repos",
      "events_url": "https://api.github.com/users/dagurval/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dagurval/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dagurval",
      "id": 92707,
      "node_id": "MDQ6VXNlcjkyNzA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/92707?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dagurval",
      "html_url": "https://github.com/dagurval",
      "followers_url": "https://api.github.com/users/dagurval/followers",
      "following_url": "https://api.github.com/users/dagurval/following{/other_user}",
      "gists_url": "https://api.github.com/users/dagurval/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dagurval/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dagurval/subscriptions",
      "organizations_url": "https://api.github.com/users/dagurval/orgs",
      "repos_url": "https://api.github.com/users/dagurval/repos",
      "events_url": "https://api.github.com/users/dagurval/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dagurval/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b225010a808d475cbb53aeed484295f8dc8751c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b225010a808d475cbb53aeed484295f8dc8751c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b225010a808d475cbb53aeed484295f8dc8751c4"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "38c709cf276b5a340e16311d5a7c534f18c9bab8",
        "filename": "test/functional/p2p_compactblocks.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6db187778e5881e66135c1435e21d541b06b04d8/test/functional/p2p_compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6db187778e5881e66135c1435e21d541b06b04d8/test/functional/p2p_compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks.py?ref=6db187778e5881e66135c1435e21d541b06b04d8",
        "patch": "@@ -882,8 +882,12 @@ def run_test(self):\n         # node1 will not download blocks from node0.\n         self.log.info(\"Syncing nodes...\")\n         assert(self.nodes[0].getbestblockhash() != self.nodes[1].getbestblockhash())\n-        while (self.nodes[0].getblockcount() > self.nodes[1].getblockcount()):\n-            block_hash = self.nodes[0].getblockhash(self.nodes[1].getblockcount()+1)\n+        while True:\n+            node0_tip = self.nodes[0].getblockcount()\n+            node1_tip = self.nodes[1].getblockcount()\n+            if node1_tip >= node0_tip:\n+                break\n+            block_hash = self.nodes[0].getblockhash(node1_tip + 1)\n             self.nodes[1].submitblock(self.nodes[0].getblock(block_hash, False))\n         assert_equal(self.nodes[0].getbestblockhash(), self.nodes[1].getbestblockhash())\n "
      }
    ]
  }
]