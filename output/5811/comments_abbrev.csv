evoskuil,2015-02-21T01:33:25Z,"@theuni That is understandable, but there is only one line affected by this in the consensus build. Maybe that could be treated as an isolated case, since it's quite trivial.\n",https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75348650,75348650,
theuni,2015-02-21T01:39:53Z,"@evoskuil if anything, as long as we're counting on that behavior, the change should be more like:\n\n```\n#ifdef NDEBUG\n#error this is unsupported and very unwise.\n#endif\n```\n",https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75349031,75349031,
theuni,2015-02-21T01:47:54Z,"I suspect that the crashes here are due to some wonky var shadowing issues in serialization. Assuming that's the case, those will need to be addressed before cleaning up unused vars.\n",https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75349445,75349445,
evoskuil,2015-02-21T06:19:26Z,"@theuni In the interest of resolving the other issues, I took up your suggestion and removed the sections of unsupported code: `NDEBUG` and `USE_SECP256K1`.\n",https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75358386,75358386,
luke-jr,2015-02-21T06:26:56Z,Not sure the NDEBUG should be removed. At least it compiles (unlike libsecp256k1 validation).\n,https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75358607,75358607,
evoskuil,2015-02-21T09:13:03Z,Are there any objections to @luke-jr's suggestion that we retain the fix to the `NDEBUG` warning in the one instance within the consensus code?\n,https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75363228,75363228,
gmaxwell,2015-02-24T05:36:33Z,Verification with libsecp256k1 is not supported at this time. I'm very concerned that more or less intended to be cosmetic changes believed to not effect execution have (above) broken consensus several times. Please take a step back here.\n,https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75702586,75702586,
evoskuil,2015-02-24T06:00:28Z,@gmaxwell The discussion on the issues with secp256k1 above resulted in the conditional incorporation that library being _removed_ in this pull request.\n\nI'm not sure what you mean by asking me to take a step back. Should I withdraw my pull request because it wasn't initially perfect? I'd be happy to do so if someone else would kindly fix the warnings and breaks.\n,https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75704329,75704329,
gmaxwell,2015-02-24T06:19:18Z,"I'm not directing a specific action there. My comment there was to point out that your changes were dangerous and you should probably reconsider your approach, and try to understand the root cause of the prior errors. Review cannot catch all errors, and if you continue to iterate against review and CI you will eventually get something that passes them but still may be broken.  E.g. You may want to",https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75705762,75705762,
evoskuil,2015-02-24T06:38:47Z,"There was discussion on the NDBUG question above. I understand how it works. I've reverted it twice to try and satisfy maintainers. I realize it's a crappy fix to a crappy problem. We use a different approach in libbitcoin but I wanted to keep it simple/local here. I really don't care how or if it's resolved.\n\nThe consensus lib is presumably for developers. As I said at the outset, it should bui",https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-75707167,75707167,
theuni,2015-02-27T21:52:42Z,"@evoskuil Some of these are still useful, I think, if you're interested in attacking them in smaller chunks.\n- The CSHA256 changes look good now that they're fixed.\n- Fixed missing include is obviously fine if it's necessary\n- The extra comma/semicolon fixes look good since iirc they're required for strict standard compliance.\n\nAlso personally I like the changes to make casts explicit, but I'",https://github.com/bitcoin/bitcoin/pull/5811#issuecomment-76478756,76478756,
theuni,2015-02-21T01:25:16Z,whoops.\n,https://github.com/bitcoin/bitcoin/pull/5811#discussion_r25116995,25116995,src/serialize.h
evoskuil,2015-02-21T01:40:22Z,"I missed this in my review before writing up my comments. This is a behavior change I meant to discuss before pushing. It doesn't factor in to the consensus call, and appears to be in error.  I would appreciate it if someone with more background would comment before I pull this out of the pull request.\n",https://github.com/bitcoin/bitcoin/pull/5811#discussion_r25117422,25117422,src/pubkey.cpp
theuni,2015-02-21T01:42:41Z,"This code (everything in #ifdef USE_SECP256k1) is currently unused, and should just be removed until it's actually supported.\n",https://github.com/bitcoin/bitcoin/pull/5811#discussion_r25117477,25117477,src/pubkey.cpp
