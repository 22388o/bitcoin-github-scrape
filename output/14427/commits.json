[
  {
    "sha": "6ca88a67094c83d1f8eca8a4f5c4245715800e15",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2E4OGE2NzA5NGM4M2QxZjhlY2E4YTRmNWM0MjQ1NzE1ODAwZTE1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2018-10-04T11:39:08Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2018-10-07T17:05:44Z"
      },
      "message": "Add config file docs to '-help' messages\n\nThis adds a suitable user documentation about configuration file.\n\nThe `bitcoin-qt -version` output formatting has been fixed as well.",
      "tree": {
        "sha": "320cfce8f899628713454b1d2e28cc5a1132c070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/320cfce8f899628713454b1d2e28cc5a1132c070"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ca88a67094c83d1f8eca8a4f5c4245715800e15",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAlu6PO8ACgkQQQEIES5+\nqB/OihAAqQGSvHHHnfaAmt03nv0oNScWhfLZ1QDrNM4xZKS4Ew/tAnuq2zrJXNvp\napEfhGC7DpuUuZ/34hRyoTGB4wWtZ4TxhFlMp0ZLzlibePCSbM7iLr4+WG6CoIMO\nk7jChGo8hgIZnLt81F1N+2pSOAitXqNlFuzq/WHMPVbUQhEguqJCAEsayBK3/Cpy\ntSMxYteRJ0TG60rOx2sgsEvEik9eEJvncEiQm1jd4BWg7V4A/EuIHfBUyCwOq3gX\nR5CajxtBw5WwxYXUSyzqJWRbTg05Z3fZUnwX7oLad9nqMJBfQYJci8GjaLhmiefC\niUTrbZbc+qsTyOBDjs4OwNx5jSHUdmC12E1Sd2FlJOGedYdTYhX27oKoLlxeqMvs\nk4H6VWc2BNkgM8YoUJd5E8i46iYFv7poDTVILJTQX9XRk9tjAciqATFZQ5pf6tJu\nVTCZOTl03wr38xUeaWn0U+4YiqqP1se3L/dyUk7WlzGgYfD4HX28wjZtSh0yri9V\nc8CC57R8E+qoaAvkq+5ExECv6acP5SuKW7WHgpgEzniTmuTh6o8Z2zIDSl+JPIZx\na/vEpmrQdLLQiQUE7t/WhJlyqONxTvZdsYOSHC3cHLsKefnU2Pu5XMSHsfjRV5sr\nedAIO8KQ4CHh3Ll27ilTSeaMbuc26V1ybtugJ9dnAv/Q/ZI2zgc=\n=+L6T\n-----END PGP SIGNATURE-----",
        "payload": "tree 320cfce8f899628713454b1d2e28cc5a1132c070\nparent 4b4e9486af9a9b46997ebb579c58bf8d5f83a276\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1538653148 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1538931944 +0300\n\nAdd config file docs to '-help' messages\n\nThis adds a suitable user documentation about configuration file.\n\nThe `bitcoin-qt -version` output formatting has been fixed as well.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ca88a67094c83d1f8eca8a4f5c4245715800e15",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ca88a67094c83d1f8eca8a4f5c4245715800e15",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ca88a67094c83d1f8eca8a4f5c4245715800e15/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b4e9486af9a9b46997ebb579c58bf8d5f83a276",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b4e9486af9a9b46997ebb579c58bf8d5f83a276",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b4e9486af9a9b46997ebb579c58bf8d5f83a276"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 33,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3bcb270dff391c83a31fc6aedfefa6ae1cb180f1",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ca88a67094c83d1f8eca8a4f5c4245715800e15/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ca88a67094c83d1f8eca8a4f5c4245715800e15/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=6ca88a67094c83d1f8eca8a4f5c4245715800e15",
        "patch": "@@ -77,12 +77,13 @@ static bool AppInit(int argc, char* argv[])\n \n         if (gArgs.IsArgSet(\"-version\"))\n         {\n-            strUsage += FormatParagraph(LicenseInfo());\n+            strUsage += FormatParagraph(LicenseInfo()) + \"\\n\";\n         }\n         else\n         {\n             strUsage += \"\\nUsage:  bitcoind [options]                     Start \" PACKAGE_NAME \" Daemon\\n\";\n             strUsage += \"\\n\" + gArgs.GetHelpMessage();\n+            strUsage += \"\\n\" + FormatParagraph(ConfigHelp(\"bitcoind\")) + \"\\n\";\n         }\n \n         fprintf(stdout, \"%s\", strUsage.c_str());"
      },
      {
        "sha": "0f2d6f3a74b9708506445602752fce155c861a20",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ca88a67094c83d1f8eca8a4f5c4245715800e15/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ca88a67094c83d1f8eca8a4f5c4245715800e15/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6ca88a67094c83d1f8eca8a4f5c4245715800e15",
        "patch": "@@ -528,6 +528,22 @@ std::string LicenseInfo()\n            \"\\n\";\n }\n \n+std::string ConfigHelp(const std::string& strBitcoinClient)\n+{\n+    return strprintf(_(\"All command-line options (except for '%s') may be specified in a configuration file, and all configuration file options may also be specified on the command line. \"\n+                       \"Command-line options override values set in the configuration file.\"),\n+               \"-conf\") +\n+           \"\\n\" +\n+           \"\\n\" +\n+           strprintf(_(\"The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '%s' character.\"), \"#\") +\n+           \"\\n\" +\n+           \"\\n\" +\n+           strprintf(_(\"The configuration file is not automatically created; you can create it using your favorite plain-text editor. \"\n+                       \"By default, %s will look for a file named '%s' in the %s data directory, but both the data directory and the configuration file path may be changed using the '%s' and '%s' command-line arguments.\"),\n+               strBitcoinClient, BITCOIN_CONF_FILENAME, PACKAGE_NAME, \"-datadir\", \"-conf\") +\n+           \"\\n\";\n+}\n+\n static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex)\n {\n     if (initialSync || !pBlockIndex)"
      },
      {
        "sha": "458114f7abbbb963999af490f7cc8c929a6e3aa2",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ca88a67094c83d1f8eca8a4f5c4245715800e15/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ca88a67094c83d1f8eca8a4f5c4245715800e15/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=6ca88a67094c83d1f8eca8a4f5c4245715800e15",
        "patch": "@@ -64,4 +64,7 @@ void SetupServerArgs();\n /** Returns licensing information (for -version) */\n std::string LicenseInfo();\n \n+/** Returns configuration file help (for -help) */\n+std::string ConfigHelp(const std::string& strBitcoinClient);\n+\n #endif // BITCOIN_INIT_H"
      },
      {
        "sha": "aca87216f77bded9d896eb3bb1f03b705fb5829a",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ca88a67094c83d1f8eca8a4f5c4245715800e15/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ca88a67094c83d1f8eca8a4f5c4245715800e15/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=6ca88a67094c83d1f8eca8a4f5c4245715800e15",
        "patch": "@@ -21,6 +21,7 @@\n #include <init.h>\n #include <interfaces/node.h>\n #include <util.h>\n+#include <utilstrencodings.h>\n \n #include <stdio.h>\n \n@@ -52,9 +53,9 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n     {\n         setWindowTitle(tr(\"About %1\").arg(tr(PACKAGE_NAME)));\n \n+        std::string licenseInfo = LicenseInfo();\n         /// HTML-format the license message from the core\n-        QString licenseInfo = QString::fromStdString(LicenseInfo());\n-        QString licenseInfoHTML = licenseInfo;\n+        QString licenseInfoHTML = QString::fromStdString(LicenseInfo());\n         // Make URLs clickable\n         QRegExp uri(\"<(.*)>\", Qt::CaseSensitive, QRegExp::RegExp2);\n         uri.setMinimal(true); // use non-greedy matching\n@@ -64,7 +65,7 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n \n         ui->aboutMessage->setTextFormat(Qt::RichText);\n         ui->scrollArea->setVerticalScrollBarPolicy(Qt::ScrollBarAsNeeded);\n-        text = version + \"\\n\" + licenseInfo;\n+        text = version + \"\\n\" + QString::fromStdString(FormatParagraph(licenseInfo));\n         ui->aboutMessage->setText(version + \"<br><br>\" + licenseInfoHTML);\n         ui->aboutMessage->setWordWrap(true);\n         ui->helpMessage->setVisible(false);\n@@ -78,8 +79,9 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n         cursor.insertBlock();\n \n         std::string strUsage = gArgs.GetHelpMessage();\n+        std::string configHelp = ConfigHelp(\"bitcoin-qt\");\n         QString coreOptions = QString::fromStdString(strUsage);\n-        text = version + \"\\n\\n\" + header + \"\\n\" + coreOptions;\n+        text = version + \"\\n\\n\" + header + \"\\n\" + coreOptions + \"\\n\" + QString::fromStdString(FormatParagraph(configHelp));\n \n         QTextTableFormat tf;\n         tf.setBorderStyle(QTextFrameFormat::BorderStyle_None);\n@@ -112,6 +114,12 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n             }\n         }\n \n+        cursor.movePosition(QTextCursor::End);\n+        cursor.insertBlock();\n+        cursor.insertBlock();\n+        cursor.insertBlock();\n+        cursor.insertText(QString::fromStdString(configHelp));\n+\n         ui->helpMessage->moveCursor(QTextCursor::Start);\n         ui->scrollArea->setVisible(false);\n         ui->aboutLogo->setVisible(false);"
      }
    ]
  }
]