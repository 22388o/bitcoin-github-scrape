[
  {
    "sha": "ca78b4df1914790900c76a2885daf7ce3df1026e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTc4YjRkZjE5MTQ3OTA5MDBjNzZhMjg4NWRhZjdjZTNkZjEwMjZl",
    "commit": {
      "author": {
        "name": "Robert Spigler",
        "email": "RobertSpigler@ProtonMail.ch",
        "date": "2021-05-01T23:42:36Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-05-01T23:42:36Z"
      },
      "message": "doc: Add historical release notes for 0.21.1",
      "tree": {
        "sha": "eb20c8c8dd5cf7b930bd77877100673f912bf91d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb20c8c8dd5cf7b930bd77877100673f912bf91d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca78b4df1914790900c76a2885daf7ce3df1026e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgjedsCRBK7hj4Ov3rIwAAvYIIABPMyb2mikgYOQRd7nUB9ray\nOOXC6yWfvLXGGTvMvj+BkugpKDmuPAQujKdUS9ujevXxNlJ+ipOOVqO2A2fgxpse\n6/56nwb3fYbuGAEyE4BQ7MTPu87gtGy0H4pXtXR8xhWec/SIsRX2EG5nPU2qkxFP\nF+WgmwJB/RjbWI9mEbPie5wpN9wqK7Fl1RCRpW7zwzeusSX5WMnRE86zL/hzjS8B\nG8SM5LmSPwIonnZsjs4VGr/sBXp+EAqx4aQwgAWjxUfY8I9zsU49QDiURb3AmJn8\nZzLy2RHJn6jWgKH9Ph8XLsyu1lvHPxd6IRDYV6//eNL4aFjXFq1sfdbBLxQx96M=\n=z9+h\n-----END PGP SIGNATURE-----\n",
        "payload": "tree eb20c8c8dd5cf7b930bd77877100673f912bf91d\nparent d22e7ee93313b13365bd14a5fffeb055cff4dcd2\nauthor Robert Spigler <RobertSpigler@ProtonMail.ch> 1619912556 -0400\ncommitter GitHub <noreply@github.com> 1619912556 -0400\n\ndoc: Add historical release notes for 0.21.1"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca78b4df1914790900c76a2885daf7ce3df1026e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca78b4df1914790900c76a2885daf7ce3df1026e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca78b4df1914790900c76a2885daf7ce3df1026e/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d22e7ee93313b13365bd14a5fffeb055cff4dcd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d22e7ee93313b13365bd14a5fffeb055cff4dcd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d22e7ee93313b13365bd14a5fffeb055cff4dcd2"
      }
    ],
    "stats": {
      "total": 163,
      "additions": 163,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dc32ad55410c287429731c14cb58765fa5990cb3",
        "filename": "doc/release-notes/release-notes-0.21.1.md",
        "status": "added",
        "additions": 163,
        "deletions": 0,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca78b4df1914790900c76a2885daf7ce3df1026e/doc/release-notes/release-notes-0.21.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca78b4df1914790900c76a2885daf7ce3df1026e/doc/release-notes/release-notes-0.21.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.21.1.md?ref=ca78b4df1914790900c76a2885daf7ce3df1026e",
        "patch": "@@ -0,0 +1,163 @@\n+0.21.1 Release Notes\n+====================\n+\n+Bitcoin Core version 0.21.1 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.21.1/>\n+\n+This minor release includes various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 10.12+, and Windows 7 and newer. Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them. It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no\n+longer supported. Additionally, Bitcoin Core does not yet change appearance\n+when macOS \"dark mode\" is activated.\n+\n+Notable changes\n+===============\n+\n+Taproot Soft Fork\n+-----------------\n+\n+Included in this release are the mainnet and testnet activation parameters for the taproot soft fork (BIP341) which also adds support for schnorr signatures (BIP340) and tapscript (BIP342).\n+\n+If activated, these improvements will allow users of single-signature scripts, multisignature scripts, and complex contracts to all use identical-appearing commitments that enhance their privacy and the fungibility of all bitcoins. Spenders will enjoy lower fees and the ability to resolve many multisig scripts and complex contracts with the same efficiency, low fees, and large anonymity set as single-sig users. Taproot and schnorr also include efficiency improvements for full nodes such as the ability to batch signature verification. Together, the improvements lay the groundwork for future potential upgrades that may improve efficiency, privacy, and fungibility further.\n+\n+Activation for taproot is being managed using a variation of BIP9 versionbits called Speedy Trial (described in BIP341). Taproot\u2019s versionbit is bit 2, and nodes will begin tracking which blocks signal support for taproot at the beginning of the first retarget period after taproot\u2019s start date of 24 April 2021. If 90% of blocks within a 2,016-block retarget period (about two weeks) signal support for taproot prior to the first retarget period beginning after the time of 11 August 2021, the soft fork will be locked in, and taproot will then be active as of block 709632 (expected in early or mid November).\n+\n+Should taproot not be locked in via Speedy Trial activation, it is expected that a follow-up activation mechanism will be deployed, with changes to address the reasons the Speedy Trial method failed.\n+\n+This release includes the ability to pay taproot addresses, although payments to such addresses are not secure until taproot activates. It also includes the ability to relay and mine taproot transactions after activation. Beyond those two basic capabilities, this release does not include any code that allows anyone to directly use taproot. The addition of taproot-related features to Bitcoin Core\u2019s wallet is expected in later releases once taproot activation is assured.\n+\n+All users, businesses, and miners are encouraged to upgrade to this release (or a subsequent compatible release) unless they object to activation of taproot. If taproot is locked in, then upgrading before block 709632 is highly recommended to help enforce taproot\u2019s new rules and to avoid the unlikely case of seeing falsely confirmed transactions.\n+\n+Miners who want to activate Taproot should preferably use this release to control their signaling. The getblocktemplate RPC results will automatically be updated to signal once the appropriate start has been reached and continue signaling until the timeout occurs or taproot activates. Alternatively, miners may manually start signaling on bit 2 at any time; if taproot activates, they will need to ensure they update their nodes before block 709632 or non-upgraded nodes could cause them to mine on an invalid chain. See the versionbits FAQ for details.\n+\n+For more information about taproot, please see the following resources:\n+\n+- Technical specifications\n+  - [BIP340 Schnorr signatures for secp256k1](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki) \n+  - [BIP341 Taproot: SegWit version 1 spending rules](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)\n+  - [BIP342 Validation of Taproot scripts](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki)\n+\n+- Popular articles;\n+  - [Taproot Is Coming: What It Is, and How It Will Benefit Bitcoin](https://bitcoinmagazine.com/technical/taproot-coming-what-it-and-how-it-will-benefit-bitcoin)\n+  - [What do Schnorr Signatures Mean for Bitcoin?](https://academy.binance.com/en/articles/what-do-schnorr-signatures-mean-for-bitcoin)\n+  - [The Schnorr Signature & Taproot Softfork Proposal](https://blog.bitmex.com/the-schnorr-signature-taproot-softfork-proposal/)\n+\n+- Development history overview\n+  - [Taproot](https://bitcoinops.org/en/topics/taproot/)\n+  - [Schnorr signatures](https://bitcoinops.org/en/topics/schnorr-signatures/)\n+  - [Tapscript](https://bitcoinops.org/en/topics/tapscript/)\n+  - [Soft fork activation](https://bitcoinops.org/en/topics/soft-fork-activation/)\n+\n+- Other\n+  - [Questions and answers related to taproot](https://bitcoin.stackexchange.com/questions/tagged/taproot)\n+  - [Taproot review](https://github.com/ajtowns/taproot-review)\n+\n+Updated RPCs\n+------------\n+\n+- Due to [BIP 350](https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki)\n+  being implemented, behavior for all RPCs that accept addresses is changed when\n+  a native witness version 1 (or higher) is passed. These now require a Bech32m\n+  encoding instead of a Bech32 one, and Bech32m encoding will be used for such\n+  addresses in RPC output as well. No version 1 addresses should be created\n+  for mainnet until consensus rules are adopted that give them meaning\n+  (e.g. through [BIP 341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)).\n+  Once that happens, Bech32m is expected to be used for them, so this shouldn't\n+  affect any production systems, but may be observed on other networks where such\n+  addresses already have meaning (like signet).\n+\n+0.21.1 change log\n+=================\n+\n+### Consensus\n+- #21377 Speedy trial support for versionbits (ajtowns)\n+- #21686 Speedy trial activation parameters for Taproot (achow101)\n+\n+### P2P protocol and network code\n+- #20852 allow CSubNet of non-IP networks (vasild)\n+- #21043 Avoid UBSan warning in ProcessMessage(\u2026) (practicalswift)\n+\n+### Wallet\n+- #21166 Introduce DeferredSignatureChecker and have SignatureExtractorClass subclass it (achow101)\n+- #21083 Avoid requesting fee rates multiple times during coin selection (achow101)\n+\n+### RPC and other APIs\n+- #21201 Disallow sendtoaddress and sendmany when private keys disabled (achow101)\n+\n+### Build system\n+- #21486 link against -lsocket if required for `*ifaddrs` (fanquake)\n+- #20983 Fix MSVC build after gui#176 (hebasto)\n+\n+### Tests and QA\n+- #21380 Add fuzzing harness for versionbits (ajtowns)\n+- #20812 fuzz: Bump FuzzedDataProvider.h (MarcoFalke)\n+- #20740 fuzz: Update FuzzedDataProvider.h from upstream (LLVM) (practicalswift)\n+- #21446 Update vcpkg checkout commit (sipsorcery)\n+- #21397 fuzz: Bump FuzzedDataProvider.h (MarcoFalke)\n+- #21081 Fix the unreachable code at `feature_taproot` (brunoerg)\n+- #20562 Test that a fully signed tx given to signrawtx is unchanged (achow101)\n+- #21571 Make sure non-IP peers get discouraged and disconnected (vasild, MarcoFalke)\n+- #21489 fuzz: cleanups for versionbits fuzzer (ajtowns)\n+\n+### Miscellaneous\n+- #20861 BIP 350: Implement Bech32m and use it for v1+ segwit addresses (sipa)\n+\n+### Documentation\n+- #21384 add signet to bitcoin.conf documentation (jonatack)\n+- #21342 Remove outdated comment (hebasto)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Aaron Clauson\n+- Andrew Chow\n+- Anthony Towns\n+- Bruno Garcia\n+- Fabian Jahr\n+- fanquake\n+- Hennadii Stepanov\n+- Jon Atack\n+- Luke Dashjr\n+- MarcoFalke\n+- Pieter Wuille\n+- practicalswift\n+- randymcmillan\n+- Sjors Provoost\n+- Vasil Dimov\n+- W. J. van der Laan\n+\n+As well as to everyone that helped with translations on\n+[Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      }
    ]
  }
]