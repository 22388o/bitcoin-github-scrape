[
  {
    "sha": "75ef87dd936cd9c84d9a9fd3afce6198409636c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NWVmODdkZDkzNmNkOWM4NGQ5YTlmZDNhZmNlNjE5ODQwOTYzNmM0",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-10-28T20:20:21Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-11-04T04:25:50Z"
      },
      "message": "process received messages one at a time without sleeping between messages",
      "tree": {
        "sha": "6d08ffa5ec8ae6e5efd6953c6eed3d154d26155c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d08ffa5ec8ae6e5efd6953c6eed3d154d26155c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75ef87dd936cd9c84d9a9fd3afce6198409636c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ef87dd936cd9c84d9a9fd3afce6198409636c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75ef87dd936cd9c84d9a9fd3afce6198409636c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ef87dd936cd9c84d9a9fd3afce6198409636c4/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a95a1c06b1823d13e8b685c6b18696ead1d17422",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a95a1c06b1823d13e8b685c6b18696ead1d17422",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a95a1c06b1823d13e8b685c6b18696ead1d17422"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 25,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4dc2e5c6ffd9ee7f285abed56432a094e3274b68",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ef87dd936cd9c84d9a9fd3afce6198409636c4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ef87dd936cd9c84d9a9fd3afce6198409636c4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=75ef87dd936cd9c84d9a9fd3afce6198409636c4",
        "patch": "@@ -3155,6 +3155,9 @@ void static ProcessGetData(CNode* pfrom)\n \n             // Track requests for our stuff.\n             g_signals.Inventory(inv.hash);\n+            \n+            if (inv.type == MSG_BLOCK || inv.type == MSG_FILTERED_BLOCK)\n+                break;\n         }\n     }\n \n@@ -3841,7 +3844,10 @@ bool ProcessMessages(CNode* pfrom)\n \n     if (!pfrom->vRecvGetData.empty())\n         ProcessGetData(pfrom);\n-\n+    \n+    // this maintains the order of responses\n+    if (!pfrom->vRecvGetData.empty()) return fOk;\n+    \n     std::deque<CNetMessage>::iterator it = pfrom->vRecvMsg.begin();\n     while (!pfrom->fDisconnect && it != pfrom->vRecvMsg.end()) {\n         // Don't bother if send buffer is too full to respond anyway\n@@ -3929,6 +3935,8 @@ bool ProcessMessages(CNode* pfrom)\n \n         if (!fRet)\n             LogPrintf(\"ProcessMessage(%s, %u bytes) FAILED\\n\", strCommand.c_str(), nMessageSize);\n+        \n+        break;\n     }\n \n     // In case the connection got shut down, its receive buffer was wiped"
      },
      {
        "sha": "8c0ada8f92dcedbcbd12813a06dea62fa335a5b4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ef87dd936cd9c84d9a9fd3afce6198409636c4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ef87dd936cd9c84d9a9fd3afce6198409636c4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=75ef87dd936cd9c84d9a9fd3afce6198409636c4",
        "patch": "@@ -1540,6 +1540,9 @@ void ThreadMessageHandler()\n         CNode* pnodeTrickle = NULL;\n         if (!vNodesCopy.empty())\n             pnodeTrickle = vNodesCopy[GetRand(vNodesCopy.size())];\n+        \n+        bool fSleep = true;\n+        \n         BOOST_FOREACH(CNode* pnode, vNodesCopy)\n         {\n             if (pnode->fDisconnect)\n@@ -1549,8 +1552,18 @@ void ThreadMessageHandler()\n             {\n                 TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n                 if (lockRecv)\n+                {\n                     if (!g_signals.ProcessMessages(pnode))\n                         pnode->CloseSocketDisconnect();\n+                    \n+                    if (pnode->nSendSize < SendBufferSize())\n+                    {\n+                        if (!pnode->vRecvGetData.empty() || (!pnode->vRecvMsg.empty() && pnode->vRecvMsg[0].complete()))\n+                        {\n+                            fSleep = false;\n+                        }\n+                    }\n+                }\n             }\n             boost::this_thread::interruption_point();\n \n@@ -1568,8 +1581,9 @@ void ThreadMessageHandler()\n             BOOST_FOREACH(CNode* pnode, vNodesCopy)\n                 pnode->Release();\n         }\n-\n-        MilliSleep(100);\n+        \n+        if (fSleep)\n+            MilliSleep(100);\n     }\n }\n "
      }
    ]
  }
]