[
  {
    "sha": "e832ab7754732af7fd46ad7f16eef973e238c357",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODMyYWI3NzU0NzMyYWY3ZmQ0NmFkN2YxNmVlZjk3M2UyMzhjMzU3",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2014-07-07T07:34:43Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2014-07-07T07:41:33Z"
      },
      "message": "Rename SendMoneyToDestination to SendMoney.\n\nGet rid of SendMoney and replace it by the functionality of\nSendMoneyToDestination.  This cleans up the code, since only\nSendMoneyToDestination was actually used (SendMoney internally from this\nroutine).",
      "tree": {
        "sha": "b3d38ef8d312cf2404f2952091a104b3de0534de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3d38ef8d312cf2404f2952091a104b3de0534de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e832ab7754732af7fd46ad7f16eef973e238c357",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e832ab7754732af7fd46ad7f16eef973e238c357",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e832ab7754732af7fd46ad7f16eef973e238c357",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e832ab7754732af7fd46ad7f16eef973e238c357/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ed2315e86621cf547fbc3649fcbe39c793a7eb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed2315e86621cf547fbc3649fcbe39c793a7eb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed2315e86621cf547fbc3649fcbe39c793a7eb3"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 19,
      "deletions": 25
    },
    "files": [
      {
        "sha": "639b21f120a0d3204dc915d6aee36e522c54559a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e832ab7754732af7fd46ad7f16eef973e238c357/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e832ab7754732af7fd46ad7f16eef973e238c357/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=e832ab7754732af7fd46ad7f16eef973e238c357",
        "patch": "@@ -346,7 +346,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n \n     EnsureWalletIsUnlocked();\n \n-    string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n+    string strError = pwalletMain->SendMoney(address.Get(), nAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n@@ -786,7 +786,7 @@ Value sendfrom(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n     // Send\n-    string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n+    string strError = pwalletMain->SendMoney(address.Get(), nAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n "
      },
      {
        "sha": "ed1b178600fd2f90f37c3e3ef09829fce541364d",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 21,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e832ab7754732af7fd46ad7f16eef973e238c357/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e832ab7754732af7fd46ad7f16eef973e238c357/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=e832ab7754732af7fd46ad7f16eef973e238c357",
        "patch": "@@ -1487,26 +1487,36 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n \n \n \n-string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew)\n+string CWallet::SendMoney(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew)\n {\n-    CReserveKey reservekey(this);\n-    int64_t nFeeRequired;\n+    // Check amount\n+    if (nValue <= 0)\n+        return _(\"Invalid amount\");\n+    if (nValue > GetBalance())\n+        return _(\"Insufficient funds\");\n \n+    string strError;\n     if (IsLocked())\n     {\n-        string strError = _(\"Error: Wallet locked, unable to create transaction!\");\n+        strError = _(\"Error: Wallet locked, unable to create transaction!\");\n         LogPrintf(\"SendMoney() : %s\", strError);\n         return strError;\n     }\n-    string strError;\n+\n+    // Parse Bitcoin address\n+    CScript scriptPubKey;\n+    scriptPubKey.SetDestination(address);\n+\n+    // Create and send the transaction\n+    CReserveKey reservekey(this);\n+    int64_t nFeeRequired;\n     if (!CreateTransaction(scriptPubKey, nValue, wtxNew, reservekey, nFeeRequired, strError))\n     {\n         if (nValue + nFeeRequired > GetBalance())\n             strError = strprintf(_(\"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!\"), FormatMoney(nFeeRequired));\n         LogPrintf(\"SendMoney() : %s\\n\", strError);\n         return strError;\n     }\n-\n     if (!CommitTransaction(wtxNew, reservekey))\n         return _(\"Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\");\n \n@@ -1515,21 +1525,6 @@ string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNe\n \n \n \n-string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nValue, CWalletTx& wtxNew)\n-{\n-    // Check amount\n-    if (nValue <= 0)\n-        return _(\"Invalid amount\");\n-    if (nValue > GetBalance())\n-        return _(\"Insufficient funds\");\n-\n-    // Parse Bitcoin address\n-    CScript scriptPubKey;\n-    scriptPubKey.SetDestination(address);\n-\n-    return SendMoney(scriptPubKey, nValue, wtxNew);\n-}\n-\n int64_t CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool)\n {\n     // payTxFee is user-set \"I want to pay this much\""
      },
      {
        "sha": "62f13e4630f0fcf3743ca52471a0122b0aebccd4",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e832ab7754732af7fd46ad7f16eef973e238c357/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e832ab7754732af7fd46ad7f16eef973e238c357/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=e832ab7754732af7fd46ad7f16eef973e238c357",
        "patch": "@@ -265,8 +265,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     bool CreateTransaction(CScript scriptPubKey, int64_t nValue,\n                            CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n-    std::string SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew);\n-    std::string SendMoneyToDestination(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew);\n+    std::string SendMoney(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew);\n \n     static CFeeRate minTxFee;\n     static int64_t GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool);"
      }
    ]
  }
]