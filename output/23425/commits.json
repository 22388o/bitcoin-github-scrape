[
  {
    "sha": "350f3579c30318688f24aa4c87e0d3413d1dd387",
    "node_id": "C_kwDOABII59oAKDM1MGYzNTc5YzMwMzE4Njg4ZjI0YWE0Yzg3ZTBkMzQxM2QxZGQzODc",
    "commit": {
      "author": {
        "name": "nnihsotas",
        "email": "93150471+nnihsotas@users.noreply.github.com",
        "date": "2021-11-03T01:41:09Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-11-03T01:41:09Z"
      },
      "message": "Delete .cirrus.yml",
      "tree": {
        "sha": "450c50ff5eca3d0d54e2a2bae1450b86fe2d5a47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/450c50ff5eca3d0d54e2a2bae1450b86fe2d5a47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/350f3579c30318688f24aa4c87e0d3413d1dd387",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhgei1CRBK7hj4Ov3rIwAAK7wIACxDrM6fHrfKfPVnfIZtbcib\nUzjmEE9Sv/RRdviRLuIupb3iUoq5FnQ0w3mO8uGnTrXHnZ6V4W635cBMUaznJQ2t\nxYKe2m6fPgHS9QlRg4OZSKkkbA9+huNHIw2Yrfu+05zeGGdgjIVpvtBGSn4NisHP\nFumdibviKtwGIRQP1Q3SIFas0H35uhqPcApmXprpR4/c+9Bbf7i2+VIWsIcTGqcl\nLMBo+IOnkBKyNy1H+Q5EKzXVGMB2M0oNzx/swhLfEcXU4ZDfMEcyjPee3+jUjr6m\nXmROVy/QIHZ91HsgdkR4ajKobuI3nUsi6cJoPL7rvblG1ZGX94x9yOc82bduFQo=\n=9gsT\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 450c50ff5eca3d0d54e2a2bae1450b86fe2d5a47\nparent 3c4729a515d85e3cfcd66220c849857c712597e4\nauthor nnihsotas <93150471+nnihsotas@users.noreply.github.com> 1635903669 +0000\ncommitter GitHub <noreply@github.com> 1635903669 +0000\n\nDelete .cirrus.yml"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/350f3579c30318688f24aa4c87e0d3413d1dd387",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/350f3579c30318688f24aa4c87e0d3413d1dd387",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/350f3579c30318688f24aa4c87e0d3413d1dd387/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c4729a515d85e3cfcd66220c849857c712597e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c4729a515d85e3cfcd66220c849857c712597e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c4729a515d85e3cfcd66220c849857c712597e4"
      }
    ],
    "stats": {
      "total": 310,
      "additions": 0,
      "deletions": 310
    },
    "files": [
      {
        "sha": "f7962e951c2f13635857ed644b8f50c6b6f09ed3",
        "filename": ".cirrus.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 310,
        "changes": 310,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c4729a515d85e3cfcd66220c849857c712597e4/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c4729a515d85e3cfcd66220c849857c712597e4/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=3c4729a515d85e3cfcd66220c849857c712597e4",
        "patch": "@@ -1,310 +0,0 @@\n-env:  # Global defaults\n-  PACKAGE_MANAGER_INSTALL: \"apt-get update && apt-get install -y\"\n-  MAKEJOBS: \"-j4\"\n-  TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n-  CCACHE_SIZE: \"200M\"\n-  CCACHE_DIR: \"/tmp/ccache_dir\"\n-  CCACHE_NOHASHDIR: \"1\"  # Debug info might contain a stale path if the build dir changes, but this is fine\n-\n-cirrus_ephemeral_worker_template_env: &CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-  DANGER_RUN_CI_ON_HOST: \"1\"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system\n-\n-persistent_worker_template_env: &PERSISTENT_WORKER_TEMPLATE_ENV\n-  RESTART_CI_DOCKER_BEFORE_RUN: \"1\"\n-\n-persistent_worker_template: &PERSISTENT_WORKER_TEMPLATE\n-  persistent_worker: {}  # https://cirrus-ci.org/guide/persistent-workers/\n-\n-# https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks\n-filter_template: &FILTER_TEMPLATE\n-  skip: $CIRRUS_REPO_FULL_NAME == \"bitcoin-core/gui\" && $CIRRUS_PR == \"\"  # No need to run on the read-only mirror, unless it is a PR. https://cirrus-ci.org/guide/writing-tasks/#conditional-task-execution\n-  stateful: false  # https://cirrus-ci.org/guide/writing-tasks/#stateful-tasks\n-\n-base_template: &BASE_TEMPLATE\n-  << : *FILTER_TEMPLATE\n-  merge_base_script:\n-    # Unconditionally install git (used in fingerprint_script) and set the\n-    # default git author name (used in verify-commits.py)\n-    - bash -c \"$PACKAGE_MANAGER_INSTALL git\"\n-    - git config --global user.email \"ci@ci.ci\"\n-    - git config --global user.name \"ci\"\n-    - if [ \"$CIRRUS_PR\" = \"\" ]; then exit 0; fi\n-    - git fetch $CIRRUS_REPO_CLONE_URL $CIRRUS_BASE_BRANCH\n-    - git merge FETCH_HEAD  # Merge base to detect silent merge conflicts\n-\n-main_template: &MAIN_TEMPLATE\n-  timeout_in: 120m  # https://cirrus-ci.org/faq/#instance-timed-out\n-  container:\n-    # https://cirrus-ci.org/faq/#are-there-any-limits\n-    # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel\n-    cpu: 2\n-    memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers\n-  ccache_cache:\n-    folder: \"/tmp/ccache_dir\"\n-  depends_built_cache:\n-    folder: \"depends/built\"\n-    fingerprint_script: echo $CIRRUS_TASK_NAME $(git rev-list -1 HEAD ./depends)\n-  ci_script:\n-    - ./ci/test_run_all.sh\n-\n-global_task_template: &GLOBAL_TASK_TEMPLATE\n-  << : *BASE_TEMPLATE\n-  << : *MAIN_TEMPLATE\n-\n-depends_sdk_cache_template: &DEPENDS_SDK_CACHE_TEMPLATE\n-  depends_sdk_cache:\n-    folder: \"depends/sdk-sources\"\n-\n-compute_credits_template: &CREDITS_TEMPLATE\n-  # https://cirrus-ci.org/pricing/#compute-credits\n-  # Only use credits for pull requests to the main repo\n-  use_compute_credits: $CIRRUS_REPO_FULL_NAME == 'bitcoin/bitcoin' && $CIRRUS_PR != \"\"\n-\n-task:\n-  name: 'lint [bionic]'\n-  << : *BASE_TEMPLATE\n-  container:\n-    image: ubuntu:bionic  # For python 3.6, oldest supported version according to doc/dependencies.md\n-    cpu: 1\n-    memory: 1G\n-  # For faster CI feedback, immediately schedule the linters\n-  << : *CREDITS_TEMPLATE\n-  lint_script:\n-    - ./ci/lint_run_all.sh\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-\n-task:\n-  name: \"Win64 native [msvc]\"\n-  << : *FILTER_TEMPLATE\n-  windows_container:\n-    cpu: 4\n-    memory: 8G\n-    image: cirrusci/windowsservercore:visualstudio2019\n-  timeout_in: 120m\n-  env:\n-    PATH: 'C:\\jom;C:\\Python39;C:\\Python39\\Scripts;C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin;%PATH%'\n-    PYTHONUTF8: 1\n-    CI_VCPKG_TAG: '2021.05.12'\n-    VCPKG_DOWNLOADS: 'C:\\Users\\ContainerAdministrator\\AppData\\Local\\vcpkg\\downloads'\n-    VCPKG_DEFAULT_BINARY_CACHE: 'C:\\Users\\ContainerAdministrator\\AppData\\Local\\vcpkg\\archives'\n-    QT_DOWNLOAD_URL: 'https://download.qt.io/official_releases/qt/5.12/5.12.11/single/qt-everywhere-src-5.12.11.zip'\n-    QT_LOCAL_PATH: 'C:\\qt-everywhere-src-5.12.11.zip'\n-    QT_SOURCE_DIR: 'C:\\qt-everywhere-src-5.12.11'\n-    QTBASEDIR: 'C:\\Qt_static'\n-    x64_NATIVE_TOOLS: '\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat\"'\n-    IgnoreWarnIntDirInTempDetected: 'true'\n-  merge_script:\n-    - git config --global user.email \"ci@ci.ci\"\n-    - git config --global user.name \"ci\"\n-    # Windows filesystem loses the executable bit, and all of the executable\n-    # files are considered \"modified\" now. It will break the following `git merge`\n-    # command. The next two commands make git ignore this issue.\n-    - git config core.filemode false\n-    - git reset --hard\n-    - PowerShell -NoLogo -Command if ($env:CIRRUS_PR -ne $null) { git fetch $env:CIRRUS_REPO_CLONE_URL $env:CIRRUS_BASE_BRANCH; git merge FETCH_HEAD; }\n-  msvc_qt_built_cache:\n-    folder: \"%QTBASEDIR%\"\n-    reupload_on_changes: false\n-    fingerprint_script:\n-      - echo %QT_DOWNLOAD_URL%\n-      - msbuild -version\n-    populate_script:\n-      - curl -L -o C:\\jom.zip http://download.qt.io/official_releases/jom/jom.zip\n-      - mkdir C:\\jom\n-      - tar -xf C:\\jom.zip -C C:\\jom\n-      - curl -L -o %QT_LOCAL_PATH% %QT_DOWNLOAD_URL%\n-      - tar -xf %QT_LOCAL_PATH% -C C:\\\n-      - '%x64_NATIVE_TOOLS%'\n-      - cd %QT_SOURCE_DIR%\n-      - mkdir build\n-      - cd build\n-      - ..\\configure -release -silent -opensource -confirm-license -opengl desktop -no-shared -static -static-runtime -mp -qt-zlib -qt-pcre -qt-libpng -no-libjpeg -nomake examples -nomake tests -nomake tools -no-dbus -no-libudev -no-icu -no-gtk -no-opengles3 -no-angle -no-sql-sqlite -no-sql-odbc -no-sqlite -no-libudev -no-vulkan -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcanvas3d -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquickcontrols -skip qtquickcontrols2 -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebsockets -skip qtwebview -skip qtx11extras -skip qtxmlpatterns -no-openssl -no-feature-sql -no-feature-sqlmodel -prefix %QTBASEDIR%\n-      - jom\n-      - jom install\n-  vcpkg_tools_cache:\n-    folder: '%VCPKG_DOWNLOADS%\\tools'\n-    reupload_on_changes: false\n-    fingerprint_script:\n-      - echo %CI_VCPKG_TAG%\n-      - msbuild -version\n-  vcpkg_binary_cache:\n-    folder: '%VCPKG_DEFAULT_BINARY_CACHE%'\n-    reupload_on_changes: true\n-    fingerprint_script:\n-      - echo %CI_VCPKG_TAG%\n-      - msbuild -version\n-    populate_script:\n-      - mkdir %VCPKG_DEFAULT_BINARY_CACHE%\n-  install_python_script:\n-    - choco install --yes --no-progress python3 --version=3.9.6\n-    - pip install zmq\n-    - python -VV\n-  install_vcpkg_script:\n-    - cd ..\n-    - git clone --quiet https://github.com/microsoft/vcpkg.git\n-    - cd vcpkg\n-    - git -c advice.detachedHead=false checkout %CI_VCPKG_TAG%\n-    - .\\bootstrap-vcpkg -disableMetrics\n-    - echo set(VCPKG_BUILD_TYPE release) >> triplets\\x64-windows-static.cmake\n-    - .\\vcpkg integrate install\n-    - .\\vcpkg version\n-  build_script:\n-    - cd %CIRRUS_WORKING_DIR%\n-    - python build_msvc\\msvc-autogen.py\n-    - msbuild build_msvc\\bitcoin.sln -property:Configuration=Release -maxCpuCount -verbosity:minimal -noLogo\n-  unit_tests_script:\n-    - src\\test_bitcoin.exe -l test_suite\n-    - src\\bench_bitcoin.exe > NUL\n-    - python test\\util\\test_runner.py\n-    - python test\\util\\rpcauth-test.py\n-  functional_tests_script:\n-    # Increase the dynamic port range to the maximum allowed value to mitigate \"OSError: [WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted\".\n-    # See: https://docs.microsoft.com/en-us/biztalk/technical-guides/settings-that-can-be-modified-to-improve-network-performance\n-    - netsh int ipv4 set dynamicport tcp start=1025 num=64511\n-    - netsh int ipv6 set dynamicport tcp start=1025 num=64511\n-    # Exclude feature_dbcrash for now due to timeout\n-    - python test\\functional\\test_runner.py --nocleanup --ci --quiet --combinedlogslen=4000 --jobs=4 --timeout-factor=8 --failfast --extended --exclude feature_dbcrash\n-\n-task:\n-  name: 'ARM [unit tests, no functional tests] [bullseye]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  arm_container:\n-    image: debian:bullseye\n-    cpu: 2\n-    memory: 8G\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    FILE_ENV: \"./ci/test/00_setup_env_arm.sh\"\n-    QEMU_USER_CMD: \"\"  # Disable qemu and run the test natively\n-\n-task:\n-  name: 'Win64 [unit tests, no gui tests, no boost::process, no functional tests] [focal]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    FILE_ENV: \"./ci/test/00_setup_env_win64.sh\"\n-\n-task:\n-  name: '32-bit + dash [gui] [CentOS 8]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: centos:8\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    PACKAGE_MANAGER_INSTALL: \"yum install -y\"\n-    FILE_ENV: \"./ci/test/00_setup_env_i686_centos.sh\"\n-\n-task:\n-  name: '[previous releases, uses qt5 dev package and some depends packages, DEBUG] [unsigned char] [bionic]'\n-  previous_releases_cache:\n-    folder: \"releases\"\n-  << : *GLOBAL_TASK_TEMPLATE\n-  << : *PERSISTENT_WORKER_TEMPLATE\n-  env:\n-    << : *PERSISTENT_WORKER_TEMPLATE_ENV\n-    FILE_ENV: \"./ci/test/00_setup_env_native_qt5.sh\"\n-\n-task:\n-  name: '[depends, sanitizers: thread (TSan), no gui] [hirsute]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:hirsute\n-    cpu: 6  # Increase CPU and Memory to avoid timeout\n-    memory: 24G\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    MAKEJOBS: \"-j8\"\n-    FILE_ENV: \"./ci/test/00_setup_env_native_tsan.sh\"\n-\n-task:\n-  name: '[depends, sanitizers: memory (MSan)] [focal]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    FILE_ENV: \"./ci/test/00_setup_env_native_msan.sh\"\n-\n-task:\n-  name: '[no depends, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer] [hirsute]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:hirsute\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    FILE_ENV: \"./ci/test/00_setup_env_native_asan.sh\"\n-\n-task:\n-  name: '[no depends, sanitizers: fuzzer,address,undefined,integer] [focal]'\n-  only_if: $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_BASE_BRANCH == $CIRRUS_DEFAULT_BRANCH\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-    cpu: 4  # Increase CPU and memory to avoid timeout\n-    memory: 16G\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    MAKEJOBS: \"-j8\"\n-    FILE_ENV: \"./ci/test/00_setup_env_native_fuzz.sh\"\n-\n-task:\n-  name: '[multiprocess, i686, DEBUG] [focal]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-    cpu: 4\n-    memory: 16G  # The default memory is sometimes just a bit too small, so double everything\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    MAKEJOBS: \"-j8\"\n-    FILE_ENV: \"./ci/test/00_setup_env_i686_multiprocess.sh\"\n-\n-task:\n-  name: '[no wallet] [bionic]'\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:bionic\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    FILE_ENV: \"./ci/test/00_setup_env_native_nowallet.sh\"\n-\n-task:\n-  name: 'macOS 10.15 [gui, no tests] [focal]'\n-  << : *DEPENDS_SDK_CACHE_TEMPLATE\n-  << : *GLOBAL_TASK_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    FILE_ENV: \"./ci/test/00_setup_env_mac.sh\"\n-\n-task:\n-  name: 'macOS 11 native [gui] [no depends]'\n-  brew_install_script:\n-    - brew install boost libevent berkeley-db4 qt@5 miniupnpc libnatpmp ccache zeromq qrencode sqlite libtool automake pkg-config gnu-getopt\n-  << : *GLOBAL_TASK_TEMPLATE\n-  osx_instance:\n-    # Use latest image, but hardcode version to avoid silent upgrades (and breaks)\n-    image: big-sur-xcode-12.5  # https://cirrus-ci.org/guide/macOS\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    CI_USE_APT_INSTALL: \"no\"\n-    PACKAGE_MANAGER_INSTALL: \"echo\"  # Nothing to do\n-    FILE_ENV: \"./ci/test/00_setup_env_mac_host.sh\"\n-\n-task:\n-  name: 'ARM64 Android APK [focal]'\n-  << : *DEPENDS_SDK_CACHE_TEMPLATE\n-  << : *BASE_TEMPLATE\n-  depends_sources_cache:\n-    folder: \"depends/sources\"\n-    fingerprint_script: git rev-list -1 HEAD ./depends\n-  << : *MAIN_TEMPLATE\n-  container:\n-    image: ubuntu:focal\n-  env:\n-    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n-    FILE_ENV: \"./ci/test/00_setup_env_android.sh\""
      }
    ]
  }
]