[
  {
    "sha": "5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDYyZGNmOWNmYjVjMGIyNTExYzEwNjY3ZWQ0N2VjM2IzNjEwZDcy",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-01T22:40:56Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-02T13:40:51Z"
      },
      "message": "lint: Make sure we read the command line inputs using utf-8 decoding in python",
      "tree": {
        "sha": "889a75810b9d906e72597ef8ed533db2aa0ed31a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/889a75810b9d906e72597ef8ed533db2aa0ed31a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bdbd654df8ddf5945256f2ccf85feae620f6f0d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bdbd654df8ddf5945256f2ccf85feae620f6f0d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bdbd654df8ddf5945256f2ccf85feae620f6f0d5"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 20,
      "deletions": 12
    },
    "files": [
      {
        "sha": "e9481dbbcf54159b08f8a27daf4905826b03804e",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
        "patch": "@@ -27,7 +27,7 @@ def content_hash(filename):\n pngcrush = 'pngcrush'\n git = 'git'\n folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n-basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel'], universal_newlines=True).rstrip('\\n')\n+basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel'], universal_newlines=True, encoding='utf8').rstrip('\\n')\n totalSaveBytes = 0\n noHashChange = True\n \n@@ -50,7 +50,7 @@ def content_hash(filename):\n                 sys.exit(0)\n \n             #verify\n-            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT, universal_newlines=True):\n+            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT, universal_newlines=True, encoding='utf8'):\n                 print(\"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\")\n                 sys.exit(1)\n "
      },
      {
        "sha": "a2792e6e25727d4eb84304c4dfaf32b2f1efcc9d",
        "filename": "contrib/gitian-build.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
        "patch": "@@ -209,7 +209,7 @@ def main():\n         subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n         os.chdir('../gitian-builder/inputs/bitcoin')\n         subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n-        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True).strip()\n+        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True, encoding='utf8').strip()\n         args.version = 'pull-' + args.version\n     print(args.commit)\n     subprocess.check_call(['git', 'fetch'])"
      },
      {
        "sha": "544f4dc48d2cf0e716a61a7967fbd06afe867454",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
        "patch": "@@ -91,7 +91,7 @@ def main():\n     no_sha1 = True\n     prev_commit = \"\"\n     initial_commit = current_commit\n-    branch = subprocess.check_output([GIT, 'show', '-s', '--format=%H', initial_commit], universal_newlines=True).splitlines()[0]\n+    branch = subprocess.check_output([GIT, 'show', '-s', '--format=%H', initial_commit], universal_newlines=True, encoding='utf8').splitlines()[0]\n \n     # Iterate through commits\n     while True:\n@@ -112,7 +112,7 @@ def main():\n             if prev_commit != \"\":\n                 print(\"No parent of {} was signed with a trusted key!\".format(prev_commit), file=sys.stderr)\n                 print(\"Parents are:\", file=sys.stderr)\n-                parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', prev_commit], universal_newlines=True).splitlines()[0].split(' ')\n+                parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', prev_commit], universal_newlines=True, encoding='utf8').splitlines()[0].split(' ')\n                 for parent in parents:\n                     subprocess.call([GIT, 'show', '-s', parent], stdout=sys.stderr)\n             else:\n@@ -122,25 +122,25 @@ def main():\n         # Check the Tree-SHA512\n         if (verify_tree or prev_commit == \"\") and current_commit not in incorrect_sha512_allowed:\n             tree_hash = tree_sha512sum(current_commit)\n-            if (\"Tree-SHA512: {}\".format(tree_hash)) not in subprocess.check_output([GIT, 'show', '-s', '--format=format:%B', current_commit], universal_newlines=True).splitlines():\n+            if (\"Tree-SHA512: {}\".format(tree_hash)) not in subprocess.check_output([GIT, 'show', '-s', '--format=format:%B', current_commit], universal_newlines=True, encoding='utf8').splitlines():\n                 print(\"Tree-SHA512 did not match for commit \" + current_commit, file=sys.stderr)\n                 sys.exit(1)\n \n         # Merge commits should only have two parents\n-        parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', current_commit], universal_newlines=True).splitlines()[0].split(' ')\n+        parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', current_commit], universal_newlines=True, encoding='utf8').splitlines()[0].split(' ')\n         if len(parents) > 2:\n             print(\"Commit {} is an octopus merge\".format(current_commit), file=sys.stderr)\n             sys.exit(1)\n \n         # Check that the merge commit is clean\n-        commit_time = int(subprocess.check_output([GIT, 'show', '-s', '--format=format:%ct', current_commit], universal_newlines=True).splitlines()[0])\n+        commit_time = int(subprocess.check_output([GIT, 'show', '-s', '--format=format:%ct', current_commit], universal_newlines=True, encoding='utf8').splitlines()[0])\n         check_merge = commit_time > time.time() - args.clean_merge * 24 * 60 * 60  # Only check commits in clean_merge days\n         allow_unclean = current_commit in unclean_merge_allowed\n         if len(parents) == 2 and check_merge and not allow_unclean:\n-            current_tree = subprocess.check_output([GIT, 'show', '--format=%T', current_commit], universal_newlines=True).splitlines()[0]\n+            current_tree = subprocess.check_output([GIT, 'show', '--format=%T', current_commit], universal_newlines=True, encoding='utf8').splitlines()[0]\n             subprocess.call([GIT, 'checkout', '--force', '--quiet', parents[0]])\n             subprocess.call([GIT, 'merge', '--no-ff', '--quiet', parents[1]], stdout=subprocess.DEVNULL)\n-            recreated_tree = subprocess.check_output([GIT, 'show', '--format=format:%T', 'HEAD'], universal_newlines=True).splitlines()[0]\n+            recreated_tree = subprocess.check_output([GIT, 'show', '--format=format:%T', 'HEAD'], universal_newlines=True, encoding='utf8').splitlines()[0]\n             if current_tree != recreated_tree:\n                 print(\"Merge commit {} is not clean\".format(current_commit), file=sys.stderr)\n                 subprocess.call([GIT, 'diff', current_commit])"
      },
      {
        "sha": "0c4a603167fed47048fd7c04e79aeb34212d9f23",
        "filename": "test/lint/check-doc.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/test/lint/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/test/lint/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/check-doc.py?ref=5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
        "patch": "@@ -26,8 +26,8 @@\n \n \n def main():\n-    used = check_output(CMD_GREP_ARGS, shell=True, universal_newlines=True)\n-    docd = check_output(CMD_GREP_DOCS, shell=True, universal_newlines=True)\n+    used = check_output(CMD_GREP_ARGS, shell=True, universal_newlines=True, encoding='utf8')\n+    docd = check_output(CMD_GREP_DOCS, shell=True, universal_newlines=True, encoding='utf8')\n \n     args_used = set(re.findall(re.compile(REGEX_ARG), used))\n     args_docd = set(re.findall(re.compile(REGEX_DOC), docd)).union(SET_DOC_OPTIONAL)"
      },
      {
        "sha": "d03c20205d14f0a2d923d77d40e1f00cba1e2cb8",
        "filename": "test/lint/lint-python-utf8-encoding.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/test/lint/lint-python-utf8-encoding.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72/test/lint/lint-python-utf8-encoding.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-python-utf8-encoding.sh?ref=5d62dcf9cfb5c0b2511c10667ed47ec3b3610d72",
        "patch": "@@ -17,4 +17,12 @@ if [[ ${OUTPUT} != \"\" ]]; then\n     echo \"${OUTPUT}\"\n     EXIT_CODE=1\n fi\n+OUTPUT=$(git grep \"check_output(\" -- \"*.py\" | grep \"universal_newlines=True\" | grep -vE \"encoding=.(ascii|utf8|utf-8).\")\n+if [[ ${OUTPUT} != \"\" ]]; then\n+    echo \"Python's check_output(...) seems to be used to get program outputs without explicitly\"\n+    echo \"specifying encoding=\\\"utf8\\\":\"\n+    echo\n+    echo \"${OUTPUT}\"\n+    EXIT_CODE=1\n+fi\n exit ${EXIT_CODE}"
      }
    ]
  }
]