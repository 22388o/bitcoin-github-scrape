DrahtBot,2021-04-21 17:33:57,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-824235661,824235661,
fanquake,2021-04-23 04:22:18,"Can you update the commit message to use the following format:\n```bash\nprefix: title\n\ncommit body\n```\n\ni.e:\n```bash\ntest: add new python linter to check file names and permissions\n\nexplain what is being done in this commit\nexplain some more etc\n```\n\nAlso, for this to me merged. Obviously all [linters](https://github.com/bitcoin/bitcoin/pull/21740/checks?check_run_id=2",https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-825375050,825375050,
windsok,2021-04-24 00:19:07,"> Can you update the commit message to use the following format:\n> \nThanks @fanquake  - I've updated the commit messages to the standard format\n\n> Also, for this to me merged. Obviously all [linters](https://github.com/bitcoin/bitcoin/pull/21740/checks?check_run_id=2415315623) / CI need to be passing. So if changes to other files need to be made, they will have to be done either in precedi",https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-826002217,826002217,
practicalswift,2021-04-24 07:14:48,"cr ACK 52c3fb3c9d4145819bd0fe839ba89482e73fce99: patch looks correct!\n\nNice first-time contribution @windsok. I hope to see more contributions from you in the future. Warm welcome as a contributor!",https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-826048425,826048425,
kiminuo,2021-04-24 07:56:14,"@windsok This PR removes `test/lint/lint-shebang.sh` and `test/lint/lint-filenames.sh` and adds `test/lint/lint-filenames-permissions.sh` and adds `test/lint/lint-filenames-permissions.py`. \n\nThe new file names are confusing to me as they do something different than they hint. Would it make sense to you to rename them from ""lint-filenames-permissions.{py|sh}"" to ""lint-files.{py|sh}"" or somethi",https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-826053441,826053441,
windsok,2021-04-29 23:48:47,"> @windsok This PR removes `test/lint/lint-shebang.sh` and `test/lint/lint-filenames.sh` and adds `test/lint/lint-filenames-permissions.sh` and adds `test/lint/lint-filenames-permissions.py`.\n> \n> The new file names are confusing to me as they do something different than they hint. Would it make sense to you to rename them from ""lint-filenames-permissions.{py|sh}"" to ""lint-files.{py|sh}"" or so",https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-829701806,829701806,
windsok,2021-04-29 23:51:02,"> Nice first-time contribution @windsok. I hope to see more contributions from you in the future. Warm welcome as a contributor!\n\nThanks @practicalswift :) looking forward to getting more involved. Sorry for the delayed response on the last round of feedback.",https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-829702525,829702525,
practicalswift,2021-04-30 09:13:54,cr re-ACK 46b025e00df40724175735eb5606ac73067cb3b8: patch still looks correct,https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-829959649,829959649,
kiminuo,2021-05-01 10:23:50,"code review ACK 46b025e00df40724175735eb5606ac73067cb3b8 if `contrib/gitian-descriptors/assign_DISTNAME` permission change is deemed OK.\n\nGreat contribution!\n\n",https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-830607777,830607777,
DrahtBot,2021-05-03 09:31:55,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @achow101 @sipa have been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-831141589,831141589,
laanwj,2021-05-05 15:10:29,"Code review ACK 46b025e00df40724175735eb5606ac73067cb3b8\nAlso ACK on the permission changes in 46b025e00df40724175735eb5606ac73067cb3b8.\nThanks for working on this.\n\n> Nice to see the linting being done in Python instead of bash: much better in terms of maintainability, portability and readability.\n\nAgree. Shell script tends to become virtually unreviewable quickly when the logic gets ",https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-832767699,832767699,
DrahtBot,2021-05-06 00:42:59,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 3f8f238deb5a72db04d29c899cea11df14cd984c<br>(master) | commit 4f1c6e5ae1e8f26799891178b0a353502e22b87d<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`1d782713b323d8b8...`](https://drahtbot.space/gitian/bitcoin/bitcoin/3f8f238deb5a72db04d29c899cea11df14cd984c/bitcoin-3f8f238deb5a-aarch64-l,https://github.com/bitcoin/bitcoin/pull/21740#issuecomment-833143855,833143855,
practicalswift,2021-04-21 08:01:38,"Nit: Consider doing the filtering (`grep`, `cut`) in Python instead to make the script easier to read and maintain. In the Python code a comment could be added that `:1:` is used to make sure only shebangs on the first line are considered.",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617291541,617291541,test/lint/lint-filenames-permissions.py
practicalswift,2021-04-21 08:02:51,Nit: `file` is a Python builtin. Consider using `filename/filenames` instead of `file/files` :),https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617292317,617292317,test/lint/lint-filenames-permissions.py
practicalswift,2021-04-21 08:10:48,"This requirement holds for shebang files that expected to be executed directly.\n\nTo avoid this requirement for files that are not expected to be executed directly but still have shebangs consider adding exclusions for:\n* `*.py` files that do not contain `if __name__ == '__main__':` or `if __name__ == ""__main__"":`: these are typically modules that are not expected to be executed directly.\n*",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r617297965,617297965,test/lint/lint-filenames-permissions.py
windsok,2021-04-22 03:03:05,updated to move the filtering into python :),https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618047414,618047414,test/lint/lint-filenames-permissions.py
windsok,2021-04-22 03:03:12,"good call, updated",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618047440,618047440,test/lint/lint-filenames-permissions.py
windsok,2021-04-22 03:06:12,"Updated. I wonder if some other file types should also be skipped along with `*bash`? I notice the test is failing for some files like `contrib/init/bitcoind.init`, `contrib/init/bitcoind.openrc`, `contrib/devtools/split-debug.sh.in` and I'm thinking they might fit into the same category of files which are sourced but not executed?\n\nThere is also quite a few `.sh` files in `ci/test/` like `ci/",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618048302,618048302,test/lint/lint-filenames-permissions.py
kiminuo,2021-04-22 15:00:47,"nit: I wonder is `""""""` required here or would `""` suffice?",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618483138,618483138,test/lint/lint-filenames-permissions.py
kiminuo,2021-04-22 15:34:14,"Out of curiosity: Would it make sense to replace `strip()` with `rstrip()` (https://docs.python.org/3/library/stdtypes.html?highlight=rstrip#str.rstrip)?\n\nJust for fun: There is still one very specific case where this does not work (I hope I'm not missing something): You can add a file like this `git add test/util/zzz.py  ` (note the trailing whitespace) and `strip()` will make sure that `test",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618511312,618511312,test/lint/lint-filenames-permissions.py
kiminuo,2021-04-22 15:54:09,"I believe the `strip()` here is not correct. I don't think that you can put whitespace before shebang. \n\nIt's a question whether one should allow whitespace after shebank AFAIK it's allowed but ... It may be for the best simply remove `.strip()`.\n\nJust for fun: https://unix.stackexchange.com/questions/276751/is-space-allowed-between-and-bin-bash-in-shebang",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618527730,618527730,test/lint/lint-filenames-permissions.py
practicalswift,2021-04-22 19:19:22,"> Updated. I wonder if some other file types should also be skipped along with `*bash`? I notice the test is failing for some files like `contrib/init/bitcoind.init`, `contrib/init/bitcoind.openrc`, `contrib/devtools/split-debug.sh.in` and I'm thinking they might fit into the same category of files which are sourced but not executed?\n\nSounds reasonable. Skipping the requirement for `*.{init,op",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618676151,618676151,test/lint/lint-filenames-permissions.py
windsok,2021-04-22 23:25:56,"Thanks, updated :)",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618815019,618815019,test/lint/lint-filenames-permissions.py
windsok,2021-04-22 23:32:23,"Great catch!\n\nI've updated the logic to not use a `strip()` at all, and instead split on the newlines and then remove the trailing empty element, as you suggested. I chose to do this using a list comprehension filtering for empty list elements, rather than a `.pop()` of the last element, as it seemed slightly more robust, but can change it to a `pop()` if I'm overthinking it.\n\nI tested tha",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618817217,618817217,test/lint/lint-filenames-permissions.py
windsok,2021-04-22 23:34:23,"Great catch, thanks.\n\nI updated this to use `rstrip(b""\n"")` to remove only the trailing newline",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618817864,618817864,test/lint/lint-filenames-permissions.py
windsok,2021-04-22 23:37:57,"Thanks! updated the condition to skip the requirement for `*.{init,openrc,sh.in}` files.\n\nFor the remaining [files failing the test](https://github.com/bitcoin/bitcoin/pull/21740/checks), what would be the correct way to go about updating those to comply with the test? Should it be a second commit on this PR?\n\nThanks again for the review and guidance.",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r618819108,618819108,test/lint/lint-filenames-permissions.py
kiminuo,2021-04-24 08:05:11,"Nit: Given that `failed_tests` number is computed, one can probably print the number of failed tests too.",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r619607936,619607936,test/lint/lint-filenames-permissions.py
kiminuo,2021-04-24 08:17:04,"I think people mostly do something like this https://source.dot.net/#System.Private.CoreLib/Path.cs,467ebc0e33e0820c to find a file extension. That is to look for the first `os.extsep` but not from the beginning of the string (filename) but from the end of the filename.\n\nA counter-example can be `'contrib/devtools/split-debug.my.nice.helper.sh.in'` where you would return `my.nice.helper.sh.in`",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r619611147,619611147,test/lint/lint-filenames-permissions.py
windsok,2021-04-29 23:41:52,"Great idea, I've updated to keep track of the number of failures, and print a message with the total number of failures, if any :)",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r623494542,623494542,test/lint/lint-filenames-permissions.py
windsok,2021-04-29 23:47:19,"Ah yes I originally was using `os.path.splitext(self.file_path)[1].strip(""."")` which works similar to the linked implementation (only return the final extension, not everything from the first `.`)\n\nI had changed this as I needed a way to detect `.sh.in` files to exclude them from one of the tests, but you bring up a very good point - with the change I had made it's possible certain files with ",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r623496403,623496403,test/lint/lint-filenames-permissions.py
kiminuo,2021-05-01 09:50:50,"nit: The comment does not correspond with the code actually. \n\nOne could probably do: `filenames = filenames[:-1]`",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r624476704,624476704,test/lint/lint-files.py
kiminuo,2021-05-01 10:16:17,"super nit: I'm not sure whether `os.stat` should behave have [follow_symlinks](https://docs.python.org/3/library/os.html?highlight=os%20stat#os.stat) equal to `True` (default) or `False`. Possibly relevant is https://stackoverflow.com/questions/954560/how-does-git-handle-symbolic-links/18791647#18791647.\n\nI don't want to hold up this PR. Leaving this for comment here for the sake of completene",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r624488354,624488354,test/lint/lint-files.py
kiminuo,2021-05-01 10:21:57,It looks fine to me. Thanks for updating it. :),https://github.com/bitcoin/bitcoin/pull/21740#discussion_r624488966,624488966,test/lint/lint-filenames-permissions.py
windsok,2021-05-05 00:51:21,"Hmm interesting. It seems that there are currently no symbolic links in the repository itself, at least none that I could find with:\n```bash\nls -lR ~/code/bitcoin | grep ^l\n```\n\nI wonder if that is intentional, or it's just never come up before?\n\nIn any case, if there were symbolic links my thinking is that we probably would want to follow them, as it seems that symlinks themselves [",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626197144,626197144,test/lint/lint-files.py
windsok,2021-05-05 00:56:23,"right, I chose to remove the trailing element by checking for an empty string as I was worried about some case in the future where the output of the `git ls-files` command changes somehow and the last element is not actually empty. I'm probably overthinking it though.",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626198427,626198427,test/lint/lint-files.py
windsok,2021-05-05 01:05:37,"On a review of this, I'm fairly certain I can just safely rewrite this code as this one liner, which still catches the original edge case of a file with whitespace at the end of the files list.\n\n```python\nfilenames = check_output(CMD_ALL_FILES, shell=True).decode(""utf8"").rstrip('\n').split(""\n"")\n```\n\nHappy to update this if people don't mind re-reviewing. Let me know.\n\nEdit: though",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626200634,626200634,test/lint/lint-files.py
kiminuo,2021-05-05 10:01:53,"My take on this is: I think that adding a symbolic link should produce a warning so that others can notice the fact. The fact that there are no symbolic links at the moment hints that they are probably not necessary.\n\nHowever, this is really out of scope of this PR, I guess. If somebody finds it important it's always possible to address this in a follow up PR. :)",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626433775,626433775,test/lint/lint-files.py
kiminuo,2021-05-05 10:04:31,"> right, I chose to remove the trailing element by checking for an empty string as I was worried about some case in the future where the output of the `git ls-files` command changes somehow and the last element is not actually empty. I'm probably overthinking it though.\n\nOne would need to ask on a Git mailing list whether the text output of the command is stable or not. But your solution works",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626435329,626435329,test/lint/lint-files.py
laanwj,2021-05-05 15:12:20,Just a question (not a blocker): why does this need a bash wrapper?,https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626657660,626657660,test/lint/lint-files.sh
MarcoFalke,2021-05-05 15:35:27,"If a filename had a newline in its name it would also be split by the `split(""\n"")`",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626677524,626677524,test/lint/lint-files.py
MarcoFalke,2021-05-05 15:39:47,"nit: shouldn't `open` be used in a context manager, so that it is closed again?",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626681068,626681068,test/lint/lint-files.py
MarcoFalke,2021-05-05 15:43:51,"nit: Doesn't matter here, but it could use `startswith` for type safety.",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626684555,626684555,test/lint/lint-files.py
windsok,2021-05-05 17:13:03,"Good call, I will address in a follow-up",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626751889,626751889,test/lint/lint-files.py
windsok,2021-05-05 17:23:55,"I believe the main reason is the the `lint-all.sh` script that CI runs is currently setup to automatically run all `.sh` tests in the `test/lint` directory, but won't automatically run `.py` files.\n\nIn addition it allows lint tests [to opt in or out of locale dependence](https://github.com/bitcoin/bitcoin/blob/7fcf53f7b4524572d1d0c9a5fdc388e87eb02416/test/lint/lint-all.sh#L10-L12)\n\nIf we s",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626759388,626759388,test/lint/lint-files.sh
windsok,2021-05-05 17:27:06,"I'll think about a way to handle this case. I think currently if this happens the test overall will still fail, as the permissions test would not be able to locate the file and should error out - we can definitely handle this better, though.",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626761506,626761506,test/lint/lint-files.py
MarcoFalke,2021-05-05 17:30:25,"I think `.rstrip('\n').split(""\n"")` as you suggested is fine",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r626763857,626763857,test/lint/lint-files.py
windsok,2021-05-07 01:38:13,Addressed in https://github.com/bitcoin/bitcoin/pull/21873,https://github.com/bitcoin/bitcoin/pull/21740#discussion_r627867353,627867353,test/lint/lint-files.py
ryanofsky,2021-05-24 21:24:42,"Since this PR, when I run the linter I see a flood of errors and have to disable it. It seems inappropriate to check user, group, read, and write permissions when the only permission git tracks is whether the file is marked executable. Other permissions are local to the checkout and don't affect the project or other developers. Errors I see are:\n\n```\n[...]\nFile ""test/lint/lint-whitespace.s",https://github.com/bitcoin/bitcoin/pull/21740#discussion_r638279072,638279072,test/lint/lint-files.py
