[
  {
    "sha": "6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjZiYjNlYmM3Y2I4ZTE3YTVkZmM4ZWY1NWFhMmQzZjJkYzZiZGVh",
    "commit": {
      "author": {
        "name": "windsok",
        "email": "windsok@protonmail.com",
        "date": "2021-04-24T00:11:52Z"
      },
      "committer": {
        "name": "windsok",
        "email": "windsok@protonmail.com",
        "date": "2021-04-24T00:13:28Z"
      },
      "message": "test: fix file permissions on various scripts\n\nUpdates permissions on files to comply with the new test added in the following commit",
      "tree": {
        "sha": "dd112d55ee88f472c36ce95066332b144e08d658",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd112d55ee88f472c36ce95066332b144e08d658"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/comments",
    "author": {
      "login": "windsok",
      "id": 8359865,
      "node_id": "MDQ6VXNlcjgzNTk4NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8359865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/windsok",
      "html_url": "https://github.com/windsok",
      "followers_url": "https://api.github.com/users/windsok/followers",
      "following_url": "https://api.github.com/users/windsok/following{/other_user}",
      "gists_url": "https://api.github.com/users/windsok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/windsok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/windsok/subscriptions",
      "organizations_url": "https://api.github.com/users/windsok/orgs",
      "repos_url": "https://api.github.com/users/windsok/repos",
      "events_url": "https://api.github.com/users/windsok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/windsok/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "windsok",
      "id": 8359865,
      "node_id": "MDQ6VXNlcjgzNTk4NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8359865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/windsok",
      "html_url": "https://github.com/windsok",
      "followers_url": "https://api.github.com/users/windsok/followers",
      "following_url": "https://api.github.com/users/windsok/following{/other_user}",
      "gists_url": "https://api.github.com/users/windsok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/windsok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/windsok/subscriptions",
      "organizations_url": "https://api.github.com/users/windsok/orgs",
      "repos_url": "https://api.github.com/users/windsok/repos",
      "events_url": "https://api.github.com/users/windsok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/windsok/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90e0faaa442b6ced94aee2fa9d9d21c4063d76be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90e0faaa442b6ced94aee2fa9d9d21c4063d76be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90e0faaa442b6ced94aee2fa9d9d21c4063d76be"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": null,
        "filename": "build_msvc/msvc-autogen.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_android.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_android.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_android.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_android.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_msan.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_msan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_msan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_msan.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "contrib/gitian-descriptors/assign_DISTNAME",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/contrib/gitian-descriptors/assign_DISTNAME",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/contrib/gitian-descriptors/assign_DISTNAME",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/assign_DISTNAME?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "contrib/guix/libexec/build.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      },
      {
        "sha": null,
        "filename": "test/functional/rpc_addresses_deprecation.py",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/test/functional/rpc_addresses_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/test/functional/rpc_addresses_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_addresses_deprecation.py?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      }
    ]
  },
  {
    "sha": "46b025e00df40724175735eb5606ac73067cb3b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NmIwMjVlMDBkZjQwNzI0MTc1NzM1ZWI1NjA2YWM3MzA2N2NiM2I4",
    "commit": {
      "author": {
        "name": "windsok",
        "email": "windsok@protonmail.com",
        "date": "2021-04-21T01:41:40Z"
      },
      "committer": {
        "name": "windsok",
        "email": "windsok@protonmail.com",
        "date": "2021-04-30T00:00:58Z"
      },
      "message": "test: add new python linter to check file names and permissions\n\nReplaces the existing tests in the test/lint/lint-filenames.sh and test/lint/lint-shebang.sh linter tests, as well as adding some new and increased testing.\nSummary of tests:\n- Checks every file in the repository against an allowed regexp to make sure only lowercase or uppercase alphanumerics (a-zA-Z0-9), underscores (_), hyphens (-), at (@) and dots (.) are used in repository filenames.\n- Checks only source files (*.cpp, *.h, *.py, *.sh) against a stricter allowed regexp to make sure only lowercase alphanumerics (a-z0-9), underscores (_), hyphens (-) and dots (.) are used in source code filenames. Additionally there is an exception regexp for directories or files which are excepted from matching this regexp (This should replicate the existing test/lint/lint-filenames.sh test)\n- Checks all files in the repository match an allowed executable or non-executable file permission octal. Additionally checks that for executable files, the file contains a shebang line.\n- Checks that for executable .py and .sh files, the shebang line used matches an allowable list of shebangs (This should replicate the existing test/lint/lint-shebang.sh test)\n- Checks every file that contains a shebang line to ensure it has an executable permission\n\nFixes #21729",
      "tree": {
        "sha": "a98a25326a086c307ebf638cd6028b3dc91a931c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a98a25326a086c307ebf638cd6028b3dc91a931c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46b025e00df40724175735eb5606ac73067cb3b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46b025e00df40724175735eb5606ac73067cb3b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46b025e00df40724175735eb5606ac73067cb3b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46b025e00df40724175735eb5606ac73067cb3b8/comments",
    "author": {
      "login": "windsok",
      "id": 8359865,
      "node_id": "MDQ6VXNlcjgzNTk4NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8359865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/windsok",
      "html_url": "https://github.com/windsok",
      "followers_url": "https://api.github.com/users/windsok/followers",
      "following_url": "https://api.github.com/users/windsok/following{/other_user}",
      "gists_url": "https://api.github.com/users/windsok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/windsok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/windsok/subscriptions",
      "organizations_url": "https://api.github.com/users/windsok/orgs",
      "repos_url": "https://api.github.com/users/windsok/repos",
      "events_url": "https://api.github.com/users/windsok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/windsok/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "windsok",
      "id": 8359865,
      "node_id": "MDQ6VXNlcjgzNTk4NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8359865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/windsok",
      "html_url": "https://github.com/windsok",
      "followers_url": "https://api.github.com/users/windsok/followers",
      "following_url": "https://api.github.com/users/windsok/following{/other_user}",
      "gists_url": "https://api.github.com/users/windsok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/windsok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/windsok/subscriptions",
      "organizations_url": "https://api.github.com/users/windsok/orgs",
      "repos_url": "https://api.github.com/users/windsok/repos",
      "events_url": "https://api.github.com/users/windsok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/windsok/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea"
      }
    ],
    "stats": {
      "total": 264,
      "additions": 215,
      "deletions": 49
    },
    "files": [
      {
        "sha": "f25cbb3f8db723a10758c9c0f1b66616ae8f16f0",
        "filename": "test/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46b025e00df40724175735eb5606ac73067cb3b8/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46b025e00df40724175735eb5606ac73067cb3b8/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/README.md?ref=46b025e00df40724175735eb5606ac73067cb3b8",
        "patch": "@@ -273,7 +273,7 @@ Please be aware that on Linux distributions all dependencies are usually availab\n Individual tests can be run by directly calling the test script, e.g.:\n \n ```\n-test/lint/lint-filenames.sh\n+test/lint/lint-files.sh\n ```\n \n You can run all the shell-based lint tests by running:"
      },
      {
        "sha": "3f7491cd2b43ea507e512d363bc7828034ba87ee",
        "filename": "test/lint/lint-filenames.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/test/lint/lint-filenames.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/test/lint/lint-filenames.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-filenames.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea",
        "patch": "@@ -1,24 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Make sure only lowercase alphanumerics (a-z0-9), underscores (_),\n-# hyphens (-) and dots (.) are used in source code filenames.\n-\n-export LC_ALL=C\n-\n-EXIT_CODE=0\n-OUTPUT=$(git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\" | \\\n-    grep -vE '^[a-z0-9_./-]+$' | \\\n-    grep -vE '^src/(secp256k1/|univalue/|test/fuzz/FuzzedDataProvider.h)')\n-\n-if [[ ${OUTPUT} != \"\" ]]; then\n-    echo \"Use only lowercase alphanumerics (a-z0-9), underscores (_), hyphens (-) and dots (.)\"\n-    echo \"in source code filenames:\"\n-    echo\n-    echo \"${OUTPUT}\"\n-    EXIT_CODE=1\n-fi\n-exit ${EXIT_CODE}"
      },
      {
        "sha": "43ca882442639051f373dda8559beeb365b62d33",
        "filename": "test/lint/lint-files.py",
        "status": "added",
        "additions": 207,
        "deletions": 0,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46b025e00df40724175735eb5606ac73067cb3b8/test/lint/lint-files.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46b025e00df40724175735eb5606ac73067cb3b8/test/lint/lint-files.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-files.py?ref=46b025e00df40724175735eb5606ac73067cb3b8",
        "patch": "@@ -0,0 +1,207 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+This checks that all files in the repository have correct filenames and permissions\n+\"\"\"\n+\n+import os\n+import re\n+import sys\n+from subprocess import check_output\n+from typing import Optional, NoReturn\n+\n+CMD_ALL_FILES = \"git ls-files --full-name\"\n+CMD_SOURCE_FILES = 'git ls-files --full-name -- \"*.[cC][pP][pP]\" \"*.[hH]\" \"*.[pP][yY]\" \"*.[sS][hH]\"'\n+CMD_SHEBANG_FILES = \"git grep --full-name --line-number -I '^#!'\"\n+ALLOWED_FILENAME_REGEXP = \"^[a-zA-Z0-9/_.@][a-zA-Z0-9/_.@-]*$\"\n+ALLOWED_SOURCE_FILENAME_REGEXP = \"^[a-z0-9_./-]+$\"\n+ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP = (\n+    \"^src/(secp256k1/|univalue/|test/fuzz/FuzzedDataProvider.h)\"\n+)\n+ALLOWED_PERMISSION_NON_EXECUTABLES = 644\n+ALLOWED_PERMISSION_EXECUTABLES = 755\n+ALLOWED_EXECUTABLE_SHEBANG = {\n+    \"py\": [b\"#!/usr/bin/env python3\"],\n+    \"sh\": [b\"#!/usr/bin/env bash\", b\"#!/bin/sh\"],\n+}\n+\n+\n+class FileMeta(object):\n+    def __init__(self, file_path: str):\n+        self.file_path = file_path\n+\n+    @property\n+    def extension(self) -> Optional[str]:\n+        \"\"\"\n+        Returns the file extension for a given filename string.\n+        eg:\n+        'ci/lint_run_all.sh' -> 'sh'\n+        'ci/retry/retry' -> None\n+        'contrib/devtools/split-debug.sh.in' -> 'in'\n+        \"\"\"\n+        return str(os.path.splitext(self.file_path)[1].strip(\".\") or None)\n+\n+    @property\n+    def full_extension(self) -> Optional[str]:\n+        \"\"\"\n+        Returns the full file extension for a given filename string.\n+        eg:\n+        'ci/lint_run_all.sh' -> 'sh'\n+        'ci/retry/retry' -> None\n+        'contrib/devtools/split-debug.sh.in' -> 'sh.in'\n+        \"\"\"\n+        filename_parts = self.file_path.split(os.extsep, 1)\n+        try:\n+            return filename_parts[1]\n+        except IndexError:\n+            return None\n+\n+    @property\n+    def permissions(self) -> int:\n+        \"\"\"\n+        Returns the octal file permission of the file\n+        \"\"\"\n+        return int(oct(os.stat(self.file_path).st_mode)[-3:])\n+\n+\n+def check_all_filenames() -> int:\n+    \"\"\"\n+    Checks every file in the repository against an allowed regexp to make sure only lowercase or uppercase\n+    alphanumerics (a-zA-Z0-9), underscores (_), hyphens (-), at (@) and dots (.) are used in repository filenames.\n+    \"\"\"\n+    # We avoid using rstrip() to ensure we catch filenames which accidentally include trailing whitespace\n+    filenames = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").split(\"\\n\")\n+    filenames = [filename for filename in filenames if filename != \"\"]  # removes the trailing empty list element\n+\n+    filename_regex = re.compile(ALLOWED_FILENAME_REGEXP)\n+    failed_tests = 0\n+    for filename in filenames:\n+        if not filename_regex.match(filename):\n+            print(\n+                f\"\"\"File \"{filename}\" does not not match the allowed filename regexp ('{ALLOWED_FILENAME_REGEXP}').\"\"\"\n+            )\n+            failed_tests += 1\n+    return failed_tests\n+\n+\n+def check_source_filenames() -> int:\n+    \"\"\"\n+    Checks only source files (*.cpp, *.h, *.py, *.sh) against a stricter allowed regexp to make sure only lowercase\n+    alphanumerics (a-z0-9), underscores (_), hyphens (-) and dots (.) are used in source code filenames.\n+\n+    Additionally there is an exception regexp for directories or files which are excepted from matching this regexp.\n+    \"\"\"\n+    # We avoid using rstrip() to ensure we catch filenames which accidentally include trailing whitespace\n+    filenames = check_output(CMD_SOURCE_FILES, shell=True).decode(\"utf8\").split(\"\\n\")\n+    filenames = [filename for filename in filenames if filename != \"\"]  # removes the trailing empty list element\n+\n+    filename_regex = re.compile(ALLOWED_SOURCE_FILENAME_REGEXP)\n+    filename_exception_regex = re.compile(ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP)\n+    failed_tests = 0\n+    for filename in filenames:\n+        if not filename_regex.match(filename) and not filename_exception_regex.match(filename):\n+            print(\n+                f\"\"\"File \"{filename}\" does not not match the allowed source filename regexp ('{ALLOWED_SOURCE_FILENAME_REGEXP}'), or the exception regexp ({ALLOWED_SOURCE_FILENAME_EXCEPTION_REGEXP}).\"\"\"\n+            )\n+            failed_tests += 1\n+    return failed_tests\n+\n+\n+def check_all_file_permissions() -> int:\n+    \"\"\"\n+    Checks all files in the repository match an allowed executable or non-executable file permission octal.\n+\n+    Additionally checks that for executable files, the file contains a shebang line\n+    \"\"\"\n+    filenames = check_output(CMD_ALL_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+    failed_tests = 0\n+    for filename in filenames:\n+        file_meta = FileMeta(filename)\n+        if file_meta.permissions == ALLOWED_PERMISSION_EXECUTABLES:\n+            shebang = open(filename, \"rb\").readline().rstrip(b\"\\n\")\n+\n+            # For any file with executable permissions the first line must contain a shebang\n+            if shebang[:2] != b\"#!\":\n+                print(\n+                    f\"\"\"File \"{filename}\" has permission {ALLOWED_PERMISSION_EXECUTABLES} (executable) and is thus expected to contain a shebang '#!'. Add shebang or do \"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {filename}\" to make it non-executable.\"\"\"\n+                )\n+                failed_tests += 1\n+\n+            # For certain file extensions that have been defined, we also check that the shebang conforms to a specific\n+            # allowable set of shebangs\n+            if file_meta.extension in ALLOWED_EXECUTABLE_SHEBANG.keys():\n+                if shebang not in ALLOWED_EXECUTABLE_SHEBANG[file_meta.extension]:\n+                    print(\n+                        f\"\"\"File \"{filename}\" is missing expected shebang \"\"\"\n+                        + \" or \".join(\n+                            [\n+                                x.decode(\"utf-8\")\n+                                for x in ALLOWED_EXECUTABLE_SHEBANG[file_meta.extension]\n+                            ]\n+                        )\n+                    )\n+                    failed_tests += 1\n+\n+        elif file_meta.permissions == ALLOWED_PERMISSION_NON_EXECUTABLES:\n+            continue\n+        else:\n+            print(\n+                f\"\"\"File \"{filename}\" has unexpected permission {file_meta.permissions}. Do \"chmod {ALLOWED_PERMISSION_NON_EXECUTABLES} {filename}\" (if non-executable) or \"chmod {ALLOWED_PERMISSION_EXECUTABLES} {filename}\" (if executable).\"\"\"\n+            )\n+            failed_tests += 1\n+\n+    return failed_tests\n+\n+\n+def check_shebang_file_permissions() -> int:\n+    \"\"\"\n+    Checks every file that contains a shebang line to ensure it has an executable permission\n+    \"\"\"\n+    filenames = check_output(CMD_SHEBANG_FILES, shell=True).decode(\"utf8\").strip().split(\"\\n\")\n+\n+    # The git grep command we use returns files which contain a shebang on any line within the file\n+    # so we need to filter the list to only files with the shebang on the first line\n+    filenames = [filename.split(\":1:\")[0] for filename in filenames if \":1:\" in filename]\n+\n+    failed_tests = 0\n+    for filename in filenames:\n+        file_meta = FileMeta(filename)\n+        if file_meta.permissions != ALLOWED_PERMISSION_EXECUTABLES:\n+            # These file types are typically expected to be sourced and not executed directly\n+            if file_meta.full_extension in [\"bash\", \"init\", \"openrc\", \"sh.in\"]:\n+                continue\n+\n+            # *.py files which don't contain an `if __name__ == '__main__'` are not expected to be executed directly\n+            if file_meta.extension == \"py\":\n+                file_data = open(filename, \"r\", encoding=\"utf8\").read()\n+                if not re.search(\"\"\"if __name__ == ['\"]__main__['\"]:\"\"\", file_data):\n+                    continue\n+\n+            print(\n+                f\"\"\"File \"{filename}\" contains a shebang line, but has the file permission {file_meta.permissions} instead of the expected executable permission {ALLOWED_PERMISSION_EXECUTABLES}. Do \"chmod {ALLOWED_PERMISSION_EXECUTABLES} {filename}\" (or remove the shebang line).\"\"\"\n+            )\n+            failed_tests += 1\n+    return failed_tests\n+\n+\n+def main() -> NoReturn:\n+    failed_tests = 0\n+    failed_tests += check_all_filenames()\n+    failed_tests += check_source_filenames()\n+    failed_tests += check_all_file_permissions()\n+    failed_tests += check_shebang_file_permissions()\n+\n+    if failed_tests:\n+        print(\n+            f\"ERROR: There were {failed_tests} failed tests in the lint-files.py lint test. Please resolve the above errors.\"\n+        )\n+        sys.exit(1)\n+    else:\n+        sys.exit(0)\n+\n+\n+if __name__ == \"__main__\":\n+    main()"
      },
      {
        "sha": "1e115778bd82fbab16a30630275af698a254b289",
        "filename": "test/lint/lint-files.sh",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46b025e00df40724175735eb5606ac73067cb3b8/test/lint/lint-files.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46b025e00df40724175735eb5606ac73067cb3b8/test/lint/lint-files.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-files.sh?ref=46b025e00df40724175735eb5606ac73067cb3b8",
        "patch": "@@ -0,0 +1,7 @@\n+#!/usr/bin/env bash\n+\n+export LC_ALL=C\n+\n+set -e\n+cd \"$(dirname $0)/../..\"\n+test/lint/lint-files.py"
      },
      {
        "sha": "13ebdfd78a51d8b0336a855bccf06b16ce1792d6",
        "filename": "test/lint/lint-shebang.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/test/lint/lint-shebang.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea/test/lint/lint-shebang.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-shebang.sh?ref=6f6bb3ebc7cb8e17a5dfc8ef55aa2d3f2dc6bdea",
        "patch": "@@ -1,24 +0,0 @@\n-#!/usr/bin/env bash\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Assert expected shebang lines\n-\n-export LC_ALL=C\n-EXIT_CODE=0\n-for PYTHON_FILE in $(git ls-files -- \"*.py\"); do\n-    if [[ $(head -c 2 \"${PYTHON_FILE}\") == \"#!\" &&\n-          $(head -n 1 \"${PYTHON_FILE}\") != \"#!/usr/bin/env python3\" ]]; then\n-        echo \"Missing shebang \\\"#!/usr/bin/env python3\\\" in ${PYTHON_FILE} (do not use python or python2)\"\n-        EXIT_CODE=1\n-    fi\n-done\n-for SHELL_FILE in $(git ls-files -- \"*.sh\"); do\n-    if [[ $(head -n 1 \"${SHELL_FILE}\") != \"#!/usr/bin/env bash\" &&\n-          $(head -n 1 \"${SHELL_FILE}\") != \"#!/bin/sh\" ]]; then\n-        echo \"Missing expected shebang \\\"#!/usr/bin/env bash\\\" or \\\"#!/bin/sh\\\" in ${SHELL_FILE}\"\n-        EXIT_CODE=1\n-    fi\n-done\n-exit ${EXIT_CODE}"
      }
    ]
  }
]