[
  {
    "sha": "595b22e5c0bf1c3e8ee73aea2f28397c12046a60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTViMjJlNWMwYmYxYzNlOGVlNzNhZWEyZjI4Mzk3YzEyMDQ2YTYw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-03-14T17:55:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-06-02T13:53:04Z"
      },
      "message": "Stop treating importaddress'ed scripts as change\n\nBefore this, if someone imported a scriptPubKey directly (in hex form) using\nimportaddress, outputs sending to it would be treated as change, as the\ncorresponding CTxDestination was not added to the address book.\n\nFix this by trying to detect scriptPubKeys that are in fact convertible to a\nCTxDestination and add them anyway. Add a warning to the RPC help to warn\nagainst importing raw non-standard scripts.",
      "tree": {
        "sha": "fad3e408c1faaf538e6c21e3db8e237f9ce275f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fad3e408c1faaf538e6c21e3db8e237f9ce275f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/595b22e5c0bf1c3e8ee73aea2f28397c12046a60",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/595b22e5c0bf1c3e8ee73aea2f28397c12046a60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/595b22e5c0bf1c3e8ee73aea2f28397c12046a60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/595b22e5c0bf1c3e8ee73aea2f28397c12046a60/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fa8d758598407f3bf0beb0118dc122ea5340736",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fa8d758598407f3bf0beb0118dc122ea5340736",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fa8d758598407f3bf0beb0118dc122ea5340736"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "70a8462da0d32fe30f3a7047e9fbbaf08f510c62",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/595b22e5c0bf1c3e8ee73aea2f28397c12046a60/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/595b22e5c0bf1c3e8ee73aea2f28397c12046a60/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=595b22e5c0bf1c3e8ee73aea2f28397c12046a60",
        "patch": "@@ -167,6 +167,11 @@ void ImportScript(const CScript& script, const string& strLabel, bool isRedeemSc\n         if (!pwalletMain->HaveCScript(script) && !pwalletMain->AddCScript(script))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding p2sh redeemScript to wallet\");\n         ImportAddress(CBitcoinAddress(CScriptID(script)), strLabel);\n+    } else {\n+        CTxDestination destination;\n+        if (ExtractDestination(script, destination)) {\n+            pwalletMain->SetAddressBook(destination, strLabel, \"receive\");\n+        }\n     }\n }\n \n@@ -195,6 +200,8 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n             \"4. p2sh                 (boolean, optional, default=false) Add the P2SH version of the script as well\\n\"\n             \"\\nNote: This call can take minutes to complete if rescan is true.\\n\"\n             \"If you have the full public key, you should call importpubkey instead of this.\\n\"\n+            \"\\nNote: If you import a non-standard raw script in hex form, outputs sending to it will be treated\\n\"\n+            \"as change, and not show up in many RPCs.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nImport a script with rescan\\n\"\n             + HelpExampleCli(\"importaddress\", \"\\\"myscript\\\"\") +"
      }
    ]
  }
]