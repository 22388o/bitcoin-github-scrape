[
  {
    "sha": "fa0467326ff004a0a20c6af9c8f6adcc74a0c8af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA0NjczMjZmZjAwNGEwYTIwYzZhZjljOGY2YWRjYzc0YTBjOGFm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-10-16T16:37:25Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-10-16T17:06:50Z"
      },
      "message": "chain: Set all CBlockIndex members to null, remove SetNull helper",
      "tree": {
        "sha": "a14bc51390843fb7e2db00ef7a000960377737f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a14bc51390843fb7e2db00ef7a000960377737f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0467326ff004a0a20c6af9c8f6adcc74a0c8af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhwgAv+KxPbO3yybwc8h1Q8M6zvVd1ngM4NV2q4lXBFcZNUZOAXwKSSW4k01R+d\np7P2vApOwTM5Pry/zyb+4E6m/KLfWEfGFYmInSbGYRXodOCDtU5q0uQ/jNQWXVy/\nH/EViiVSJ2tcTahUELddNGyrXjkr5CfzaYxPs+rlngiIvgjy4DtKRj+ilZl/oKpq\ndQmQihrhWTPmcZ4xHtKaRsqB/ZYFHnaUrvffOT0HlKz1kShg8Q905HZ7Yt0LiCrY\nKjdjL0mN3sCu0ZqnGKpjDAycvk0MTANA2sbe5HGdxC/caFLBinKmx90WKDT7yxbg\nMwk4iyhQ5rD4mQkiLrSkAXXzfSPU4kmglugVdqV6A6E0A0LNSv5x3bZyg3KdkpKw\nvqNKqA3l2MiNL9CmypzIg1BN/JKiedOdHVYQ8veCsfwUICvTx3/Hh1TXtsDDob7W\nonqsNf8Dr+DaaUk6EnrL9EksXJqI/V41Ajpuq4T9cHfkevRtgtIFnGkdQqpsgy1m\nu56CjB/Y\n=xXjo\n-----END PGP SIGNATURE-----",
        "payload": "tree a14bc51390843fb7e2db00ef7a000960377737f2\nparent 1f6638630ef8e196e9a7dd6a3e417c186e2cc7b9\nauthor MarcoFalke <falke.marco@gmail.com> 1571243845 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1571245610 -0400\n\nchain: Set all CBlockIndex members to null, remove SetNull helper\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0467326ff004a0a20c6af9c8f6adcc74a0c8af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0467326ff004a0a20c6af9c8f6adcc74a0c8af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0467326ff004a0a20c6af9c8f6adcc74a0c8af/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f6638630ef8e196e9a7dd6a3e417c186e2cc7b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f6638630ef8e196e9a7dd6a3e417c186e2cc7b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f6638630ef8e196e9a7dd6a3e417c186e2cc7b9"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 23,
      "deletions": 49
    },
    "files": [
      {
        "sha": "321bc95dbccb8ca7cc4048127f044e4845058624",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 23,
        "deletions": 49,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0467326ff004a0a20c6af9c8f6adcc74a0c8af/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0467326ff004a0a20c6af9c8f6adcc74a0c8af/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=fa0467326ff004a0a20c6af9c8f6adcc74a0c8af",
        "patch": "@@ -140,91 +140,65 @@ class CBlockIndex\n {\n public:\n     //! pointer to the hash of the block, if any. Memory is owned by this CBlockIndex\n-    const uint256* phashBlock;\n+    const uint256* phashBlock{nullptr};\n \n     //! pointer to the index of the predecessor of this block\n-    CBlockIndex* pprev;\n+    CBlockIndex* pprev{nullptr};\n \n     //! pointer to the index of some further predecessor of this block\n-    CBlockIndex* pskip;\n+    CBlockIndex* pskip{nullptr};\n \n     //! height of the entry in the chain. The genesis block has height 0\n-    int nHeight;\n+    int nHeight{0};\n \n     //! Which # file this block is stored in (blk?????.dat)\n-    int nFile;\n+    int nFile{0};\n \n     //! Byte offset within blk?????.dat where this block's data is stored\n-    unsigned int nDataPos;\n+    unsigned int nDataPos{0};\n \n     //! Byte offset within rev?????.dat where this block's undo data is stored\n-    unsigned int nUndoPos;\n+    unsigned int nUndoPos{0};\n \n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n-    arith_uint256 nChainWork;\n+    arith_uint256 nChainWork{};\n \n     //! Number of transactions in this block.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n-    unsigned int nTx;\n+    unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n     //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n     //! Change to 64-bit type when necessary; won't happen before 2030\n-    unsigned int nChainTx;\n+    unsigned int nChainTx{0};\n \n     //! Verification status of this block. See enum BlockStatus\n-    uint32_t nStatus;\n+    uint32_t nStatus{0};\n \n     //! block header\n-    int32_t nVersion;\n-    uint256 hashMerkleRoot;\n-    uint32_t nTime;\n-    uint32_t nBits;\n-    uint32_t nNonce;\n+    int32_t nVersion{0};\n+    uint256 hashMerkleRoot{};\n+    uint32_t nTime{0};\n+    uint32_t nBits{0};\n+    uint32_t nNonce{0};\n \n     //! (memory only) Sequential id assigned to distinguish order in which blocks are received.\n-    int32_t nSequenceId;\n+    int32_t nSequenceId{0};\n \n     //! (memory only) Maximum nTime in the chain up to and including this block.\n-    unsigned int nTimeMax;\n-\n-    void SetNull()\n-    {\n-        phashBlock = nullptr;\n-        pprev = nullptr;\n-        pskip = nullptr;\n-        nHeight = 0;\n-        nFile = 0;\n-        nDataPos = 0;\n-        nUndoPos = 0;\n-        nChainWork = arith_uint256();\n-        nTx = 0;\n-        nChainTx = 0;\n-        nStatus = 0;\n-        nSequenceId = 0;\n-        nTimeMax = 0;\n-\n-        nVersion       = 0;\n-        hashMerkleRoot = uint256();\n-        nTime          = 0;\n-        nBits          = 0;\n-        nNonce         = 0;\n-    }\n+    unsigned int nTimeMax{0};\n \n     CBlockIndex()\n     {\n-        SetNull();\n     }\n \n     explicit CBlockIndex(const CBlockHeader& block)\n+        : nVersion{block.nVersion},\n+          hashMerkleRoot{block.hashMerkleRoot},\n+          nTime{block.nTime},\n+          nBits{block.nBits},\n+          nNonce{block.nNonce}\n     {\n-        SetNull();\n-\n-        nVersion       = block.nVersion;\n-        hashMerkleRoot = block.hashMerkleRoot;\n-        nTime          = block.nTime;\n-        nBits          = block.nBits;\n-        nNonce         = block.nNonce;\n     }\n \n     FlatFilePos GetBlockPos() const {"
      }
    ]
  }
]