MarcoFalke,2021-11-12 07:30:40,Previous attempt: #19716 ,https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-966885144,966885144,
promag,2021-11-12 09:05:37,Concept ACK 🎉 ,https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-966937776,966937776,
hebasto,2021-11-12 15:14:50,"Concept ACK, obviously.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-967193562,967193562,
hebasto,2021-11-12 19:19:23,"Can confirm that `make -C depends libxcb` fails on a hirsute system, unfortunately.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-967365492,967365492,
hebasto,2021-11-12 19:36:29,"> Can confirm that `make -C depends libxcb` fails on a hirsute system, unfortunately.\n\nBumping `xcb_proto` version to 1.14.1 fixes the issue:\n```diff\n--- a/depends/packages/xcb_proto.mk\n+++ b/depends/packages/xcb_proto.mk\n@@ -1,8 +1,8 @@\n package=xcb_proto\n-$(package)_version=1.14\n-$(package)_download_path=https://xcb.freedesktop.org/dist\n+$(package)_version=1.14.1\n+$(package",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-967400030,967400030,
hebasto,2021-11-12 20:51:57,"To fix configuration for Android builds, the following patch could be applied:\n```diff\n--- a/build-aux/m4/bitcoin_qt.m4\n+++ b/build-aux/m4/bitcoin_qt.m4\n@@ -71,6 +71,9 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n                  [qt_lib_suffix= ]); bitcoin_qt_want_version=qt5],\n         [qt_lib_suffix= ])\n \n+  AS_CASE([$host],\n+          [*android*], [qt_lib_suffix=_$ANDROID_ARCH])\n+\n  ",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-967532811,967532811,
hebasto,2021-11-12 21:17:48,"A branch with suggested patches being applied is here: [`pr23489-1112.mod`](https://github.com/hebasto/bitcoin/commits/pr23489-1112.mod).\n\nIts CI build is here: https://cirrus-ci.com/build/5683926900408320\n\nUPDATE: maybe un-draft?\n:tiger2: ",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-967574664,967574664,
DrahtBot,2021-11-13 02:03:45,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23618](https://github.com/bitcoin/bitcoin/pull/23618) (build, qt: Ditch `no_sdk_version_check.patch` by hebasto)\n* [#23",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-967760854,967760854,
hebasto,2021-11-14 12:19:18,"To fix compatibility with glibc 2.17, the following patch could be applied:\n\n<details><summary>patch</summary>\n<p>\n\n```diff\ndiff --git a/depends/packages/qt.mk b/depends/packages/qt.mk\nindex 2235e6ec8..9ff6d8794 100644\n--- a/depends/packages/qt.mk\n+++ b/depends/packages/qt.mk\n@@ -12,6 +12,7 @@ $(package)_patches += fix_qt_pkgconfig.patch mac-qmake.conf fix_no_printer.patch\n $",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-968280134,968280134,
hebasto,2021-11-14 14:20:55,"FWIW, I was able to make all Guix builds with the suggested [patch](https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-968280134).\n\n:tiger2: ",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-968299904,968299904,
jarolrod,2021-11-14 21:48:50,"@hebasto I wanted to note that your patch for glibc compatibility looks quite intimidating, but it's just reverting a commit. \n\nWhile here, couldn't we just drop compatibility for glibc 2.17 so we don't have a need for a patch?\nGlib2.7 is ancient, the symbols introduced here would be available in glibc 2.8. Sounds reasonable to me to drop support.\n\nThis is probably contentious, so better",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-968369852,968369852,
fanquake,2021-11-15 00:03:16,"> FWIW, I was able to make all Guix builds with the suggested patch.\n\nThanks, but I don't think we'll be taking that patch.\n\n> This is probably contentious, so better left for a follow-up?\n\nYou can't leave this to a follow up unless you want Guix builds to be broken in the interim.\n\nI said in the PR description that I would be opening a separate PR to deal with the symbol issues, a",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-968395123,968395123,
hebasto,2021-11-17 08:49:25,"To following patch to a patch seems required:\n```diff\n--- a/depends/patches/qt/fix_limits_header.patch\n+++ b/depends/patches/qt/fix_limits_header.patch\n@@ -19,6 +19,17 @@ Upstream commits:\n  #include <stdlib.h>\n  #include <string.h>\n \n+--- old/qtbase/src/corelib/global/qfloat16.h\n++++ new/qtbase/src/corelib/global/qfloat16.h\n+@@ -43,6 +43,7 @@\n+ \n+ #include <QtCore/qglobal.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-971363560,971363560,
hebasto,2021-11-17 10:29:38,"nit regarding the `xcb_proto` package\n\nThe following line https://github.com/bitcoin/bitcoin/blob/d94dc69ee454144f4db12d163b15717cc6cad383/depends/packages/xcb_proto.mk#L21 is a noop, actually.\n\nAlso, after postprocessing, i.e. `find -name ""*.pyc"" -delete`, the `lib/python3.8/site-packages/xcbgen/__pycache__` becomes empty. Therefore, we can just `rm -rf lib/python3.8/site-packages/xcbgen/",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-971443154,971443154,
hebasto,2021-11-17 10:51:32,"Sorry, but I see no reasons to update the `expat` and `freetype` packages in this PR.\n\nIsn't it more reasonable to move these commits into #23495?\n\nAll in all, Qt 5.15 [expects](https://doc.qt.io/qt-5/linux-requirements.html) `freetype` 2.3.0+, and our current version is 2.7.1.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-971459075,971459075,
hebasto,2021-11-17 11:41:48,"nit: The `qt` package `configure` script for Linux hosts prints:\n```\nNote: Overriding option 'freetype' with 'system' (was: 'no')\n```\n\nSuggesting to silent this notification:\n```diff\n--- a/depends/packages/qt.mk\n+++ b/depends/packages/qt.mk\n@@ -36,7 +36,6 @@ $(package)_config_opts += -no-cups\n $(package)_config_opts += -no-egl\n $(package)_config_opts += -no-eglfs\n $(package",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-971495887,971495887,
hebasto,2021-11-17 14:43:35,"While `qt.mk` is touched, maybe explicitly mention and (self-)document platform backends?\n\n<details><summary>diff</summary>\n<p>\n\n```diff\n--- a/depends/packages/qt.mk\n+++ b/depends/packages/qt.mk\n@@ -34,7 +34,6 @@ $(package)_config_opts += -hostprefix $(build_prefix)\n $(package)_config_opts += -no-compile-examples\n $(package)_config_opts += -no-cups\n $(package)_config_opts += ",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-971648206,971648206,
fanquake,2021-11-18 06:05:43,"> To following patch to a patch seems required:\n\nIncluded. This became apparent after the recent CI updates.\n\n> Therefore, we can just rm -rf lib/python3.8/site-packages/xcbgen/__pycache__.\n\nOk, I've taken this but changed it so it will work with versions of Python other than 3.8.\n\n> Sorry, but I see no reasons to update the expat and freetype packages in this PR.\n\nThe reason t",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-972565974,972565974,
fanquake,2021-11-18 08:31:46,Needed another `<limits>` patch here.,https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-972643808,972643808,
hebasto,2021-11-18 08:58:52,"> > While qt.mk is touched, maybe explicitly mention and (self-)document platform backends?\n> \n> It's not clear the benefits of this shuffling...\n\nExplicit platform backend options grouped by platforms has two benefits:\n- they correspond with the `QPA backends` part of the `Configure summary` output of the `configure` script; that makes easy to verify options\n- it easy to reason about ",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-972662636,972662636,
hebasto,2021-11-18 11:45:36,"For new added packages I do [prefer](https://github.com/bitcoin/bitcoin/pull/22552#pullrequestreview-716036447) simply expanded variables instead of recursively expanded ones in `*mk` files.\n\nAlso it's good for readability to surround `=`, `:=`, `+=` with spaces.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-972791255,972791255,
hebasto,2021-11-18 12:12:28,Maybe integrate https://github.com/bitcoin/bitcoin/pull/22552/commits/993c15fba05ab903d8c8ba1b3d06d4090c83cd8e?,https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-972809814,972809814,
hebasto,2021-11-18 13:34:21,Note for reviewers: the neediness of the new added `libxcb_util*` packages can be easily verified with the Qt [source](https://github.com/qt/qtbase/blob/5.15.2/src/gui/configure.json#L1057-L1101) :),https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-972870554,972870554,
fanquake,2021-11-19 03:05:47,"> Maybe integrate 993c15f?\n\nDone.\n\n> For new added packages I do prefer simply expanded variables instead of recursively expanded ones in *mk files.\n\nWe haven't committed to using that style, so I'm going to stick with the existing style for now.\n\nAlso made another addition to the `<limits>` patch, which has fixed the TSan build.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-973686081,973686081,
hebasto,2021-11-19 09:31:51,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n125daa0d831ebc63ef5bce4c124b0e4c9e869de703c714f13accfa92eb76a5c3  guix-build-299b352ae658/output/aarch64-linux-gnu/SHA256SUMS.part\n2c6d25dae20cd8a0d43abe5577aea33e9eeb541226fc2cda10e705f8515b731a  guix-build-299b352ae658/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-973904855,973904855,
fanquake,2021-11-21 05:22:13,"> For Windows builds with DEBUG=1 the following patch is required:\n\nDone.\n\n> #23552, #23556\n\nPulled in these changes and will close the PRs.\n\n> consider getting rid of the fix_no_printer.patch and no_sdk_version_check.patch patches\n\nWhy? Removing `no_sdk_version_check.patch` will break the macOS cross-compile, because qt tries to invoke `xcrun`. I haven't looked at removing the",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-974758136,974758136,
hebasto,2021-11-21 07:41:08,"> > consider getting rid of the fix_no_printer.patch and no_sdk_version_check.patch patches\n> \n> Why? Removing `no_sdk_version_check.patch` will break the macOS cross-compile, because qt tries to invoke `xcrun`.\n\nYou're right. But it was needed to check because the related Qt source code was changed between 5.12.11 and 5.15.2.\n\n> I haven't looked at removing the `fix_no_printer.patch` ",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-974769787,974769787,
hebasto,2021-11-21 09:39:22,"> Still wondering if the new `missing_xcb_util_pkg_config.patch` can be avoided, because I'm able to build without it.\n\nFWIW, tested again on top of the be58159cd037aa38f872d0c705a11fcde680f55b, and was able to build `bitcoin-qt` and run it successfully.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-974783940,974783940,
hebasto,2021-11-21 10:49:19,"#### Gitian builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nb853740b1a80183d8ac18e0f8ecd1bf86c1d161bdc211ffcabd6a555bd3ae6fc  guix-build-be58159cd037/output/aarch64-linux-gnu/SHA256SUMS.part\nc705a6c4a6a28732fb751e8c766b69f902d3ea753647350cd5ae069b66570279  guix-build-be58159cd037/output/aarch64-linux-gnu/bi",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-974793381,974793381,
fanquake,2021-11-22 03:30:23,"> FWIW, tested again on top of the be58159, and was able to build bitcoin-qt and run it successfully.\n\nAfter the changes to `_dependencies` I think you are correct. I cannot recreate the failure that had me add the patch in the first place. I've dropped it for now.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-975039329,975039329,
hebasto,2021-11-22 06:12:05,"re-ACK 4e9d9c4e459f95bf90ec95b144602b3dded66bfb\n\n> After the changes to `_dependencies` I think you are correct. I cannot recreate the failure that had me add the patch in the first place. I've dropped it for now.\n\nThank you.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-975160851,975160851,
hebasto,2021-11-22 08:00:17,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\naa5627b7e50c02f1b20ff8d895343e67c66521f4a862d68e9c5697810e828887  guix-build-4e9d9c4e459f/output/aarch64-linux-gnu/SHA256SUMS.part\n5c1b9707ff00b960f1b9e1e7333fa4111b023c45851dcfef08f3185abe0b7412  guix-build-4e9d9c4e459f/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-975219833,975219833,
fanquake,2021-11-22 08:36:38,Looks like there is a reproducibility issue with a number of the Linux builds.,https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-975272002,975272002,
hebasto,2021-11-22 09:30:44,"> Looks like there is a reproducibility issue with a number of the Linux builds.\n\nAll of the Linux builds (\n\nIt was not the case before the recent push, right?\n\nAnyway, going to share my builds.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-975326118,975326118,
hebasto,2021-11-22 12:06:48,"FWIW, I got non-determinism for Linux builds on the same machine in consecutive builds. ",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-975454133,975454133,
hebasto,2021-11-22 15:53:13,"> > FWIW, tested again on top of the be58159, and was able to build bitcoin-qt and run it successfully.\n> \n> After the changes to `_dependencies` I think you are correct. I cannot recreate the failure that had me add the patch in the first place. I've dropped it for now.\n\n> Looks like there is a reproducibility issue with a number of the Linux builds.\n\nI did some tests, and in my opini",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-975665450,975665450,
DrahtBot,2021-11-22 23:19:06,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 368831371d97a642beb54b5c4eb6eb0fedaa16b4<br>(master) | commit 73f5846f250b778f3159d1876584079526abaa1f<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`5acd741e1500d6dd...`](https://drahtbot.space/guix/bitcoin/bitcoin/368831371d97a642beb54b5c4eb6eb0fedaa16b4/SHA256SUMS.part) | [`2d478f8030df97ad...`](https://,https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-976000366,976000366,
hebasto,2021-11-24 16:32:14,"As #23580 fixes build for the current Qt 5.12.11, suggesting to rebase this PR on top of it.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-978038776,978038776,
hebasto,2021-11-30 08:34:57,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nfa0409e491622514ad16d59a5ca45ca1fe15b76297a80c6b4ba71f76c7df7f12  guix-build-38c1d8322cb2/output/aarch64-linux-gnu/SHA256SUMS.part\n86aae68c498cb6b08e57d8c0e4a98e51d6306cd39bc0bf216c62075ce05f239d  guix-build-38c1d8322cb2/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-982401647,982401647,
DrahtBot,2021-11-30 09:03:19,"<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-982424243,982424243,
hebasto,2021-11-30 10:11:46,"1. From Qt sources I've made conclusion that some more modules should be added into `bitcoin_qt.m4`:\n```diff\n--- a/build-aux/m4/bitcoin_qt.m4\n+++ b/build-aux/m4/bitcoin_qt.m4\n@@ -352,6 +352,7 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_LIBS], [\n     PKG_CHECK_MODULES([QT_INPUT], [${qt_lib_prefix}InputSupport], [QT_LIBS=""$QT_INPUT_LIBS $QT_LIBS""])\n     PKG_CHECK_MODULES([QT_SERVICE], [${qt_li",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-982485721,982485721,
hebasto,2021-11-30 10:16:29,"FWIW, `libxcb_util` has an unfortunate life in Qt 5.15, for more details see:\n- https://bugreports.qt.io/browse/QTBUG-86287\n- https://bugreports.qt.io/browse/QTBUG-88688\n\nThe bug introduced in QTBUG-86287 does not affect us (even in the current state of this PR) because the `libxcb-util.so.1` is not among `ELF_ALLOWED_LIBRARIES`.",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-982489993,982489993,
luke-jr,2021-11-30 21:03:56,"Rather than patching 5.15 ourselves, maybe we should just bump to https://community.kde.org/Qt5PatchCollection ?\n\neg https://invent.kde.org/qt/qt/qtbase/-/archive/00e0ffa0297957871ad1f22626524b6bd8e87260/qtbase-00e0ffa0297957871ad1f22626524b6bd8e87260.tar.bz2",https://github.com/bitcoin/bitcoin/pull/23489#issuecomment-983018498,983018498,
hebasto,2021-11-17 11:19:43,These line are duplicated now.,https://github.com/bitcoin/bitcoin/pull/23489#discussion_r751143832,751143832,contrib/devtools/symbol-check.py
fanquake,2021-11-18 03:38:32,Fixed in next push.,https://github.com/bitcoin/bitcoin/pull/23489#discussion_r751881994,751881994,contrib/devtools/symbol-check.py
hebasto,2021-11-18 09:38:22,"nit: a diff could limited to the only line:\n```suggestion\n  $(package)_config_opts += --disable-dependency-tracking --enable-option-checking\n  $(package)_config_opts +=  --without-xmlwf\n```",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752061542,752061542,depends/packages/expat.mk
hebasto,2021-11-18 09:41:27,"Expat is not a _direct_ dependency for the `qt` package. Why not just remove this line?\n\nNote that we do not mention XCB-only dependencies here.",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752064496,752064496,doc/dependencies.md
hebasto,2021-11-18 09:59:37,EOL?,https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752080438,752080438,depends/patches/qt/fix_limits_header.patch
hebasto,2021-11-18 10:02:18,A note for reviewers: the `--without-xmlwf` option was [added](https://github.com/libexpat/libexpat/blob/08d29debaee59fc44f470e2392b78820015afcf2/expat/Changes#L479) in Release 2.2.4.,https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752082695,752082695,depends/packages/expat.mk
hebasto,2021-11-18 10:25:23,Why not 2.11.1?,https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752101612,752101612,depends/packages/freetype.mk
hebasto,2021-11-18 13:47:22,"While looking at the `./configure` log, I think the correct dependencies are:\n```suggestion\n$(package)_dependencies=libxcb xproto\n```",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752256716,752256716,depends/packages/libxcb_util_keysyms.mk
hebasto,2021-11-18 13:52:31,"While looking at the `./configure` log, I think the correct dependencies are:\n```suggestion\n$(package)_dependencies=libxcb\n```",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752261147,752261147,depends/packages/libxcb_util_render.mk
hebasto,2021-11-18 13:56:31,"While looking at the `./configure` log, I think the correct dependencies are:\n```suggestion\n$(package)_dependencies=libxcb\n```",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752264833,752264833,depends/packages/libxcb_util_wm.mk
hebasto,2021-11-18 14:25:54,"For platform plugin dependencies, the `QXcbIntegrationPlugin` is such a plugin, no static linkage required:\n```suggestion\n$(package)_config_opts=--disable-static --disable-devel-docs --without-doxygen\n```",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752292345,752292345,depends/packages/libxcb_util.mk
hebasto,2021-11-18 16:06:30,"With getting rid of a `-qt-xcb` [crutch](https://bugreports.qt.io/browse/QTBUG-74874?focusedCommentId=458897&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-458897) it's possible to drop the related workaround as well: https://github.com/bitcoin/bitcoin/blob/fe03f7a37fd0ef05149161f6b95a25493e1fe38f/build-aux/m4/bitcoin_qt.m4#L152-L153\n\nTested on Fedora 35.\n",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752394448,752394448,depends/packages/qt.mk
fanquake,2021-11-19 02:01:53,"That makes no difference to anything, but sure, done in next push.",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752809669,752809669,depends/patches/qt/fix_limits_header.patch
fanquake,2021-11-19 02:02:31,"I'm planning on cleaning this document right up, but agree that we can drop this now.",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752809930,752809930,doc/dependencies.md
fanquake,2021-11-19 02:02:42,Done.,https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752809993,752809993,depends/packages/expat.mk
fanquake,2021-11-19 02:08:39,"> Why not 2.11.1?\n\nBecause that version of freetype doesn't exist? Have moved this to 2.11.0 though.",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752811878,752811878,depends/packages/freetype.mk
fanquake,2021-11-19 02:16:55,Done.,https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752814517,752814517,depends/packages/libxcb_util.mk
fanquake,2021-11-19 02:17:14,"Dropped for now, but I haven't tested this yet.",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752814611,752814611,depends/packages/qt.mk
hebasto,2021-11-19 08:57:30,"```suggestion\n| FreeType | [2.11.0](https://download.savannah.gnu.org/releases/freetype) |  | No |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Android only) |\n```",https://github.com/bitcoin/bitcoin/pull/23489#discussion_r752982602,752982602,doc/dependencies.md
fanquake,2021-11-21 04:34:27,Fixed in next push.,https://github.com/bitcoin/bitcoin/pull/23489#discussion_r753745844,753745844,doc/dependencies.md
