[
  {
    "sha": "584a7d459c456ebd267368244c6fe2661807b3d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODRhN2Q0NTljNDU2ZWJkMjY3MzY4MjQ0YzZmZTI2NjE4MDdiM2Q2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-02-21T19:32:37Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-12-04T19:26:14Z"
      },
      "message": "Restrict timestamp when mining a diff-adjustment block to prev-600\n\nThis prepares us for a potential future timewarp-fixing softfork by\nensuring that we always refuse to mine blocks which refuse to\nexploit timewarp, no matter the behavior of other miners. Note that\nwe allow timestamp to go backwards by 600 seconds on the\ndifficulty-adjustment blocks to avoid bricking any existing\nhardware which relies on the ability to roll nTime by up to 600\nseconds.\n\nNote that it is possible that the eventual softfork to fix timewarp\nhas a looser resetriction than the 600 seconds enforced here,\nhowever it seems unlikely we will apply a tighter one, and its fine\nif we restrict things further on the mining end than in consensus.",
      "tree": {
        "sha": "6f230c6b1b3050d39ca905ccb60d0dc8bce173c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f230c6b1b3050d39ca905ccb60d0dc8bce173c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/584a7d459c456ebd267368244c6fe2661807b3d6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/584a7d459c456ebd267368244c6fe2661807b3d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/584a7d459c456ebd267368244c6fe2661807b3d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/584a7d459c456ebd267368244c6fe2661807b3d6/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 72,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6b33c1e9b0b9b6356b4d3fc4b500bc89a92643c3",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/584a7d459c456ebd267368244c6fe2661807b3d6/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/584a7d459c456ebd267368244c6fe2661807b3d6/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=584a7d459c456ebd267368244c6fe2661807b3d6",
        "patch": "@@ -29,6 +29,9 @@ int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParam\n {\n     int64_t nOldTime = pblock->nTime;\n     int64_t nNewTime = std::max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n+    if (pindexPrev->nHeight % consensusParams.DifficultyAdjustmentInterval() == consensusParams.DifficultyAdjustmentInterval() - 1) {\n+        nNewTime = std::max(nNewTime, (int64_t)pindexPrev->nTime - 600);\n+    }\n \n     if (nOldTime < nNewTime)\n         pblock->nTime = nNewTime;"
      },
      {
        "sha": "84e359450a4dd7ce99fc2021497531ba186b15f8",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/584a7d459c456ebd267368244c6fe2661807b3d6/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/584a7d459c456ebd267368244c6fe2661807b3d6/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=584a7d459c456ebd267368244c6fe2661807b3d6",
        "patch": "@@ -677,7 +677,11 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     result.pushKV(\"coinbasevalue\", (int64_t)pblock->vtx[0]->vout[0].nValue);\n     result.pushKV(\"longpollid\", ::ChainActive().Tip()->GetBlockHash().GetHex() + i64tostr(nTransactionsUpdatedLast));\n     result.pushKV(\"target\", hashTarget.GetHex());\n-    result.pushKV(\"mintime\", (int64_t)pindexPrev->GetMedianTimePast()+1);\n+    if (pindexPrev->nHeight % consensusParams.DifficultyAdjustmentInterval() == consensusParams.DifficultyAdjustmentInterval() - 1) {\n+        result.pushKV(\"mintime\", std::max((int64_t)pindexPrev->GetMedianTimePast()+1, (int64_t)pindexPrev->nTime - 600));\n+    } else {\n+        result.pushKV(\"mintime\", (int64_t)pindexPrev->GetMedianTimePast()+1);\n+    }\n     result.pushKV(\"mutable\", aMutable);\n     result.pushKV(\"noncerange\", \"00000000ffffffff\");\n     int64_t nSigOpLimit = MAX_BLOCK_SIGOPS_COST;"
      },
      {
        "sha": "5ac9faa40bd5da72c18537b1673d39bbff5e3439",
        "filename": "test/functional/mining_timewarp_fork.py",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/584a7d459c456ebd267368244c6fe2661807b3d6/test/functional/mining_timewarp_fork.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/584a7d459c456ebd267368244c6fe2661807b3d6/test/functional/mining_timewarp_fork.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_timewarp_fork.py?ref=584a7d459c456ebd267368244c6fe2661807b3d6",
        "patch": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test getblocktemplate complies with potential future timewarp-fixing\n+   softforks (modulo 600 second nTime decrease).\n+\n+   We first mine a chain up to the difficulty-adjustment block and set\n+   the last block's timestamp 2 hours in the future, then check the times\n+   returned by getblocktemplate. Note that we cannot check the actual\n+   retarget behavior as difficulty adjustments do not occur on regtest\n+   (though it still technically has a difficulty adjustment interval).\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes_bi,\n+)\n+\n+\n+class TimewarpMiningTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Create some old blocks')\n+        block_1 = node.generate(2014)[0]\n+        last_block_time = node.getblockheader(block_1)[\"time\"] + 7199\n+\n+        self.log.info('Create a block 7199 seconds in the future')\n+        node.setmocktime(last_block_time)\n+        block_2015 = node.generate(1)[0]\n+        assert_equal(node.getblockheader(block_2015)[\"time\"], last_block_time)\n+\n+        mining_info = node.getmininginfo()\n+        assert_equal(mining_info['blocks'], 2015)\n+        assert_equal(mining_info['currentblocktx'], 0)\n+        assert_equal(mining_info['currentblockweight'], 4000)\n+\n+        self.restart_node(0)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+        node = self.nodes[0]\n+\n+        self.log.info('Check that mintime and curtime are last-block - 600 seconds')\n+        # Now test that mintime and curtime are last_block_time - 600\n+        template = node.getblocktemplate({'rules': ['segwit']})\n+        assert_equal(template[\"curtime\"], last_block_time - 600)\n+        assert_equal(template[\"mintime\"], last_block_time - 600)\n+\n+        self.log.info('Generate a 2016th block and check that the next block\\'s time goes back to now')\n+        block_2016 = node.generate(1)[0]\n+        assert_equal(node.getblockheader(block_2016)[\"time\"], last_block_time - 600)\n+\n+        # Assume test doesn't take 2 hours and check that we let time jump backwards\n+        # now that we mined the difficulty-adjustment block\n+        block_2017 = node.generate(1)[0]\n+        assert(node.getblockheader(block_2017)[\"time\"] < last_block_time - 600)\n+\n+if __name__ == '__main__':\n+    TimewarpMiningTest().main()"
      },
      {
        "sha": "dce30d62829e33aa7a904e7172d576a5afeadb07",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/584a7d459c456ebd267368244c6fe2661807b3d6/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/584a7d459c456ebd267368244c6fe2661807b3d6/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=584a7d459c456ebd267368244c6fe2661807b3d6",
        "patch": "@@ -179,6 +179,7 @@\n     'rpc_bind.py --ipv6',\n     'rpc_bind.py --nonloopback',\n     'mining_basic.py',\n+    'mining_timewarp_fork.py',\n     'wallet_bumpfee.py',\n     'wallet_bumpfee_totalfee_deprecation.py',\n     'wallet_implicitsegwit.py',"
      }
    ]
  }
]