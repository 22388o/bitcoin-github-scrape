instagibbs,2018-08-27T19:50:44Z,"@sipa has NACK'd this previously when I offered a ""fix"".\n\nReasoning is something like: Txindex was used previous to Core maintaining a pruned utxo set, and thus never had use for the genesis block transaction, since it was never entered into the utxo set.\n\nI personally concept ACK, just giving background.",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-416346594,416346594,
jimpo,2018-08-27T19:53:16Z,"Even if we decide to exclude the genesis transaction from the txindex specifically, we should still fix in the BaseIndex and add an exception in the TxIndex subclass.",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-416347346,416347346,
MarcoFalke,2018-08-27T19:57:15Z,What was the previous behaviour (e.g. in version 0.15 with -txindex)?,https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-416348570,416348570,
gmaxwell,2018-08-27T23:36:03Z,"That transaction isn't really in the blockchain in almost any meaningful sense: It has no effect on the system state. e.g. it shouldn't show up in address indexing either, because although it looks spendable it's not spendable. ",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-416402571,416402571,
jimpo,2018-08-28T19:16:20Z,"@MarcoFalke ~~I'm pretty sure prior behavior was to include it in the index.~~ <- That's wrong, it was omitted from the index. I ran a 0.15.1 node to verify.",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-416707614,416707614,
sipa,2018-08-28T20:24:25Z,"The genesis transaction was never included in any index, intentionally.",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-416728020,416728020,
luke-jr,2018-08-30T13:06:04Z,"IMO, a merkle root of `4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b` indicates the block has 0 transactions. ;)",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-417312383,417312383,
laanwj,2018-08-31T20:38:26Z,~0 on this,https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-417782919,417782919,
DrahtBot,2018-08-31T23:09:46Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14121](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14121.html) (Index for BIP 157 block filters by jimpo)\n",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-417810814,417810814,
sipa,2018-11-10T03:55:48Z,"~0 on this as well - it could be considered if there is ever an indexer that needs to observe the genesis block somehow, but I don't see why that would be the case.",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-437556048,437556048,
jimpo,2018-11-10T18:19:00Z,"@sipa The block filter headers commit the the filter header of the previous block and BIP 157 defines a filter header for the genesis block, which is the motivation for this PR. The BIP could be amended to define the filter header of the genesis as 0, but I feel like this is a silly reason to change the BIP. Also, the genesis block is a block -- it's very unintuitive to me that it would get skippe",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-437604931,437604931,
sipa,2018-11-10T18:34:29Z,"@jimpo I see, that's a perfectly good reason. There is no restriction on downloading the genesis block either.",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-437607011,437607011,
sipa,2018-11-11T03:07:15Z,utACK ed12d5df1ba52b5ef3dd3799de26bb5e1d3fc654,https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-437639893,437639893,
jonasschnelli,2018-11-11T10:55:21Z,utACK ed12d5df,https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-437660129,437660129,
jamesob,2018-12-11T03:20:33Z,utACK https://github.com/bitcoin/bitcoin/commit/ed12d5df1ba52b5ef3dd3799de26bb5e1d3fc654,https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-446058316,446058316,
luke-jr,2018-12-19T18:14:13Z,@jimpo The genesis block de facto has ZERO transactions. IMO it is a bug in BIP 157 if it considers that it does.,https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-448692905,448692905,
jimpo,2018-12-22T04:21:05Z,"@luke-jr Per BIP 157, the genesis block does have a filter and it has a single element, an output. Since this output is unspendable, this does seem like a bug on reflection. Would everyone be happier if I change BIP 157 so that there is no filter for the genesis block and it's filter header becomes 0x00{32}?\n\n@roasbeef",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-449543962,449543962,
laanwj,2019-01-03T20:57:28Z,"This has enough (ut)ACKs, but the last post makes it unclear to me whether to merge this now, probably better to wait for BIP clarification or not?",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-451274762,451274762,
Roasbeef,2019-01-03T22:04:21Z,"@jimpo I don't see a good reason to modify the format of the filters this late in the cycle. A number of individuals are already running BIP 157/158 on mainnet as other full node implementations are already able to serve them. I think we all understand that the genesis block is unspendable, but it _does_ in fact have transactions, though they don't modify the UTXO set. Why add another special case",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-451292145,451292145,
jimpo,2019-01-06T20:07:41Z,"@laanwj I think the BIP is fine and I haven't heard serious objections. I think this should get merged and if there is a call to change the genesis filter in the BIP it's a one-line change (similar to what was done with txindex). I still think 100% that the base index should not skip the genesis block, which is the main thing this fixes.",https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-451770486,451770486,
jamesob,2019-01-08T20:09:43Z,This is ready for merge IMO.,https://github.com/bitcoin/bitcoin/pull/14085#issuecomment-452434791,452434791,
