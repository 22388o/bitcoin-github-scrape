fanquake,2018-04-16T07:59:05Z,"@practicalswift Can you include some more information about recreating this? I've done a naive:\n```\n./autogen.sh && ./configure --with-sanitizers=thread && make check -j6\n```\n(macOS 10.13.4 with XCode 9.3) and am having trouble recreating the issue.",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-381512869,381512869,
practicalswift,2018-04-16T09:04:43Z,"@fanquake I just verified using clang version 7.0.0 (trunk) under Linux using the following commands:\n\n```\n$ git clone https://github.com/bitcoin/bitcoin\n$ cd bitcoin/\n$ ./autogen.sh\n$ CC=clang-7 CXX=clang++-7 ./configure --disable-asm --enable-debug --with-sanitizers=thread --disable-wallet\n$ make check\n…\nSUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) (/root",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-381530619,381530619,
practicalswift,2018-04-16T19:32:08Z,"@sipa As a fellow friend of the sanitizers (#9743, #9512), would you mind reviewing this one? :-)",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-381722069,381722069,
MarcoFalke,2018-04-16T20:02:03Z,It could help reviewers if you explained why it is a deadlock in the OP and then also describe why your patch fixes it.,https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-381730803,381730803,
practicalswift,2018-04-16T20:31:57Z,"@MarcoFalke Ah, sorry: the reason for the potential deadlock warning (lock-order-inversion) is simply that the lock order between `cs_main` and `foo->cs_sendProcessing` differed between tests prior to this commit.\n\nAfter this commit the following lock order is used:\n\n```\n1. LOCK(cs_main);\n2. LOCK(foo->cs_sendProcessing);\n```\n\nPrior to this commit the following lock order was also",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-381739345,381739345,
fanquake,2018-04-17T05:08:31Z,"Thanks @practicalswift.\nI've recreated the potential deadlock on Ubuntu using clang 6.0.0-1ubuntu2 (tags/RELEASE_600/final):\n```\nRunning tests: DoS_tests from test/DoS_tests.cpp\nRunning 6 test cases...\nEntering test module ""Bitcoin Test Suite""\ntest/DoS_tests.cpp(45): Entering test suite ""DoS_tests""\ntest/DoS_tests.cpp(55): Entering test case ""outbound_slow_chain_eviction""\ntest/DoS_t",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-381843635,381843635,
MarcoFalke,2018-04-17T13:23:48Z,So what exactly needs `cs_sendProcessing` and why is it not scoped on that?,https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-381990661,381990661,
practicalswift,2018-04-17T13:58:01Z,"@MarcoFalke `SendMessages(…)` requires holding `cs_sendProcessing`, right?",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382002331,382002331,
MarcoFalke,2018-04-17T14:10:04Z,"Can't vouch for that, but it seems so.",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382006441,382006441,
MarcoFalke,2018-04-18T19:57:36Z,@practicalswift Mind to update according to my suggestion?,https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382509922,382509922,
practicalswift,2018-04-18T22:27:02Z,"@MarcoFalke Do you mean with more narrowly scoped locks? Something like this?\n\n```diff\ndiff --git a/src/net_processing.h b/src/net_processing.h\nindex 195d0d2..6802887 100644\n--- a/src/net_processing.h\n+++ b/src/net_processing.h\n@@ -72,7 +72,7 @@ public:\n     * @param[in]   interrupt       Interrupt condition for processing threads\n     * @return                      True if there",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382548861,382548861,
MarcoFalke,2018-04-19T14:56:48Z,"@practicalswift Looks very verbose, but fine to me. Shouldn't hurt to document the locking assumtions in tests?",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382767812,382767812,
practicalswift,2018-04-19T15:04:35Z,"@MarcoFalke Do you have an example on how to document the locking assumption in the tests?\n\nThat is beyond the suggested documentation in form of the annotation:\n\n```\nbool SendMessages(CNode* pto, std::atomic<bool>& interrupt) override \n    EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n```",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382770649,382770649,
MarcoFalke,2018-04-19T15:05:55Z,I think your suggested diff is fine,https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382771150,382771150,
practicalswift,2018-04-19T15:15:46Z,@MarcoFalke Applied. Please review :-),https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382774521,382774521,
practicalswift,2018-04-19T16:41:37Z,@MarcoFalke Thanks! Please review updated version :-),https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382802716,382802716,
MarcoFalke,2018-04-19T21:04:32Z,utACK 640523f77882c655ade8373eea1062691bf72b98,https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-382880272,382880272,
practicalswift,2018-05-14T13:27:16Z,@promag @laanwj @fanquake Would you mind reviewing? :-),https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-388815843,388815843,
DrahtBot,2018-06-12T16:51:50Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-396659322,396659322,
practicalswift,2018-06-12T19:46:13Z,Rebased! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-396710549,396710549,
sipa,2018-06-27T02:32:20Z,utACK 9fdf05d70cac4a62d1aeeb4299e2c3a9a866f8af,https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-400523367,400523367,
MarcoFalke,2018-06-27T10:30:23Z,utACK 9fdf05d70cac4a62d1aeeb4299e2c3a9a866f8af,https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-400623690,400623690,
MarcoFalke,2018-07-14T13:52:04Z,"Can we enable this in travis, so it wouldn't happen again, please?",https://github.com/bitcoin/bitcoin/pull/12882#issuecomment-405025055,405025055,
MarcoFalke,2018-04-19T16:21:58Z,"nit: Seems you already locked `cs_main` in the first line of the test case, so a `LOCK(dummyNode1.cs_sendProcessing);` should suffice",https://github.com/bitcoin/bitcoin/pull/12882#discussion_r182805847,182805847,src/test/DoS_tests.cpp
practicalswift,2018-04-20T08:00:40Z,Fixed!,https://github.com/bitcoin/bitcoin/pull/12882#discussion_r182973333,182973333,src/test/DoS_tests.cpp
