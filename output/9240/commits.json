[
  {
    "sha": "bf663f8e93454fdc7c77e298586cefbb4488ee4c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjY2M2Y4ZTkzNDU0ZmRjN2M3N2UyOTg1ODZjZWZiYjQ0ODhlZTRj",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-29T22:15:12Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-12-05T18:41:25Z"
      },
      "message": "remove external usage of mempool conflict tracking",
      "tree": {
        "sha": "182fbaf198dd64cf6287eb151d5bd34931c1e5be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/182fbaf198dd64cf6287eb151d5bd34931c1e5be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf663f8e93454fdc7c77e298586cefbb4488ee4c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf663f8e93454fdc7c77e298586cefbb4488ee4c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf663f8e93454fdc7c77e298586cefbb4488ee4c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf663f8e93454fdc7c77e298586cefbb4488ee4c/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d5d44969b4ab46a5146a46b4ed1ed7704d71c63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d5d44969b4ab46a5146a46b4ed1ed7704d71c63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d5d44969b4ab46a5146a46b4ed1ed7704d71c63"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 7,
      "deletions": 13
    },
    "files": [
      {
        "sha": "2fb56e172f08a72601cb8db6ab2b5962b6427cd3",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf663f8e93454fdc7c77e298586cefbb4488ee4c/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf663f8e93454fdc7c77e298586cefbb4488ee4c/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=bf663f8e93454fdc7c77e298586cefbb4488ee4c",
        "patch": "@@ -412,7 +412,7 @@ BOOST_AUTO_TEST_CASE(MempoolAncestorIndexingTest)\n     /* after tx6 is mined, tx7 should move up in the sort */\n     std::vector<CTransactionRef> vtx;\n     vtx.push_back(MakeTransactionRef(tx6));\n-    pool.removeForBlock(vtx, 1, NULL, false);\n+    pool.removeForBlock(vtx, 1);\n \n     sortedOrder.erase(sortedOrder.begin()+1);\n     sortedOrder.pop_back();"
      },
      {
        "sha": "3bea0e4fbd6d2a51c1f3c43be2fb4b4076e1108c",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf663f8e93454fdc7c77e298586cefbb4488ee4c/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf663f8e93454fdc7c77e298586cefbb4488ee4c/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=bf663f8e93454fdc7c77e298586cefbb4488ee4c",
        "patch": "@@ -597,7 +597,7 @@ void CTxMemPool::removeConflicts(const CTransaction &tx, std::vector<CTransactio\n  * Called when a block is connected. Removes from mempool and updates the miner fee estimator.\n  */\n void CTxMemPool::removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight,\n-                                std::vector<CTransactionRef>* conflicts, bool fCurrentEstimate)\n+                                bool fCurrentEstimate)\n {\n     LOCK(cs);\n     std::vector<CTxMemPoolEntry> entries;\n@@ -617,7 +617,7 @@ void CTxMemPool::removeForBlock(const std::vector<CTransactionRef>& vtx, unsigne\n             stage.insert(it);\n             RemoveStaged(stage, true);\n         }\n-        removeConflicts(*tx, conflicts);\n+        removeConflicts(*tx);\n         ClearPrioritisation(tx->GetHash());\n     }\n     // After the txs in the new block have been removed from the mempool, update policy estimates"
      },
      {
        "sha": "2f40981455eb2fcecf14a4731f1ee1931a3f0d2c",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf663f8e93454fdc7c77e298586cefbb4488ee4c/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf663f8e93454fdc7c77e298586cefbb4488ee4c/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=bf663f8e93454fdc7c77e298586cefbb4488ee4c",
        "patch": "@@ -531,7 +531,7 @@ class CTxMemPool\n     void removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight, int flags);\n     void removeConflicts(const CTransaction &tx, std::vector<CTransactionRef>* removed = NULL);\n     void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight,\n-                        std::vector<CTransactionRef>* conflicts = NULL, bool fCurrentEstimate = true);\n+                        bool fCurrentEstimate = true);\n     void clear();\n     void _clear(); //lock free\n     bool CompareDepthAndScore(const uint256& hasha, const uint256& hashb);"
      },
      {
        "sha": "a6377f03156ffd9f4bb6429151df289982429b98",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf663f8e93454fdc7c77e298586cefbb4488ee4c/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf663f8e93454fdc7c77e298586cefbb4488ee4c/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=bf663f8e93454fdc7c77e298586cefbb4488ee4c",
        "patch": "@@ -2153,11 +2153,10 @@ static int64_t nTimeChainState = 0;\n static int64_t nTimePostConnect = 0;\n \n /**\n- * Used to track conflicted transactions removed from mempool and transactions\n- * applied to the UTXO state as a part of a single ActivateBestChainStep call.\n+ * Used to track blocks whose transactions were applied to the UTXO state as a\n+ * part of a single ActivateBestChainStep call.\n  */\n struct ConnectTrace {\n-    std::vector<CTransactionRef> txConflicted;\n     std::vector<std::pair<CBlockIndex*, std::shared_ptr<const CBlock> > > blocksConnected;\n };\n \n@@ -2208,7 +2207,7 @@ bool static ConnectTip(CValidationState& state, const CChainParams& chainparams,\n     int64_t nTime5 = GetTimeMicros(); nTimeChainState += nTime5 - nTime4;\n     LogPrint(\"bench\", \"  - Writing chainstate: %.2fms [%.2fs]\\n\", (nTime5 - nTime4) * 0.001, nTimeChainState * 0.000001);\n     // Remove conflicting transactions from the mempool.;\n-    mempool.removeForBlock(blockConnecting.vtx, pindexNew->nHeight, &connectTrace.txConflicted, !IsInitialBlockDownload());\n+    mempool.removeForBlock(blockConnecting.vtx, pindexNew->nHeight, !IsInitialBlockDownload());\n     // Update chainActive & related variables.\n     UpdateTip(pindexNew, chainparams);\n \n@@ -2433,11 +2432,6 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n \n         // throw all transactions though the signal-interface\n         // while _not_ holding the cs_main lock\n-        for (const auto& tx : connectTrace.txConflicted)\n-        {\n-            GetMainSignals().SyncTransaction(*tx, pindexNewTip, CMainSignals::SYNC_TRANSACTION_NOT_IN_BLOCK);\n-        }\n-        // ... and about transactions that got confirmed:\n         for (const auto& pair : connectTrace.blocksConnected) {\n             assert(pair.second);\n             const CBlock& block = *(pair.second);"
      }
    ]
  },
  {
    "sha": "a874ab5ccf7839edb445830f81591fa608d85fa6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODc0YWI1Y2NmNzgzOWVkYjQ0NTgzMGY4MTU5MWZhNjA4ZDg1ZmE2",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-29T22:51:26Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-12-05T18:41:25Z"
      },
      "message": "remove internal tracking of mempool conflicts for reporting to wallet",
      "tree": {
        "sha": "b041fb44aea7e908b057a9ced215c3ad39941db9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b041fb44aea7e908b057a9ced215c3ad39941db9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a874ab5ccf7839edb445830f81591fa608d85fa6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a874ab5ccf7839edb445830f81591fa608d85fa6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a874ab5ccf7839edb445830f81591fa608d85fa6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a874ab5ccf7839edb445830f81591fa608d85fa6/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf663f8e93454fdc7c77e298586cefbb4488ee4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf663f8e93454fdc7c77e298586cefbb4488ee4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf663f8e93454fdc7c77e298586cefbb4488ee4c"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 29,
      "deletions": 32
    },
    "files": [
      {
        "sha": "7478758f73f0b6100fad53b59d8a285da515022f",
        "filename": "src/test/blockencodings_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a874ab5ccf7839edb445830f81591fa608d85fa6/src/test/blockencodings_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a874ab5ccf7839edb445830f81591fa608d85fa6/src/test/blockencodings_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockencodings_tests.cpp?ref=a874ab5ccf7839edb445830f81591fa608d85fa6",
        "patch": "@@ -80,9 +80,9 @@ BOOST_AUTO_TEST_CASE(SimpleRoundTripTest)\n \n         BOOST_CHECK_EQUAL(pool.mapTx.find(block.vtx[2]->GetHash())->GetSharedTx().use_count(), SHARED_TX_OFFSET + 1);\n \n-        std::vector<CTransactionRef> removed;\n-        pool.removeRecursive(*block.vtx[2], &removed);\n-        BOOST_CHECK_EQUAL(removed.size(), 1);\n+        size_t poolSize = pool.size();\n+        pool.removeRecursive(*block.vtx[2]);\n+        BOOST_CHECK_EQUAL(pool.size(), poolSize - 1);\n \n         CBlock block2;\n         std::vector<CTransactionRef> vtx_missing;"
      },
      {
        "sha": "bdd6eaf5388c420b133c5e9795301c4369f29443",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 19,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a874ab5ccf7839edb445830f81591fa608d85fa6/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a874ab5ccf7839edb445830f81591fa608d85fa6/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=a874ab5ccf7839edb445830f81591fa608d85fa6",
        "patch": "@@ -55,17 +55,17 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n \n \n     CTxMemPool testPool(CFeeRate(0));\n-    std::vector<CTransactionRef> removed;\n \n     // Nothing in pool, remove should do nothing:\n-    testPool.removeRecursive(txParent, &removed);\n-    BOOST_CHECK_EQUAL(removed.size(), 0);\n+    unsigned int poolSize = testPool.size();\n+    testPool.removeRecursive(txParent);\n+    BOOST_CHECK_EQUAL(testPool.size(), poolSize);\n \n     // Just the parent:\n     testPool.addUnchecked(txParent.GetHash(), entry.FromTx(txParent));\n-    testPool.removeRecursive(txParent, &removed);\n-    BOOST_CHECK_EQUAL(removed.size(), 1);\n-    removed.clear();\n+    poolSize = testPool.size();\n+    testPool.removeRecursive(txParent);\n+    BOOST_CHECK_EQUAL(testPool.size(), poolSize - 1);\n     \n     // Parent, children, grandchildren:\n     testPool.addUnchecked(txParent.GetHash(), entry.FromTx(txParent));\n@@ -75,19 +75,21 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n         testPool.addUnchecked(txGrandChild[i].GetHash(), entry.FromTx(txGrandChild[i]));\n     }\n     // Remove Child[0], GrandChild[0] should be removed:\n-    testPool.removeRecursive(txChild[0], &removed);\n-    BOOST_CHECK_EQUAL(removed.size(), 2);\n-    removed.clear();\n+    poolSize = testPool.size();\n+    testPool.removeRecursive(txChild[0]);\n+    BOOST_CHECK_EQUAL(testPool.size(), poolSize - 2);\n     // ... make sure grandchild and child are gone:\n-    testPool.removeRecursive(txGrandChild[0], &removed);\n-    BOOST_CHECK_EQUAL(removed.size(), 0);\n-    testPool.removeRecursive(txChild[0], &removed);\n-    BOOST_CHECK_EQUAL(removed.size(), 0);\n+    poolSize = testPool.size();\n+    testPool.removeRecursive(txGrandChild[0]);\n+    BOOST_CHECK_EQUAL(testPool.size(), poolSize);\n+    poolSize = testPool.size();\n+    testPool.removeRecursive(txChild[0]);\n+    BOOST_CHECK_EQUAL(testPool.size(), poolSize);\n     // Remove parent, all children/grandchildren should go:\n-    testPool.removeRecursive(txParent, &removed);\n-    BOOST_CHECK_EQUAL(removed.size(), 5);\n+    poolSize = testPool.size();\n+    testPool.removeRecursive(txParent);\n+    BOOST_CHECK_EQUAL(testPool.size(), poolSize - 5);\n     BOOST_CHECK_EQUAL(testPool.size(), 0);\n-    removed.clear();\n \n     // Add children and grandchildren, but NOT the parent (simulate the parent being in a block)\n     for (int i = 0; i < 3; i++)\n@@ -97,10 +99,10 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     }\n     // Now remove the parent, as might happen if a block-re-org occurs but the parent cannot be\n     // put into the mempool (maybe because it is non-standard):\n-    testPool.removeRecursive(txParent, &removed);\n-    BOOST_CHECK_EQUAL(removed.size(), 6);\n+    poolSize = testPool.size();\n+    testPool.removeRecursive(txParent);\n+    BOOST_CHECK_EQUAL(testPool.size(), poolSize - 6);\n     BOOST_CHECK_EQUAL(testPool.size(), 0);\n-    removed.clear();\n }\n \n template<typename name>"
      },
      {
        "sha": "4334ebde6dd3060585fabbf91ab85fa1dfbb23a5",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a874ab5ccf7839edb445830f81591fa608d85fa6/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a874ab5ccf7839edb445830f81591fa608d85fa6/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=a874ab5ccf7839edb445830f81591fa608d85fa6",
        "patch": "@@ -503,7 +503,7 @@ void CTxMemPool::CalculateDescendants(txiter entryit, setEntries &setDescendants\n     }\n }\n \n-void CTxMemPool::removeRecursive(const CTransaction &origTx, std::vector<CTransactionRef>* removed)\n+void CTxMemPool::removeRecursive(const CTransaction &origTx)\n {\n     // Remove transaction from memory pool\n     {\n@@ -530,11 +530,6 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, std::vector<CTransa\n         BOOST_FOREACH(txiter it, txToRemove) {\n             CalculateDescendants(it, setAllRemoves);\n         }\n-        if (removed) {\n-            BOOST_FOREACH(txiter it, setAllRemoves) {\n-                removed->emplace_back(it->GetSharedTx());\n-            }\n-        }\n         RemoveStaged(setAllRemoves, false);\n     }\n }\n@@ -576,7 +571,7 @@ void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMem\n     RemoveStaged(setAllRemoves, false);\n }\n \n-void CTxMemPool::removeConflicts(const CTransaction &tx, std::vector<CTransactionRef>* removed)\n+void CTxMemPool::removeConflicts(const CTransaction &tx)\n {\n     // Remove transactions which depend on inputs of tx, recursively\n     LOCK(cs);\n@@ -586,7 +581,7 @@ void CTxMemPool::removeConflicts(const CTransaction &tx, std::vector<CTransactio\n             const CTransaction &txConflict = *it->second;\n             if (txConflict != tx)\n             {\n-                removeRecursive(txConflict, removed);\n+                removeRecursive(txConflict);\n                 ClearPrioritisation(txConflict.GetHash());\n             }\n         }"
      },
      {
        "sha": "8a935391de21eeb296ddbe77fa26b72856614f65",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a874ab5ccf7839edb445830f81591fa608d85fa6/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a874ab5ccf7839edb445830f81591fa608d85fa6/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=a874ab5ccf7839edb445830f81591fa608d85fa6",
        "patch": "@@ -527,9 +527,9 @@ class CTxMemPool\n     bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate = true);\n     bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate = true);\n \n-    void removeRecursive(const CTransaction &tx, std::vector<CTransactionRef>* removed = NULL);\n+    void removeRecursive(const CTransaction &tx);\n     void removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight, int flags);\n-    void removeConflicts(const CTransaction &tx, std::vector<CTransactionRef>* removed = NULL);\n+    void removeConflicts(const CTransaction &tx);\n     void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight,\n                         bool fCurrentEstimate = true);\n     void clear();"
      }
    ]
  }
]