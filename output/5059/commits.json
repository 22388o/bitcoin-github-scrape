[
  {
    "sha": "e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDFhNzkzOWQzYTNiMjMxZjY4YWUyZjM2Y2JjNGRlMGNmNGQ0OTk5",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-10-07T17:11:48Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-10-09T14:25:30Z"
      },
      "message": "Refactor -alertnotify code\n\nRefactor common -alertnotify code into static CAlert::Notify method.",
      "tree": {
        "sha": "4abe870bb84c4667b4b901f458457cca7b620029",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4abe870bb84c4667b4b901f458457cca7b620029"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlQ2mtoACgkQdYgkL74406ichgCfXGiplcxxyAtTqDuVv4ijWcaL\nJpgAn0KQPR8bfdSZ/vyJzIqh9570a+D0\n=7eXr\n-----END PGP SIGNATURE-----",
        "payload": "tree 4abe870bb84c4667b4b901f458457cca7b620029\nparent 7c6cbff0e52d4b69fd823426341a4d62d29b2c16\nauthor Gavin Andresen <gavinandresen@gmail.com> 1412701908 -0400\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1412864730 -0400\n\nRefactor -alertnotify code\n\nRefactor common -alertnotify code into static CAlert::Notify method.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c6cbff0e52d4b69fd823426341a4d62d29b2c16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c6cbff0e52d4b69fd823426341a4d62d29b2c16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c6cbff0e52d4b69fd823426341a4d62d29b2c16"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 26,
      "deletions": 25
    },
    "files": [
      {
        "sha": "d495849206d46a7cccf6bd168456347b358b0310",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 16,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
        "patch": "@@ -233,25 +233,30 @@ bool CAlert::ProcessAlert(bool fThread)\n         if(AppliesToMe())\n         {\n             uiInterface.NotifyAlertChanged(GetHash(), CT_NEW);\n-            std::string strCmd = GetArg(\"-alertnotify\", \"\");\n-            if (!strCmd.empty())\n-            {\n-                // Alert text should be plain ascii coming from a trusted source, but to\n-                // be safe we first strip anything not in safeChars, then add single quotes around\n-                // the whole string before passing it to the shell:\n-                std::string singleQuote(\"'\");\n-                std::string safeStatus = SanitizeString(strStatusBar);\n-                safeStatus = singleQuote+safeStatus+singleQuote;\n-                boost::replace_all(strCmd, \"%s\", safeStatus);\n-\n-                if (fThread)\n-                    boost::thread t(runCommand, strCmd); // thread runs free\n-                else\n-                    runCommand(strCmd);\n-            }\n+            Notify(strStatusBar, fThread);\n         }\n     }\n \n     LogPrint(\"alert\", \"accepted alert %d, AppliesToMe()=%d\\n\", nID, AppliesToMe());\n     return true;\n }\n+\n+void\n+CAlert::Notify(const std::string& strMessage, bool fThread)\n+{\n+    std::string strCmd = GetArg(\"-alertnotify\", \"\");\n+    if (strCmd.empty()) return;\n+\n+    // Alert text should be plain ascii coming from a trusted source, but to\n+    // be safe we first strip anything not in safeChars, then add single quotes around\n+    // the whole string before passing it to the shell:\n+    std::string singleQuote(\"'\");\n+    std::string safeStatus = SanitizeString(strMessage);\n+    safeStatus = singleQuote+safeStatus+singleQuote;\n+    boost::replace_all(strCmd, \"%s\", safeStatus);\n+\n+    if (fThread)\n+        boost::thread t(runCommand, strCmd); // thread runs free\n+    else\n+        runCommand(strCmd);\n+}"
      },
      {
        "sha": "ba3235858dbb79b0448b6d5e9d73da6bf117deb6",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
        "patch": "@@ -101,7 +101,8 @@ class CAlert : public CUnsignedAlert\n     bool AppliesToMe() const;\n     bool RelayTo(CNode* pnode) const;\n     bool CheckSignature() const;\n-    bool ProcessAlert(bool fThread = true);\n+    bool ProcessAlert(bool fThread = true); // fThread means run -alertnotify in a free-running thread\n+    static void Notify(const std::string& strMessage, bool fThread);\n \n     /*\n      * Get copy of (active) alert object by hash. Returns a null alert if it is not found."
      },
      {
        "sha": "106c336a83586983359a525ac2fdf506e1c29008",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
        "patch": "@@ -1178,14 +1178,9 @@ void CheckForkWarningConditions()\n     {\n         if (!fLargeWorkForkFound)\n         {\n-            std::string strCmd = GetArg(\"-alertnotify\", \"\");\n-            if (!strCmd.empty())\n-            {\n-                std::string warning = std::string(\"'Warning: Large-work fork detected, forking after block \") +\n-                                      pindexBestForkBase->phashBlock->ToString() + std::string(\"'\");\n-                boost::replace_all(strCmd, \"%s\", warning);\n-                boost::thread t(runCommand, strCmd); // thread runs free\n-            }\n+            std::string warning = std::string(\"'Warning: Large-work fork detected, forking after block \") +\n+                pindexBestForkBase->phashBlock->ToString() + std::string(\"'\");\n+            CAlert::Notify(warning, true);\n         }\n         if (pindexBestForkTip)\n         {"
      }
    ]
  },
  {
    "sha": "dbca89b74b76610331d21656cd6747f5bf8375d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmNhODliNzRiNzY2MTAzMzFkMjE2NTZjZDY3NDdmNWJmODM3NWQ2",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-10-07T18:22:58Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-10-09T14:28:27Z"
      },
      "message": "Trigger -alertnotify if network is upgrading without you\n\nThis adds a -regetest-only undocumented (for regression testing only)\ncommand-line option -blockversion=N to set block.nVersion.\n\nAdds to the \"has the rest of the network upgraded to a\nblock.nVersion we don't understand\" code so it calls\n-alertnotify when 51 of the last 100 blocks are up-version.\nBut it only alerts once, not with every subsequent new, upversion\nblock.\n\nAnd adds a forknotify.py regression test to make sure it works.\n\nTested using forknotify.py:\n\nBefore adding CAlert::Notify, get:\nAssertion failed: -alertnotify did not warn of up-version blocks\n\nBefore adding code to only alert once:\nAssertion failed: -alertnotify excessive warning of up-version blocks\n\nAfter final code in this pull:\nTests successful",
      "tree": {
        "sha": "aaf91b54261aa4f57654367a3ee4fe96454bb784",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aaf91b54261aa4f57654367a3ee4fe96454bb784"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbca89b74b76610331d21656cd6747f5bf8375d6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlQ2m40ACgkQdYgkL74406h4XACggV7bASup0oBR7sWQb+9FwDrk\nOnIAn2M6F6qI3CQ6iNLSIA1q3nV3mQO3\n=gNJh\n-----END PGP SIGNATURE-----",
        "payload": "tree aaf91b54261aa4f57654367a3ee4fe96454bb784\nparent e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999\nauthor Gavin Andresen <gavinandresen@gmail.com> 1412706178 -0400\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1412864907 -0400\n\nTrigger -alertnotify if network is upgrading without you\n\nThis adds a -regetest-only undocumented (for regression testing only)\ncommand-line option -blockversion=N to set block.nVersion.\n\nAdds to the \"has the rest of the network upgraded to a\nblock.nVersion we don't understand\" code so it calls\n-alertnotify when 51 of the last 100 blocks are up-version.\nBut it only alerts once, not with every subsequent new, upversion\nblock.\n\nAnd adds a forknotify.py regression test to make sure it works.\n\nTested using forknotify.py:\n\nBefore adding CAlert::Notify, get:\nAssertion failed: -alertnotify did not warn of up-version blocks\n\nBefore adding code to only alert once:\nAssertion failed: -alertnotify excessive warning of up-version blocks\n\nAfter final code in this pull:\nTests successful\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbca89b74b76610331d21656cd6747f5bf8375d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbca89b74b76610331d21656cd6747f5bf8375d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbca89b74b76610331d21656cd6747f5bf8375d6/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e01a7939d3a3b231f68ae2f36cbc4de0cf4d4999"
      }
    ],
    "stats": {
      "total": 78,
      "additions": 77,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1ef47d77f4d13043303dc9cb421d60a2fd3d1fb5",
        "filename": "qa/pull-tester/build-tests.sh.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbca89b74b76610331d21656cd6747f5bf8375d6/qa/pull-tester/build-tests.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbca89b74b76610331d21656cd6747f5bf8375d6/qa/pull-tester/build-tests.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/build-tests.sh.in?ref=dbca89b74b76610331d21656cd6747f5bf8375d6",
        "patch": "@@ -75,6 +75,7 @@ make check\n # Run RPC integration test on Linux:\n @abs_top_srcdir@/qa/rpc-tests/wallet.sh @abs_top_srcdir@/linux-build/src\n @abs_top_srcdir@/qa/rpc-tests/listtransactions.py --srcdir @abs_top_srcdir@/linux-build/src\n+@abs_top_srcdir@/qa/rpc-tests/forknotify.py --srcdir @abs_top_srcdir@/linux-build/src\n # Clean up cache/ directory that the python regression tests create\n rm -rf cache\n "
      },
      {
        "sha": "a482f7cc5ad6725e78ae57473c1dc56b9b306590",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbca89b74b76610331d21656cd6747f5bf8375d6/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbca89b74b76610331d21656cd6747f5bf8375d6/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=dbca89b74b76610331d21656cd6747f5bf8375d6",
        "patch": "@@ -0,0 +1,65 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test -alertnotify \n+#\n+\n+from test_framework import BitcoinTestFramework\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+import os\n+import shutil\n+\n+class ForkNotifyTest(BitcoinTestFramework):\n+\n+    alert_filename = None  # Set by setup_network\n+\n+    def setup_network(self, test_dir):\n+        nodes = []\n+        self.alert_filename = os.path.join(test_dir, \"alert.txt\")\n+        with open(self.alert_filename, 'w') as f:\n+            pass  # Just open then close to create zero-length file\n+        nodes.append(start_node(0, test_dir,\n+                            [\"-blockversion=2\", \"-alertnotify=echo %s >> '\" + self.alert_filename + \"'\"]))\n+        # Node1 mines block.version=211 blocks\n+        nodes.append(start_node(1, test_dir,\n+                                [\"-blockversion=211\"]))\n+        connect_nodes(nodes[1], 0)\n+\n+        sync_blocks(nodes)\n+        return nodes\n+        \n+\n+    def run_test(self, nodes):\n+        # Mine 51 up-version blocks\n+        nodes[1].setgenerate(True, 51)\n+        sync_blocks(nodes)\n+        # -alertnotify should trigger on the 51'st,\n+        # but mine and sync another to give\n+        # -alertnotify time to write\n+        nodes[1].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+        with open(self.alert_filename, 'r') as f:\n+            alert_text = f.read()\n+\n+        if len(alert_text) == 0:\n+            raise AssertionError(\"-alertnotify did not warn of up-version blocks\")\n+\n+        # Mine more up-version blocks, should not get more alerts:\n+        nodes[1].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+        nodes[1].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+        with open(self.alert_filename, 'r') as f:\n+            alert_text2 = f.read()\n+\n+        if alert_text != alert_text2:\n+            raise AssertionError(\"-alertnotify excessive warning of up-version blocks\")\n+\n+if __name__ == '__main__':\n+    ForkNotifyTest().main()"
      },
      {
        "sha": "43b81aaef83705f7db0afa7b9e4d626cdf93e799",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbca89b74b76610331d21656cd6747f5bf8375d6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbca89b74b76610331d21656cd6747f5bf8375d6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dbca89b74b76610331d21656cd6747f5bf8375d6",
        "patch": "@@ -1755,7 +1755,8 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n     cvBlockChange.notify_all();\n \n     // Check the version of the last 100 blocks to see if we need to upgrade:\n-    if (!IsInitialBlockDownload())\n+    static bool fWarned = false;\n+    if (!IsInitialBlockDownload() && !fWarned)\n     {\n         int nUpgraded = 0;\n         const CBlockIndex* pindex = chainActive.Tip();\n@@ -1768,8 +1769,12 @@ void static UpdateTip(CBlockIndex *pindexNew) {\n         if (nUpgraded > 0)\n             LogPrintf(\"SetBestChain: %d of last 100 blocks above version %d\\n\", nUpgraded, (int)CBlock::CURRENT_VERSION);\n         if (nUpgraded > 100/2)\n+        {\n             // strMiscWarning is read by GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n             strMiscWarning = _(\"Warning: This version is obsolete, upgrade required!\");\n+            CAlert::Notify(strMiscWarning, true);\n+            fWarned = true;\n+        }\n     }\n }\n "
      },
      {
        "sha": "2eb028b1d32b91fed2d13765f8eff4318e3cdd5c",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbca89b74b76610331d21656cd6747f5bf8375d6/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbca89b74b76610331d21656cd6747f5bf8375d6/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=dbca89b74b76610331d21656cd6747f5bf8375d6",
        "patch": "@@ -83,6 +83,11 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         return NULL;\n     CBlock *pblock = &pblocktemplate->block; // pointer for convenience\n \n+    // -regtest only: allow overriding block.nVersion with\n+    // -blockversion=N to test forking scenarios\n+    if (Params().MineBlocksOnDemand())\n+        pblock->nVersion = GetArg(\"-blockversion\", pblock->nVersion);\n+\n     // Create coinbase tx\n     CMutableTransaction txNew;\n     txNew.vin.resize(1);"
      }
    ]
  }
]