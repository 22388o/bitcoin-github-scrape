[
  {
    "sha": "3d94f85829604ea2421a455826cbb272c681b14c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDk0Zjg1ODI5NjA0ZWEyNDIxYTQ1NTgyNmNiYjI3MmM2ODFiMTRj",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-12-10T12:28:03Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-12-10T12:28:39Z"
      },
      "message": "build: trivially update autoconf archive and document process\n\nax_check_compile_flag, ax_check_link_flag and ax_check_preproc_flag only have an updated copyright notice, https link and revision number. Pulling in these updates makes it easier to compare to upstream.\n\nAdding a README to document the fact that as of this commit all files are unmodified compared to upstream.",
      "tree": {
        "sha": "4eee3da5946c37dd27ba363f9c2e4f9ab515b1b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4eee3da5946c37dd27ba363f9c2e4f9ab515b1b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d94f85829604ea2421a455826cbb272c681b14c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl/SFHcACgkQV/+b28ww\nEAn+HBAAoIumr+DMk5LUykU2BFushJ6DpmJGH1lSYf2oGRmCKulzGBvdcjsf41A3\n47W5QC8mh1/aJv/cc07lwH1nsKZ9Kiln44YLfCqbXT/kAsLul9jYUyUviidC962+\nK2WFLhCUNcr8bHbdRirq5lzQAstly8TBLj50NAb9oBhrJ0vtryxoajDidepphfKD\n5cBAORhDJqfzDZifXDDhNfVtepal2VNWelBfO5HXgL8ERlWIcOeOFT/XlkaLZ3HU\nwfgmGULRFYG5LOSIAlkDRJmnxtz/i/av0dnINT3GpO8vsl4zQHf9heRjDgxnKdcZ\nmgzicsDenOfP5G8JXPrdXReUkrnqpIeCDUYBADFMnSvrEhhS88T5ukhzKfgoHQD4\nTFx+aqbThO42HeJc46+t2C3DVTA/O6WLR5wc+TcOFMP15upRaymjTHx11/ul+6rV\nQ+qu7taZToeLND1Ng+ygMnpq49BDuUJOKQxmlKt5do+o5sIarwaXRb5Tc+o52DR1\nZDLQyoHFZ+0BldUvvKWUFCKtEJ8wHsp5YXslEDmPT90GMbULGDZd1+1k7zH2M8wu\nzX7rOcGaG36T4h+5AA523KT6RWUug2uUjPVvHgGVxmSn58DZlSSss9eW85UAiaEe\n3O+b62nouuzwEwEYPX/TXaqgiW4qeJ8RSmFTGvqJZwGKsrZgxkA=\n=PQg8\n-----END PGP SIGNATURE-----",
        "payload": "tree 4eee3da5946c37dd27ba363f9c2e4f9ab515b1b7\nparent e20b488395c1c6c54b934714b436f72a3d4ecb1c\nauthor Sjors Provoost <sjors@sprovoost.nl> 1607603283 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1607603319 +0100\n\nbuild: trivially update autoconf archive and document process\n\nax_check_compile_flag, ax_check_link_flag and ax_check_preproc_flag only have an updated copyright notice, https link and revision number. Pulling in these updates makes it easier to compare to upstream.\n\nAdding a README to document the fact that as of this commit all files are unmodified compared to upstream.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d94f85829604ea2421a455826cbb272c681b14c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3d94f85829604ea2421a455826cbb272c681b14c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d94f85829604ea2421a455826cbb272c681b14c/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e20b488395c1c6c54b934714b436f72a3d4ecb1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20b488395c1c6c54b934714b436f72a3d4ecb1c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e20b488395c1c6c54b934714b436f72a3d4ecb1c"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 26,
      "deletions": 81
    },
    "files": [
      {
        "sha": "4219edf4eff5310d0883b49f2505532afb474879",
        "filename": "build-aux/m4/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d94f85829604ea2421a455826cbb272c681b14c/build-aux/m4/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d94f85829604ea2421a455826cbb272c681b14c/build-aux/m4/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/README.md?ref=3d94f85829604ea2421a455826cbb272c681b14c",
        "patch": "@@ -0,0 +1,8 @@\n+## Autoconf archive\n+\n+All files in this folder are from the [Autoconf Archive](https://www.gnu.org/software/autoconf-archive/)\n+([Github](https://github.com/autoconf-archive/autoconf-archive/tree/master/m4) may be ahead of the site).\n+They are unmodified, but may not be the most recent serial.\n+\n+Future modifications to these files should be listed here and at the top of each file,\n+to prevent accidentally overriding them."
      },
      {
        "sha": "bd753b34d7dc57063b0b65f1441dde0889e1cd26",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "modified",
        "additions": 6,
        "deletions": 27,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d94f85829604ea2421a455826cbb272c681b14c/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d94f85829604ea2421a455826cbb272c681b14c/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=3d94f85829604ea2421a455826cbb272c681b14c",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n+#  https://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -29,33 +29,12 @@\n #   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n #   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n #\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n \n-#serial 4\n+#serial 6\n \n AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF"
      },
      {
        "sha": "03a30ce4c739ffb5bee27086d630e22ed35b5cc9",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "modified",
        "additions": 6,
        "deletions": 27,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d94f85829604ea2421a455826cbb272c681b14c/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d94f85829604ea2421a455826cbb272c681b14c/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=3d94f85829604ea2421a455826cbb272c681b14c",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n+#    https://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -29,33 +29,12 @@\n #   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n #   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n #\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n \n-#serial 4\n+#serial 6\n \n AC_DEFUN([AX_CHECK_LINK_FLAG],\n [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF"
      },
      {
        "sha": "e43560fbd3b66812d2737c7c38c66a4a2aa1d244",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "modified",
        "additions": 6,
        "deletions": 27,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d94f85829604ea2421a455826cbb272c681b14c/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d94f85829604ea2421a455826cbb272c681b14c/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=3d94f85829604ea2421a455826cbb272c681b14c",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n+#  https://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -29,33 +29,12 @@\n #   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n #   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n #\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n \n-#serial 4\n+#serial 6\n \n AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF"
      }
    ]
  },
  {
    "sha": "a5c05dfe11550d2d88512cfdfe2bdc89283fadf2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWMwNWRmZTExNTUwZDJkODg1MTJjZmRmZTJiZGM4OTI4M2ZhZGYy",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-12-10T13:39:20Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-12-10T13:45:24Z"
      },
      "message": "util: workaround potentially unsafe call to bp::child\n\nThis avoids boost's argument splitter and instead passes commands straight to the system shell. As explained in:\nhttps://github.com/bitcoin/bitcoin/pull/15382#discussion_r465212138\n\nIn addition, this commit permits multiline std_out and std_err.\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>",
      "tree": {
        "sha": "99194d8e96a06c1c61b84d5980ce710cf74af140",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99194d8e96a06c1c61b84d5980ce710cf74af140"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl/SJpoACgkQV/+b28ww\nEAlKlw/8CrU0hr2NWrXOeMjxOA6LKYTeq2xijPYbb8pFhuWmU3fHZE+4Y8UI57FY\n5kCE0LCA2YxnfXXNnqdXDeH7ey76U7sWOnkTn3XIrvZZBdodq0Et+peDCVFjw0k2\nRk28XIGVrmMotd1KKpkJgA3kaD+AcoBM6uppa0/SDxHhOfHZjT+vr7fjtsOUaNv0\nOnm3ahY934cTUeQmuP/bYfWYdk+n4idE0zyrDHjNMhNALbfzZuxVOFMOskmbcHIq\nh77nCmbAwzCkUK+mNVgR6nXSVL/Tto6Nmj8NbCOM143u1kmrCPUEPtXglTg9Hifd\nb/w4bSo4q5SR4CxYYqDH5hBcbkmYw//ToK7dOEnNJ7OI92N626MQVJv6jg763Sym\nT8FpzYdy4/GaZL44sxKrSV4oJ9cZHWCLXvz9I+ISmsZ1Hguzva3kAhPImiLryiyE\neDQ1y1FJ3nBc3cNNf/pvHTqzAG3fsxN2SD2LTIfKPVj+9xdIKxgnGpEyC592HZ/Y\nRlxPbxfA7iH/a0s9jwS9CiEECuVo2ZibU5HF+DF1g36aXs7pE9MHS6Pm5LNyH9Kh\ncWJomaBGCyNKFp3il9kQogxCWCUfGbH/v2ecIfq7UhyqRNN2n7KiH+4fzx9TMJwW\nYSX/ZE53BAg86fgzG51+1lKoqzkWwArUXPWSWRNYr6lGhqF8xlY=\n=c608\n-----END PGP SIGNATURE-----",
        "payload": "tree 99194d8e96a06c1c61b84d5980ce710cf74af140\nparent 3d94f85829604ea2421a455826cbb272c681b14c\nauthor Sjors Provoost <sjors@sprovoost.nl> 1607607560 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1607607924 +0100\n\nutil: workaround potentially unsafe call to bp::child\n\nThis avoids boost's argument splitter and instead passes commands straight to the system shell. As explained in:\nhttps://github.com/bitcoin/bitcoin/pull/15382#discussion_r465212138\n\nIn addition, this commit permits multiline std_out and std_err.\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d94f85829604ea2421a455826cbb272c681b14c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d94f85829604ea2421a455826cbb272c681b14c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d94f85829604ea2421a455826cbb272c681b14c"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 34,
      "deletions": 33
    },
    "files": [
      {
        "sha": "b40d8bba0758e29373806537b7bc9a7e79b6afbd",
        "filename": "src/test/system_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 20,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2/src/test/system_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2/src/test/system_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/system_tests.cpp?ref=a5c05dfe11550d2d88512cfdfe2bdc89283fadf2",
        "patch": "@@ -23,26 +23,28 @@ BOOST_AUTO_TEST_CASE(dummy)\n \n #ifdef HAVE_BOOST_PROCESS\n \n-bool checkMessage(const std::runtime_error& ex)\n+bool checkMessageFalse(const std::runtime_error& ex)\n {\n-    // On Linux & Mac: \"No such file or directory\"\n-    // On Windows: \"The system cannot find the file specified.\"\n-    const std::string what(ex.what());\n-    BOOST_CHECK(what.find(\"file\") != std::string::npos);\n+    BOOST_CHECK_EQUAL(ex.what(), std::string(\"RunCommandParseJSON error: process(false) returned 1: \\n\"));\n     return true;\n }\n \n-bool checkMessageFalse(const std::runtime_error& ex)\n+bool checkMessageFileNotFound(const std::runtime_error& ex)\n {\n-    BOOST_CHECK_EQUAL(ex.what(), std::string(\"RunCommandParseJSON error: process(false) returned 1: \\n\"));\n+    const std::string what(ex.what());\n+    BOOST_CHECK(what.find(\"RunCommandParseJSON error:\") != std::string::npos);\n+    // \"ls nosuchfile\" should result in:\n+    // On Linux & Mac: \"No such file or directory\"\n+    // On Windows: \"The system cannot find the file specified.\"\n+    BOOST_CHECK(what.find(\"file\") != std::string::npos);\n     return true;\n }\n \n-bool checkMessageStdErr(const std::runtime_error& ex)\n+bool checkCommandNotFound(const std::runtime_error& ex)\n {\n     const std::string what(ex.what());\n-    BOOST_CHECK(what.find(\"RunCommandParseJSON error:\") != std::string::npos);\n-    return checkMessage(ex);\n+    BOOST_CHECK(what.find(\"127\") != std::string::npos);\n+    return true;\n }\n \n BOOST_AUTO_TEST_CASE(run_command)\n@@ -52,32 +54,26 @@ BOOST_AUTO_TEST_CASE(run_command)\n         BOOST_CHECK(result.isNull());\n     }\n     {\n-#ifdef WIN32\n-        // Windows requires single quotes to prevent escaping double quotes from the JSON...\n         const UniValue result = RunCommandParseJSON(\"echo '{\\\"success\\\": true}'\");\n-#else\n-        // ... but Linux and macOS echo a single quote if it's used\n-        const UniValue result = RunCommandParseJSON(\"echo \\\"{\\\"success\\\": true}\\\"\");\n-#endif\n         BOOST_CHECK(result.isObject());\n         const UniValue& success = find_value(result, \"success\");\n         BOOST_CHECK(!success.isNull());\n         BOOST_CHECK_EQUAL(success.getBool(), true);\n     }\n     {\n-        // An invalid command is handled by Boost\n-        BOOST_CHECK_EXCEPTION(RunCommandParseJSON(\"invalid_command\"), boost::process::process_error, checkMessage); // Command failed\n+        // An invalid command results in exit code 127\n+        BOOST_CHECK_EXCEPTION(RunCommandParseJSON(\"invalid_command\"), std::runtime_error, checkCommandNotFound);\n     }\n     {\n         // Return non-zero exit code, no output to stderr\n         BOOST_CHECK_EXCEPTION(RunCommandParseJSON(\"false\"), std::runtime_error, checkMessageFalse);\n     }\n     {\n         // Return non-zero exit code, with error message for stderr\n-        BOOST_CHECK_EXCEPTION(RunCommandParseJSON(\"ls nosuchfile\"), std::runtime_error, checkMessageStdErr);\n+        BOOST_CHECK_EXCEPTION(RunCommandParseJSON(\"ls nosuchfile\"), std::runtime_error, checkMessageFileNotFound);\n     }\n     {\n-        BOOST_REQUIRE_THROW(RunCommandParseJSON(\"echo \\\"{\\\"\"), std::runtime_error); // Unable to parse JSON\n+        BOOST_REQUIRE_THROW(RunCommandParseJSON(\"echo '{\\\"'\"), std::runtime_error); // Unable to parse JSON\n     }\n     // Test std::in, except for Windows\n #ifndef WIN32"
      },
      {
        "sha": "9111e734a01de595b41733c3aacdaefe3a784845",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 12,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=a5c05dfe11550d2d88512cfdfe2bdc89283fadf2",
        "patch": "@@ -1200,25 +1200,30 @@ UniValue RunCommandParseJSON(const std::string& str_command, const std::string&\n \n     if (str_command.empty()) return UniValue::VNULL;\n \n-    bp::child c(\n+    // This is here because boost::process quotes the argument given to\n+    // system when used in combination with boost::process::shell.\n+    // https://github.com/boostorg/process/issues/95\n+    auto exit =\n+#ifdef _WIN32\n+    bp::system(\n+    bp::shell(), cmd, bp::std_out > stdout_stream);\n+#else\n+    bp::system(bp::shell(),\n+        \"-c\",\n         str_command,\n         bp::std_out > stdout_stream,\n         bp::std_err > stderr_stream,\n         bp::std_in < stdin_stream\n     );\n-    if (!str_std_in.empty()) {\n-        stdin_stream << str_std_in << std::endl;\n-    }\n+#endif\n+    stdin_stream << str_std_in << std::endl;\n     stdin_stream.pipe().close();\n \n-    std::string result;\n-    std::string error;\n-    std::getline(stdout_stream, result);\n-    std::getline(stderr_stream, error);\n-\n-    c.wait();\n-    const int n_error = c.exit_code();\n-    if (n_error) throw std::runtime_error(strprintf(\"RunCommandParseJSON error: process(%s) returned %d: %s\\n\", str_command, n_error, error));\n+    if (exit) {\n+        std::string error{std::istreambuf_iterator<char>(stderr_stream), {}};\n+        throw std::runtime_error(strprintf(\"RunCommandParseJSON error: process(%s) returned %d: %s\\n\", str_command, exit, error));\n+    }\n+    std::string result{std::istreambuf_iterator<char>(stdout_stream), {}};\n     if (!result_json.read(result)) throw std::runtime_error(\"Unable to parse JSON: \" + result);\n \n     return result_json;"
      },
      {
        "sha": "dbbcd77949918debe7687cd8cc8efe6623da6760",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5c05dfe11550d2d88512cfdfe2bdc89283fadf2/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=a5c05dfe11550d2d88512cfdfe2bdc89283fadf2",
        "patch": "@@ -104,7 +104,7 @@ void runCommand(const std::string& strCommand);\n  *\n  * @param str_command The command to execute, including any arguments\n  * @param str_std_in string to pass to stdin\n- * @return parsed JSON\n+ * @return parsed JSON. Throws if command returns failure code or JSON parsing fails.\n  */\n UniValue RunCommandParseJSON(const std::string& str_command, const std::string& str_std_in=\"\");\n #endif // HAVE_BOOST_PROCESS"
      }
    ]
  }
]