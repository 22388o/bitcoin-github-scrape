[
  {
    "sha": "3c85d2ec37c3725e407649e487fbeb2a36606d74",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzg1ZDJlYzM3YzM3MjVlNDA3NjQ5ZTQ4N2ZiZWIyYTM2NjA2ZDc0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-07-06T11:37:32Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-07-06T11:42:29Z"
      },
      "message": "Fix CChain::GetLocator",
      "tree": {
        "sha": "f0fa95df091b17aeb530e6f47eb8403cb0c460f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0fa95df091b17aeb530e6f47eb8403cb0c460f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c85d2ec37c3725e407649e487fbeb2a36606d74",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c85d2ec37c3725e407649e487fbeb2a36606d74",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c85d2ec37c3725e407649e487fbeb2a36606d74",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c85d2ec37c3725e407649e487fbeb2a36606d74/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e81e2e8f7cdee307227f150a6a2408c01fcafbf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e81e2e8f7cdee307227f150a6a2408c01fcafbf2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e81e2e8f7cdee307227f150a6a2408c01fcafbf2"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 6,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3de60ee3ecabd12f7f912f7fbc8f2efbddeb65e5",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c85d2ec37c3725e407649e487fbeb2a36606d74/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c85d2ec37c3725e407649e487fbeb2a36606d74/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3c85d2ec37c3725e407649e487fbeb2a36606d74",
        "patch": "@@ -423,15 +423,13 @@ CBlockLocator CChain::GetLocator(const CBlockIndex *pindex) const {\n             break;\n         // Exponentially larger steps back, plus the genesis block.\n         int nHeight = std::max(pindex->nHeight - nStep, 0);\n-        // Jump back quickly to the same height as the chain.\n-        if (pindex->nHeight > nHeight)\n-            pindex = pindex->GetAncestor(nHeight);\n-        // In case pindex is not in this chain, iterate pindex->pprev to find blocks.\n-        while (!Contains(pindex))\n-            pindex = pindex->pprev;\n-        // If pindex is in this chain, use direct height-based access.\n-        if (pindex->nHeight > nHeight)\n+        if (Contains(pindex)) {\n+            // Use O(1) CChain index if possible.\n             pindex = (*this)[nHeight];\n+        } else {\n+            // Otherwise, use O(log n) skiplist.\n+            pindex = pindex->GetAncestor(nHeight);\n+        }\n         if (vHave.size() > 10)\n             nStep *= 2;\n     }"
      }
    ]
  },
  {
    "sha": "f4b00beae52f22fc6958855a85e1012387c3c33e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGIwMGJlYWU1MmYyMmZjNjk1ODg1NWE4NWUxMDEyMzg3YzNjMzNl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-07-06T12:40:31Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-07-06T12:40:31Z"
      },
      "message": "Add CChain::GetLocator() unit test",
      "tree": {
        "sha": "15b6f860ee420d6ac9c34882d95d37e829cb6ada",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15b6f860ee420d6ac9c34882d95d37e829cb6ada"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4b00beae52f22fc6958855a85e1012387c3c33e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4b00beae52f22fc6958855a85e1012387c3c33e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4b00beae52f22fc6958855a85e1012387c3c33e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4b00beae52f22fc6958855a85e1012387c3c33e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c85d2ec37c3725e407649e487fbeb2a36606d74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c85d2ec37c3725e407649e487fbeb2a36606d74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c85d2ec37c3725e407649e487fbeb2a36606d74"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 56,
      "deletions": 0
    },
    "files": [
      {
        "sha": "11762c6ea08519c7ca5135731dd9ecfb0ef812f3",
        "filename": "src/test/skiplist_tests.cpp",
        "status": "modified",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4b00beae52f22fc6958855a85e1012387c3c33e/src/test/skiplist_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4b00beae52f22fc6958855a85e1012387c3c33e/src/test/skiplist_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/skiplist_tests.cpp?ref=f4b00beae52f22fc6958855a85e1012387c3c33e",
        "patch": "@@ -41,5 +41,61 @@ BOOST_AUTO_TEST_CASE(skiplist_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(getlocator_test)\n+{\n+    // Build a main chain 100000 blocks long.\n+    std::vector<uint256> vHashMain(100000);\n+    std::vector<CBlockIndex> vBlocksMain(100000);\n+    for (unsigned int i=0; i<vBlocksMain.size(); i++) {\n+        vHashMain[i] = i; // Set the hash equal to the height, so we can quickly check the distances.\n+        vBlocksMain[i].nHeight = i;\n+        vBlocksMain[i].pprev = i ? &vBlocksMain[i - 1] : NULL;\n+        vBlocksMain[i].phashBlock = &vHashMain[i];\n+        vBlocksMain[i].BuildSkip();\n+        BOOST_CHECK_EQUAL((int)vBlocksMain[i].GetBlockHash().GetLow64(), vBlocksMain[i].nHeight);\n+        BOOST_CHECK(vBlocksMain[i].pprev == NULL || vBlocksMain[i].nHeight == vBlocksMain[i].pprev->nHeight + 1);\n+    }\n+\n+    // Build a branch that splits off at block 49999, 50000 blocks long.\n+    std::vector<uint256> vHashSide(50000);\n+    std::vector<CBlockIndex> vBlocksSide(50000);\n+    for (unsigned int i=0; i<vBlocksSide.size(); i++) {\n+        vHashSide[i] = i + 50000 + (uint256(1) << 128); // Add 1<<128 to the hashes, so GetLow64() still returns the height.\n+        vBlocksSide[i].nHeight = i + 50000;\n+        vBlocksSide[i].pprev = i ? &vBlocksSide[i - 1] : &vBlocksMain[49999];\n+        vBlocksSide[i].phashBlock = &vHashSide[i];\n+        vBlocksSide[i].BuildSkip();\n+        BOOST_CHECK_EQUAL((int)vBlocksSide[i].GetBlockHash().GetLow64(), vBlocksSide[i].nHeight);\n+        BOOST_CHECK(vBlocksSide[i].pprev == NULL || vBlocksSide[i].nHeight == vBlocksSide[i].pprev->nHeight + 1);\n+    }\n+\n+    // Build a CChain for the main branch.\n+    CChain chain;\n+    chain.SetTip(&vBlocksMain.back());\n+\n+    // Test 100 random starting points for locators.\n+    for (int n=0; n<100; n++) {\n+        int r = insecure_rand() % 150000;\n+        CBlockIndex* tip = (r < 100000) ? &vBlocksMain[r] : &vBlocksSide[r - 100000];\n+        CBlockLocator locator = chain.GetLocator(tip);\n+\n+        // The first result must be the block itself, the last one must be genesis.\n+        BOOST_CHECK(locator.vHave.front() == tip->GetBlockHash());\n+        BOOST_CHECK(locator.vHave.back() == vBlocksMain[0].GetBlockHash());\n+\n+        // Entries 1 through 11 (inclusive) go back one step each.\n+        for (unsigned int i = 1; i < 12 && i < locator.vHave.size() - 1; i++) {\n+            BOOST_CHECK_EQUAL(locator.vHave[i].GetLow64(), tip->nHeight - i);\n+        }\n+\n+        // The further ones (excluding the last one) go back with exponential steps.\n+        unsigned int dist = 2;\n+        for (unsigned int i = 12; i < locator.vHave.size() - 1; i++) {\n+            BOOST_CHECK_EQUAL(locator.vHave[i - 1].GetLow64() - locator.vHave[i].GetLow64(), dist);\n+            dist *= 2;\n+        }\n+    }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()\n "
      }
    ]
  }
]