practicalswift,2020-02-13 07:10:31,"Concept ACK: deterministic is better than non-deterministic\n\nThanks for doing this!",https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-585584503,585584503,
practicalswift,2020-02-13 14:14:52,ACK 73b33c116486f6d052e6ddff2e6e95c7d70addc9 -- patch looks correct,https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-585774645,585774645,
fanquake,2020-02-14 03:45:45,Might roll this into an `--enable-determinism` type build option instead.,https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-586084198,586084198,
DrahtBot,2020-02-14 07:53:35,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 0c20809da85ac708386fa1ca80f7242917f90761<br>(master) | commit 7657ee6643d90a336fc971355eb145711a46ce1f<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`ba02e2ad0f12fdda...`](https://drahtbot.space/gitian/bitcoin/bitcoin/0c20809da85ac708386fa1ca80f7242917f90761/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-586140730,586140730,
practicalswift,2020-02-14 13:04:11,@fanquake Don't we want determinism by default? :),https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-586279085,586279085,
luke-jr,2020-02-15 17:12:36,"Concept NACK, build preferences should be set by the user.\n\n(`--enable-determinism` seems fair though)",https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-586621254,586621254,
fanquake,2020-02-27 04:55:24,I've updated this to be an `--enable-determinism` configure flag instead.,https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-591780611,591780611,
practicalswift,2020-02-27 06:51:48,ACK 3d9b41ecc02a69daa19df2bc850d60bf9917b724 -- patch looks correct,https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-591812275,591812275,
DrahtBot,2020-02-27 07:10:41,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #12557 ([WIP] 64 bit iOS device support by Sjors)\n\nIf you consider this pull request important, please also help to revi",https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-591818222,591818222,
MarcoFalke,2020-02-27 13:59:23,"How is this different from libfaketime, which we use in the gitian builds?",https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-591984826,591984826,
fanquake,2020-02-28 00:20:22,"> How is this different from libfaketime,\n\nThis bypasses the need for `libfaketime`, and I'd much prefer be able to pass an additional configure flag, than having to install, setup and use it. There are a couple other flags I plan on adding here too, such as passing `-D` to libtool on macOS, rather than having to set `ZERO_AR_DATE`.",https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-592245640,592245640,
laanwj,2020-02-28 17:54:05,"Yes, the idea is to not need faketime anymore at some point. It was always a hack because so many of the GNU and Qt tools embedded timestamps in all kind of unexpected places. We've slowly been working to get rid of those.\n\nI like putting this under an option instead of making it `configure` default.\n\nACK 3d9b41ecc02a69daa19df2bc850d60bf9917b724",https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-592649685,592649685,
MarcoFalke,2020-02-28 21:25:08,So we can remove libfaketime from gitian as well and replace it with this configure flag and/or appropriate `SOURCE_DATE_EPOCH` exports?,https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-592735943,592735943,
hebasto,2020-07-30 14:33:12,"@MarcoFalke \n> So we can remove libfaketime from gitian as well and replace it with this configure flag and/or appropriate `SOURCE_DATE_EPOCH` exports?\n\nMind looking into #19627?",https://github.com/bitcoin/bitcoin/pull/18135#issuecomment-666403533,666403533,
