[
  {
    "sha": "ec41342e3dea6e2137a0fc17288e2be77710a631",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzQxMzQyZTNkZWE2ZTIxMzdhMGZjMTcyODhlMmJlNzc3MTBhNjMx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-11T14:58:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T11:23:00Z"
      },
      "message": "build: pass correct defs and include path to moc\n\nTo make sure the right slots are generated, MOC needs -DHAVE_CONFIG_H\nand correct include path to include bitcoin-config.h.",
      "tree": {
        "sha": "e5fb7f5b25bd8965b0aa95dbf5c60c2b95795532",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5fb7f5b25bd8965b0aa95dbf5c60c2b95795532"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec41342e3dea6e2137a0fc17288e2be77710a631",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec41342e3dea6e2137a0fc17288e2be77710a631",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec41342e3dea6e2137a0fc17288e2be77710a631",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec41342e3dea6e2137a0fc17288e2be77710a631/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/054be736d4773804b51ed67d6b7fe0e1b15d1d1b"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "070902c519afbea32935f3b3b60ad27d0f9c0d08",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec41342e3dea6e2137a0fc17288e2be77710a631/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec41342e3dea6e2137a0fc17288e2be77710a631/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=ec41342e3dea6e2137a0fc17288e2be77710a631",
        "patch": "@@ -12,6 +12,7 @@ LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a\n LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a\n LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n+MOC_DEFS=$(DEFS) -I$(top_srcdir)/src\n \n $(LIBBITCOIN):\n \t$(MAKE) -C $(top_builddir)/src $(@F)"
      }
    ]
  },
  {
    "sha": "b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2Y0YjZkMzVkYTdiNjM1MjlhNzI4ZWI5MzMzZmU0MjRiMmE1YzZk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-11T14:00:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T11:36:20Z"
      },
      "message": "GUI for --disable-wallet compiles and -disablewallet mode\n\nThere is not much in the GUI to be done without wallet,\nthough it's possible to change options, watch the sync process,\nand use the debug console.\n\nSo embed the debug console in the main window.",
      "tree": {
        "sha": "6a0820ae13a8131ce3a0e2e0acf3754089b88ba3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a0820ae13a8131ce3a0e2e0acf3754089b88ba3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec41342e3dea6e2137a0fc17288e2be77710a631",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec41342e3dea6e2137a0fc17288e2be77710a631",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec41342e3dea6e2137a0fc17288e2be77710a631"
      }
    ],
    "stats": {
      "total": 320,
      "additions": 243,
      "deletions": 77
    },
    "files": [
      {
        "sha": "82f489a06d645498e9db80873104a685fa4d1a21",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -567,9 +567,6 @@ if test x$bitcoin_enable_qt != xno; then\n       AC_MSG_ERROR(\"QT Test lib not found. Use --disable-tests or --without-qt.\")\n     fi\n   fi\n-  if test x$enable_wallet == xno; then\n-    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n-  fi\n fi\n \n if test x$use_tests = xyes; then"
      },
      {
        "sha": "53bd893fade2b30fa44261d336b51d7fa0e266eb",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 51,
        "deletions": 15,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -150,24 +150,56 @@ RES_ICONS = res/icons/bitcoin.png res/icons/address-book.png \\\n   res/icons/qrcode.png res/icons/debugwindow.png res/icons/bitcoin.ico \\\n   res/icons/bitcoin_testnet.ico\n \n-BITCOIN_QT_CPP = aboutdialog.cpp addressbookpage.cpp \\\n-  addresstablemodel.cpp askpassphrasedialog.cpp bitcoinaddressvalidator.cpp \\\n-  bitcoinamountfield.cpp bitcoin.cpp bitcoingui.cpp \\\n-  bitcoinunits.cpp clientmodel.cpp \\\n+BITCOIN_QT_CPP = \\\n+  aboutdialog.cpp \\\n+  bitcoinaddressvalidator.cpp \\\n+  bitcoinamountfield.cpp \\\n+  bitcoin.cpp \\\n+  bitcoingui.cpp \\\n+  bitcoinunits.cpp \\\n+  clientmodel.cpp \\\n+  csvmodelwriter.cpp \\\n+  guiutil.cpp \\\n+  intro.cpp \\\n+  monitoreddatamapper.cpp \\\n+  notificator.cpp \\\n+  optionsdialog.cpp \\\n+  optionsmodel.cpp \\\n+  qvalidatedlineedit.cpp \\\n+  qvaluecombobox.cpp \\\n+  rpcconsole.cpp \\\n+  signverifymessagedialog.cpp \\\n+  splashscreen.cpp \\\n+  trafficgraphwidget.cpp\n+\n+if ENABLE_WALLET\n+BITCOIN_QT_CPP += \\\n+  addressbookpage.cpp \\\n+  addresstablemodel.cpp \\\n+  askpassphrasedialog.cpp \\\n   coincontroldialog.cpp \\\n   coincontroltreewidget.cpp \\\n-  csvmodelwriter.cpp editaddressdialog.cpp \\\n-  guiutil.cpp intro.cpp monitoreddatamapper.cpp notificator.cpp \\\n+  editaddressdialog.cpp \\\n   openuridialog.cpp \\\n-  optionsdialog.cpp optionsmodel.cpp overviewpage.cpp paymentrequestplus.cpp \\\n-  paymentserver.cpp qvalidatedlineedit.cpp qvaluecombobox.cpp \\\n-  receivecoinsdialog.cpp receiverequestdialog.cpp \\\n+  overviewpage.cpp \\\n+  paymentrequestplus.cpp \\\n+  paymentserver.cpp \\\n+  receivecoinsdialog.cpp \\\n+  receiverequestdialog.cpp \\\n   recentrequeststablemodel.cpp \\\n-  rpcconsole.cpp sendcoinsdialog.cpp sendcoinsentry.cpp \\\n-  signverifymessagedialog.cpp splashscreen.cpp trafficgraphwidget.cpp transactiondesc.cpp \\\n-  transactiondescdialog.cpp transactionfilterproxy.cpp transactionrecord.cpp \\\n-  transactiontablemodel.cpp transactionview.cpp walletframe.cpp \\\n-  walletmodel.cpp walletmodeltransaction.cpp walletview.cpp\n+  sendcoinsdialog.cpp \\\n+  sendcoinsentry.cpp \\\n+  transactiondesc.cpp \\\n+  transactiondescdialog.cpp \\\n+  transactionfilterproxy.cpp \\\n+  transactionrecord.cpp \\\n+  transactiontablemodel.cpp \\\n+  transactionview.cpp \\\n+  walletframe.cpp \\\n+  walletmodel.cpp \\\n+  walletmodeltransaction.cpp \\\n+  walletview.cpp\n+endif\n \n RES_IMAGES = res/images/about.png res/images/splash.png \\\n   res/images/splash_testnet.png\n@@ -203,7 +235,11 @@ endif\n bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n   -I$(top_srcdir)/src/qt/forms\n bitcoin_qt_SOURCES = bitcoin.cpp\n-bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n+bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n # forms/foo.h -> forms/ui_foo.h"
      },
      {
        "sha": "82d8af77d9fcfba3a3ac5b849e1cfaa3c00e2b94",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 8,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -10,9 +10,11 @@\n #include \"guiutil.h\"\n #include \"intro.h\"\n #include \"optionsmodel.h\"\n-#include \"paymentserver.h\"\n #include \"splashscreen.h\"\n+#ifdef ENABLE_WALLET\n+#include \"paymentserver.h\"\n #include \"walletmodel.h\"\n+#endif\n \n #include \"init.h\"\n #include \"main.h\"\n@@ -157,8 +159,10 @@ class BitcoinApplication: public QApplication\n     explicit BitcoinApplication(int &argc, char **argv);\n     ~BitcoinApplication();\n \n+#ifdef ENABLE_WALLET\n     /// Create payment server\n     void createPaymentServer();\n+#endif\n     /// Create options model\n     void createOptionsModel();\n     /// Create main window\n@@ -188,12 +192,14 @@ public slots:\n \n private:\n     QThread *coreThread;\n-    PaymentServer* paymentServer;\n     OptionsModel *optionsModel;\n     ClientModel *clientModel;\n     BitcoinGUI *window;\n-    WalletModel *walletModel;\n     QTimer *pollShutdownTimer;\n+#ifdef ENABLE_WALLET\n+    PaymentServer* paymentServer;\n+    WalletModel *walletModel;\n+#endif\n     int returnValue;\n \n     void startThread();\n@@ -246,12 +252,14 @@ void BitcoinCore::shutdown()\n BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n     QApplication(argc, argv),\n     coreThread(0),\n-    paymentServer(0),\n     optionsModel(0),\n     clientModel(0),\n     window(0),\n-    walletModel(0),\n     pollShutdownTimer(0),\n+#ifdef ENABLE_WALLET\n+    paymentServer(0),\n+    walletModel(0),\n+#endif\n     returnValue(0)\n {\n     setQuitOnLastWindowClosed(false);\n@@ -266,14 +274,21 @@ BitcoinApplication::~BitcoinApplication()\n     LogPrintf(\"Stopped thread\\n\");\n \n     delete window;\n+    window = 0;\n+#ifdef ENABLE_WALLET\n     delete paymentServer;\n+    paymentServer = 0;\n+#endif\n     delete optionsModel;\n+    optionsModel = 0;\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinApplication::createPaymentServer()\n {\n     paymentServer = new PaymentServer(this);\n }\n+#endif\n \n void BitcoinApplication::createOptionsModel()\n {\n@@ -327,11 +342,13 @@ void BitcoinApplication::requestShutdown()\n     LogPrintf(\"Requesting shutdown\\n\");\n     window->hide();\n     window->setClientModel(0);\n-    window->removeAllWallets();\n     pollShutdownTimer->stop();\n \n+#ifdef ENABLE_WALLET\n+    window->removeAllWallets();\n     delete walletModel;\n     walletModel = 0;\n+#endif\n     delete clientModel;\n     clientModel = 0;\n \n@@ -362,14 +379,17 @@ void BitcoinApplication::initializeResult(int retval)\n         // Miscellaneous initialization after core is initialized\n         optionsModel->Upgrade(); // Must be done after AppInit2\n \n+#ifdef ENABLE_WALLET\n         PaymentServer::LoadRootCAs();\n         paymentServer->setOptionsModel(optionsModel);\n+#endif\n \n         emit splashFinished(window);\n \n         clientModel = new ClientModel(optionsModel);\n         window->setClientModel(clientModel);\n \n+#ifdef ENABLE_WALLET\n         if(pwalletMain)\n         {\n             walletModel = new WalletModel(pwalletMain, optionsModel);\n@@ -380,6 +400,7 @@ void BitcoinApplication::initializeResult(int retval)\n             connect(walletModel, SIGNAL(coinsSent(CWallet*,SendCoinsRecipient,QByteArray)),\n                              paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n         }\n+#endif\n \n         // If -min option passed, start window minimized.\n         if(GetBoolArg(\"-min\", false))\n@@ -390,7 +411,7 @@ void BitcoinApplication::initializeResult(int retval)\n         {\n             window->show();\n         }\n-\n+#ifdef ENABLE_WALLET\n         // Now that initialization/startup is done, process any command-line\n         // bitcoin: URIs or payment requests:\n         connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n@@ -400,7 +421,7 @@ void BitcoinApplication::initializeResult(int retval)\n         connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n                          window, SLOT(message(QString,QString,unsigned int)));\n         QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n-\n+#endif\n     } else {\n         quit(); // Exit main loop\n     }\n@@ -429,9 +450,11 @@ int main(int argc, char *argv[])\n     if (!SelectParamsFromCommandLine()) {\n         fSelParFromCLFailed = true;\n     }\n+#ifdef ENABLE_WALLET\n     // Parse URIs on command line -- this can affect TestNet() / RegTest() mode\n     if (!PaymentServer::ipcParseCommandLine(argc, argv))\n         exit(0);\n+#endif\n \n     bool isaTestNet = TestNet() || RegTest();\n \n@@ -500,6 +523,7 @@ int main(int argc, char *argv[])\n     }\n     ReadConfigFile(mapArgs, mapMultiArgs);\n \n+#ifdef ENABLE_WALLET\n     /// 7. URI IPC sending\n     // - Do this early as we don't want to bother initializing if we are just calling IPC\n     // - Do this *after* setting up the data directory, as the data directory hash is used in the name\n@@ -512,6 +536,7 @@ int main(int argc, char *argv[])\n     // Start up the payment server early, too, so impatient users that click on\n     // bitcoin: links repeatedly have their payment requests routed to this process:\n     app.createPaymentServer();\n+#endif\n \n     /// 8. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped"
      },
      {
        "sha": "22c41a62019d93232633df2a90b73c99a71676e5",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 109,
        "deletions": 38,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -14,8 +14,10 @@\n #include \"optionsdialog.h\"\n #include \"optionsmodel.h\"\n #include \"rpcconsole.h\"\n+#ifdef ENABLE_WALLET\n #include \"walletframe.h\"\n #include \"walletmodel.h\"\n+#endif\n \n #ifdef Q_OS_MAC\n #include \"macdockiconhandler.h\"\n@@ -59,6 +61,7 @@ const QString BitcoinGUI::DEFAULT_WALLET = \"~Default\";\n BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     QMainWindow(parent),\n     clientModel(0),\n+    walletFrame(0),\n     encryptWalletAction(0),\n     changePassphraseAction(0),\n     aboutQtAction(0),\n@@ -69,9 +72,22 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n+    QString windowTitle = tr(\"Bitcoin Core\") + \" - \";\n+#ifdef ENABLE_WALLET\n+    /* if compiled with wallet support, -disablewallet can still disable the wallet */\n+    bool enableWallet = !GetBoolArg(\"-disablewallet\", false);\n+#else\n+    bool enableWallet = false;\n+#endif\n+    if(enableWallet)\n+    {\n+        windowTitle += tr(\"Wallet\");\n+    } else {\n+        windowTitle += tr(\"Node\");\n+    }\n+\n     if (!fIsTestnet)\n     {\n-        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\"));\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin\"));\n         setWindowIcon(QIcon(\":icons/bitcoin\"));\n@@ -81,24 +97,37 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     }\n     else\n     {\n-        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n+        windowTitle += \" \" + tr(\"[testnet]\");\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n         setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n #else\n         MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin_testnet\"));\n #endif\n     }\n+    setWindowTitle(windowTitle);\n \n #if defined(Q_OS_MAC) && QT_VERSION < 0x050000\n     // This property is not implemented in Qt 5. Setting it has no effect.\n     // A replacement API (QtMacUnifiedToolBar) is available in QtMacExtras.\n     setUnifiedTitleAndToolBarOnMac(true);\n #endif\n \n-    // Create wallet frame and make it the central widget\n-    walletFrame = new WalletFrame(this);\n-    setCentralWidget(walletFrame);\n+    rpcConsole = new RPCConsole(enableWallet ? this : 0);\n+#ifdef ENABLE_WALLET\n+    if(enableWallet)\n+    {\n+        /** Create wallet frame and make it the central widget */\n+        walletFrame = new WalletFrame(this);\n+        setCentralWidget(walletFrame);\n+    } else\n+#endif\n+    {\n+        /* When compiled without wallet or -disablewallet is provided,\n+         * the central widget is the rpc console.\n+         */\n+        setCentralWidget(rpcConsole);\n+    }\n \n     // Accept D&D of URIs\n     setAcceptDrops(true);\n@@ -160,8 +189,8 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     syncIconMovie = new QMovie(\":/movies/update_spinner\", \"mng\", this);\n \n-    rpcConsole = new RPCConsole(this);\n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n+\n     // prevents an oben debug window from becoming stuck/unusable on client shutdown\n     connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n \n@@ -286,14 +315,19 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     connect(aboutQtAction, SIGNAL(triggered()), qApp, SLOT(aboutQt()));\n     connect(optionsAction, SIGNAL(triggered()), this, SLOT(optionsClicked()));\n     connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n-    connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n-    connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n-    connect(changePassphraseAction, SIGNAL(triggered()), walletFrame, SLOT(changePassphrase()));\n-    connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n-    connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n-    connect(usedSendingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedSendingAddresses()));\n-    connect(usedReceivingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedReceivingAddresses()));\n-    connect(openAction, SIGNAL(triggered()), this, SLOT(openClicked()));\n+#ifdef ENABLE_WALLET\n+    if(walletFrame)\n+    {\n+        connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n+        connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n+        connect(changePassphraseAction, SIGNAL(triggered()), walletFrame, SLOT(changePassphrase()));\n+        connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n+        connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n+        connect(usedSendingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedSendingAddresses()));\n+        connect(usedReceivingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedReceivingAddresses()));\n+        connect(openAction, SIGNAL(triggered()), this, SLOT(openClicked()));\n+    }\n+#endif\n }\n \n void BitcoinGUI::createMenuBar()\n@@ -308,38 +342,50 @@ void BitcoinGUI::createMenuBar()\n \n     // Configure the menus\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n-    file->addAction(openAction);\n-    file->addAction(backupWalletAction);\n-    file->addAction(signMessageAction);\n-    file->addAction(verifyMessageAction);\n-    file->addSeparator();\n-    file->addAction(usedSendingAddressesAction);\n-    file->addAction(usedReceivingAddressesAction);\n-    file->addSeparator();\n+    if(walletFrame)\n+    {\n+        file->addAction(openAction);\n+        file->addAction(backupWalletAction);\n+        file->addAction(signMessageAction);\n+        file->addAction(verifyMessageAction);\n+        file->addSeparator();\n+        file->addAction(usedSendingAddressesAction);\n+        file->addAction(usedReceivingAddressesAction);\n+        file->addSeparator();\n+    }\n     file->addAction(quitAction);\n \n     QMenu *settings = appMenuBar->addMenu(tr(\"&Settings\"));\n-    settings->addAction(encryptWalletAction);\n-    settings->addAction(changePassphraseAction);\n-    settings->addSeparator();\n+    if(walletFrame)\n+    {\n+        settings->addAction(encryptWalletAction);\n+        settings->addAction(changePassphraseAction);\n+        settings->addSeparator();\n+    }\n     settings->addAction(optionsAction);\n \n     QMenu *help = appMenuBar->addMenu(tr(\"&Help\"));\n-    help->addAction(openRPCConsoleAction);\n-    help->addSeparator();\n+    if(walletFrame)\n+    {\n+        help->addAction(openRPCConsoleAction);\n+        help->addSeparator();\n+    }\n     help->addAction(aboutAction);\n     help->addAction(aboutQtAction);\n }\n \n void BitcoinGUI::createToolBars()\n {\n-    QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n-    toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n-    toolbar->addAction(overviewAction);\n-    toolbar->addAction(sendCoinsAction);\n-    toolbar->addAction(receiveCoinsAction);\n-    toolbar->addAction(historyAction);\n-    overviewAction->setChecked(true);\n+    if(walletFrame)\n+    {\n+        QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n+        toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n+        toolbar->addAction(overviewAction);\n+        toolbar->addAction(sendCoinsAction);\n+        toolbar->addAction(receiveCoinsAction);\n+        toolbar->addAction(historyAction);\n+        overviewAction->setChecked(true);\n+    }\n }\n \n void BitcoinGUI::setClientModel(ClientModel *clientModel)\n@@ -362,26 +408,39 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         rpcConsole->setClientModel(clientModel);\n-        walletFrame->setClientModel(clientModel);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+        {\n+            walletFrame->setClientModel(clientModel);\n+        }\n+#endif\n     }\n }\n \n+#ifdef ENABLE_WALLET\n bool BitcoinGUI::addWallet(const QString& name, WalletModel *walletModel)\n {\n+    if(!walletFrame)\n+        return false;\n     setWalletActionsEnabled(true);\n     return walletFrame->addWallet(name, walletModel);\n }\n \n bool BitcoinGUI::setCurrentWallet(const QString& name)\n {\n+    if(!walletFrame)\n+        return false;\n     return walletFrame->setCurrentWallet(name);\n }\n \n void BitcoinGUI::removeAllWallets()\n {\n+    if(!walletFrame)\n+        return;\n     setWalletActionsEnabled(false);\n     walletFrame->removeAllWallets();\n }\n+#endif\n \n void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n {\n@@ -489,6 +548,7 @@ void BitcoinGUI::aboutClicked()\n     dlg.exec();\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinGUI::openClicked()\n {\n     OpenURIDialog dlg(this);\n@@ -531,6 +591,7 @@ void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n {\n     if (walletFrame) walletFrame->gotoVerifyMessageTab(addr);\n }\n+#endif\n \n void BitcoinGUI::setNumConnections(int count)\n {\n@@ -591,7 +652,10 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         tooltip = tr(\"Up to date\") + QString(\".<br>\") + tooltip;\n         labelBlocksIcon->setPixmap(QIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n \n-        walletFrame->showOutOfSyncWarning(false);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+            walletFrame->showOutOfSyncWarning(false);\n+#endif\n \n         progressBarLabel->setVisible(false);\n         progressBar->setVisible(false);\n@@ -625,7 +689,10 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n             syncIconMovie->jumpToNextFrame();\n         prevBlocks = count;\n \n-        walletFrame->showOutOfSyncWarning(true);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+            walletFrame->showOutOfSyncWarning(true);\n+#endif\n \n         tooltip += QString(\"<br>\");\n         tooltip += tr(\"Last received block was generated %1 ago.\").arg(timeBehindText);\n@@ -738,6 +805,7 @@ void BitcoinGUI::closeEvent(QCloseEvent *event)\n     QMainWindow::closeEvent(event);\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinGUI::incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address)\n {\n     // On new transaction, make an info balloon\n@@ -751,6 +819,7 @@ void BitcoinGUI::incomingTransaction(const QString& date, int unit, qint64 amoun\n                   .arg(type)\n                   .arg(address), CClientUIInterface::MSG_INFORMATION);\n }\n+#endif\n \n void BitcoinGUI::dragEnterEvent(QDragEnterEvent *event)\n {\n@@ -783,10 +852,11 @@ bool BitcoinGUI::eventFilter(QObject *object, QEvent *event)\n     return QMainWindow::eventFilter(object, event);\n }\n \n+#ifdef ENABLE_WALLET\n bool BitcoinGUI::handlePaymentRequest(const SendCoinsRecipient& recipient)\n {\n     // URI has to be valid\n-    if (walletFrame->handlePaymentRequest(recipient))\n+    if (walletFrame && walletFrame->handlePaymentRequest(recipient))\n     {\n         showNormalIfMinimized();\n         gotoSendCoinsPage();\n@@ -824,6 +894,7 @@ void BitcoinGUI::setEncryptionStatus(int status)\n         break;\n     }\n }\n+#endif\n \n void BitcoinGUI::showNormalIfMinimized(bool fToggleHidden)\n {"
      },
      {
        "sha": "1038e2739c71d358edfa6a31a4deff965133950f",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 18,
        "deletions": 8,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -5,6 +5,10 @@\n #ifndef BITCOINGUI_H\n #define BITCOINGUI_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include <QMainWindow>\n #include <QMap>\n #include <QSystemTrayIcon>\n@@ -43,14 +47,15 @@ class BitcoinGUI : public QMainWindow\n     */\n     void setClientModel(ClientModel *clientModel);\n \n+#ifdef ENABLE_WALLET\n     /** Set the wallet model.\n         The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending\n         functionality.\n     */\n     bool addWallet(const QString& name, WalletModel *walletModel);\n     bool setCurrentWallet(const QString& name);\n-\n     void removeAllWallets();\n+#endif\n \n protected:\n     void changeEvent(QEvent *e);\n@@ -125,11 +130,6 @@ public slots:\n     void setNumConnections(int count);\n     /** Set number of blocks shown in the UI */\n     void setNumBlocks(int count, int nTotalBlocks);\n-    /** Set the encryption status as shown in the UI.\n-       @param[in] status            current encryption status\n-       @see WalletModel::EncryptionStatus\n-    */\n-    void setEncryptionStatus(int status);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title\n@@ -140,12 +140,21 @@ public slots:\n     */\n     void message(const QString &title, const QString &message, unsigned int style, bool *ret = NULL);\n \n+#ifdef ENABLE_WALLET\n+    /** Set the encryption status as shown in the UI.\n+       @param[in] status            current encryption status\n+       @see WalletModel::EncryptionStatus\n+    */\n+    void setEncryptionStatus(int status);\n+\n     bool handlePaymentRequest(const SendCoinsRecipient& recipient);\n \n     /** Show incoming transaction notification for new transactions. */\n     void incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address);\n+#endif\n \n private slots:\n+#ifdef ENABLE_WALLET\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();\n     /** Switch to history (transactions) page */\n@@ -160,6 +169,9 @@ private slots:\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n     void gotoVerifyMessageTab(QString addr = \"\");\n \n+    /** Show open dialog */\n+    void openClicked();\n+#endif\n     /** Show configuration dialog */\n     void optionsClicked();\n     /** Show about dialog */\n@@ -168,8 +180,6 @@ private slots:\n     /** Handle tray icon clicked */\n     void trayIconActivated(QSystemTrayIcon::ActivationReason reason);\n #endif\n-    /** Show open dialog */\n-    void openClicked();\n \n     /** Show window if hidden, unminimize when minimized, rise when obscured or show if hidden and fToggleHidden is true */\n     void showNormalIfMinimized(bool fToggleHidden = false);"
      },
      {
        "sha": "1133c457b3a4409b29cff4574b19336a286f24fe",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -14,8 +14,10 @@\n #include \"init.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #include \"walletdb.h\"\n+#endif\n \n #include <QSettings>\n #include <QStringList>\n@@ -67,8 +69,10 @@ void OptionsModel::Init()\n     // by command-line and show this in the UI.\n \n     // Main\n+#ifdef ENABLE_WALLET\n     if (!settings.contains(\"nTransactionFee\"))\n         settings.setValue(\"nTransactionFee\", 0);\n+#endif\n \n     if (!settings.contains(\"nDatabaseCache\"))\n         settings.setValue(\"nDatabaseCache\", 25);\n@@ -137,6 +141,7 @@ void OptionsModel::Upgrade()\n \n     settings.setValue(\"bImportFinished\", true);\n \n+#ifdef ENABLE_WALLET\n     // Move settings from old wallet.dat (if any):\n     CWalletDB walletdb(strWalletFile);\n \n@@ -181,6 +186,7 @@ void OptionsModel::Upgrade()\n             walletdb.EraseSetting(\"addrProxy\");\n         }\n     }\n+#endif\n \n     Init();\n }\n@@ -227,6 +233,7 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         case ProxySocksVersion:\n             return settings.value(\"nSocksVersion\", 5);\n \n+#ifdef ENABLE_WALLET\n         case Fee:\n             // Attention: Init() is called before nTransactionFee is set in AppInit2()!\n             // To ensure we can change the fee on-the-fly update our QSetting when\n@@ -236,6 +243,7 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             // Todo: Consider to revert back to use just nTransactionFee here, if we don't want\n             // -paytxfee to update our QSettings!\n             return settings.value(\"nTransactionFee\");\n+#endif\n         case DisplayUnit:\n             return nDisplayUnit;\n         case DisplayAddresses:\n@@ -318,13 +326,14 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             }\n         }\n         break;\n-\n+#ifdef ENABLE_WALLET\n         case Fee: // core option - can be changed on-the-fly\n             // Todo: Add is valid check  and warn via message, if not\n             nTransactionFee = value.toLongLong();\n             settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n             emit transactionFeeChanged(nTransactionFee);\n             break;\n+#endif\n         case DisplayUnit:\n             nDisplayUnit = value.toInt();\n             settings.setValue(\"nDisplayUnit\", nDisplayUnit);"
      },
      {
        "sha": "da54ef376b24eb81260ce105694eddfb83953643",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -8,16 +8,27 @@ AM_CPPFLAGS += -I$(top_srcdir)/src \\\n bin_PROGRAMS = test_bitcoin-qt\n TESTS = test_bitcoin-qt\n \n-TEST_QT_MOC_CPP = moc_uritests.cpp moc_paymentservertests.cpp\n+TEST_QT_MOC_CPP = moc_uritests.cpp\n+\n+if ENABLE_WALLET\n+TEST_QT_MOC_CPP += moc_paymentservertests.cpp\n+endif\n \n TEST_QT_H = uritests.h paymentservertests.h paymentrequestdata.h\n \n BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n \n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n-test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n+test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp $(TEST_QT_H)\n+if ENABLE_WALLET\n+test_bitcoin_qt_SOURCES += paymentservertests.cpp\n+endif\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n-test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n+test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n "
      },
      {
        "sha": "a2adb0032733fcab0f9d3406b917a5c147355cdd",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -1,5 +1,11 @@\n #include \"bitcoin-config.h\"\n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n+#ifdef ENABLE_WALLET\n #include \"paymentservertests.h\"\n+#endif\n #include \"uritests.h\"\n \n #include <QCoreApplication>\n@@ -27,10 +33,11 @@ int main(int argc, char *argv[])\n     URITests test1;\n     if (QTest::qExec(&test1) != 0)\n         fInvalid = true;\n-\n+#ifdef ENABLE_WALLET\n     PaymentServerTests test2;\n     if (QTest::qExec(&test2) != 0)\n         fInvalid = true;\n+#endif\n \n     return fInvalid;\n }"
      }
    ]
  }
]