laanwj,2021-10-27 11:23:14,"Concept ACK\n\nAnother solution would be to make `DescriptorScriptPubKeyMan::GetOldestKeyPoolTime` return `std::numeric_limits<int64_t>::max()` instead, then check for that instead of `0`. I think a slight advantage of that would be that no special-case logic needs to be introduced into the RPC call.",https://github.com/bitcoin/bitcoin/pull/23348#issuecomment-952819920,952819920,
hebasto,2021-10-27 12:01:40,"> Another solution would be to make `DescriptorScriptPubKeyMan::GetOldestKeyPoolTime` return `std::numeric_limits<int64_t>::max()` instead, then check for that instead of `0`. I think a slight advantage of that would be that no special-case logic needs to be introduced into the RPC call.\n\nIn that case, `std::numeric_limits<int64_t>::max()` will be used in three different places of the code. Wo",https://github.com/bitcoin/bitcoin/pull/23348#issuecomment-952852059,952852059,
luke-jr,2021-10-29 17:01:43,"Agree with @laanwj's suggestion, and `std::optional` sounds like a good approach.",https://github.com/bitcoin/bitcoin/pull/23348#issuecomment-954901584,954901584,
hebasto,2021-10-30 19:31:19,"Thanks to @lsilva01, @laanwj and @luke-jr for your reviews and suggestions!\n\nSuggested an alternative implementation which is based on @laanwj's and @luke-jr's comments.",https://github.com/bitcoin/bitcoin/pull/23348#issuecomment-955581317,955581317,
hebasto,2021-11-03 08:23:33,"Updated 324172ee4f3a974a694b44d4c812d7c9a8e752d9 -> da5f8663b858d9bf027143666483ea5e05373344 ([pr23348.02](https://github.com/hebasto/bitcoin/commits/pr23348.02) -> [pr23348.03](https://github.com/hebasto/bitcoin/commits/pr23348.03), [diff](https://github.com/hebasto/bitcoin/compare/pr23348.02..pr23348.03)):\n\n- addressed @luke-jr's [comment](https://github.com/bitcoin/bitcoin/pull/23348#discus",https://github.com/bitcoin/bitcoin/pull/23348#issuecomment-958736346,958736346,
hebasto,2021-11-03 08:39:02,"Updated da5f8663b858d9bf027143666483ea5e05373344 -> ee03c782ba61993d9e95fa499546cd14cee35445 ([pr23348.03](https://github.com/hebasto/bitcoin/commits/pr23348.03) -> [pr23348.04](https://github.com/hebasto/bitcoin/commits/pr23348.04), [diff](https://github.com/hebasto/bitcoin/compare/pr23348.03..pr23348.04)):\n\n- split in two commits: a pure refactoring with no behavior change, and a bugfix.",https://github.com/bitcoin/bitcoin/pull/23348#issuecomment-958745269,958745269,
luke-jr,2021-11-03 00:44:28,"This is a behaviour change: Previously, it would return 0 if any of the m_spk_managers returned 0. With the new semantics, it should prefer std::nullopt over a value.\n\nIf this change is intentional, please document why.",https://github.com/bitcoin/bitcoin/pull/23348#discussion_r741554082,741554082,src/wallet/wallet.cpp
hebasto,2021-11-03 08:23:52,Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/23348#issuecomment-958736346).,https://github.com/bitcoin/bitcoin/pull/23348#discussion_r741697613,741697613,src/wallet/wallet.cpp
luke-jr,2021-11-03 22:25:58,"Couldn't you get a nullopt in here? (If not, why change this block at all?)",https://github.com/bitcoin/bitcoin/pull/23348#discussion_r742389480,742389480,src/wallet/wallet.cpp
hebasto,2021-11-04 00:01:18,"> Couldn't you get a nullopt in here?\n\nSorry, I did not get your question. What do you mean?",https://github.com/bitcoin/bitcoin/pull/23348#discussion_r742434050,742434050,src/wallet/wallet.cpp
luke-jr,2021-11-04 01:13:33,"`spk_man_pair.second->GetOldestKeyPoolTime()` could return `std::nullopt`. Is it well-defined what `std::min` will do here, and is it the desired behaviour?",https://github.com/bitcoin/bitcoin/pull/23348#discussion_r742463740,742463740,src/wallet/wallet.cpp
hebasto,2021-11-07 18:45:17,"[`std::min()`](https://en.cppreference.com/w/cpp/algorithm/min) uses `operator<`, which is [well-defined](https://en.cppreference.com/w/cpp/utility/optional/operator_cmp) for `std::optional`.",https://github.com/bitcoin/bitcoin/pull/23348#discussion_r744299631,744299631,src/wallet/wallet.cpp
