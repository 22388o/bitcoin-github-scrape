luke-jr,2017-01-14T23:55:19Z,"It's impossible for pblock to be NULL here. The dereference is one line above. And pindexPrev initialises to NULL, so the above initialisation will indeed always occur.",https://github.com/bitcoin/bitcoin/pull/9560#discussion_r96126990,96126990,src/rpc/mining.cpp
practicalswift,2017-01-15T00:16:02Z,"The dereference I'm trying to avoid is not on the line above, but a couple of lines below - [see here](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L551) (`pblock->nNonce = 0;`).\n\nIs your reading that `if`-branch on [lines 526-546](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L526-L545) will always be taken?\n\nIf that branch is not taken then `pbloc",https://github.com/bitcoin/bitcoin/pull/9560#discussion_r96127313,96127313,src/rpc/mining.cpp
practicalswift,2017-01-15T00:32:42Z,"Sorry. After re-reading the comment and the code I think I understand - your reading is that the `if`-branch is guaranteed to be taken on the first call, right? :-)",https://github.com/bitcoin/bitcoin/pull/9560#discussion_r96127467,96127467,src/rpc/mining.cpp
practicalswift,2017-01-15T00:49:23Z,"I've now re-read the code and now my reading is that assuming the `if`-branch is taken on the first call then there is no possibility of a `NULL` pointer dereference.\n\nThe question then boils down to if `pindexPrev != chainActive.Tip() || (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 5)` is guaranteed to be true on the first call :-)",https://github.com/bitcoin/bitcoin/pull/9560#discussion_r96127643,96127643,src/rpc/mining.cpp
luke-jr,2017-01-15T02:41:24Z,"It is guaranteed to be true on the first call.\n\nBut even if it wasn't, pblock would still never be NULL. It is always assigned to &pblocktemplate->block, which *might* be NULL with some platforms, but is not guaranteed to be, and if not would pass your assert yet still be wrong.",https://github.com/bitcoin/bitcoin/pull/9560#discussion_r96128848,96128848,src/rpc/mining.cpp
practicalswift,2017-01-15T02:51:41Z,"OK, thanks for reviewing. Closing PR.",https://github.com/bitcoin/bitcoin/pull/9560#discussion_r96128945,96128945,src/rpc/mining.cpp
