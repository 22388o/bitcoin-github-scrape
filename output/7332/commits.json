[
  {
    "sha": "faf671bca6d2a39c129529805869e392e2745c87",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWY2NzFiY2E2ZDJhMzljMTI5NTI5ODA1ODY5ZTM5MmUyNzQ1Yzg3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-13T10:43:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-13T11:06:24Z"
      },
      "message": "[wallet] Clarify rpc help message with regard to rounding",
      "tree": {
        "sha": "e72bf4fc781437fef9057f6764d9fc1443cdd29a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e72bf4fc781437fef9057f6764d9fc1443cdd29a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf671bca6d2a39c129529805869e392e2745c87",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf671bca6d2a39c129529805869e392e2745c87",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf671bca6d2a39c129529805869e392e2745c87",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf671bca6d2a39c129529805869e392e2745c87/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cd836c1d855b92e7c73ab31979f471c4f8dad68"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 7,
      "deletions": 8
    },
    "files": [
      {
        "sha": "bd51aa0ab018d0f02317d699b97b459e923d9d7c",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf671bca6d2a39c129529805869e392e2745c87/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf671bca6d2a39c129529805869e392e2745c87/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=faf671bca6d2a39c129529805869e392e2745c87",
        "patch": "@@ -338,7 +338,7 @@ UniValue createrawtransaction(const UniValue& params, bool fHelp)\n             \"     ]\\n\"\n             \"2. \\\"outputs\\\"             (string, required) a json object with outputs\\n\"\n             \"    {\\n\"\n-            \"      \\\"address\\\": x.xxx   (numeric, required) The key is the bitcoin address, the value is the \" + CURRENCY_UNIT + \" amount\\n\"\n+            \"      \\\"address\\\": x.xxx   (numeric or string, required) The key is the bitcoin address, the numeric value (can be string) is the \" + CURRENCY_UNIT + \" amount\\n\"\n             \"      \\\"data\\\": \\\"hex\\\",     (string, required) The key is \\\"data\\\", the value is hex encoded data\\n\"\n             \"      ...\\n\"\n             \"    }\\n\""
      },
      {
        "sha": "e3120fe0f4c39f23f8168aef5f763b8e8bef3bf5",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf671bca6d2a39c129529805869e392e2745c87/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf671bca6d2a39c129529805869e392e2745c87/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=faf671bca6d2a39c129529805869e392e2745c87",
        "patch": "@@ -388,11 +388,11 @@ UniValue sendtoaddress(const UniValue& params, bool fHelp)\n     if (fHelp || params.size() < 2 || params.size() > 5)\n         throw runtime_error(\n             \"sendtoaddress \\\"bitcoinaddress\\\" amount ( \\\"comment\\\" \\\"comment-to\\\" subtractfeefromamount )\\n\"\n-            \"\\nSend an amount to a given address. The amount is a real and is rounded to the nearest 0.00000001\\n\"\n+            \"\\nSend an amount to a given address.\\n\"\n             + HelpRequiringPassphrase() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to send to.\\n\"\n-            \"2. \\\"amount\\\"      (numeric, required) The amount in \" + CURRENCY_UNIT + \" to send. eg 0.1\\n\"\n+            \"2. \\\"amount\\\"      (numeric or string, required) The amount in \" + CURRENCY_UNIT + \" to send. eg 0.1\\n\"\n             \"3. \\\"comment\\\"     (string, optional) A comment used to store what the transaction is for. \\n\"\n             \"                             This is not part of the transaction, just kept in your wallet.\\n\"\n             \"4. \\\"comment-to\\\"  (string, optional) A comment to store the name of the person or organization \\n\"\n@@ -864,13 +864,12 @@ UniValue sendfrom(const UniValue& params, bool fHelp)\n     if (fHelp || params.size() < 3 || params.size() > 6)\n         throw runtime_error(\n             \"sendfrom \\\"fromaccount\\\" \\\"tobitcoinaddress\\\" amount ( minconf \\\"comment\\\" \\\"comment-to\\\" )\\n\"\n-            \"\\nDEPRECATED (use sendtoaddress). Sent an amount from an account to a bitcoin address.\\n\"\n-            \"The amount is a real and is rounded to the nearest 0.00000001.\"\n+            \"\\nDEPRECATED (use sendtoaddress). Sent an amount from an account to a bitcoin address.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"fromaccount\\\"       (string, required) The name of the account to send funds from. May be the default account using \\\"\\\".\\n\"\n             \"2. \\\"tobitcoinaddress\\\"  (string, required) The bitcoin address to send funds to.\\n\"\n-            \"3. amount                (numeric, required) The amount in \" + CURRENCY_UNIT + \" (transaction fee is added on top).\\n\"\n+            \"3. amount                (numeric or string, required) The amount in \" + CURRENCY_UNIT + \" (transaction fee is added on top).\\n\"\n             \"4. minconf               (numeric, optional, default=1) Only use funds with at least this many confirmations.\\n\"\n             \"5. \\\"comment\\\"           (string, optional) A comment used to store what the transaction is for. \\n\"\n             \"                                     This is not part of the transaction, just kept in your wallet.\\n\"\n@@ -935,7 +934,7 @@ UniValue sendmany(const UniValue& params, bool fHelp)\n             \"1. \\\"fromaccount\\\"         (string, required) DEPRECATED. The account to send the funds from. Should be \\\"\\\" for the default account\\n\"\n             \"2. \\\"amounts\\\"             (string, required) A json object with addresses and amounts\\n\"\n             \"    {\\n\"\n-            \"      \\\"address\\\":amount   (numeric) The bitcoin address is the key, the numeric amount in \" + CURRENCY_UNIT + \" is the value\\n\"\n+            \"      \\\"address\\\":amount   (numeric or string) The bitcoin address is the key, the numeric amount (can be string) in \" + CURRENCY_UNIT + \" is the value\\n\"\n             \"      ,...\\n\"\n             \"    }\\n\"\n             \"3. minconf                 (numeric, optional, default=1) Only use the balance confirmed at least this many times.\\n\"\n@@ -2180,7 +2179,7 @@ UniValue settxfee(const UniValue& params, bool fHelp)\n             \"settxfee amount\\n\"\n             \"\\nSet the transaction fee per kB. Overwrites the paytxfee parameter.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. amount         (numeric, required) The transaction fee in \" + CURRENCY_UNIT + \"/kB rounded to the nearest 0.00000001\\n\"\n+            \"1. amount         (numeric or sting, required) The transaction fee in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"\\nResult\\n\"\n             \"true|false        (boolean) Returns true if successful\\n\"\n             \"\\nExamples:\\n\""
      }
    ]
  }
]