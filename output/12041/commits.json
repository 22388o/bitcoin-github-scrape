[
  {
    "sha": "fb59c574d378ba8e45f4a25e175da6bc73495802",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjU5YzU3NGQzNzhiYThlNDVmNGEyNWUxNzVkYTZiYzczNDk1ODAy",
    "commit": {
      "author": {
        "name": "Jesper Wallin",
        "email": "jesper@ifconfig.se",
        "date": "2017-12-28T15:00:57Z"
      },
      "committer": {
        "name": "Jesper Wallin",
        "email": "jesper@ifconfig.se",
        "date": "2018-01-03T09:55:54Z"
      },
      "message": "doc: Rewrite the OpenBSD build instructions\n\nI've rewritten most parts of the OpenBSD build instructions to make\nit shorter and more straight forward.  I've also added instructions\non how to build with GUI/Qt 5 support, as some of us actually use\nOpenBSD as a desktop system. ;-)\n\n- Remove the GCC section as OpenBSD now ships with LLVM as of 6.2.\n- Remove the Resources section as it only applied to GCC.\n- Add instructions for building with Qt 5 support.\n- Change the Berkeley DB section to not mention Boost and instead\n  explain that the packages version is too old.\n- Add a 'gmake install' at the end of the build section.\n\nTested on a fresh install of both OpenBSD 6.2 and the -current.",
      "tree": {
        "sha": "75dec82be5196fbf6ae6bfbe664e7339cf8c7c70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75dec82be5196fbf6ae6bfbe664e7339cf8c7c70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb59c574d378ba8e45f4a25e175da6bc73495802",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb59c574d378ba8e45f4a25e175da6bc73495802",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb59c574d378ba8e45f4a25e175da6bc73495802",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb59c574d378ba8e45f4a25e175da6bc73495802/comments",
    "author": {
      "login": "empatogen",
      "id": 86964724,
      "node_id": "MDQ6VXNlcjg2OTY0NzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/86964724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/empatogen",
      "html_url": "https://github.com/empatogen",
      "followers_url": "https://api.github.com/users/empatogen/followers",
      "following_url": "https://api.github.com/users/empatogen/following{/other_user}",
      "gists_url": "https://api.github.com/users/empatogen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/empatogen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/empatogen/subscriptions",
      "organizations_url": "https://api.github.com/users/empatogen/orgs",
      "repos_url": "https://api.github.com/users/empatogen/repos",
      "events_url": "https://api.github.com/users/empatogen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/empatogen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "empatogen",
      "id": 86964724,
      "node_id": "MDQ6VXNlcjg2OTY0NzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/86964724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/empatogen",
      "html_url": "https://github.com/empatogen",
      "followers_url": "https://api.github.com/users/empatogen/followers",
      "following_url": "https://api.github.com/users/empatogen/following{/other_user}",
      "gists_url": "https://api.github.com/users/empatogen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/empatogen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/empatogen/subscriptions",
      "organizations_url": "https://api.github.com/users/empatogen/orgs",
      "repos_url": "https://api.github.com/users/empatogen/repos",
      "events_url": "https://api.github.com/users/empatogen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/empatogen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c04cb48df9616fe107f6514f3cd12e77e3da66ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04cb48df9616fe107f6514f3cd12e77e3da66ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c04cb48df9616fe107f6514f3cd12e77e3da66ab"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 21,
      "deletions": 37
    },
    "files": [
      {
        "sha": "26f90af437416a7e294f45f84985f969c16f4f2b",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 21,
        "deletions": 37,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb59c574d378ba8e45f4a25e175da6bc73495802/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb59c574d378ba8e45f4a25e175da6bc73495802/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=fb59c574d378ba8e45f4a25e175da6bc73495802",
        "patch": "@@ -1,10 +1,7 @@\n OpenBSD build guide\n ======================\n-(updated for OpenBSD 6.2)\n+This guide describes how to build Bitcoin Core on OpenBSD 6.2.\n \n-This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n-\n-OpenBSD is most commonly used as a server OS, so this guide does not contain instructions for building the GUI.\n \n Preparation\n -------------\n@@ -21,23 +18,23 @@ pkg_add boost\n git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n+Optional: To build with Qt 5 support, you also need qt5 and protobuf:\n+```bash\n+pkg_add protobuf\n+pkg_add qt5\n+```\n+\n See [dependencies.md](dependencies.md) for a complete overview.\n \n-**Important**: From OpenBSD 6.2 onwards a C++11-supporting clang compiler is\n-part of the base image, and while building it is necessary to make sure that this\n-compiler is used and not ancient g++ 4.2.1. This is done by appending\n-`CC=cc CXX=c++` to configuration commands. Mixing different compilers\n-within the same executable will result in linker errors.\n \n ### Building BerkeleyDB\n \n-BerkeleyDB is only necessary for the wallet functionality. To skip this, pass\n-`--disable-wallet` to `./configure` and skip to the next section.\n+BerkeleyDB is only necessary for the wallet functionality. To skip this,\n+pass `--disable-wallet` to `./configure`.\n \n-It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n-from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n-If you have to build it yourself, you can use [the installation script included\n-in contrib/](/contrib/install_db4.sh) like so\n+It is recommended to use Berkeley DB 4.8. The Berkley DB library available via the OpenBSD packages is unfortunately too old.\n+You can use [the installation script included\n+in contrib/](contrib/install_db4.sh) to build it yourself:\n \n ```shell\n ./contrib/install_db4.sh `pwd` CC=cc CXX=c++\n@@ -61,10 +58,17 @@ export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you i\n ```\n Make sure `BDB_PREFIX` is set to the appropriate path from the above steps.\n \n+To configure with wallet and Qt 5:\n+```bash\n+./configure --with-gui=qt5 CC=cc CXX=c++ \\\n+    LDFLAGS=\"-L${BDB_PREFIX}/lib -L/usr/X11R6/lib\" \\\n+    CPPFLAGS=\"-I${BDB_PREFIX}/include -I/usr/X11R6/include\"\n+```\n+\n To configure with wallet:\n ```bash\n ./configure --with-gui=no CC=cc CXX=c++ \\\n-    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\"\n+    LDFLAGS=\"-L${BDB_PREFIX}/lib\" CPPFLAGS=\"-I${BDB_PREFIX}/include\"\n ```\n \n To configure without wallet:\n@@ -76,25 +80,5 @@ Build and run the tests:\n ```bash\n gmake # use -jX here for parallelism\n gmake check\n+gmake install\n ```\n-\n-Resource limits\n--------------------\n-\n-If the build runs into out-of-memory errors, the instructions in this section\n-might help.\n-\n-The standard ulimit restrictions in OpenBSD are very strict:\n-\n-    data(kbytes)         1572864\n-\n-This, unfortunately, in some cases not enough to compile some `.cpp` files in the project,\n-(see issue [#6658](https://github.com/bitcoin/bitcoin/issues/6658)).\n-If your user is in the `staff` group the limit can be raised with:\n-\n-    ulimit -d 3000000\n-\n-The change will only affect the current shell and processes spawned by it. To\n-make the change system-wide, change `datasize-cur` and `datasize-max` in\n-`/etc/login.conf`, and reboot.\n-"
      }
    ]
  }
]