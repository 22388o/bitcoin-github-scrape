[
  {
    "sha": "219953ce5095c0430713e4f67d222bdb19d2bdbc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTk5NTNjZTUwOTVjMDQzMDcxM2U0ZjY3ZDIyMmJkYjE5ZDJiZGJj",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-04-20T17:13:18Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-04-20T17:13:18Z"
      },
      "message": "Show zero value txouts in listunspent.\n\nIt's reasonable that automatic coin selection will not pick a zero\n value txout, but they're actually  spendable; and you should know\n if you have them. Listing also makes them available to tools like\n dust-b-gone.",
      "tree": {
        "sha": "c1eb397c1731ebe70088539aa930f6dfb266274a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1eb397c1731ebe70088539aa930f6dfb266274a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/219953ce5095c0430713e4f67d222bdb19d2bdbc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/219953ce5095c0430713e4f67d222bdb19d2bdbc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/219953ce5095c0430713e4f67d222bdb19d2bdbc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/219953ce5095c0430713e4f67d222bdb19d2bdbc/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6ea3bcede1cbbf89486b9d67329e0110c4624ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6ea3bcede1cbbf89486b9d67329e0110c4624ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6ea3bcede1cbbf89486b9d67329e0110c4624ae"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "c31c09d922df035941d0a85f2ad60d509c2a5409",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/219953ce5095c0430713e4f67d222bdb19d2bdbc/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/219953ce5095c0430713e4f67d222bdb19d2bdbc/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=219953ce5095c0430713e4f67d222bdb19d2bdbc",
        "patch": "@@ -2301,7 +2301,7 @@ Value listunspent(const Array& params, bool fHelp)\n     vector<COutput> vecOutputs;\n     assert(pwalletMain != NULL);\n     LOCK2(cs_main, pwalletMain->cs_wallet);\n-    pwalletMain->AvailableCoins(vecOutputs, false);\n+    pwalletMain->AvailableCoins(vecOutputs, false, NULL, true);\n     BOOST_FOREACH(const COutput& out, vecOutputs) {\n         if (out.nDepth < nMinDepth || out.nDepth > nMaxDepth)\n             continue;"
      },
      {
        "sha": "f0ee834913886000da83116d0e3fd5d2d1ea6b6f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/219953ce5095c0430713e4f67d222bdb19d2bdbc/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/219953ce5095c0430713e4f67d222bdb19d2bdbc/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=219953ce5095c0430713e4f67d222bdb19d2bdbc",
        "patch": "@@ -1481,7 +1481,7 @@ CAmount CWallet::GetImmatureWatchOnlyBalance() const\n /**\n  * populate vCoins with vector of available COutputs.\n  */\n-void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const CCoinControl *coinControl) const\n+void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const CCoinControl *coinControl, bool fIncludeZeroValue) const\n {\n     vCoins.clear();\n \n@@ -1508,7 +1508,7 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const\n             for (unsigned int i = 0; i < pcoin->vout.size(); i++) {\n                 isminetype mine = IsMine(pcoin->vout[i]);\n                 if (!(IsSpent(wtxid, i)) && mine != ISMINE_NO &&\n-                    !IsLockedCoin((*it).first, i) && pcoin->vout[i].nValue > 0 &&\n+                    !IsLockedCoin((*it).first, i) && (pcoin->vout[i].nValue > 0 || fIncludeZeroValue) &&\n                     (!coinControl || !coinControl->HasSelected() || coinControl->IsSelected((*it).first, i)))\n                         vCoins.push_back(COutput(pcoin, i, nDepth, (mine & ISMINE_SPENDABLE) != ISMINE_NO));\n             }"
      },
      {
        "sha": "1c900b03159e9f82bc24b88f770e4d821d611d3f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/219953ce5095c0430713e4f67d222bdb19d2bdbc/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/219953ce5095c0430713e4f67d222bdb19d2bdbc/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=219953ce5095c0430713e4f67d222bdb19d2bdbc",
        "patch": "@@ -540,7 +540,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     //! check whether we are allowed to upgrade (or already support) to the named feature\n     bool CanSupportFeature(enum WalletFeature wf) { AssertLockHeld(cs_wallet); return nWalletMaxVersion >= wf; }\n \n-    void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl = NULL) const;\n+    void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl = NULL, bool fIncludeZeroValue=false) const;\n     bool SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet) const;\n \n     bool IsSpent(const uint256& hash, unsigned int n) const;"
      }
    ]
  },
  {
    "sha": "f89b092d756b2c6d98390507c71db372f66c3f59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODliMDkyZDc1NmIyYzZkOTgzOTA1MDdjNzFkYjM3MmY2NmMzZjU5",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-04-21T08:27:35Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-04-21T09:25:35Z"
      },
      "message": "add rpc test for listunspents support for zero value txouts",
      "tree": {
        "sha": "f6090d2464834fb3f30cb67faaa22ba2fdcb4293",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6090d2464834fb3f30cb67faaa22ba2fdcb4293"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f89b092d756b2c6d98390507c71db372f66c3f59",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f89b092d756b2c6d98390507c71db372f66c3f59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f89b092d756b2c6d98390507c71db372f66c3f59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f89b092d756b2c6d98390507c71db372f66c3f59/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "219953ce5095c0430713e4f67d222bdb19d2bdbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/219953ce5095c0430713e4f67d222bdb19d2bdbc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/219953ce5095c0430713e4f67d222bdb19d2bdbc"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "08032fc53899689aa94b8cf7888c4042fc91e8b9",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f89b092d756b2c6d98390507c71db372f66c3f59/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f89b092d756b2c6d98390507c71db372f66c3f59/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=f89b092d756b2c6d98390507c71db372f66c3f59",
        "patch": "@@ -151,6 +151,33 @@ def run_test (self):\n \n         assert(txid1 in self.nodes[3].getrawmempool())\n         \n+        #check if we can list zero value tx as available coins\n+        #1. create rawtx\n+        #2. hex-changed one output to 0.0 \n+        #3. sign and send\n+        #4. check if recipient (node0) can list the zero value tx\n+        usp = self.nodes[1].listunspent()\n+        inputs = [{\"txid\":usp[0]['txid'], \"vout\":usp[0]['vout']}]\n+        outputs = {self.nodes[1].getnewaddress(): 49.998, self.nodes[0].getnewaddress(): 11.11}\n+        \n+        rawTx = self.nodes[1].createrawtransaction(inputs, outputs).replace(\"c0833842\", \"00000000\") #replace 11.11 with 0.0 (int32)\n+        decRawTx = self.nodes[1].decoderawtransaction(rawTx)\n+        signedRawTx = self.nodes[1].signrawtransaction(rawTx)\n+        decRawTx = self.nodes[1].decoderawtransaction(signedRawTx['hex'])\n+        zeroValueTxid= decRawTx['txid']\n+        sendResp = self.nodes[1].sendrawtransaction(signedRawTx['hex'])\n+        \n+        self.sync_all()\n+        self.nodes[1].generate(1) #mine a block\n+        self.sync_all()\n+        \n+        unspentTxs = self.nodes[0].listunspent() #zero value tx must be in listunspents output\n+        found = False\n+        for uTx in unspentTxs:\n+            if uTx['txid'] == zeroValueTxid:\n+                found = True\n+                assert_equal(uTx['amount'], Decimal('0.00000000'));\n+        assert(found)\n         \n         #do some -walletbroadcast tests\n         stop_nodes(self.nodes)"
      }
    ]
  }
]