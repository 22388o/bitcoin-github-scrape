BitcoinPullTester,2012-08-14T13:28:56Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/162d57776f40fe05d3df512ca021bc0c3865c970 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7725627,7725627,
Diapolo,2012-08-14T19:33:26Z,"I tried the version from @BitcoinPullTester and it starts just fine, no crashes related to stack-protector on Win7 x64 here.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7737457,7737457,
laanwj,2012-08-16T06:55:11Z,Have you tried some actual stack-smashing fun yet?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7778056,7778056,
Diapolo,2012-08-16T07:49:09Z,"@laanwj No I did not investigate further, until now I just enabled it. Have you got some links for stack-smashing fun :)? Forget my question, I'm going to test it now :).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7778875,7778875,
laanwj,2012-08-16T08:10:48Z,"Well the idea is to make a buffer on the stack and write more into it and than the size of the buffer (ie, char buffer[1024]; buffer[1025]=0xff;  .. and so on the values don't really matter ) \n\nAdd a button that does that , click the button, and see if it gets detected (make sure you don't write too far outside the buffer, maybe make sure there is a variable after it, otherwise you'll always tri",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7779243,7779243,
Diapolo,2012-08-16T09:11:04Z,"<pre>\n    char buffer[1024];\n    buffer[1025]=0xff;\n\n    printf(""%s"", buffer);\n</pre>\n\n\nThe above code seems to trigger SSP detection, see this where `libssp-0.dll` is mentioned. Well now I need to check if the application is halted and aborted or executes further ... before crashing.\n\n<pre>\n Problemereignisname:   APPCRASH\n  Anwendungsname:   bitcoin-qt.exe\n  Anwendungsversion:    0.",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7780283,7780283,
Diapolo,2012-08-16T09:34:27Z,"I tried the same code without SPP enabled and the applications simply continues, which is what malicious code should do, right ;)?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7780722,7780722,
laanwj,2012-08-16T14:15:52Z,"Yes, that's expected\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7786618,7786618,
gmaxwell,2012-08-16T14:18:08Z,Having SSP in windows is great news!   Should also make sure bitcoind gets built with it.\n\nCan you time a blockchain sync with and without (perhaps on testnet?) to make sure it's not slaying it? \n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7786671,7786671,
laanwj,2012-08-16T14:53:37Z,What was the command line again? Something like:\n- remove blkindex.dat\n- bitcoin-qt -loadblock=blk0001.dat\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7787767,7787767,
gmaxwell,2012-08-16T14:55:42Z,Move the databases out of the way then bitcoin-qt -loadblock=notblk0001.dat  (needs to be a separate file)\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7787837,7787837,
laanwj,2012-08-16T15:15:21Z,"In that case I guess it it easiest to pass -datadir= a new, empty directory, then -loadblock= your current blk0001.dat into it. \n\nThen time how long the AppInit2() call takes (or even better, change the  debug log line in LoadExternalBlockFile to state how long it took).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7788447,7788447,
Diapolo,2012-08-16T17:36:41Z,@laanwj You want me to use `-loadblock=` as benchmark if I understand you correctly?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7792891,7792891,
sipa,2012-08-16T18:44:14Z,@Diapolo that's correct\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7794866,7794866,
Diapolo,2012-08-17T08:25:37Z,"I'm currently benchmarking ... one thing, Bitcoin-Qt shows just ""Loading Wallet..."" message, which I think is missleading when doing a block-file import, no?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7812502,7812502,
laanwj,2012-08-17T08:38:45Z,Yes it is probably missing an initmessage somewhere.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7812727,7812727,
Diapolo,2012-08-17T10:17:35Z,"@laanwj Where is that part located in the code?\n\n1st result without this patch:\n08/17/12 09:59:28 Loaded 188524 blocks from external file in 5399340ms\n\n2nd result with this patch:\n08/17/12 11:49:21 Loaded 188524 blocks from external file in 5398498ms\n08/17/12 13:44:26 Loaded 188524 blocks from external file in 5425789ms (verification run)\n\nTo me this looks like SSP is no bottleneck, when ",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7814487,7814487,
sipa,2012-08-17T12:30:03Z,Looks good to me.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7816511,7816511,
Diapolo,2012-08-17T23:13:36Z,"This currently seems to be not working with Gitian or @BitcoinPullTester builds, as the RELEASE=1 scope seems to be not taken into account (see #1673).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7837946,7837946,
Diapolo,2012-08-18T09:11:15Z,"Alright, #1673 is working now, as we enabled the flags there for both RELEASE and DEBUG builds now, but what about the stack protector? We have 2 options, do the same here or ensure RELEASE=1 get's passed to qmake to ensure the block where the SPP flags reside is processed, comments?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7843060,7843060,
laanwj,2012-08-18T09:17:08Z,Just enable it always. It's nice to find stack overwrite bugs while debugging.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7843086,7843086,
Diapolo,2012-08-18T09:27:06Z,Updated to be enabled for RELEASE and DEBUG builds.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7843135,7843135,
laanwj,2012-08-18T09:29:16Z,"Ok, now the upcoming executable created by bitcoin pulltester needs to be carefully tested, to see if it doesn't crash. After all, previous experiments with the cross-compiled executable are probably invalid as the flags weren't really passed.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7843147,7843147,
Diapolo,2012-08-18T09:34:15Z,"What about 2 flags for the UI client `-test-dep` and `-test-ssp`, which would use our small test codes for verifiying the feature is working. We should perhaps not extend the help message, but it would help testing the official client without the need to do an own build?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7843171,7843171,
laanwj,2012-08-18T09:41:47Z,"NACK putting those in the official client. \n\nThat's what the autotesters are for. Though testing these might turn out to be tricky, as you want to reproduce crash behavior and somehow find out what caused the crash.\n\nAlso, mind that BlueMatt's pulltester was never meant to enable testing ""without the need to do your own build"". It is just a final acceptance test. Not a way to get your stuff bu",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7843222,7843222,
Diapolo,2012-08-18T09:49:45Z,"I can do own builds, which are not comparable with official release builds. I just thought about a possibility to verify such features in official client versions :).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7843268,7843268,
Diapolo,2012-08-18T13:33:27Z,"Is anyone able to comment, why the latest build fails (http://jenkins.bluematt.me/pull-tester/9ad1341d46851020b2342670fb73004b909fc80b/test.log)?\n\nThese are the errors I can see, but I'm not sure if or how thay relate to SSP:\n\n<pre>\nERROR: mempool transaction missing input\nERROR: ConnectInputs() : 39393b8fd0 P2SH VerifySignature failed\n</pre>\n\n\nand\n\n<pre>\n+ ./release/bitcoin-qt_test.e",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7844488,7844488,
laanwj,2012-08-18T14:49:59Z,"I somehow think this is not a wine problem, but the same bug that got us to disable stack-protector on windows before. Looks like corruption.\n\nHave you tested the resulting executables in windows?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7845077,7845077,
Diapolo,2012-08-18T16:01:56Z,"@laanwj I would have tested the executable, but @BitcoinPullTester did not generate any bitcoin-qt.exe.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7845677,7845677,
laanwj,2012-08-18T17:30:01Z,"Hmm, even the autotester executable is not downloadable. I guess it doesn't give you those if the test fails.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7846347,7846347,
sipa,2012-08-18T20:55:08Z,"The mempool error is expected; some of the code in the testcases intentionally causes errors, and checks whether they do occur.\n\nRegarding the Edit2 above: seems to only way to get this accepted by pulltester is to disable SSP specially in the pulltester builds...\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7848001,7848001,
Diapolo,2012-08-18T22:41:08Z,Would it be possible to compile a bitcoin-qt.exe before doing any tests? It would be nice to know if just the automatic sanity tests fail or if the exe-file is really not running under Windows (which I can only check if it get's compiled). I'm willing to do some further testing and investigation here...\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7848800,7848800,
TheBlueMatt,2012-08-19T00:55:22Z,"I dont see why the bugs linked above would be the cause here, they effected wine version 0.9.N, the version running on jenkins is 1.2.2.  All files which were built before a failure are on the site (including test_bitcoin.exe, which is in src), and if that's failing, there is no reason bitcoind.exe would work, so that would need fixed first anyway\n\nEdit: sorry, didn't catch that its actually bit",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7849607,7849607,
Diapolo,2012-08-19T17:18:03Z,@TheBlueMatt I'll try one more rebase with --fstack-protector (instead of -fstack-protector-all) and if that fails the problem with SSP on Windows is still there (IMHO caused by the cross-compilation somehow as my own build runs just fine).\n\nCurrent bitcoin-qt_test.exe crashes for me too.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7854876,7854876,
gmaxwell,2012-08-19T17:27:19Z,"I'm really super doubtful that cross-compilation would be the issue, though different GCC versions might be. The crash thats being reported— a dereference of a near-null pointer sounds like a bug to me; one that may go unnoticed on windows because page 0 is mapped on windows.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7854981,7854981,
Diapolo,2012-08-19T20:56:46Z,"Now that is interesting with just -fstack-protector as flag, the @BitcoinPullTester build passes the sanity-testing, BUT when testing it with testnet it leads to missbehaviour (blkindex.dat could not be loaded or with a clean datadir it shows wallet.dat corrupted / damaged).\n\n@gmaxwell Any idea how to track down your idea further, that this could be a bug? I think it's rather strange that -fstac",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7856753,7856753,
jgarzik,2012-08-21T16:34:13Z,@gmaxwell might be on to something.  mingw builds against binary libs whose ABI occasionally changes due to C++ ABI changes etc.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7907168,7907168,
laanwj,2012-08-21T17:12:05Z,"Could well be. What are the gcc versions involved? What gcc version do you use Diapolo? And which one for Bitcoin Pull tester by @TheBlueMatt? I suspect TheBlueMatt uses the version included in ubuntu lucid (4.4.x), Diapolo is using a more recent one included with mingw (4.6.x?).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7908383,7908383,
TheBlueMatt,2012-08-21T17:17:49Z,ii  mingw32                          4.2.1.dfsg-2ubuntu1                      Minimalist GNU win32 (cross) compiler\nii  gcc                              4:4.5.2-1ubuntu3                         The GNU C compiler\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7908561,7908561,
Diapolo,2012-08-21T17:46:07Z,"I'm currently using `g++ (GCC) 4.7.0`, but I used -fstack-protector-all with the stock minGW version (which is 4.4), that ships with the Qt Windows SDK and SSP was working and not causing any issues.\n\nWhat more can I do to further assist here?\n\nAll dependency libs used by Bitcoin-Qt are compiled with `gcc 4:4.5.2-1ubuntu3 The GNU C compiler` before building our Windows executable?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7909482,7909482,
laanwj,2012-08-21T18:09:05Z,"@diapolo: I suppose mingw32 4.2.1 is actually using gcc 4.2.1 for the cross compile, not 4.5.2.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7910350,7910350,
Diapolo,2012-08-21T18:34:51Z,Well IMHO gcc 4.2.1 is old as the hills ... any chance to upgrade the used compiler?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7911182,7911182,
TheBlueMatt,2012-08-21T19:21:06Z,"The pull tester should be running the same version as gitian.  If you want to use a newer version, test gitian (or run its build script in an Ubuntu VM if you don't feel like doing a physical install for gitian itself) and get that upgraded.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7912780,7912780,
Diapolo,2012-08-22T04:50:01Z,"@TheBlueMatt You are right, that @BitcoinPullTester and Gitian should use the same compiler versions. I was just asking, if someone is able to test-compile with a more current minGW version (at least 4.4) in Gitian or your setup. It drives me mad, that such a security mitigation is not working for Windows, as I'm sure Windows users are far more at risk to encounter an attack in comparison to other",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7924630,7924630,
gmaxwell,2012-08-22T07:44:11Z,More arguments for your amusement: http://lists.cypherpunks.ca/pipermail/otr-dev/2012-August/001373.html\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7926892,7926892,
laanwj,2012-08-22T09:02:44Z,"Even on Ubuntu Precise (12.04) the mingw g++ version is still `i586-mingw32msvc-g++ (GCC) 4.2.1-sjlj (mingw32-2)`.  To use a newer cross-compiler we'd have to build it ourselves.\n\nLooks like ioerror (tor dev) got stack-protector-all to work with mingw cross compile by adding -lssp, though I'm not sure for what version:\nhttps://twitter.com/ioerror/status/238197005946593280?uid=272871165&iid=am-2",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7928472,7928472,
Diapolo,2012-08-22T11:05:13Z,"Is `-lssp` a library we need to add? If you find some documentation about it please link that here, I didn't yet manage to find out anything about that flag.\n\nEdit: I asked ioerror directly via Twitter, let's see...\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7930930,7930930,
TheBlueMatt,2012-08-22T12:47:39Z,"@laanwj precise has two sets of mingw packages - the regular mingw is the same old version, but there is now a mingw-w64 (the 64-bit part is optional) which is gcc 4.6.3.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7932871,7932871,
TheBlueMatt,2012-08-22T12:48:30Z,@Diapolo I'll look into compiling it myself later today if I get a chanace.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7932892,7932892,
Diapolo,2012-08-22T12:49:50Z,"@TheBlueMatt I greatly appreciate your efforts here :) (that goes to all others, who participate here).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7932913,7932913,
laanwj,2012-08-22T18:43:37Z,"I've set up a cross-compile environment with i686-w64-mingw32 (gcc version 4.6.3), outside of gitian, eventually I managed to build a static bitcoin-qt.exe that works well. With `-fstack-protector-all` enabled.\n- I did have to add `windows:LIBS += -Wl,-Bstatic -static-libgcc` to bitcoin-qt.pro to succesfully build a static bitcoin-qt.exe\n- I had to upgrade boost to 1.51.0 to be compatible (other",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7944708,7944708,
Diapolo,2012-08-22T20:05:03Z,"@laanwj Great work and I have some comments to make to your findings.\n1. I'm asking myself, how Gitian creates a static bitcoin-qt.exe as I was never able to achieve this with my local setup. The current project file has `windows:LIBS += -Wl,-Bstatic -static-libgcc` not included, so where is the magic here?\n2. I'm currently using Boost 1.50 and in comparison to 1.49 no monkey patch was needed or",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7947359,7947359,
laanwj,2012-08-23T05:26:12Z,"1. I don't know. As long as things work, we don't ask questions :-) As I'm not building in gitian, it might be that my setup is slightly different, making this necessary. You do need to build Qt yourself to make a static executable, the pre-packaged Qt will not do this.\n2. I don't currently have time to dive deep into boost::ipc, It's a strange place full of magic to make objects behave as normal",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7960312,7960312,
Diapolo,2012-08-23T13:54:32Z,"@laanwj I tried your version and it's working, no crash and no strange errors after startup, looks good.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7970222,7970222,
Diapolo,2012-08-23T21:47:53Z,"Last failure is expected, as I reverted to -fstack-protector-all.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-7985339,7985339,
sipa,2012-09-21T12:01:01Z,Any reason why merging this would be a problem?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-8762416,8762416,
laanwj,2012-09-21T12:12:11Z,"We can merge this pull after MingGW version used for Windows cross-compile is at least 4.4, preferably 4.6. The currently used version is 4.2 which has corruption problems if this is enabled!\n\nOf course, if diaplo updates this to only affect non-windows it can be merged.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-8762633,8762633,
Diapolo,2012-09-21T12:23:24Z,"I would be rather sad if I update this to be mergeable, as I think it loses attention for Windows then.\nI can for sure create a new pull, which does this for all OSes expect Windows and leave this as is, to keep the discussion present.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-8762857,8762857,
Diapolo,2012-10-12T22:06:25Z,"@laanwj Any idea, why we need this (https://github.com/bitcoin/bitcoin/blob/master/bitcoin-qt.pro#L37) in the pro-file, but such a linker flag is not needed in makefile.unix (https://github.com/bitcoin/bitcoin/blob/master/src/makefile.unix#L71) for SSP?\n\nI tried to remove the linker flag for bitcoin-qt, as I was somehow sure it is no linker flag, but that creates a ton of errors (doesn't work an",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-9394262,9394262,
laanwj,2012-11-01T13:58:02Z,"@diapolo The security options need to be passed to the linker as well as compiler. Note that at the bottom of makefile.unix we pass xCXXFLAGS as well as xLDFLAGS to the linker, at different positions in the argument list.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-9980890,9980890,
Diapolo,2012-11-01T20:47:09Z,"I also found out that this option is needed for both (linker and compiler), as you said ;). But this just fails, because of the old GCC version or did I miss something new?\n\nEdit: I closed this by mistake, clicked too fast :-D.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-9995262,9995262,
sipa,2013-01-05T00:43:53Z,"@laanwj So, ACK on this after #2106?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-11906476,11906476,
Diapolo,2013-01-05T01:21:31Z,"@sipa That GCC version should be safe to use, but to be sure I asked you, if you could do a little test build with this pull included :).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-11907096,11907096,
sipa,2013-01-05T01:39:50Z,@Diapolo It's included in http://bitcoin.sipa.be/builds/pre-0.8/2013-01-05-turbo-ldb17/\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-11907393,11907393,
Diapolo,2013-01-05T12:33:41Z,"@sipa Works just fine, startup, IBD, create a TX... all things that couldn't even be tested with the old compiler suite :).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-11913454,11913454,
Diapolo,2013-01-10T22:31:58Z,"Added a -static switch (after @gmaxwell suggested that), which works for my local build. Perhaps @sipa could integrate that into the leveldb17 test builds to see if the libssp-0.dll dependency is gone.\n\nEdit: @laanwj What about adding `CONFIG += static` to the project file? Seems also right :).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12122405,12122405,
Diapolo,2013-01-11T13:18:25Z,Too bad @BitcoinPullTester didn't yet build a binary...\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12143789,12143789,
Diapolo,2013-01-12T09:37:19Z,"@TheBlueMatt \n\n<pre>\n/usr/bin/ld: cannot find -lQtTest\ncollect2: ld returned 1 exit status\nmake: *** [bitcoin-qt_test] Error 1\n</pre>\n\nI'm not sure if this is related to my pull, any idea?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12175925,12175925,
Diapolo,2013-01-13T10:23:14Z,"I need a little help over here :D, my own build is not working like expected with this pull included, I have to say I'm not using a static Qt, as I never managed to set that up for Windows. The dependency for `libssp-0.dll` is gone, when using `QMAKE_LFLAGS *= -static`, which was intended.\n\nThe observed problem is happening with the RPC console, let's say I just input `foo`, it crashes with am M",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12191857,12191857,
sipa,2013-01-13T18:33:29Z,Check latest build here: http://bitcoin.sipa.be/builds/pre-0.8/2013-01-13-turbo-ldb17/\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12197733,12197733,
Diapolo,2013-01-13T20:15:33Z,"@sipa Your linked build does not contain the described error. I wonder how we can now check, that the stack-smashing protection is really still working.\n\nI had code to trigger it, which caused a crash with a clear reference to libssp-0.dll on Windows. I wonder what it would look like with the recent static-change...\n\n<pre>\nchar SPP_buffer[1024];\nSPP_buffer[1025]=0xff;\nprintf(""%s"", SPP_buffe",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12199405,12199405,
BitcoinPullTester,2013-01-13T22:48:38Z,"@Diapolo it appears to be an issue with this pull, it appears to be making the default -static instead of it being dynamic as it used to be.  \n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12201978,12201978,
sipa,2013-01-13T23:28:48Z,Also: can you make this change also for the daemon builds?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12202617,12202617,
Diapolo,2013-01-14T06:05:23Z,"@sipa Yes, I'll make that Windows only and add a commit, which also enabled this for bitcoind.\n\nStill the open question, how can we verify what happens on Windows, when a SSP problem is caught and the app get's terminated with -static beeing active.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12207710,12207710,
Diapolo,2013-01-14T06:54:38Z,@BitcoinPullTester Is the pull tester still using that ancient compiler suite or are you now using the same as @sipa in the leveldb17 pull?\n\nI updated the pull to use -static only for Windows and extened the Windows makefiles for bitcoind to be equal feature-wise.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12208319,12208319,
TheBlueMatt,2013-01-14T17:02:13Z,"@Diapolo The issue is on the linux side, not the MinGW side, I dont believe the leveldb17 pull changes that?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12228058,12228058,
sipa,2013-01-14T22:23:31Z,"@Diapolo I included these changes in the leveldb17 branch (#2106), as it conflicted with other changes there.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12243278,12243278,
Diapolo,2013-01-14T22:28:54Z,"@sipa Can you do a testbuild for me with that code in init.cpp, to see what happens with -static keyword? It will crash, but I would like to know if there is a chance to see the process got terminated by GCCs stack protector.\n\nI think we need to ensure we don't break it...\n\n<pre>\nchar SPP_buffer[1024];\nSPP_buffer[1025]=0xff;\nprintf(""%s"", SPP_buffer);\n</pre>\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12243519,12243519,
sipa,2013-01-14T22:30:32Z,"@Diapolo create a branch with the code you want to test, and point me to a commit id.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12243607,12243607,
Diapolo,2013-01-14T22:32:21Z,"Thanks, will do this tomorrow :). Hope we get that sorted out, would be nice to have leveldb17 branch + stack protector in and working, so we can look at other things.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-12243718,12243718,
jgarzik,2013-05-30T17:06:39Z,@Diapolo ping?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-18694427,18694427,
Diapolo,2013-06-01T11:06:00Z,@jgarzik As we are still using the same ancient GCC version I can't do anything here :-/.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-18787199,18787199,
Diapolo,2013-07-20T14:01:50Z,Is there any current progress in switching to a newer compiler version for our Gitian builds?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-21293937,21293937,
laanwj,2013-09-28T08:29:19Z,Can be done after merging #3029.\nAlthough the patch has to be completely reworked for the new build system.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25294202,25294202,
Diapolo,2013-10-05T11:08:13Z,This should finally be possible now thanks to our new build system :).\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25746384,25746384,
Diapolo,2013-10-06T12:28:33Z,Where do I find the resulting Windows binaries within http://jenkins.bluematt.me/pull-tester/807ec70b377086ac8b19cc2629b967b02c0263e4?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25767323,25767323,
gavinandresen,2013-10-07T04:03:11Z,I'm working on having the pull-tester compile mingw/windows this afternoon. The pull-tester environment uses:\n\ni586-mingw32msvc-g++ (GCC) 4.2.1-sjlj (mingw32-2)\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25784121,25784121,
Diapolo,2013-10-07T06:04:42Z,@gavinandresen I didn't know we haven't yet upgraded pull-tester environment. This patch should at least result in working Windows executables for official Gitian builds.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25786646,25786646,
gavinandresen,2013-10-08T02:23:39Z,"I re-ran the pull-tester with windows builds enabled; the qt .exe is in win32-build/src/qt/\n\nOddly, the pull-tester passed it, although the Qt unit tests fail to run. I guess it crashes in a way that looks like the unit tests succeeded?\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25860679,25860679,
Diapolo,2013-10-08T06:21:26Z,"@gavinandresen As long as we use this ancient `i586-mingw32msvc-g++ (GCC) 4.2.1-sjlj (mingw32-2)` compiler with pull-tester, we can't rely on it for creating or testing this pull I guess. Will download the qt exe and try it, it should crash or misbehave, as that was what happened before with pull-tester builds.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25867218,25867218,
Diapolo,2013-10-08T06:23:46Z,"Gavin, the resulting executables are crazy in size bitcoin-qt.exe has over 120MB and bitcoin.exe over 60MB.\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25867309,25867309,
Diapolo,2013-10-08T08:45:59Z,"Also the bitcoin-qt.exe doesn't show an icon + it doesn't contain any meta-data (from bitcoin-qt-res.rc), wherars bitcoind.exe DOES contain that meta-data (from bitcoind-res.rc).\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-25873434,25873434,
gavinandresen,2013-10-21T01:07:12Z,@Diapolo : re executable size: they are not stripped (contain debugging symbols).  I assume they crash because pull-tester is using an ancient mingw?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-26687889,26687889,
laanwj,2013-10-21T07:29:40Z,"@gavinandresen Yes, they crash because of the ancient mingw version, so this is still pending on a pulltester mingw update. \n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-26697226,26697226,
Diapolo,2014-01-18T15:41:57Z,@laanwj Should this now be possible to work :)?\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-32684665,32684665,
laanwj,2014-01-18T15:45:28Z,Not until we've updated the gcc used by the pulltester.\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-32684756,32684756,
laanwj,2014-01-18T16:14:10Z,Passed? Wow\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-32685448,32685448,
laanwj,2014-01-22T08:52:11Z,"When I build 32/64 bit executables using gitian, I still get the libssp error:\n\n```\nerr:module:import_dll Library libssp-0.dll (which is needed by L""Z:\\home\\orion\\projects\\bitcoin\\gitian-builder\\build\\out\\32\\bitcoin-qt.exe"") not found\nerr:module:LdrInitializeThunk Main exe initialization for L""Z:\\home\\orion\\projects\\bitcoin\\gitian-builder\\build\\out\\32\\bitcoin-qt.exe"" failed, ",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-33002906,33002906,
laanwj,2014-01-22T09:17:40Z,"Correction: \n\nWorks with `-static`. Can you cherry-pick this commit into this branch, to see if the pull tester doesn't bark on it?\nhttps://github.com/laanwj/bitcoin/commit/8ac43c187d30055b231011391d89e0f66d18c179\n",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-33004502,33004502,
Diapolo,2014-01-22T09:22:44Z,Cherry-picked your commit...\n,https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-33004840,33004840,
BitcoinPullTester,2014-01-22T10:07:07Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/6ac0b3be2d5c5277805c16b56ee5b2e59ba9e84c for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/1674#issuecomment-33007949,33007949,
sipa,2013-01-13T23:12:38Z,Can you please make this -static windows-only?\n,https://github.com/bitcoin/bitcoin/pull/1674#discussion_r2630132,2630132,bitcoin-qt.pro
