[
  {
    "sha": "6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTlmMzA4NDI5YWE2ZGM0YjFkMzFjODRhNGY1NTc0ZjcyOTZmOGMx",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-02-20T18:40:10Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-02-21T01:26:23Z"
      },
      "message": "rpc: make an nWalletUnlockTime of -1 to mean \"until next api call\".",
      "tree": {
        "sha": "8ea90962d5e0bf3eea9d1589317ca2313f5c3d25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ea90962d5e0bf3eea9d1589317ca2313f5c3d25"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76a77059f361f3c700a550c11adf567bafebbd00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76a77059f361f3c700a550c11adf567bafebbd00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76a77059f361f3c700a550c11adf567bafebbd00"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 34,
      "deletions": 3
    },
    "files": [
      {
        "sha": "023a5d2c002f2e7a2e17b4b31cbe95ecb9e1a274",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
        "patch": "@@ -132,6 +132,8 @@ Value importprivkey(const Array& params, bool fHelp)\n         }\n     }\n \n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return Value::null;\n }\n \n@@ -222,6 +224,8 @@ Value importwallet(const Array& params, bool fHelp)\n     if (!fGood)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding some keys to wallet\");\n \n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return Value::null;\n }\n \n@@ -254,6 +258,9 @@ Value dumpprivkey(const Array& params, bool fHelp)\n     CKey vchSecret;\n     if (!pwalletMain->GetKey(keyID, vchSecret))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Private key for address \" + strAddress + \" is not known\");\n+\n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return CBitcoinSecret(vchSecret).ToString();\n }\n \n@@ -315,5 +322,8 @@ Value dumpwallet(const Array& params, bool fHelp)\n     file << \"\\n\";\n     file << \"# End of dump\\n\";\n     file.close();\n+\n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return Value::null;\n }"
      },
      {
        "sha": "5c81218a96d56e06241aa1768ee5f3fad761397c",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
        "patch": "@@ -732,6 +732,9 @@ Value signrawtransaction(const Array& params, bool fHelp)\n     result.push_back(Pair(\"hex\", HexStr(ssTx.begin(), ssTx.end())));\n     result.push_back(Pair(\"complete\", fComplete));\n \n+    if (!fGivenKeys && nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n+\n     return result;\n }\n "
      },
      {
        "sha": "06f3987210382c4ed90f68f5929a0ad4eb3773ce",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
        "patch": "@@ -19,6 +19,7 @@\n #include \"json/json_spirit_writer_template.h\"\n \n class CBlockIndex;\n+class CWallet;\n \n /* Start RPC threads */\n void StartRPCThreads();\n@@ -108,6 +109,7 @@ extern std::string HelpExampleCli(std::string methodname, std::string args);\n extern std::string HelpExampleRpc(std::string methodname, std::string args);\n \n extern void EnsureWalletIsUnlocked();\n+extern void LockWallet(CWallet* pWallet);\n \n extern json_spirit::Value getconnectioncount(const json_spirit::Array& params, bool fHelp); // in rpcnet.cpp\n extern json_spirit::Value getpeerinfo(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "1644068020f23c6dc2e5f858a7aa6ef5df41c274",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 3,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
        "patch": "@@ -202,6 +202,8 @@ Value getrawchangeaddress(const Array& params, bool fHelp)\n \n     CKeyID keyID = vchPubKey.GetID();\n \n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return CBitcoinAddress(keyID).ToString();\n }\n \n@@ -345,6 +347,8 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return wtx.GetHash().GetHex();\n }\n \n@@ -443,6 +447,8 @@ Value signmessage(const Array& params, bool fHelp)\n     if (!key.SignCompact(ss.GetHash(), vchSig))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Sign failed\");\n \n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return EncodeBase64(&vchSig[0], vchSig.size());\n }\n \n@@ -785,6 +791,8 @@ Value sendfrom(const Array& params, bool fHelp)\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return wtx.GetHash().GetHex();\n }\n \n@@ -867,6 +875,8 @@ Value sendmany(const Array& params, bool fHelp)\n     if (!pwalletMain->CommitTransaction(wtx, keyChange))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Transaction commit failed\");\n \n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return wtx.GetHash().GetHex();\n }\n \n@@ -1553,11 +1563,13 @@ Value keypoolrefill(const Array& params, bool fHelp)\n     if (pwalletMain->GetKeyPoolSize() < kpSize)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error refreshing keypool.\");\n \n+    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+\n     return Value::null;\n }\n \n \n-static void LockWallet(CWallet* pWallet)\n+void LockWallet(CWallet* pWallet)\n {\n     LOCK(cs_nWalletUnlockTime);\n     nWalletUnlockTime = 0;\n@@ -1612,8 +1624,12 @@ Value walletpassphrase(const Array& params, bool fHelp)\n \n     int64_t nSleepTime = params[1].get_int64();\n     LOCK(cs_nWalletUnlockTime);\n-    nWalletUnlockTime = GetTime() + nSleepTime;\n-    RPCRunLater(\"lockwallet\", boost::bind(LockWallet, pwalletMain), nSleepTime);\n+    if (nSleepTime == -1) {\n+        nWalletUnlockTime = -1;\n+    } else {\n+        nWalletUnlockTime = GetTime() + nSleepTime;\n+        RPCRunLater(\"lockwallet\", boost::bind(LockWallet, pwalletMain), nSleepTime);\n+    }\n \n     return Value::null;\n }"
      }
    ]
  },
  {
    "sha": "09ee034170de3068a79ef900f0feaf45d5cf297b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWVlMDM0MTcwZGUzMDY4YTc5ZWY5MDBmMGZlYWY0NWQ1Y2YyOTdi",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-02-20T21:48:21Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-02-21T01:26:43Z"
      },
      "message": "minor: conform to style conventions.",
      "tree": {
        "sha": "e468ca506a70da91fc42450fb7fabe9e2b3aa57c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e468ca506a70da91fc42450fb7fabe9e2b3aa57c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09ee034170de3068a79ef900f0feaf45d5cf297b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09ee034170de3068a79ef900f0feaf45d5cf297b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09ee034170de3068a79ef900f0feaf45d5cf297b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09ee034170de3068a79ef900f0feaf45d5cf297b/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e9f308429aa6dc4b1d31c84a4f5574f7296f8c1"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 24,
      "deletions": 13
    },
    "files": [
      {
        "sha": "09e318133fa80d0edaee46daa0427d8e6623bccd",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09ee034170de3068a79ef900f0feaf45d5cf297b/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09ee034170de3068a79ef900f0feaf45d5cf297b/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=09ee034170de3068a79ef900f0feaf45d5cf297b",
        "patch": "@@ -132,7 +132,8 @@ Value importprivkey(const Array& params, bool fHelp)\n         }\n     }\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return Value::null;\n }\n@@ -224,7 +225,8 @@ Value importwallet(const Array& params, bool fHelp)\n     if (!fGood)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding some keys to wallet\");\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return Value::null;\n }\n@@ -259,7 +261,8 @@ Value dumpprivkey(const Array& params, bool fHelp)\n     if (!pwalletMain->GetKey(keyID, vchSecret))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Private key for address \" + strAddress + \" is not known\");\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return CBitcoinSecret(vchSecret).ToString();\n }\n@@ -323,7 +326,8 @@ Value dumpwallet(const Array& params, bool fHelp)\n     file << \"# End of dump\\n\";\n     file.close();\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return Value::null;\n }"
      },
      {
        "sha": "a125beff60e284de0867acb1aef7575a235b8ee1",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 9,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09ee034170de3068a79ef900f0feaf45d5cf297b/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09ee034170de3068a79ef900f0feaf45d5cf297b/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=09ee034170de3068a79ef900f0feaf45d5cf297b",
        "patch": "@@ -202,7 +202,8 @@ Value getrawchangeaddress(const Array& params, bool fHelp)\n \n     CKeyID keyID = vchPubKey.GetID();\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return CBitcoinAddress(keyID).ToString();\n }\n@@ -347,7 +348,8 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return wtx.GetHash().GetHex();\n }\n@@ -447,7 +449,8 @@ Value signmessage(const Array& params, bool fHelp)\n     if (!key.SignCompact(ss.GetHash(), vchSig))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Sign failed\");\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return EncodeBase64(&vchSig[0], vchSig.size());\n }\n@@ -791,7 +794,8 @@ Value sendfrom(const Array& params, bool fHelp)\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return wtx.GetHash().GetHex();\n }\n@@ -875,7 +879,8 @@ Value sendmany(const Array& params, bool fHelp)\n     if (!pwalletMain->CommitTransaction(wtx, keyChange))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Transaction commit failed\");\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return wtx.GetHash().GetHex();\n }\n@@ -1563,7 +1568,8 @@ Value keypoolrefill(const Array& params, bool fHelp)\n     if (pwalletMain->GetKeyPoolSize() < kpSize)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error refreshing keypool.\");\n \n-    if (nWalletUnlockTime == -1) LockWallet(pwalletMain);\n+    if (nWalletUnlockTime == -1)\n+        LockWallet(pwalletMain);\n \n     return Value::null;\n }\n@@ -1624,12 +1630,13 @@ Value walletpassphrase(const Array& params, bool fHelp)\n \n     int64_t nSleepTime = params[1].get_int64();\n     LOCK(cs_nWalletUnlockTime);\n-    if (nSleepTime == -1) {\n-        nWalletUnlockTime = -1;\n-    } else {\n+    if (nSleepTime != -1)\n+    {\n         nWalletUnlockTime = GetTime() + nSleepTime;\n         RPCRunLater(\"lockwallet\", boost::bind(LockWallet, pwalletMain), nSleepTime);\n     }\n+    else\n+        nWalletUnlockTime = -1;\n \n     return Value::null;\n }"
      }
    ]
  },
  {
    "sha": "f6bf3987dda6c57b6df879b9d0543fb15450e15f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNmJmMzk4N2RkYTZjNTdiNmRmODc5YjlkMDU0M2ZiMTU0NTBlMTVm",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-02-20T22:00:06Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-02-21T01:26:49Z"
      },
      "message": "rpc: add new argument info to walletpassphrase help.",
      "tree": {
        "sha": "55aa199687256910ce58d52daec6dbf85eff4c50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55aa199687256910ce58d52daec6dbf85eff4c50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6bf3987dda6c57b6df879b9d0543fb15450e15f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6bf3987dda6c57b6df879b9d0543fb15450e15f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6bf3987dda6c57b6df879b9d0543fb15450e15f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6bf3987dda6c57b6df879b9d0543fb15450e15f/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "09ee034170de3068a79ef900f0feaf45d5cf297b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09ee034170de3068a79ef900f0feaf45d5cf297b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09ee034170de3068a79ef900f0feaf45d5cf297b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6ebca042f280d29df4076a1605e41a614ba92bc4",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6bf3987dda6c57b6df879b9d0543fb15450e15f/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6bf3987dda6c57b6df879b9d0543fb15450e15f/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=f6bf3987dda6c57b6df879b9d0543fb15450e15f",
        "patch": "@@ -1591,7 +1591,7 @@ Value walletpassphrase(const Array& params, bool fHelp)\n             \"This is needed prior to performing transactions related to private keys such as sending bitcoins\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"passphrase\\\"     (string, required) The wallet passphrase\\n\"\n-            \"2. timeout            (numeric, required) The time to keep the decryption key in seconds.\\n\"\n+            \"2. timeout            (numeric, required) The time to keep the decryption key in seconds. If -1 is passed, the server will keep the key until the next api call that requires it.\\n\"\n             \"\\nNote:\\n\"\n             \"Issuing the walletpassphrase command while the wallet is already unlocked will set a new unlock\\n\"\n             \"time that overrides the old one.\\n\"\n@@ -1600,6 +1600,8 @@ Value walletpassphrase(const Array& params, bool fHelp)\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"my pass phrase\\\" 60\") +\n             \"\\nLock the wallet again (before 60 seconds)\\n\"\n             + HelpExampleCli(\"walletlock\", \"\") +\n+            \"\\nunlock the wallet until the next key-using call\\n\"\n+            + HelpExampleCli(\"walletpassphrase\", \"\\\"my pass phrase\\\" -1\") +\n             \"\\nAs json rpc call\\n\"\n             + HelpExampleRpc(\"walletpassphrase\", \"\\\"my pass phrase\\\", 60\")\n         );"
      }
    ]
  },
  {
    "sha": "cb31ac84e50f6ae99033c8de5de540345b434eb0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjMxYWM4NGU1MGY2YWU5OTAzM2M4ZGU1ZGU1NDAzNDViNDM0ZWIw",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-02-20T22:32:18Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-02-21T01:27:02Z"
      },
      "message": "rpc: lock wallet on -1 timeout even when an existing private key is imported.",
      "tree": {
        "sha": "527aac7243139e9968798bab14865bf5bdfa8e57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/527aac7243139e9968798bab14865bf5bdfa8e57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb31ac84e50f6ae99033c8de5de540345b434eb0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb31ac84e50f6ae99033c8de5de540345b434eb0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb31ac84e50f6ae99033c8de5de540345b434eb0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb31ac84e50f6ae99033c8de5de540345b434eb0/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6bf3987dda6c57b6df879b9d0543fb15450e15f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6bf3987dda6c57b6df879b9d0543fb15450e15f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6bf3987dda6c57b6df879b9d0543fb15450e15f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8890bdc27b0ace049df923f3e2719c108376d668",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb31ac84e50f6ae99033c8de5de540345b434eb0/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb31ac84e50f6ae99033c8de5de540345b434eb0/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=cb31ac84e50f6ae99033c8de5de540345b434eb0",
        "patch": "@@ -116,7 +116,11 @@ Value importprivkey(const Array& params, bool fHelp)\n \n         // Don't throw error in case a key is already there\n         if (pwalletMain->HaveKey(vchAddress))\n+        {\n+            if (nWalletUnlockTime == -1)\n+                LockWallet(pwalletMain);\n             return Value::null;\n+        }\n \n         pwalletMain->mapKeyMetadata[vchAddress].nCreateTime = 1;\n "
      }
    ]
  }
]