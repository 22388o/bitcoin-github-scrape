DrahtBot,2021-01-09 03:48:09,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21762 (test: Speed up mempool_spend_coinbase.py by MarcoFalke)\n* #21754 (test: Run feature_cltv with MiniWallet by Marco",https://github.com/bitcoin/bitcoin/pull/20889#issuecomment-757089800,757089800,
MarcoFalke,2021-01-10 09:35:38,"The initial design was that none of the calls would be allowed to throw, but no objection to making it more robust and extensible.",https://github.com/bitcoin/bitcoin/pull/20889#issuecomment-757445935,757445935,
mjdietzx,2021-01-10 18:44:45,"> Concept ACK. Reviewed and tested `send-self-transfer`, still testing `generate` method. Actually, faced a related issue while implementing tx after an exception in `mempool_limit.py`, but just went with the intuition that we pop the invalid utxo therefore the rest stays valid ðŸ˜…\n> \n> So I believe the invalid utxo stays in the list even after popping and/or exception in `send_self_transfer`?\",https://github.com/bitcoin/bitcoin/pull/20889#issuecomment-757523736,757523736,
mjdietzx,2021-04-28 17:24:23,Closing in favor of https://github.com/bitcoin/bitcoin/pull/21762,https://github.com/bitcoin/bitcoin/pull/20889#issuecomment-828636845,828636845,
stackman27,2021-02-15 15:28:59,"nit: Aren't we assigning utxos when `sendrawtransaction` succeeds? So, shouldn't it be `#update... after we are sure that sendrawtransaction will succeed` because in the case if we add sign_dont_send options, the `send_self_transfer` succeeds but dont spend tx? ",https://github.com/bitcoin/bitcoin/pull/20889#discussion_r576270231,576270231,test/functional/test_framework/wallet.py
DariusParvin,2021-04-08 06:00:53,"Maybe it's just me but I found these lambda functions a little bit harder to parse compared to the original for loop. Perhaps it would be more readable to create a temporary variable and add it to the utxo list, similar to how utxos are handled in `self_send_transfer`?\n```suggestion\n        new_utxos = []\n        for b in blocks:\n            cb_tx = self._test_node.getblock(blockhash=b, ve",https://github.com/bitcoin/bitcoin/pull/20889#discussion_r609330350,609330350,test/functional/test_framework/wallet.py
mjdietzx,2021-04-28 15:13:13,Good point - I improved the comment. Pushed and rebased,https://github.com/bitcoin/bitcoin/pull/20889#discussion_r622280168,622280168,test/functional/test_framework/wallet.py
mjdietzx,2021-04-28 15:17:22,"I prefer map/filter/reduce combined with lambda functions. I know this kind of diverges from most of the python in the codebase though. So I can definitely be convinced to stick with loops like this, but for now I'll leave it and see if anyone else weighs in",https://github.com/bitcoin/bitcoin/pull/20889#discussion_r622283909,622283909,test/functional/test_framework/wallet.py
MarcoFalke,2021-04-28 16:19:25,I fixed this in #21762 by moving the `self._utxos.append` to the line after `sendrawtransaction`. Wdyt?,https://github.com/bitcoin/bitcoin/pull/20889#discussion_r622339199,622339199,test/functional/test_framework/wallet.py
mjdietzx,2021-04-28 17:24:44,"Looks great, prefer you're implementation",https://github.com/bitcoin/bitcoin/pull/20889#discussion_r622390425,622390425,test/functional/test_framework/wallet.py
