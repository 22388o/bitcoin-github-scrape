[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777028299",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-777028299",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 777028299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzAyODI5OQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-10T20:53:26Z",
    "updated_at": "2021-02-10T20:53:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK: very nice fuzzing work @vasild! :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777028299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787522048",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-787522048",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 787522048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzUyMjA0OA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-28T20:59:34Z",
    "updated_at": "2021-02-28T20:59:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested ACK b0f06d04c1a57b3b440ebccf8482fcee124b6337\r\n\r\nThanks for improving our fuzzing harnesses @vasild! :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787522048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787522979",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-787522979",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 787522979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzUyMjk3OQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-28T21:05:42Z",
    "updated_at": "2021-02-28T21:05:42Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787522979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/827802607",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-827802607",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 827802607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzgwMjYwNw==",
    "user": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?u=fc2e6f106f98731d49e9787f9cbfe86a17447c23&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-27T18:01:01Z",
    "updated_at": "2021-04-27T18:01:01Z",
    "author_association": "MEMBER",
    "body": "Tested b0f06d0 with `FUZZ=addrman src/test/fuzz/fuzz qa-assets/fuzz_seed_corpus/addrman`\r\n```\r\nINFO: Seed: 66461418\r\nINFO: Loaded 1 modules   (442033 inline 8-bit counters): 442033 [0x562796653cc0, 0x5627966bfb71),\r\nINFO: Loaded 1 PC tables (442033 PCs): 442033 [0x5627966bfb78,0x562796d7e688),\r\nINFO:     3980 files found in qa-assets/fuzz_seed_corpus/addrman\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1048576 bytes\r\nINFO: seed corpus: files: 3980 min: 1b max: 1048576b total: 46509329b rss: 109Mb\r\n#512    pulse  cov: 4448 ft: 10018 corp: 209/12622b exec/s: 256 rss: 132Mb\r\n#1024   pulse  cov: 4989 ft: 16253 corp: 342/26Kb exec/s: 128 rss: 154Mb\r\n...\r\n```\r\nWorks as expected.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/827802607/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846697578",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-846697578",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 846697578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjY5NzU3OA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-24T03:00:31Z",
    "updated_at": "2021-08-04T00:37:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20233](https://github.com/bitcoin/bitcoin/pull/20233) (addrman: Make consistency checks a runtime option by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/846697578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850387665",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-850387665",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 850387665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDM4NzY2NQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-28T12:35:54Z",
    "updated_at": "2021-05-28T12:35:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "`b0f06d04c1...0de22a097e`: rebase due to conflicts",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850387665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850486912",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-850486912",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 850486912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDQ4NjkxMg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-28T15:10:22Z",
    "updated_at": "2021-05-28T15:10:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-ACK 0de22a097e89af200d1c6125ba7e5c71fa71e53e",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850486912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886824560",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-886824560",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 886824560,
    "node_id": "IC_kwDOABII5840295w",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T15:56:19Z",
    "updated_at": "2021-07-26T15:56:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "`0de22a097e...fe9401b75d`: rebase due to conflicts and address review suggestion",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886824560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886849398",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-886849398",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 886849398,
    "node_id": "IC_kwDOABII58403D92",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T16:27:13Z",
    "updated_at": "2021-07-26T16:27:13Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886849398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886857520",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-886857520",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 886857520,
    "node_id": "IC_kwDOABII58403F8w",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-26T16:40:03Z",
    "updated_at": "2021-07-26T16:40:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "`fe9401b75d...2fe1efa94c`: address review suggestion",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886857520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890999759",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-890999759",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 890999759,
    "node_id": "IC_kwDOABII5841G5PP",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-02T12:52:22Z",
    "updated_at": "2021-08-02T12:52:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "`2fe1efa94c...1f00d22e12`: rebase due to conflicts",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890999759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892798012",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-892798012",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 892798012,
    "node_id": "IC_kwDOABII5841NwQ8",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T16:26:01Z",
    "updated_at": "2021-08-04T16:26:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "`6d5e55e755...87651795d8`: fix locking in the test's `RandAddr()`, optimize addrman comparison (3-4x speedup!) and reduce the size of addrmans to avoid tests running so long as to cause a timeout.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892798012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892840198",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-892840198",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 892840198,
    "node_id": "IC_kwDOABII5841N6kG",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T17:30:06Z",
    "updated_at": "2021-08-04T17:30:06Z",
    "author_association": "MEMBER",
    "body": "> optimize addrman comparison (3-4x speedup!) and reduce the size of addrmans to avoid tests running so long as to cause a timeout.\r\n\r\nNice!\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892840198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892981036",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#issuecomment-892981036",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21129",
    "id": 892981036,
    "node_id": "IC_kwDOABII5841Oc8s",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-04T21:17:57Z",
    "updated_at": "2021-08-04T21:17:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "cr ACK 87651795d8622d354f8e3c481eb868d9433b841c",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/892981036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675972823",
    "pull_request_review_id": 714219237,
    "id": 675972823,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NTk3MjgyMw==",
    "diff_hunk": "@@ -25,25 +26,172 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n     {\n-        insecure_rand = FastRandomContext{random_seed};\n-        Clear();\n+        insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)};\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address.\n+     */\n+    CNetAddr RandAddr()\n+    {\n+        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n+        static const std::map<uint8_t, uint8_t> net_len_map = {\n+            {1, ADDR_IPV4_SIZE},  {2, ADDR_IPV6_SIZE}, {3, ADDR_TORV2_SIZE},\n+            {4, ADDR_TORV3_SIZE}, {5, ADDR_I2P_SIZE},  {6, ADDR_CJDNS_SIZE}};\n+        const uint8_t net = insecure_rand.randrange(6) + 1; // [1..6]\n+\n+        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+        s << net;\n+        s << insecure_rand.randbytes(net_len_map.at(net));",
    "path": "src/test/fuzz/addrman.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "0de22a097e89af200d1c6125ba7e5c71fa71e53e",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wouldn't it be better to read the address from the fuzz input? Fuzz input isn't uniform and thus can easier reach edge-cases like `000000`, which would be non-trivial or next to impossible with a uniform distribution over a large enough range.\r\n\r\n\r\nAlso, how is this different from `ConsumeNetAddr`?",
    "created_at": "2021-07-24T09:05:49Z",
    "updated_at": "2021-07-24T09:07:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r675972823",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675972823"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r675972823"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/675972823/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 54,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676525584",
    "pull_request_review_id": 714742283,
    "id": 676525584,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjUyNTU4NA==",
    "diff_hunk": "@@ -25,25 +26,172 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n     {\n-        insecure_rand = FastRandomContext{random_seed};\n-        Clear();\n+        insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)};\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address.\n+     */\n+    CNetAddr RandAddr()\n+    {\n+        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n+        static const std::map<uint8_t, uint8_t> net_len_map = {\n+            {1, ADDR_IPV4_SIZE},  {2, ADDR_IPV6_SIZE}, {3, ADDR_TORV2_SIZE},\n+            {4, ADDR_TORV3_SIZE}, {5, ADDR_I2P_SIZE},  {6, ADDR_CJDNS_SIZE}};\n+        const uint8_t net = insecure_rand.randrange(6) + 1; // [1..6]\n+\n+        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+        s << net;\n+        s << insecure_rand.randbytes(net_len_map.at(net));",
    "path": "src/test/fuzz/addrman.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "0de22a097e89af200d1c6125ba7e5c71fa71e53e",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The problem with consuming addresses directly from the fuzz input is that it is limited in size. This test needs 1000s of addresses. What happened in practice was that some random addresses were consumed followed by 1000s of all-zero addresses due to the fuzzing input being exhausted.\r\n\r\nThat is the main difference from `ConsumeNetAddr()`.",
    "created_at": "2021-07-26T11:38:12Z",
    "updated_at": "2021-07-26T11:38:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676525584",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676525584"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676525584"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676525584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 54,
    "side": "RIGHT",
    "in_reply_to_id": 675972823
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676539167",
    "pull_request_review_id": 714759441,
    "id": 676539167,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjUzOTE2Nw==",
    "diff_hunk": "@@ -25,25 +26,172 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n     {\n-        insecure_rand = FastRandomContext{random_seed};\n-        Clear();\n+        insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)};\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address.\n+     */\n+    CNetAddr RandAddr()\n+    {\n+        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n+        static const std::map<uint8_t, uint8_t> net_len_map = {\n+            {1, ADDR_IPV4_SIZE},  {2, ADDR_IPV6_SIZE}, {3, ADDR_TORV2_SIZE},\n+            {4, ADDR_TORV3_SIZE}, {5, ADDR_I2P_SIZE},  {6, ADDR_CJDNS_SIZE}};\n+        const uint8_t net = insecure_rand.randrange(6) + 1; // [1..6]\n+\n+        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+        s << net;\n+        s << insecure_rand.randbytes(net_len_map.at(net));",
    "path": "src/test/fuzz/addrman.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "0de22a097e89af200d1c6125ba7e5c71fa71e53e",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe add a few fuzzed addresses and fill up the rest with synthetic ones?",
    "created_at": "2021-07-26T12:00:09Z",
    "updated_at": "2021-07-26T12:00:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676539167",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676539167"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676539167"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676539167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 54,
    "side": "RIGHT",
    "in_reply_to_id": 675972823
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676735749",
    "pull_request_review_id": 715018328,
    "id": 676735749,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjczNTc0OQ==",
    "diff_hunk": "@@ -25,25 +26,172 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n     {\n-        insecure_rand = FastRandomContext{random_seed};\n-        Clear();\n+        insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)};\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address.\n+     */\n+    CNetAddr RandAddr()\n+    {\n+        // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n+        static const std::map<uint8_t, uint8_t> net_len_map = {\n+            {1, ADDR_IPV4_SIZE},  {2, ADDR_IPV6_SIZE}, {3, ADDR_TORV2_SIZE},\n+            {4, ADDR_TORV3_SIZE}, {5, ADDR_I2P_SIZE},  {6, ADDR_CJDNS_SIZE}};\n+        const uint8_t net = insecure_rand.randrange(6) + 1; // [1..6]\n+\n+        CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+        s << net;\n+        s << insecure_rand.randbytes(net_len_map.at(net));",
    "path": "src/test/fuzz/addrman.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "0de22a097e89af200d1c6125ba7e5c71fa71e53e",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right. The fuzzed provider is not used for anything after consuming the pile of addresses, so it is ok to fully exhaust it. Once it is exhausted, start generating ones from `insecure_rand`.",
    "created_at": "2021-07-26T15:55:46Z",
    "updated_at": "2021-07-26T15:55:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676735749",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676735749"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676735749"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676735749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 54,
    "side": "RIGHT",
    "in_reply_to_id": 675972823
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676745221",
    "pull_request_review_id": 715030790,
    "id": 676745221,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Njc0NTIyMQ==",
    "diff_hunk": "@@ -25,25 +26,194 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n+        : m_fuzzed_data_provider(fuzzed_data_provider)\n+    {\n+        insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)};\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address. Always returns a valid address.\n+     */\n+    CNetAddr RandAddr()\n+    {\n+        CNetAddr addr;\n+        if (m_fuzzed_data_provider.remaining_bytes() > 0) {",
    "path": "src/test/fuzz/addrman.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "fe9401b75d29f1239eafa30748917128dca5792c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe allow the fuzz engine to flip-flop between the two branches, if possible?\r\n\r\n```suggestion\r\n        if (m_fuzzed_data_provider.ConsumeBool()) {\r\n```",
    "created_at": "2021-07-26T16:07:26Z",
    "updated_at": "2021-07-26T16:07:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676745221",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676745221"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676745221"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676745221/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 49,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676772693",
    "pull_request_review_id": 715065473,
    "id": 676772693,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3Njc3MjY5Mw==",
    "diff_hunk": "@@ -25,25 +26,194 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n+        : m_fuzzed_data_provider(fuzzed_data_provider)\n+    {\n+        insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)};\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address. Always returns a valid address.\n+     */\n+    CNetAddr RandAddr()\n+    {\n+        CNetAddr addr;\n+        if (m_fuzzed_data_provider.remaining_bytes() > 0) {",
    "path": "src/test/fuzz/addrman.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "fe9401b75d29f1239eafa30748917128dca5792c",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even better!\r\n\r\nKept the `remaining_bytes()` check for clarity (it will still work without it because `ConsumeBool()` would always return `false` once fuzz input is exhausted but that would be somewhat unclear/obscure).",
    "created_at": "2021-07-26T16:42:50Z",
    "updated_at": "2021-07-26T16:42:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676772693",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676772693"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r676772693"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676772693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 49,
    "side": "RIGHT",
    "in_reply_to_id": 676745221
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683329942",
    "pull_request_review_id": 723191470,
    "id": 683329942,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzMyOTk0Mg==",
    "diff_hunk": "@@ -25,25 +26,208 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n+        : m_fuzzed_data_provider(fuzzed_data_provider)\n+    {\n+        WITH_LOCK(cs, insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)});\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address. Always returns a valid address.\n+     */\n+    CNetAddr RandAddr() EXCLUSIVE_LOCKS_REQUIRED(cs)\n+    {\n+        CNetAddr addr;\n+        if (m_fuzzed_data_provider.remaining_bytes() > 1 && m_fuzzed_data_provider.ConsumeBool()) {\n+            addr = ConsumeNetAddr(m_fuzzed_data_provider);\n+        } else {\n+            // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n+            static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n+                                                                   {2, ADDR_IPV6_SIZE},\n+                                                                   {4, ADDR_TORV3_SIZE},\n+                                                                   {5, ADDR_I2P_SIZE},\n+                                                                   {6, ADDR_CJDNS_SIZE}};\n+            uint8_t net = insecure_rand.randrange(5) + 1; // [1..5]\n+            if (net == 3) {\n+                net = 6;\n+            }\n+\n+            CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+            s << net;\n+            s << insecure_rand.randbytes(net_len_map.at(net));\n+\n+            s >> addr;\n+        }\n+\n+        // Return a dummy IPv4 5.5.5.5 if we generated an invalid address.\n+        if (!addr.IsValid()) {\n+            in_addr v4_addr = {};\n+            v4_addr.s_addr = 0x05050505;\n+            addr = CNetAddr{v4_addr};\n+        }\n+\n+        return addr;\n+    }\n+\n+    /**\n+     * Fill this addrman with lots of addresses from lots of sources.\n+     */\n+    void Fill()\n     {\n-        WITH_LOCK(cs, insecure_rand = FastRandomContext{random_seed});\n-        Clear();\n+        LOCK(cs);\n+\n+        // Add some of the addresses directly to the \"tried\" table.\n+\n+        // 0, 1, 2, 3 corresponding to 0%, 100%, 50%, 33%\n+        const size_t n = m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 3);\n+\n+        const size_t num_sources = m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(10, 50);",
    "path": "src/test/fuzz/addrman.cpp",
    "position": 79,
    "original_position": 79,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is there a reason to exclude num_sources == 1?",
    "created_at": "2021-08-05T10:27:39Z",
    "updated_at": "2021-08-05T13:16:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r683329942",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683329942"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r683329942"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683329942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683623440",
    "pull_request_review_id": 723582844,
    "id": 683623440,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzYyMzQ0MA==",
    "diff_hunk": "@@ -25,25 +26,208 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n+        : m_fuzzed_data_provider(fuzzed_data_provider)\n+    {\n+        WITH_LOCK(cs, insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)});\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address. Always returns a valid address.\n+     */\n+    CNetAddr RandAddr() EXCLUSIVE_LOCKS_REQUIRED(cs)\n+    {\n+        CNetAddr addr;\n+        if (m_fuzzed_data_provider.remaining_bytes() > 1 && m_fuzzed_data_provider.ConsumeBool()) {\n+            addr = ConsumeNetAddr(m_fuzzed_data_provider);\n+        } else {\n+            // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n+            static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n+                                                                   {2, ADDR_IPV6_SIZE},\n+                                                                   {4, ADDR_TORV3_SIZE},\n+                                                                   {5, ADDR_I2P_SIZE},\n+                                                                   {6, ADDR_CJDNS_SIZE}};\n+            uint8_t net = insecure_rand.randrange(5) + 1; // [1..5]\n+            if (net == 3) {\n+                net = 6;\n+            }\n+\n+            CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+            s << net;\n+            s << insecure_rand.randbytes(net_len_map.at(net));\n+\n+            s >> addr;\n+        }\n+\n+        // Return a dummy IPv4 5.5.5.5 if we generated an invalid address.\n+        if (!addr.IsValid()) {\n+            in_addr v4_addr = {};\n+            v4_addr.s_addr = 0x05050505;\n+            addr = CNetAddr{v4_addr};\n+        }\n+\n+        return addr;\n+    }\n+\n+    /**\n+     * Fill this addrman with lots of addresses from lots of sources.\n+     */\n+    void Fill()\n     {\n-        WITH_LOCK(cs, insecure_rand = FastRandomContext{random_seed});\n-        Clear();\n+        LOCK(cs);\n+\n+        // Add some of the addresses directly to the \"tried\" table.\n+\n+        // 0, 1, 2, 3 corresponding to 0%, 100%, 50%, 33%\n+        const size_t n = m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 3);\n+\n+        const size_t num_sources = m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(10, 50);",
    "path": "src/test/fuzz/addrman.cpp",
    "position": 79,
    "original_position": 79,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No.",
    "created_at": "2021-08-05T16:47:27Z",
    "updated_at": "2021-08-05T16:47:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r683623440",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683623440"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r683623440"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683623440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT",
    "in_reply_to_id": 683329942
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/704230763",
    "pull_request_review_id": 748908909,
    "id": 704230763,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNDIzMDc2Mw==",
    "diff_hunk": "@@ -25,25 +26,208 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n+        : m_fuzzed_data_provider(fuzzed_data_provider)\n+    {\n+        WITH_LOCK(cs, insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)});\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address. Always returns a valid address.\n+     */\n+    CNetAddr RandAddr() EXCLUSIVE_LOCKS_REQUIRED(cs)\n+    {\n+        CNetAddr addr;\n+        if (m_fuzzed_data_provider.remaining_bytes() > 1 && m_fuzzed_data_provider.ConsumeBool()) {\n+            addr = ConsumeNetAddr(m_fuzzed_data_provider);\n+        } else {\n+            // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n+            static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n+                                                                   {2, ADDR_IPV6_SIZE},\n+                                                                   {4, ADDR_TORV3_SIZE},\n+                                                                   {5, ADDR_I2P_SIZE},\n+                                                                   {6, ADDR_CJDNS_SIZE}};\n+            uint8_t net = insecure_rand.randrange(5) + 1; // [1..5]\n+            if (net == 3) {\n+                net = 6;\n+            }\n+\n+            CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+            s << net;\n+            s << insecure_rand.randbytes(net_len_map.at(net));\n+\n+            s >> addr;\n+        }\n+\n+        // Return a dummy IPv4 5.5.5.5 if we generated an invalid address.\n+        if (!addr.IsValid()) {\n+            in_addr v4_addr = {};\n+            v4_addr.s_addr = 0x05050505;\n+            addr = CNetAddr{v4_addr};\n+        }\n+\n+        return addr;\n+    }\n+\n+    /**\n+     * Fill this addrman with lots of addresses from lots of sources.\n+     */\n+    void Fill()\n     {\n-        WITH_LOCK(cs, insecure_rand = FastRandomContext{random_seed});\n-        Clear();\n+        LOCK(cs);\n+\n+        // Add some of the addresses directly to the \"tried\" table.\n+\n+        // 0, 1, 2, 3 corresponding to 0%, 100%, 50%, 33%\n+        const size_t n = m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 3);\n+\n+        const size_t num_sources = m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(10, 50);\n+        CNetAddr prev_source;\n+        // Use insecure_rand inside the loops instead of m_fuzzed_data_provider because when\n+        // the latter is exhausted it just returns 0.\n+        for (size_t i = 0; i < num_sources; ++i) {\n+            const auto source = RandAddr();\n+            const size_t num_addresses = insecure_rand.randrange(500) + 1; // [1..500]\n+\n+            for (size_t j = 0; j < num_addresses; ++j) {\n+                const auto addr = CAddress{CService{RandAddr(), 8333}, NODE_NETWORK};\n+                const auto time_penalty = insecure_rand.randrange(100000001);\n+#if 1",
    "path": "src/test/fuzz/addrman.cpp",
    "position": 90,
    "original_position": 90,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What is this for?",
    "created_at": "2021-09-08T09:24:49Z",
    "updated_at": "2021-09-08T09:24:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r704230763",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/704230763"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r704230763"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/704230763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 104,
    "original_line": 104,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705187606",
    "pull_request_review_id": 750145138,
    "id": 705187606,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNTE4NzYwNg==",
    "diff_hunk": "@@ -25,25 +26,208 @@ void initialize_addrman()\n class CAddrManDeterministic : public CAddrMan\n {\n public:\n-    void MakeDeterministic(const uint256& random_seed)\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+\n+    explicit CAddrManDeterministic(FuzzedDataProvider& fuzzed_data_provider)\n+        : m_fuzzed_data_provider(fuzzed_data_provider)\n+    {\n+        WITH_LOCK(cs, insecure_rand = FastRandomContext{ConsumeUInt256(fuzzed_data_provider)});\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);\n+            if (!SanityCheckASMap(m_asmap)) {\n+                m_asmap.clear();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Generate a random address. Always returns a valid address.\n+     */\n+    CNetAddr RandAddr() EXCLUSIVE_LOCKS_REQUIRED(cs)\n+    {\n+        CNetAddr addr;\n+        if (m_fuzzed_data_provider.remaining_bytes() > 1 && m_fuzzed_data_provider.ConsumeBool()) {\n+            addr = ConsumeNetAddr(m_fuzzed_data_provider);\n+        } else {\n+            // The networks [1..6] correspond to CNetAddr::BIP155Network (private).\n+            static const std::map<uint8_t, uint8_t> net_len_map = {{1, ADDR_IPV4_SIZE},\n+                                                                   {2, ADDR_IPV6_SIZE},\n+                                                                   {4, ADDR_TORV3_SIZE},\n+                                                                   {5, ADDR_I2P_SIZE},\n+                                                                   {6, ADDR_CJDNS_SIZE}};\n+            uint8_t net = insecure_rand.randrange(5) + 1; // [1..5]\n+            if (net == 3) {\n+                net = 6;\n+            }\n+\n+            CDataStream s(SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+\n+            s << net;\n+            s << insecure_rand.randbytes(net_len_map.at(net));\n+\n+            s >> addr;\n+        }\n+\n+        // Return a dummy IPv4 5.5.5.5 if we generated an invalid address.\n+        if (!addr.IsValid()) {\n+            in_addr v4_addr = {};\n+            v4_addr.s_addr = 0x05050505;\n+            addr = CNetAddr{v4_addr};\n+        }\n+\n+        return addr;\n+    }\n+\n+    /**\n+     * Fill this addrman with lots of addresses from lots of sources.\n+     */\n+    void Fill()\n     {\n-        WITH_LOCK(cs, insecure_rand = FastRandomContext{random_seed});\n-        Clear();\n+        LOCK(cs);\n+\n+        // Add some of the addresses directly to the \"tried\" table.\n+\n+        // 0, 1, 2, 3 corresponding to 0%, 100%, 50%, 33%\n+        const size_t n = m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 3);\n+\n+        const size_t num_sources = m_fuzzed_data_provider.ConsumeIntegralInRange<size_t>(10, 50);\n+        CNetAddr prev_source;\n+        // Use insecure_rand inside the loops instead of m_fuzzed_data_provider because when\n+        // the latter is exhausted it just returns 0.\n+        for (size_t i = 0; i < num_sources; ++i) {\n+            const auto source = RandAddr();\n+            const size_t num_addresses = insecure_rand.randrange(500) + 1; // [1..500]\n+\n+            for (size_t j = 0; j < num_addresses; ++j) {\n+                const auto addr = CAddress{CService{RandAddr(), 8333}, NODE_NETWORK};\n+                const auto time_penalty = insecure_rand.randrange(100000001);\n+#if 1",
    "path": "src/test/fuzz/addrman.cpp",
    "position": 90,
    "original_position": 90,
    "commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "original_commit_id": "87651795d8622d354f8e3c481eb868d9433b841c",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Change it to `#if 0` to enable the equivalent `#else` branch which is much shorter and clear, but also slower. The `#else` snippet also shows what the faster snippet is trying to achieve by \"manually\" fiddling with addrman internals.",
    "created_at": "2021-09-09T10:10:49Z",
    "updated_at": "2021-09-09T10:10:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r705187606",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705187606"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21129#discussion_r705187606"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21129"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/705187606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 104,
    "original_line": 104,
    "side": "RIGHT",
    "in_reply_to_id": 704230763
  }
]