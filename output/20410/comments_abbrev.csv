jonatack,2020-11-17 19:46:24,"Would this change not disable using `fee_rate` as a positional argument?\n\nThe RPCExamples for `sendtoaddress` and `send` would need to be updated if this change is made, as the positional `fee_rate` usage is documented in them.",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729160663,729160663,
MarcoFalke,2020-11-17 19:50:23,You can pass JSON-None if you'd like to use positional args,https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729162966,729162966,
DrahtBot,2020-11-17 20:33:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20362 (test: Implicitly sync after generate* to preempt races and intermittent test failures by MarcoFalke)\n\nIf you con",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729185465,729185465,
MarcoFalke,2020-11-17 21:06:12,"Oh, it looks like bitcoin-cli can not properly pass JSON-None? Sounds like a bug",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729213693,729213693,
achow101,2020-11-17 21:12:13,"> Oh, it looks like bitcoin-cli can not properly pass JSON-None? Sounds like a bug\n\nYou can just use `null`. It's worked for me before.",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729216586,729216586,
jonatack,2020-11-17 21:17:27,An example? I haven't managed to make it work via the CLI.,https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729219251,729219251,
MarcoFalke,2020-11-18 06:35:19,"It doesn't work for strings because cli will convert `null` to `""null""` (string), not `Null` (null-type)",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729465598,729465598,
MarcoFalke,2020-11-18 07:34:06,"> The RPCExamples for sendtoaddress and send would need to be updated\n\nThanks, done.",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729494291,729494291,
jonatack,2020-11-18 10:36:27,Building and testing.,https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-729590781,729590781,
laanwj,2020-11-19 08:44:28,"> It doesn't work for strings because cli will convert null to ""null"" (string), not Null (null-type)\n\nYes, in that case you cannot pass any other kind of JSON type except strings. It's kind of annoying, but there is no non-ambigious way of doing so because every argument is a valid string. Special-casing the string ""null"" in bitcoin-cli would be awful. At least named arguments can achieve this",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-730220672,730220672,
jonatack,2020-11-19 11:22:37,"Tested ACK fa7df9be0d1034d2bbbde19a45b1e706368b4c1b\n",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-730307235,730307235,
jonatack,2020-11-19 11:31:40,"A separate issue I found while testing this: in the as-yet unreleased `send` RPC, it seems impossible to use ""options"" as a positional arg, as there is no no-op value for the ""fee_rate"" arg. So the third example should either be removed, or updated if we fix this via either allowing ""fee_rate"" to have a no-op value or, more likely, by moving ""fee_rate"" to after ""options"" in the args order. I can d",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-730312968,730312968,
MarcoFalke,2020-11-19 12:16:53,"Do you have steps to reproduce? This works fine locally:\n\n```\n$ ./src/bitcoin-cli  send '{""bcrt1q0pqmg4cvjf80x7l7xsrhp65fchg2fw9zk39m74"":0.1}'  null ""unset"" null '{""fee_rate"":1.234}'\n{\n  ""txid"": ""3bda2cb650a3937b676782214837fea6313158a156113e059bd9cad118717ecb"",\n  ""complete"": true\n}\n",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-730336487,730336487,
jonatack,2020-11-19 12:34:13,"Oh good, thanks, sorry for noise. One of my ""null""s was spelled ""nul"". I think the third week of full lockdown and lack of my usual balance from outdoor sport are getting to me...\n```\n$ ./src/bitcoin-cli -signet -rpcwallet="""" send '{""tb1qn84cdagw67kpqaz4ugmw76tlhqgdp2jk9zz94j"": 0.05}' null ""unset"" null '{""fee_rate"": 1}'\n{\n  ""txid"": ""25d0924beac73778566909c0658698a4602d2f9444895542f85726e7b",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-730345395,730345395,
jonatack,2020-11-19 12:37:49,"This `send` example was incorrect and needs to be updated:\n```\nSend 0.2 BTC with a fee rate of 1 sat/vB using the options argument\n> bitcoin-cli send '{""bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl"": 0.2}' '{""fee_rate"": 1}'\n```\n",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-730347073,730347073,
MarcoFalke,2020-11-19 12:54:52,"Good catch. Didn't realize the example was wrong, too. Now fixed.",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-730356969,730356969,
jonatack,2020-11-19 14:25:49,ACK fa69c2c78455fd0dc436018fece9ff7fc83a180d,https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-730409880,730409880,
MarcoFalke,2020-11-23 13:17:22,"> I don't think treating """"==None is particularly ambiguous\n\nFair enough, but it wasn't documented in the RPCArg help. I think keeping the already existing `""unset""` is sufficient and adding more alternative strings to do the same thing isn't going to help.",https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-732155606,732155606,
achow101,2020-11-24 18:42:59,ACK fa69c2c78455fd0dc436018fece9ff7fc83a180d,https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-733164027,733164027,
MarcoFalke,2020-11-25 07:09:36,Backported in #20485 ,https://github.com/bitcoin/bitcoin/pull/20410#issuecomment-733513156,733513156,
jonatack,2020-11-17 18:48:47,"Would need to update the `SetFeeEstimateMode` Doxygen documentation, e.g.:\n```diff\n- * @param[in]     conf_target       UniValue integer; confirmation target in blocks, values between 1 and 1008 are valid per policy/fees.h;\n- *                                      if a fee_rate is present, 0 is allowed here as a no-op positional placeholder\n- * @param[in]     estimate_mode     UniValue str",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r525403750,525403750,src/wallet/rpcwallet.cpp
MarcoFalke,2020-11-17 19:05:39,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r525414355,525414355,src/wallet/rpcwallet.cpp
jonatack,2020-11-18 10:52:13,"Maybe we should also allow an estimate mode of ""unset"" with a fee rate? \n\nI wonder if the helps should state that """" is an allowed no-op value in addition to unset, economical and conservative.",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r525991890,525991890,src/wallet/rpcwallet.cpp
jonatack,2020-11-18 10:57:06,"re-enable previous coverage?\n```python3\n# Passing conf_target null, estimate_mode """" as placeholder arguments should allow fee_rate to apply.\ntxid = self.nodes[2].sendmany(amounts={address: 10}, conf_target=None, estimate_mode="""", fee_rate=fee_rate_sat_vb)\n```\n",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r525995039,525995039,test/functional/wallet_basic.py
jonatack,2020-11-18 10:59:13,"```python3\n# Passing conf_target null, estimate_mode """" as placeholder arguments should allow fee_rate to apply.\ntxid = self.nodes[2].sendtoaddress(address=address, amount=amount, conf_target=None, estimate_mode="""", fee_rate=fee_rate_sat_vb)\n```\n\n",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r525996316,525996316,test/functional/wallet_basic.py
jonatack,2020-11-18 11:01:23,"```python3\n# Passing conf_target null, estimate_mode """" as placeholder arguments should allow fee_rate to apply.\nres = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=None, estimate_mode="""", fee_rate=7, add_to_wallet=False)\n```\n",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r525997654,525997654,test/functional/wallet_send.py
jonatack,2020-11-18 11:01:49,"```python3\n# Passing conf_target null, estimate_mode """" as placeholder arguments should allow fee_rate to apply.\nres = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=None, arg_estimate_mode="""", arg_fee_rate=4.531, add_to_wallet=False)\n```\n",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r525997918,525997918,test/functional/wallet_send.py
MarcoFalke,2020-11-19 10:38:36,"Thanks, done.",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r526758842,526758842,src/wallet/rpcwallet.cpp
MarcoFalke,2020-11-19 10:39:34,"Added one test for estimate_mode=""unset""",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r526759489,526759489,test/functional/wallet_basic.py
MarcoFalke,2020-11-19 10:39:40,"Added one test for estimate_mode=""unset""",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r526759533,526759533,test/functional/wallet_basic.py
MarcoFalke,2020-11-19 10:39:47,"Added one test for estimate_mode=""unset""",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r526759614,526759614,test/functional/wallet_send.py
MarcoFalke,2020-11-19 10:39:54,"Added one test for estimate_mode=""unset""",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r526759693,526759693,test/functional/wallet_send.py
Sjors,2020-11-23 08:36:11,"`estimate_mode` can't be `null` for `send` and `sendtoaddress`. It will throw `Cannot specify both estimate_mode and fee_rate`. It does if you add it to `client.cpp`, but then `unset` and `""unset""` throw `error: Error parsing JSON: unset`.",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r528537342,528537342,src/wallet/rpcwallet.cpp
jonatack,2020-11-23 08:43:21,"Yes, that comment is a bit ambiguous; IIRC null is only for conf_target and unset only for estimate_mode.",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r528541164,528541164,src/wallet/rpcwallet.cpp
MarcoFalke,2020-11-23 12:47:24,"> estimate_mode can't be null for send and sendtoaddress. It will throw Cannot specify both estimate_mode and fee_rate. \n\nThis comment is in the server code, where it can be null, not in the client code. You can trivially check with this diff, so I think the comment is correct:\n\n\n\n```diff\ndiff --git a/test/functional/wallet_basic.py b/test/functional/wallet_basic.py\nindex ac4a6e494",https://github.com/bitcoin/bitcoin/pull/20410#discussion_r528678454,528678454,src/wallet/rpcwallet.cpp
