petertodd,2015-07-09T04:08:20Z,ACK concept.\n\nLong unconfirmed chains are inefficient - use RBF to replace txs with ones with more outputs - and post problems for future scalability improvements as they reduce parallelism opportunities in block processing.\n\nI'd implement it differently though as an additional depth value recorded for each tx in the mempool - nMaxDepth - where nMaxDepth = max(nMaxDepth of all parent txs) This,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-119809551,119809551,
wizkid057,2015-07-09T15:18:13Z,ACK concept and functionality.\n\nI've been testing this commit since last night and it seems to work as intended.\n,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120029710,120029710,
btcdrak,2015-07-09T18:34:05Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120097679,120097679,
matthieu,2015-07-09T20:39:37Z,Just worried this patch will increase the incentive to have output spam (especially in light of the current attack). Shred outputs on each block and spend them with more transactions until you hit dust limit and repeat.\n,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120138582,120138582,
bencxr,2015-07-09T21:23:11Z,"NACK, this will exacerbate the effect of full blocks / long confirmation wait times on legitimate users. \n\nIt impacts scenarios where the wallet software must send out several transactions without knowing the recipients in advance, e.g. users with one unspent sending to multiple payees, exchange wallets that start with one/few unspents (e.g. after refilling a hot wallet). Full RBF to replace txs",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120147895,120147895,
luke-jr,2015-07-09T21:40:07Z,@bencxr It won't do anything unless explicitly enabled. Finding the ideal limit to use is an exercise for relay/miner nodes.\n,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120151096,120151096,
bencxr,2015-07-09T21:54:29Z,@luke-jr what limit would you recommend? 10 - 20? \nmany relay/miner node operators do not have the resources to determine the best limit or understand implications.\n,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120155850,120155850,
luke-jr,2015-07-10T02:54:23Z,"@bencxr Part of the reason why it is defaulting to zero is because we do not know what limit to recommend yet. It will take some experimentation. Furthermore, determining proper policy is part of a miner's _job_, so that excuse is not relevant.\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120209050,120209050,
matthieu,2015-07-10T03:51:02Z,"@luke-jr there doesn't seem to be a lot of consensus (heh) around what miner's job is. And telling people what their job is rarely helps in making them do it (believe me, I tried).\n\nFurthermore if it's a mining policy, why make it influence pool composition instead or how blocks are built?\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120216162,120216162,
luke-jr,2015-07-10T03:52:22Z,"@matthieu It's also a relay policy. I'm just not pushing relay nodes to ""do their job"" - if they relay spam, it mostly just hurts themselves. :p\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120216257,120216257,
matthieu,2015-07-10T04:12:17Z,"@lukejr There are use cases that involve long chains that aren't spammy.\nOne is people using fee addresses for example, where a service pays for\nfees for their users. And is said service can use multiple addresses to\navoid the chain, so can a spammer.\n\nNot questioning that the patch can make sense under a certain light, just\nthat this specific criteria is one that can help identifying spam.\",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120220843,120220843,
Mirobit,2015-07-10T15:23:49Z,@luke-jr You know that most of the node operators and miners will never change a single setting. For node operators that is ok since they do it for free and maybe don't have the time/knowledge to follow all the recent developments. But even miners relay mostly an default policy (e.g. the block size increase from from 0.75 to 1 MB took quite a while and a lot of pushing).\n\n@petertodd If this sett,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-120435596,120435596,
jgarzik,2015-07-23T19:15:02Z,"concept ACK, and I agree rolling this out default-disabled is reasonable.\n\nMain reservation:  Enabling this can potentially create an expensive search, adding CPU cost for a large mempool during new-TX-entry.\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-124215227,124215227,
MarcoFalke,2015-08-07T08:45:53Z,"NACK. Can someone explain me what problem is being solved by this PR? The only one I could think of is ""weak"" nodes (not miners) trying to be less susceptible to DOS. But then the attacker switches to multi-output txs instead of long tx chains ...\n\nAlso, triggering this with `sendtoaddress` gives me conflicting transactions. Is this wanted?\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-128643290,128643290,
jgarzik,2015-09-16T13:23:13Z,"A roll of the dice.\n\nBest to put this in the category of ""don't unnecessarily restrict usage"" because there may be some edge case utility we don't see immediately.\n\nWeak NAK based on that reasoning.\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-140740922,140740922,
sipa,2015-09-16T13:25:18Z,"#6554 has better reasoning for this, and should be far more efficient.\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-140741430,140741430,
dcousens,2015-09-16T14:29:04Z,"_edit:_ [from IRC] @sipa I think you referred to the wrong issue? \n\nNACK.\n\nThe DDoS caused by an unlimited depth can easily be replicated by an unlimited horizontal scaling factor.\n\nConsider the case of an attacker choosing to submit 1000 transactions as a form of spam.\nBefore this pull request,  he could submit 1 transaction following another, and achieve the desired result.  This would ha",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-140758481,140758481,
sipa,2015-09-16T14:30:57Z,"Sorry, I mean #6654 (thanks @dcousens).\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-140759331,140759331,
gmaxwell,2015-09-16T14:41:03Z,@dcousens With respect--- horizontal scaling is not the same thing:\n- Horizontal scaling is limited by access to spendable outputs. There is no limit to vertical depth.\n- Sufficiently deep chains will (likely) never have their later fees paid (esp as few miners do CPFP and any sane CPFP will have a finite horizon)\n- Algorithms which consider decedent or ancestor costs will have usually have sup,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-140762075,140762075,
dcousens,2015-09-16T15:09:06Z,"> Horizontal scaling is limited by access to spendable outputs. There is no limit to vertical depth.\n\nVertical depth is limited by spendable outputs too?   I'm not sure understand how this is different,  every transaction input must have a subsequent output (coin bases excepted)?\n\n> Sufficiently deep chains will (likely) never have their later fees paid (esp as few miners do CPFP and any sane ",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-140770986,140770986,
sipa,2015-09-16T15:13:24Z,"Read #6654 please. It introduces more iseful limits, which are inspired by\nactual performance problems encountered in the mempool limiting work.\n",https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-140772381,140772381,
petertodd,2015-09-16T20:39:27Z,NACK in favor of  #6654. (but thanks for getting the ball rolling on this!)\n,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-140886686,140886686,
MarcoFalke,2015-09-22T07:28:59Z,As #6654 is merged. What is the status of this PR?\n,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-142201794,142201794,
luke-jr,2015-09-22T17:06:09Z,Probably makes sense to close this now.\n,https://github.com/bitcoin/bitcoin/pull/6403#issuecomment-142350870,142350870,
Diapolo,2015-07-09T15:26:29Z,How often do I need to tell you to NOT do this in 2 lines ;)? @laanwj Also did this...\n,https://github.com/bitcoin/bitcoin/pull/6403#discussion_r34267443,34267443,src/main.cpp
Diapolo,2015-07-09T15:26:56Z,Nit: `size_t`?\n,https://github.com/bitcoin/bitcoin/pull/6403#discussion_r34267486,34267486,src/main.cpp
Diapolo,2015-07-09T15:28:31Z,Couldn't you directly save from GetArg as unsigned int or cast there?\n,https://github.com/bitcoin/bitcoin/pull/6403#discussion_r34267673,34267673,src/main.cpp
Diapolo,2015-07-09T15:28:52Z,Is it intended to be not mentioned in the help message?\n,https://github.com/bitcoin/bitcoin/pull/6403#discussion_r34267721,34267721,src/main.cpp
luke-jr,2015-07-10T02:44:26Z,Not until after the non-negative check two lines up...?\n,https://github.com/bitcoin/bitcoin/pull/6403#discussion_r34324287,34324287,src/main.cpp
luke-jr,2015-07-10T02:47:39Z,"Sorry, it's a good habit I have...\n",https://github.com/bitcoin/bitcoin/pull/6403#discussion_r34324393,34324393,src/main.cpp
