[
  {
    "sha": "dab9fb41c7a4033b45c602840ee94b8039b6704b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYWI5ZmI0MWM3YTQwMzNiNDVjNjAyODQwZWU5NGI4MDM5YjY3MDRi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2013-09-11T18:29:44Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2013-09-11T18:34:26Z"
      },
      "message": "detect if txFee is voluntary\n\n- CreateTransaction will detect/report if txFee added was required or is voluntary\n- Qt: different terms in send coins dialog\n\nSigned-off-by: Jonas Schnelli <jonas.schnelli@include7.ch>",
      "tree": {
        "sha": "bf87399ef22089ea2ba2560cebd1d838be83f2be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf87399ef22089ea2ba2560cebd1d838be83f2be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dab9fb41c7a4033b45c602840ee94b8039b6704b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dab9fb41c7a4033b45c602840ee94b8039b6704b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dab9fb41c7a4033b45c602840ee94b8039b6704b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dab9fb41c7a4033b45c602840ee94b8039b6704b/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11a79680b174ec39d462925ea565a23aa8c147ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11a79680b174ec39d462925ea565a23aa8c147ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11a79680b174ec39d462925ea565a23aa8c147ad"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 47,
      "deletions": 16
    },
    "files": [
      {
        "sha": "1b17f9650fc8ef9de174f96c3382195afffd6b00",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=dab9fb41c7a4033b45c602840ee94b8039b6704b",
        "patch": "@@ -184,9 +184,18 @@ void SendCoinsDialog::on_sendButton_clicked()\n     {\n         // append fee string if a fee is required\n         questionString.append(\"<hr /><span style='color:#aa0000;'>\");\n-        questionString.append(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), txFee));\n-        questionString.append(\"</span> \");\n-        questionString.append(tr(\"added as transaction fee\"));\n+        questionString.append(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), txFee).replace(\" \", \"&nbsp;\"));\n+        questionString.append(\"</span>&nbsp;\");\n+        \n+        if(currentTransaction.isTransactionFeeVoluntary())\n+        {\n+            questionString.append(tr(\"added as voluntary transaction fee\").replace(\" \", \"&nbsp;\"));\n+        }\n+        else\n+        {\n+            questionString.append(tr(\"added as required transaction fee\").replace(\" \", \"&nbsp;\"));\n+        }\n+        \n     }\n     if(txFee > 0 || recipients.count() > 1)\n     {"
      },
      {
        "sha": "da53ce3c94529108a7847c03bbbdd2c8e441203c",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=dab9fb41c7a4033b45c602840ee94b8039b6704b",
        "patch": "@@ -193,7 +193,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n \n     if((total + nTransactionFee) > getBalance())\n     {\n-        transaction.setTransactionFee(nTransactionFee);\n+        transaction.setTransactionFee(nTransactionFee, false);\n         return SendCoinsReturn(AmountWithFeeExceedsBalance);\n     }\n \n@@ -206,8 +206,9 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n \n         CWalletTx *newTx = transaction.getTransaction();\n         CReserveKey *keyChange = transaction.getPossibleKeyChange();\n-        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, strFailReason);\n-        transaction.setTransactionFee(nFeeRequired);\n+        bool isVoluntaryFee = false;\n+        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, isVoluntaryFee, strFailReason);\n+        transaction.setTransactionFee(nFeeRequired, isVoluntaryFee);\n \n         if(!fCreated)\n         {"
      },
      {
        "sha": "4321bd23aff2cba27bc38ed718def14190f2309d",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=dab9fb41c7a4033b45c602840ee94b8039b6704b",
        "patch": "@@ -4,7 +4,8 @@ WalletModelTransaction::WalletModelTransaction(const QList<SendCoinsRecipient> &\n     recipients(recipients),\n     walletTransaction(0),\n     keyChange(0),\n-    fee(0)\n+    fee(0),\n+    isVoluntary(false)\n {\n     walletTransaction = new CWalletTx();\n }\n@@ -30,9 +31,15 @@ qint64 WalletModelTransaction::getTransactionFee()\n     return fee;\n }\n \n-void WalletModelTransaction::setTransactionFee(qint64 newFee)\n+void WalletModelTransaction::setTransactionFee(qint64 newFee, bool isVoluntary)\n {\n     fee=newFee;\n+    this->isVoluntary = isVoluntary;\n+}\n+\n+bool WalletModelTransaction::isTransactionFeeVoluntary()\n+{\n+    return isVoluntary;\n }\n \n qint64 WalletModelTransaction::getTotalTransactionAmount()"
      },
      {
        "sha": "7996fa062cea6f1f5bb7435ef9ea1b4bd3c5416a",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=dab9fb41c7a4033b45c602840ee94b8039b6704b",
        "patch": "@@ -16,8 +16,10 @@ class WalletModelTransaction\n \n     CWalletTx *getTransaction();\n \n-    void setTransactionFee(qint64 newFee);\n+    void setTransactionFee(qint64 newFee, bool isVoluntary);\n     qint64 getTransactionFee();\n+    \n+    bool isTransactionFeeVoluntary();\n \n     qint64 getTotalTransactionAmount();\n \n@@ -29,6 +31,7 @@ class WalletModelTransaction\n     CWalletTx *walletTransaction;\n     CReserveKey *keyChange;\n     qint64 fee;\n+    bool isVoluntary;\n \n public slots:\n "
      },
      {
        "sha": "7a8651a8ba7045df9270dec78544a66c47dbb2af",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=dab9fb41c7a4033b45c602840ee94b8039b6704b",
        "patch": "@@ -706,7 +706,8 @@ Value sendmany(const Array& params, bool fHelp)\n     CReserveKey keyChange(pwalletMain);\n     int64 nFeeRequired = 0;\n     string strFailReason;\n-    bool fCreated = pwalletMain->CreateTransaction(vecSend, wtx, keyChange, nFeeRequired, strFailReason);\n+    bool isVoluntaryFee= false;\n+    bool fCreated = pwalletMain->CreateTransaction(vecSend, wtx, keyChange, nFeeRequired, isVoluntaryFee, strFailReason);\n     if (!fCreated)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, strFailReason);\n     if (!pwalletMain->CommitTransaction(wtx, keyChange))"
      },
      {
        "sha": "4ae485568d7606b32d5e4e9197cdbeb8e180c764",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=dab9fb41c7a4033b45c602840ee94b8039b6704b",
        "patch": "@@ -1170,7 +1170,7 @@ bool CWallet::SelectCoins(int64 nTargetValue, set<pair<const CWalletTx*,unsigned\n \n \n bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend,\n-                                CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet, std::string& strFailReason)\n+                                CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet, bool& isVoluntaryFee, std::string& strFailReason)\n {\n     int64 nValue = 0;\n     BOOST_FOREACH (const PAIRTYPE(CScript, int64)& s, vecSend)\n@@ -1306,6 +1306,15 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend,\n                 int64 nPayFee = nTransactionFee * (1 + (int64)nBytes / 1000);\n                 bool fAllowFree = AllowFree(dPriority);\n                 int64 nMinFee = GetMinFee(wtxNew, fAllowFree, GMF_SEND);\n+  \n+                // Check if the fee is voluntary or required\n+                isVoluntaryFee = true;\n+                if((nMinFee > 0 && (nTransactionFee <= nMinFee)) || (nMinFee == 0 && nTransactionFee == 0))\n+                {\n+                    isVoluntaryFee = false;\n+                }\n+                \n+                \n                 if (nFeeRet < max(nPayFee, nMinFee))\n                 {\n                     nFeeRet = max(nPayFee, nMinFee);\n@@ -1324,11 +1333,11 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend,\n }\n \n bool CWallet::CreateTransaction(CScript scriptPubKey, int64 nValue,\n-                                CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet, std::string& strFailReason)\n+                                CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet, bool& isVoluntaryFee, std::string& strFailReason)\n {\n     vector< pair<CScript, int64> > vecSend;\n     vecSend.push_back(make_pair(scriptPubKey, nValue));\n-    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet, strFailReason);\n+    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet, isVoluntaryFee, strFailReason);\n }\n \n // Call after CreateTransaction unless you want to abort\n@@ -1387,6 +1396,7 @@ string CWallet::SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew,\n {\n     CReserveKey reservekey(this);\n     int64 nFeeRequired;\n+\tbool isVoluntaryFee = false;\n \n     if (IsLocked())\n     {\n@@ -1395,7 +1405,7 @@ string CWallet::SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew,\n         return strError;\n     }\n     string strError;\n-    if (!CreateTransaction(scriptPubKey, nValue, wtxNew, reservekey, nFeeRequired, strError))\n+    if (!CreateTransaction(scriptPubKey, nValue, wtxNew, reservekey, nFeeRequired, isVoluntaryFee, strError))\n     {\n         if (nValue + nFeeRequired > GetBalance())\n             strError = strprintf(_(\"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!\"), FormatMoney(nFeeRequired).c_str());"
      },
      {
        "sha": "007fba6980afa718588f8d38adb72da014d41a19",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dab9fb41c7a4033b45c602840ee94b8039b6704b/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=dab9fb41c7a4033b45c602840ee94b8039b6704b",
        "patch": "@@ -207,9 +207,9 @@ class CWallet : public CCryptoKeyStore\n     int64 GetUnconfirmedBalance() const;\n     int64 GetImmatureBalance() const;\n     bool CreateTransaction(const std::vector<std::pair<CScript, int64> >& vecSend,\n-                           CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet, std::string& strFailReason);\n+                           CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet, bool& isVoluntaryFee, std::string& strFailReason);\n     bool CreateTransaction(CScript scriptPubKey, int64 nValue,\n-                           CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet, std::string& strFailReason);\n+                           CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet, bool& isVoluntaryFee, std::string& strFailReason);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n     std::string SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n     std::string SendMoneyToDestination(const CTxDestination &address, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);"
      }
    ]
  }
]