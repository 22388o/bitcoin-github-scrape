laanwj,2018-02-17T09:16:26Z,"Obvious utACK, sorry for merging before @theuni could get a look at it.",https://github.com/bitcoin/bitcoin/pull/12466#issuecomment-366428468,366428468,
theuni,2018-02-20T19:06:36Z,"@laanwj No worries!\n\nUnfortunately this isn't quite as obvious as it looks. This change would clobber any default cflags.\n\n@fanquake Could you give this a try?\n```patch\ndiff --git a/depends/packages/miniupnpc.mk b/depends/packages/miniupnpc.mk\nindex 9976db43c2..0a17f07e22 100644\n--- a/depends/packages/miniupnpc.mk\n+++ b/depends/packages/miniupnpc.mk\n@@ -5,11 +5,10 @@ $(package)",https://github.com/bitcoin/bitcoin/pull/12466#issuecomment-367084081,367084081,
laanwj,2018-02-22T16:12:55Z,"BTW; isn't this something that should ideally be fixed upstream?\n",https://github.com/bitcoin/bitcoin/pull/12466#issuecomment-367731958,367731958,
fanquake,2018-02-24T00:53:01Z,"@cfields sorry for the slowness, I'll have this updated tomorrow.\n\n@laanwj When compiling miniupnpc directly on osx the correct flags are currently being set.",https://github.com/bitcoin/bitcoin/pull/12466#issuecomment-368181131,368181131,
fanquake,2018-02-25T09:51:04Z,"@theuni using the patch you suggested, -D_DARWIN_C_SOURCE is now appearing twice in the build flags:\n```\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -mmacosx-version-min=10.8 -D_DARWIN_C_SOURCE -fPIC -pipe -O2     -I/Users/xxx/Github/bitcoin/depends/x86_64-apple-darwin17.4.0/include   -D_DARWIN_C_SOURCE   -Wall -W -Wstrict-prototypes -fno-common",https://github.com/bitcoin/bitcoin/pull/12466#issuecomment-368296573,368296573,
fanquake,2018-02-25T13:17:41Z,"Looks like -D_DARWIN_C_SOURCE is being added without the specific cppflags_darwin +=. \nThe build is failing differently:\n```\n/home/travis/build/bitcoin/bitcoin/depends/work/download/miniupnpc-2.0.20180203/miniupnpc-2.0.20180203.tar.gz.temp: OK\nExtracting miniupnpc...\n/home/travis/build/bitcoin/bitcoin/depends/sources/miniupnpc-2.0.20180203.tar.gz: OK\nPreprocessing miniupnpc...\nConfig",https://github.com/bitcoin/bitcoin/pull/12466#issuecomment-368308566,368308566,
theuni,2018-02-26T23:32:09Z,"@fanquake good catch! Upstream did add the define, as @laanwj mentioned that they should.\n\nOur issue turns out to be that upstream added cross-build detection, which we partially override by defining OS. If we just let it be discovered as intended, all is fine. The problem you're seeing now is that LIBTOOL isn't defined (apple has a libtool utility that can handle ar's features, it's unrelated",https://github.com/bitcoin/bitcoin/pull/12466#issuecomment-368689504,368689504,
