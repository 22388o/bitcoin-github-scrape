[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453203439",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-453203439",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 453203439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzIwMzQzOQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T18:31:14Z",
    "updated_at": "2019-04-30T21:51:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15681](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15681.html) ([mempool] Allow one extra single-ancestor transaction per package by TheBlueMatt)\n* [#15505](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15505.html) ([p2p] Request NOTFOUND transactions immediately from other outbound peers, when possible by sdaftuar)\n* [#15253](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15253.html) (Net: Consistently log outgoing INV messages by Empact)\n* [#13868](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13868.html) (Remove unused fScriptChecks parameter from CheckInputs by Empact)\n* [#13525](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13525.html) (Report reason inputs are nonstandard from AreInputsStandard by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453203439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453204363",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-453204363",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 453204363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzIwNDM2Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T18:34:05Z",
    "updated_at": "2019-01-10T18:34:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453204363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453608761",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-453608761",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 453608761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzYwODc2MQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T18:17:13Z",
    "updated_at": "2019-01-11T18:17:13Z",
    "author_association": "MEMBER",
    "body": "Concept ACK; I'll review for changes in behavior for specific validation reasons later.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453608761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454021358",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-454021358",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 454021358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDAyMTM1OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T14:23:14Z",
    "updated_at": "2019-01-14T14:23:14Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454021358/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455549857",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-455549857",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 455549857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTU0OTg1Nw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T13:42:02Z",
    "updated_at": "2019-01-21T13:19:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Started reviewing this, but IMO, the way this PR is structured makes it difficult to verify that it doesn't unintentionally change behavior.\r\n\r\nFWIW, I've had a go at redoing the patchset to try to make the (potential) functionality changes more clear: https://github.com/ajtowns/bitcoin/commits/201901-dosreasons\r\n\r\nThis has (I think) all the behaviour changes first:\r\n\r\n    d9451de0d0 drop obsolete comment\r\n    acdb469525 [refactor] stateDummy -> orphan_state\r\n    5cd7a4d338 [refactor] Use maybepunish etc\r\n    0d1d471eac [refactor] drop IsInvalid(nDoSOut)\r\n    a0776a5d8a set nDoS rather than bumping it\r\n    e0cff4e133 Clean up banning levels\r\n\r\nbefore introducing the new reason field, along with checks that the implied DoS value for each reason matches the actual DoS values presented/used:\r\n\r\n    89e8dea284 [refactor] Add useful-for-dos \"reason\" field to CValidationState\r\n\r\nwhich then allows dropping the instance variables:\r\n\r\n    27089e55be [refactor] Drop redundant nDoS, corruptionPossible, SetCorruptionPossible\r\n\r\nThen the code is changed to use reasons directly:\r\n\r\n    15d9023106 LookupBlockIndex -> CACHED_INVALID\r\n    519fb78934 CorruptionPossible -> TX_WITNESS_MUTATED\r\n    221d17f332 CorruptionPossible -> BLOCK_MUTATED\r\n    32747d0746 [refactor] Use Reasons directly instead of DoS codes\r\n\r\nAnd the now obsolete DoS/etc stuff is dropped:\r\n\r\n    4d110a59c6 [refactor] Prep for scripted-diff by removing some \\ns which annoy sed.\r\n    9a89a47257 scripted-diff: Remove DoS calls to CValidationState\r\n    327591b016 [refactor] Drop unused state.DoS(), state.GetDoS(), state.CorruptionPossible()\r\n\r\nThat leaves a couple more things:\r\n\r\n    94cf0deffb [refactor] Update some comments in validation.cpp as we arent doing DoS there\r\n    04c6b24a66 [refactor] swap if/else order\r\n    96f0ee075d remaining commits vs 94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371\r\n\r\nbut finally ends up with the same code as this PR (minus the latest commit anyway).\r\n\r\nAnyway I think this approach might be easier to review? It could also allow splitting the PR into two -- one making the changes to DoS behaviour but not changing the way DoS works; followed by a second PR that actually adds the Reasons and refactors but doesn't change behaviour.\r\n\r\n(Proof of concept only: bunches of these commits should probably be combined, commit messages need improvement, and I think I lost a bunch of authorship info)\r\n\r\nEDIT: \r\n\r\nI've added an extra commit prior to the DoS->Invalid refactor, namely \"5b15205883 Allow use of state.Invalid() for all reasons\" that avoids assertions that Invalid() is only used for DoS-level-0 problems failing.\r\n\r\nThat just leaves one test failure in the intermediate commits; feature_block.py fails after the changing the DoS levels but before adding the \"reason\" code. I think this is due to lowering `bad-txns-inputs-missingorspent` from 100 to 0 with the tests still expecting a disconnect when that happens in a block. Adding the reasons fixes this because that includes code to update that problem from 0/TX_MISSING_INPUTS to 100/CONSENSUS when it affects a block rather than a loose transaction. (And similarly, the tests are adujsted to expect disconnects due to premature coinbase spends, but that functionality only occurs as part of the 0/TX to 100/CONS step)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455549857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455570076",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-455570076",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 455570076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTU3MDA3Ng==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T14:46:55Z",
    "updated_at": "2019-01-18T14:46:55Z",
    "author_association": "MEMBER",
    "body": "Thanks all for the review so far!\r\n\r\nI'd started taking a stab at rewriting this; I'll continue with my approach to see how it ends up but @ajtowns thank you for your help -- @ryanofsky if you have any thoughts on @ajtowns's rework please let me know, happy to adapt his breakdown and include here if that approach looks good.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455570076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455578840",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-455578840",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 455578840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTU3ODg0MA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-18T15:12:31Z",
    "updated_at": "2019-01-18T15:12:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @ryanofsky if you have any thoughts on @ajtowns's rework please let me know\r\n\r\nTook a quick look, and I think ajtowns's refactor is great. It's a slightly different approach than I suggested in that the 32747d0746d91a8f63e39cedfb232f8c36b33bc6 commit which starts using reason codes is done all at once instead of incrementally as reasons are added, so it requires a little bit of grepping to verify, but this is easy to do and I think it's a huge improvement.\r\n\r\nI think it would be best to use ajtown's branch here, unless you've done a lot of work on your own already or see problems I'm missing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455578840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456175021",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-456175021",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 456175021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjE3NTAyMQ==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T19:16:15Z",
    "updated_at": "2019-01-21T19:16:15Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, I will take a closer look once the code is updated per comments above I guess.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456175021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457304487",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-457304487",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 457304487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzMwNDQ4Nw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T18:26:48Z",
    "updated_at": "2019-01-24T18:26:48Z",
    "author_association": "MEMBER",
    "body": "I have redone this along the lines of @ajtowns branch, and cleaned up each commit (I think!) so that each one should be logically correct, pass tests, etc.\r\n\r\nI've saved the original version of this PR here: https://github.com/sdaftuar/bitcoin/commits/15141.original\r\n\r\nThe diff between the two is pretty small (just some formatting changes that were getting tedious to resolve, and I removed a couple lines that some reviewers had commented on as being unnecessary):\r\n\r\n```\r\ndiff --git a/src/consensus/tx_verify.cpp b/src/consensus/tx_verify.cpp\r\nindex fb04c1c0abf..a7b31ff7c56 100644\r\n--- a/src/consensus/tx_verify.cpp\r\n+++ b/src/consensus/tx_verify.cpp\r\n@@ -221,8 +221,7 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\r\n \r\n         // If prev is coinbase, check that it's matured\r\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\r\n-            return state.Invalid(ValidationInvalidReason::TX_MISSING_INPUTS, false,\r\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\r\n+            return state.Invalid(ValidationInvalidReason::TX_MISSING_INPUTS, false, REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\r\n                 strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coin.nHeight));\r\n         }\r\n \r\ndiff --git a/src/consensus/validation.h b/src/consensus/validation.h\r\nindex daf8b9b87cc..09a5630a4f3 100644\r\n--- a/src/consensus/validation.h\r\n+++ b/src/consensus/validation.h\r\n@@ -81,8 +81,8 @@ private:\r\n public:\r\n     CValidationState() : mode(MODE_VALID), reason(ValidationInvalidReason::NONE), chRejectCode(0) {}\r\n     bool Invalid(ValidationInvalidReason reasonIn, bool ret = false,\r\n-             unsigned int chRejectCodeIn=0, const std::string &strRejectReasonIn=\"\",\r\n-             const std::string &strDebugMessageIn=\"\") {\r\n+            unsigned int chRejectCodeIn=0, const std::string &strRejectReasonIn=\"\",\r\n+            const std::string &strDebugMessageIn=\"\") {\r\n         reason = reasonIn;\r\n         chRejectCode = chRejectCodeIn;\r\n         strRejectReason = strRejectReasonIn;\r\ndiff --git a/src/test/txvalidation_tests.cpp b/src/test/txvalidation_tests.cpp\r\nindex 00fd7fef12a..aa30129361f 100644\r\n--- a/src/test/txvalidation_tests.cpp\r\n+++ b/src/test/txvalidation_tests.cpp\r\n@@ -52,8 +52,6 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\r\n     // Check that the validation state reflects the unsuccessful attempt.\r\n     BOOST_CHECK(state.IsInvalid());\r\n     BOOST_CHECK_EQUAL(state.GetRejectReason(), \"coinbase\");\r\n-\r\n-    BOOST_CHECK_EQUAL(state.IsInvalid(), true);\r\n     BOOST_CHECK(state.GetReason() == ValidationInvalidReason::CONSENSUS);\r\n }\r\n \r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex e1f562ffbfd..20759bf96e7 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -888,7 +888,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\r\n                 !CheckInputs(tx, stateDummy, view, true, scriptVerifyFlags & ~SCRIPT_VERIFY_CLEANSTACK, true, false, txdata)) {\r\n                 // Only the witness is missing, so the transaction itself may be fine.\r\n                 state.Invalid(ValidationInvalidReason::TX_WITNESS_MUTATED, false,\r\n-                          state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\r\n+                        state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\r\n             }\r\n             return false; // state filled in by CheckInputs\r\n         }\r\n@@ -1980,7 +1980,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\r\n                     // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\r\n                     // it's not defined for a block, so we reset the reason flag to CONSENSUS here.\r\n                     state.Invalid(ValidationInvalidReason::CONSENSUS, false,\r\n-                              state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\r\n+                            state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\r\n                 }\r\n                 return error(\"%s: Consensus::CheckTxInputs: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\r\n             }\r\n@@ -3341,8 +3341,6 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\r\n     // the block hash, so we couldn't mark the block as permanently\r\n     // failed).\r\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\r\n-        // We can call this a consensus failure as any data-providers who provided\r\n-        // us with witness data can be expected to support SegWit validation.\r\n         return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-weight\", strprintf(\"%s : weight limit failed\", __func__));\r\n     }\r\n```\r\n\r\nAlso if this version is not actually easier to review I'm happy to go back to the original or try another approach.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457304487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458617310",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-458617310",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 458617310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYxNzMxMA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T16:52:34Z",
    "updated_at": "2019-01-29T16:52:34Z",
    "author_association": "MEMBER",
    "body": "I addressed @ryanofsky's comments so far (which rewrote the git history, since one of the commit messages changed, so I also squashed in a comment change as well).  Previous version of this PR is now here: https://github.com/sdaftuar/bitcoin/commits/15141.1.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458617310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461890129",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-461890129",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 461890129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTg5MDEyOQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T17:57:22Z",
    "updated_at": "2019-02-08T17:57:22Z",
    "author_association": "MEMBER",
    "body": "This needs a simple rebase, but can I get concept ACK/NACK from more reviewers on whether the reworked form of this PR (which broke things up into many more commits) is preferable compared to the original formulation? ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461890129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461903853",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-461903853",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 461903853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTkwMzg1Mw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T18:43:36Z",
    "updated_at": "2019-02-08T18:43:36Z",
    "author_association": "MEMBER",
    "body": "I haven't reviewed the last few commits yet (only up to \"[refactor] Use Reasons directly instead of DoS codes\"), but so far the structure is very clear. Concept ACK on that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461903853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461919044",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-461919044",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 461919044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTkxOTA0NA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T19:31:53Z",
    "updated_at": "2019-02-08T19:43:44Z",
    "author_association": "MEMBER",
    "body": "Thanks @sipa.  Rebased.  Prior version is here: [15141.2](https://github.com/sdaftuar/bitcoin/commits/15141.2)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461919044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461933821",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-461933821",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 461933821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTkzMzgyMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T20:19:20Z",
    "updated_at": "2019-02-08T20:19:42Z",
    "author_association": "MEMBER",
    "body": "One overall comment: it seems there is a subset of `ValidationInvalidReason`s that are valid for transactions, and another subset that is valid for blocks. Perhaps it's useful to have functions to test whether one belongs to those sets, and invoke those functions in assertions after validation returns in their respective contexts. That seems a bit more future-proof than just having comments of the form \"CheckTxInputs may return MISSING_INPUTS but we can't return that\". It would make me also a bit more comfortable with changes to checks from `CorruptionPossible()` to testing for a specific invalidity reason (assuming we know `TX_WITNESS_MUTATED` in the only tx-valid corruptionpossible one, and `BLOCK_MUTATED` the only block-valid corruptionpossible one).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/461933821/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468941434",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-468941434",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 468941434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk0MTQzNA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T17:31:31Z",
    "updated_at": "2019-03-02T17:31:31Z",
    "author_association": "MEMBER",
    "body": "I believe I addressed all of @sipa's comments.  I think I've addressed all the substantive comments from @ryanofsky, with the exception of moving around code between commits.  If reviewers would like to see the code moved to more accurately reflect each commit message, I can try, but I'd prefer to do something like that just before merge and have reviewers do a last verify that the overall diff is the same after the git history gets rewritten.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468941434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470677054",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-470677054",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 470677054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDY3NzA1NA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T20:15:02Z",
    "updated_at": "2019-03-07T20:15:02Z",
    "author_association": "MEMBER",
    "body": "Squashed the history down.  Unsquashed version is [15141.4](https://github.com/sdaftuar/bitcoin/commits/15141.4).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470677054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471158025",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-471158025",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 471158025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTE1ODAyNQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-09T08:31:33Z",
    "updated_at": "2019-03-09T08:31:33Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky there's still a few `====` commits that need to go.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471158025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471198250",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-471198250",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 471198250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTE5ODI1MA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-09T16:32:47Z",
    "updated_at": "2019-03-09T16:32:47Z",
    "author_association": "MEMBER",
    "body": "@sjors Removed the empty commits from the PR.  Old version is here: https://github.com/sdaftuar/bitcoin/commits/15141.6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471198250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477682421",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-477682421",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 477682421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzY4MjQyMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T16:56:19Z",
    "updated_at": "2019-03-28T16:56:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wonder who else is still planning to review this PR. @sipa, @jnewbery, @kallewoof, @sjors, @ajtowns all reviewed previous versions. @TheBlueMatt wrote the original version and discussed it recently offline. @naumenkogs wrote that he intends to review. Is there anyone else? It seems like if some subset of the people who already reviewed this rereviewed it, it could be ready to merge.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477682421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478200330",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-478200330",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 478200330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODIwMDMzMA==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-30T03:01:08Z",
    "updated_at": "2019-03-30T03:01:08Z",
    "author_association": "MEMBER",
    "body": "I'm going to take a read through at some point (probably tomorrow), but that definitely shouldn't hang up a merge if the reviewers mentioned above have signed off.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478200330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478474586",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-478474586",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 478474586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODQ3NDU4Ng==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T07:54:46Z",
    "updated_at": "2019-04-01T07:54:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK daf23bf0b9791cb6a1515e3764d1f645e1181859\r\n\r\nI think it would have made sense to split this PR after \"Clean up banning levels\", so utACK 96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5 as well, fwiw. I guess it's probably better to just get reviews for the whole thing at this point though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478474586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479413048",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-479413048",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 479413048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTQxMzA0OA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T09:29:28Z",
    "updated_at": "2019-04-03T09:29:28Z",
    "author_association": "MEMBER",
    "body": "Rebased.  Old version is here: https://github.com/sdaftuar/bitcoin/commits/15141.7",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479413048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479533964",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-479533964",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 479533964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTUzMzk2NA==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T15:16:12Z",
    "updated_at": "2019-04-03T15:16:12Z",
    "author_association": "MEMBER",
    "body": "reACK daf674e55a4efbf6031af8389de2537ed32b4bcc based on a review of [the interdiff](https://gist.github.com/jamesob/26a9a2fcdad52097ea4e2d891adb2f99).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/479533964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481861456",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-481861456",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 481861456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTg2MTQ1Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-10T20:54:30Z",
    "updated_at": "2019-04-10T20:54:30Z",
    "author_association": "MEMBER",
    "body": "I've fully reviewed everything up to _Clean up banning levels_ (daf35b19b3841fe93dfd717b7c233ff293b61503) and quickly looked at the rest of the commits. I agree with @TheBlueMatt that some of the intermediate commits introduce behaviour changes and should be changed or squashed.\r\n\r\nI have a branch here https://github.com/jnewbery/bitcoin/tree/2019_04_clean_up_banning that rebases everything up to _Clean up banning levels_ on master, fixes a bunch of nits, expands comments and maintains existing p2p behaviour (except in the last commit which updates DoS scores). I think to make progress on this, we could open that as a separate PR as suggested by AJ here: https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-478474586. @sdaftuar I'm happy to open the PR if that helps you.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/481861456/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482246149",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-482246149",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 482246149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjI0NjE0OQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-11T18:37:17Z",
    "updated_at": "2019-04-13T20:16:26Z",
    "author_association": "MEMBER",
    "body": "Old version of this pr is here: [15141.9](https://github.com/sdaftuar/bitcoin/commits/15141.9)\r\n\r\nI took that version and incorporated many of the comments and bugfixes Matt suggested, along with a few improvements from John, and a bunch of fixes to commit messages/authorship attribution/etc here: [15141.10](https://github.com/sdaftuar/bitcoin/commits/15141.10)\r\n\r\nHere's a diff of 15141.9 and 15141.10, which may be of some value to prior reviewers:\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex d8cb564378e..b074cead4fd 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -980,8 +980,18 @@ static bool TxRelayMayResultInDisconnect(const CValidationState& state)\r\n     return state.GetReason() == ValidationInvalidReason::CONSENSUS;\r\n }\r\n \r\n-//! Returns true if the peer was punished (probably disconnected)\r\n-//! Changes here may need to be reflected in TxRelayMayResultInDisconnect().\r\n+/**\r\n+ * Potentially ban a node based on the contents of a CValidationState object\r\n+ *\r\n+ * @param[in] via_compact_block: this bool is passed in because net_processing should\r\n+ * punish peers differently depending on whether the data was provided in a compact\r\n+ * block message or not. If the compact block had a valid header, but contained invalid\r\n+ * txs, the peer should not be punished. See BIP 152.\r\n+ *\r\n+ * @return Returns true if the peer was punished (probably disconnected)\r\n+ *\r\n+ * Changes here may need to be reflected in TxRelayMayResultInDisconnect().\r\n+ */\r\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\r\n     switch (state.GetReason()) {\r\n     case ValidationInvalidReason::NONE:\r\n```\r\n\r\nFinally, I rebased all that back onto master and have pushed that here. (I think the rebase is easiest to verify by doing a merge with master, rather than re-doing the rebase -- it was pretty tedious since many commits touched the same conflicted files.)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482246149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482961641",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-482961641",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 482961641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mjk2MTY0MQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-14T12:15:34Z",
    "updated_at": "2019-04-14T12:15:34Z",
    "author_association": "MEMBER",
    "body": "Just pushed up a new version that fixes a bug in an intermediate commit. (Final code was unchanged as the bug was already fixed in a later commit.)  Old version was [15141.11](https://github.com/sdaftuar/bitcoin/commits/15141.11).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482961641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483291375",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-483291375",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 483291375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzI5MTM3NQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-15T15:07:36Z",
    "updated_at": "2019-04-15T15:07:36Z",
    "author_association": "MEMBER",
    "body": "Rewrote the history one more time to incorporate the rest of Matt's feedback (other than squashing some of the intermediate commits).  Old version is here: [15141.12](https://github.com/sdaftuar/bitcoin/commits/15141.12)\r\n\r\nAlso, @jnewbery pointed out somewhere (I seem to have lost the link to the comment) that reviewers should take note that DoS scores would accumulate, while the switch to Reason enums eliminates that potential accumulation, so reviewers should carefully check that the behavior changes that result are only the ones claimed in the PR.  I'll repeat that here to make sure everyone is aware of this (but I don't think it's necessary to repeat this in a commit message or in a comment in an intermediate commit).\r\n\r\nPlease re-review.  While the commit history has been rewritten to fix several bugs, the overall diff of what has been previously ACK'ed by some reviewers to the current version is still pretty small (modulo the rebase to master that happened in between).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483291375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483435610",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-483435610",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 483435610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzQzNTYxMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-15T22:03:53Z",
    "updated_at": "2019-04-15T22:03:53Z",
    "author_association": "MEMBER",
    "body": "I think it's worth updating the git commit log in 088336aa3cab566a6418fb2e88824bdf668b8458 (_[refactor] Add useful-for-dos \"reason\" field to CValidationState_) to say that previously, blocks which had a transaction that failed a non-p2sh pre-segwit softfork would not result in a ban, but now will. I also think that you should remove the `[refactor]` tag for a commit which isn't a pure refactor and changes p2p behaviour.\r\n\r\n> Also, @jnewbery pointed out somewhere (I seem to have lost the link to the comment) that reviewers should take note that DoS scores would accumulate, while the switch to Reason enums eliminates that potential accumulation, so reviewers should carefully check that the behavior changes that result are only the ones claimed in the PR. I'll repeat that here to make sure everyone is aware of this (but I don't think it's necessary to repeat this in a commit message or in a comment in an intermediate commit).\r\n\r\ngit commit logs are basically free (there's almost no downside to being more verbose in them) and I often look at old commit logs for motivation/justification for changes. If you do change your mind and decide to include a justification in the commit, then the commit log from my branch was:\r\n\r\n```\r\nThis PR also introduces a subtle change in the way nDoS is set on\r\nCValidationState objects. Instead of incrementing the nDoS score when\r\nDoS() is called, the nDoS is set to the new value. This would\r\npotentially be a behavior change if DoS() were called more than once on\r\nthe same CValidationState object. To verify that this is not a behavior\r\nchange, check that DoS() is never called more than once on the same\r\nCValidationState object.\r\n```\r\n\r\nIf you wanted to make that change *really* easy to review, you could change the commit order so that all calls to `state.DoS(0...` are changed to `state.Invalid(...` before that commit. That means that the only call to `state.DoS(...` where the `nDoS` isn't 100 is the 'missing inputs' failure. Reviewers would only need to verify that the `CValidationState` set there hasn't already been set before, since calling `state.DoS(100, ...` has the same effect before and after that commit. (I'm not saying you should do that now, but it might aid other reviewers to see that that is equivalent to the final state of this PR).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483435610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483762083",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-483762083",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 483762083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzc2MjA4Mw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-16T17:08:41Z",
    "updated_at": "2019-04-16T17:11:57Z",
    "author_association": "MEMBER",
    "body": "> I think it's worth updating the git commit log in 088336a ([refactor] Add useful-for-dos \"reason\" field to CValidationState) to say that previously, blocks which had a transaction that failed a non-p2sh pre-segwit softfork would not result in a ban, but now will. I also think that you should remove the [refactor] tag for a commit which isn't a pure refactor and changes p2p behaviour.\r\n\r\nThis behavior change (where a node running with `-par=1` would potentially not ban for a block with invalid scripts, to now always banning regardless of whether `-par=1` or not) being present in that refactor commit was an oversight; I've moved it to its own commit.\r\n\r\nPrior version of the code is here: [15141.13](https://github.com/sdaftuar/bitcoin/commits/15141.13).  Once again there should be no diff in the final code.\r\n\r\nRegarding this:\r\n```This PR also introduces a subtle change in the way nDoS is set on\r\nCValidationState objects. Instead of incrementing the nDoS score when\r\nDoS() is called, the nDoS is set to the new value.\r\n```\r\nI actually dropped the commit (at Matt's request) where nDoS would not be incremented, so that the `assert()`'s that @ajtowns had suggested (comparing the DoS score to the reason enum) should be an effective reminder to the reviewer that incrementing is not taking place.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483762083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483862207",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-483862207",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 483862207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mzg2MjIwNw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-16T22:07:59Z",
    "updated_at": "2019-04-16T22:07:59Z",
    "author_association": "MEMBER",
    "body": "@ajtowns @TheBlueMatt - you've both more-or-less ACKed a branch that reaches basically the same final state as this current branch. Are you able to reACK?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/483862207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486810161",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-486810161",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 486810161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjgxMDE2MQ==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-25T19:37:54Z",
    "updated_at": "2019-04-25T19:37:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK that this seems ok -- haven't had a chance to re-go through commit by commit and make sure the behavioral changes are solid, but they seem sensible.\r\n\r\nNoting that merging this would make it possible to reboot the work in https://github.com/bitcoin/bitcoin/pull/11523 if there's positive sentiment for it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/486810161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487181380",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-487181380",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 487181380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzE4MTM4MA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-26T19:55:02Z",
    "updated_at": "2019-04-26T19:55:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK fdd7683c558984a96dd556e2c93dde156b85a75f",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487181380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487835088",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-487835088",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 487835088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzgzNTA4OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T06:35:39Z",
    "updated_at": "2019-04-30T06:53:40Z",
    "author_association": "MEMBER",
    "body": "Getting a local failure in `mining_getblocktemplate_longpoll.py`\u2014might be unrelated to this change\r\n```\r\n1/119 - mining_getblocktemplate_longpoll.py failed, Duration: 12 s\r\n\r\nstdout:\r\n2019-04-30T06:29:27.597000Z TestFramework (INFO): Initializing test directory /tmp/test_runner_\u20bf_\ud83c\udfc3_20190430_082919/mining_getblocktemplate_longpoll_115\r\n2019-04-30T06:29:28.464000Z TestFramework (INFO): Warning: this test will take about 70 seconds in the best case. Be patient.\r\n2019-04-30T06:29:38.491000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \".../bitcoin/test/functional/test_framework/test_framework.py\", line 175, in main\r\n    self.run_test()\r\n  File \".../bitcoin/test/functional/mining_getblocktemplate_longpoll.py\", line 54, in run_test\r\n    assert not thr.is_alive()\r\nAssertionError\r\n2019-04-30T06:29:38.544000Z TestFramework (INFO): Stopping nodes\r\n2019-04-30T06:29:39.303000Z TestFramework (WARNING): Not cleaning up dir /tmp/test_runner_\u20bf_\ud83c\udfc3_20190430_082919/mining_getblocktemplate_longpoll_115\r\n2019-04-30T06:29:39.304000Z TestFramework (ERROR): Test failed. Test logging available at /tmp/test_runner_\u20bf_\ud83c\udfc3_20190430_082919/mining_getblocktemplate_longpoll_115/test_framework.log\r\n2019-04-30T06:29:39.305000Z TestFramework (ERROR): Hint: Call .../bitcoin/test/functional/combine_logs.py '/tmp/test_runner_\u20bf_\ud83c\udfc3_20190430_082919/mining_getblocktemplate_long\r\npoll_115' to consolidate all logs\r\n\r\n\r\nstderr:\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \".../bitcoin/test/functional/mining_getblocktemplate_longpoll.py\", line 25, in run\r\n    self.node.getblocktemplate({'longpollid': self.longpollid, 'rules': ['segwit']})\r\n  File \".../bitcoin/test/functional/test_framework/coverage.py\", line 47, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \".../bitcoin/test/functional/test_framework/authproxy.py\", line 141, in __call__\r\n    raise JSONRPCException(response['error'], status)\r\ntest_framework.authproxy.JSONRPCException: Shutting down (-9)\r\n```\r\nEdit: this only happened the first time, cannot reproduce it :(",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487835088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487842802",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-487842802",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 487842802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzg0MjgwMg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T07:13:41Z",
    "updated_at": "2019-04-30T07:13:41Z",
    "author_association": "MEMBER",
    "body": "@laanwj so it took `getblocktemplate` more than 5 seconds? I don't remember seeing this failure.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487842802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487853157",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-487853157",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 487853157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzg1MzE1Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T07:57:31Z",
    "updated_at": "2019-04-30T08:02:20Z",
    "author_association": "MEMBER",
    "body": "> Edit: couldn't we replace the reject code with a mapping from ValidationInvalidReason?\r\n\r\nSo to check this I've analyzed all occurences of Invalid (with this PR applied):\r\n\r\n### Occurences\r\n```\r\nsrc/consensus/tx_check.cpp:14       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_check.cpp:16       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_check.cpp:19       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_check.cpp:26       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_check.cpp:28       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_check.cpp:31       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_check.cpp:40       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_check.cpp:47       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_check.cpp:53       ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_verify.cpp:163     ValidationInvalidReason::TX_MISSING_INPUTS            REJECT_INVALID\r\nsrc/consensus/tx_verify.cpp:175     ValidationInvalidReason::TX_PREMATURE_SPEND           REJECT_INVALID\r\nsrc/consensus/tx_verify.cpp:182     ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_verify.cpp:188     ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/consensus/tx_verify.cpp:195     ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:588              ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:593              ValidationInvalidReason::TX_NOT_STANDARD              REJECT_NONSTANDARD\r\nsrc/validation.cpp:599              ValidationInvalidReason::TX_NOT_STANDARD              REJECT_NONSTANDARD\r\nsrc/validation.cpp:605              ValidationInvalidReason::TX_PREMATURE_SPEND           REJECT_NONSTANDARD\r\nsrc/validation.cpp:609              ValidationInvalidReason::TX_CONFLICT                  REJECT_DUPLICATE\r\nsrc/validation.cpp:645              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_DUPLICATE\r\nsrc/validation.cpp:675              ValidationInvalidReason::TX_CONFLICT                  REJECT_DUPLICATE\r\nsrc/validation.cpp:698              ValidationInvalidReason::TX_PREMATURE_SPEND           REJECT_NONSTANDARD\r\nsrc/validation.cpp:707              ValidationInvalidReason::TX_NOT_STANDARD              REJECT_NONSTANDARD\r\nsrc/validation.cpp:711              ValidationInvalidReason::TX_WITNESS_MUTATED           REJECT_NONSTANDARD\r\nsrc/validation.cpp:735              ValidationInvalidReason::TX_NOT_STANDARD              REJECT_NONSTANDARD\r\nsrc/validation.cpp:740              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_INSUFFICIENTFEE\r\nsrc/validation.cpp:745              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_INSUFFICIENTFEE\r\nsrc/validation.cpp:749              ValidationInvalidReason::TX_NOT_STANDARD              REJECT_HIGHFEE\r\nsrc/validation.cpp:761              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_NONSTANDARD\r\nsrc/validation.cpp:773              ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:815              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_INSUFFICIENTFEE\r\nsrc/validation.cpp:843              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_NONSTANDARD\r\nsrc/validation.cpp:862              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_NONSTANDARD\r\nsrc/validation.cpp:874              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_INSUFFICIENTFEE\r\nsrc/validation.cpp:884              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_INSUFFICIENTFEE\r\nsrc/validation.cpp:905              ValidationInvalidReason::TX_WITNESS_MUTATED           REJECT_passthrough\r\nsrc/validation.cpp:965              ValidationInvalidReason::TX_MEMPOOL_POLICY            REJECT_INSUFFICIENTFEE\r\nsrc/validation.cpp:1437             ValidationInvalidReason::TX_NOT_STANDARD              REJECT_NONSTANDARD\r\nsrc/validation.cpp:1448             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:1943             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:1988             ValidationInvalidReason::CONSENSUS                    REJECT_passthrough\r\nsrc/validation.cpp:1995             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:2008             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:2019             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:2035             ValidationInvalidReason::CONSENSUS                    REJECT_passthrough\r\nsrc/validation.cpp:2055             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:2061             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:3087             ValidationInvalidReason::BLOCK_INVALID_HEADER         REJECT_INVALID\r\nsrc/validation.cpp:3109             ValidationInvalidReason::BLOCK_MUTATED                REJECT_INVALID\r\nsrc/validation.cpp:3115             ValidationInvalidReason::BLOCK_MUTATED                REJECT_INVALID\r\nsrc/validation.cpp:3126             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:3130             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:3133             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:3149             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:3258             ValidationInvalidReason::BLOCK_INVALID_HEADER         REJECT_INVALID\r\nsrc/validation.cpp:3267             ValidationInvalidReason::BLOCK_CHECKPOINT             REJECT_CHECKPOINT\r\nsrc/validation.cpp:3272             ValidationInvalidReason::BLOCK_INVALID_HEADER         REJECT_INVALID\r\nsrc/validation.cpp:3276             ValidationInvalidReason::BLOCK_TIME_FUTURE            REJECT_INVALID\r\nsrc/validation.cpp:3283             ValidationInvalidReason::BLOCK_INVALID_HEADER         REJECT_OBSOLETE\r\nsrc/validation.cpp:3313             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:3323             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:3345             ValidationInvalidReason::BLOCK_MUTATED                REJECT_INVALID\r\nsrc/validation.cpp:3349             ValidationInvalidReason::BLOCK_MUTATED                REJECT_INVALID\r\nsrc/validation.cpp:3359             ValidationInvalidReason::BLOCK_MUTATED                REJECT_INVALID\r\nsrc/validation.cpp:3371             ValidationInvalidReason::CONSENSUS                    REJECT_INVALID\r\nsrc/validation.cpp:3391             ValidationInvalidReason::CACHED_INVALID               REJECT_0\r\nsrc/validation.cpp:3402             ValidationInvalidReason::BLOCK_MISSING_PREV           REJECT_0\r\nsrc/validation.cpp:3405             ValidationInvalidReason::BLOCK_INVALID_PREV           REJECT_INVALID\r\nsrc/validation.cpp:3442             ValidationInvalidReason::BLOCK_INVALID_PREV           REJECT_INVALID\r\n```\r\n### Mapping\r\n```\r\nValidationInvalidReason::BLOCK_CHECKPOINT -> REJECT_CHECKPOINT\r\nValidationInvalidReason::BLOCK_INVALID_HEADER -> REJECT_INVALID\r\nValidationInvalidReason::BLOCK_INVALID_HEADER -> REJECT_OBSOLETE\r\nValidationInvalidReason::BLOCK_INVALID_PREV -> REJECT_INVALID\r\nValidationInvalidReason::BLOCK_MISSING_PREV -> REJECT_0\r\nValidationInvalidReason::BLOCK_MUTATED -> REJECT_INVALID\r\nValidationInvalidReason::BLOCK_TIME_FUTURE -> REJECT_INVALID\r\nValidationInvalidReason::CACHED_INVALID -> REJECT_0\r\nValidationInvalidReason::CONSENSUS -> REJECT_INVALID\r\nValidationInvalidReason::TX_CONFLICT -> REJECT_DUPLICATE\r\nValidationInvalidReason::TX_MEMPOOL_POLICY -> REJECT_DUPLICATE\r\nValidationInvalidReason::TX_MEMPOOL_POLICY -> REJECT_INSUFFICIENTFEE\r\nValidationInvalidReason::TX_MEMPOOL_POLICY -> REJECT_NONSTANDARD\r\nValidationInvalidReason::TX_MISSING_INPUTS -> REJECT_INVALID\r\nValidationInvalidReason::TX_NOT_STANDARD -> REJECT_HIGHFEE\r\nValidationInvalidReason::TX_NOT_STANDARD -> REJECT_NONSTANDARD\r\nValidationInvalidReason::TX_PREMATURE_SPEND -> REJECT_INVALID\r\nValidationInvalidReason::TX_PREMATURE_SPEND -> REJECT_NONSTANDARD\r\nValidationInvalidReason::TX_WITNESS_MUTATED -> REJECT_NONSTANDARD\r\n```\r\n\r\nDoesn't look like a direct mapping is possible with the current reasons\u00b8 unfortunately, though it's close\u2014there's only a few exceptions where the reject code provides more elaboration:\r\n- `ValidationInvalidReason::TX_PREMATURE_SPEND` is non-standard in `AcceptToMemoryPoolWorker` (two occurences) but invalid in `Consensus::CheckTxInputs`\r\n- `ValidationInvalidReason::BLOCK_INVALID_HEADER` maps to  `REJECT_OBSOLETE` (when concerning block versions)  or `REJECT_INVALID`(everything else)\r\n- `ValidationInvalidReason::TX_MEMPOOL_POLICY` maps to various different REJECT reasons\r\n- `ValidationInvalidReason::TX_NOT_STANDARD` maps to either high fee or nonstandard\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487853157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487856279",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-487856279",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 487856279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzg1NjI3OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-30T08:09:50Z",
    "updated_at": "2019-04-30T08:09:50Z",
    "author_association": "MEMBER",
    "body": "- apart from f3883a321bf4ab289edcd9754b12cae3a648b175 whose rationale I disagree with (I don't think it's redundant, as commented), I think this is overall a move in the right direction\r\n- my last comment could be addressed (if at all) in a follow-up PR\r\n\r\nutACK fdd7683c558984a96dd556e2c93dde156b85a75f",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/487856279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489099103",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-489099103",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 489099103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTA5OTEwMw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-03T13:40:53Z",
    "updated_at": "2019-05-03T13:40:53Z",
    "author_association": "MEMBER",
    "body": "@laanwj Thanks for the review.  I updated the PR to drop that commit, so that we once again use a CValidationState to return the debug information if CheckTransaction() fails for a transaction in a block.  \r\n\r\nPrevious version of the code is at [15141.14](https://github.com/sdaftuar/bitcoin/commits/15141.14).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489099103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489108506",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-489108506",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 489108506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTEwODUwNg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-03T14:10:21Z",
    "updated_at": "2019-05-03T14:16:42Z",
    "author_association": "MEMBER",
    "body": "utACK 0ff1c2a838da9e8dc7f77609adc89124bbea3e2b\r\n\r\n~Only change is dropping the _Drop obsolete sigops comment_ commit.~\r\n\r\nEDIT: Copy-paste error above. The only change was dropping the _Remove redundant state.Invalid() call after CheckTransaction()_ commit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489108506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489313054",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#issuecomment-489313054",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15141",
    "id": 489313054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTMxMzA1NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-04T09:59:19Z",
    "updated_at": "2019-05-04T09:59:19Z",
    "author_association": "MEMBER",
    "body": "thanks for addressing my comment, and sorry for holding this up last-minute\r\nutACK 0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/489313054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247634533",
    "pull_request_review_id": 192332892,
    "id": 247634533,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzYzNDUzMw==",
    "diff_hunk": "@@ -30,32 +74,24 @@ class CValidationState {\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n-    int nDoS;\n+    ValidationInvalidReason reason;",
    "path": "src/consensus/validation.h",
    "position": null,
    "original_position": 56,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: change to `m_reason` and avoid all the non-shadowing naming tricks below (`reasonIn` and `_reason`)",
    "created_at": "2019-01-14T19:52:06Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247634533",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247634533"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247634533"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247634533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 77,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247638591",
    "pull_request_review_id": 192332892,
    "id": 247638591,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzYzODU5MQ==",
    "diff_hunk": "@@ -22,6 +22,50 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks (or headers):\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+    // Only loose txn:\n+    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_MISSING_INPUTS,        //!< a transaction was missing some of its inputs (or its inputs were spent at < coinbase maturity height)\n+    /**\n+     * Transaction might be missing a witness, have a witness prior to SegWit\n+     * activation, or witness may have been malleated (which includes\n+     * non-standard witnesses).\n+     */\n+    TX_WITNESS_MUTATED,\n+    /**\n+     * Tx already in mempool or conflicts with a tx in the chain",
    "path": "src/consensus/validation.h",
    "position": 40,
    "original_position": 39,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: s/conflicts with a tx in the chain/conflicts with a confirmed transaction. Same comment below for \"exists in the mempool or on chain\"",
    "created_at": "2019-01-14T20:03:52Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247638591",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247638591"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247638591"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247638591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 61,
    "original_line": 61,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247678436",
    "pull_request_review_id": 192332892,
    "id": 247678436,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzY3ODQzNg==",
    "diff_hunk": "@@ -3333,7 +3341,9 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // the block hash, so we couldn't mark the block as permanently\n     // failed).\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));\n+        // We can call this a consensus failure as any data-providers who provided",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 494,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This seems entirely obvious and not requiring a comment to me, which makes me think there's some subtlety I've missed. Is this just saying that if we receive a block with witness data, it should be valid-according-to-BIP141?\r\n\r\nPedantic nit: I'd also avoid talking about 'data-providers' in validation.cpp. After this PR, validation should be unconcerned with data-providers and only be validating blocks based on the block data.",
    "created_at": "2019-01-14T22:09:50Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247678436",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247678436"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247678436"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247678436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3344,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247688022",
    "pull_request_review_id": 192332892,
    "id": 247688022,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzY4ODAyMg==",
    "diff_hunk": "@@ -816,6 +816,91 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's unclear to me whether peers should always be punished for `BLOCK_INVALID_PREV`. For example, if the previous block was invalid because of `RECENT_CONSENSUS_CHANGE` and the peer wasn't punished, should it be punished for relaying this descendant block?\r\n\r\nShould compact block peers be punished for relaying the block if its parent is invalid? My reading of https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki#pre-validation-relay-and-consistency-considerations is that the answer is no.\r\n\r\nSame question for `MaybePunishNode()` below.",
    "created_at": "2019-01-14T22:42:35Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247688022",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247688022"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247688022"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247688022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 982,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247736063",
    "pull_request_review_id": 192453150,
    "id": 247736063,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzczNjA2Mw==",
    "diff_hunk": "@@ -3333,7 +3341,9 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // the block hash, so we couldn't mark the block as permanently\n     // failed).\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));\n+        // We can call this a consensus failure as any data-providers who provided",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 494,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I believe this comment is contrasting a CONSENSUS failure from a RECENT_CONSENSUS_CHANGE -- I think in @TheBlueMatt's original PR he had some validation failures marked as RECENT_CONSENSUS_CHANGE, but eventually we decided to switch them all out (and reserve RECENT_CONSENSUS_CHANGE as something we might do in the future).\r\n\r\nI think I agree with you philosophically that validation ought not be very concerned with 'data providers', but I think the ValidationReasons interface is also driven by the needs of net_processing, so sometimes we may need to explain reasons that maybe don't make sense in a totally neutral validation library because our application requires it.  RECENT_CONSENSUS_CHANGE is one such possible example (though we're not using it in this PR and I am not sure we ever will); the BLOCK_INVALID_HEADER enum I added is another (net_processing needs to be able to distinguish some headers failures from others, in order to maintain the current ban behavior).\r\n\r\nAnyway I'll update this comment to be clearer.",
    "created_at": "2019-01-15T01:23:21Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247736063",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247736063"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247736063"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247736063/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3344,
    "side": "RIGHT",
    "in_reply_to_id": 247678436
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247737022",
    "pull_request_review_id": 192454315,
    "id": 247737022,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzczNzAyMg==",
    "diff_hunk": "@@ -1453,6 +1529,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n                 // etc), and not just the duplicate-invalid case.\n                 pfrom->fDisconnect = true;\n             }\n+            MaybePunishNode(pfrom->GetId(), state, /*via_compact_block*/ false, \"invalid header received\");",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 131,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Self-review: I think adding this line here may be a bug.  At any rate, there is a serious confusion between the hacky punish_invalid bool in the existing code and the introduction of MaybePunishNode in this PR that ought to be cleaned up.",
    "created_at": "2019-01-15T01:29:26Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247737022",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247737022"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247737022"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247737022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1532,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247768943",
    "pull_request_review_id": 192491512,
    "id": 247768943,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Nzc2ODk0Mw==",
    "diff_hunk": "@@ -3333,7 +3341,9 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // the block hash, so we couldn't mark the block as permanently\n     // failed).\n     if (GetBlockWeight(block) > MAX_BLOCK_WEIGHT) {\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-weight\", false, strprintf(\"%s : weight limit failed\", __func__));\n+        // We can call this a consensus failure as any data-providers who provided",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 494,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this comment is justifying upgrading the (at the time recent) segwit test from a RECENT_CONSENSUS_CHANGE to just CONSENSUS_CHANGE, the reason being that either you've got an old client that didn't provide segwit data -- in which case this test won't trigger because the `bad-blk-length` test will already have failed -- or it is providing segwit data but doing it wrong, in which case there's no reason to use the more forgiving `RECENT` version. So I think just dropping the comment (now that segwit isn't recent) is fine, fwiw.",
    "created_at": "2019-01-15T05:31:44Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247768943",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247768943"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247768943"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247768943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3344,
    "side": "RIGHT",
    "in_reply_to_id": 247678436
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247771578",
    "pull_request_review_id": 192494788,
    "id": 247771578,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Nzc3MTU3OA==",
    "diff_hunk": "@@ -816,6 +816,91 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If miners have mostly upgraded then building on top of a `RECENT_CONSENSUS_CHANGE` block should be rare enough for this not to be a huge problem.\r\n\r\nIf not, and we want to cope with a moderately controversial consensus upgrade, then we probably want to track whether blocks failed due to `RECENT_CONSENSUS_CHANGE` and mark their children as also failing due to `RECENT_CONSENSUS_CHANGE` (after checking PoW at least). Working all that out doesn't seem necessary for this patchset to me though.",
    "created_at": "2019-01-15T05:56:37Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247771578",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247771578"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247771578"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247771578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 982,
    "side": "RIGHT",
    "in_reply_to_id": 247688022
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247772868",
    "pull_request_review_id": 192495960,
    "id": 247772868,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Nzc3Mjg2OA==",
    "diff_hunk": "@@ -117,14 +107,7 @@ class CValidationState {\n     bool IsError() const {\n         return mode == MODE_ERROR;\n     }\n-    bool CorruptionPossible() const {\n-        return corruptionPossible;\n-    }",
    "path": "src/consensus/validation.h",
    "position": 131,
    "original_position": 42,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "6ee2c4551d055dd3c7bf28ed4bde7c566d75dfef",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe having `inline bool CorruptionPossible() const { return reason == BLOCK_MUTATED; }` would make for nicer code elsewhere?",
    "created_at": "2019-01-15T06:07:14Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247772868",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247772868"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247772868"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247772868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247881222",
    "pull_request_review_id": 192495960,
    "id": 247881222,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Nzg4MTIyMg==",
    "diff_hunk": "@@ -889,7 +889,6 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                 // Only the witness is missing, so the transaction itself may be fine.\n                 state.Invalid(ValidationInvalidReason::TX_WITNESS_MUTATED, false,\n                           state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\n-                state.SetCorruptionPossible();",
    "path": "src/validation.cpp",
    "position": 180,
    "original_position": 4,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "6ee2c4551d055dd3c7bf28ed4bde7c566d75dfef",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This change isn't a clean refactor -- `!state.CorruptionPossible()` would have returned false after this, but its replacement in this commit (ie, `state.GetReason() != BLOCK_MUTATED`) will return true. I think this is okay though, since `CorruptionPossible()` is only checked for block updates, and this just deals with mempool tx's, and the uses of `state.CorruptionPossible()` that this would have effected were already changed to `state.GetReason() != TX_WITNESS_MUTATED` in an earlier commit. ",
    "created_at": "2019-01-15T12:57:07Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247881222",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247881222"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247881222"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247881222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 906,
    "original_line": 906,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247908811",
    "pull_request_review_id": 192495960,
    "id": 247908811,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzkwODgxMQ==",
    "diff_hunk": "@@ -203,7 +203,7 @@ ReadStatus PartiallyDownloadedBlock::FillBlock(CBlock& block, const std::vector<\n         // but that is expensive, and CheckBlock caches a block's\n         // \"checked-status\" (in the CBlock?). CBlock should be able to\n         // check its own merkle root and cache that check.\n-        if (state.CorruptionPossible())\n+        if (state.GetReason() == ValidationInvalidReason::BLOCK_MUTATED)",
    "path": "src/blockencodings.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "963699d1316f6b14c98a4624f766393379db85e1",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Seems like this change could be squashed into \"Remove references to CValidationState's DoS and CorruptionPossible\" ?",
    "created_at": "2019-01-15T14:18:58Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247908811",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247908811"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247908811"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247908811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 206,
    "original_line": 206,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247920759",
    "pull_request_review_id": 192682212,
    "id": 247920759,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzkyMDc1OQ==",
    "diff_hunk": "@@ -1453,6 +1529,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n                 // etc), and not just the duplicate-invalid case.\n                 pfrom->fDisconnect = true;\n             }\n+            MaybePunishNode(pfrom->GetId(), state, /*via_compact_block*/ false, \"invalid header received\");",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 131,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This replaces the `Misbehaving(.., \"invalid header received\");` from earlier; shouldn't be introducing a bug (unless the move to below the `if` introduces one)?",
    "created_at": "2019-01-15T14:48:25Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247920759",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247920759"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247920759"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247920759/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1532,
    "side": "RIGHT",
    "in_reply_to_id": 247737022
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247998223",
    "pull_request_review_id": 192781251,
    "id": 247998223,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0Nzk5ODIyMw==",
    "diff_hunk": "@@ -1453,6 +1529,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n                 // etc), and not just the duplicate-invalid case.\n                 pfrom->fDisconnect = true;\n             }\n+            MaybePunishNode(pfrom->GetId(), state, /*via_compact_block*/ false, \"invalid header received\");",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 131,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I believe there is an unintended behavior change here -- previously, \"duplicate invalid\" headers were not assigned DoS points.  We added a bunch of logic (just above this line of code) to punish outbound peers for providing invalid headers.\r\n\r\nAfter the rewrite in this PR, CACHED_INVALID is a bannable offense from any peer (other than in HB compact block relay).\r\n\r\nI'll rework this...",
    "created_at": "2019-01-15T17:54:52Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247998223",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247998223"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247998223"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247998223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1532,
    "side": "RIGHT",
    "in_reply_to_id": 247737022
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248002976",
    "pull_request_review_id": 192787164,
    "id": 248002976,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAwMjk3Ng==",
    "diff_hunk": "@@ -816,6 +816,91 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With respect to the issue you're bringing up, I believe the behavior in this PR matches existing behavior, in which case I'd prefer to defer improvement to a future PR.  If I'm missing some way that we've made things different or worse though let me know.\r\n\r\nAs for BIP 152:\r\n\r\n>A node MUST NOT send a cmpctblock message without having validated that the header properly commits to each transaction in the block, and properly builds on top of the existing, fully-validated chain with a valid proof-of-work either as a part of the current most-work valid chain, or building directly on top of it. A node MAY send a cmpctblock before validating that each transaction in the block validly spends existing UTXO set entries.\r\n",
    "created_at": "2019-01-15T18:07:57Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248002976",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248002976"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248002976"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248002976/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 982,
    "side": "RIGHT",
    "in_reply_to_id": 247688022
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248032542",
    "pull_request_review_id": 192824459,
    "id": 248032542,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAzMjU0Mg==",
    "diff_hunk": "@@ -160,24 +160,24 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n-        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n+        return state.DoS(10, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-vin-empty\");",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add useful-for-dos \"reason\" field to CValidationState\" (a5415e85caaf2f5a77d6bae9574bb6d21139ee34)\r\n\r\nNote: word-diff is useful here to review new function arguments:\r\n\r\n```bash\r\ngit log -p -n1 -U0 --word-diff-regex=. a5415e85caaf2f5a77d6bae9574bb6d21139ee34\r\n```",
    "created_at": "2019-01-15T19:30:40Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248032542",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248032542"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248032542"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248032542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 163,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248034524",
    "pull_request_review_id": 192824459,
    "id": 248034524,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAzNDUyNA==",
    "diff_hunk": "@@ -716,27 +716,22 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                               fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n-        // Check that the transaction doesn't have an excessive number of",
    "path": "src/validation.cpp",
    "position": 79,
    "original_position": 79,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add useful-for-dos \"reason\" field to CValidationState\" (a5415e85caaf2f5a77d6bae9574bb6d21139ee34):\r\n\r\nWhy remove this comment?",
    "created_at": "2019-01-15T19:36:28Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248034524",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248034524"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248034524"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248034524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 724,
    "original_line": 724,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248036953",
    "pull_request_review_id": 192824459,
    "id": 248036953,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAzNjk1Mw==",
    "diff_hunk": "@@ -1988,11 +1988,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::TX_MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // it's not defined for a block, so we reset the reason flag to CONSENSUS here.\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::CONSENSUS, false,",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 232,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add useful-for-dos \"reason\" field to CValidationState\" (a5415e85caaf2f5a77d6bae9574bb6d21139ee34)\r\n\r\nThis seems like it is doubling the state.nDoS level, in addition to updating the reason enum:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a5415e85caaf2f5a77d6bae9574bb6d21139ee34/src/consensus/validation.h#L96\r\n\r\nWould suggest replacing this change something more straightforward like `state.UpdateReason(ValidationInvalidReason::CONSENSUS)`",
    "created_at": "2019-01-15T19:44:08Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248036953",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248036953"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248036953"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248036953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1994,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248037437",
    "pull_request_review_id": 192824459,
    "id": 248037437,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAzNzQzNw==",
    "diff_hunk": "@@ -2016,17 +2022,29 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as it's not defined for a block, so\n+                    // we reset the reason flag to CONSENSUS here.\n+                    // (note that this may not be the case until we add additional\n+                    // soft-fork flags to our script flags, in which case we  need to",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 273,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add useful-for-dos \"reason\" field to CValidationState\" (a5415e85caaf2f5a77d6bae9574bb6d21139ee34)\r\n\r\nExtra space on this line",
    "created_at": "2019-01-15T19:45:33Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248037437",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248037437"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248037437"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248037437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2018,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248038062",
    "pull_request_review_id": 192824459,
    "id": 248038062,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAzODA2Mg==",
    "diff_hunk": "@@ -2016,17 +2022,29 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as it's not defined for a block, so\n+                    // we reset the reason flag to CONSENSUS here.\n+                    // (note that this may not be the case until we add additional\n+                    // soft-fork flags to our script flags, in which case we  need to\n+                    // be careful to differentiate RECENT_CONSENSUS_CHANGE and\n+                    // CONSENSUS)\n+                    state.DoS(state.GetDoS(), ValidationInvalidReason::CONSENSUS, false,",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 276,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add useful-for-dos \"reason\" field to CValidationState\" (a5415e85caaf2f5a77d6bae9574bb6d21139ee34)\r\n\r\nThis also seems to double state.nDoS.",
    "created_at": "2019-01-15T19:47:21Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248038062",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248038062"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248038062"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248038062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2042,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248039678",
    "pull_request_review_id": 192824459,
    "id": 248039678,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAzOTY3OA==",
    "diff_hunk": "@@ -1988,11 +1988,17 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n+                if (state.GetReason() == ValidationInvalidReason::TX_MISSING_INPUTS) {\n+                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n+                    // it's not defined for a block, so we reset the reason flag to CONSENSUS here.",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 231,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add useful-for-dos \"reason\" field to CValidationState\" (a5415e85caaf2f5a77d6bae9574bb6d21139ee34)\r\n\r\nIs there a check for the requirement that MISSING_INPUTS is not used for a block? I would expect to see an assert(reason != MISSING_INPUTS) or assert(ValidForBlock(reason)) or something like that somewhere.",
    "created_at": "2019-01-15T19:52:30Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248039678",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248039678"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248039678"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248039678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1989,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248041505",
    "pull_request_review_id": 192824459,
    "id": 248041505,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODA0MTUwNQ==",
    "diff_hunk": "@@ -3106,28 +3124,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),",
    "path": "src/validation.cpp",
    "position": 403,
    "original_position": 345,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add useful-for-dos \"reason\" field to CValidationState\" (a5415e85caaf2f5a77d6bae9574bb6d21139ee34)\r\n\r\nNote: I guess this line used to set state.corruptionPossible = false but no longer does.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/cebe910718ae4f099f292736192a4e725ad02b94/src/consensus/validation.h#L54-L58\r\n\r\nNew way seems better.",
    "created_at": "2019-01-15T19:57:17Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248041505",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248041505"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248041505"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248041505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3106,
    "original_line": 3106,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248048711",
    "pull_request_review_id": 192824459,
    "id": 248048711,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODA0ODcxMQ==",
    "diff_hunk": "@@ -1077,14 +1077,12 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n     const uint256 hash(block.GetHash());\n     std::map<uint256, std::pair<NodeId, bool>>::iterator it = mapBlockSource.find(hash);\n \n-    int nDoS = 0;\n-    if (state.IsInvalid(nDoS)) {\n+    if (state.IsInvalid()) {\n         // Don't send reject message with code 0 or an internal reject code.\n         if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n             CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n             State(it->second.first)->rejects.push_back(reject);\n-            if (nDoS > 0 && it->second.second)\n-                Misbehaving(it->second.first, nDoS);\n+            MaybePunishNode(/*nodeid=*/ it->second.first, state, /*via_compact_block=*/ !it->second.second);",
    "path": "src/net_processing.cpp",
    "position": 131,
    "original_position": 13,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "6bdc4491e06433eb380ca3b8bc3e7c15f06aee8b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Use state reason field to check for collisions in cmpctblocks\" (963699d1316f6b14c98a4624f766393379db85e1)\r\n\r\nSince the `mapBlockSource` bool is now being passed as `!via_compact_block`, it seems like the field description should mention something about setting it based on whether the source was a compact or full block:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/6bdc4491e06433eb380ca3b8bc3e7c15f06aee8b/src/net_processing.cpp#L104-L105",
    "created_at": "2019-01-15T20:21:21Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248048711",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248048711"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r248048711"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248048711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1233,
    "original_line": 1233,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249039245",
    "pull_request_review_id": 194090637,
    "id": 249039245,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTAzOTI0NQ==",
    "diff_hunk": "@@ -53,9 +53,8 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n     BOOST_CHECK(state.IsInvalid());\n     BOOST_CHECK_EQUAL(state.GetRejectReason(), \"coinbase\");\n \n-    int nDoS;\n-    BOOST_CHECK_EQUAL(state.IsInvalid(nDoS), true);\n-    BOOST_CHECK_EQUAL(nDoS, 100);\n+    BOOST_CHECK_EQUAL(state.IsInvalid(), true);",
    "path": "src/test/txvalidation_tests.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a642744cc55816e3d816231fbe9352685ea72edb",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We checked `state.IsInvalid()` a couple of lines earlier, so this addition is redundant.",
    "created_at": "2019-01-18T13:19:59Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r249039245",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249039245"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r249039245"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249039245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 56,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250800408",
    "pull_request_review_id": 196279133,
    "id": 250800408,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDgwMDQwOA==",
    "diff_hunk": "@@ -3116,10 +3116,12 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n             return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, true)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94c2cdb88049af5283a7c1f52ea6e52ac2946686",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Check transactions just logs a message\" (94c2cdb88049af5283a7c1f52ea6e52ac2946686)\r\n\r\nCould you update the commit message to say whether this commit changes behavior at all, and what the motivation is? At first glance it seems like this probably doesn't change behavior, and the only motivation is to simplify code. But I could easily be missing something.",
    "created_at": "2019-01-24T22:22:42Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r250800408",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250800408"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r250800408"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250800408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3123,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250802869",
    "pull_request_review_id": 196279133,
    "id": 250802869,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDgwMjg2OQ==",
    "diff_hunk": "@@ -816,6 +816,23 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    return (state.GetDoS() > 0);\n+}\n+\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    int nDoS = state.GetDoS();\n+    if (nDoS > 0 && !via_compact_block) {\n+         LOCK(cs_main);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "8226bed4191a50129ac6fdbcb8fad5e1c6b7cacd",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Use maybepunish etc\" (8226bed4191a50129ac6fdbcb8fad5e1c6b7cacd)\r\n\r\nNote: This acquires lock recursively in `PeerLogicValidation::BlockChecked`. Seems fine, but just wanted to note it wasn't happening before.",
    "created_at": "2019-01-24T22:31:03Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r250802869",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250802869"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r250802869"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250802869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 826,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250807170",
    "pull_request_review_id": 196279133,
    "id": 250807170,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDgwNzE3MA==",
    "diff_hunk": "@@ -1414,21 +1414,16 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                         // Check whether the failure was caused by a\n                         // non-mandatory script verification check, such as\n                         // non-standard DER encodings or non-null dummy\n-                        // arguments; if so, don't trigger DoS protection to\n-                        // avoid splitting the network between upgraded and\n-                        // non-upgraded nodes.\n+                        // arguments; if so, ensure we return NOT_STANDARD\n+                        // instead of CONSENSUS to avoid downstream users\n+                        // splitting the network between upgraded and\n+                        // non-upgraded nodes by banning CONSENSUS-failing\n+                        // data providers.\n                         CScriptCheck check2(coin.out, tx, i,\n                                 flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                         if (check2())\n                             return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n                     }\n-                    // Failures of other flags indicate a transaction that is\n-                    // invalid in new blocks, e.g. an invalid P2SH. We DoS ban\n-                    // such nodes as they are not following the protocol. That\n-                    // said during an upgrade careful thought should be taken\n-                    // as to the correct behavior - we may want to continue\n-                    // peering with non-upgraded nodes even after soft-fork\n-                    // super-majority signaling has occurred.",
    "path": "src/validation.cpp",
    "position": 240,
    "original_position": 23,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "e534b0b78bec49750421b5f52012b857df197e24",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Update some comments in validation.cpp as we arent doing DoS there\" (e534b0b78bec49750421b5f52012b857df197e24)\r\n\r\nWhy remove this comment entirely?",
    "created_at": "2019-01-24T22:46:54Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r250807170",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250807170"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r250807170"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250807170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1434,
    "original_line": 1434,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251920734",
    "pull_request_review_id": 197664334,
    "id": 251920734,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTkyMDczNA==",
    "diff_hunk": "@@ -3116,10 +3116,12 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n             return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, true)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94c2cdb88049af5283a7c1f52ea6e52ac2946686",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2019-01-29T16:50:51Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r251920734",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251920734"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r251920734"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251920734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3123,
    "side": "RIGHT",
    "in_reply_to_id": 250800408
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251920815",
    "pull_request_review_id": 197664436,
    "id": 251920815,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTkyMDgxNQ==",
    "diff_hunk": "@@ -1414,21 +1414,16 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                         // Check whether the failure was caused by a\n                         // non-mandatory script verification check, such as\n                         // non-standard DER encodings or non-null dummy\n-                        // arguments; if so, don't trigger DoS protection to\n-                        // avoid splitting the network between upgraded and\n-                        // non-upgraded nodes.\n+                        // arguments; if so, ensure we return NOT_STANDARD\n+                        // instead of CONSENSUS to avoid downstream users\n+                        // splitting the network between upgraded and\n+                        // non-upgraded nodes by banning CONSENSUS-failing\n+                        // data providers.\n                         CScriptCheck check2(coin.out, tx, i,\n                                 flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                         if (check2())\n                             return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n                     }\n-                    // Failures of other flags indicate a transaction that is\n-                    // invalid in new blocks, e.g. an invalid P2SH. We DoS ban\n-                    // such nodes as they are not following the protocol. That\n-                    // said during an upgrade careful thought should be taken\n-                    // as to the correct behavior - we may want to continue\n-                    // peering with non-upgraded nodes even after soft-fork\n-                    // super-majority signaling has occurred.",
    "path": "src/validation.cpp",
    "position": 240,
    "original_position": 23,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "e534b0b78bec49750421b5f52012b857df197e24",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Updated with a new comment.",
    "created_at": "2019-01-29T16:51:03Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r251920815",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251920815"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r251920815"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251920815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1434,
    "original_line": 1434,
    "side": "LEFT",
    "in_reply_to_id": 250807170
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252851518",
    "pull_request_review_id": 198828305,
    "id": 252851518,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjg1MTUxOA==",
    "diff_hunk": "@@ -30,32 +74,24 @@ class CValidationState {\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n-    int nDoS;\n+    ValidationInvalidReason reason;",
    "path": "src/consensus/validation.h",
    "position": null,
    "original_position": 56,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed in latest commit.",
    "created_at": "2019-01-31T21:40:20Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r252851518",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252851518"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r252851518"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252851518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 77,
    "side": "RIGHT",
    "in_reply_to_id": 247634533
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252851556",
    "pull_request_review_id": 198828356,
    "id": 252851556,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjg1MTU1Ng==",
    "diff_hunk": "@@ -22,6 +22,50 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks (or headers):\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+    // Only loose txn:\n+    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_MISSING_INPUTS,        //!< a transaction was missing some of its inputs (or its inputs were spent at < coinbase maturity height)\n+    /**\n+     * Transaction might be missing a witness, have a witness prior to SegWit\n+     * activation, or witness may have been malleated (which includes\n+     * non-standard witnesses).\n+     */\n+    TX_WITNESS_MUTATED,\n+    /**\n+     * Tx already in mempool or conflicts with a tx in the chain",
    "path": "src/consensus/validation.h",
    "position": 40,
    "original_position": 39,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't really think \"confirmed transaction\" is any clearer than \"tx in the chain\" -- if anything, the latter seems more specific to me, as \"confirmed\" is a concept that only makes sense in the context of the chain that you're on, which \"tx in the chain\" is more explicit about.\r\n\r\nI'm going to leave this comment intact, pending other opinions.",
    "created_at": "2019-01-31T21:40:29Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r252851556",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252851556"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r252851556"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252851556/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 61,
    "original_line": 61,
    "side": "RIGHT",
    "in_reply_to_id": 247638591
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255232967",
    "pull_request_review_id": 201781962,
    "id": 255232967,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTIzMjk2Nw==",
    "diff_hunk": "@@ -22,6 +22,50 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n+    // Only blocks (or headers):\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+    // Only loose txn:\n+    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_MISSING_INPUTS,        //!< a transaction was missing some of its inputs (or its inputs were spent at < coinbase maturity height)\n+    /**\n+     * Transaction might be missing a witness, have a witness prior to SegWit\n+     * activation, or witness may have been malleated (which includes\n+     * non-standard witnesses).\n+     */\n+    TX_WITNESS_MUTATED,\n+    /**\n+     * Tx already in mempool or conflicts with a tx in the chain",
    "path": "src/consensus/validation.h",
    "position": 40,
    "original_position": 39,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the current wording is fine.",
    "created_at": "2019-02-08T20:56:59Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255232967",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255232967"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255232967"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255232967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 61,
    "original_line": 61,
    "side": "RIGHT",
    "in_reply_to_id": 247638591
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255233378",
    "pull_request_review_id": 201781962,
    "id": 255233378,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTIzMzM3OA==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(addrNameIn), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "7682566acd7b04aee9425772823e77f230268ad8",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: you can use `name(std::move(addrNameIn))` here to avoid a copy.",
    "created_at": "2019-02-08T20:58:36Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255233378",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255233378"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255233378"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255233378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 359,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255235104",
    "pull_request_review_id": 201781962,
    "id": 255235104,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTIzNTEwNA==",
    "diff_hunk": "@@ -947,6 +956,106 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        {\n+            LOCK(cs_main);\n+            CNodeState *node_state = State(nodeid);\n+            if (node_state == nullptr) {\n+                break;\n+            }\n+\n+            // Disconnect outbound (but not inbound) peers if on an invalid chain.\n+            // Exempt HB compact block peers and manual connections.\n+            if (!via_compact_block && !node_state->m_is_inbound && !node_state->m_is_manual_connection) {\n+                Misbehaving(nodeid, 100, message);",
    "path": "src/net_processing.cpp",
    "position": 78,
    "original_position": 95,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "7682566acd7b04aee9425772823e77f230268ad8",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The comment says \"disconnect\", but the DoS score will also cause a ban here. Is that intentional? (it seems it's retaining existing behavior, so I assume it is).",
    "created_at": "2019-02-08T21:05:05Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255235104",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255235104"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255235104"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255235104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1018,
    "original_line": 1018,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255342147",
    "pull_request_review_id": 201908267,
    "id": 255342147,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTM0MjE0Nw==",
    "diff_hunk": "@@ -947,6 +956,106 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        {\n+            LOCK(cs_main);\n+            CNodeState *node_state = State(nodeid);\n+            if (node_state == nullptr) {\n+                break;\n+            }\n+\n+            // Disconnect outbound (but not inbound) peers if on an invalid chain.\n+            // Exempt HB compact block peers and manual connections.\n+            if (!via_compact_block && !node_state->m_is_inbound && !node_state->m_is_manual_connection) {\n+                Misbehaving(nodeid, 100, message);",
    "path": "src/net_processing.cpp",
    "position": 78,
    "original_position": 95,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "7682566acd7b04aee9425772823e77f230268ad8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is actually a behavior change from existing behavior, but hopefully a relatively harmless one.  Here's the relevant snippet from master:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2945492424934fa360f86b116184ee8e34f19d0a/src/net_processing.cpp#L1552-L1585\r\n\r\nIt's a bit hard to decipher because of the multiple layers going on here, but basically `punish_duplicate_invalid` is only set to true for outbound and non-manual peers relaying us headers outside of HB compact block mode, and `nDoS` is set to 0 for the cached-invalid case:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2945492424934fa360f86b116184ee8e34f19d0a/src/validation.cpp#L3341-L3357\r\n\r\nSo this does indeed result in a ban rather than just a disconnect for an outbound peer that announces an invalid header.  If there's no reason that this is materially worse than other ban behaviors that exist, then I think I'd prefer to stick with this behavior change for now, and try to improve ban-behavior globally after this PR (which should become much easier, now that banning is contained to one place in the code in a more understandable way).\r\n\r\nI can update the comment though to make this clearer.",
    "created_at": "2019-02-10T15:28:09Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255342147",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255342147"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255342147"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255342147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1018,
    "original_line": 1018,
    "side": "RIGHT",
    "in_reply_to_id": 255235104
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255688905",
    "pull_request_review_id": 202332478,
    "id": 255688905,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY4ODkwNQ==",
    "diff_hunk": "@@ -160,9 +160,9 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n-        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vin-empty\");",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Txn with empty vin/vout or null prevouts move from 10 DoS points to 100\"",
    "created_at": "2019-02-11T20:55:41Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255688905",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255688905"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255688905"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255688905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 163,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255688944",
    "pull_request_review_id": 202332478,
    "id": 255688944,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY4ODk0NA==",
    "diff_hunk": "@@ -160,9 +160,9 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n-        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n     if (tx.vout.empty())\n-        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vout-empty\");\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vout-empty\");",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Txn with empty vin/vout or null prevouts move from 10 DoS points to 100\"",
    "created_at": "2019-02-11T20:55:46Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255688944",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255688944"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255688944"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255688944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 165,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689044",
    "pull_request_review_id": 202332478,
    "id": 255689044,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY4OTA0NA==",
    "diff_hunk": "@@ -199,7 +199,7 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     {\n         for (const auto& txin : tx.vin)\n             if (txin.prevout.IsNull())\n-                return state.DoS(10, false, REJECT_INVALID, \"bad-txns-prevout-null\");\n+                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-prevout-null\");",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Txn with empty vin/vout or null prevouts move from 10 DoS points to 100\"",
    "created_at": "2019-02-11T20:56:02Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689044",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689044"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689044"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689172",
    "pull_request_review_id": 202332478,
    "id": 255689172,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY4OTE3Mg==",
    "diff_hunk": "@@ -221,8 +221,8 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n \n         // If prev is coinbase, check that it's matured\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(false,\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+            return state.DoS(100, false,\n+                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\", false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Inclusion of a premature coinbase spend now results in a ban\"",
    "created_at": "2019-02-11T20:56:24Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689172",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689172"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689172"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 225,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689323",
    "pull_request_review_id": 202332478,
    "id": 255689323,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY4OTMyMw==",
    "diff_hunk": "@@ -763,7 +763,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             const uint256 &hashAncestor = ancestorIt->GetTx().GetHash();\n             if (setConflicts.count(hashAncestor))\n             {\n-                return state.DoS(10, false,\n+                return state.DoS(100, false,",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Loose transactions with a dependency loop now result in a ban instead of 10 DoS points\"",
    "created_at": "2019-02-11T20:56:51Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689323",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689323"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689323"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 766,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689428",
    "pull_request_review_id": 202332478,
    "id": 255689428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY4OTQyOA==",
    "diff_hunk": "@@ -3061,7 +3061,7 @@ static bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state,\n {\n     // Check proof of work matches claimed amount\n     if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n-        return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n+        return state.DoS(100, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Proof of work failure moves from 50 DoS points to a ban\"",
    "created_at": "2019-02-11T20:57:10Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3064,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689613",
    "pull_request_review_id": 202332478,
    "id": 255689613,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY4OTYxMw==",
    "diff_hunk": "@@ -3230,7 +3230,7 @@ static bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationSta\n \n     // Check timestamp against prev\n     if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n-        return state.Invalid(false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n+        return state.DoS(100, false, REJECT_INVALID, \"time-too-old\", false, \"block's timestamp is too early\");",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Blocks with timestamps under MTP now result in a ban\"",
    "created_at": "2019-02-11T20:57:39Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3233,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689820",
    "pull_request_review_id": 202332478,
    "id": 255689820,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY4OTgyMA==",
    "diff_hunk": "@@ -3241,7 +3241,7 @@ static bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationSta\n     if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n        (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n        (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n-            return state.Invalid(false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n+            return state.DoS(100, false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion), false,",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Any pre-segwit soft-fork errors (ie all soft-fork errors) now result in a ban\"",
    "created_at": "2019-02-11T20:58:17Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689820",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689820"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255689820"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255689820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3244,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255690104",
    "pull_request_review_id": 202332478,
    "id": 255690104,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY5MDEwNA==",
    "diff_hunk": "@@ -3271,7 +3271,7 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // Check that all transactions are finalized\n     for (const auto& tx : block.vtx) {\n         if (!IsFinalTx(*tx, nHeight, nLockTimeCutoff)) {\n-            return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 41,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Clean up banning levels\" (96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5)\r\n\r\nNote: this is \"Inclusion of non-final transactions in a block now results in a ban\"",
    "created_at": "2019-02-11T20:59:01Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255690104",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255690104"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255690104"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255690104/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3274,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255696468",
    "pull_request_review_id": 202332478,
    "id": 255696468,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTY5NjQ2OA==",
    "diff_hunk": "@@ -901,7 +901,8 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             if (!tx.HasWitness() && CheckInputs(tx, stateDummy, view, true, scriptVerifyFlags & ~(SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_CLEANSTACK), true, false, txdata) &&\n                 !CheckInputs(tx, stateDummy, view, true, scriptVerifyFlags & ~SCRIPT_VERIFY_CLEANSTACK, true, false, txdata)) {\n                 // Only the witness is missing, so the transaction itself may be fine.\n-                state.SetCorruptionPossible();\n+                state.DoS(0, ValidationInvalidReason::TX_WITNESS_MUTATED, false,",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 169,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "ac3873e2a92457995f7e5a9e5fc24352af360c6b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Add useful-for-dos \"reason\" field to CValidationState\" (ac3873e2a92457995f7e5a9e5fc24352af360c6b)\r\n\r\nPassing state.GetDoS() instead of 0 might make it clearer behavior isn't changing.",
    "created_at": "2019-02-11T21:17:58Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255696468",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255696468"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255696468"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255696468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 904,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255702109",
    "pull_request_review_id": 202332478,
    "id": 255702109,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTcwMjEwOQ==",
    "diff_hunk": "@@ -137,14 +137,14 @@ class CValidationState {\n         case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n         case ValidationInvalidReason::BLOCK_CHECKPOINT:\n         case ValidationInvalidReason::BLOCK_INVALID_PREV:\n-        case ValidationInvalidReason::TX_MISSING_INPUTS:\n             return 100;\n         case ValidationInvalidReason::BLOCK_MISSING_PREV:\n             return 10;\n         case ValidationInvalidReason::CACHED_INVALID:\n         case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n         case ValidationInvalidReason::BLOCK_BAD_TIME:\n         case ValidationInvalidReason::TX_NOT_STANDARD:\n+        case ValidationInvalidReason::TX_MISSING_INPUTS:",
    "path": "src/consensus/validation.h",
    "position": null,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "bee1d4f5e29c8c447ac47a608240b38216750072",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"TX_MISSING_INPUTS now has a DoS score of 0\" (bee1d4f5e29c8c447ac47a608240b38216750072)\r\n\r\nNot sure, but it seems like it might be nice to have a comment here saying TX_MISSING_INPUTS reason will change to CONSENSUS if the transaction is included in a block, and lead to a higher dos score in that case.",
    "created_at": "2019-02-11T21:33:17Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255702109",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255702109"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255702109"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255702109/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 147,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255708805",
    "pull_request_review_id": 202332478,
    "id": 255708805,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTcwODgwNQ==",
    "diff_hunk": "@@ -1558,7 +1558,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     CBlockHeader first_invalid_header;\n     if (!ProcessNewBlockHeaders(headers, state, chainparams, &pindexLast, &first_invalid_header)) {\n         if (state.IsInvalid()) {\n-            if (punish_duplicate_invalid && LookupBlockIndex(first_invalid_header.GetHash())) {\n+            if (punish_duplicate_invalid && state.GetReason() == ValidationInvalidReason::CACHED_INVALID) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "c558ebaa6d02154eaf762a28d2a7e954acee0661",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"LookupBlockIndex -> CACHED_INVALID\" (c558ebaa6d02154eaf762a28d2a7e954acee0661)\r\n\r\nNote: behavior should be unchanged here because ProcessNewBlockHeaders calls AcceptBlockHeader which sets CACHED_INVALID if a header is already known and has BLOCK_FAILED_MASK is set. If the first invalid header is invalid for a different reason the check shouldn't trigger either before or after this change.",
    "created_at": "2019-02-11T21:52:40Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255708805",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255708805"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255708805"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255708805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1561,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255712280",
    "pull_request_review_id": 202332478,
    "id": 255712280,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NTcxMjI4MA==",
    "diff_hunk": "@@ -947,6 +956,106 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        {\n+            LOCK(cs_main);\n+            CNodeState *node_state = State(nodeid);\n+            if (node_state == nullptr) {\n+                break;\n+            }\n+\n+            // Disconnect outbound (but not inbound) peers if on an invalid chain.\n+            // Exempt HB compact block peers and manual connections.\n+            if (!via_compact_block && !node_state->m_is_inbound && !node_state->m_is_manual_connection) {\n+                Misbehaving(nodeid, 100, message);",
    "path": "src/net_processing.cpp",
    "position": 78,
    "original_position": 95,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "7682566acd7b04aee9425772823e77f230268ad8",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255235104\r\n\r\nNote: Thread pertains to commit \"Fix handling of invalid headers\" (9dd6fc18658b36b63b9f264676ac484879597b83)\r\n",
    "created_at": "2019-02-11T22:02:20Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255712280",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255712280"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255712280"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/255712280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1018,
    "original_line": 1018,
    "side": "RIGHT",
    "in_reply_to_id": 255235104
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256052181",
    "pull_request_review_id": 202790593,
    "id": 256052181,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA1MjE4MQ==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Use Reasons directly instead of DoS codes\" (346699322ca820c5d95c255386df3ce1fb1f3d11)\r\n\r\nWould be good to add a comment here saying that if this function is changed, then the MayResultInDisconnect function above should also be updated.",
    "created_at": "2019-02-12T17:02:16Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256052181",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256052181"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256052181"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256052181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 983,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256054235",
    "pull_request_review_id": 202790593,
    "id": 256054235,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA1NDIzNQ==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {",
    "path": "src/net_processing.cpp",
    "position": 55,
    "original_position": 52,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Use Reasons directly instead of DoS codes\" (346699322ca820c5d95c255386df3ce1fb1f3d11)\r\n\r\nThis change seems like a step backwards to me. It seems cleaner and less error prone to keep MaybePunishNode and MayResultInDisconnect both implemented in terms of the same nice `GetDoSForReason` function added in ac3873e2a92457995f7e5a9e5fc24352af360c6b (renamed to `GetDos` in 6e3332a76f227b6dd6068513807934fd1b3d936b), than to duplicate the logic between these two functions and duplicate LOCK/Misbehaving stuff within this function.\r\n\r\nI would drop this commit entirely. The only parts of it that seem worth keeping are the added function comments, and these would make more sense as part of 4159f7ca7b449195f0e8a3f67a4045409c703e9d which adds the functions. Keeping GetDos would also reduce the churn in this PR and simplify the later 8e4590e522d4903d970cdaafb95e4fdfccf792fb commit.",
    "created_at": "2019-02-12T17:07:07Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256054235",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256054235"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256054235"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256054235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 995,
    "original_line": 995,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256061290",
    "pull_request_review_id": 202790593,
    "id": 256061290,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA2MTI5MA==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Use Reasons directly instead of DoS codes\" (346699322ca820c5d95c255386df3ce1fb1f3d11)\r\n\r\nIt would be clearer to write \"may result in a peer banning/disconnecting us\" than \"may result in us banning/disconnecting a peer.\" Otherwise the next sentence makes less sense, and the overall comment is confusing about how the function is used.",
    "created_at": "2019-02-12T17:24:15Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256061290",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256061290"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256061290"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256061290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 951,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256077494",
    "pull_request_review_id": 202790593,
    "id": 256077494,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA3NzQ5NA==",
    "diff_hunk": "@@ -1453,6 +1529,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n                 // etc), and not just the duplicate-invalid case.\n                 pfrom->fDisconnect = true;\n             }\n+            MaybePunishNode(pfrom->GetId(), state, /*via_compact_block*/ false, \"invalid header received\");",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 131,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94874ddfdf4ae9c4b10f3f91d5e3280e2c24c371",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r247737022\r\n\r\n> I'll rework this...\r\n\r\nThis is resolved now?",
    "created_at": "2019-02-12T18:03:59Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256077494",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256077494"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256077494"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256077494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1532,
    "side": "RIGHT",
    "in_reply_to_id": 247737022
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256081557",
    "pull_request_review_id": 202790593,
    "id": 256081557,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA4MTU1Nw==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    // Handled elsewhere for now",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Use Reasons directly instead of DoS codes\" (346699322ca820c5d95c255386df3ce1fb1f3d11)\r\n\r\nNote: \"elsewhere\" refers to the CACHED_INVALID check in ProcessHeadersMessage added in earlier commit \"LookupBlockIndex -> CACHED_INVALID\" (c558ebaa6d02154eaf762a28d2a7e954acee0661).\r\n\r\nI would suggest clarifying this, but this is all replaced in the next commit \"Fix handling of invalid headers\" (9dd6fc18658b36b63b9f264676ac484879597b83), so it doesn't matter much.",
    "created_at": "2019-02-12T18:14:47Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256081557",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256081557"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256081557"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256081557/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1003,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256089801",
    "pull_request_review_id": 202790593,
    "id": 256089801,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA4OTgwMQ==",
    "diff_hunk": "@@ -1627,41 +1649,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     CBlockHeader first_invalid_header;\n     if (!ProcessNewBlockHeaders(headers, state, chainparams, &pindexLast, &first_invalid_header)) {\n         if (state.IsInvalid()) {\n-            if (punish_duplicate_invalid && state.GetReason() == ValidationInvalidReason::CACHED_INVALID) {\n-                // Goal: don't allow outbound peers to use up our outbound",
    "path": "src/net_processing.cpp",
    "position": 157,
    "original_position": 66,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "9dd6fc18658b36b63b9f264676ac484879597b83",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Fix handling of invalid headers\" (9dd6fc18658b36b63b9f264676ac484879597b83)\r\n\r\nIt would be nice to keep more of this comment, like the high-level goal of freeing outbound slots, and other parts if they are still accurate. It might also be good to keep a TODO about how we could \"improve ban-behavior\" here as mentioned in https://github.com/bitcoin/bitcoin/pull/15141#discussion_r255342147",
    "created_at": "2019-02-12T18:35:29Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256089801",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256089801"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256089801"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256089801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1563,
    "original_line": 1563,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256091126",
    "pull_request_review_id": 202790593,
    "id": 256091126,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA5MTEyNg==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    // Handled elsewhere for now\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        break;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);",
    "path": "src/net_processing.cpp",
    "position": 88,
    "original_position": 72,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Use Reasons directly instead of DoS codes\" (346699322ca820c5d95c255386df3ce1fb1f3d11)\r\n\r\nIs calling Misbehaving here when via_compact_block is true a change in behavior? Same question below for the BLOCK_MISSING_PREV case.",
    "created_at": "2019-02-12T18:38:32Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256091126",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256091126"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256091126"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256091126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1028,
    "original_line": 1028,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256093250",
    "pull_request_review_id": 202790593,
    "id": 256093250,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA5MzI1MA==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[refactor] Use Reasons directly instead of DoS codes\" (346699322ca820c5d95c255386df3ce1fb1f3d11)\r\n\r\nIs returning true here a change in behavior? (via_compact_block is currently always false where this function is called)",
    "created_at": "2019-02-12T18:43:46Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256093250",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256093250"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256093250"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256093250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 970,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259070431",
    "pull_request_review_id": 206484611,
    "id": 259070431,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTA3MDQzMQ==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So this is only used for transaction relay, but this function is written to be more generic...  Perhaps I should limit the scope of this function to make it clear that transaction invalidity reasons are the only thing we would ask about?",
    "created_at": "2019-02-21T19:01:49Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r259070431",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259070431"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r259070431"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259070431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 970,
    "side": "RIGHT",
    "in_reply_to_id": 256093250
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259077758",
    "pull_request_review_id": 206493873,
    "id": 259077758,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTA3Nzc1OA==",
    "diff_hunk": "@@ -947,6 +956,106 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        {\n+            LOCK(cs_main);\n+            CNodeState *node_state = State(nodeid);\n+            if (node_state == nullptr) {\n+                break;\n+            }\n+\n+            // Disconnect outbound (but not inbound) peers if on an invalid chain.\n+            // Exempt HB compact block peers and manual connections.\n+            if (!via_compact_block && !node_state->m_is_inbound && !node_state->m_is_manual_connection) {\n+                Misbehaving(nodeid, 100, message);",
    "path": "src/net_processing.cpp",
    "position": 78,
    "original_position": 95,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "7682566acd7b04aee9425772823e77f230268ad8",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This appears to be correct to me. Obviously should update the comment to note this.",
    "created_at": "2019-02-21T19:21:02Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r259077758",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259077758"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r259077758"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259077758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1018,
    "original_line": 1018,
    "side": "RIGHT",
    "in_reply_to_id": 255235104
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259101986",
    "pull_request_review_id": 206524394,
    "id": 259101986,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1OTEwMTk4Ng==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    // Handled elsewhere for now\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        break;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);",
    "path": "src/net_processing.cpp",
    "position": 88,
    "original_position": 72,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Regarding BLOCK_INVALID_PREV, see above:\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/15141/files/3048533275227e67ce22931c6360513bddbd1767..346699322ca820c5d95c255386df3ce1fb1f3d11#r248002976\r\n\r\nFor the MISSING_PREV case, this is somewhat confusing but I don't think it's possible for via_compact_block to be true in that case, because we will send the peer a getheaders message if we receive a compact block announcement that doesn't connect, and not process the compact block in that case.",
    "created_at": "2019-02-21T20:28:31Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r259101986",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259101986"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r259101986"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/259101986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1028,
    "original_line": 1028,
    "side": "RIGHT",
    "in_reply_to_id": 256091126
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261833651",
    "pull_request_review_id": 209875001,
    "id": 261833651,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTgzMzY1MQ==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(addrNameIn), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "7682566acd7b04aee9425772823e77f230268ad8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2019-03-02T16:58:25Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261833651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261833651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261833651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261833651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 359,
    "side": "RIGHT",
    "in_reply_to_id": 255233378
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261833755",
    "pull_request_review_id": 209875107,
    "id": 261833755,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTgzMzc1NQ==",
    "diff_hunk": "@@ -947,6 +956,106 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n+}\n+\n+//! Returns true if the peer was punished (probably disconnected)\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        {\n+            LOCK(cs_main);\n+            CNodeState *node_state = State(nodeid);\n+            if (node_state == nullptr) {\n+                break;\n+            }\n+\n+            // Disconnect outbound (but not inbound) peers if on an invalid chain.\n+            // Exempt HB compact block peers and manual connections.\n+            if (!via_compact_block && !node_state->m_is_inbound && !node_state->m_is_manual_connection) {\n+                Misbehaving(nodeid, 100, message);",
    "path": "src/net_processing.cpp",
    "position": 78,
    "original_position": 95,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "7682566acd7b04aee9425772823e77f230268ad8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed comment in latest commit.",
    "created_at": "2019-03-02T17:01:39Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261833755",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261833755"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261833755"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261833755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1018,
    "original_line": 1018,
    "side": "RIGHT",
    "in_reply_to_id": 255235104
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834407",
    "pull_request_review_id": 209875773,
    "id": 261834407,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTgzNDQwNw==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {",
    "path": "src/net_processing.cpp",
    "position": 55,
    "original_position": 52,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The goal of this work was to make net_processing aware of the actual reasons for validation failures, rather than just deal with opaque numbers instructing it to do something.\r\n\r\nIn the future, I'd like to make it so that we use more context to decide how to punish a peer.  One example is to differentiate inbound and outbound peer misbehaviors.  Another potential example is if we'd treat RECENT_CONSENSUS_CHANGE failures differently (ie after the next consensus change is implemented), and perhaps again we'd want to treat some peers differently than others.\r\n\r\nI do think that the `MayResultInDisconnect` logic was not very useful, and in the latest version I've vastly simplified things to reflect that we only use this for deciding whether to relay transactions from whitelisted peers.  So there should be much less code duplication now.",
    "created_at": "2019-03-02T17:19:31Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834407",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834407"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834407"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 995,
    "original_line": 995,
    "side": "RIGHT",
    "in_reply_to_id": 256054235
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834566",
    "pull_request_review_id": 209875960,
    "id": 261834566,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTgzNDU2Ng==",
    "diff_hunk": "@@ -1627,41 +1649,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     CBlockHeader first_invalid_header;\n     if (!ProcessNewBlockHeaders(headers, state, chainparams, &pindexLast, &first_invalid_header)) {\n         if (state.IsInvalid()) {\n-            if (punish_duplicate_invalid && state.GetReason() == ValidationInvalidReason::CACHED_INVALID) {\n-                // Goal: don't allow outbound peers to use up our outbound",
    "path": "src/net_processing.cpp",
    "position": 157,
    "original_position": 66,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "9dd6fc18658b36b63b9f264676ac484879597b83",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this PR is basically what that TODO is referring to!",
    "created_at": "2019-03-02T17:24:53Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834566",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834566"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834566"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1563,
    "original_line": 1563,
    "side": "LEFT",
    "in_reply_to_id": 256089801
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834593",
    "pull_request_review_id": 209875991,
    "id": 261834593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTgzNDU5Mw==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Cleaned up in the latest version.",
    "created_at": "2019-03-02T17:26:01Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 970,
    "side": "RIGHT",
    "in_reply_to_id": 256093250
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834665",
    "pull_request_review_id": 209876065,
    "id": 261834665,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTgzNDY2NQ==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this still relevant after the latest changes?",
    "created_at": "2019-03-02T17:27:59Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834665",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834665"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834665"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261834665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 983,
    "side": "RIGHT",
    "in_reply_to_id": 256052181
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262350926",
    "pull_request_review_id": 210497110,
    "id": 262350926,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM1MDkyNg==",
    "diff_hunk": "@@ -221,28 +221,27 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n \n         // If prev is coinbase, check that it's matured\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(false,\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+            return state.Invalid(ValidationInvalidReason::TX_MISSING_INPUTS, false, REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe this is covered already, but why is premature coinbase using `TX_MISSING_INPUTS` as the reason? It's not really missing.",
    "created_at": "2019-03-05T05:21:43Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262350926",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262350926"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262350926"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262350926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 224,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262351517",
    "pull_request_review_id": 210497110,
    "id": 262351517,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM1MTUxNw==",
    "diff_hunk": "@@ -22,6 +22,76 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid",
    "path": "src/consensus/validation.h",
    "position": 11,
    "original_position": 11,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I understand if you don't wanna bother this late in the process, but it really seems like `ValidationResult` or `ValidationOutcome` would have been easier on the eyes, where this would be `SUCCESSFUL` or something.",
    "created_at": "2019-03-05T05:25:37Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262351517",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262351517"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262351517"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262351517/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 32,
    "original_line": 32,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262352042",
    "pull_request_review_id": 210497110,
    "id": 262352042,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM1MjA0Mg==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(std::move(addrNameIn)), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any particular reason why this isn't just `CNodeState(.., const std::string& addrNameIn, ...) : ..., name(addrNameIn)`?",
    "created_at": "2019-03-05T05:29:13Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262352042",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262352042"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262352042"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262352042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 361,
    "original_line": 361,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262353524",
    "pull_request_review_id": 210497110,
    "id": 262353524,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM1MzUyNA==",
    "diff_hunk": "@@ -2480,12 +2521,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // Never relay transactions that we would assign a non-zero DoS\n                 // score for, as we expect peers to do the same with us in that\n                 // case.\n-                int nDoS = 0;\n-                if (!state.IsInvalid(nDoS) || nDoS == 0) {\n+                if (state.IsInvalid() && TxRelayMayResultInDisconnect(state)) {\n+                    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));\n+                } else {\n                     LogPrintf(\"Force relaying tx %s from whitelisted peer=%d\\n\", tx.GetHash().ToString(), pfrom->GetId());\n                     RelayTransaction(tx, connman);\n-                } else {\n-                    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));",
    "path": "src/net_processing.cpp",
    "position": 265,
    "original_position": 253,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You could shrink diff a few lines if you felt like it:\r\n```C++\r\nif (!state.IsInvalid() || !TxRelayMayResultInDisconnect(state)) {\r\n    LogPrintf(\"Force relaying tx %s from whitelisted peer=%d\\n\", tx.GetHash().ToString(), pfrom->GetId());\r\n    RelayTransaction(tx, connman);\r\n} else {\r\n    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));\r\n}\r\n```",
    "created_at": "2019-03-05T05:39:18Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262353524",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262353524"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262353524"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262353524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2504,
    "original_line": 2504,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354030",
    "pull_request_review_id": 210497110,
    "id": 262354030,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM1NDAzMA==",
    "diff_hunk": "@@ -2520,9 +2559,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n                                    state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), inv.hash));\n             }\n-            if (nDoS > 0) {\n-                Misbehaving(pfrom->GetId(), nDoS);\n-            }\n+            MaybePunishNode(pfrom->GetId(), state, /*via_compact_block*/ false);",
    "path": "src/net_processing.cpp",
    "position": 286,
    "original_position": 274,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: you use `/*paramname=*/ value` above, but `/*paramname*/ value` here.",
    "created_at": "2019-03-05T05:42:37Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262354030",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354030"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262354030"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2589,
    "original_line": 2589,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354087",
    "pull_request_review_id": 210497110,
    "id": 262354087,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM1NDA4Nw==",
    "diff_hunk": "@@ -2552,14 +2589,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         const CBlockIndex *pindex = nullptr;\n         CValidationState state;\n         if (!ProcessNewBlockHeaders({cmpctblock.header}, state, chainparams, &pindex)) {\n-            int nDoS;\n-            if (state.IsInvalid(nDoS)) {\n-                if (nDoS > 0) {\n-                    LOCK(cs_main);\n-                    Misbehaving(pfrom->GetId(), nDoS, strprintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId()));\n-                } else {\n-                    LogPrint(BCLog::NET, \"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n-                }\n+            if (state.IsInvalid()) {\n+                MaybePunishNode(pfrom->GetId(), state, /*via_compact_block*/ true, \"invalid header via cmpctblock\");",
    "path": "src/net_processing.cpp",
    "position": 303,
    "original_position": 291,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "And here (`p=` vs `p`).",
    "created_at": "2019-03-05T05:43:00Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262354087",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354087"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262354087"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2626,
    "original_line": 2626,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354509",
    "pull_request_review_id": 210497110,
    "id": 262354509,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM1NDUwOQ==",
    "diff_hunk": "@@ -716,27 +716,22 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                               fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n-        // Check that the transaction doesn't have an excessive number of",
    "path": "src/validation.cpp",
    "position": 79,
    "original_position": 79,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good question.",
    "created_at": "2019-03-05T05:45:14Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262354509",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354509"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262354509"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262354509/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 724,
    "original_line": 724,
    "side": "LEFT",
    "in_reply_to_id": 248034524
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262355138",
    "pull_request_review_id": 210497110,
    "id": 262355138,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM1NTEzOA==",
    "diff_hunk": "@@ -2015,17 +2020,29 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as it's not defined for a block, so\n+                    // we reset the reason flag to CONSENSUS here.\n+                    // (note that this may not be the case until we add additional\n+                    // soft-fork flags to our script flags, in which case we  need to",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 322,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Still extra space as @ryanofsky pointed out.\r\n```suggestion\r\n                    // soft-fork flags to our script flags, in which case we need to\r\n```",
    "created_at": "2019-03-05T05:49:48Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262355138",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262355138"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262355138"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262355138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2018,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262361186",
    "pull_request_review_id": 210509673,
    "id": 262361186,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM2MTE4Ng==",
    "diff_hunk": "@@ -2480,12 +2521,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // Never relay transactions that we would assign a non-zero DoS\n                 // score for, as we expect peers to do the same with us in that\n                 // case.",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 244,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should update the comment here too probably -- s/assign a non-zero DoS score for/disconnect a peer/.",
    "created_at": "2019-03-05T06:25:35Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262361186",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262361186"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262361186"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262361186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2523,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262361315",
    "pull_request_review_id": 210509673,
    "id": 262361315,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM2MTMxNQ==",
    "diff_hunk": "@@ -2480,12 +2521,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // Never relay transactions that we would assign a non-zero DoS\n                 // score for, as we expect peers to do the same with us in that\n                 // case.\n-                int nDoS = 0;\n-                if (!state.IsInvalid(nDoS) || nDoS == 0) {\n+                if (state.IsInvalid() && TxRelayMayResultInDisconnect(state)) {\n+                    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));\n+                } else {\n                     LogPrintf(\"Force relaying tx %s from whitelisted peer=%d\\n\", tx.GetHash().ToString(), pfrom->GetId());\n                     RelayTransaction(tx, connman);\n-                } else {\n-                    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));",
    "path": "src/net_processing.cpp",
    "position": 265,
    "original_position": 253,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, swapping the order here messes up the following fixup! commits too.",
    "created_at": "2019-03-05T06:26:15Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262361315",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262361315"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262361315"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262361315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2504,
    "original_line": 2504,
    "side": "LEFT",
    "in_reply_to_id": 262353524
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262387412",
    "pull_request_review_id": 210541818,
    "id": 262387412,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM4NzQxMg==",
    "diff_hunk": "@@ -221,28 +221,27 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n \n         // If prev is coinbase, check that it's matured\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(false,\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+            return state.Invalid(ValidationInvalidReason::TX_MISSING_INPUTS, false, REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In either case, the transaction may be valid sometime later, but isn't valid now and isn't valid in a block, so they're not very distinct.",
    "created_at": "2019-03-05T08:20:09Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262387412",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262387412"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262387412"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262387412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 224,
    "side": "RIGHT",
    "in_reply_to_id": 262350926
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262390249",
    "pull_request_review_id": 210545291,
    "id": 262390249,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjM5MDI0OQ==",
    "diff_hunk": "@@ -221,28 +221,27 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n \n         // If prev is coinbase, check that it's matured\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(false,\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+            return state.Invalid(ValidationInvalidReason::TX_MISSING_INPUTS, false, REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`TX_INPUTS_UNAVAILABLE`?",
    "created_at": "2019-03-05T08:29:08Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262390249",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262390249"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262390249"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262390249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 224,
    "side": "RIGHT",
    "in_reply_to_id": 262350926
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262641531",
    "pull_request_review_id": 210859157,
    "id": 262641531,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjY0MTUzMQ==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {",
    "path": "src/net_processing.cpp",
    "position": 55,
    "original_position": 52,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256054235\r\n\r\nThanks, this makes sense and the simplification fixes all the parts I didn't like.",
    "created_at": "2019-03-05T18:53:20Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262641531",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262641531"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262641531"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262641531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 995,
    "original_line": 995,
    "side": "RIGHT",
    "in_reply_to_id": 256054235
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262641592",
    "pull_request_review_id": 210859157,
    "id": 262641592,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjY0MTU5Mg==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256052181\r\n\r\n> Is this still relevant after the latest changes?\r\n\r\nNot important. Maybe you could say a comment would be more helpful now that the functions don't look related. But it's not a big deal if there's no reminder to check sending behavior when you change receiving behavior.",
    "created_at": "2019-03-05T18:53:29Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262641592",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262641592"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262641592"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262641592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 983,
    "side": "RIGHT",
    "in_reply_to_id": 256052181
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262642581",
    "pull_request_review_id": 210859157,
    "id": 262642581,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjY0MjU4MQ==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    // Handled elsewhere for now\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        break;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+        {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);",
    "path": "src/net_processing.cpp",
    "position": 88,
    "original_position": 72,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256091126\r\n\r\nThanks, looks like these cases are really not possible given `assert(IsTransactionReason)` in the new code.",
    "created_at": "2019-03-05T18:55:54Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262642581",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262642581"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262642581"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262642581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1028,
    "original_line": 1028,
    "side": "RIGHT",
    "in_reply_to_id": 256091126
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262645915",
    "pull_request_review_id": 210859157,
    "id": 262645915,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjY0NTkxNQ==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(std::move(addrNameIn)), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262352042\r\n\r\n> Any particular reason why this isn't just CNodeState(.., const std::string& addrNameIn, ...) : ..., name(addrNameIn)?\r\n\r\nThis would be worse because you can't move from a const reference and there would be an unnecessary copy.\r\n\r\nIf a function is inserting an argument into a data structure, it's good practice for it to take the argument by value or by rvalue reference instead of by const reference, to avoid pointless copying.",
    "created_at": "2019-03-05T19:04:16Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262645915",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262645915"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262645915"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262645915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 361,
    "original_line": 361,
    "side": "RIGHT",
    "in_reply_to_id": 262352042
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262657469",
    "pull_request_review_id": 210859157,
    "id": 262657469,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjY1NzQ2OQ==",
    "diff_hunk": "@@ -3116,10 +3116,12 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n             return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, true)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "94c2cdb88049af5283a7c1f52ea6e52ac2946686",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r250800408\r\n\r\n> Done\r\n\r\nThanks, new commit is \"Remove redundant state.Invalid() call after CheckTransaction()\" (59ff8e67c2c62ec11d76d3d1b54dc4829363ad5e)",
    "created_at": "2019-03-05T19:35:11Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262657469",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262657469"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262657469"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262657469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3123,
    "side": "RIGHT",
    "in_reply_to_id": 250800408
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262658155",
    "pull_request_review_id": 210859157,
    "id": 262658155,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjY1ODE1NQ==",
    "diff_hunk": "@@ -1414,21 +1414,16 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                         // Check whether the failure was caused by a\n                         // non-mandatory script verification check, such as\n                         // non-standard DER encodings or non-null dummy\n-                        // arguments; if so, don't trigger DoS protection to\n-                        // avoid splitting the network between upgraded and\n-                        // non-upgraded nodes.\n+                        // arguments; if so, ensure we return NOT_STANDARD\n+                        // instead of CONSENSUS to avoid downstream users\n+                        // splitting the network between upgraded and\n+                        // non-upgraded nodes by banning CONSENSUS-failing\n+                        // data providers.\n                         CScriptCheck check2(coin.out, tx, i,\n                                 flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                         if (check2())\n                             return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));\n                     }\n-                    // Failures of other flags indicate a transaction that is\n-                    // invalid in new blocks, e.g. an invalid P2SH. We DoS ban\n-                    // such nodes as they are not following the protocol. That\n-                    // said during an upgrade careful thought should be taken\n-                    // as to the correct behavior - we may want to continue\n-                    // peering with non-upgraded nodes even after soft-fork\n-                    // super-majority signaling has occurred.",
    "path": "src/validation.cpp",
    "position": 240,
    "original_position": 23,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "e534b0b78bec49750421b5f52012b857df197e24",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r250807170\r\n\r\n> Updated with a new comment.\r\n\r\nThanks, new commit is \"[refactor] Update some comments in validation.cpp as we arent doing DoS there\" (9b7978efe3d127fa7833d6561a9d053c6820dc1b)\r\n",
    "created_at": "2019-03-05T19:36:51Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262658155",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262658155"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262658155"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262658155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1434,
    "original_line": 1434,
    "side": "LEFT",
    "in_reply_to_id": 250807170
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262658711",
    "pull_request_review_id": 210859157,
    "id": 262658711,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjY1ODcxMQ==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r256061290\r\n\r\n> It would be clearer to write\r\n\r\nStill might be nice to make this change",
    "created_at": "2019-03-05T19:38:11Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262658711",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262658711"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262658711"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262658711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 951,
    "side": "RIGHT",
    "in_reply_to_id": 256061290
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262776609",
    "pull_request_review_id": 211025248,
    "id": 262776609,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mjc3NjYwOQ==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(std::move(addrNameIn)), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am pretty sure there will be no copying if the input is discardable, except for `-O0`, but I could be mistaken.",
    "created_at": "2019-03-06T03:02:45Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262776609",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262776609"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262776609"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262776609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 361,
    "original_line": 361,
    "side": "RIGHT",
    "in_reply_to_id": 262352042
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262788735",
    "pull_request_review_id": 211040132,
    "id": 262788735,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mjc4ODczNQ==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(std::move(addrNameIn)), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Initializing the member either has to copy or move, and you can't move from a const object, so the copy constructor will be called. If you are referring to `-O0` it sounds like you are thinking about [copy elision](https://en.cppreference.com/w/cpp/language/copy_elision), but that doesn't apply here for member initialization.\r\n\r\nSimple advice is to use `const&` for an argument that you want to copy from, `&&` for an argument that you want to move from, and pass by value when you want to give the caller a choice of whether to copy or move.",
    "created_at": "2019-03-06T04:32:46Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262788735",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262788735"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262788735"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262788735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 361,
    "original_line": 361,
    "side": "RIGHT",
    "in_reply_to_id": 262352042
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262790206",
    "pull_request_review_id": 211042030,
    "id": 262790206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mjc5MDIwNg==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(std::move(addrNameIn)), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see. But we are doing `const type& var` all over the place elsewhere. This is in fact why I wondered about the \"derivation from the standard\" here. (A simple search for `const std::string&` gives 799 results.)",
    "created_at": "2019-03-06T04:44:51Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262790206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262790206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262790206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262790206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 361,
    "original_line": 361,
    "side": "RIGHT",
    "in_reply_to_id": 262352042
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262803346",
    "pull_request_review_id": 211058136,
    "id": 262803346,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjgwMzM0Ng==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(std::move(addrNameIn)), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Passing a string by reference doesn't need a copy. Using it to initialize a member does.",
    "created_at": "2019-03-06T06:15:13Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262803346",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262803346"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262803346"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262803346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 361,
    "original_line": 361,
    "side": "RIGHT",
    "in_reply_to_id": 262352042
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262814934",
    "pull_request_review_id": 211071495,
    "id": 262814934,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjgxNDkzNA==",
    "diff_hunk": "@@ -349,7 +349,16 @@ struct CNodeState {\n \n     TxDownloadState m_tx_download;\n \n-    CNodeState(CAddress addrIn, std::string addrNameIn) : address(addrIn), name(addrNameIn) {\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CNodeState(CAddress addrIn, std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        address(addrIn), name(std::move(addrNameIn)), m_is_inbound(is_inbound),",
    "path": "src/net_processing.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Interesting. Sorry for clogging up the PR.",
    "created_at": "2019-03-06T07:13:13Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262814934",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262814934"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262814934"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262814934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 361,
    "original_line": 361,
    "side": "RIGHT",
    "in_reply_to_id": 262352042
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262903651",
    "pull_request_review_id": 211181978,
    "id": 262903651,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjkwMzY1MQ==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {",
    "path": "src/net_processing.cpp",
    "position": 55,
    "original_position": 52,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r261834407\r\n\r\nPossibly consider adding this helpful context information to the PR description.",
    "created_at": "2019-03-06T11:37:09Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262903651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262903651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262903651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262903651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 995,
    "original_line": 995,
    "side": "RIGHT",
    "in_reply_to_id": 256054235
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262939693",
    "pull_request_review_id": 211228187,
    "id": 262939693,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MjkzOTY5Mw==",
    "diff_hunk": "@@ -3106,28 +3124,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),",
    "path": "src/validation.cpp",
    "position": 403,
    "original_position": 345,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So if I understand this correctly:\r\n* `state.Invalid()` just calls `state.DoS() with `level=0` and `corruptionIn=false` (default).\r\n* `CheckTransaction()` can currently fail in various ways, calling:\r\n  * `state.DoS` with:\r\n    * `level` 10 or 100: _why isn't this higher level a problem?_\r\n    * `corruptionIn` not specified (so defaults to `false`)",
    "created_at": "2019-03-06T13:28:19Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262939693",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262939693"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262939693"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262939693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3106,
    "original_line": 3106,
    "side": "LEFT",
    "in_reply_to_id": 248041505
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262943213",
    "pull_request_review_id": 211228187,
    "id": 262943213,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mjk0MzIxMw==",
    "diff_hunk": "@@ -716,27 +716,22 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                               fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n-        // Check that the transaction doesn't have an excessive number of",
    "path": "src/validation.cpp",
    "position": 79,
    "original_position": 79,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note that `MAX_BLOCK_SIGOPS` has been renamed / replaced by `MAX_STANDARD_TX_SIGOPS_COST` as part of SegWit in 2b1f6f9ccf36f1e0a2c9d99154e1642f796d7c2b. In addition to this comment, `MAX_BLOCK_SIGOPS` is also still mentioned in the function test framework. But that doesn't explain why the comment can be removed.",
    "created_at": "2019-03-06T13:37:44Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262943213",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262943213"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262943213"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262943213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 724,
    "original_line": 724,
    "side": "LEFT",
    "in_reply_to_id": 248034524
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262946088",
    "pull_request_review_id": 211228187,
    "id": 262946088,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mjk0NjA4OA==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not sure about what to change here, but it's helpful to clarify the role of whitelisting peers better.",
    "created_at": "2019-03-06T13:44:57Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262946088",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262946088"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262946088"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262946088/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 951,
    "side": "RIGHT",
    "in_reply_to_id": 256061290
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262963047",
    "pull_request_review_id": 211228187,
    "id": 262963047,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Mjk2MzA0Nw==",
    "diff_hunk": "@@ -45,9 +45,9 @@ class CValidationState {\n         strRejectReason = strRejectReasonIn;\n         corruptionPossible = corruptionIn;\n         strDebugMessage = strDebugMessageIn;\n+        nDoS = level;\n         if (mode == MODE_ERROR)\n             return ret;\n-        nDoS += level;",
    "path": "src/consensus/validation.h",
    "position": 106,
    "original_position": 7,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "858bae6104ba7d16a637920d7802bb4be4c64994",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What was the original idea behind bumping this? Was it to continue validating and perhaps find additional errors before giving up, to see if the originating peer needs stronger punishment?",
    "created_at": "2019-03-06T14:27:05Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262963047",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262963047"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262963047"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/262963047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263416581",
    "pull_request_review_id": 211825674,
    "id": 263416581,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQxNjU4MQ==",
    "diff_hunk": "@@ -22,6 +22,76 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid",
    "path": "src/consensus/validation.h",
    "position": 11,
    "original_position": 11,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd prefer to rename this in a future PR, since that would be a simple change and I don't want to hold up the structural improvements here.",
    "created_at": "2019-03-07T14:52:53Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263416581",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263416581"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263416581"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263416581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 32,
    "original_line": 32,
    "side": "RIGHT",
    "in_reply_to_id": 262351517
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263421860",
    "pull_request_review_id": 211832547,
    "id": 263421860,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQyMTg2MA==",
    "diff_hunk": "@@ -3106,28 +3124,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),",
    "path": "src/validation.cpp",
    "position": 403,
    "original_position": 345,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> level 10 or 100: why isn't this higher level a problem?\r\n\r\n@sjors I don't understand your question -- can you rephrase?",
    "created_at": "2019-03-07T15:04:20Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263421860",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263421860"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263421860"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263421860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3106,
    "original_line": 3106,
    "side": "LEFT",
    "in_reply_to_id": 248041505
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263427652",
    "pull_request_review_id": 211839911,
    "id": 263427652,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzQyNzY1Mg==",
    "diff_hunk": "@@ -716,27 +716,22 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                               fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n-        // Check that the transaction doesn't have an excessive number of",
    "path": "src/validation.cpp",
    "position": 79,
    "original_position": 79,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this comment is not very helpful. It was originally added in #4150, and in the review on that PR people complained that the phrasing in this comment is confusing (\"invalid rather than merely non-standard\" - huh?).\r\n\r\nIf reviewers prefer it, then I can just improve this comment rather than delete it -- it just seems to me like the code reads just fine on its own.",
    "created_at": "2019-03-07T15:16:14Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263427652",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263427652"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263427652"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263427652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 724,
    "original_line": 724,
    "side": "LEFT",
    "in_reply_to_id": 248034524
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263529316",
    "pull_request_review_id": 211971214,
    "id": 263529316,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUyOTMxNg==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {",
    "path": "src/net_processing.cpp",
    "position": 55,
    "original_position": 52,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2019-03-07T19:18:39Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263529316",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263529316"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263529316"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263529316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 995,
    "original_line": 995,
    "side": "RIGHT",
    "in_reply_to_id": 256054235
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263530223",
    "pull_request_review_id": 211972366,
    "id": 263530223,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzMDIyMw==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in latest commit.",
    "created_at": "2019-03-07T19:21:11Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263530223",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263530223"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263530223"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263530223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 951,
    "side": "RIGHT",
    "in_reply_to_id": 256061290
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263530270",
    "pull_request_review_id": 211972436,
    "id": 263530270,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzMDI3MA==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2019-03-07T19:21:21Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263530270",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263530270"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263530270"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263530270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 983,
    "side": "RIGHT",
    "in_reply_to_id": 256052181
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531494",
    "pull_request_review_id": 211974022,
    "id": 263531494,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzMTQ5NA==",
    "diff_hunk": "@@ -947,17 +947,86 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+/**\n+ * Returns true if the given validation state result may result in us banning/disconnecting a peer\n+ * which provided such an object. This is used to determine whether to relay transactions to\n+ * whitelisted peers, preventing us from relaying things which would result in them disconnecting\n+ * us.\n+ */\n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n-    assert(!via_compact_block);\n-    return (state.GetDoS() > 0);\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        return false;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+    case ValidationInvalidReason::CACHED_INVALID:\n+        // Blocks (or headers) invalid for one of the above reasons may not be\n+        // knowable to a high-bandwidth compact block peer, prior to relay.\n+        // Headers that are invalid for reasons that should be known prior to\n+        // block validation -- such as bad proof of work, too-early-time, or\n+        // building off an invalid or missing block -- are punished regardless\n+        // (see below).\n+        return !via_compact_block;\n+    case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+    case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+    case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+    case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+        return true;\n+    // Conflicting (but not necessarily invalid) data or different policy:\n+    case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+    case ValidationInvalidReason::BLOCK_BAD_TIME:\n+    case ValidationInvalidReason::TX_NOT_STANDARD:\n+    case ValidationInvalidReason::TX_MISSING_INPUTS:\n+    case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+    case ValidationInvalidReason::TX_CONFLICT:\n+    case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+        return false;\n+    }\n+    return false;\n }\n \n+//! Returns true if the peer was punished (probably disconnected)\n static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {\n-    int nDoS = state.GetDoS();\n-    if (nDoS > 0 && !via_compact_block) {\n-         LOCK(cs_main);\n-         Misbehaving(nodeid, nDoS, message);\n-         return true;\n+    switch (state.GetReason()) {\n+    case ValidationInvalidReason::NONE:\n+        break;\n+    // The node is providing invalid data:\n+    case ValidationInvalidReason::CONSENSUS:\n+    case ValidationInvalidReason::BLOCK_MUTATED:\n+        if (!via_compact_block) {\n+            LOCK(cs_main);\n+            Misbehaving(nodeid, 100, message);\n+            return true;\n+        }\n+        break;\n+    // Handled elsewhere for now",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "346699322ca820c5d95c255386df3ce1fb1f3d11",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah I was just going to skip this because it gets rewritten in a later commit.",
    "created_at": "2019-03-07T19:24:46Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263531494",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531494"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263531494"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1003,
    "side": "RIGHT",
    "in_reply_to_id": 256081557
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531733",
    "pull_request_review_id": 211974301,
    "id": 263531733,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzMTczMw==",
    "diff_hunk": "@@ -2480,12 +2521,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // Never relay transactions that we would assign a non-zero DoS\n                 // score for, as we expect peers to do the same with us in that\n                 // case.",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 244,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in latest commit.",
    "created_at": "2019-03-07T19:25:25Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263531733",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531733"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263531733"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2523,
    "side": "RIGHT",
    "in_reply_to_id": 262361186
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531931",
    "pull_request_review_id": 211974573,
    "id": 263531931,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzMTkzMQ==",
    "diff_hunk": "@@ -2520,9 +2559,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n                                    state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), inv.hash));\n             }\n-            if (nDoS > 0) {\n-                Misbehaving(pfrom->GetId(), nDoS);\n-            }\n+            MaybePunishNode(pfrom->GetId(), state, /*via_compact_block*/ false);",
    "path": "src/net_processing.cpp",
    "position": 286,
    "original_position": 274,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not going to bother with these minor style nits, we can clean these up later if anyone cares to.",
    "created_at": "2019-03-07T19:26:04Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263531931",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531931"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263531931"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263531931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2589,
    "original_line": 2589,
    "side": "RIGHT",
    "in_reply_to_id": 262354030
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263534436",
    "pull_request_review_id": 211977880,
    "id": 263534436,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzNDQzNg==",
    "diff_hunk": "@@ -45,9 +45,9 @@ class CValidationState {\n         strRejectReason = strRejectReasonIn;\n         corruptionPossible = corruptionIn;\n         strDebugMessage = strDebugMessageIn;\n+        nDoS = level;\n         if (mode == MODE_ERROR)\n             return ret;\n-        nDoS += level;",
    "path": "src/consensus/validation.h",
    "position": 106,
    "original_position": 7,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "858bae6104ba7d16a637920d7802bb4be4c64994",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't know the history here, but that seems like a reasonable guess.",
    "created_at": "2019-03-07T19:32:53Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263534436",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263534436"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263534436"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263534436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "LEFT",
    "in_reply_to_id": 262963047
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263536180",
    "pull_request_review_id": 211980074,
    "id": 263536180,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzUzNjE4MA==",
    "diff_hunk": "@@ -1627,41 +1649,7 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     CBlockHeader first_invalid_header;\n     if (!ProcessNewBlockHeaders(headers, state, chainparams, &pindexLast, &first_invalid_header)) {\n         if (state.IsInvalid()) {\n-            if (punish_duplicate_invalid && state.GetReason() == ValidationInvalidReason::CACHED_INVALID) {\n-                // Goal: don't allow outbound peers to use up our outbound",
    "path": "src/net_processing.cpp",
    "position": 157,
    "original_position": 66,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "9dd6fc18658b36b63b9f264676ac484879597b83",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also I think most of the information in this comment is needed because the logic is much more complex before this PR than after.  After this PR, it's very easy to see how we handle different kinds of invalid blocks/headers, and so less verbose explanations are needed about the reasoning.  I shrunk this comment down to:\r\n```\r\n            // Disconnect outbound (but not inbound) peers if on an invalid chain.\r\n```\r\nwhich I think captures all that we're trying to do.",
    "created_at": "2019-03-07T19:37:34Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263536180",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263536180"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263536180"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263536180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1563,
    "original_line": 1563,
    "side": "LEFT",
    "in_reply_to_id": 256089801
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263541233",
    "pull_request_review_id": 211986578,
    "id": 263541233,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MzU0MTIzMw==",
    "diff_hunk": "@@ -221,28 +221,27 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n \n         // If prev is coinbase, check that it's matured\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(false,\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+            return state.Invalid(ValidationInvalidReason::TX_MISSING_INPUTS, false, REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I created a new TX_PREMATURE_COINBASE for this in the latest commit.",
    "created_at": "2019-03-07T19:51:40Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263541233",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263541233"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r263541233"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/263541233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 224,
    "side": "RIGHT",
    "in_reply_to_id": 262350926
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/270755296",
    "pull_request_review_id": 220970659,
    "id": 270755296,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDc1NTI5Ng==",
    "diff_hunk": "@@ -716,27 +716,22 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                               fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n-        // Check that the transaction doesn't have an excessive number of",
    "path": "src/validation.cpp",
    "position": 79,
    "original_position": 79,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`MAX_BLOCK_SIGOPS` is replaced by `MAX_BLOCK_SIGOPS_COST` (which is just multiplied by the witness scale factor of 4) as part of segwit. `MAX_STANDARD_TX_SIGOPS_COST` is just a separate rule at the relay/mempool level saying \"you have to use at least 5 tx's to hit the sigop limit\".\r\n\r\nI agree that the comment's just confusing given how we understand \"invalid\" (breaks consensus rules) vs \"non-standard\" (not interesting for mempool/relay, but not too strongly punished either).",
    "created_at": "2019-04-01T08:11:40Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r270755296",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/270755296"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r270755296"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/270755296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 724,
    "original_line": 724,
    "side": "LEFT",
    "in_reply_to_id": 248034524
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/270783503",
    "pull_request_review_id": 221006144,
    "id": 270783503,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MDc4MzUwMw==",
    "diff_hunk": "@@ -3106,28 +3124,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),",
    "path": "src/validation.cpp",
    "position": 403,
    "original_position": 345,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "a5415e85caaf2f5a77d6bae9574bb6d21139ee34",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If I understand correctly: the higher level (ie, changing the 10's to 100's in 96cedc8d0c0e3ad279bc2223a7fc3185b17ebde5 - the \"clean up banning levels\" commit) isn't a problem because these failures are all consensus ones, so any reasonable implementation shouldn't be making them. (Except for immature coinbase and missing inputs at the mempool level which are downgraded elsewhere)",
    "created_at": "2019-04-01T09:29:07Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r270783503",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/270783503"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r270783503"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/270783503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3106,
    "original_line": 3106,
    "side": "LEFT",
    "in_reply_to_id": 248041505
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271039747",
    "pull_request_review_id": 221308675,
    "id": 271039747,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTAzOTc0Nw==",
    "diff_hunk": "@@ -22,6 +22,50 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,",
    "path": "src/consensus/validation.h",
    "position": 20,
    "original_position": 20,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "ef099b059a28c7f661719f2e023a7284c2aa3823",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This seems fluffy - I suspect we'd want to call out specific changes if we were to actually do something like this.\r\nI guess there's value in having it here as a conceptual placeholder, but I'd be surprised if this symbol ever actually got used.",
    "created_at": "2019-04-01T20:34:34Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271039747",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271039747"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271039747"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271039747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 41,
    "original_line": 41,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271040842",
    "pull_request_review_id": 221308675,
    "id": 271040842,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTA0MDg0Mg==",
    "diff_hunk": "@@ -72,12 +120,40 @@ class CValidationState {\n         return mode == MODE_ERROR;\n     }\n     bool CorruptionPossible() const {\n+        assert(corruptionPossible == (reason == ValidationInvalidReason::BLOCK_MUTATED || reason == ValidationInvalidReason::TX_WITNESS_MUTATED));\n         return corruptionPossible;\n     }\n     void SetCorruptionPossible() {\n         corruptionPossible = true;\n+        assert(corruptionPossible == (reason == ValidationInvalidReason::BLOCK_MUTATED || reason == ValidationInvalidReason::TX_WITNESS_MUTATED));",
    "path": "src/consensus/validation.h",
    "position": null,
    "original_position": 100,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "ef099b059a28c7f661719f2e023a7284c2aa3823",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice.",
    "created_at": "2019-04-01T20:37:44Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271040842",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271040842"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271040842"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271040842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 128,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271044827",
    "pull_request_review_id": 221308675,
    "id": 271044827,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTA0NDgyNw==",
    "diff_hunk": "@@ -3123,7 +3145,7 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n         nSigOps += GetLegacySigOpCount(*tx);\n     }\n     if (nSigOps * WITNESS_SCALE_FACTOR > MAX_BLOCK_SIGOPS_COST)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-sigops\", false, \"out-of-bounds SigOpCount\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-sigops\", false, \"out-of-bounds SigOpCount\");",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 344,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "ef099b059a28c7f661719f2e023a7284c2aa3823",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I know this is behavior we're inheriting, but I find it kind of weird that too many sigops in a transaction is considered a standardness issue (score 0), but too many sigops in a block is consensus violation (ban). I guess conceptually it's not as bad to try to broadcast a transaction that has too many sigops vs. a PoW'd block, but I'm curious if there's a specific reason for the inconsistency beyond that. Again, sort of an academic question outside the scope of this PR.",
    "created_at": "2019-04-01T20:48:37Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271044827",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271044827"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271044827"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271044827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3148,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271653942",
    "pull_request_review_id": 222096674,
    "id": 271653942,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTY1Mzk0Mg==",
    "diff_hunk": "@@ -22,6 +22,50 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,",
    "path": "src/consensus/validation.h",
    "position": 20,
    "original_position": 20,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "ef099b059a28c7f661719f2e023a7284c2aa3823",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Happy to remove if others agree since that was my preference as well, but I left this in because Matt preferred it when we originally discussed this on his PR.",
    "created_at": "2019-04-03T09:28:21Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271653942",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271653942"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271653942"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271653942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 41,
    "original_line": 41,
    "side": "RIGHT",
    "in_reply_to_id": 271039747
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271798923",
    "pull_request_review_id": 222283602,
    "id": 271798923,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTc5ODkyMw==",
    "diff_hunk": "@@ -22,6 +22,50 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,",
    "path": "src/consensus/validation.h",
    "position": 20,
    "original_position": 20,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "ef099b059a28c7f661719f2e023a7284c2aa3823",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's not hurting anything; I'd rather have this merged and remove it later.",
    "created_at": "2019-04-03T15:25:16Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271798923",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271798923"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r271798923"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/271798923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 41,
    "original_line": 41,
    "side": "RIGHT",
    "in_reply_to_id": 271039747
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273244827",
    "pull_request_review_id": 224092954,
    "id": 273244827,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzI0NDgyNw==",
    "diff_hunk": "@@ -729,11 +729,6 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                               fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n-        // Check that the transaction doesn't have an excessive number of\n-        // sigops, making it impossible to mine. Since the coinbase transaction\n-        // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n-        // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n-        // merely non-standard transaction.",
    "path": "src/validation.cpp",
    "position": 83,
    "original_position": 8,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf8a2e3d9b1f01b18e8e50fcbf83dc0de48a279",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you amend the commit message to indicate *why* the \"obsolete comment\" is obsolete?",
    "created_at": "2019-04-08T21:24:23Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273244827",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273244827"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273244827"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273244827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 728,
    "original_line": 728,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273247912",
    "pull_request_review_id": 224092954,
    "id": 273247912,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzI0NzkxMg==",
    "diff_hunk": "@@ -960,6 +960,23 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    return (state.GetDoS() > 0);\n+}\n+\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {",
    "path": "src/net_processing.cpp",
    "position": 54,
    "original_position": 8,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf17f580fdd8f5ae1f8cfd940f848437d4fadc4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"Use maybepunish\" needs a real commitmessage. Wtf is a \"maybepunish\" and why are we using it?",
    "created_at": "2019-04-08T21:34:09Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273247912",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273247912"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273247912"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273247912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 994,
    "original_line": 994,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273627490",
    "pull_request_review_id": 224092954,
    "id": 273627490,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzYyNzQ5MA==",
    "diff_hunk": "@@ -2578,14 +2583,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         const CBlockIndex *pindex = nullptr;\n         CValidationState state;\n         if (!ProcessNewBlockHeaders({cmpctblock.header}, state, chainparams, &pindex)) {\n-            int nDoS;\n-            if (state.IsInvalid(nDoS)) {\n-                if (nDoS > 0) {\n-                    LOCK(cs_main);\n-                    Misbehaving(pfrom->GetId(), nDoS, strprintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId()));\n-                } else {\n-                    LogPrint(BCLog::NET, \"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n-                }\n+            if (state.IsInvalid()) {",
    "path": "src/net_processing.cpp",
    "position": 302,
    "original_position": 124,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf17f580fdd8f5ae1f8cfd940f848437d4fadc4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In \"use maybepunish\" - this is a major behavior change. After this commit sending an invalid header via compact block no longer gets a ban when it previously did.",
    "created_at": "2019-04-09T17:54:28Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273627490",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273627490"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273627490"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273627490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2625,
    "original_line": 2625,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273628371",
    "pull_request_review_id": 224092954,
    "id": 273628371,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzYyODM3MQ==",
    "diff_hunk": "@@ -45,9 +45,9 @@ class CValidationState {\n         strRejectReason = strRejectReasonIn;\n         corruptionPossible = corruptionIn;\n         strDebugMessage = strDebugMessageIn;\n+        nDoS = level;\n         if (mode == MODE_ERROR)\n             return ret;\n-        nDoS += level;",
    "path": "src/consensus/validation.h",
    "position": 106,
    "original_position": 7,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "858bae6104ba7d16a637920d7802bb4be4c64994",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you just drop this commit? Its really nontrivial to review and, by the end, is unused anyway.",
    "created_at": "2019-04-09T17:56:33Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273628371",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273628371"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273628371"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273628371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "LEFT",
    "in_reply_to_id": 262963047
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273635618",
    "pull_request_review_id": 224092954,
    "id": 273635618,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzYzNTYxOA==",
    "diff_hunk": "@@ -221,8 +221,8 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n \n         // If prev is coinbase, check that it's matured\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(false,\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+            return state.DoS(100, false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf35b19b3841fe93dfd717b7c233ff293b61503",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This now results in banning peers when they relay us mempool transactions when we aren't yet fully synced. I dont think this is acceptable. Also, you add this here and then have a commit dedicated to removing it later, all to make intermediate assert()s pass, when you could just change the above DoS score...",
    "created_at": "2019-04-09T18:14:34Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273635618",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273635618"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273635618"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273635618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 224,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273651943",
    "pull_request_review_id": 224092954,
    "id": 273651943,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY1MTk0Mw==",
    "diff_hunk": "@@ -30,31 +74,35 @@ class CValidationState {\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n+    ValidationInvalidReason reason;\n     int nDoS;\n     std::string strRejectReason;\n     unsigned int chRejectCode;\n     bool corruptionPossible;\n     std::string strDebugMessage;\n public:\n-    CValidationState() : mode(MODE_VALID), nDoS(0), chRejectCode(0), corruptionPossible(false) {}\n-    bool DoS(int level, bool ret = false,\n+    CValidationState() : mode(MODE_VALID), reason(ValidationInvalidReason::NONE), nDoS(0), chRejectCode(0), corruptionPossible(false) {}\n+    bool DoS(int level, ValidationInvalidReason reasonIn, bool ret = false,\n              unsigned int chRejectCodeIn=0, const std::string &strRejectReasonIn=\"\",\n              bool corruptionIn=false,\n              const std::string &strDebugMessageIn=\"\") {\n+        reason = reasonIn;\n         chRejectCode = chRejectCodeIn;\n         strRejectReason = strRejectReasonIn;\n         corruptionPossible = corruptionIn;\n         strDebugMessage = strDebugMessageIn;\n         nDoS = level;\n+        assert(nDoS == GetDoSForReason());\n+        assert(corruptionPossible == (reason == ValidationInvalidReason::BLOCK_MUTATED || reason == ValidationInvalidReason::TX_WITNESS_MUTATED));",
    "path": "src/consensus/validation.h",
    "position": null,
    "original_position": 76,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf2ece95a26a4487da7239d2522a7c8f65f7720",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Both of these asserts are useless - we remove the value later in the same PR - please enforce this using the scripted-diff or just remove them - they only serve to confuse reviewers.",
    "created_at": "2019-04-09T18:53:06Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273651943",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273651943"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273651943"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273651943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 96,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273653409",
    "pull_request_review_id": 224092954,
    "id": 273653409,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY1MzQwOQ==",
    "diff_hunk": "@@ -72,12 +120,40 @@ class CValidationState {\n         return mode == MODE_ERROR;\n     }\n     bool CorruptionPossible() const {\n+        assert(corruptionPossible == (reason == ValidationInvalidReason::BLOCK_MUTATED || reason == ValidationInvalidReason::TX_WITNESS_MUTATED));\n         return corruptionPossible;\n     }\n     void SetCorruptionPossible() {\n         corruptionPossible = true;\n+        assert(corruptionPossible == (reason == ValidationInvalidReason::BLOCK_MUTATED || reason == ValidationInvalidReason::TX_WITNESS_MUTATED));\n     }\n     int GetDoS(void) const { return nDoS; }\n+    int GetDoSForReason() const {",
    "path": "src/consensus/validation.h",
    "position": null,
    "original_position": 103,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf2ece95a26a4487da7239d2522a7c8f65f7720",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is nonsense, why is it in consensus code, and why is it removed later? It just makes review harder.",
    "created_at": "2019-04-09T18:56:54Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273653409",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273653409"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273653409"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273653409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 131,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273654298",
    "pull_request_review_id": 224092954,
    "id": 273654298,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY1NDI5OA==",
    "diff_hunk": "@@ -72,12 +120,40 @@ class CValidationState {\n         return mode == MODE_ERROR;\n     }\n     bool CorruptionPossible() const {\n+        assert(corruptionPossible == (reason == ValidationInvalidReason::BLOCK_MUTATED || reason == ValidationInvalidReason::TX_WITNESS_MUTATED));\n         return corruptionPossible;\n     }\n     void SetCorruptionPossible() {\n         corruptionPossible = true;\n+        assert(corruptionPossible == (reason == ValidationInvalidReason::BLOCK_MUTATED || reason == ValidationInvalidReason::TX_WITNESS_MUTATED));\n     }\n     int GetDoS(void) const { return nDoS; }\n+    int GetDoSForReason() const {\n+        switch (reason) {\n+        case ValidationInvalidReason::NONE:\n+            return 0;\n+        case ValidationInvalidReason::CONSENSUS:\n+        case ValidationInvalidReason::BLOCK_MUTATED:\n+        case ValidationInvalidReason::BLOCK_INVALID_HEADER:\n+        case ValidationInvalidReason::BLOCK_CHECKPOINT:\n+        case ValidationInvalidReason::BLOCK_INVALID_PREV:\n+        case ValidationInvalidReason::TX_MISSING_INPUTS:\n+            return 100;\n+        case ValidationInvalidReason::BLOCK_MISSING_PREV:\n+            return 10;\n+        case ValidationInvalidReason::CACHED_INVALID:\n+        case ValidationInvalidReason::RECENT_CONSENSUS_CHANGE:\n+        case ValidationInvalidReason::BLOCK_BAD_TIME:\n+        case ValidationInvalidReason::TX_NOT_STANDARD:\n+        case ValidationInvalidReason::TX_WITNESS_MUTATED:\n+        case ValidationInvalidReason::TX_CONFLICT:\n+        case ValidationInvalidReason::TX_MEMPOOL_POLICY:\n+            return 0;\n+        default:\n+            assert(false);",
    "path": "src/consensus/validation.h",
    "position": null,
    "original_position": 125,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf2ece95a26a4487da7239d2522a7c8f65f7720",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "what? The compiler will warn you if you are missing an entry, instead of adding an assert which only warns at runtime?",
    "created_at": "2019-04-09T18:59:12Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273654298",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273654298"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273654298"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273654298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 153,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273654487",
    "pull_request_review_id": 224092954,
    "id": 273654487,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY1NDQ4Nw==",
    "diff_hunk": "@@ -961,10 +961,13 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n }\n \n static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    assert(!via_compact_block);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf2ece95a26a4487da7239d2522a7c8f65f7720",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Huh?! Just remove the parameter, then.",
    "created_at": "2019-04-09T18:59:42Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273654487",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273654487"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273654487"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273654487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 964,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273662210",
    "pull_request_review_id": 224092954,
    "id": 273662210,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY2MjIxMA==",
    "diff_hunk": "@@ -2015,17 +2020,29 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         // * witness (when witness enabled in flags and excludes coinbase)\n         nSigOpsCost += GetTransactionSigOpCost(tx, view, flags);\n         if (nSigOpsCost > MAX_BLOCK_SIGOPS_COST)\n-            return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n         txdata.emplace_back(tx);\n         if (!tx.IsCoinBase())\n         {\n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : nullptr)) {\n+                if (state.GetReason() == ValidationInvalidReason::TX_NOT_STANDARD) {\n+                    // CheckInputs may return NOT_STANDARD for extra flags we passed,\n+                    // but we can't return that, as it's not defined for a block, so\n+                    // we reset the reason flag to CONSENSUS here.\n+                    // (note that this may not be the case until we add additional\n+                    // soft-fork flags to our script flags, in which case we  need to",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 322,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "beb6a373bdfa91166c8872909ccce31c5b0d72a3",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Still this. Also, the grammar here is confusing - what may not be the case until we add new flags? I think you meant \"note that this may not be the case *after* we add additional flags\"",
    "created_at": "2019-04-09T19:21:34Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273662210",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273662210"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273662210"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273662210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2018,
    "side": "RIGHT",
    "in_reply_to_id": 262355138
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273662927",
    "pull_request_review_id": 224092954,
    "id": 273662927,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY2MjkyNw==",
    "diff_hunk": "@@ -22,6 +22,50 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_BAD_TIME,          //!< block timestamp was > 2 hours in the future (or our clock is bad)",
    "path": "src/consensus/validation.h",
    "position": null,
    "original_position": 27,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf2ece95a26a4487da7239d2522a7c8f65f7720",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This name is somewhat more generic than it needs to be - maybe call it BLOCK_TIME_FUTURE.",
    "created_at": "2019-04-09T19:23:35Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273662927",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273662927"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273662927"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273662927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273663169",
    "pull_request_review_id": 224092954,
    "id": 273663169,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY2MzE2OQ==",
    "diff_hunk": "@@ -3219,23 +3241,23 @@ static bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationSta\n         // MapBlockIndex.\n         CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(params.Checkpoints());\n         if (pcheckpoint && nHeight < pcheckpoint->nHeight)\n-            return state.DoS(100, error(\"%s: forked chain older than last checkpoint (height %d)\", __func__, nHeight), REJECT_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n+            return state.DoS(100, ValidationInvalidReason::BLOCK_CHECKPOINT, error(\"%s: forked chain older than last checkpoint (height %d)\", __func__, nHeight), REJECT_CHECKPOINT, \"bad-fork-prior-to-checkpoint\");\n     }\n \n     // Check timestamp against prev\n     if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n-        return state.DoS(100, false, REJECT_INVALID, \"time-too-old\", false, \"block's timestamp is too early\");\n+        return state.DoS(100, ValidationInvalidReason::BLOCK_INVALID_HEADER, false, REJECT_INVALID, \"time-too-old\", false, \"block's timestamp is too early\");\n \n     // Check timestamp\n     if (block.GetBlockTime() > nAdjustedTime + MAX_FUTURE_BLOCK_TIME)\n-        return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n+        return state.Invalid(ValidationInvalidReason::BLOCK_BAD_TIME, false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n \n     // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n     // check for version 2, 3 and 4 upgrades\n     if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n        (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n        (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n-            return state.DoS(100, false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion), false,\n+            return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion), false,",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 381,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf2ece95a26a4487da7239d2522a7c8f65f7720",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why is this CONSENSUS and not BLOCK_INVALID_HEADER?",
    "created_at": "2019-04-09T19:24:16Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273663169",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273663169"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273663169"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273663169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3260,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273666745",
    "pull_request_review_id": 224092954,
    "id": 273666745,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY2Njc0NQ==",
    "diff_hunk": "@@ -74,16 +74,16 @@ class CValidationState {\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n-    ValidationInvalidReason reason;\n+    ValidationInvalidReason m_reason;",
    "path": "src/consensus/validation.h",
    "position": 84,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "dafd6200ae7a6dc336ac2120da9221e129e8f9b6",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you squash \"nit: reason -> m_reason\"? Please don't add full commits that just address nits. Ignoring the nit is also perfectly valid.",
    "created_at": "2019-04-09T19:34:40Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273666745",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273666745"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273666745"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273666745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 105,
    "original_line": 105,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273667031",
    "pull_request_review_id": 224092954,
    "id": 273667031,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MzY2NzAzMQ==",
    "diff_hunk": "@@ -66,6 +66,32 @@ enum class ValidationInvalidReason {\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n+inline bool IsTransactionReason(ValidationInvalidReason r)\n+{\n+    return r == ValidationInvalidReason::NONE ||\n+           r == ValidationInvalidReason::CONSENSUS ||\n+           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n+           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n+           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n+           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n+           r == ValidationInvalidReason::TX_CONFLICT ||\n+           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n+}\n+\n+inline bool IsBlockReason(ValidationInvalidReason r)",
    "path": "src/consensus/validation.h",
    "position": 62,
    "original_position": 16,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "dafbf9e9087aacd3498e1be5e444e516c22ef89c",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oof this really sucks. To avoid delaying this PR I think this is fine, but we *really* need to just switch to two different ValidationState classes for Transactions and Blocks.",
    "created_at": "2019-04-09T19:35:31Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273667031",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273667031"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r273667031"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/273667031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274450461",
    "pull_request_review_id": 225570662,
    "id": 274450461,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDQ1MDQ2MQ==",
    "diff_hunk": "@@ -45,9 +45,9 @@ class CValidationState {\n         strRejectReason = strRejectReasonIn;\n         corruptionPossible = corruptionIn;\n         strDebugMessage = strDebugMessageIn;\n+        nDoS = level;\n         if (mode == MODE_ERROR)\n             return ret;\n-        nDoS += level;",
    "path": "src/consensus/validation.h",
    "position": 106,
    "original_position": 7,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "858bae6104ba7d16a637920d7802bb4be4c64994",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/15141#discussion_r262963047\r\n\r\nThis needs to be done in this early commit so that the second half of this PR is refactor-only. Once we move to invalid-reason based punishment, calling `Invalid()` on a `CValidationState` object  sets the reason and doesn't 'increment' it.\r\n\r\nI think this commit should stay, possible squashed with the following commit (_Clean up banning levels_) but with an expanded git commit log explaining why the change is being made and highlighting what reviewers should check to satisfy themselves that this isn't a behaviour change (that `DoS()` is never called more than once on the same object).",
    "created_at": "2019-04-11T14:25:20Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274450461",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274450461"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274450461"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274450461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 50,
    "original_line": 50,
    "side": "LEFT",
    "in_reply_to_id": 262963047
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577540",
    "pull_request_review_id": 225717133,
    "id": 274577540,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU3NzU0MA==",
    "diff_hunk": "@@ -729,11 +729,6 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                               fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n-        // Check that the transaction doesn't have an excessive number of\n-        // sigops, making it impossible to mine. Since the coinbase transaction\n-        // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n-        // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n-        // merely non-standard transaction.",
    "path": "src/validation.cpp",
    "position": 83,
    "original_position": 8,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf8a2e3d9b1f01b18e8e50fcbf83dc0de48a279",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in latest version.",
    "created_at": "2019-04-11T18:38:07Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577540",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577540"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577540"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 728,
    "original_line": 728,
    "side": "LEFT",
    "in_reply_to_id": 273244827
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577574",
    "pull_request_review_id": 225717173,
    "id": 274577574,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU3NzU3NA==",
    "diff_hunk": "@@ -960,6 +960,23 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n         LogPrint(BCLog::NET, \"%s: %s peer=%d (%d -> %d)%s\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior, message_prefixed);\n }\n \n+static bool MayResultInDisconnect(const CValidationState& state, bool via_compact_block) {\n+    return (state.GetDoS() > 0);\n+}\n+\n+static bool MaybePunishNode(NodeId nodeid, const CValidationState& state, bool via_compact_block, const std::string& message = \"\") {",
    "path": "src/net_processing.cpp",
    "position": 54,
    "original_position": 8,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf17f580fdd8f5ae1f8cfd940f848437d4fadc4",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in latest version.",
    "created_at": "2019-04-11T18:38:13Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577574",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577574"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577574"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 994,
    "original_line": 994,
    "side": "RIGHT",
    "in_reply_to_id": 273247912
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577634",
    "pull_request_review_id": 225717252,
    "id": 274577634,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU3NzYzNA==",
    "diff_hunk": "@@ -2578,14 +2583,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         const CBlockIndex *pindex = nullptr;\n         CValidationState state;\n         if (!ProcessNewBlockHeaders({cmpctblock.header}, state, chainparams, &pindex)) {\n-            int nDoS;\n-            if (state.IsInvalid(nDoS)) {\n-                if (nDoS > 0) {\n-                    LOCK(cs_main);\n-                    Misbehaving(pfrom->GetId(), nDoS, strprintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId()));\n-                } else {\n-                    LogPrint(BCLog::NET, \"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n-                }\n+            if (state.IsInvalid()) {",
    "path": "src/net_processing.cpp",
    "position": 302,
    "original_position": 124,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf17f580fdd8f5ae1f8cfd940f848437d4fadc4",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2019-04-11T18:38:22Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577634",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577634"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577634"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2625,
    "original_line": 2625,
    "side": "RIGHT",
    "in_reply_to_id": 273627490
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577714",
    "pull_request_review_id": 225717327,
    "id": 274577714,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU3NzcxNA==",
    "diff_hunk": "@@ -221,8 +221,8 @@ bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, c\n \n         // If prev is coinbase, check that it's matured\n         if (coin.IsCoinBase() && nSpendHeight - coin.nHeight < COINBASE_MATURITY) {\n-            return state.Invalid(false,\n-                REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+            return state.DoS(100, false,",
    "path": "src/consensus/tx_verify.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "daf35b19b3841fe93dfd717b7c233ff293b61503",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed the banning brokenness.",
    "created_at": "2019-04-11T18:38:32Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577714",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577714"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577714"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 224,
    "side": "RIGHT",
    "in_reply_to_id": 273635618
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577833",
    "pull_request_review_id": 225717488,
    "id": 274577833,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NDU3NzgzMw==",
    "diff_hunk": "@@ -74,16 +74,16 @@ class CValidationState {\n         MODE_INVALID, //!< network rule violation (DoS value may be set)\n         MODE_ERROR,   //!< run-time error\n     } mode;\n-    ValidationInvalidReason reason;\n+    ValidationInvalidReason m_reason;",
    "path": "src/consensus/validation.h",
    "position": 84,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "dafd6200ae7a6dc336ac2120da9221e129e8f9b6",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2019-04-11T18:38:53Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577833",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577833"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r274577833"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/274577833/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 105,
    "original_line": 105,
    "side": "RIGHT",
    "in_reply_to_id": 273666745
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275136052",
    "pull_request_review_id": 226373247,
    "id": 275136052,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTEzNjA1Mg==",
    "diff_hunk": "@@ -2574,14 +2589,16 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         const CBlockIndex *pindex = nullptr;\n         CValidationState state;\n         if (!ProcessNewBlockHeaders({cmpctblock.header}, state, chainparams, &pindex)) {\n-            int nDoS;\n-            if (state.IsInvalid(nDoS)) {\n-                if (nDoS > 0) {\n-                    LOCK(cs_main);\n-                    Misbehaving(pfrom->GetId(), nDoS, strprintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId()));\n-                } else {\n-                    LogPrint(BCLog::NET, \"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n-                }\n+            if (state.IsInvalid()) {\n+                // We should punish compact block peers that give us an invalid\n+                // header (other than a \"duplicate-invalid\" one, see\n+                // ProcessHeadersMessage), so set via_compact_block to false\n+                // here.\n+                // TODO: when we switch from DoS scores to reasons that\n+                // tx/blocks are invalid, this call should set\n+                // via_compact_block to true, since MaybePunishNode will have\n+                // sufficient information to act correctly.\n+                MaybePunishNode(pfrom->GetId(), state, /*via_compact_block*/ false, \"invalid header via cmpctblock\");",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 156,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "83fc55eb4120e879353cf1f77fe1a167c3f044aa",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@TheBlueMatt On further thought, I think this commit still introduces a bug in compact block headers handling, which is fixed later in this PR -- a duplicate-invalid header delivered by a compact block peer would cause that peer to get disconnected.  Will fix.",
    "created_at": "2019-04-13T23:45:19Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275136052",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275136052"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275136052"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275136052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2601,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275559383",
    "pull_request_review_id": 226899227,
    "id": 275559383,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTU1OTM4Mw==",
    "diff_hunk": "@@ -901,7 +901,8 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             if (!tx.HasWitness() && CheckInputs(tx, stateDummy, view, true, scriptVerifyFlags & ~(SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_CLEANSTACK), true, false, txdata) &&\n                 !CheckInputs(tx, stateDummy, view, true, scriptVerifyFlags & ~SCRIPT_VERIFY_CLEANSTACK, true, false, txdata)) {\n                 // Only the witness is missing, so the transaction itself may be fine.\n-                state.SetCorruptionPossible();\n+                state.DoS(0, ValidationInvalidReason::TX_WITNESS_MUTATED, false,",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 169,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "ac3873e2a92457995f7e5a9e5fc24352af360c6b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree that this is confusing. IMO, even better than passing in `state.GetDoS() to state.DoS()` would be:\r\n\r\n```\r\nstate.Invalid(ValidationInvalidReason::TX_WITNESS_MUTATED, false, state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\r\nstate.SetCorruptionPossible();\r\n```",
    "created_at": "2019-04-15T21:53:43Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275559383",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275559383"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275559383"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275559383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 904,
    "side": "RIGHT",
    "in_reply_to_id": 255696468
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275642921",
    "pull_request_review_id": 227000975,
    "id": 275642921,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTY0MjkyMQ==",
    "diff_hunk": "@@ -66,6 +66,32 @@ enum class ValidationInvalidReason {\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n+inline bool IsTransactionReason(ValidationInvalidReason r)\n+{\n+    return r == ValidationInvalidReason::NONE ||\n+           r == ValidationInvalidReason::CONSENSUS ||\n+           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n+           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n+           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n+           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n+           r == ValidationInvalidReason::TX_CONFLICT ||\n+           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n+}\n+\n+inline bool IsBlockReason(ValidationInvalidReason r)",
    "path": "src/consensus/validation.h",
    "position": 62,
    "original_position": 16,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "dafbf9e9087aacd3498e1be5e444e516c22ef89c",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "FWIW, I had a go at this. See https://github.com/ajtowns/bitcoin/commits/201904-dos-rework-sep\r\n\r\nI think it works okay, but splitting the type sure hits a lot of lines, see: https://github.com/ajtowns/bitcoin/commit/74bf5c12672d7eee877230d31b308c696fe83904 which is the commit that just splits the type. It's followed by the rest of this PR rebased on top of it, but with ValidationInvalidReason renamed to [Block|Tx]ValidationResult (since I'm touching every reference to that class anyway), and TX_PREMATURE_SPEND brought in initially rather than as a later commit.",
    "created_at": "2019-04-16T06:19:52Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275642921",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275642921"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275642921"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275642921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "RIGHT",
    "in_reply_to_id": 273667031
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275831887",
    "pull_request_review_id": 227238169,
    "id": 275831887,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTgzMTg4Nw==",
    "diff_hunk": "@@ -66,6 +66,32 @@ enum class ValidationInvalidReason {\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n+inline bool IsTransactionReason(ValidationInvalidReason r)\n+{\n+    return r == ValidationInvalidReason::NONE ||\n+           r == ValidationInvalidReason::CONSENSUS ||\n+           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n+           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n+           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n+           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n+           r == ValidationInvalidReason::TX_CONFLICT ||\n+           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n+}\n+\n+inline bool IsBlockReason(ValidationInvalidReason r)",
    "path": "src/consensus/validation.h",
    "position": 62,
    "original_position": 16,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "dafbf9e9087aacd3498e1be5e444e516c22ef89c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice work @ajtowns, but I think @sdaftuar might have a meltdown if we try to rebase this PR on any additional changes at this point. It seems to me that splitting `CValidationState` into separate classes for Tx and Block can be done in a follow-up PR to this. I'll commit to reviewing that follow-up PR if you open it after this is merged.",
    "created_at": "2019-04-16T14:37:02Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275831887",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275831887"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275831887"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275831887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "RIGHT",
    "in_reply_to_id": 273667031
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275943030",
    "pull_request_review_id": 227380925,
    "id": 275943030,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTk0MzAzMA==",
    "diff_hunk": "@@ -22,6 +22,78 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid",
    "path": "src/consensus/validation.h",
    "position": 11,
    "original_position": 11,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "fdd7683c558984a96dd556e2c93dde156b85a75f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: This should be \"not invalid or not yet tested for validity\"",
    "created_at": "2019-04-16T18:49:33Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275943030",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275943030"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275943030"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275943030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 32,
    "original_line": 32,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275943653",
    "pull_request_review_id": 227380925,
    "id": 275943653,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTk0MzY1Mw==",
    "diff_hunk": "@@ -22,6 +22,78 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why\n+    BLOCK_INVALID_HEADER,    //!< invalid proof of work or time too old\n+    BLOCK_MUTATED,           //!< the block's data didn't match the data committed to by the PoW\n+    BLOCK_MISSING_PREV,      //!< We don't have the previous block the checked one is built on\n+    BLOCK_INVALID_PREV,      //!< A block this one builds on is invalid\n+    BLOCK_TIME_FUTURE,          //!< block timestamp was > 2 hours in the future (or our clock is bad)\n+    BLOCK_CHECKPOINT,        //!< the block failed to meet one of our checkpoints\n+    // Only loose txn:\n+    TX_NOT_STANDARD,          //!< didn't meet our local policy rules\n+    TX_MISSING_INPUTS,        //!< a transaction was missing some of its inputs\n+    TX_PREMATURE_SPEND,       //!< transaction spends a coinbase too early, or violates locktime/sequence locks\n+    /**\n+     * Transaction might be missing a witness, have a witness prior to SegWit\n+     * activation, or witness may have been malleated (which includes\n+     * non-standard witnesses).\n+     */\n+    TX_WITNESS_MUTATED,\n+    /**\n+     * Tx already in mempool or conflicts with a tx in the chain\n+     * (if it conflicts with another tx in mempool, we use MEMPOOL_POLICY as it failed to reach the RBF threshold)\n+     * TODO: Currently this is only used if the transaction already exists in the mempool or on chain,\n+     * TODO: ATMP's fMissingInputs and a valid CValidationState being used to indicate missing inputs",
    "path": "src/consensus/validation.h",
    "position": 43,
    "original_position": 43,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "fdd7683c558984a96dd556e2c93dde156b85a75f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I think this TODO should be next to the `TX_MISSING_INPUTS` line",
    "created_at": "2019-04-16T18:51:18Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275943653",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275943653"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275943653"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275943653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 64,
    "original_line": 64,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275947067",
    "pull_request_review_id": 227380925,
    "id": 275947067,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTk0NzA2Nw==",
    "diff_hunk": "@@ -721,27 +721,22 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n                               fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n-        // Check that the transaction doesn't have an excessive number of\n-        // sigops, making it impossible to mine. Since the coinbase transaction\n-        // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n-        // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n-        // merely non-standard transaction.\n         if (nSigOpsCost > MAX_STANDARD_TX_SIGOPS_COST)\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n+            return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\",\n                 strprintf(\"%d\", nSigOpsCost));\n \n         CAmount mempoolRejectFee = pool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n         if (!bypass_limits && mempoolRejectFee > 0 && nModifiedFees < mempoolRejectFee) {\n-            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", false, strprintf(\"%d < %d\", nModifiedFees, mempoolRejectFee));\n+            return state.Invalid(ValidationInvalidReason::TX_MEMPOOL_POLICY, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", strprintf(\"%d < %d\", nModifiedFees, mempoolRejectFee));\n         }\n \n         // No transactions are allowed below minRelayTxFee except from disconnected blocks\n         if (!bypass_limits && nModifiedFees < ::minRelayTxFee.GetFee(nSize)) {\n-            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"min relay fee not met\", false, strprintf(\"%d < %d\", nModifiedFees, ::minRelayTxFee.GetFee(nSize)));\n+            return state.Invalid(ValidationInvalidReason::TX_MEMPOOL_POLICY, false, REJECT_INSUFFICIENTFEE, \"min relay fee not met\", strprintf(\"%d < %d\", nModifiedFees, ::minRelayTxFee.GetFee(nSize)));\n         }\n \n         if (nAbsurdFee && nFees > nAbsurdFee)\n-            return state.Invalid(false,\n+            return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false,",
    "path": "src/validation.cpp",
    "position": 103,
    "original_position": 103,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "fdd7683c558984a96dd556e2c93dde156b85a75f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: this seems like the wrong reason (although `nAbsurdFee` is only used by the wallet so it doesn't really matter. I also think that ATMP shouldn't take an `nAbsurdFee` parameter - see #15810)",
    "created_at": "2019-04-16T19:00:39Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275947067",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275947067"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275947067"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275947067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 739,
    "original_line": 739,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275954338",
    "pull_request_review_id": 227380925,
    "id": 275954338,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTk1NDMzOA==",
    "diff_hunk": "@@ -22,6 +22,78 @@ static const unsigned char REJECT_NONSTANDARD = 0x40;\n static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n+/** A \"reason\" why something was invalid, suitable for determining whether the\n+  * provider of the object should be banned/ignored/disconnected/etc.\n+  * These are much more granular than the rejection codes, which may be more\n+  * useful for some other use-cases.\n+  */\n+enum class ValidationInvalidReason {\n+    // txn and blocks:\n+    NONE,                    //!< not actually invalid\n+    CONSENSUS,               //!< invalid by consensus rules (excluding any below reasons)\n+    /**\n+     * Invalid by a change to consensus rules more recent than SegWit.\n+     * Currently unused as there are no such consensus rule changes, and any download\n+     * sources realistically need to support SegWit in order to provide useful data,\n+     * so differentiating between always-invalid and invalid-by-pre-SegWit-soft-fork\n+     * is uninteresting.\n+     */\n+    RECENT_CONSENSUS_CHANGE,\n+    // Only blocks (or headers):\n+    CACHED_INVALID,          //!< this object was cached as being invalid, but we don't know why",
    "path": "src/consensus/validation.h",
    "position": 22,
    "original_position": 22,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "fdd7683c558984a96dd556e2c93dde156b85a75f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: change \"we don't know why\" to \"we didn't store the reason why\"",
    "created_at": "2019-04-16T19:21:39Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275954338",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275954338"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275954338"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275954338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275958549",
    "pull_request_review_id": 227380925,
    "id": 275958549,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTk1ODU0OQ==",
    "diff_hunk": "@@ -1551,48 +1642,8 @@ bool static ProcessHeadersMessage(CNode *pfrom, CConnman *connman, const std::ve\n     CValidationState state;\n     CBlockHeader first_invalid_header;\n     if (!ProcessNewBlockHeaders(headers, state, chainparams, &pindexLast, &first_invalid_header)) {",
    "path": "src/net_processing.cpp",
    "position": 147,
    "original_position": 147,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "fdd7683c558984a96dd556e2c93dde156b85a75f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: drop the `first_invalid_header` argument. It defaults to `nullptr` and you're no longer using the returned value.\r\n\r\nFollow-up: remove the `first_invalid` argument from `ProcessNewBlockHeaders()` since none of the callers now use it.",
    "created_at": "2019-04-16T19:33:58Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275958549",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275958549"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r275958549"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/275958549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1644,
    "original_line": 1644,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278697544",
    "pull_request_review_id": 230840415,
    "id": 278697544,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3ODY5NzU0NA==",
    "diff_hunk": "@@ -66,6 +66,32 @@ enum class ValidationInvalidReason {\n     TX_MEMPOOL_POLICY,        //!< violated mempool's fee/size/descendant/RBF/etc limits\n };\n \n+inline bool IsTransactionReason(ValidationInvalidReason r)\n+{\n+    return r == ValidationInvalidReason::NONE ||\n+           r == ValidationInvalidReason::CONSENSUS ||\n+           r == ValidationInvalidReason::RECENT_CONSENSUS_CHANGE ||\n+           r == ValidationInvalidReason::TX_NOT_STANDARD ||\n+           r == ValidationInvalidReason::TX_MISSING_INPUTS ||\n+           r == ValidationInvalidReason::TX_WITNESS_MUTATED ||\n+           r == ValidationInvalidReason::TX_CONFLICT ||\n+           r == ValidationInvalidReason::TX_MEMPOOL_POLICY;\n+}\n+\n+inline bool IsBlockReason(ValidationInvalidReason r)",
    "path": "src/consensus/validation.h",
    "position": 62,
    "original_position": 16,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "dafbf9e9087aacd3498e1be5e444e516c22ef89c",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Noting for later reference:\r\n\r\nDefinitely not worth changing in this PR now given # of acks, but this can probably be cleaned up in a later PR to just give each category of error a unique prefix (e.g, make all TX_* have MSByte set to 3 and all BLOCK_* have MSB set to 2 and general set to 1) or something.\r\n\r\n```\r\nenum class ValidationInvalidReason : uint64_t {\r\n  IS_GENERAL REASON =1 << 56,\r\n  // ....\r\n  IS_BLOCK_REASON = 2 << 56\r\n // ....\r\n  IS_TX_REASON = 3 << 56\r\n}\r\n```\r\n\r\nThen these checks clean up to:\r\n\r\n```\r\nIS_TX_REASON & r || IS_GENERAL_REASON & r\r\n```\r\n\r\nThe downside is depending on the enum grouping order, but then this makes it easier to later modify the code to split these enums into different classes (while preserving offsets), and then make the general wrapper functions take the correct type of enum.",
    "created_at": "2019-04-25T19:27:03Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r278697544",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278697544"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r278697544"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/278697544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "RIGHT",
    "in_reply_to_id": 273667031
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279584928",
    "pull_request_review_id": 231959109,
    "id": 279584928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTU4NDkyOA==",
    "diff_hunk": "@@ -1965,13 +1965,14 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         {\n             CAmount txfee = 0;\n             if (!Consensus::CheckTxInputs(tx, state, view, pindex->nHeight, txfee)) {\n-                if (state.GetReason() == ValidationInvalidReason::TX_MISSING_INPUTS) {\n-                    // CheckTxInputs may return MISSING_INPUTS but we can't return that, as\n-                    // it's not defined for a block, so we reset the reason flag to CONSENSUS here.\n+                if (!IsBlockReason(state.GetReason())) {\n+                    // CheckTxInputs may return MISSING_INPUTS or\n+                    // PREMATURE_SPEND but we can't return that, as it's not\n+                    // defined for a block, so we reset the reason flag to\n+                    // CONSENSUS here.\n                     state.Invalid(ValidationInvalidReason::CONSENSUS, false,\n                             state.GetRejectCode(), state.GetRejectReason(), state.GetDebugMessage());\n                 }\n-                assert(IsBlockReason(state.GetReason()));",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "fdd7683c558984a96dd556e2c93dde156b85a75f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, this could have stayed.",
    "created_at": "2019-04-30T00:22:49Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279584928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279584928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279584928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279584928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1974,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279635303",
    "pull_request_review_id": 232020567,
    "id": 279635303,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTYzNTMwMw==",
    "diff_hunk": "@@ -3101,10 +3101,12 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n             return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, true)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "f3883a321bf4ab289edcd9754b12cae3a648b175",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Two things here:\r\n- I think the point here was to add the specific failed tx hash as context information\r\n- Not sure it's a good idea to add `LogPrintf` in validation. We've spent a lot of time some years ago to remove all direct logging in validation to reduce the spamminess for users (don't want `ERROR`s in the log for things that are not the users's fault), replacing it with messages in the validation state, so that one summary message can be given at most (and returned over say, RPC)",
    "created_at": "2019-04-30T07:14:41Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279635303",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279635303"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279635303"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279635303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3106,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638040",
    "pull_request_review_id": 232023875,
    "id": 279638040,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTYzODA0MA==",
    "diff_hunk": "@@ -3091,28 +3108,30 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT || ::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-blk-length\", false, \"size limits failed\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-blk-length\", \"size limits failed\");\n \n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-cb-missing\", false, \"first tx is not coinbase\");\n+        return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-missing\", \"first tx is not coinbase\");\n     for (unsigned int i = 1; i < block.vtx.size(); i++)\n         if (block.vtx[i]->IsCoinBase())\n-            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n+            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-multiple\", \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, true)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 407,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "fdd7683c558984a96dd556e2c93dde156b85a75f",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use `LogPrint(BCLog, \u2026)` instead  to log to a specific log category and thus reduce the default log noise?",
    "created_at": "2019-04-30T07:25:10Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279638040",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638040"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279638040"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3123,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638157",
    "pull_request_review_id": 232024003,
    "id": 279638157,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTYzODE1Nw==",
    "diff_hunk": "@@ -2493,15 +2546,13 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // to policy, allowing the node to function as a gateway for\n                 // nodes hidden behind it.\n                 //\n-                // Never relay transactions that we would assign a non-zero DoS\n-                // score for, as we expect peers to do the same with us in that\n-                // case.\n-                int nDoS = 0;\n-                if (!state.IsInvalid(nDoS) || nDoS == 0) {\n+                // Never relay transactions that might result in being\n+                // disconnected (or banned).\n+                if (state.IsInvalid() && TxRelayMayResultInDisconnect(state)) {\n+                    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));",
    "path": "src/net_processing.cpp",
    "position": 260,
    "original_position": 260,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "fdd7683c558984a96dd556e2c93dde156b85a75f",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use `LogPrint(BCLog, \u2026)` instead  to log to a specific log category and thus reduce the default log noise?",
    "created_at": "2019-04-30T07:25:32Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279638157",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638157"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279638157"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2552,
    "original_line": 2552,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638172",
    "pull_request_review_id": 232024029,
    "id": 279638172,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTYzODE3Mg==",
    "diff_hunk": "@@ -11,24 +11,24 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-vin-empty\");",
    "path": "src/consensus/tx_check.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "dd6429e50f1e13e245c67b9ee1a83c3b29c8f90f",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There's a very large correlation with the reject codes here e.g. ValidationInvalidReason::CONSENSUS<->REJECT_INVALID. Not really a problem, though adding another way to classify every instance of Invalid/DoS seems a bit overkill and the number of parameters keeps growing.\r\n\r\nEdit: couldn't we *replace* the reject code with a mapping from ValidationInvalidReason?",
    "created_at": "2019-04-30T07:25:36Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279638172",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638172"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279638172"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279638172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 14,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279767688",
    "pull_request_review_id": 232187603,
    "id": 279767688,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3OTc2NzY4OA==",
    "diff_hunk": "@@ -11,24 +11,24 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n+        return state.DoS(100, ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-txns-vin-empty\");",
    "path": "src/consensus/tx_check.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "dd6429e50f1e13e245c67b9ee1a83c3b29c8f90f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See commit https://github.com/bitcoin/bitcoin/pull/15921/commits/903d68f21da8eaa9f397232f54d35b8c58de8851 in follow-up PR #15921 which removes the reject code from ValidationState.",
    "created_at": "2019-04-30T14:00:28Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279767688",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279767688"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r279767688"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/279767688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 14,
    "side": "RIGHT",
    "in_reply_to_id": 279638172
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/280558397",
    "pull_request_review_id": 233188316,
    "id": 280558397,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MDU1ODM5Nw==",
    "diff_hunk": "@@ -3101,10 +3101,12 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n             return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n-            return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n-                                 strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n+    for (const auto& tx : block.vtx) {\n+        if (!CheckTransaction(*tx, state, true)) {\n+            LogPrintf(\"Transaction check failed (tx hash %s) %s\\n\", tx->GetHash().ToString(), state.GetDebugMessage());",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "f3883a321bf4ab289edcd9754b12cae3a648b175",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, I see your point (and good catch on the unconditional log message, I agree that we should not do that). I'll revert this change.",
    "created_at": "2019-05-02T19:11:45Z",
    "updated_at": "2019-05-03T13:37:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r280558397",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/280558397"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r280558397"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/280558397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3106,
    "side": "RIGHT",
    "in_reply_to_id": 279635303
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375312729",
    "pull_request_review_id": 353790847,
    "id": 375312729,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMxMjcyOQ==",
    "diff_hunk": "@@ -694,11 +694,11 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n         // Check for non-standard pay-to-script-hash in inputs\n         if (fRequireStandard && !AreInputsStandard(tx, view))\n-            return state.Invalid(false, REJECT_NONSTANDARD, \"bad-txns-nonstandard-inputs\");\n+            return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, \"bad-txns-nonstandard-inputs\");\n \n         // Check for non-standard witness in P2WSH\n         if (tx.HasWitness() && fRequireStandard && !IsWitnessStandard(tx, view))\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-witness-nonstandard\", true);\n+            return state.Invalid(ValidationInvalidReason::TX_WITNESS_MUTATED, false, REJECT_NONSTANDARD, \"bad-witness-nonstandard\");",
    "path": "src/validation.cpp",
    "position": 71,
    "original_position": 71,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@TheBlueMatt I was tracking down our use of TX_WITNESS_MUTATED and the introduction of it here seems like a bug -- any idea why we did this?  TX_NOT_STANDARD seems more correct, and actually I think now that we should rename TX_WITNESS_MUTATED to TX_WITNESS_STRIPPED to make it clear how we use it.",
    "created_at": "2020-02-05T15:09:25Z",
    "updated_at": "2020-02-05T15:09:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r375312729",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375312729"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r375312729"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375312729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 701,
    "original_line": 701,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375482254",
    "pull_request_review_id": 354007990,
    "id": 375482254,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ4MjI1NA==",
    "diff_hunk": "@@ -694,11 +694,11 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n         // Check for non-standard pay-to-script-hash in inputs\n         if (fRequireStandard && !AreInputsStandard(tx, view))\n-            return state.Invalid(false, REJECT_NONSTANDARD, \"bad-txns-nonstandard-inputs\");\n+            return state.Invalid(ValidationInvalidReason::TX_NOT_STANDARD, false, REJECT_NONSTANDARD, \"bad-txns-nonstandard-inputs\");\n \n         // Check for non-standard witness in P2WSH\n         if (tx.HasWitness() && fRequireStandard && !IsWitnessStandard(tx, view))\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-witness-nonstandard\", true);\n+            return state.Invalid(ValidationInvalidReason::TX_WITNESS_MUTATED, false, REJECT_NONSTANDARD, \"bad-witness-nonstandard\");",
    "path": "src/validation.cpp",
    "position": 71,
    "original_position": 71,
    "commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "original_commit_id": "0ff1c2a838da9e8dc7f77609adc89124bbea3e2b",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It was my understanding that this could trigger in case the witness was malleated by a third part (making it nonstandard), which was the original definition for WITNESS_MUTATED.",
    "created_at": "2020-02-05T20:10:33Z",
    "updated_at": "2020-02-05T20:10:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r375482254",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375482254"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15141#discussion_r375482254"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15141"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375482254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 701,
    "original_line": 701,
    "side": "RIGHT",
    "in_reply_to_id": 375312729
  }
]