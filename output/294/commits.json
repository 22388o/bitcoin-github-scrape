[
  {
    "sha": "e784b01f9b64075a554e07f7187b9a2ea1f68bc5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzg0YjAxZjliNjQwNzVhNTU0ZTA3ZjcxODdiOWEyZWExZjY4YmM1",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jeff@garzik.org",
        "date": "2011-06-07T03:57:10Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@pobox.com",
        "date": "2011-06-07T03:57:10Z"
      },
      "message": "Create -keypoolmin, and only top up keypool if size falls below that",
      "tree": {
        "sha": "d5d0c240dd1c15681b570237e2e10073d2682112",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5d0c240dd1c15681b570237e2e10073d2682112"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e784b01f9b64075a554e07f7187b9a2ea1f68bc5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e784b01f9b64075a554e07f7187b9a2ea1f68bc5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e784b01f9b64075a554e07f7187b9a2ea1f68bc5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e784b01f9b64075a554e07f7187b9a2ea1f68bc5/comments",
    "author": null,
    "committer": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04bc3f0a632808d6d6df3e0cf4dbe39915fb3eda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04bc3f0a632808d6d6df3e0cf4dbe39915fb3eda",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04bc3f0a632808d6d6df3e0cf4dbe39915fb3eda"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 17,
      "deletions": 12
    },
    "files": [
      {
        "sha": "b26b68b4fbd409ba2f2dc740ce211ec8a1ad783f",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 12,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e784b01f9b64075a554e07f7187b9a2ea1f68bc5/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e784b01f9b64075a554e07f7187b9a2ea1f68bc5/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=e784b01f9b64075a554e07f7187b9a2ea1f68bc5",
        "patch": "@@ -960,18 +960,21 @@ void CWalletDB::ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool)\n     CRITICAL_BLOCK(cs_mapWallet)\n     CRITICAL_BLOCK(cs_setKeyPool)\n     {\n-        // Top up key pool\n-        int64 nTargetSize = max(GetArg(\"-keypool\", 100), (int64)0);\n-        while (setKeyPool.size() < nTargetSize+1)\n-        {\n-            int64 nEnd = 1;\n-            if (!setKeyPool.empty())\n-                nEnd = *(--setKeyPool.end()) + 1;\n-            if (!Write(make_pair(string(\"pool\"), nEnd), CKeyPool(GenerateNewKey())))\n-                throw runtime_error(\"ReserveKeyFromKeyPool() : writing generated key failed\");\n-            setKeyPool.insert(nEnd);\n-            printf(\"keypool added key %\"PRI64d\", size=%d\\n\", nEnd, setKeyPool.size());\n-        }\n+        // Top up key pool, if below low-water level\n+\tint64 nMinPoolSize = max(GetArg(\"-keypoolmin\", DEF_KEYPOOL_MIN), (int64)0);\n+\tif (setKeyPool.size() < nMinPoolSize) {\n+            int64 nTargetSize = max(GetArg(\"-keypool\", DEF_KEYPOOL_SZ), (int64)0);\n+            while (setKeyPool.size() < nTargetSize+1)\n+            {\n+                int64 nEnd = 1;\n+                if (!setKeyPool.empty())\n+                    nEnd = *(--setKeyPool.end()) + 1;\n+                if (!Write(make_pair(string(\"pool\"), nEnd), CKeyPool(GenerateNewKey())))\n+                    throw runtime_error(\"ReserveKeyFromKeyPool() : writing generated key failed\");\n+                setKeyPool.insert(nEnd);\n+                printf(\"keypool added key %\"PRI64d\", size=%d\\n\", nEnd, setKeyPool.size());\n+            }\n+\t}\n \n         // Get the oldest key\n         assert(!setKeyPool.empty());"
      },
      {
        "sha": "4549ecd8a5edae420dd23cb8b808d48deec44405",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e784b01f9b64075a554e07f7187b9a2ea1f68bc5/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e784b01f9b64075a554e07f7187b9a2ea1f68bc5/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e784b01f9b64075a554e07f7187b9a2ea1f68bc5",
        "patch": "@@ -27,6 +27,8 @@ class CKeyItem;\n static const unsigned int MAX_BLOCK_SIZE = 1000000;\n static const unsigned int MAX_BLOCK_SIZE_GEN = MAX_BLOCK_SIZE/2;\n static const int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n+static const int DEF_KEYPOOL_SZ = 125;\n+static const int DEF_KEYPOOL_MIN = 100;\n static const int64 COIN = 100000000;\n static const int64 CENT = 1000000;\n static const int64 MIN_TX_FEE = 50000;"
      }
    ]
  }
]