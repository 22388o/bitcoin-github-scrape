practicalswift,2018-05-14T13:34:02Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-388818011,388818011,
practicalswift,2018-05-24T20:03:27Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-391841423,391841423,
practicalswift,2018-05-29T22:04:50Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-392961461,392961461,
practicalswift,2018-06-15T20:15:32Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-397730479,397730479,
practicalswift,2018-07-11T23:39:45Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-404343590,404343590,
MarcoFalke,2018-07-12T00:51:49Z,"Travis output:\n\n```\nbench/block_assemble.cpp:102:18: error: calling function 'AcceptToMemoryPool' requires holding mutex 'cs_main' exclusively [-Werror,-Wthread-safety-analysis]\n        bool ret{::AcceptToMemoryPool(::mempool, state, txr, nullptr /* pfMissingInputs */, nullptr /* plTxnReplaced */, false /* bypass_limits */, /* nAbsurdFee */ 0)};\n                 ^\n1 error generated.\n",https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-404355198,404355198,
practicalswift,2018-07-12T08:56:57Z,@MarcoFalke Oh thanks! Now fixed. Also incorporated the `CChainState` changes you suggested in the other PR. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-404441272,404441272,
practicalswift,2018-07-15T23:18:37Z,@MarcoFalke Thanks! Locking comment removed. Also rebased. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-405125804,405125804,
practicalswift,2018-08-13T11:44:41Z,Rebase number seven performed! :-),https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-412491392,412491392,
MarcoFalke,2018-08-13T13:25:04Z,utACK 2cb4b9a4bdec7e70e188e4cbf5588e0957112647,https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-412516800,412516800,
DrahtBot,2018-08-25T16:40:55Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-415981558,415981558,
practicalswift,2018-08-25T21:38:07Z,@MarcoFalke Rebased. Please re-review. Any outstanding issues? :-),https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-415998180,415998180,
MarcoFalke,2018-08-25T21:44:53Z,re-utACK 5cc07926d82b4fecdc7ec6b68f113b709cfa1938,https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-415998527,415998527,
practicalswift,2018-08-25T21:59:45Z,"If this is merged then a lot of the other locking annotations PR:s would be drastically reduced since they repeat `cs_main` related annotations already contained in this PR. Review of this specific locking annotations PR would thus be extra appreciated :-)\n\nReviewers of previous locking annotations PR:s – @Empact, @laanwj, @TheBlueMatt or @promag – would you mind take a look at this PR? :-)",https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-415999246,415999246,
MarcoFalke,2018-08-25T22:04:45Z,@practicalswift Travis failed here,https://github.com/bitcoin/bitcoin/pull/13083#issuecomment-415999490,415999490,
MarcoFalke,2018-05-29T23:59:12Z,I can't see why any of the changes in the `qt` and `rpc` folders are needed. Please make sure you don't add false positives.,https://github.com/bitcoin/bitcoin/pull/13083#discussion_r191609612,191609612,src/qt/transactiondesc.cpp
MarcoFalke,2018-07-14T18:15:50Z,Unwanted change?,https://github.com/bitcoin/bitcoin/pull/13083#discussion_r202521723,202521723,src/validation.h
MarcoFalke,2018-08-23T01:19:56Z,Could use a forward decl of `class CCriticalSection;` instead?,https://github.com/bitcoin/bitcoin/pull/13083#discussion_r212157849,212157849,src/validationinterface.h
practicalswift,2018-08-25T21:33:05Z,"@MarcoFalke `sync.h` is needed for `LOCKS_EXCLUDED`, etc too :-)",https://github.com/bitcoin/bitcoin/pull/13083#discussion_r212809579,212809579,src/validationinterface.h
MarcoFalke,2018-08-25T22:39:34Z,Looks like this was added in the cpp file. Would you mind moving it to the header file?,https://github.com/bitcoin/bitcoin/pull/13083#discussion_r212810639,212810639,src/txmempool.cpp
MarcoFalke,2018-08-25T22:39:49Z,Same here,https://github.com/bitcoin/bitcoin/pull/13083#discussion_r212810645,212810645,src/wallet/wallet.cpp
ryanofsky,2018-08-27T15:20:53Z,"These functions are in an anonymous namespace so adding `static` here has no effect.\n\nI think it would be better to avoid using `static` in cases like this. Anonymous namespaces provide a reliable way of hiding all types of c++ linker symbols, while `static` keyword works on a non-member symbols (and was actually deprecated in C++03, though it is undeprecated now: https://stackoverflow.com/que",https://github.com/bitcoin/bitcoin/pull/13083#discussion_r213013588,213013588,src/interfaces/wallet.cpp
practicalswift,2018-08-27T15:26:38Z,"@ryanofsky Yes, I know. I simply missed the fact that it was in an anonymous namespace :-)\n\nThanks for noticing though :-)",https://github.com/bitcoin/bitcoin/pull/13083#discussion_r213015554,213015554,src/interfaces/wallet.cpp
