[
  {
    "sha": "6cba60ace247af8e2341e8540a0a0dc947b5a187",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2JhNjBhY2UyNDdhZjhlMjM0MWU4NTQwYTBhMGRjOTQ3YjVhMTg3",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-04-11T15:26:16Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-04-11T15:49:37Z"
      },
      "message": "speed up wallet_hd.py and clarify/augment checks",
      "tree": {
        "sha": "ddcd76b9579587cc6707720a8c218b35ede333dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddcd76b9579587cc6707720a8c218b35ede333dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cba60ace247af8e2341e8540a0a0dc947b5a187",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cba60ace247af8e2341e8540a0a0dc947b5a187",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6cba60ace247af8e2341e8540a0a0dc947b5a187",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cba60ace247af8e2341e8540a0a0dc947b5a187/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cf76c23fbfc8500fa494f8cef8068a67a1388c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cf76c23fbfc8500fa494f8cef8068a67a1388c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cf76c23fbfc8500fa494f8cef8068a67a1388c3"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 9,
      "deletions": 7
    },
    "files": [
      {
        "sha": "8c754807e62f00da708ebc896984fc3db3b0ac8a",
        "filename": "test/functional/wallet_hd.py",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cba60ace247af8e2341e8540a0a0dc947b5a187/test/functional/wallet_hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cba60ace247af8e2341e8540a0a0dc947b5a187/test/functional/wallet_hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_hd.py?ref=6cba60ace247af8e2341e8540a0a0dc947b5a187",
        "patch": "@@ -48,8 +48,8 @@ def run_test(self):\n         # Also send funds to each add\n         self.nodes[0].generate(101)\n         hd_add = None\n-        num_hd_adds = 300\n-        for i in range(num_hd_adds):\n+        NUM_HD_ADDS = 10\n+        for i in range(NUM_HD_ADDS):\n             hd_add = self.nodes[1].getnewaddress()\n             hd_info = self.nodes[1].getaddressinfo(hd_add)\n             assert_equal(hd_info[\"hdkeypath\"], \"m/0'/0'/\"+str(i)+\"'\")\n@@ -65,7 +65,7 @@ def run_test(self):\n         assert_equal(change_addrV[\"hdkeypath\"], \"m/0'/1'/1'\") #second internal child key\n \n         self.sync_all()\n-        assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n+        assert_equal(self.nodes[1].getbalance(), NUM_HD_ADDS + 1)\n \n         self.log.info(\"Restore backup ...\")\n         self.stop_node(1)\n@@ -78,10 +78,10 @@ def run_test(self):\n \n         # Assert that derivation is deterministic\n         hd_add_2 = None\n-        for _ in range(num_hd_adds):\n+        for i in range(NUM_HD_ADDS):\n             hd_add_2 = self.nodes[1].getnewaddress()\n             hd_info_2 = self.nodes[1].getaddressinfo(hd_add_2)\n-            assert_equal(hd_info_2[\"hdkeypath\"], \"m/0'/0'/\"+str(_)+\"'\")\n+            assert_equal(hd_info_2[\"hdkeypath\"], \"m/0'/0'/\"+str(i)+\"'\")\n             assert_equal(hd_info_2[\"hdmasterkeyid\"], masterkeyid)\n         assert_equal(hd_add, hd_add_2)\n         connect_nodes_bi(self.nodes, 0, 1)\n@@ -90,7 +90,7 @@ def run_test(self):\n         # Needs rescan\n         self.stop_node(1)\n         self.start_node(1, extra_args=self.extra_args[1] + ['-rescan'])\n-        assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n+        assert_equal(self.nodes[1].getbalance(), NUM_HD_ADDS + 1)\n \n         # Try a RPC based rescan\n         self.stop_node(1)\n@@ -100,13 +100,15 @@ def run_test(self):\n         self.start_node(1, extra_args=self.extra_args[1])\n         connect_nodes_bi(self.nodes, 0, 1)\n         self.sync_all()\n+        # Wallet automatically scans blocks older than key on startup\n+        assert_equal(self.nodes[1].getbalance(), NUM_HD_ADDS + 1)\n         out = self.nodes[1].rescanblockchain(0, 1)\n         assert_equal(out['start_height'], 0)\n         assert_equal(out['stop_height'], 1)\n         out = self.nodes[1].rescanblockchain()\n         assert_equal(out['start_height'], 0)\n         assert_equal(out['stop_height'], self.nodes[1].getblockcount())\n-        assert_equal(self.nodes[1].getbalance(), num_hd_adds + 1)\n+        assert_equal(self.nodes[1].getbalance(), NUM_HD_ADDS + 1)\n \n         # send a tx and make sure its using the internal chain for the changeoutput\n         txid = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1)"
      }
    ]
  }
]