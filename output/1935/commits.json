[
  {
    "sha": "de91ea0c0c2fead60bfe9a531558cbe1c562346e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTkxZWEwYzBjMmZlYWQ2MGJmZTlhNTMxNTU4Y2JlMWM1NjIzNDZl",
    "commit": {
      "author": {
        "name": "Rune K. Svendsen",
        "email": "runesvend@gmail.com",
        "date": "2012-10-15T20:44:39Z"
      },
      "committer": {
        "name": "Rune K. Svendsen",
        "email": "runesvend@gmail.com",
        "date": "2012-10-15T20:44:39Z"
      },
      "message": "Added script that verifies authenticity of binaries on SourceForge",
      "tree": {
        "sha": "82903920a57b6eabd1a5097c2b66317efacf250b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82903920a57b6eabd1a5097c2b66317efacf250b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de91ea0c0c2fead60bfe9a531558cbe1c562346e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de91ea0c0c2fead60bfe9a531558cbe1c562346e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de91ea0c0c2fead60bfe9a531558cbe1c562346e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de91ea0c0c2fead60bfe9a531558cbe1c562346e/comments",
    "author": {
      "login": "runeksvendsen",
      "id": 1069247,
      "node_id": "MDQ6VXNlcjEwNjkyNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1069247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/runeksvendsen",
      "html_url": "https://github.com/runeksvendsen",
      "followers_url": "https://api.github.com/users/runeksvendsen/followers",
      "following_url": "https://api.github.com/users/runeksvendsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/runeksvendsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/runeksvendsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/runeksvendsen/subscriptions",
      "organizations_url": "https://api.github.com/users/runeksvendsen/orgs",
      "repos_url": "https://api.github.com/users/runeksvendsen/repos",
      "events_url": "https://api.github.com/users/runeksvendsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/runeksvendsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "runeksvendsen",
      "id": 1069247,
      "node_id": "MDQ6VXNlcjEwNjkyNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1069247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/runeksvendsen",
      "html_url": "https://github.com/runeksvendsen",
      "followers_url": "https://api.github.com/users/runeksvendsen/followers",
      "following_url": "https://api.github.com/users/runeksvendsen/following{/other_user}",
      "gists_url": "https://api.github.com/users/runeksvendsen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/runeksvendsen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/runeksvendsen/subscriptions",
      "organizations_url": "https://api.github.com/users/runeksvendsen/orgs",
      "repos_url": "https://api.github.com/users/runeksvendsen/repos",
      "events_url": "https://api.github.com/users/runeksvendsen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/runeksvendsen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "485d667748b776a1932e3e14dc1b9dfe2ba841d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/485d667748b776a1932e3e14dc1b9dfe2ba841d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/485d667748b776a1932e3e14dc1b9dfe2ba841d0"
      }
    ],
    "stats": {
      "total": 119,
      "additions": 119,
      "deletions": 0
    },
    "files": [
      {
        "sha": "336de3ec1ff45a47a054e2f6e155d75db95c7790",
        "filename": "contrib/verifysfbinaries/verify.sh",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de91ea0c0c2fead60bfe9a531558cbe1c562346e/contrib/verifysfbinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de91ea0c0c2fead60bfe9a531558cbe1c562346e/contrib/verifysfbinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/verify.sh?ref=de91ea0c0c2fead60bfe9a531558cbe1c562346e",
        "patch": "@@ -0,0 +1,119 @@\n+#!/bin/bash\n+\n+###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   It first checks if the signature passes, and then downloads the files specified in\n+###   the file, and checks if the hashes of these files match those that are specified\n+###   in the signature file.\n+###   The script returns 0 if everything passes the checks. It returns 1 if either the\n+###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n+\n+function clean_up {\n+   for file in $*\n+   do\n+      rm \"$file\" 2> /dev/null\n+   done\n+}\n+\n+WORKINGDIR=\"/tmp/bitcoin\"\n+TMPFILE=\"hashes.tmp\"\n+\n+#this URL is used if a version number is not specified as an argument to the script\n+SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.7.1/test/SHA256SUMS.asc\"\n+\n+SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n+RCSUBDIR=\"test/\"\n+BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+VERSIONPREFIX=\"bitcoin-\"\n+RCVERSIONSTRING=\"rc\"\n+\n+if [ ! -d \"$WORKINGDIR\" ]; then\n+   mkdir \"$WORKINGDIR\"\n+fi\n+\n+cd \"$WORKINGDIR\"\n+\n+#test if a version number has been passed as an argument\n+if [ -n \"$1\" ]; then\n+   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #  and add this prefix if it doesn't\n+   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n+      VERSION=\"$1\"\n+   else\n+      VERSION=\"$VERSIONPREFIX$1\"\n+   fi\n+\n+   #now let's see if the version string contains \"rc\", and strip it off if it does\n+   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n+   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n+      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n+   else\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n+   fi\n+\n+   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n+else\n+   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+fi\n+\n+#first we fetch the file containing the signature\n+WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+\n+#and then see if wget completed successfully\n+if [ $? -ne 0 ]; then\n+   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   exit 2\n+fi\n+\n+#then we check it\n+GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n+\n+#return value 0: good signature\n+#return value 1: bad signature\n+#return value 2: gpg error\n+\n+RET=\"$?\"\n+if [ $RET -ne 0 ]; then\n+   if [ $RET -eq 1 ]; then\n+      #and notify the user if it's bad\n+      echo \"Bad signature.\"\n+   elif [ $RET -eq 2 ]; then\n+      #or if a gpg error has occured\n+      echo \"gpg error. Do you have Gavin's code signing key installed?\"\n+   fi\n+\n+   echo \"gpg output:\"\n+   echo \"$GPGOUT\"|sed 's/^/\\t/g'\n+   clean_up $SIGNATUREFILENAME $TMPFILE\n+   exit \"$RET\"\n+fi\n+\n+#here we extract the filenames from the signature file\n+FILES=$(awk '{print $2}' \"$TMPFILE\")\n+\n+#and download these one by one\n+for file in in $FILES\n+do\n+   wget --quiet -N \"$BASEDIR$file\"\n+done\n+\n+#check hashes\n+DIFF=$(diff <(sha256sum $FILES) \"$TMPFILE\")\n+\n+if [ $? -eq 1 ]; then\n+   echo \"Hashes don't match.\"\n+   echo \"Offending files:\"\n+   echo \"$DIFF\"|grep \"^<\"|awk '{print \"\\t\"$3}'\n+   exit 1\n+elif [ $? -gt 1 ]; then\n+   echo \"Error executing 'diff'\"\n+   exit 2   \n+fi\n+\n+#everything matches! clean up the mess\n+clean_up $FILES $SIGNATUREFILENAME $TMPFILE\n+\n+exit 0"
      }
    ]
  }
]