dcousens,2015-10-21T22:38:46Z,~~concept ACK~~\n,https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150044333,150044333,
btcdrak,2015-10-22T09:23:41Z,"I am very much in favour of a full address indexes as it removes the need for third party applications like insight-api separately parsing the blockchain. However, I'm not sure this PR's approach is the best way. I dont believe it is reorg safe, and there are other issues reported by @gmaxwell https://github.com/CounterpartyXCP/counterparty-lib/issues/783#issuecomment-120130217.\n\nI think overall",https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150159321,150159321,
afk11,2015-10-23T20:12:50Z,"Concept ACK, but needs rebase.\n",https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150678464,150678464,
gmaxwell,2015-10-23T22:21:52Z,"Concept (weak)NAK.  (Please don't be upset, I feel that stating my view here is a courtesy over simply saying nothing at all).\n\nI don't see this approach being viable.\n\nThere are several interrelated problems, but the foremost of this is that this approach forces its users to use an non-scalable and maintainable method of accessing data in the Bitcoin blockchain-- requiring 50GB+ storage and r",https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150706134,150706134,
rnicoll,2015-10-24T18:36:46Z,"Wanted to say, I am following the comments here, I'm just prioritising work elsewhere at the moment. Thanks for all the comments, feedback and analysis everyone, they are all appreciated.\n1. Using hash of the full script sounds like an excellent idea.\n2. The index consistency issues are likely arising due to lack of recognition of reorgs happening (and therefore the index becomes inconsistent wi",https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150840014,150840014,
dexX7,2015-10-25T13:09:03Z,"If this patch is going to be overhauled, which I'd like very much, then there are a few points to consider:\n1. filtering out of orphaned transactions: similar to the txdb, orphans are kept in the DB, which caused quite a bit confusion in the past. Currently the way to go is to manually check, whether transactions are indeed part of the main chain (e.g. by checking, whether `""confirmations"" > 0`),",https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150922159,150922159,
dcousens,2015-10-26T10:24:05Z,"After a discussion on IRC with @laanwj.  I've changed my opinion to concept NACK with the conclusion this should be moved to an application external to bitcoind.\n\n**update:** I have since written software to do this in an external index,  see https://github.com/bitcoinjs/indexd (see [this](https://github.com/bitcoinjs/private-bitcoin) an example implementation)",https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-151092045,151092045,
btcdrak,2015-10-26T11:03:56Z,I was also part of the conversations with @laanwj and @dcousens and I'm also in favour of doing this externally to bitcoind. \n,https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-151100717,151100717,
sipa,2016-05-20T16:18:37Z,"I vote to close this; this should be done in an external index. Perhaps at some point when we can a more modular design it can be supported as an optionally buildable module, but let's not complicate the current database tracking code.\n",https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-220651197,220651197,
dexX7,2015-10-16T13:53:15Z,"It looks like you rebased from the original.\n\nThis leaks, you'll need to delete the iterator, or use a smart pointer.\n",https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42244332,42244332,src/txdb.cpp
rnicoll,2015-10-16T17:39:24Z,"Thanks, added the missing commit in now\n",https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42268936,42268936,src/txdb.cpp
dcousens,2015-10-22T09:59:37Z,Why not just always use the HASH160 of the script? That way you could query any UTXO.\n,https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42730041,42730041,src/main.cpp
afk11,2015-10-23T04:02:27Z,+1 as there are more interesting script types than address types. Address lookup could just produce the necessary output script and look that up. Exposing both would be great. \n,https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42831578,42831578,src/main.cpp
