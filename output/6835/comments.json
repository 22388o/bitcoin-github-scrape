[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150044333",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150044333",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 150044333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA0NDMzMw==",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?u=034ef1433a0704d9c91b57b993009b0383d6b7c0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-21T22:38:46Z",
    "updated_at": "2015-10-26T10:24:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "~~concept ACK~~\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150044333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150159321",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150159321",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 150159321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDE1OTMyMQ==",
    "user": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?u=578995010af9e1872285cb8e67bcb4f6052d52dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T09:23:41Z",
    "updated_at": "2015-10-22T09:23:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am very much in favour of a full address indexes as it removes the need for third party applications like insight-api separately parsing the blockchain. However, I'm not sure this PR's approach is the best way. I dont believe it is reorg safe, and there are other issues reported by @gmaxwell https://github.com/CounterpartyXCP/counterparty-lib/issues/783#issuecomment-120130217.\n\nI think overall the approach of #5048 creating a separate index is better (but applied to all addresses rather than just the utxo).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150159321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150678464",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150678464",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 150678464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDY3ODQ2NA==",
    "user": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?u=d80eead1afbb70ddce35053cfb1db7502d9ca3c9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T20:12:50Z",
    "updated_at": "2015-10-23T20:12:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK, but needs rebase.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150678464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150706134",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150706134",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 150706134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDcwNjEzNA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T22:21:52Z",
    "updated_at": "2015-10-23T22:23:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept (weak)NAK.  (Please don't be upset, I feel that stating my view here is a courtesy over simply saying nothing at all).\n\nI don't see this approach being viable.\n\nThere are several interrelated problems, but the foremost of this is that this approach forces its users to use an non-scalable and maintainable method of accessing data in the Bitcoin blockchain-- requiring 50GB+ storage and rapidly growing, where _usually_ a watching wallet is sufficient.  This means that user who do adopt this approach will rapidly be pushed off onto trusting third party API services as the resource costs exceed their tolerance.  \n\nAnd we're left then with an invasive change that is used by few users and will not be adequately supported (which we've also seen with this change, that no one has even bothered to diagnose the problems with index consistency that this particular implementation has had).\n\nI would much rather see rapid utxo-only rescan (which would be much less resource intensive, and so more widely used) for watching import and similar functionality. And for indexing beyond that the indexes should be isolated and modularized to make them maintainable for small user bases, or even for out of tree indexing code.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150706134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150840014",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150840014",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 150840014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg0MDAxNA==",
    "user": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?u=9c3a568854478a46b14965facf375e926f0532e3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-24T18:36:46Z",
    "updated_at": "2015-10-24T18:36:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wanted to say, I am following the comments here, I'm just prioritising work elsewhere at the moment. Thanks for all the comments, feedback and analysis everyone, they are all appreciated.\n1. Using hash of the full script sounds like an excellent idea.\n2. The index consistency issues are likely arising due to lack of recognition of reorgs happening (and therefore the index becomes inconsistent with the blocks on disk).\n3. Rapid UTXO-scan sounds like a good first step and we can come back to this.\n\nI _will_ look at this in more depth later, but unlikely before November. If anyone else wants to contribute, PRs against my branch would be much appreciated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150840014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150922159",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-150922159",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 150922159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDkyMjE1OQ==",
    "user": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-25T13:09:03Z",
    "updated_at": "2015-10-25T13:09:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "If this patch is going to be overhauled, which I'd like very much, then there are a few points to consider:\n1. filtering out of orphaned transactions: similar to the txdb, orphans are kept in the DB, which caused quite a bit confusion in the past. Currently the way to go is to manually check, whether transactions are indeed part of the main chain (e.g. by checking, whether `\"confirmations\" > 0`), but this may be done on a lower level. Some time ago I extended the RPC to have an option to filter on the RPC level, but this may also not be ideal: https://github.com/dexX7/bitcoin/commit/ffde89049a7ef96b7d09c31cc78a9a366329a24d\n2. use more appropriate data types: `verbose` (and `includeorphans`) should be `bool`, not `int`.\n3. refine what's actually being indexed: currently a) every data push >=8 bytes,  b) if no such pushes, the entire script is indexed. given that only the lookup by destinations is exposed, it may not be useful to index only the parts that are exposed and needed\n4. maybe add additional filters or aggregation calls: for http://redeem.bitwatch.co/ I'm using [\"listallunspent\"](https://github.com/dexX7/bitcoin/commit/9764daeccfb3f5c813e0a7dd6d022bcd8ffc2edd), which targets unspent outputs (in a somewhat ugly way!), and I've also played with [\"getallbalance\"](https://github.com/dexX7/bitcoin/commit/813da8e9feb68201ffa2f3b13a27e7802fce9883) to retrieve balance information of arbitrary destinations. It's certainly not very fast, but for me an acceptable middle ground.\n5. optionally maintain a mempool based view: DB entries are only written after confirmation, but it would be incredibly useful, if the unconfirmed chain state is available and exposed in one way or another.\n\nEspecially to the first and last point a few notes: I'm not sure who else uses the address-index patch, but most notably is probably [counterparty-lib](https://github.com/CounterpartyXCP/counterparty-lib/blob/7ad66f084a02242bbf2cbc1e8bfb9b70387f57b2/counterpartylib/lib/backend/addrindex.py). They are manually filtering the results to get rid of orphans, and they are manually fetching the mempool over and over to get a better understanding of the unconfirmed chain state. This seems incredibly wasteful, performance wise, and doing the work directly in Core may provide a significant performance boost.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150922159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/151092045",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-151092045",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 151092045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTA5MjA0NQ==",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?u=034ef1433a0704d9c91b57b993009b0383d6b7c0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-26T10:24:05Z",
    "updated_at": "2018-02-26T09:41:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "After a discussion on IRC with @laanwj.  I've changed my opinion to concept NACK with the conclusion this should be moved to an application external to bitcoind.\r\n\r\n**update:** I have since written software to do this in an external index,  see https://github.com/bitcoinjs/indexd (see [this](https://github.com/bitcoinjs/private-bitcoin) an example implementation)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/151092045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/151100717",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-151100717",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 151100717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTEwMDcxNw==",
    "user": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?u=578995010af9e1872285cb8e67bcb4f6052d52dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-26T11:03:56Z",
    "updated_at": "2015-10-26T11:03:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was also part of the conversations with @laanwj and @dcousens and I'm also in favour of doing this externally to bitcoind. \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/151100717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220651197",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#issuecomment-220651197",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6835",
    "id": 220651197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDY1MTE5Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-20T16:18:37Z",
    "updated_at": "2016-05-20T16:18:37Z",
    "author_association": "MEMBER",
    "body": "I vote to close this; this should be done in an external index. Perhaps at some point when we can a more modular design it can be supported as an optionally buildable module, but let's not complicate the current database tracking code.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220651197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42244332",
    "pull_request_review_id": null,
    "id": 42244332,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0MzMy",
    "diff_hunk": "@@ -163,6 +167,40 @@ bool CBlockTreeDB::WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos>\n     return WriteBatch(batch);\n }\n \n+bool CBlockTreeDB::ReadAddrIndex(const uint160 &addrid, std::vector<CExtDiskTxPos> &list) {\n+    CLevelDBIterator *iter = NewIterator();",
    "path": "src/txdb.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "5c9a79441a58969c441a20e4151c5ffed4f79678",
    "original_commit_id": "e6cfa10d808fc9d597052a0d93106323f663de6c",
    "user": {
      "login": "dexX7",
      "id": 5836089,
      "node_id": "MDQ6VXNlcjU4MzYwODk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5836089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dexX7",
      "html_url": "https://github.com/dexX7",
      "followers_url": "https://api.github.com/users/dexX7/followers",
      "following_url": "https://api.github.com/users/dexX7/following{/other_user}",
      "gists_url": "https://api.github.com/users/dexX7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dexX7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dexX7/subscriptions",
      "organizations_url": "https://api.github.com/users/dexX7/orgs",
      "repos_url": "https://api.github.com/users/dexX7/repos",
      "events_url": "https://api.github.com/users/dexX7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dexX7/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It looks like you rebased from the original.\n\nThis leaks, you'll need to delete the iterator, or use a smart pointer.\n",
    "created_at": "2015-10-16T13:53:15Z",
    "updated_at": "2015-10-24T19:10:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42244332",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6835",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42244332"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42244332"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6835"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42244332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42268936",
    "pull_request_review_id": null,
    "id": 42268936,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4OTM2",
    "diff_hunk": "@@ -163,6 +167,40 @@ bool CBlockTreeDB::WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos>\n     return WriteBatch(batch);\n }\n \n+bool CBlockTreeDB::ReadAddrIndex(const uint160 &addrid, std::vector<CExtDiskTxPos> &list) {\n+    CLevelDBIterator *iter = NewIterator();",
    "path": "src/txdb.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "5c9a79441a58969c441a20e4151c5ffed4f79678",
    "original_commit_id": "e6cfa10d808fc9d597052a0d93106323f663de6c",
    "user": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, added the missing commit in now\n",
    "created_at": "2015-10-16T17:39:24Z",
    "updated_at": "2015-10-24T19:10:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42268936",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6835",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42268936"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42268936"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6835"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42268936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42730041",
    "pull_request_review_id": null,
    "id": 42730041,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMwMDQx",
    "diff_hunk": "@@ -961,6 +963,45 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     return true;\n }\n \n+bool ReadTransaction(CTransaction& txOut, const CDiskTxPos &pos, uint256 &hashBlock) {\n+    CAutoFile file(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n+    if (file.IsNull())\n+        return error(\"%s: OpenBlockFile failed\", __func__);\n+    CBlockHeader header;\n+    try {\n+        file >> header;\n+        fseek(file.Get(), pos.nTxOffset, SEEK_CUR);\n+        file >> txOut;\n+    } catch (std::exception &e) {\n+        return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n+    }\n+    hashBlock = header.GetHash();\n+    return true;\n+}\n+\n+bool FindTransactionsByDestination(const CTxDestination &dest, std::set<CExtDiskTxPos> &setpos) {\n+    uint160 addrid;\n+    const CKeyID *pkeyid = boost::get<CKeyID>(&dest);\n+    if (pkeyid) {\n+        addrid = static_cast<uint160>(*pkeyid);\n+    } else {\n+        const CScriptID *pscriptid = boost::get<CScriptID>(&dest);",
    "path": "src/main.cpp",
    "position": 42,
    "original_position": 42,
    "commit_id": "5c9a79441a58969c441a20e4151c5ffed4f79678",
    "original_commit_id": "0a42fd54d828b46498fc897dea298b283b96ca17",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not just always use the HASH160 of the script? That way you could query any UTXO.\n",
    "created_at": "2015-10-22T09:59:37Z",
    "updated_at": "2015-10-24T19:10:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42730041",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6835",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42730041"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42730041"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6835"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42730041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 999,
    "original_line": 988,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42831578",
    "pull_request_review_id": null,
    "id": 42831578,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxNTc4",
    "diff_hunk": "@@ -961,6 +963,45 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     return true;\n }\n \n+bool ReadTransaction(CTransaction& txOut, const CDiskTxPos &pos, uint256 &hashBlock) {\n+    CAutoFile file(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n+    if (file.IsNull())\n+        return error(\"%s: OpenBlockFile failed\", __func__);\n+    CBlockHeader header;\n+    try {\n+        file >> header;\n+        fseek(file.Get(), pos.nTxOffset, SEEK_CUR);\n+        file >> txOut;\n+    } catch (std::exception &e) {\n+        return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n+    }\n+    hashBlock = header.GetHash();\n+    return true;\n+}\n+\n+bool FindTransactionsByDestination(const CTxDestination &dest, std::set<CExtDiskTxPos> &setpos) {\n+    uint160 addrid;\n+    const CKeyID *pkeyid = boost::get<CKeyID>(&dest);\n+    if (pkeyid) {\n+        addrid = static_cast<uint160>(*pkeyid);\n+    } else {\n+        const CScriptID *pscriptid = boost::get<CScriptID>(&dest);",
    "path": "src/main.cpp",
    "position": 42,
    "original_position": 42,
    "commit_id": "5c9a79441a58969c441a20e4151c5ffed4f79678",
    "original_commit_id": "0a42fd54d828b46498fc897dea298b283b96ca17",
    "user": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "+1 as there are more interesting script types than address types. Address lookup could just produce the necessary output script and look that up. Exposing both would be great. \n",
    "created_at": "2015-10-23T04:02:27Z",
    "updated_at": "2015-10-24T19:10:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42831578",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6835",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42831578"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6835#discussion_r42831578"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6835"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42831578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 999,
    "original_line": 988,
    "side": "RIGHT"
  }
]