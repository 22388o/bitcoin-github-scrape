[
  {
    "sha": "5945819717eb842df28cd9291a226d0505cb49d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTQ1ODE5NzE3ZWI4NDJkZjI4Y2Q5MjkxYTIyNmQwNTA1Y2I0OWQw",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-17T21:00:19Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-20T02:28:01Z"
      },
      "message": "Remove default arguments for CTxMemPoolEntry()",
      "tree": {
        "sha": "674dc0b1b890b91843b57c2bf5676ccd7bfcf8e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/674dc0b1b890b91843b57c2bf5676ccd7bfcf8e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5945819717eb842df28cd9291a226d0505cb49d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5945819717eb842df28cd9291a226d0505cb49d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5945819717eb842df28cd9291a226d0505cb49d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5945819717eb842df28cd9291a226d0505cb49d0/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96b802510da0750aabc4f3ba6750cb5ce76f2b8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96b802510da0750aabc4f3ba6750cb5ce76f2b8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96b802510da0750aabc4f3ba6750cb5ce76f2b8c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e1ecad36020521b25fad850d9845e196baad3a00",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5945819717eb842df28cd9291a226d0505cb49d0/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5945819717eb842df28cd9291a226d0505cb49d0/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=5945819717eb842df28cd9291a226d0505cb49d0",
        "patch": "@@ -78,7 +78,7 @@ class CTxMemPoolEntry\n \n public:\n     CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n-                    int64_t _nTime, double _dPriority, unsigned int _nHeight, bool poolHasNoInputsOf = false);\n+                    int64_t _nTime, double _dPriority, unsigned int _nHeight, bool poolHasNoInputsOf);\n     CTxMemPoolEntry(const CTxMemPoolEntry& other);\n \n     const CTransaction& GetTx() const { return this->tx; }"
      }
    ]
  },
  {
    "sha": "71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MWYxZDlmZDRhZTJjMmZjOTBkNTQ4N2JkZjIwOTZmOWViNTg5OGQ5",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-06-30T15:14:24Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-20T02:28:01Z"
      },
      "message": "Modify variable names for entry height and priority",
      "tree": {
        "sha": "cbd1ea0d8de0a4216475414daf7d479187fa657a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cbd1ea0d8de0a4216475414daf7d479187fa657a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5945819717eb842df28cd9291a226d0505cb49d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5945819717eb842df28cd9291a226d0505cb49d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5945819717eb842df28cd9291a226d0505cb49d0"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "ea3aad34a30cf580d8f7173ec993e6f2cac90c3a",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9",
        "patch": "@@ -19,9 +19,9 @@\n using namespace std;\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n-                                 int64_t _nTime, double _dPriority,\n-                                 unsigned int _nHeight, bool poolHasNoInputsOf):\n-    tx(_tx), nFee(_nFee), nTime(_nTime), dPriority(_dPriority), nHeight(_nHeight),\n+                                 int64_t _nTime, double _entryPriority,\n+                                 unsigned int _entryHeight, bool poolHasNoInputsOf):\n+    tx(_tx), nFee(_nFee), nTime(_nTime), entryPriority(_entryPriority), entryHeight(_entryHeight),\n     hadNoDependencies(poolHasNoInputsOf)\n {\n     nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n@@ -42,8 +42,8 @@ double\n CTxMemPoolEntry::GetPriority(unsigned int currentHeight) const\n {\n     CAmount nValueIn = tx.GetValueOut()+nFee;\n-    double deltaPriority = ((double)(currentHeight-nHeight)*nValueIn)/nModSize;\n-    double dResult = dPriority + deltaPriority;\n+    double deltaPriority = ((double)(currentHeight-entryHeight)*nValueIn)/nModSize;\n+    double dResult = entryPriority + deltaPriority;\n     return dResult;\n }\n "
      },
      {
        "sha": "e189e2e46357df04b8a9c52e0e2f8cbbff809019",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9",
        "patch": "@@ -63,8 +63,8 @@ class CTxMemPoolEntry\n     size_t nModSize; //! ... and modified size for priority\n     size_t nUsageSize; //! ... and total memory usage\n     int64_t nTime; //! Local time when entering the mempool\n-    double dPriority; //! Priority when entering the mempool\n-    unsigned int nHeight; //! Chain height when entering the mempool\n+    double entryPriority; //! Priority when entering the mempool\n+    unsigned int entryHeight; //! Chain height when entering the mempool\n     bool hadNoDependencies; //! Not dependent on any other txs when it entered the mempool\n \n     // Information about descendants of this transaction that are in the\n@@ -78,15 +78,15 @@ class CTxMemPoolEntry\n \n public:\n     CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n-                    int64_t _nTime, double _dPriority, unsigned int _nHeight, bool poolHasNoInputsOf);\n+                    int64_t _nTime, double _entryPriority, unsigned int _entryHeight, bool poolHasNoInputsOf);\n     CTxMemPoolEntry(const CTxMemPoolEntry& other);\n \n     const CTransaction& GetTx() const { return this->tx; }\n     double GetPriority(unsigned int currentHeight) const;\n     const CAmount& GetFee() const { return nFee; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }\n-    unsigned int GetHeight() const { return nHeight; }\n+    unsigned int GetHeight() const { return entryHeight; }\n     bool WasClearAtEntry() const { return hadNoDependencies; }\n     size_t DynamicMemoryUsage() const { return nUsageSize; }\n "
      }
    ]
  },
  {
    "sha": "c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDM1MzA2NGRkZjcxYWQxMDNiZDE5ZjZlN2MxMGZmOGUyNDBhYzQ2",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-13T15:05:21Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-11-20T02:44:35Z"
      },
      "message": "Change GetPriority calculation.\n\nCompute the value of inputs that already are in the chain at time of mempool entry and only increase priority due to aging for those inputs.  This effectively changes the CTxMemPoolEntry's GetPriority calculation from an upper bound to a lower bound.",
      "tree": {
        "sha": "9fec6d8c6ddb79925d90b2d12582e2dee3380de6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fec6d8c6ddb79925d90b2d12582e2dee3380de6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/71f1d9fd4ae2c2fc90d5487bdf2096f9eb5898d9"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 37,
      "deletions": 16
    },
    "files": [
      {
        "sha": "723e11470836006ff03b384792b75b007894c37f",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
        "patch": "@@ -243,8 +243,9 @@ bool CCoinsViewCache::HaveInputs(const CTransaction& tx) const\n     return true;\n }\n \n-double CCoinsViewCache::GetPriority(const CTransaction &tx, int nHeight) const\n+double CCoinsViewCache::GetPriority(const CTransaction &tx, int nHeight, CAmount &inChainInputValue) const\n {\n+    inChainInputValue = 0;\n     if (tx.IsCoinBase())\n         return 0.0;\n     double dResult = 0.0;\n@@ -253,8 +254,9 @@ double CCoinsViewCache::GetPriority(const CTransaction &tx, int nHeight) const\n         const CCoins* coins = AccessCoins(txin.prevout.hash);\n         assert(coins);\n         if (!coins->IsAvailable(txin.prevout.n)) continue;\n-        if (coins->nHeight < nHeight) {\n+        if (coins->nHeight <= nHeight) {\n             dResult += coins->vout[txin.prevout.n].nValue * (nHeight-coins->nHeight);\n+            inChainInputValue += coins->vout[txin.prevout.n].nValue;\n         }\n     }\n     return tx.ComputePriority(dResult);"
      },
      {
        "sha": "d174422100d3f424bce348fc77271197d17affc8",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
        "patch": "@@ -456,8 +456,12 @@ class CCoinsViewCache : public CCoinsViewBacked\n     //! Check whether all prevouts of the transaction are present in the UTXO set represented by this view\n     bool HaveInputs(const CTransaction& tx) const;\n \n-    //! Return priority of tx at height nHeight\n-    double GetPriority(const CTransaction &tx, int nHeight) const;\n+    /**\n+     * Return priority of tx at height nHeight. Also calculate the sum of the values of the inputs\n+     * that are already in the chain.  These are the inputs that will age and increase priority as\n+     * new blocks are added to the chain.\n+     */\n+    double GetPriority(const CTransaction &tx, int nHeight, CAmount &inChainInputValue) const;\n \n     const CTxOut &GetOutputFor(const CTxIn& input) const;\n "
      },
      {
        "sha": "55b0517349e44f7ef86cf8eb9b5e404e395a25b7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
        "patch": "@@ -950,9 +950,10 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         CAmount nValueOut = tx.GetValueOut();\n         CAmount nFees = nValueIn-nValueOut;\n-        double dPriority = view.GetPriority(tx, chainActive.Height());\n+        CAmount inChainInputValue;\n+        double dPriority = view.GetPriority(tx, chainActive.Height(), inChainInputValue);\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx), inChainInputValue);\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n@@ -964,7 +965,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n         if (mempoolRejectFee > 0 && nFees < mempoolRejectFee) {\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", false, strprintf(\"%d < %d\", nFees, mempoolRejectFee));\n-        } else if (GetBoolArg(\"-relaypriority\", DEFAULT_RELAYPRIORITY) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        } else if (GetBoolArg(\"-relaypriority\", DEFAULT_RELAYPRIORITY) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(entry.GetPriority(chainActive.Height() + 1))) {\n             // Require that free transactions have sufficient priority to be mined in the next block.\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient priority\");\n         }"
      },
      {
        "sha": "644c3da213a99d54835c26dccf82e298cfeb6c32",
        "filename": "src/test/policyestimator_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/test/policyestimator_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/test/policyestimator_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/policyestimator_tests.cpp?ref=c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
        "patch": "@@ -196,7 +196,7 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n \n     // Test that if the mempool is limited, estimateSmartFee won't return a value below the mempool min fee\n     // and that estimateSmartPriority returns essentially an infinite value\n-    mpool.addUnchecked(tx.GetHash(),  CTxMemPoolEntry(tx, feeV[0][5], GetTime(), priV[1][5], blocknum, mpool.HasNoInputsOf(tx)));\n+    mpool.addUnchecked(tx.GetHash(),  entry.Fee(feeV[0][5]).Time(GetTime()).Priority(priV[1][5]).Height(blocknum).FromTx(tx, &mpool));\n     // evict that transaction which should set a mempool min fee of minRelayTxFee + feeV[0][5]\n     mpool.TrimToSize(1);\n     BOOST_CHECK(mpool.GetMinFee(1).GetFeePerK() > feeV[0][5]);"
      },
      {
        "sha": "351870014de1f901d85fc7290359455c3e4453ba",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
        "patch": "@@ -144,8 +144,13 @@ TestChain100Setup::~TestChain100Setup()\n \n \n CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(CMutableTransaction &tx, CTxMemPool *pool) {\n-    return CTxMemPoolEntry(tx, nFee, nTime, dPriority, nHeight,\n-                           pool ? pool->HasNoInputsOf(tx) : hadNoDependencies);\n+    CTransaction txn(tx);\n+    bool hasNoDependencies = pool ? pool->HasNoInputsOf(tx) : hadNoDependencies;\n+    // Hack to assume either its completely dependent on other mempool txs or not at all\n+    CAmount inChainValue = hasNoDependencies ? txn.GetValueOut() : 0;\n+\n+    return CTxMemPoolEntry(txn, nFee, nTime, dPriority, nHeight,\n+                           hasNoDependencies, inChainValue);\n }\n \n void Shutdown(void* parg)"
      },
      {
        "sha": "6d1df0b3d1452c43296bc3018782da2a54f9bec8",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
        "patch": "@@ -19,10 +19,10 @@\n using namespace std;\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n-                                 int64_t _nTime, double _entryPriority,\n-                                 unsigned int _entryHeight, bool poolHasNoInputsOf):\n+                                 int64_t _nTime, double _entryPriority, unsigned int _entryHeight,\n+                                 bool poolHasNoInputsOf, CAmount _inChainInputValue):\n     tx(_tx), nFee(_nFee), nTime(_nTime), entryPriority(_entryPriority), entryHeight(_entryHeight),\n-    hadNoDependencies(poolHasNoInputsOf)\n+    hadNoDependencies(poolHasNoInputsOf), inChainInputValue(_inChainInputValue)\n {\n     nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n     nModSize = tx.CalculateModifiedSize(nTxSize);\n@@ -31,6 +31,8 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n     nCountWithDescendants = 1;\n     nSizeWithDescendants = nTxSize;\n     nFeesWithDescendants = nFee;\n+    CAmount nValueIn = tx.GetValueOut()+nFee;\n+    assert(inChainInputValue <= nValueIn);\n }\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTxMemPoolEntry& other)\n@@ -41,9 +43,10 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTxMemPoolEntry& other)\n double\n CTxMemPoolEntry::GetPriority(unsigned int currentHeight) const\n {\n-    CAmount nValueIn = tx.GetValueOut()+nFee;\n-    double deltaPriority = ((double)(currentHeight-entryHeight)*nValueIn)/nModSize;\n+    double deltaPriority = ((double)(currentHeight-entryHeight)*inChainInputValue)/nModSize;\n     double dResult = entryPriority + deltaPriority;\n+    if (dResult < 0) // This should only happen if it was called with a height below entry height\n+        dResult = 0;\n     return dResult;\n }\n "
      },
      {
        "sha": "c470bbe28f7d608bde1789dbdb904ff8cdf60c6a",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0353064ddf71ad103bd19f6e7c10ff8e240ac46/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=c0353064ddf71ad103bd19f6e7c10ff8e240ac46",
        "patch": "@@ -66,6 +66,7 @@ class CTxMemPoolEntry\n     double entryPriority; //! Priority when entering the mempool\n     unsigned int entryHeight; //! Chain height when entering the mempool\n     bool hadNoDependencies; //! Not dependent on any other txs when it entered the mempool\n+    CAmount inChainInputValue; //! Sum of all txin values that are already in blockchain\n \n     // Information about descendants of this transaction that are in the\n     // mempool; if we remove this transaction we must remove all of these\n@@ -78,10 +79,15 @@ class CTxMemPoolEntry\n \n public:\n     CTxMemPoolEntry(const CTransaction& _tx, const CAmount& _nFee,\n-                    int64_t _nTime, double _entryPriority, unsigned int _entryHeight, bool poolHasNoInputsOf);\n+                    int64_t _nTime, double _entryPriority, unsigned int _entryHeight,\n+                    bool poolHasNoInputsOf, CAmount _inChainInputValue);\n     CTxMemPoolEntry(const CTxMemPoolEntry& other);\n \n     const CTransaction& GetTx() const { return this->tx; }\n+    /**\n+     * Fast calculation of lower bound of current priority as update\n+     * from entry priority. Only inputs that were originally in-chain will age.\n+     */\n     double GetPriority(unsigned int currentHeight) const;\n     const CAmount& GetFee() const { return nFee; }\n     size_t GetTxSize() const { return nTxSize; }"
      }
    ]
  }
]