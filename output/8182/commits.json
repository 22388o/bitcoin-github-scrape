[
  {
    "sha": "0b4e712f10d20b23e0d91c78dff9f5296104fcbc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjRlNzEyZjEwZDIwYjIzZTBkOTFjNzhkZmY5ZjUyOTYxMDRmY2Jj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T08:27:33Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-09T07:14:53Z"
      },
      "message": "[Refactor] CreateTransaction(): use bit flags\nThis will allow to add flags for RBF and other features",
      "tree": {
        "sha": "d0928c886d64f65eb7321838d68709e9496d3d3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0928c886d64f65eb7321838d68709e9496d3d3a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b4e712f10d20b23e0d91c78dff9f5296104fcbc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWRdtAAoJECnUvLZBb1PsqqoQAIZdLlKw7ts0E/pCpfY/cEya\nBw52rO1SVI7RW2TLBRry3o53raBwVwgS95XdZbVmDGnkES6Zt4+JrWisQY/SNRuU\nRDF0TJ4UWBJiUWzy7MsBx5hy0DJqTOClCZDPKG3svAHTmGD95lYSSwXofmZTIJg+\nSuw8XgV0atGMd6Ixp9drw6nsepjJQzCjKSe7DHARcHfm02ji9ebdn5l6ElyIE96Z\n3Bs558cPVQ3aWxwlD327M0MjdGA0cp/elc9cH93Q6AHWZxhohRHao3VM6ME/8UNz\nHyesS0SpZRr5mwftIJaSRUCK7gHVytBOq/EeOm2/qZXcEz8RlmZPr4VexUBjIo/0\n8WCseudcqMuFcl0E9eMXZgGC4TOcazIjWcsbZFvSjeeW7Dw1JR45+G7IYqRtslGu\n84mNlKQ+qv0Wu/18cp8sqD9nsIFNN26gVubfE0CDil0KEmrbTXg64Y6Hd18/08kW\nbznsDTMlZvm8JIpUXOQo3z6NaBIo6lzsdwjwkyWIC5kWd4abo+XQ/BlmWx1Fxygk\n83q0SNZ1zrXzskXOJTRGyN1lPHAtPW0XJ6sRgutbYyNDlUU4SaJ0PvX9aRoCyPpW\n8O8kCsQwr+jw+cBuvkdYjZ7Mv60OFTaVpNaCZGYIGKUaL0/VMdZkXL0ZnbRyyqd+\nMlLgpnjzyUnWdeXtP1zt\n=Da1D\n-----END PGP SIGNATURE-----",
        "payload": "tree d0928c886d64f65eb7321838d68709e9496d3d3a\nparent 0b5279f89c9afcb3af98880cc65cecd25ce29af6\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449131253 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1465456493 +0200\n\n[Refactor] CreateTransaction(): use bit flags\nThis will allow to add flags for RBF and other features\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b4e712f10d20b23e0d91c78dff9f5296104fcbc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b4e712f10d20b23e0d91c78dff9f5296104fcbc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b4e712f10d20b23e0d91c78dff9f5296104fcbc/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b5279f89c9afcb3af98880cc65cecd25ce29af6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b5279f89c9afcb3af98880cc65cecd25ce29af6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b5279f89c9afcb3af98880cc65cecd25ce29af6"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 9,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ee1e7e0b775514171bb7627229b4f8729dff78ae",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b4e712f10d20b23e0d91c78dff9f5296104fcbc/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b4e712f10d20b23e0d91c78dff9f5296104fcbc/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0b4e712f10d20b23e0d91c78dff9f5296104fcbc",
        "patch": "@@ -2004,7 +2004,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool ov\n \n     CReserveKey reservekey(this);\n     CWalletTx wtx;\n-    if (!CreateTransaction(vecSend, wtx, reservekey, nFeeRet, nChangePosInOut, strFailReason, &coinControl, false))\n+    if (!CreateTransaction(vecSend, wtx, reservekey, nFeeRet, nChangePosInOut, strFailReason, &coinControl, CREATE_TX_DONT_SIGN))\n         return false;\n \n     if (nChangePosInOut != -1)\n@@ -2029,7 +2029,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool ov\n }\n \n bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet,\n-                                int& nChangePosInOut, std::string& strFailReason, const CCoinControl* coinControl, bool sign)\n+                                int& nChangePosInOut, std::string& strFailReason, const CCoinControl* coinControl, unsigned int flags)\n {\n     CAmount nValue = 0;\n     int nChangePosRequest = nChangePosInOut;\n@@ -2261,7 +2261,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                     bool signSuccess;\n                     const CScript& scriptPubKey = coin.first->vout[coin.second].scriptPubKey;\n                     CScript& scriptSigRes = txNew.vin[nIn].scriptSig;\n-                    if (sign)\n+                    if (!(flags & CREATE_TX_DONT_SIGN))\n                         signSuccess = ProduceSignature(TransactionSignatureCreator(this, &txNewConst, nIn, SIGHASH_ALL), scriptPubKey, scriptSigRes);\n                     else\n                         signSuccess = ProduceSignature(DummySignatureCreator(this), scriptPubKey, scriptSigRes);\n@@ -2277,7 +2277,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 unsigned int nBytes = ::GetSerializeSize(txNew, SER_NETWORK, PROTOCOL_VERSION);\n \n                 // Remove scriptSigs if we used dummy signatures for fee calculation\n-                if (!sign) {\n+                if (flags & CREATE_TX_DONT_SIGN) {\n                     BOOST_FOREACH (CTxIn& vin, txNew.vin)\n                         vin.scriptSig = CScript();\n                 }"
      },
      {
        "sha": "63b8f9aad6a8dd490bb1bc75f6483d31b2222276",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b4e712f10d20b23e0d91c78dff9f5296104fcbc/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b4e712f10d20b23e0d91c78dff9f5296104fcbc/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0b4e712f10d20b23e0d91c78dff9f5296104fcbc",
        "patch": "@@ -532,6 +532,10 @@ class CAccountingEntry\n     std::vector<char> _ssExtra;\n };\n \n+enum CreateTransactionFlags {\n+    CREATE_TX_DEFAULT     = 0,\n+    CREATE_TX_DONT_SIGN   = (1U << 0)\n+};\n \n /** \n  * A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n@@ -748,7 +752,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * @note passing nChangePosInOut as -1 will result in setting a random position\n      */\n     bool CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosInOut,\n-                           std::string& strFailReason, const CCoinControl *coinControl = NULL, bool sign = true);\n+                           std::string& strFailReason, const CCoinControl *coinControl = NULL, unsigned int flags = CREATE_TX_DEFAULT);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n \n     bool AddAccountingEntry(const CAccountingEntry&, CWalletDB & pwalletdb);"
      }
    ]
  },
  {
    "sha": "38cd669044e00874a1851fdc394f6f53b5c978ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGNkNjY5MDQ0ZTAwODc0YTE4NTFmZGMzOTRmNmY1M2I1Yzk3OGVk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T08:53:23Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-09T07:14:53Z"
      },
      "message": "Allow to opt-into RBF when creating a transaction",
      "tree": {
        "sha": "9676c74ea838f4bce1218dd23eeed2d5abef2d53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9676c74ea838f4bce1218dd23eeed2d5abef2d53"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38cd669044e00874a1851fdc394f6f53b5c978ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWRdtAAoJECnUvLZBb1PszYAP/3lcIa5aXmL7v/exdTdi89xC\nCsS8UYyTTSiAFOycdux+cpRxW5ciATl8M8wGV3a1YySnXt08KtYRPR4bp9GHhLSt\n7M0gZhE9sSXEaD3HhVtb4UKBEtju4ZDza3v5HOcUqAIQ1Z3QYh9tvQjLzoczKVBn\naqDXjWA3x8gYnoB8Z7r+TGtauHWswEfQd3o2mW1JWuKU76Nv0DiAlets3TBzgSlM\nR5dnC5MGL6sqS5O2IQZMOn/LKAC7d/gqd78WW4aPm/61Tv1JQ/B8Y5qyo6ZO1IL+\nsaQzhh3h9MWM+I3h/LI1dbNd2JUJsoWHYzTRIqLsa1tWwobnSJoXINp00VSihlJZ\nvKpMZ7f74u1kXbmAh2d9cBGtFYURzEJuU6C5Ecjq0A/iz3iBPnCAudcKtr9dr4PO\n7zTRvu5jBoJdbWZz+0uqZhgIIjtFTKgnxIJ9f2tl80+FK5YiMJUpi6BJQpLdlMeH\nkcAWH9v8kWon+vEyFqGCJ1EtYWUBGxvzSbXYYRWmnqEi11XDWi098xPfpVPj2+Fg\nMGp04wMgUOtyPhtUQYIqRQEh5LGhNYyof7XbBjNw0KQqMk4hSEbkpApgpDp+y8zk\nA4qh2vBIJDGdfRov6vumKQDGOTBCru9tM3jHSG3PYI0uv5cOFxfhhF1skQaJr0v+\nO4yAyKU/84lhK2LwaZlF\n=UwiZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 9676c74ea838f4bce1218dd23eeed2d5abef2d53\nparent 0b4e712f10d20b23e0d91c78dff9f5296104fcbc\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1449132803 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1465456493 +0200\n\nAllow to opt-into RBF when creating a transaction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38cd669044e00874a1851fdc394f6f53b5c978ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38cd669044e00874a1851fdc394f6f53b5c978ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38cd669044e00874a1851fdc394f6f53b5c978ed/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b4e712f10d20b23e0d91c78dff9f5296104fcbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b4e712f10d20b23e0d91c78dff9f5296104fcbc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b4e712f10d20b23e0d91c78dff9f5296104fcbc"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "aeb6a1cdeece79faaedebe340f243fdbe3eec3c7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38cd669044e00874a1851fdc394f6f53b5c978ed/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38cd669044e00874a1851fdc394f6f53b5c978ed/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=38cd669044e00874a1851fdc394f6f53b5c978ed",
        "patch": "@@ -2251,7 +2251,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 // nLockTime set above actually works.\n                 BOOST_FOREACH(const PAIRTYPE(const CWalletTx*,unsigned int)& coin, setCoins)\n                     txNew.vin.push_back(CTxIn(coin.first->GetHash(),coin.second,CScript(),\n-                                              std::numeric_limits<unsigned int>::max()-1));\n+                                              std::numeric_limits<unsigned int>::max() - ((flags & CREATE_TX_RBF_OPT_IN) ? 2 : 1) ));\n \n                 // Sign\n                 int nIn = 0;"
      },
      {
        "sha": "be3477fbfbc7821aeea0b93561e38a628e36f9c6",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38cd669044e00874a1851fdc394f6f53b5c978ed/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38cd669044e00874a1851fdc394f6f53b5c978ed/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=38cd669044e00874a1851fdc394f6f53b5c978ed",
        "patch": "@@ -534,7 +534,8 @@ class CAccountingEntry\n \n enum CreateTransactionFlags {\n     CREATE_TX_DEFAULT     = 0,\n-    CREATE_TX_DONT_SIGN   = (1U << 0)\n+    CREATE_TX_DONT_SIGN   = (1U << 0),\n+    CREATE_TX_RBF_OPT_IN  = (1U << 1)\n };\n \n /** "
      }
    ]
  },
  {
    "sha": "2713dc7d3898b25ec0b197c90cc92a3f405f1433",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzEzZGM3ZDM4OThiMjVlYzBiMTk3YzkwY2M5MmEzZjQwNWYxNDMz",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-05T14:55:41Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-09T07:16:07Z"
      },
      "message": "[Qt] Add simple optin-RBF checkbox and confirmation info",
      "tree": {
        "sha": "e16e0a7bd74cd6261ffc3d85381483fe16c3bd77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e16e0a7bd74cd6261ffc3d85381483fe16c3bd77"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2713dc7d3898b25ec0b197c90cc92a3f405f1433",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWRe3AAoJECnUvLZBb1PsI04P/23X6sRfMF09wZMmsbesChuw\nrjkzuszNBsITPH1Q2g8Q16Ednhmw+ST6Q7/DBEpy2QDn+0Jgw5znZtosaSprkElQ\nhaTNYxHK2ql1F93+FRlN8dCpWV8UdPZ5dTX+oWYE9bm7EqoG4k4p/SvcVcKqrxS5\n+U1Ho/RYVEZoJ3pbz7TF/00X/LJ8wvVrPBIjR9smzJa/On4GowstIbpj1qWXLxb/\n85R+HQZNE/wk16R7WAjUL01IJttmMmqiOEc13J0SOL94lSNnhXkxItd5aDOyTpgS\nfzPQrJ64AodNebanmmd17xHHTYs2kyGTvqU2jkZ1e2ERpss16nB93pntsMOFc9kA\nqv+ReV9YMiT6w+zkvfwiBhl6v9dlOJQ8XiGlB6Nq1dLs8P+La57Q9avhjRDAnkIr\nib+sJgdGU2NAI7uoohDkALrC6E1Bf8tEZmbVq7UCDfKI0V5zLWUqFhXlZJl89BlS\nb2wmnKmNmFHjJS4EQ9cdDNSGpyN/AjMTcqfmqMV046AJjsE47spzhnwO98+/Vg9d\nQwjROlR/5yVm6mjDF2OrVtFlfBRTtajwGvR50Baq5ID3IdlTzRLi3+eFKBExalcQ\nGDIbBuxtvQNB1P5iNr+kGkatAWZmB6dp5JCXKlbgcYmYxXqlsIqJXU9v4Elt08ai\ntaDiWc+Ewy2zxIegz5wa\n=mR7n\n-----END PGP SIGNATURE-----",
        "payload": "tree e16e0a7bd74cd6261ffc3d85381483fe16c3bd77\nparent 38cd669044e00874a1851fdc394f6f53b5c978ed\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1459868141 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1465456567 +0200\n\n[Qt] Add simple optin-RBF checkbox and confirmation info\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2713dc7d3898b25ec0b197c90cc92a3f405f1433",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2713dc7d3898b25ec0b197c90cc92a3f405f1433",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2713dc7d3898b25ec0b197c90cc92a3f405f1433/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38cd669044e00874a1851fdc394f6f53b5c978ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38cd669044e00874a1851fdc394f6f53b5c978ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38cd669044e00874a1851fdc394f6f53b5c978ed"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 22,
      "deletions": 5
    },
    "files": [
      {
        "sha": "223544dbbababb1805ada54b94646f586b11d2bf",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2713dc7d3898b25ec0b197c90cc92a3f405f1433/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2713dc7d3898b25ec0b197c90cc92a3f405f1433/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=2713dc7d3898b25ec0b197c90cc92a3f405f1433",
        "patch": "@@ -1256,6 +1256,16 @@\n        </property>\n       </widget>\n      </item>\n+     <item>\n+      <widget class=\"QCheckBox\" name=\"optInRBF\">\n+       <property name=\"text\">\n+        <string>Allow Replace-By-Fee</string>\n+       </property>\n+       <property name=\"toolTip\">\n+        <string>Signals that this transaction can be replaced with a transation paying higher fees (as long as the transaction is NOT confirmed).</string>\n+       </property>\n+      </widget>\n+     </item>\n      <item>\n       <spacer name=\"horizontalSpacer\">\n        <property name=\"orientation\">"
      },
      {
        "sha": "c2e97b47a51ef7778bf5950c14d71a4574f627f4",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2713dc7d3898b25ec0b197c90cc92a3f405f1433/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2713dc7d3898b25ec0b197c90cc92a3f405f1433/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=2713dc7d3898b25ec0b197c90cc92a3f405f1433",
        "patch": "@@ -233,9 +233,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n     WalletModelTransaction currentTransaction(recipients);\n     WalletModel::SendCoinsReturn prepareStatus;\n     if (model->getOptionsModel()->getCoinControlFeatures()) // coin control enabled\n-        prepareStatus = model->prepareTransaction(currentTransaction, CoinControlDialog::coinControl);\n+        prepareStatus = model->prepareTransaction(currentTransaction, CoinControlDialog::coinControl, ui->optInRBF->isChecked());\n     else\n-        prepareStatus = model->prepareTransaction(currentTransaction);\n+        prepareStatus = model->prepareTransaction(currentTransaction, NULL, ui->optInRBF->isChecked());\n \n     // process prepareStatus and on error generate message shown to user\n     processSendCoinsReturn(prepareStatus,\n@@ -314,6 +314,13 @@ void SendCoinsDialog::on_sendButton_clicked()\n     questionString.append(QString(\"<span style='font-size:10pt;font-weight:normal;'><br />(=%2)</span>\")\n         .arg(alternativeUnits.join(\" \" + tr(\"or\") + \"<br />\")));\n \n+    if (ui->optInRBF->isChecked())\n+    {\n+        questionString.append(\"<hr /><span style='color:#aa0000;'>\");\n+        questionString.append(tr(\"This transaction is replacable (optin-RBF)!\"));\n+        questionString.append(\"</span>\");\n+    }\n+\n     SendConfirmationDialog confirmationDialog(tr(\"Confirm send coins\"),\n         questionString.arg(formatted.join(\"<br />\")), SEND_CONFIRM_DELAY, this);\n     confirmationDialog.exec();"
      },
      {
        "sha": "c1d3f17ec657cc57fcdd806e08fd868cc038473e",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2713dc7d3898b25ec0b197c90cc92a3f405f1433/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2713dc7d3898b25ec0b197c90cc92a3f405f1433/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=2713dc7d3898b25ec0b197c90cc92a3f405f1433",
        "patch": "@@ -189,7 +189,7 @@ bool WalletModel::validateAddress(const QString &address)\n     return addressParsed.IsValid();\n }\n \n-WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransaction &transaction, const CCoinControl *coinControl)\n+WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransaction &transaction, const CCoinControl *coinControl, bool optInRBF)\n {\n     CAmount total = 0;\n     bool fSubtractFeeFromAmount = false;\n@@ -274,7 +274,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n \n         CWalletTx *newTx = transaction.getTransaction();\n         CReserveKey *keyChange = transaction.getPossibleKeyChange();\n-        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, nChangePosRet, strFailReason, coinControl);\n+        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, nChangePosRet, strFailReason, coinControl, optInRBF ? CREATE_TX_RBF_OPT_IN : CREATE_TX_DEFAULT);\n         transaction.setTransactionFee(nFeeRequired);\n         if (fSubtractFeeFromAmount && fCreated)\n             transaction.reassignAmounts(nChangePosRet);"
      },
      {
        "sha": "7fe6cba79295a65af5a80bf825e743d1c2ac5a65",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2713dc7d3898b25ec0b197c90cc92a3f405f1433/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2713dc7d3898b25ec0b197c90cc92a3f405f1433/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=2713dc7d3898b25ec0b197c90cc92a3f405f1433",
        "patch": "@@ -151,7 +151,7 @@ class WalletModel : public QObject\n     };\n \n     // prepare transaction for getting txfee before sending coins\n-    SendCoinsReturn prepareTransaction(WalletModelTransaction &transaction, const CCoinControl *coinControl = NULL);\n+    SendCoinsReturn prepareTransaction(WalletModelTransaction &transaction, const CCoinControl *coinControl = NULL, bool optInRBF = false);\n \n     // Send coins to a list of recipients\n     SendCoinsReturn sendCoins(WalletModelTransaction &transaction);"
      }
    ]
  },
  {
    "sha": "d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjNjNzNlY2RiMDVhNDVhMjBkM2RjNzlmNzlmY2Q1OTYzYTlmOGMx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-06T14:20:08Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-09T07:16:07Z"
      },
      "message": "[Qt] show mempool conflicts in the UI\n\nOn RPC level, we show possible mempool conflicts already via detecting them over the CWallet::GetConflicts() function.\nCurrently, the GUI shows only conflicts with transaction in a block.\n\nThis results in displaying replaced transaction (RBF) wrong.\n\nThis PR will mark unconfirmed transactions that are _not_ in our mempool and have conflicts as conflicted.",
      "tree": {
        "sha": "0929ad23ad991ec07651e8716c8080ab11226953",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0929ad23ad991ec07651e8716c8080ab11226953"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWRe3AAoJECnUvLZBb1PsEZAQAIemfIINYoLzXNMSOm3Rom3Z\n6X5m0nybkgi/BehSh7QId01VsfGH63LgsFWx88+jLrkeSsVjVI7NEHGRFObbQM9n\nj1JDjcBnO+p9nmyT9DGiHgajnArKm4Amj1wbL26E7JnS6iCAkckqpvZZWdARDTvn\nm1WLobHE1dOR8Mwv/Qpm75dUljN3xbYlTYHqnA3Xwf/S0DedLpKjY+RUrXTft3fF\nkUgNirmwsKYl6PIcZiSlHWG7MPLudHUfU6SZClF7dcw9HIe+xDaRcwUFBXI5wrzl\nm7Pyhh9edz/UF3Y4PN8tylQG/NbbmU5glhECquIAEIsLZGhlM3td9sPqnmZUhlu2\nufu/MpnJVd8rNsbjzt4BqF34N3xv2OvYUcK8OWm/73Cfi93Ca+3iW9jnJqdv6D4g\ngRcE4kvSTVvH4Oom+ER7aAdwPfoFSttAX+eFpEEv9QCdkTdNI2+4uxaTl6RUwHIS\nMvuPcmGdqRgQNpqlCpqGesEJSjotkmE5J5jhj2bcLAAjLx7dyHC9XU3usSHe43Yd\nPfQzeIlH5SxGOIrD6dLr5TDoUpjF2OMdmYdwMWov1UcfXUkghy58mSPtg90/0dzv\n1AWss9y1bPRcEWl8wePdgExqIsJAx9JqU6/3qwuaEjqhnI2T5tSErM/9yWNgNwSx\niiFj1ZvMpmtaQyVxD63y\n=zPHl\n-----END PGP SIGNATURE-----",
        "payload": "tree 0929ad23ad991ec07651e8716c8080ab11226953\nparent 2713dc7d3898b25ec0b197c90cc92a3f405f1433\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1459952408 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1465456567 +0200\n\n[Qt] show mempool conflicts in the UI\n\nOn RPC level, we show possible mempool conflicts already via detecting them over the CWallet::GetConflicts() function.\nCurrently, the GUI shows only conflicts with transaction in a block.\n\nThis results in displaying replaced transaction (RBF) wrong.\n\nThis PR will mark unconfirmed transactions that are _not_ in our mempool and have conflicts as conflicted.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2713dc7d3898b25ec0b197c90cc92a3f405f1433",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2713dc7d3898b25ec0b197c90cc92a3f405f1433",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2713dc7d3898b25ec0b197c90cc92a3f405f1433"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8c62239c9133eeeafa6156cadfb31cbfa1393373",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1",
        "patch": "@@ -239,6 +239,8 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n         else if (status.depth == 0)\n         {\n             status.status = TransactionStatus::Unconfirmed;\n+            if (!wtx.InMempool() && wtx.GetConflicts().size())\n+                status.status = TransactionStatus::Conflicted;\n             if (wtx.isAbandoned())\n                 status.status = TransactionStatus::Abandoned;\n         }"
      }
    ]
  },
  {
    "sha": "ce2651580b4e40c3a3b26cd0cf82f960610e231a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTI2NTE1ODBiNGU0MGMzYTNiMjZjZDBjZjgyZjk2MDYxMGUyMzFh",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-05-07T19:15:49Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-09T09:11:19Z"
      },
      "message": "[Qt] Add simple way to increase the transaction fee",
      "tree": {
        "sha": "abad68af4564f33642a183ca2d60302fcbf9d2d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/abad68af4564f33642a183ca2d60302fcbf9d2d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce2651580b4e40c3a3b26cd0cf82f960610e231a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWTK4AAoJECnUvLZBb1Ps2XcP/0ciQegtg0K6b+/L3iKSEl+/\n/V/y3N+/QiaqayUe4e3MW/Jho/UxZcM3HuI3kPzAZ9ZbYxn0kUgcN2SaPvk9WshK\noAZeZCbrcAIeWkKXF1HM6z0bBDG1QBWK583h0V+fNCZRtmJ3r1v4KoRx5tKUPDOg\nr9L625s5XxGJmRZS7SU40uwgxiN1LdS42I4w7z2HJBTzKTpNXx8MUcB3B1Qba+dl\nNSgLwMYbAjXC0F/pXsnn/nAd7rK7jNi3BwZ3k8ujXdLofL7CBgJslDvwTrsWUXpC\nv4K97AACTYizeV7VTnMVFMPXlvdf5lCxAmTaRNPVFsuM7iLvEsdCDY0XsWhhD3mW\nhg6foBIdAdVQrhGTDw4iLdDAdNmSaydVmLb/KY9nWcwlTmjc8/lUq1Nx0bAaU/D8\noIV8Ln0nvEOKSRdOY43p4OlxrF1CZqTn3Oy/6TBd/sm9HVBA6QaOJD+uHhpVDTz5\nTf6t2V0Jz6of+A4P1rjRm0DXJwmKqmDPcD54WVBRpHroSlA6MJHAFSQtiGPhnKpV\nxVrSMekvdZqORunBMr7X9odTkFb6a+N0aCQFcZ15OMVVK9OCLqzU8LD8pTFtSFYd\nUtfbj8vh084cv7M4btDvKeNKmT/F8S59zd6ot7ODUxqvyS5LVaHwj+eNTR24OxoX\nRqUyBg+bN9yeNMTGBQUH\n=Cxfu\n-----END PGP SIGNATURE-----",
        "payload": "tree abad68af4564f33642a183ca2d60302fcbf9d2d6\nparent d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1462648549 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1465463479 +0200\n\n[Qt] Add simple way to increase the transaction fee\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce2651580b4e40c3a3b26cd0cf82f960610e231a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce2651580b4e40c3a3b26cd0cf82f960610e231a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce2651580b4e40c3a3b26cd0cf82f960610e231a/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d63c73ecdb05a45a20d3dc79f79fcd5963a9f8c1"
      }
    ],
    "stats": {
      "total": 228,
      "additions": 219,
      "deletions": 9
    },
    "files": [
      {
        "sha": "e33afc2f8968a534cba83464a865ec486ebba3c6",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -1259,7 +1259,7 @@\n      <item>\n       <widget class=\"QCheckBox\" name=\"optInRBF\">\n        <property name=\"text\">\n-        <string>Allow Replace-By-Fee</string>\n+        <string>Signal Replaceability</string>\n        </property>\n        <property name=\"toolTip\">\n         <string>Signals that this transaction can be replaced with a transation paying higher fees (as long as the transaction is NOT confirmed).</string>"
      },
      {
        "sha": "3bf78ee3297bde7c8d721d35e8b4aee3fc364a61",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -316,9 +316,8 @@ void SendCoinsDialog::on_sendButton_clicked()\n \n     if (ui->optInRBF->isChecked())\n     {\n-        questionString.append(\"<hr /><span style='color:#aa0000;'>\");\n-        questionString.append(tr(\"This transaction is replacable (optin-RBF)!\"));\n-        questionString.append(\"</span>\");\n+        questionString.append(\"<hr />\");\n+        questionString.append(tr(\"This transaction signals replaceability\"));\n     }\n \n     SendConfirmationDialog confirmationDialog(tr(\"Confirm send coins\"),"
      },
      {
        "sha": "aa82049dd0db5c657b9a254d94ec39040a90710b",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -32,6 +32,7 @@\n #include <QScrollBar>\n #include <QSignalMapper>\n #include <QTableView>\n+#include <QTimer>\n #include <QUrl>\n #include <QVBoxLayout>\n \n@@ -138,6 +139,7 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n \n     // Actions\n     abandonAction = new QAction(tr(\"Abandon transaction\"), this);\n+    bumpFeeAction = new QAction(tr(\"Increase transaction fee\"), this);\n     QAction *copyAddressAction = new QAction(tr(\"Copy address\"), this);\n     QAction *copyLabelAction = new QAction(tr(\"Copy label\"), this);\n     QAction *copyAmountAction = new QAction(tr(\"Copy amount\"), this);\n@@ -157,6 +159,7 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     contextMenu->addAction(showDetailsAction);\n     contextMenu->addSeparator();\n     contextMenu->addAction(abandonAction);\n+    contextMenu->addAction(bumpFeeAction);\n     contextMenu->addAction(editLabelAction);\n \n     mapperThirdPartyTxUrls = new QSignalMapper(this);\n@@ -174,6 +177,7 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     connect(view, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextualMenu(QPoint)));\n \n     connect(abandonAction, SIGNAL(triggered()), this, SLOT(abandonTx()));\n+    connect(bumpFeeAction, SIGNAL(triggered()), this, SLOT(bumpTxFee()));\n     connect(copyAddressAction, SIGNAL(triggered()), this, SLOT(copyAddress()));\n     connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(copyLabel()));\n     connect(copyAmountAction, SIGNAL(triggered()), this, SLOT(copyAmount()));\n@@ -370,6 +374,7 @@ void TransactionView::contextualMenu(const QPoint &point)\n     uint256 hash;\n     hash.SetHex(selection.at(0).data(TransactionTableModel::TxHashRole).toString().toStdString());\n     abandonAction->setEnabled(model->transactionCanBeAbandoned(hash));\n+    bumpFeeAction->setEnabled(model->transactionCanBeReplaced(hash));\n \n     if(index.isValid())\n     {\n@@ -395,6 +400,31 @@ void TransactionView::abandonTx()\n     model->getTransactionTableModel()->updateTransaction(hashQStr, CT_UPDATED, false);\n }\n \n+void TransactionView::bumpTxFee()\n+{\n+    if(!transactionView || !transactionView->selectionModel())\n+        return;\n+    QModelIndexList selection = transactionView->selectionModel()->selectedRows(0);\n+\n+    // get the hash from the TxHashRole (QVariant / QString)\n+    uint256 hash;\n+    QString hashQStr = selection.at(0).data(TransactionTableModel::TxHashRole).toString();\n+    hash.SetHex(hashQStr.toStdString());\n+\n+    // Abandon the wallet transaction over the walletModel\n+    if (!model->transactionBumpFee(hash, model->getOptionsModel()->getDisplayUnit()))\n+    {\n+        QMessageBox::critical(0, tr(\"Increase fee error\"),\n+                              tr(\"Could not increase the transaction fee\"));\n+        return;\n+    }\n+\n+    // update the transaction, needs a second CT_NEW to fully decompose the new state\n+    // due to the fact that CT_UPDATED can't handle color/icons updates\n+    model->getTransactionTableModel()->updateTransaction(hashQStr, CT_UPDATED, false);\n+    model->getTransactionTableModel()->updateTransaction(hashQStr, CT_NEW, true);\n+}\n+\n void TransactionView::copyAddress()\n {\n     GUIUtil::copyEntryData(transactionView, 0, TransactionTableModel::AddressRole);"
      },
      {
        "sha": "f669a9ff1b7b3b7e251702ae80b184bd1d7c8846",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -76,6 +76,7 @@ class TransactionView : public QWidget\n     QDateTimeEdit *dateFrom;\n     QDateTimeEdit *dateTo;\n     QAction *abandonAction;\n+    QAction *bumpFeeAction;\n \n     QWidget *createDateRangeWidget();\n \n@@ -99,6 +100,7 @@ private Q_SLOTS:\n     void openThirdPartyTxUrl(QString url);\n     void updateWatchOnlyColumn(bool fHaveWatchOnly);\n     void abandonTx();\n+    void bumpTxFee();\n \n Q_SIGNALS:\n     void doubleClicked(const QModelIndex&);"
      },
      {
        "sha": "fbdd6d7bdbf28c96fd2107ae1e99018182c276b4",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -14,6 +14,7 @@\n #include \"base58.h\"\n #include \"keystore.h\"\n #include \"main.h\"\n+#include \"policy/rbf.h\"\n #include \"sync.h\"\n #include \"ui_interface.h\"\n #include \"wallet/wallet.h\"\n@@ -683,3 +684,56 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     LOCK2(cs_main, wallet->cs_wallet);\n     return wallet->AbandonTransaction(hash);\n }\n+\n+bool WalletModel::transactionCanBeReplaced(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    if (!wtx)\n+        return false;\n+\n+    return (SignalsOptInRBF(*wtx) && wallet->IsFromMe(*wtx));\n+}\n+\n+bool WalletModel::transactionBumpFee(uint256 hash, int displayUnit) const\n+{\n+    CAmount oldFee;\n+    CAmount newFee;\n+    CWalletTx newTx;\n+\n+    // get a new change key\n+    CReserveKey reserveKey(wallet);\n+\n+    {\n+        LOCK2(cs_main, wallet->cs_wallet);\n+\n+        // get the transaction\n+        const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+\n+        // try to recreate the transaction\n+        if (!wallet->BumpFee(*wtx, newTx, reserveKey, oldFee, newFee, 2))\n+            return false;\n+\n+    }\n+\n+    // ask the user for confirmation\n+    // do this without holding the locks\n+    // results in accepting the risk that the fee bump will\n+    // be rejected due to other replacements comming in over -server\n+    // or changed min fee rates\n+    QMessageBox msgBox;\n+    msgBox.setText(tr(\"Increase transaction fee?\"));\n+    msgBox.setInformativeText(tr(\"Would you like to increase the current transaction fee from %1 to %2?\").arg(BitcoinUnits::formatHtmlWithUnit(displayUnit, oldFee), BitcoinUnits::formatHtmlWithUnit(displayUnit, newFee)));\n+    msgBox.setStandardButtons(QMessageBox::Ok | QMessageBox::Cancel);\n+    msgBox.setDefaultButton(QMessageBox::Cancel);\n+    int msgboxRet = msgBox.exec();\n+\n+    {\n+        LOCK2(cs_main, wallet->cs_wallet);\n+        // broadcast the transaction\n+        if (msgboxRet == QMessageBox::Ok)\n+            return wallet->CommitTransaction(newTx, reserveKey);\n+    }\n+    // return\n+    return true;\n+}"
      },
      {
        "sha": "3b5081f4dafe9347d6c954a83df47aec4ea74093",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -203,6 +203,9 @@ class WalletModel : public QObject\n     bool transactionCanBeAbandoned(uint256 hash) const;\n     bool abandonTransaction(uint256 hash) const;\n \n+    bool transactionCanBeReplaced(uint256 hash) const;\n+    bool transactionBumpFee(uint256 hash, int displayUnit) const;\n+\n private:\n     CWallet *wallet;\n     bool fHaveWatchOnly;"
      },
      {
        "sha": "2b5f26dd3d59678499fbb6bc0415f2abf48d87bd",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -2464,7 +2464,8 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     CAmount nFeeOut;\n     string strFailReason;\n \n-    if(!pwalletMain->FundTransaction(tx, nFeeOut, overrideEstimatedFeerate, feeRate, changePosition, strFailReason, includeWatching, lockUnspents, changeAddress))\n+    CReserveKey reservekey(pwalletMain);\n+    if(!pwalletMain->FundTransaction(tx, reservekey, nFeeOut, overrideEstimatedFeerate, feeRate, changePosition, strFailReason, includeWatching, lockUnspents, changeAddress))\n         throw JSONRPCError(RPC_INTERNAL_ERROR, strFailReason);\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "d6fcee27f50a43e524ee45c05a0f099806d072e0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 118,
        "deletions": 3,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -16,6 +16,7 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"policy/policy.h\"\n+#include \"policy/rbf.h\"\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n #include \"script/script.h\"\n@@ -1981,7 +1982,122 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::BumpFee(const CWalletTx& wtxIn, CWalletTx& wtxOut, CReserveKey& reservekeyOut, CAmount& nOldFee, CAmount& newFee, unsigned int blocksToConfirm)\n+{\n+    // ownly bump the fee if the transation signals opt-in-RBF after BIP125\n+    if (!SignalsOptInRBF(wtxIn))\n+        return false;\n+\n+    // calculate the feerate of the old transaction\n+    CAmount nDebit = wtxIn.GetDebit(ISMINE_SPENDABLE);\n+    nOldFee = -(wtxIn.IsFromMe(ISMINE_SPENDABLE) ? wtxIn.GetValueOut() - nDebit : 0);\n+    CFeeRate oldFeeRate(nOldFee, ::GetSerializeSize((CTransaction)wtxIn, SER_NETWORK, PROTOCOL_VERSION));\n+\n+    // check if there are already conflicting transactions with higher feerates\n+    for(const uint256& conflict : wtxIn.GetConflicts())\n+    {\n+        const CWalletTx *wtxC = GetWalletTx(conflict);\n+        if (wtxC)\n+        {\n+            // calculate the feerate of the old transaction\n+            CAmount ncDebit = wtxC->GetDebit(ISMINE_SPENDABLE);\n+            CAmount nCFee = -(wtxC->IsFromMe(ISMINE_SPENDABLE) ? wtxC->GetValueOut() - ncDebit : 0);\n+            CFeeRate conflictedFeeRate(nCFee, ::GetSerializeSize((CTransaction)*wtxC, SER_NETWORK, PROTOCOL_VERSION));\n+            if (conflictedFeeRate > oldFeeRate)\n+                return false;\n+        }\n+    }\n+\n+    // define the new feerate\n+    CFeeRate newFeerate;\n+\n+    // estimate the current feerate\n+    int estimateFoundAtBlocks = blocksToConfirm;\n+    CFeeRate estimateFeeRate = mempool.estimateSmartFee(blocksToConfirm, &estimateFoundAtBlocks);\n+    if (estimateFeeRate == CFeeRate(0))\n+        estimateFeeRate = fallbackFee;\n+\n+    // for now we assume the new transaction only conflicts\n+    // with a single transaction\n+\n+    // create a new fee rate that would be require\n+    // for a transaction replacement of a single conflicting tx\n+    CFeeRate oldFeeRatePlusMinRelayTxFee = oldFeeRate;\n+    oldFeeRatePlusMinRelayTxFee+=CFeeRate(::minRelayTxFee);\n+    newFeerate = oldFeeRatePlusMinRelayTxFee;\n+\n+    if (oldFeeRatePlusMinRelayTxFee < estimateFeeRate)\n+    {\n+        // the new estimated fee is sufficient for a replacment\n+        newFeerate = CFeeRate(estimateFeeRate);\n+    }\n+\n+    // create the conflicting transaction with the new feerate\n+    CTransaction bumpedTx;\n+    if (!RecreateTransactionWithFeeRate(wtxIn, bumpedTx, reservekeyOut, newFeerate, newFee))\n+        return false;\n+\n+    // sign the new transaction\n+    CMutableTransaction tx(bumpedTx);\n+    int nIn = 0;\n+    CTransaction txNewConst(tx);\n+    bool txSignSuccess = false;\n+    for (std::vector<CTxIn>::iterator it(tx.vin.begin()); it != tx.vin.end(); ++it)\n+    {\n+        std::map<uint256, CWalletTx>::const_iterator mi = pwalletMain->mapWallet.find((*it).prevout.hash);\n+        if (mi != pwalletMain->mapWallet.end() && (nIn < (int)(*mi).second.vout.size()))\n+        {\n+            // get the scriptPubKey of the prevout\n+            const CScript& scriptPubKey = (*mi).second.vout[(*it).prevout.n].scriptPubKey;\n+\n+            CScript& scriptSigRes = tx.vin[nIn].scriptSig; //reference to the CMutableTx scriptSig\n+            txSignSuccess = ProduceSignature(TransactionSignatureCreator(pwalletMain, &txNewConst, nIn, SIGHASH_ALL), scriptPubKey, scriptSigRes);\n+\n+            if (!txSignSuccess)\n+                break;\n+        }\n+        nIn++;\n+    }\n+\n+    // form a wallet transaction\n+    *static_cast<CTransaction*>(&wtxOut) = tx;\n+    wtxOut.fTimeReceivedIsTxTime = true;\n+    wtxOut.BindWallet(this);\n+    wtxOut.fFromMe = true;\n+    \n+    return true;\n+}\n+\n+bool CWallet::RecreateTransactionWithFeeRate(const CTransaction& txIn, CTransaction& txOut, CReserveKey& reservekeyOut, const CFeeRate& newFeerate, CAmount& newFeeOut)\n+{\n+    CMutableTransaction tx(txIn);\n+    // remove scriptSigs, the signatures are invalid after mutating the transaction\n+    for (std::vector<CTxIn>::iterator it(tx.vin.begin()); it != tx.vin.end(); ++it)\n+    {\n+        (*it).scriptSig = CScript();\n+    }\n+\n+    // remove \"old\" change outputs\n+    for (std::vector<CTxOut>::iterator it(tx.vout.begin()); it != tx.vout.end();)\n+    {\n+        if (pwalletMain->IsMine(*it) == ISMINE_SPENDABLE)\n+            it = tx.vout.erase(it);\n+        else\n+            ++it;\n+    }\n+\n+    string strFailReason;\n+    int nChangePos = -1;\n+\n+    // re-fund the transaction, a new change output will be added\n+    if(!pwalletMain->FundTransaction(tx, reservekeyOut, newFeeOut, true, newFeerate, nChangePos, strFailReason, false, false))\n+        return false;\n+\n+    txOut = CTransaction(tx);\n+    return true;\n+}\n+\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CReserveKey& reservekeyOut, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n {\n     vector<CRecipient> vecSend;\n \n@@ -2002,9 +2118,8 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool ov\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n         coinControl.Select(txin.prevout);\n \n-    CReserveKey reservekey(this);\n     CWalletTx wtx;\n-    if (!CreateTransaction(vecSend, wtx, reservekey, nFeeRet, nChangePosInOut, strFailReason, &coinControl, CREATE_TX_DONT_SIGN))\n+    if (!CreateTransaction(vecSend, wtx, reservekeyOut, nFeeRet, nChangePosInOut, strFailReason, &coinControl, CREATE_TX_DONT_SIGN))\n         return false;\n \n     if (nChangePosInOut != -1)"
      },
      {
        "sha": "b0ce6f40d3276c366b971ad0bd6dc3857f9cd1c1",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce2651580b4e40c3a3b26cd0cf82f960610e231a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ce2651580b4e40c3a3b26cd0cf82f960610e231a",
        "patch": "@@ -741,11 +741,17 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetUnconfirmedWatchOnlyBalance() const;\n     CAmount GetImmatureWatchOnlyBalance() const;\n \n+    //! bump the fee to the current fee-estimation\n+    bool BumpFee(const CWalletTx& wtxIn, CWalletTx& wtxOut, CReserveKey& reservekeyOut, CAmount& oldFee, CAmount& newFee, unsigned int blocksToConfirm = 2);\n+\n+    //! Creates a conflicting transaction based on a existing transaction providing a new feerate\n+    bool RecreateTransactionWithFeeRate(const CTransaction& txIn, CTransaction& txOut, CReserveKey& reservekeyOut, const CFeeRate& newFeerate, CAmount& newFeeOut);\n+\n     /**\n      * Insert additional inputs into the transaction by\n      * calling CreateTransaction();\n      */\n-    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange = CNoDestination());\n+    bool FundTransaction(CMutableTransaction& tx, CReserveKey& reservekeyOut, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange = CNoDestination());\n \n     /**\n      * Create a new transaction paying the recipients with a set of coins"
      }
    ]
  }
]