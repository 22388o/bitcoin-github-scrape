[
  {
    "sha": "b669ba6bd86a7808e4692bb0cf692b1c95d8d32d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjY5YmE2YmQ4NmE3ODA4ZTQ2OTJiYjBjZjY5MmIxYzk1ZDhkMzJk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-07T16:46:58Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-12T01:28:31Z"
      },
      "message": "gui: Remove warning \"unused variable 'wallet_model'\"",
      "tree": {
        "sha": "f7ac17f01971f64e95ab52011a9e72eb3f7d3c4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7ac17f01971f64e95ab52011a9e72eb3f7d3c4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b68bac83d9ead9e8893785a58fbed6d09cba4b5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b68bac83d9ead9e8893785a58fbed6d09cba4b5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b68bac83d9ead9e8893785a58fbed6d09cba4b5c"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "f7863f55d4d7f049a77c757a4a8ae0b404ef4915",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=b669ba6bd86a7808e4692bb0cf692b1c95d8d32d",
        "patch": "@@ -906,12 +906,8 @@ void RPCConsole::on_lineEdit_returnPressed()\n \n         cmdBeforeBrowsing = QString();\n \n-        WalletModel* wallet_model{nullptr};\n #ifdef ENABLE_WALLET\n-        const int wallet_index = ui->WalletSelector->currentIndex();\n-        if (wallet_index > 0) {\n-            wallet_model = ui->WalletSelector->itemData(wallet_index).value<WalletModel*>();\n-        }\n+        WalletModel* wallet_model = ui->WalletSelector->currentData().value<WalletModel*>();\n \n         if (m_last_wallet_model != wallet_model) {\n             if (wallet_model) {"
      }
    ]
  },
  {
    "sha": "fca4bcdc322ed507b223a908ff7bf16795862a0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmY2E0YmNkYzMyMmVkNTA3YjIyM2E5MDhmZjdiZjE2Nzk1ODYyYTBm",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-04T18:44:27Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-12T01:28:31Z"
      },
      "message": "gui: Show wallet selector on console window if there are wallets loaded",
      "tree": {
        "sha": "7010fa8a57e651a217d91e31ca15e5300aede70b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7010fa8a57e651a217d91e31ca15e5300aede70b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fca4bcdc322ed507b223a908ff7bf16795862a0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fca4bcdc322ed507b223a908ff7bf16795862a0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fca4bcdc322ed507b223a908ff7bf16795862a0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fca4bcdc322ed507b223a908ff7bf16795862a0f/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b669ba6bd86a7808e4692bb0cf692b1c95d8d32d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "95128a32a8b2b484dafb9bb9a58b77189edcdbcd",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fca4bcdc322ed507b223a908ff7bf16795862a0f/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fca4bcdc322ed507b223a908ff7bf16795862a0f/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=fca4bcdc322ed507b223a908ff7bf16795862a0f",
        "patch": "@@ -703,7 +703,7 @@ void RPCConsole::addWallet(WalletModel * const walletModel)\n         // First wallet added, set to default so long as the window isn't presently visible (and potentially in use)\n         ui->WalletSelector->setCurrentIndex(1);\n     }\n-    if (ui->WalletSelector->count() > 2) {\n+    if (ui->WalletSelector->count() > 1) {\n         ui->WalletSelector->setVisible(true);\n         ui->WalletSelectorLabel->setVisible(true);\n     }\n@@ -712,7 +712,7 @@ void RPCConsole::addWallet(WalletModel * const walletModel)\n void RPCConsole::removeWallet(WalletModel * const walletModel)\n {\n     ui->WalletSelector->removeItem(ui->WalletSelector->findData(QVariant::fromValue(walletModel)));\n-    if (ui->WalletSelector->count() == 2) {\n+    if (ui->WalletSelector->count() == 1) {\n         ui->WalletSelector->setVisible(false);\n         ui->WalletSelectorLabel->setVisible(false);\n     }"
      }
    ]
  },
  {
    "sha": "e7a1ff13efd06b1508531094db0cf08a586660e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplN2ExZmYxM2VmZDA2YjE1MDg1MzEwOTRkYjBjZjA4YTU4NjY2MGUx",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-14T15:51:53Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-14T23:52:21Z"
      },
      "message": "wip: rpc: Add /nowallet endpoint",
      "tree": {
        "sha": "e8649e112fd40fb27b973bb141c49aeb1bab31a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8649e112fd40fb27b973bb141c49aeb1bab31a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7a1ff13efd06b1508531094db0cf08a586660e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7a1ff13efd06b1508531094db0cf08a586660e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7a1ff13efd06b1508531094db0cf08a586660e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7a1ff13efd06b1508531094db0cf08a586660e1/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fca4bcdc322ed507b223a908ff7bf16795862a0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fca4bcdc322ed507b223a908ff7bf16795862a0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fca4bcdc322ed507b223a908ff7bf16795862a0f"
      }
    ],
    "stats": {
      "total": 123,
      "additions": 64,
      "deletions": 59
    },
    "files": [
      {
        "sha": "250ce88599c82cb19d879a3de107aad560538730",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7a1ff13efd06b1508531094db0cf08a586660e1/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7a1ff13efd06b1508531094db0cf08a586660e1/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=e7a1ff13efd06b1508531094db0cf08a586660e1",
        "patch": "@@ -305,7 +305,7 @@ bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strRes\n                             // and pass it along with the method name to the dispatcher.\n                             UniValue params = RPCConvertValues(stack.back()[0], std::vector<std::string>(stack.back().begin() + 1, stack.back().end()));\n                             std::string method = stack.back()[0];\n-                            std::string uri;\n+                            std::string uri = \"/nowallet\";\n #ifdef ENABLE_WALLET\n                             if (wallet_model) {\n                                 QByteArray encodedName = QUrl::toPercentEncoding(wallet_model->getWalletName());"
      },
      {
        "sha": "890be2ede4fafcda55bd5c8a4cb390ddd49ac951",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7a1ff13efd06b1508531094db0cf08a586660e1/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7a1ff13efd06b1508531094db0cf08a586660e1/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=e7a1ff13efd06b1508531094db0cf08a586660e1",
        "patch": "@@ -103,7 +103,7 @@ UniValue importprivkey(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -202,7 +202,7 @@ UniValue abortrescan(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -265,7 +265,7 @@ UniValue importaddress(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -347,7 +347,7 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -413,7 +413,7 @@ UniValue removeprunedfunds(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -454,7 +454,7 @@ UniValue importpubkey(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -528,7 +528,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -660,7 +660,7 @@ UniValue dumpprivkey(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -707,7 +707,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1141,7 +1141,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(mainRequest);\n     CWallet* const pwallet = wallet.get();\n-    if (!EnsureWalletIsAvailable(pwallet, mainRequest.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, mainRequest)) {\n         return NullUniValue;\n     }\n "
      },
      {
        "sha": "48b9ea1e4d924863baeb5978a2c8e3ffde1744e4",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 46,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7a1ff13efd06b1508531094db0cf08a586660e1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7a1ff13efd06b1508531094db0cf08a586660e1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e7a1ff13efd06b1508531094db0cf08a586660e1",
        "patch": "@@ -55,6 +55,11 @@ bool GetWalletNameFromJSONRPCRequest(const JSONRPCRequest& request, std::string&\n \n std::shared_ptr<CWallet> GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n {\n+    if (request.URI == \"/nowallet\") {\n+        // no wallet endpoint\n+        return nullptr;\n+    }\n+\n     std::string wallet_name;\n     if (GetWalletNameFromJSONRPCRequest(request, wallet_name)) {\n         std::shared_ptr<CWallet> pwallet = GetWallet(wallet_name);\n@@ -73,13 +78,13 @@ std::string HelpRequiringPassphrase(CWallet * const pwallet)\n         : \"\";\n }\n \n-bool EnsureWalletIsAvailable(CWallet * const pwallet, bool avoidException)\n+bool EnsureWalletIsAvailable(CWallet * const pwallet, const JSONRPCRequest& request)\n {\n     if (pwallet) return true;\n-    if (avoidException) return false;\n-    if (!HasWallets()) {\n+    if (request.fHelp) return false;\n+    if (!HasWallets() || request.URI == \"/nowallet\") {\n         throw JSONRPCError(\n-            RPC_METHOD_NOT_FOUND, \"Method not found (wallet method is disabled because no wallet is loaded)\");\n+            RPC_METHOD_NOT_FOUND, \"Method not found (wallet method is disabled because no wallet is loaded or selected)\");\n     }\n     throw JSONRPCError(RPC_WALLET_NOT_SPECIFIED,\n         \"Wallet file not specified (must request wallet RPC through /wallet/<filename> uri-path).\");\n@@ -144,7 +149,7 @@ static UniValue getnewaddress(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -206,7 +211,7 @@ static UniValue getrawchangeaddress(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -262,7 +267,7 @@ static UniValue setlabel(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -344,7 +349,7 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -436,7 +441,7 @@ static UniValue listaddressgroupings(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -498,7 +503,7 @@ static UniValue signmessage(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -564,7 +569,7 @@ static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -635,7 +640,7 @@ static UniValue getreceivedbylabel(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -704,7 +709,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -761,7 +766,7 @@ static UniValue getunconfirmedbalance(const JSONRPCRequest &request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -787,7 +792,7 @@ static UniValue sendmany(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -943,7 +948,7 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1180,7 +1185,7 @@ static UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1233,7 +1238,7 @@ static UniValue listreceivedbylabel(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1373,7 +1378,7 @@ UniValue listtransactions(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1507,7 +1512,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1654,7 +1659,7 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1756,7 +1761,7 @@ static UniValue abandontransaction(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1804,7 +1809,7 @@ static UniValue backupwallet(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1842,7 +1847,7 @@ static UniValue keypoolrefill(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1891,7 +1896,7 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -1977,7 +1982,7 @@ static UniValue walletpassphrasechange(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2030,7 +2035,7 @@ static UniValue walletlock(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2073,7 +2078,7 @@ static UniValue encryptwallet(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2132,7 +2137,7 @@ static UniValue lockunspent(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2261,7 +2266,7 @@ static UniValue listlockunspent(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2317,7 +2322,7 @@ static UniValue settxfee(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2359,7 +2364,7 @@ static UniValue getwalletinfo(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2479,7 +2484,7 @@ static UniValue listwallets(const JSONRPCRequest& request)\n     UniValue obj(UniValue::VARR);\n \n     for (const std::shared_ptr<CWallet>& wallet : GetWallets()) {\n-        if (!EnsureWalletIsAvailable(wallet.get(), request.fHelp)) {\n+        if (!EnsureWalletIsAvailable(wallet.get(), request)) {\n             return NullUniValue;\n         }\n \n@@ -2656,7 +2661,7 @@ static UniValue resendwallettransactions(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2696,7 +2701,7 @@ static UniValue listunspent(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -2990,7 +2995,7 @@ static UniValue fundrawtransaction(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -3082,7 +3087,7 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -3159,7 +3164,7 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n     CWallet* const pwallet = wallet.get();\n \n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp))\n+    if (!EnsureWalletIsAvailable(pwallet, request))\n         return NullUniValue;\n \n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n@@ -3313,7 +3318,7 @@ UniValue generate(const JSONRPCRequest& request)\n     CWallet* const pwallet = wallet.get();\n \n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -3367,7 +3372,7 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -3576,7 +3581,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -3705,7 +3710,7 @@ static UniValue getaddressesbylabel(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -3752,7 +3757,7 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -3808,7 +3813,7 @@ UniValue sethdseed(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -3949,7 +3954,7 @@ UniValue walletprocesspsbt(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n \n@@ -4014,7 +4019,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n     CWallet* const pwallet = wallet.get();\n \n-    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+    if (!EnsureWalletIsAvailable(pwallet, request)) {\n         return NullUniValue;\n     }\n "
      },
      {
        "sha": "6e3d544059a2a80d92200d061d83322e22b4a3a2",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7a1ff13efd06b1508531094db0cf08a586660e1/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7a1ff13efd06b1508531094db0cf08a586660e1/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=e7a1ff13efd06b1508531094db0cf08a586660e1",
        "patch": "@@ -26,7 +26,7 @@ std::shared_ptr<CWallet> GetWalletForJSONRPCRequest(const JSONRPCRequest& reques\n \n std::string HelpRequiringPassphrase(CWallet *);\n void EnsureWalletIsUnlocked(CWallet *);\n-bool EnsureWalletIsAvailable(CWallet *, bool avoidException);\n+bool EnsureWalletIsAvailable(CWallet *, const JSONRPCRequest& request);\n \n UniValue getaddressinfo(const JSONRPCRequest& request);\n UniValue signrawtransactionwithwallet(const JSONRPCRequest& request);"
      },
      {
        "sha": "0b5ed73df0dd6335bfac00dc41dd02376ec774e1",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7a1ff13efd06b1508531094db0cf08a586660e1/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7a1ff13efd06b1508531094db0cf08a586660e1/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=e7a1ff13efd06b1508531094db0cf08a586660e1",
        "patch": "@@ -287,7 +287,7 @@ def wallet_file(name):\n         for wallet_name in self.nodes[0].listwallets():\n             self.nodes[0].unloadwallet(wallet_name)\n         assert_equal(self.nodes[0].listwallets(), [])\n-        assert_raises_rpc_error(-32601, \"Method not found (wallet method is disabled because no wallet is loaded)\", self.nodes[0].getwalletinfo)\n+        assert_raises_rpc_error(-32601, \"Method not found (wallet method is disabled because no wallet is loaded or selected)\", self.nodes[0].getwalletinfo)\n \n         # Successfully load a previously unloaded wallet\n         self.nodes[0].loadwallet('w1')"
      }
    ]
  }
]