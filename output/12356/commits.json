[
  {
    "sha": "c04e0f607a305092f336f3a77a91f9e23463943e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDRlMGY2MDdhMzA1MDkyZjMzNmYzYTc3YTkxZjllMjM0NjM5NDNl",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-05T15:53:33Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-08T15:50:13Z"
      },
      "message": "Fix 'mempool min fee not met' debug output\n\nOutput the value that is tested, rather than the unmodified fee value.",
      "tree": {
        "sha": "406bab9c5bb2485d7acf93722e2c6892f1501256",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/406bab9c5bb2485d7acf93722e2c6892f1501256"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c04e0f607a305092f336f3a77a91f9e23463943e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJafHG1AAoJEG7l83hfeLNFw5QH/ilFCbWNLCdu//zFLum6/1BL\nYzPtIhL5bM6XZ6EyIal7npbSYMh9PDVOtXpoqcnPpRCMa6bJP13TsOCrM9AN4hEK\nWqwI1Th6SOzxAfMz1WYJLwGDD/gX8GFoLY5/vT5LJ33QayIIAbJx7bD39ZIWb9Ch\n7s3ndsx+yLpFnZM2xwdgIUQ4e5HPvM0gegeI3ckIWR1WM86f3eJlW+yvYLiM8mEe\nXM41TO6G9b3lZWryJCI8HsqLKGYeNjUB/JMzTAtFARQq4c9k7IhlP3N0/wna75yL\nPrmBEn1p04M0U9OY4S1AiaO1XVZEvVzEVyzHStjLbTsJKZquZSwCvENHO5LJvn0=\n=EkE5\n-----END PGP SIGNATURE-----",
        "payload": "tree 406bab9c5bb2485d7acf93722e2c6892f1501256\nparent 663911ed581d2ab40f49fdc232f189d92264d45a\nauthor Ben Woosley <ben.woosley@gmail.com> 1517846013 -0500\ncommitter Ben Woosley <ben.woosley@gmail.com> 1518105013 -0500\n\nFix 'mempool min fee not met' debug output\n\nOutput the value that is tested, rather than the unmodified fee value.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04e0f607a305092f336f3a77a91f9e23463943e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c04e0f607a305092f336f3a77a91f9e23463943e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04e0f607a305092f336f3a77a91f9e23463943e/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "663911ed581d2ab40f49fdc232f189d92264d45a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/663911ed581d2ab40f49fdc232f189d92264d45a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/663911ed581d2ab40f49fdc232f189d92264d45a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "35f35e19d742282f578c2640c4cc4e8c09824af0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04e0f607a305092f336f3a77a91f9e23463943e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04e0f607a305092f336f3a77a91f9e23463943e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=c04e0f607a305092f336f3a77a91f9e23463943e",
        "patch": "@@ -712,7 +712,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n         CAmount mempoolRejectFee = pool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n         if (!bypass_limits && mempoolRejectFee > 0 && nModifiedFees < mempoolRejectFee) {\n-            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", false, strprintf(\"%d < %d\", nFees, mempoolRejectFee));\n+            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", false, strprintf(\"%d < %d\", nModifiedFees, mempoolRejectFee));\n         }\n \n         // No transactions are allowed below minRelayTxFee except from disconnected blocks"
      }
    ]
  },
  {
    "sha": "8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjhhMWM0ZjhiMTBjZTk2ZmUzODI2YWIyOGI4Mjg1OGQ0ZWY5Y2Yy",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-06T02:00:57Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-08T16:01:53Z"
      },
      "message": "Add test for 'mempool min fee not met' rpc error",
      "tree": {
        "sha": "26824c4ef396ba926cb5c3d03cfbee65d72729c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26824c4ef396ba926cb5c3d03cfbee65d72729c7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJafHRzAAoJEG7l83hfeLNFoAEIAKEcKA2Aur7mm1SW9puuxFV5\nohBJK/U4sIFh7LZiPY8qNw2Z4zrKcb3r6/kANA8FLo7Lwg50ArHy4vROkcCOhT0P\niPpnrrVSkmXFQA4IdQuAC9/w8TQNxBreh/LfBmecNX5Yby+sK3VBWaufR2GiTqlQ\n8DGBJKOvv9ZKpa/hDlebwSJDMkxryGKHpV5O3s5769Q0Aohvt+qgjyaIM813rWT1\ngsKkVat7DsKuamGGqC0pq4pqRmnfRndRQXgb/TZV7FXVJEFbeYCMl5/wW48lWV0n\nWy60ev239oD/d5tnlpSw4aL/DJ+OBqbi776U+i+Qp3y7Qxfum/wZd0qIt9Iqfrs=\n=DWxD\n-----END PGP SIGNATURE-----",
        "payload": "tree 26824c4ef396ba926cb5c3d03cfbee65d72729c7\nparent c04e0f607a305092f336f3a77a91f9e23463943e\nauthor Ben Woosley <ben.woosley@gmail.com> 1517882457 -0500\ncommitter Ben Woosley <ben.woosley@gmail.com> 1518105713 -0500\n\nAdd test for 'mempool min fee not met' rpc error\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c04e0f607a305092f336f3a77a91f9e23463943e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04e0f607a305092f336f3a77a91f9e23463943e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c04e0f607a305092f336f3a77a91f9e23463943e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1385271e6d2d567978b1ec1b2e29b4228c2cce0b",
        "filename": "test/functional/mempool_limit.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2/test/functional/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2/test/functional/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_limit.py?ref=8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2",
        "patch": "@@ -50,5 +50,15 @@ def run_test(self):\n         assert_equal(self.nodes[0].getmempoolinfo()['minrelaytxfee'], Decimal('0.00001000'))\n         assert_greater_than(self.nodes[0].getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n \n+        self.log.info('Create a mempool tx that will not pass mempoolminfee')\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {self.nodes[0].getnewaddress() : 0.0001}\n+        tx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        # specifically fund this tx with a fee < mempoolminfee, >= than minrelaytxfee\n+        txF = self.nodes[0].fundrawtransaction(tx, {'feeRate': relayfee})\n+        txFS = self.nodes[0].signrawtransaction(txF['hex'])\n+        assert_raises_rpc_error(-26, \"66: mempool min fee not met\", self.nodes[0].sendrawtransaction, txFS['hex'])\n+\n if __name__ == '__main__':\n     MempoolLimitTest().main()"
      }
    ]
  },
  {
    "sha": "bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjAwYzk1YzE2ZjUwYzVkZmFiMWFhOGZiYjZjODczMzE4YTZhY2M4",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-06T23:47:51Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-08T16:02:41Z"
      },
      "message": "Consistently use FormatStateMessage in RPC error output\n\nThis will include the error code and debug output as well as the reason string.\n\nSee #11955 for the motivation.",
      "tree": {
        "sha": "690d0a1dda3b3be64c6cb3200df795db58c992b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/690d0a1dda3b3be64c6cb3200df795db58c992b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJafHSiAAoJEG7l83hfeLNF9WMH/3erTI9EljQ+uB6/VtVvn368\noMbFd+i7dAX1SaMzcNPNn9s8Zem3iUo4G/usX8TpiZJlFK5gaQoELjMO5i46URSH\np6u/cHqYdQE/KASh1A8sJSbKCvRHA3aj/pDkqYnuLZt8bnDxa7pxwMhqfaLgHKQi\n4716qe9b79jqU1CfPLUno+IW7gQQHi/KwHzo7Ea+f6y7XPHXewdz/Z6WhENOw+iJ\nFeQ8wmd4ygmNcrzNulc1gkea9fD16lw4ADHn2WgucktUl93BztT45CJPUzk9wFtO\nhQCsv7WE0AaQeFsVu5uum3VCwVU0GI3WauL2JMrXw98oD6ibDGX0lJjp6TDamJ0=\n=TlHb\n-----END PGP SIGNATURE-----",
        "payload": "tree 690d0a1dda3b3be64c6cb3200df795db58c992b9\nparent 8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2\nauthor Ben Woosley <ben.woosley@gmail.com> 1517960871 -0500\ncommitter Ben Woosley <ben.woosley@gmail.com> 1518105761 -0500\n\nConsistently use FormatStateMessage in RPC error output\n\nThis will include the error code and debug output as well as the reason string.\n\nSee #11955 for the motivation.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b8a1c4f8b10ce96fe3826ab28b82858d4ef9cf2"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 15,
      "deletions": 16
    },
    "files": [
      {
        "sha": "c880991b59561bdca21f1b7bdd83e5ca711fc941",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -1434,7 +1434,7 @@ UniValue preciousblock(const JSONRPCRequest& request)\n     PreciousBlock(state, Params(), pblockindex);\n \n     if (!state.IsValid()) {\n-        throw JSONRPCError(RPC_DATABASE_ERROR, state.GetRejectReason());\n+        throw JSONRPCError(RPC_DATABASE_ERROR, FormatStateMessage(state));\n     }\n \n     return NullUniValue;\n@@ -1472,7 +1472,7 @@ UniValue invalidateblock(const JSONRPCRequest& request)\n     }\n \n     if (!state.IsValid()) {\n-        throw JSONRPCError(RPC_DATABASE_ERROR, state.GetRejectReason());\n+        throw JSONRPCError(RPC_DATABASE_ERROR, FormatStateMessage(state));\n     }\n \n     return NullUniValue;\n@@ -1509,7 +1509,7 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     ActivateBestChain(state, Params());\n \n     if (!state.IsValid()) {\n-        throw JSONRPCError(RPC_DATABASE_ERROR, state.GetRejectReason());\n+        throw JSONRPCError(RPC_DATABASE_ERROR, FormatStateMessage(state));\n     }\n \n     return NullUniValue;\n@@ -1563,7 +1563,7 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n             pindex = chainActive.Tip();\n         }\n     }\n-    \n+\n     assert(pindex != nullptr);\n \n     if (request.params[0].isNull()) {"
      },
      {
        "sha": "32f8ca0c716c622802b14c70a39a57e2e2247e45",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -264,11 +264,11 @@ static UniValue BIP22ValidationResult(const CValidationState& state)\n     if (state.IsValid())\n         return NullUniValue;\n \n-    std::string strRejectReason = state.GetRejectReason();\n     if (state.IsError())\n-        throw JSONRPCError(RPC_VERIFY_ERROR, strRejectReason);\n+        throw JSONRPCError(RPC_VERIFY_ERROR, FormatStateMessage(state));\n     if (state.IsInvalid())\n     {\n+        std::string strRejectReason = state.GetRejectReason();\n         if (strRejectReason.empty())\n             return \"rejected\";\n         return strRejectReason;"
      },
      {
        "sha": "85709256fdc50f0094768d4c7c06970eb3e85ebd",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -981,12 +981,12 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n         if (!AcceptToMemoryPool(mempool, state, std::move(tx), &fMissingInputs,\n                                 nullptr /* plTxnReplaced */, false /* bypass_limits */, nMaxRawTxFee)) {\n             if (state.IsInvalid()) {\n-                throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason()));\n+                throw JSONRPCError(RPC_TRANSACTION_REJECTED, FormatStateMessage(state));\n             } else {\n                 if (fMissingInputs) {\n                     throw JSONRPCError(RPC_TRANSACTION_ERROR, \"Missing inputs\");\n                 }\n-                throw JSONRPCError(RPC_TRANSACTION_ERROR, state.GetRejectReason());\n+                throw JSONRPCError(RPC_TRANSACTION_ERROR, FormatStateMessage(state));\n             }\n         } else {\n             // If wallet is enabled, ensure that the wallet has been made aware"
      },
      {
        "sha": "ebf30fe03b3d6300fb22747811d701012f99c905",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -267,7 +267,7 @@ Result CommitTransaction(CWallet* wallet, const uint256& txid, CMutableTransacti\n     CValidationState state;\n     if (!wallet->CommitTransaction(wtxBumped, reservekey, g_connman.get(), state)) {\n         // NOTE: CommitTransaction never returns false, so this should never happen.\n-        errors.push_back(strprintf(\"The transaction was rejected: %s\", state.GetRejectReason()));\n+        errors.push_back(strprintf(\"The transaction was rejected: %s\", FormatStateMessage(state)));\n         return Result::WALLET_ERROR;\n     }\n \n@@ -290,4 +290,3 @@ Result CommitTransaction(CWallet* wallet, const uint256& txid, CMutableTransacti\n }\n \n } // namespace feebumper\n-"
      },
      {
        "sha": "a82afcf2a013bc2e223bcead727b635d9863386e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -435,7 +435,7 @@ static void SendMoney(CWallet * const pwallet, const CTxDestination &address, CA\n     }\n     CValidationState state;\n     if (!pwallet->CommitTransaction(wtxNew, reservekey, g_connman.get(), state)) {\n-        strError = strprintf(\"Error: The transaction was rejected! Reason given: %s\", state.GetRejectReason());\n+        strError = strprintf(\"Error: The transaction was rejected! Reason given: %s\", FormatStateMessage(state));\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n     }\n }\n@@ -1155,7 +1155,7 @@ UniValue sendmany(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, strFailReason);\n     CValidationState state;\n     if (!pwallet->CommitTransaction(wtx, keyChange, g_connman.get(), state)) {\n-        strFailReason = strprintf(\"Transaction commit failed:: %s\", state.GetRejectReason());\n+        strFailReason = strprintf(\"Transaction commit failed:: %s\", FormatStateMessage(state));\n         throw JSONRPCError(RPC_WALLET_ERROR, strFailReason);\n     }\n "
      },
      {
        "sha": "4a022fa5620dc03a8ea684c4ed3f6201d2e662b9",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -3094,7 +3094,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey, CCon\n         {\n             // Broadcast\n             if (!wtx.AcceptToMemoryPool(maxTxFee, state)) {\n-                LogPrintf(\"CommitTransaction(): Transaction cannot be broadcast immediately, %s\\n\", state.GetRejectReason());\n+                LogPrintf(\"CommitTransaction(): Transaction cannot be broadcast immediately, %s\\n\", FormatStateMessage(state));\n                 // TODO: if we expect the failure to be long term or permanent, instead delete wtx from the wallet and return failure.\n             } else {\n                 wtx.RelayWalletTransaction(connman);"
      },
      {
        "sha": "740c498ce6bb4f8ecc7165afa63057b3eb1b6f37",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -21,7 +21,7 @@\n from io import BytesIO\n import time\n \n-NULLDUMMY_ERROR = \"64: non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero)\"\n+NULLDUMMY_ERROR = \"non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero) (code 64)\"\n \n def trueDummy(tx):\n     scriptSig = CScript(tx.vin[0].scriptSig)"
      },
      {
        "sha": "7e01663c96bd577445c0b9240ed680b4eb285590",
        "filename": "test/functional/mempool_limit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/test/functional/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/test/functional/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_limit.py?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -58,7 +58,7 @@ def run_test(self):\n         # specifically fund this tx with a fee < mempoolminfee, >= than minrelaytxfee\n         txF = self.nodes[0].fundrawtransaction(tx, {'feeRate': relayfee})\n         txFS = self.nodes[0].signrawtransaction(txF['hex'])\n-        assert_raises_rpc_error(-26, \"66: mempool min fee not met\", self.nodes[0].sendrawtransaction, txFS['hex'])\n+        assert_raises_rpc_error(-26, \"mempool min fee not met, 166 < 411 (code 66)\", self.nodes[0].sendrawtransaction, txFS['hex'])\n \n if __name__ == '__main__':\n     MempoolLimitTest().main()"
      },
      {
        "sha": "8cea9c27833a994a627cfec28aebc402c997a1d1",
        "filename": "test/functional/mining_prioritisetransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/test/functional/mining_prioritisetransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8/test/functional/mining_prioritisetransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_prioritisetransaction.py?ref=bb00c95c16f50c5dfab1aa8fbb6c873318a6acc8",
        "patch": "@@ -120,7 +120,7 @@ def run_test(self):\n         tx_id = self.nodes[0].decoderawtransaction(tx_hex)[\"txid\"]\n \n         # This will raise an exception due to min relay fee not being met\n-        assert_raises_rpc_error(-26, \"66: min relay fee not met\", self.nodes[0].sendrawtransaction, tx_hex)\n+        assert_raises_rpc_error(-26, \"min relay fee not met (code 66)\", self.nodes[0].sendrawtransaction, tx_hex)\n         assert(tx_id not in self.nodes[0].getrawmempool())\n \n         # This is a less than 1000-byte transaction, so just set the fee"
      }
    ]
  }
]