[
  {
    "sha": "c92997ed0c1fa50cb3b62dfa3fcdbaad35d76b27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTI5OTdlZDBjMWZhNTBjYjNiNjJkZmEzZmNkYmFhZDM1ZDc2YjI3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-25T10:42:14Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-25T10:42:14Z"
      },
      "message": "tests: Specify skipped flake8 warnings (rather than enabled warnings)",
      "tree": {
        "sha": "e5d50999b07084d9a07e894aca8d4e8289267072",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5d50999b07084d9a07e894aca8d4e8289267072"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c92997ed0c1fa50cb3b62dfa3fcdbaad35d76b27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c92997ed0c1fa50cb3b62dfa3fcdbaad35d76b27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c92997ed0c1fa50cb3b62dfa3fcdbaad35d76b27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c92997ed0c1fa50cb3b62dfa3fcdbaad35d76b27/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf3353de90598f08a68d966c50b57ceaeb5b5d96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf3353de90598f08a68d966c50b57ceaeb5b5d96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf3353de90598f08a68d966c50b57ceaeb5b5d96"
      }
    ],
    "stats": {
      "total": 110,
      "additions": 55,
      "deletions": 55
    },
    "files": [
      {
        "sha": "2d582981a289fec4710787ca7d3805eae0fe9d5f",
        "filename": "contrib/devtools/lint-python.sh",
        "status": "modified",
        "additions": 55,
        "deletions": 55,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c92997ed0c1fa50cb3b62dfa3fcdbaad35d76b27/contrib/devtools/lint-python.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c92997ed0c1fa50cb3b62dfa3fcdbaad35d76b27/contrib/devtools/lint-python.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-python.sh?ref=c92997ed0c1fa50cb3b62dfa3fcdbaad35d76b27",
        "patch": "@@ -4,60 +4,60 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n-# Check for specified flake8 warnings in python files.\n+# Check for flake8 warnings in python files.\n \n-# E112 expected an indented block\n-# E113 unexpected indentation\n-# E115 expected an indented block (comment)\n-# E116 unexpected indentation (comment)\n-# E125 continuation line with same indent as next logical line\n-# E131 continuation line unaligned for hanging indent\n-# E133 closing bracket is missing indentation\n-# E223 tab before operator\n-# E224 tab after operator\n-# E271 multiple spaces after keyword\n-# E272 multiple spaces before keyword\n-# E273 tab after keyword\n-# E274 tab before keyword\n-# E275 missing whitespace after keyword\n-# E304 blank lines found after function decorator\n-# E306 expected 1 blank line before a nested definition\n-# E502 the backslash is redundant between brackets\n-# E702 multiple statements on one line (semicolon)\n-# E703 statement ends with a semicolon\n-# E714 test for object identity should be \"is not\"\n-# E721 do not compare types, use \"isinstance()\"\n-# E741 do not use variables named \"l\", \"O\", or \"I\"\n-# E742 do not define classes named \"l\", \"O\", or \"I\"\n-# E743 do not define functions named \"l\", \"O\", or \"I\"\n-# F401 module imported but unused\n-# F402 import module from line N shadowed by loop variable\n-# F404 future import(s) name after other statements\n-# F406 \"from module import *\" only allowed at module level\n-# F407 an undefined __future__ feature name was imported\n-# F601 dictionary key name repeated with different values\n-# F602 dictionary key variable name repeated with different values\n-# F621 too many expressions in an assignment with star-unpacking\n-# F622 two or more starred expressions in an assignment (a, *b, *c = d)\n-# F631 assertion test is a tuple, which are always True\n-# F701 a break statement outside of a while or for loop\n-# F702 a continue statement outside of a while or for loop\n-# F703 a continue statement in a finally block in a loop\n-# F704 a yield or yield from statement outside of a function\n-# F705 a return statement with arguments inside a generator\n-# F706 a return statement outside of a function/method\n-# F707 an except: block as not the last exception handler\n-# F811 redefinition of unused name from line N\n-# F812 list comprehension redefines 'foo' from line N\n-# F822 undefined name name in __all__\n-# F823 local variable name \u2026 referenced before assignment\n-# F831 duplicate argument name in function definition\n-# W292 no newline at end of file\n-# W504 line break after binary operator\n-# W601 .has_key() is deprecated, use \"in\"\n-# W602 deprecated form of raising exception\n-# W603 \"<>\" is deprecated, use \"!=\"\n-# W604 backticks are deprecated, use \"repr()\"\n-# W605 invalid escape sequence \"x\"\n+# Ignored warnings:\n+# E101 indentation contains mixed spaces and tabs\n+# E111 indentation is not a multiple of four\n+# E114 indentation is not a multiple of four (comment)\n+# E121 continuation line under-indented for hanging indent\n+# E122 continuation line missing indentation or outdented\n+# E123 closing bracket does not match indentation of opening bracket's line\n+# E124 closing bracket does not match visual indentation\n+# E126 continuation line over-indented for hanging indent\n+# E127 continuation line over-indented for visual indent\n+# E128 continuation line under-indented for visual indent\n+# E129 visually indented line with same indent as next logical line\n+# E201 whitespace after '[' or '{'\n+# E202 whitespace before ')', ']' or '}'\n+# E203 whitespace before ':'\n+# E211 whitespace before '('\n+# E221 multiple spaces before operator\n+# E222 multiple spaces after operator\n+# E225 missing whitespace around operator\n+# E226 missing whitespace around arithmetic operator\n+# E227 missing whitespace around bitwise or shift operator\n+# E228 missing whitespace around modulo operator\n+# E231 missing whitespace after ',' or ':'\n+# E241 multiple spaces after ','\n+# E251 unexpected spaces around keyword / parameter equals\n+# E261 at least two spaces before inline comment\n+# E262 inline comment should start with '# '\n+# E265 block comment should start with '# '\n+# E266 too many leading '#' for block comment\n+# E301 expected 1 blank line, found N\n+# E302 expected 2 blank lines, found N\n+# E303 too many blank lines (N)\n+# E305 expected 2 blank lines after class or function definition, found N\n+# E401 multiple imports on one line\n+# E402 module level import not at top of file\n+# E501 line too long (N > 79 characters)\n+# E701 multiple statements on one line (colon)\n+# E704 multiple statements on one line (def)\n+# E711 comparison to None should be 'if cond is None:'\n+# E712 comparison to False should be 'if cond is False:' or 'if not cond:'\n+# E713 test for membership should be 'not in'\n+# E722 do not use bare except\n+# E731 do not assign a lambda expression, use a def\n+# E999 SyntaxError: invalid syntax\n+# F403 'from ... import *' used; unable to detect undefined names\n+# F405 '...' may be undefined, or defined from star imports: ...\n+# F821 undefined name '...'\n+# F841 local variable '...' is assigned to but never used\n+# W191 indentation contains tabs\n+# W291 trailing whitespace\n+# W293 blank line contains whitespace\n+# W391 blank line at end of file\n+# W503 line break before binary operator\n \n-flake8 --ignore=B,C,E,F,I,N,W --select=E112,E113,E115,E116,E125,E131,E133,E223,E224,E271,E272,E273,E274,E275,E304,E306,E502,E702,E703,E714,E721,E741,E742,E743,F401,F402,F404,F406,F407,F601,F602,F621,F622,F631,F701,F702,F703,F704,F705,F706,F707,F811,F812,F822,F823,F831,W292,W504,W601,W602,W603,W604,W605 .\n+flake8 --ignore=E101,E111,E114,E121,E122,E123,E124,E126,E127,E128,E129,E201,E202,E203,E211,E221,E222,E225,E226,E227,E228,E231,E241,E251,E261,E262,E265,E266,E301,E302,E303,E305,E401,E402,E501,E701,E704,E711,E712,E713,E722,E731,E999,F403,F405,F821,F841,W191,W291,W293,W391,W503 ."
      }
    ]
  }
]