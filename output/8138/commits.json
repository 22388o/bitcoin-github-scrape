[
  {
    "sha": "58af361855a7ca5ed034abf9a2d05908f80d71ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGFmMzYxODU1YTdjYTVlZDAzNGFiZjlhMmQwNTkwOGY4MGQ3MWVh",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-02T14:44:42Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-06-02T15:00:41Z"
      },
      "message": "Add maximal amount-of-transactions limit to checkblock/CVerifyDB",
      "tree": {
        "sha": "434aeb3ca32ac2c4885e6d740b7eeffe4d3534e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/434aeb3ca32ac2c4885e6d740b7eeffe4d3534e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58af361855a7ca5ed034abf9a2d05908f80d71ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXUEoaAAoJECnUvLZBb1PsaSIQAIFCy+XyCRoMqVU909qc/hlJ\nhFLMOqYaZN0+BL4OBldvouMPdAkKh9yVV/I3rvQN5jbHLnKZ5GY59DpciGpP1QN7\nC3w78aXVjE5FbxK6k8nFX6Ovgp8f559B7O7GSuFeJnoqxbWJ841p2cHCurFQ2Yw9\n/xXeNl9C4r5vZ95WHlN7BXSJL+xLjcWFwSaAOE7kkEqotqJjbMlMlb5K+xsJyM1B\nMjZE+kc6ue4uIiKiupvOyWRKXgmFhbgnjNXm1ADZ+PB4RpPZ+BiSIDFwUUUeq+vY\nZWsirgLrka+oeRUeanNfHMf0HKUzGHWjSisk7gs0RQkz2Sk5mgXgx9GlMfIZb8az\nXt+JKWFCi5K+MqlHS2mEhI3km2SFAo5LFlC0wCTGA04BqhpJQrsjXrZizlRyFrgD\nNKfGMRWEr4vPaxdjhThvBpqXJRsBlkyrTxSaCscw0vhAE9hpQsVYcvsUJa3LQKvG\nOojmfnhKBMJxnqayQA2YHol+CqBe66T1bCsFG3y//VOPqnCzf7Y5PTWXWKqnm/8g\nTesdKKA3AjDkAahXyRDVD1/8ru4ydClYtTd+qowTCPpvu8RWbNkhWIcBFTjTkOoq\ncVuCCajGLs4dLyuq315Z0jwwVetyNITzJg6IDrreEgdYcE3ocHL+Gs9F9RpVhpp/\n25qa0rUPCMBqHHrm3hkf\n=xBfJ\n-----END PGP SIGNATURE-----",
        "payload": "tree 434aeb3ca32ac2c4885e6d740b7eeffe4d3534e3\nparent ee1533e262e72d0b5aaae187ab9a37ba79c9cda7\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1464878682 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1464879641 +0200\n\nAdd maximal amount-of-transactions limit to checkblock/CVerifyDB\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58af361855a7ca5ed034abf9a2d05908f80d71ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58af361855a7ca5ed034abf9a2d05908f80d71ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58af361855a7ca5ed034abf9a2d05908f80d71ea/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee1533e262e72d0b5aaae187ab9a37ba79c9cda7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee1533e262e72d0b5aaae187ab9a37ba79c9cda7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee1533e262e72d0b5aaae187ab9a37ba79c9cda7"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 21,
      "deletions": 8
    },
    "files": [
      {
        "sha": "877490387909549a253217f9c50ee318b7a1574a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58af361855a7ca5ed034abf9a2d05908f80d71ea/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58af361855a7ca5ed034abf9a2d05908f80d71ea/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=58af361855a7ca5ed034abf9a2d05908f80d71ea",
        "patch": "@@ -310,6 +310,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-blocksonly\", strprintf(_(\"Whether to operate in a blocks only mode (default: %u)\"), DEFAULT_BLOCKSONLY));\n     strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), DEFAULT_CHECKBLOCKS));\n     strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), DEFAULT_CHECKLEVEL));\n+    strUsage += HelpMessageOpt(\"-checkmaxtx=<n>\", strprintf(_(\"Maximal amount of transactions to check during the verification of -checkblocks (default: %u, 0 = unlimited)\"), DEFAULT_CHECKMAXTX));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n     if (mode == HMM_BITCOIND)\n     {\n@@ -1291,7 +1292,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 }\n \n                 if (!CVerifyDB().VerifyDB(chainparams, pcoinsdbview, GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n-                              GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n+                              GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS), GetArg(\"-checkmaxtx\", DEFAULT_CHECKMAXTX))) {\n                     strLoadError = _(\"Corrupted block database detected\");\n                     break;\n                 }"
      },
      {
        "sha": "363b574b5b3971fd05b3f93a4b0fd1c0dfb0b116",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58af361855a7ca5ed034abf9a2d05908f80d71ea/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58af361855a7ca5ed034abf9a2d05908f80d71ea/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=58af361855a7ca5ed034abf9a2d05908f80d71ea",
        "patch": "@@ -3855,7 +3855,7 @@ CVerifyDB::~CVerifyDB()\n     uiInterface.ShowProgress(\"\", 100);\n }\n \n-bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth)\n+bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth, int nTxCheckLimit)\n {\n     LOCK(cs_main);\n     if (chainActive.Tip() == NULL || chainActive.Tip()->pprev == NULL)\n@@ -3872,6 +3872,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n     CBlockIndex* pindexState = chainActive.Tip();\n     CBlockIndex* pindexFailure = NULL;\n     int nGoodTransactions = 0;\n+    int nTxCheckLimitCurrent = 0;\n     CValidationState state;\n     for (CBlockIndex* pindex = chainActive.Tip(); pindex && pindex->pprev; pindex = pindex->pprev)\n     {\n@@ -3915,6 +3916,11 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n         }\n         if (ShutdownRequested())\n             return true;\n+        nTxCheckLimitCurrent+=block.vtx.size();\n+        if (nTxCheckLimit > 0 && nTxCheckLimitCurrent >= nTxCheckLimit && chainActive.Height() - pindex->nHeight >= std::min(nCheckDepth, MIN_BLOCK_TO_RESPECT_WITH_MAX_TX_CHECK)) {\n+            LogPrintf(\"VerifyDB(): reached max transaction limit (%d)\\n\", nTxCheckLimit);\n+            break;\n+        }\n     }\n     if (pindexFailure)\n         return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", chainActive.Height() - pindexFailure->nHeight + 1, nGoodTransactions);"
      },
      {
        "sha": "46d27c3c036740444363b2148588db8cae553c1f",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58af361855a7ca5ed034abf9a2d05908f80d71ea/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58af361855a7ca5ed034abf9a2d05908f80d71ea/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=58af361855a7ca5ed034abf9a2d05908f80d71ea",
        "patch": "@@ -185,9 +185,12 @@ extern uint64_t nPruneTarget;\n /** Block files containing a block-height within MIN_BLOCKS_TO_KEEP of chainActive.Tip() will not be pruned. */\n static const unsigned int MIN_BLOCKS_TO_KEEP = 288;\n \n-static const signed int DEFAULT_CHECKBLOCKS = MIN_BLOCKS_TO_KEEP;\n+static const signed int DEFAULT_CHECKBLOCKS = MIN_BLOCKS_TO_KEEP / 2;\n static const unsigned int DEFAULT_CHECKLEVEL = 3;\n \n+static const signed int MIN_BLOCK_TO_RESPECT_WITH_MAX_TX_CHECK = 6;\n+static const unsigned int DEFAULT_CHECKMAXTX = 100000;\n+\n // Require that user allocate at least 550MB for block & undo files (blk???.dat and rev???.dat)\n // At 1MB per block, 288 blocks = 288MB.\n // Add 15% for Undo data = 331MB\n@@ -454,7 +457,7 @@ class CVerifyDB {\n public:\n     CVerifyDB();\n     ~CVerifyDB();\n-    bool VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth);\n+    bool VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth, int nTxCheckLimit);\n };\n \n /** Find the last common block between the parameter chain and a locator. */"
      },
      {
        "sha": "fedec33dbcf24666ce34875bf2ab62eb483d431a",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58af361855a7ca5ed034abf9a2d05908f80d71ea/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58af361855a7ca5ed034abf9a2d05908f80d71ea/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=58af361855a7ca5ed034abf9a2d05908f80d71ea",
        "patch": "@@ -611,13 +611,15 @@ UniValue verifychain(const UniValue& params, bool fHelp)\n {\n     int nCheckLevel = GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL);\n     int nCheckDepth = GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS);\n-    if (fHelp || params.size() > 2)\n+    int nCheckMaxTx = GetArg(\"-checkmaxtx\", DEFAULT_CHECKMAXTX);\n+    if (fHelp || params.size() > 3)\n         throw runtime_error(\n-            \"verifychain ( checklevel numblocks )\\n\"\n+            \"verifychain ( checklevel numblocks maxnumtxs )\\n\"\n             \"\\nVerifies blockchain database.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. checklevel   (numeric, optional, 0-4, default=\" + strprintf(\"%d\", nCheckLevel) + \") How thorough the block verification is.\\n\"\n             \"2. numblocks    (numeric, optional, default=\" + strprintf(\"%d\", nCheckDepth) + \", 0=all) The number of blocks to check.\\n\"\n+            \"3. maxnumtxs    (numeric, optional, default=\" + strprintf(\"%d\", nCheckMaxTx) + \", 0=unlimited) The maximal number of transactions to check.\\n\"\n             \"\\nResult:\\n\"\n             \"true|false       (boolean) Verified or not\\n\"\n             \"\\nExamples:\\n\"\n@@ -631,8 +633,9 @@ UniValue verifychain(const UniValue& params, bool fHelp)\n         nCheckLevel = params[0].get_int();\n     if (params.size() > 1)\n         nCheckDepth = params[1].get_int();\n-\n-    return CVerifyDB().VerifyDB(Params(), pcoinsTip, nCheckLevel, nCheckDepth);\n+    if (params.size() > 2)\n+        nCheckMaxTx = params[2].get_int();\n+    return CVerifyDB().VerifyDB(Params(), pcoinsTip, nCheckLevel, nCheckDepth, nCheckMaxTx);\n }\n \n /** Implementation of IsSuperMajority with better feedback */"
      }
    ]
  }
]