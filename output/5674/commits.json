[
  {
    "sha": "7d2cb485116636595250fce4ea4eab16a877479b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDJjYjQ4NTExNjYzNjU5NTI1MGZjZTRlYTRlYWIxNmE4Nzc0Nzli",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-01-16T13:59:36Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-01-16T13:59:36Z"
      },
      "message": "Restore RPC HTTP keepalives to default.\n\nThis avoids a regression for issues like #334 where high speed\n repeated connections eventually run the HTTP client out of\n sockets because all of theirs end up in time_wait.\n\nMaybe the trade-off here is suboptimal, but if both choices will\n fail then we prefer fewer changes until the root cause is solved.",
      "tree": {
        "sha": "f11efc3600433245b3755dc3e874face70f8238c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f11efc3600433245b3755dc3e874face70f8238c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d2cb485116636595250fce4ea4eab16a877479b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d2cb485116636595250fce4ea4eab16a877479b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d2cb485116636595250fce4ea4eab16a877479b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d2cb485116636595250fce4ea4eab16a877479b/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fe53a85e0e50ca82e369b7d29485a0a6f0f8dbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fe53a85e0e50ca82e369b7d29485a0a6f0f8dbf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fe53a85e0e50ca82e369b7d29485a0a6f0f8dbf"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b58d1746e8bd0ad6959698509a8b1ae43bf94b9c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d2cb485116636595250fce4ea4eab16a877479b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d2cb485116636595250fce4ea4eab16a877479b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7d2cb485116636595250fce4ea4eab16a877479b",
        "patch": "@@ -380,7 +380,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -rpcport=<port>        \" + strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), 8332, 18332) + \"\\n\";\n     strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\") + \"\\n\";\n     strUsage += \"  -rpcthreads=<n>        \" + strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), 4) + \"\\n\";\n-    strUsage += \"  -rpckeepalive          \" + strprintf(_(\"RPC support for HTTP persistent connections (default: %d)\"), 0) + \"\\n\";\n+    strUsage += \"  -rpckeepalive          \" + strprintf(_(\"RPC support for HTTP persistent connections (default: %d)\"), 1) + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";"
      },
      {
        "sha": "cb87142902d4642045646eee74cdee770d4e1e95",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d2cb485116636595250fce4ea4eab16a877479b/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d2cb485116636595250fce4ea4eab16a877479b/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=7d2cb485116636595250fce4ea4eab16a877479b",
        "patch": "@@ -953,7 +953,7 @@ void ServiceConnection(AcceptedConnection *conn)\n         ReadHTTPMessage(conn->stream(), mapHeaders, strRequest, nProto, MAX_SIZE);\n \n         // HTTP Keep-Alive is false; close connection immediately\n-        if ((mapHeaders[\"connection\"] == \"close\") || (!GetBoolArg(\"-rpckeepalive\", false)))\n+        if ((mapHeaders[\"connection\"] == \"close\") || (!GetBoolArg(\"-rpckeepalive\", true)))\n             fRun = false;\n \n         // Process via JSON-RPC API"
      }
    ]
  },
  {
    "sha": "1a25a7edf82706c3152e2d978d320ec465a34de1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTI1YTdlZGY4MjcwNmMzMTUyZTJkOTc4ZDMyMGVjNDY1YTM0ZGUx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-01-17T15:34:27Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-01-17T16:56:55Z"
      },
      "message": "[QA] fix httpbasic keep-alive test",
      "tree": {
        "sha": "6bcd8ca74125377e42f38d11044cb784c9f15a44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6bcd8ca74125377e42f38d11044cb784c9f15a44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a25a7edf82706c3152e2d978d320ec465a34de1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a25a7edf82706c3152e2d978d320ec465a34de1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a25a7edf82706c3152e2d978d320ec465a34de1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a25a7edf82706c3152e2d978d320ec465a34de1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d2cb485116636595250fce4ea4eab16a877479b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d2cb485116636595250fce4ea4eab16a877479b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d2cb485116636595250fce4ea4eab16a877479b"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "24533741e55375d53625ccf897adbf5d31dd536e",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a25a7edf82706c3152e2d978d320ec465a34de1/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a25a7edf82706c3152e2d978d320ec465a34de1/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=1a25a7edf82706c3152e2d978d320ec465a34de1",
        "patch": "@@ -35,13 +35,13 @@ def run_test(self):\n         \n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n-        conn.request('GET', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         \n         #send 2nd request without closing connection\n-        conn.request('GET', '/', '{\"method\": \"getchaintips\"}', headers)\n+        conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n         out2 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n@@ -52,13 +52,13 @@ def run_test(self):\n         \n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n-        conn.request('GET', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n         \n         #send 2nd request without closing connection\n-        conn.request('GET', '/', '{\"method\": \"getchaintips\"}', headers)\n+        conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n         out2 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True) #must also response with a correct json-rpc message\n         assert_equal(conn.sock!=None, True) #according to http/1.1 connection must still be open!\n@@ -69,7 +69,7 @@ def run_test(self):\n         \n         conn = httplib.HTTPConnection(url.hostname, url.port)\n         conn.connect()\n-        conn.request('GET', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, False) #now the connection must be closed after the response        \n@@ -81,7 +81,7 @@ def run_test(self):\n                 \n         conn = httplib.HTTPConnection(urlNode1.hostname, urlNode1.port)\n         conn.connect()\n-        conn.request('GET', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n         assert_equal(conn.sock!=None, False) #connection must be closed because keep-alive was set to false\n@@ -93,10 +93,10 @@ def run_test(self):\n                 \n         conn = httplib.HTTPConnection(urlNode2.hostname, urlNode2.port)\n         conn.connect()\n-        conn.request('GET', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read();\n         assert_equal('\"error\":null' in out1, True)\n-        assert_equal(conn.sock!=None, False) #connection must be closed because bitcoind should use keep-alive by default\n+        assert_equal(conn.sock!=None, True) #connection must be closed because bitcoind should use keep-alive by default\n         \n if __name__ == '__main__':\n     HTTPBasicsTest ().main ()"
      }
    ]
  }
]