luke-jr,2012-07-12T18:44:43Z,Does this include the improvements in #1240?\n,https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-6943969,6943969,
gavinandresen,2012-07-13T00:08:08Z,"@luke-jr : no, it doesn't include anything from #1240.\n\nThe steps towards better fee handling, as I see them, are:\n\n1) Get miners to prefer including higher fee-per-kb transactions in their blocks.  That's what this pull request does.\n2) Once a significant number of miners are doing that, modify the client to estimate what fee (if any) is needed to get into the next block or six, and let the ",https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-6951407,6951407,
luke-jr,2012-07-13T00:12:06Z,"#1240 does both 1 and 3, and is well-tested...\n",https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-6951459,6951459,
gavinandresen,2012-07-25T03:09:56Z,"Reworked a little bit after getting some feedback from the big mining pools (added options -maxblocksize and -maxfreesize).\n\n@luke-jr : I spent most of today looking carefully at how your proposed priority mechanism (the age_weight1 + fee_weight2 formula) and this one actually behave with the transactions that are in the main network's memory pool right now (I implemented just the ""change the pr",https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-7239641,7239641,
luke-jr,2012-07-25T03:15:15Z,"How can I, with this version, prioritize by fee alone (only using age when fee is identical) and still include as many free transactions as possible?\n",https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-7239694,7239694,
gavinandresen,2012-07-25T05:09:39Z,"@luke-jr : you can't. Prioritizing by fee alone is too easy to game (spammer includes a 1-satoshi fee with all their transactions and crowds out all the zero-fee transactions).\n\nSorting by significantly-greater-than-zero-fee first, and then filling up to -maxblocksize with free transactions would also be easy to game (just send lots of zero-priority zero-fee transactions to make the miner always",https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-7240839,7240839,
gavinandresen,2012-07-25T14:50:06Z,"@luke-jr : I think we could safely get the behavior you want by introducing another parameter: lets call it -blockminsize.\n\nThe rules would then be:\nUp to -blockprioritysize, insert transactions based on priority.\nThen insert as many fee-paying transactions as will fit, to a max of -blockmaxsize.\nIf the block is less than -blockminsize big, fill up to -minblocksize with free transactions (whe",https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-7251081,7251081,
luke-jr,2012-07-25T17:57:31Z,"Better to have undocumented options, than not have them at all because they're too hard to document. IMO.\n",https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-7256552,7256552,
gavinandresen,2012-07-25T19:53:42Z,"Implemented -blockminsize, and cleaned up the implementation (use std::heap for the priority queue).\n\nBehavior with default values on the network right now looks reasonable; blocks have a dozen or so high-priority transactions, then are filled with fee-paying transactions. Blocks created are between 60 and 100K big\n",https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-7260018,7260018,
jgarzik,2012-07-26T17:49:08Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1590#issuecomment-7285025,7285025,
