[
  {
    "sha": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "node_id": "C_kwDOABII59oAKGZhNzRkNDUzMDYxNWNmYTAyY2YzMmExNmZhYjZiMTM5MDgyNjZlNmY",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-12T15:19:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-16T18:18:05Z"
      },
      "message": "fuzz: Add minisketch fuzz test",
      "tree": {
        "sha": "2f84d48eb56e9a024029f73427029562e55b5dd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f84d48eb56e9a024029f73427029562e55b5dd9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa74d4530615cfa02cf32a16fab6b13908266e6f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiJ7QwAvfW0PwaaZLwaPppU2h7W9l2fFAEqiZa0GLebhC73EVH4l+hu+Cq2Zn5V\nHmJDTOXJiXt2bkV4sszYWpxDI0UM3Wn9qZsG4M6dyqnHfG1rEKltJG37KyKypQQO\nJ3NTQeHwyipbMVFJ/Kn8tQy7EtFD1YB2M5TimXH84lUnxxlgeBrqfaxTKSoHxWYU\nNX2170Gdk6Ycr/RjBbRl2xwD6rkAMZai1/O/vp4Q3IrqoIFH4jOpv8ooi3NzEmk5\nNQ56jXPdbKwuq0JHZYkt1H3HAOepWTdnR0UUiygdyId3Ufik3CnL2eNgr109oB8r\nzwfmbS184wlOffH7dIA8WeD3XeMQoSyZsEjjZUwFhB21HAwXBdGqOLk9HHQJnKJC\nr3g2xDPZEn/+87RJzjswQMJPzY62WFKCdtuOjpgr3rOS20EV2r6nDG792sDfNH1U\nl1SB66Ak6iCs1I5EO9PtG//q3C1VNPFrWLIo2DXwvvL8mqdQ6j4p10dwrO6v0x2f\nj+H2IhHY\n=DaJW\n-----END PGP SIGNATURE-----",
        "payload": "tree 2f84d48eb56e9a024029f73427029562e55b5dd9\nparent ad09c287cb7033a28f8d0a002c1ca4f194c12f11\nauthor MarcoFalke <falke.marco@gmail.com> 1636730396 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637086685 +0100\n\nfuzz: Add minisketch fuzz test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa74d4530615cfa02cf32a16fab6b13908266e6f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad09c287cb7033a28f8d0a002c1ca4f194c12f11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad09c287cb7033a28f8d0a002c1ca4f194c12f11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad09c287cb7033a28f8d0a002c1ca4f194c12f11"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 66,
      "deletions": 0
    },
    "files": [
      {
        "sha": "715c5bb11cd4954b7e03461f1196709073895e21",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa74d4530615cfa02cf32a16fab6b13908266e6f/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa74d4530615cfa02cf32a16fab6b13908266e6f/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fa74d4530615cfa02cf32a16fab6b13908266e6f",
        "patch": "@@ -51,6 +51,7 @@ FUZZ_SUITE_LD_COMMON = \\\n  $(BOOST_LIBS) \\\n  $(LIBMEMENV) \\\n  $(LIBSECP256K1) \\\n+ $(MINISKETCH_LIBS) \\\n  $(EVENT_LIBS) \\\n  $(EVENT_PTHREADS_LIBS)\n \n@@ -259,6 +260,7 @@ test_fuzz_fuzz_SOURCES = \\\n  test/fuzz/locale.cpp \\\n  test/fuzz/merkleblock.cpp \\\n  test/fuzz/message.cpp \\\n+ test/fuzz/minisketch.cpp \\\n  test/fuzz/muhash.cpp \\\n  test/fuzz/multiplication_overflow.cpp \\\n  test/fuzz/net.cpp \\"
      },
      {
        "sha": "93954bd3cf24253dc23354f920807ba73803c21d",
        "filename": "src/test/fuzz/minisketch.cpp",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa74d4530615cfa02cf32a16fab6b13908266e6f/src/test/fuzz/minisketch.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa74d4530615cfa02cf32a16fab6b13908266e6f/src/test/fuzz/minisketch.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/minisketch.cpp?ref=fa74d4530615cfa02cf32a16fab6b13908266e6f",
        "patch": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <node/minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{std::accumulate(diff.begin(), diff.end(), size_t{0}, [](auto n, const auto& e) { return n + e.second; })};\n+\n+    Minisketch sketch_ar{MakeMinisketch32(capacity)};\n+    Minisketch sketch_br{MakeMinisketch32(capacity)};\n+    sketch_ar.Deserialize(sketch_a.Serialize());\n+    sketch_br.Deserialize(sketch_b.Serialize());\n+\n+    Minisketch sketch_diff{std::move(fuzzed_data_provider.ConsumeBool() ? sketch_a : sketch_ar)};\n+    sketch_diff.Merge(fuzzed_data_provider.ConsumeBool() ? sketch_b : sketch_br);\n+\n+    if (capacity >= num_diff) {\n+        const auto max_elements{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(num_diff, capacity)};\n+        const auto dec{*Assert(sketch_diff.Decode(max_elements))};\n+        Assert(dec.size() == num_diff);\n+        for (auto d : dec) {\n+            Assert(diff.at(d));\n+        }\n+    }\n+}"
      }
    ]
  }
]