[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970453631",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#issuecomment-970453631",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23496",
    "id": 970453631,
    "node_id": "IC_kwDOABII58451_J_",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?u=6e534b25446a57600514192504756c77c2637aae&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-16T16:38:49Z",
    "updated_at": "2021-11-16T16:38:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code Review ACK fa186314840a7da165adbfa86a316d8a4c34b706",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970453631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970457611",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#issuecomment-970457611",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23496",
    "id": 970457611,
    "node_id": "IC_kwDOABII58452AIL",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-16T16:43:13Z",
    "updated_at": "2021-11-16T16:43:13Z",
    "author_association": "MEMBER",
    "body": "Rebased to fix silent merge conflict. Should be trivial to re-ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970457611/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970643926",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#issuecomment-970643926",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23496",
    "id": 970643926,
    "node_id": "IC_kwDOABII58452tnW",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?u=6e534b25446a57600514192504756c77c2637aae&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-16T20:16:27Z",
    "updated_at": "2021-11-16T20:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-ACK fa74d45",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970643926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970656427",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#issuecomment-970656427",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23496",
    "id": 970656427,
    "node_id": "IC_kwDOABII58452wqr",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-16T20:33:54Z",
    "updated_at": "2021-11-16T20:33:54Z",
    "author_association": "MEMBER",
    "body": "utACK fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970656427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750416849",
    "pull_request_review_id": 807499946,
    "id": 750416849,
    "node_id": "PRRC_kwDOABII584sunPR",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm a little confused about this. At first I was wondering why `KeepDiff` couldn't just simply do:\r\n\r\n```c++\r\ndiff[entry] = true;\r\n```\r\n\r\nBut it seems that you're actually trying to account for the case where we encounter the same `entry` value at different iterations. ie `sketch_a.Add(7);` and then later on `sketch_b.Add(7);`, and you want to track that this is not a difference b/w the sets. Am I correct?\r\n\r\nIf I'm understanding this correctly I have some other questions/concerns",
    "created_at": "2021-11-16T15:53:30Z",
    "updated_at": "2021-11-16T16:23:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750416849",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750416849"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750416849"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750416849/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750423977",
    "pull_request_review_id": 807499946,
    "id": 750423977,
    "node_id": "PRRC_kwDOABII584suo-p",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};\n+\n+    Minisketch sketch_ar{MakeMinisketch32(capacity)};\n+    Minisketch sketch_br{MakeMinisketch32(capacity)};\n+    sketch_ar.Deserialize(sketch_a.Serialize());\n+    sketch_br.Deserialize(sketch_b.Serialize());\n+\n+    Minisketch sketch_diff{std::move(fuzzed_data_provider.ConsumeBool() ? sketch_a : sketch_ar)};\n+    sketch_diff.Merge(fuzzed_data_provider.ConsumeBool() ? sketch_b : sketch_br);\n+\n+    if (capacity >= num_diff) {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 56,
    "original_position": 57,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We'll probably only hit this condition ~3% of the time, right (very roughly)?",
    "created_at": "2021-11-16T16:00:16Z",
    "updated_at": "2021-11-16T16:23:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750423977",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750423977"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750423977"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750423977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 56,
    "original_line": 56,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750439210",
    "pull_request_review_id": 807499946,
    "id": 750439210,
    "node_id": "PRRC_kwDOABII584sussq",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};\n+\n+    Minisketch sketch_ar{MakeMinisketch32(capacity)};\n+    Minisketch sketch_br{MakeMinisketch32(capacity)};\n+    sketch_ar.Deserialize(sketch_a.Serialize());\n+    sketch_br.Deserialize(sketch_b.Serialize());\n+\n+    Minisketch sketch_diff{std::move(fuzzed_data_provider.ConsumeBool() ? sketch_a : sketch_ar)};\n+    sketch_diff.Merge(fuzzed_data_provider.ConsumeBool() ? sketch_b : sketch_br);\n+\n+    if (capacity >= num_diff) {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 56,
    "original_position": 57,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Am I correct in my understanding of Minisketch, that if `if (capacity < num_diff)` then `ssize_t num_differences = minisketch_decode(sketch_diff, capacity, differences);` will return `<0` indicating that there are more than `capacity` differences in the set? Can we add an `else` clause and assert this?",
    "created_at": "2021-11-16T16:15:51Z",
    "updated_at": "2021-11-16T16:23:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750439210",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750439210"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750439210"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750439210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 56,
    "original_line": 56,
    "side": "RIGHT",
    "in_reply_to_id": 750423977
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750448194",
    "pull_request_review_id": 807543095,
    "id": 750448194,
    "node_id": "PRRC_kwDOABII584suu5C",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Am I correct?\r\n\r\nYes",
    "created_at": "2021-11-16T16:24:52Z",
    "updated_at": "2021-11-16T16:24:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750448194",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750448194"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750448194"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750448194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 750416849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750449440",
    "pull_request_review_id": 807544895,
    "id": 750449440,
    "node_id": "PRRC_kwDOABII584suvMg",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};\n+\n+    Minisketch sketch_ar{MakeMinisketch32(capacity)};\n+    Minisketch sketch_br{MakeMinisketch32(capacity)};\n+    sketch_ar.Deserialize(sketch_a.Serialize());\n+    sketch_br.Deserialize(sketch_b.Serialize());\n+\n+    Minisketch sketch_diff{std::move(fuzzed_data_provider.ConsumeBool() ? sketch_a : sketch_ar)};\n+    sketch_diff.Merge(fuzzed_data_provider.ConsumeBool() ? sketch_b : sketch_br);\n+\n+    if (capacity >= num_diff) {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 56,
    "original_position": 57,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> We'll probably only hit this condition ~3% of the time, right (very roughly)?\r\n\r\nThat depends on the fuzz engine's randomness and exploration algorithm.",
    "created_at": "2021-11-16T16:26:13Z",
    "updated_at": "2021-11-16T16:26:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750449440",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750449440"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750449440"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750449440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 56,
    "original_line": 56,
    "side": "RIGHT",
    "in_reply_to_id": 750423977
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750450423",
    "pull_request_review_id": 807546170,
    "id": 750450423,
    "node_id": "PRRC_kwDOABII584suvb3",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};\n+\n+    Minisketch sketch_ar{MakeMinisketch32(capacity)};\n+    Minisketch sketch_br{MakeMinisketch32(capacity)};\n+    sketch_ar.Deserialize(sketch_a.Serialize());\n+    sketch_br.Deserialize(sketch_b.Serialize());\n+\n+    Minisketch sketch_diff{std::move(fuzzed_data_provider.ConsumeBool() ? sketch_a : sketch_ar)};\n+    sketch_diff.Merge(fuzzed_data_provider.ConsumeBool() ? sketch_b : sketch_br);\n+\n+    if (capacity >= num_diff) {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 56,
    "original_position": 57,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> will return <0\r\n\r\nI had the same thinking, but it may still succeed \"accidentally\" on some inputs.",
    "created_at": "2021-11-16T16:27:10Z",
    "updated_at": "2021-11-16T16:27:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750450423",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750450423"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750450423"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750450423/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 56,
    "original_line": 56,
    "side": "RIGHT",
    "in_reply_to_id": 750423977
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750454600",
    "pull_request_review_id": 807552056,
    "id": 750454600,
    "node_id": "PRRC_kwDOABII584suwdI",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, then my concern is: collisions like this should be so rare that I'm not even sure we should have the logic to catch these cases (maybe just a comment would be good enough)?\r\n\r\nBut, if we do want to account for these collisions correctly, then I'm not sure this does the job. Bc/ in this case if you add the same element to `sketch_a` twice, it looks like the diff gets flipped. etc...\r\n\r\nAll things considered, I'm wondering if it will be most robust to have a `set_a` and `set_b` alongside the sketches, `num_differences` is then just the size of that set after the `LIMITED_WHILE`",
    "created_at": "2021-11-16T16:31:31Z",
    "updated_at": "2021-11-16T16:32:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750454600",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750454600"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750454600"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750454600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 750416849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750456205",
    "pull_request_review_id": 807554258,
    "id": 750456205,
    "node_id": "PRRC_kwDOABII584suw2N",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Adding the same element twice to a minisketch set will erase it. This is a feature, not a rare edge case.",
    "created_at": "2021-11-16T16:33:10Z",
    "updated_at": "2021-11-16T16:33:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750456205",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750456205"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750456205"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750456205/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 750416849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750456662",
    "pull_request_review_id": 807554936,
    "id": 750456662,
    "node_id": "PRRC_kwDOABII584suw9W",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};\n+\n+    Minisketch sketch_ar{MakeMinisketch32(capacity)};\n+    Minisketch sketch_br{MakeMinisketch32(capacity)};\n+    sketch_ar.Deserialize(sketch_a.Serialize());\n+    sketch_br.Deserialize(sketch_b.Serialize());\n+\n+    Minisketch sketch_diff{std::move(fuzzed_data_provider.ConsumeBool() ? sketch_a : sketch_ar)};\n+    sketch_diff.Merge(fuzzed_data_provider.ConsumeBool() ? sketch_b : sketch_br);\n+\n+    if (capacity >= num_diff) {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 56,
    "original_position": 57,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yep that makes sense. That's where I arrived after reading the Minisketch README more, but wanted to double check anyways",
    "created_at": "2021-11-16T16:33:43Z",
    "updated_at": "2021-11-16T16:33:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750456662",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750456662"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750456662"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750456662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 56,
    "original_line": 56,
    "side": "RIGHT",
    "in_reply_to_id": 750423977
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750459221",
    "pull_request_review_id": 807558392,
    "id": 750459221,
    "node_id": "PRRC_kwDOABII584suxlV",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah wow, interesting. I kinda wondered this while reading the README but figured it wasn't the case. Anyways, would it make sense to reduce the max possible value of `const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};` so that we see these \"collisions\" normally and get more test coverage?",
    "created_at": "2021-11-16T16:36:23Z",
    "updated_at": "2021-11-16T16:36:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750459221",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750459221"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750459221"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750459221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 750416849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750460636",
    "pull_request_review_id": 807560341,
    "id": 750460636,
    "node_id": "PRRC_kwDOABII584sux7c",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I expect the fuzz engine to copy the bytes in the input, so a collision might even be the \"normal\" case.",
    "created_at": "2021-11-16T16:37:49Z",
    "updated_at": "2021-11-16T16:37:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750460636",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750460636"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750460636"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750460636/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 750416849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750462054",
    "pull_request_review_id": 807562222,
    "id": 750462054,
    "node_id": "PRRC_kwDOABII584suyRm",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What @MarcoFalke said, but also: \"rare\" isn't relevant for fuzz tests. The inputs are *not* uniformly distributed; the fuzzer is actively trying to bias the inputs to trigger \"rare\" edge cases.\r\n\r\nEDIT: wrote this seeing marco's latest comment above.",
    "created_at": "2021-11-16T16:39:19Z",
    "updated_at": "2021-11-16T17:05:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750462054",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750462054"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750462054"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750462054/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 750416849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750470906",
    "pull_request_review_id": 807574471,
    "id": 750470906,
    "node_id": "PRRC_kwDOABII584su0b6",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa186314840a7da165adbfa86a316d8a4c34b706",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Interesting, thanks",
    "created_at": "2021-11-16T16:48:28Z",
    "updated_at": "2021-11-16T16:48:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750470906",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750470906"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750470906"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750470906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 750416849
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750474162",
    "pull_request_review_id": 807578983,
    "id": 750474162,
    "node_id": "PRRC_kwDOABII584su1Oy",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <node/minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};\n+\n+    Minisketch sketch_ar{MakeMinisketch32(capacity)};\n+    Minisketch sketch_br{MakeMinisketch32(capacity)};\n+    sketch_ar.Deserialize(sketch_a.Serialize());\n+    sketch_br.Deserialize(sketch_b.Serialize());\n+\n+    Minisketch sketch_diff{std::move(fuzzed_data_provider.ConsumeBool() ? sketch_a : sketch_ar)};\n+    sketch_diff.Merge(fuzzed_data_provider.ConsumeBool() ? sketch_b : sketch_br);\n+\n+    if (capacity >= num_diff) {\n+        const auto max_elements{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(num_diff, capacity)};\n+        const auto dec{*Assert(sketch_diff.Decode(max_elements))};\n+        std::set<uint32_t> decoded_diff;",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": null,
    "original_position": 60,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "faece2197cedf4cad3e18d1827c8942f72ca98e7",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I find this piece of code to compare `dec` with the expected diff a bit convoluted. What about:\r\n\r\n```\r\nassert(dec.size() == num_diff));\r\nfor (auto d : dec) assert(diff[d]);\r\n```\r\n\r\n?",
    "created_at": "2021-11-16T16:52:00Z",
    "updated_at": "2021-11-16T16:52:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750474162",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750474162"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750474162"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750474162/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750485672",
    "pull_request_review_id": 807595109,
    "id": 750485672,
    "node_id": "PRRC_kwDOABII584su4Co",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <node/minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": null,
    "original_position": 47,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "faece2197cedf4cad3e18d1827c8942f72ca98e7",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "FWIW, you can use `[](auto n, const auto e&) { return n + e.second; }` as lambda too.",
    "created_at": "2021-11-16T17:04:33Z",
    "updated_at": "2021-11-16T17:04:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750485672",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750485672"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750485672"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750485672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 47,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750544727",
    "pull_request_review_id": 807676062,
    "id": 750544727,
    "node_id": "PRRC_kwDOABII584svGdX",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <node/minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};\n+\n+    Minisketch sketch_ar{MakeMinisketch32(capacity)};\n+    Minisketch sketch_br{MakeMinisketch32(capacity)};\n+    sketch_ar.Deserialize(sketch_a.Serialize());\n+    sketch_br.Deserialize(sketch_b.Serialize());\n+\n+    Minisketch sketch_diff{std::move(fuzzed_data_provider.ConsumeBool() ? sketch_a : sketch_ar)};\n+    sketch_diff.Merge(fuzzed_data_provider.ConsumeBool() ? sketch_b : sketch_br);\n+\n+    if (capacity >= num_diff) {\n+        const auto max_elements{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(num_diff, capacity)};\n+        const auto dec{*Assert(sketch_diff.Decode(max_elements))};\n+        std::set<uint32_t> decoded_diff;",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": null,
    "original_position": 60,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "faece2197cedf4cad3e18d1827c8942f72ca98e7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea, done.",
    "created_at": "2021-11-16T18:19:02Z",
    "updated_at": "2021-11-16T18:19:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750544727",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750544727"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750544727"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750544727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT",
    "in_reply_to_id": 750474162
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750544950",
    "pull_request_review_id": 807676334,
    "id": 750544950,
    "node_id": "PRRC_kwDOABII584svGg2",
    "diff_hunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <node/minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};\n+            mut = !mut;\n+        }};\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                sketch_a.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_b.Add(entry);\n+                KeepDiff();\n+            },\n+            [&] {\n+                sketch_a.Add(entry);\n+                sketch_b.Add(entry);\n+            });\n+    }\n+    const auto num_diff{\n+        std::accumulate(diff.begin(), diff.end(), size_t{0}, [](size_t n, const std::pair<const uint32_t, bool>& e) { return n + e.second; })};",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": null,
    "original_position": 47,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "faece2197cedf4cad3e18d1827c8942f72ca98e7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice. I didn't know this was added in C++14.\r\n\r\nDone.",
    "created_at": "2021-11-16T18:19:18Z",
    "updated_at": "2021-11-16T18:19:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750544950",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750544950"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750544950"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750544950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 47,
    "side": "RIGHT",
    "in_reply_to_id": 750485672
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750640068",
    "pull_request_review_id": 807806059,
    "id": 750640068,
    "node_id": "PRRC_kwDOABII584svdvE",
    "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <minisketch.h>\n+#include <node/minisketchwrapper.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <util/check.h>\n+\n+#include <map>\n+#include <numeric>\n+\n+FUZZ_TARGET(minisketch)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto capacity{fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 200)};\n+    Minisketch sketch_a{Assert(MakeMinisketch32(capacity))};\n+    Minisketch sketch_b{Assert(MakeMinisketch32(capacity))};\n+\n+    // Fill two sets and keep the difference in a map\n+    std::map<uint32_t, bool> diff;\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000)\n+    {\n+        const auto entry{fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(1, std::numeric_limits<uint32_t>::max() - 1)};\n+        const auto KeepDiff{[&] {\n+            bool& mut{diff[entry]};",
    "path": "src/test/fuzz/minisketch.cpp",
    "position": 28,
    "original_position": 28,
    "commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "original_commit_id": "fa74d4530615cfa02cf32a16fab6b13908266e6f",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Micronit: `diff[entry] ^= true;` or `diff[entry] ^= 1;` also works (feel free to ignore).",
    "created_at": "2021-11-16T20:33:33Z",
    "updated_at": "2021-11-16T20:34:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750640068",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750640068"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23496#discussion_r750640068"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23496"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/750640068/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 28,
    "original_line": 28,
    "side": "RIGHT"
  }
]