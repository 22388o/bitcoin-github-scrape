ajtowns,2019-09-11 05:14:45,"This is particularly useful with support for package relay, see #16401.\n\nIt would be possible to go a bit further and drop mapRelay entirely; but we want to delay relaying transactions until we've inv'ed them, and currently we use mapRelay for that logic -- ie, we receive a tx, add it to setInventoryTxToSend, wait for a random poisson delay, INV the tx to a peer, add it to mapRelay, and only t",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-530222619,530222619,
sdaftuar,2019-09-11 17:56:55,"Code review ACK, will test.\n\nI believe this will be useful even without package relay -- whenever a node starts up with an empty (or stale) mempool, transactions with parents fail to make it into the mempool because our peers won't serve parents that were previously relayed.\n\nBut I would also like this bug to be fixed as soon as possible, so that a package-acceptance scheme like what I'm p",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-530493789,530493789,
sdaftuar,2019-09-11 20:13:47,"ACK 7b2dbf9e4bdbacd16ccd4923a6ebf4f93d7a799b\n\nI ran a new node connected only to a node running this patch, and observed that as transaction relay started (after IBD) that the node started receiving orphan transactions that were then accepted to the mempool after the parents were fetched. ",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-530546674,530546674,
laanwj,2019-09-12 10:03:35,"Concept ACK\n\nI don't think so, but asking for sake of completeness: this will not affect privacy (fingerprinting) negatively, will it?",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-530756972,530756972,
ajtowns,2019-09-12 12:05:01,"> I don't think so, but asking for sake of completeness: this will not affect privacy (fingerprinting) negatively, will it?\n\nI don't think so; I think you can already tell if tx ""X"" is in a peer's mempool by constructing a tx with ""X:0"" and ""Y:0"" as inputs (Y being a non-existent txid, providing invalid sigs for both, relies on X being rbf'able or X:0 not being spent yet), and see if they requ",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-530794255,530794255,
sdaftuar,2019-09-12 12:56:09,"I agree with @ajtowns that this shouldn't add any additional privacy leak, because it's already possible to test the presence of a transaction in the mempool.\n\n~~On further thought, I wonder if this may need additional anti-DoS protection. In `ProcessGetData()`, I believe we rate limit tx-getdata requests by (a) the contents of mapRelay (which should be bounded by our inv-timers), and (b) memp",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-530812261,530812261,
promag,2019-09-16 10:09:16,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-531715780,531715780,
MarcoFalke,2019-09-18 19:58:38,"This missed the deadline for 0.19, so maybe it should be removed from high prio and targeted for 0.20?",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-532842171,532842171,
MarcoFalke,2019-09-18 20:00:44,"Concept ACK. I've written #16908, so that those ugly multiplications by `1000000` go away. They aren't particularly review friendly. \n\nWill take a closer look some time later.",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-532842949,532842949,
DrahtBot,2019-09-18 20:28:42,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16698](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16698.html) ([WIP] Mempool: rework rebroadcast logic to ",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-532852781,532852781,
MarcoFalke,2019-10-02 14:57:42,Needs rebase :eyes: ,https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-537533227,537533227,
laanwj,2019-10-09 09:24:26,"code review ACK aaca5d90c0859ea3883f71aa7bc7e30cfab87a21\n\nI think this is a good candidate for early merge for 0.20 (to be able to notice issues with this change in behavior far before a relase).",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-539917889,539917889,
MarcoFalke,2019-10-22 12:14:13,@ajtowns :pray: ^,https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-544932797,544932797,
MarcoFalke,2019-10-23 15:58:28,"re-ACK 168b781fe7f3f13b24c52a151f36de4cdd0a340a (only change is comment fixup)\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK 168b781fe7f3f13b24c52a151f36de4cdd0a340a (only change is comment fixup)\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1a",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-545514347,545514347,
sipa,2019-10-23 16:07:45,I'm not sure if we should just give up on trying to prevent testing the contents of our mempool?,https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-545518509,545518509,
MarcoFalke,2019-10-23 16:18:30,"> I'm not sure if we should just give up on trying to prevent testing the contents of our mempool?\n\nLong term it probably make sense to give up on it. Though, as long as the default wallet behaviour is to put the txs in the mempool immediately, we should keep the privacy effect of mapRelay.",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-545522973,545522973,
MarcoFalke,2019-10-23 16:51:44,This change has no adverse effect on privacy unless I am mistaken. It is a nice tx relay improvement.,https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-545536588,545536588,
sipa,2019-10-23 16:54:31,"I deleted my earlier comment, as I realized I missed the distinction between what this PR does (making txn available after expiry) and the idea of dropping mapRelay entirely (making everything always available). I was confused by the ""this is not a privacy leak because mempool presence can be tested in different ways"" response; while that's true, it's also not a privacy leak even if there were no ",https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-545537705,545537705,
sdaftuar,2019-10-23 18:41:54,re-ACK 168b781fe7f3f13b24c52a151f36de4cdd0a340a,https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-545581716,545581716,
sipa,2019-10-24 18:06:47,ACK 168b781fe7f3f13b24c52a151f36de4cdd0a340a,https://github.com/bitcoin/bitcoin/pull/16851#issuecomment-546035914,546035914,
MarcoFalke,2019-10-15 19:39:55,"The comment sounds a bit misleading to me.\n\nThis is not an ""expire"" time, but how long txs are cached for relay in mapRelay until we fall back to getting them from the mempool, right?",https://github.com/bitcoin/bitcoin/pull/16851#discussion_r335140133,335140133,src/net_processing.cpp
MarcoFalke,2019-10-15 19:42:38,"Maybe\n\n```cpp\n/** How long we cache mempool txs in mapRelay to reply to getdata requests TODO: remove the mapRelay cache */\nRELAY_TX_CACHE_DURATION",https://github.com/bitcoin/bitcoin/pull/16851#discussion_r335141214,335141214,src/net_processing.cpp
ajtowns,2019-10-23 01:36:46,`/** How long to cache transactions in mapRelay for normal relay */` and `RELAY_TX_CACHE_TIME` ? Doesn't seem like a great place to add the TODO so I've left that out,https://github.com/bitcoin/bitcoin/pull/16851#discussion_r337817252,337817252,src/net_processing.cpp
