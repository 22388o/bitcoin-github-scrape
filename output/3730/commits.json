[
  {
    "sha": "1d46fe3327f6645fd79b442cd72ef422418c1a50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDQ2ZmUzMzI3ZjY2NDVmZDc5YjQ0MmNkNzJlZjQyMjQxOGMxYTUw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-02-22T11:02:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-03-27T11:33:55Z"
      },
      "message": "'sendrawtransaction' improvements\n\n- Make it report the reject code and reason\n- Make it possible to re-send transactions that are already in the mempool",
      "tree": {
        "sha": "0f7a4f089e41ba3e6697e8e30436f2f7b36f756f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f7a4f089e41ba3e6697e8e30436f2f7b36f756f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d46fe3327f6645fd79b442cd72ef422418c1a50",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d46fe3327f6645fd79b442cd72ef422418c1a50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d46fe3327f6645fd79b442cd72ef422418c1a50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d46fe3327f6645fd79b442cd72ef422418c1a50/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ebb783a9f2acd0992a5497deb4953271ebfa4726",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb783a9f2acd0992a5497deb4953271ebfa4726",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ebb783a9f2acd0992a5497deb4953271ebfa4726"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 17,
      "deletions": 16
    },
    "files": [
      {
        "sha": "8b3df1962142d08fbd3bef18b2c4e6c9b3892062",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d46fe3327f6645fd79b442cd72ef422418c1a50/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d46fe3327f6645fd79b442cd72ef422418c1a50/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=1d46fe3327f6645fd79b442cd72ef422418c1a50",
        "patch": "@@ -49,6 +49,9 @@ enum RPCErrorCode\n     RPC_INVALID_PARAMETER           = -8,  // Invalid, missing or duplicate parameter\n     RPC_DATABASE_ERROR              = -20, // Database error\n     RPC_DESERIALIZATION_ERROR       = -22, // Error parsing or validating structure in raw format\n+    RPC_TRANSACTION_ERROR           = -25, // General error during transaction submission\n+    RPC_TRANSACTION_REJECTED        = -26, // Transaction was rejected by network rules\n+    RPC_TRANSACTION_ALREADY_IN_CHAIN= -27, // Transaction already in chain\n \n     // P2P client errors\n     RPC_CLIENT_NOT_CONNECTED        = -9,  // Bitcoin is not connected"
      },
      {
        "sha": "f0267cf8abd013914db4a58698fbbde09ce85a9b",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 16,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d46fe3327f6645fd79b442cd72ef422418c1a50/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d46fe3327f6645fd79b442cd72ef422418c1a50/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=1d46fe3327f6645fd79b442cd72ef422418c1a50",
        "patch": "@@ -777,25 +777,23 @@ Value sendrawtransaction(const Array& params, bool fHelp)\n     }\n     uint256 hashTx = tx.GetHash();\n \n-    bool fHave = false;\n     CCoinsViewCache &view = *pcoinsTip;\n     CCoins existingCoins;\n-    {\n-        fHave = view.GetCoins(hashTx, existingCoins);\n-        if (!fHave) {\n-            // push to local node\n-            CValidationState state;\n-            if (!AcceptToMemoryPool(mempool, state, tx, false, NULL, !fOverrideFees))\n-                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX rejected\"); // TODO: report validation state\n+    bool fHaveMempool = mempool.exists(hashTx);\n+    bool fHaveChain = view.GetCoins(hashTx, existingCoins) && existingCoins.nHeight < 1000000000;\n+    if (!fHaveMempool && !fHaveChain) {\n+        // push to local node and sync with wallets\n+        CValidationState state;\n+        if (AcceptToMemoryPool(mempool, state, tx, false, NULL, !fOverrideFees))\n+            SyncWithWallets(hashTx, tx, NULL);\n+        else {\n+            if(state.IsInvalid())\n+                throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf(\"%i: %s\", state.GetRejectCode(), state.GetRejectReason()));\n+            else\n+                throw JSONRPCError(RPC_TRANSACTION_ERROR, state.GetRejectReason());\n         }\n-    }\n-    if (fHave) {\n-        if (existingCoins.nHeight < 1000000000)\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"transaction already in block chain\");\n-        // Not in block, but already in the memory pool; will drop\n-        // through to re-relay it.\n-    } else {\n-        SyncWithWallets(hashTx, tx, NULL);\n+    } else if (fHaveChain) {\n+        throw JSONRPCError(RPC_TRANSACTION_ALREADY_IN_CHAIN, \"transaction already in block chain\");\n     }\n     RelayTransaction(tx, hashTx);\n "
      }
    ]
  }
]