laanwj,2020-11-23 10:07:28,"Concept ACK, see also discussion in https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-731748771",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-732058845,732058845,
DrahtBot,2020-11-23 10:53:54,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20452](https://github.com/bitcoin/bitcoin/pull/20452) (util: Replace use of locale dependent atoi(…) with locale-indepen",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-732083971,732083971,
practicalswift,2020-12-01 15:57:46,"Like #20452 this one is blocked on #20460. That's the reason for the CI failures :)\n\n",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-736644631,736644631,
practicalswift,2020-12-15 12:57:30,"Could remove ""Waiting for author""? I don't know if we have any ""Blocked on another PR/issue"" (or ""Waiting for toolchain upgrade"") tag, but this PR is blocked on #20460 :)",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-745270759,745270759,
jonatack,2021-03-02 21:43:51,Concept ACK. Looks very good; hope to see this unblocked with `std::fs`.,https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-789241385,789241385,
practicalswift,2021-09-29 14:18:45,"Now that #20460 has been merged I think this PR should be ready for final review :)\n\nSee also related PR #20452.",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-930222323,930222323,
laanwj,2021-09-30 12:59:17,"Nice!\nCode review ACK 4747db876154ddd828c03d9eda10ecf8b25d8dc8",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-931298104,931298104,
MarcoFalke,2021-10-01 16:10:27,Created a follow-up in #23156,https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-932363150,932363150,
rebroad,2021-10-13 16:17:53,"```\n  CXX      qt/qt_bitcoin_qt-main.o\nIn file included from qt/main.cpp:5:\nIn file included from ./qt/bitcoin.h:12:\nIn file included from ./interfaces/node.h:10:\nIn file included from ./net.h:9:\nIn file included from ./addrman.h:9:\nIn file included from ./netaddress.h:19:\n./util/strencodings.h:16:10: fatal error: 'charconv' file not found\n#include <charconv>\n         ^~~~~~~~~",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-942467931,942467931,
sipa,2021-10-13 16:19:54,"@rebroad Bizarre, sounds like you're not using a C++17 compliant compiler.",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-942469853,942469853,
rebroad,2021-10-13 16:35:56,"> @rebroad Bizarre, sounds like you're not using a C++17 compliant compiler.\n\nStill getting the same error when compiling in a clean directory... could it be an issue caused by ccache?",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-942485330,942485330,
rebroad,2021-10-13 18:53:26,"```\n4747db876154ddd828c03d9eda10ecf8b25d8dc8 is the first bad commit\ncommit 4747db876154ddd828c03d9eda10ecf8b25d8dc8\nAuthor: practicalswift <practicalswift@users.noreply.github.com>\nDate:   Sat Sep 18 04:30:30 2021 +0000\n\n    util: Introduce ToIntegral<T>(const std::string&) for locale independent parsing using std::from_chars(…) (C++17)\n\n    util: Avoid locale dependent functions ",https://github.com/bitcoin/bitcoin/pull/20457#issuecomment-942618031,942618031,
MarcoFalke,2021-10-01 10:02:36,"Can you explain what the `{` are supposed to do? I think they can be removed, as they are confusing as-is. If you want them to check (for whatever reason) that result fits in type `T`, you will have to type `return T{result};`",https://github.com/bitcoin/bitcoin/pull/20457#discussion_r720116866,720116866,src/util/strencodings.h
practicalswift,2021-10-01 15:27:58,"In this specific case `return result;` should be equivalent to `return {result};` since the return type is `std::optional<T>` and `result` is of type `T`. I can see your point about braces looking a bit odd here: feel free to change :)\n\nSome context behind the ""braced return"" style more generally: it can help avoid nasty implicit narrowing conversions like in the following example.\n\n```\n",https://github.com/bitcoin/bitcoin/pull/20457#discussion_r720343234,720343234,src/util/strencodings.h
practicalswift,2021-10-01 15:33:44,FWIW also: https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html,https://github.com/bitcoin/bitcoin/pull/20457#discussion_r720347602,720347602,src/util/strencodings.h
MarcoFalke,2021-10-01 15:47:44,"> FWIW also: https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html\n\n\n`return {baz};` fails when `explicit Foo(Baz)`",https://github.com/bitcoin/bitcoin/pull/20457#discussion_r720357670,720357670,src/util/strencodings.h
MarcoFalke,2021-10-01 16:01:16,I am wondering if it makes sense to explain in simple terms the format that is required to be parsed successfully. In regex terms it would be `-?[0-9]+`?,https://github.com/bitcoin/bitcoin/pull/20457#discussion_r720366910,720366910,src/util/strencodings.h
