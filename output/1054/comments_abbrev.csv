jgarzik,2012-04-07T08:24:25Z,"1) why do you ""cd .."" in\n     cd ..; contrib/genbuild.sh >src/build.h; cd src\n?\n\nit seems like one command would suffice:\n     ../contrib/genbuild.sh > build.h\n\n2) do we want to update 'clean' targets?\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5006748,5006748,
sipa,2012-04-07T11:02:14Z,"@jgarzik \n\n1) genbuild.sh depends on being run from the project's root directory, which may include a commit id\n\n2) no idea what you mean\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5007416,5007416,
laanwj,2012-04-07T14:15:56Z,"Looks like useful functionality. However, as I understand it (I'm not a makefile guru though), build.h is force-written on every build. \n\nWon't this cause the dependent compilation unit (version.cpp) to be built every time, and a subsequent link?\n\nIdeally, to prevent this, build.h should be left untouched if it still matches the current version info.\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5008443,5008443,
sipa,2012-04-07T14:35:00Z,"@laanwj yes, indeed; version.cpp is built every time, and linking is done every time. These are small, and won't take much time to build. However, preventing such a rebuild every time would be nice indeed. No idea how to pull that off via a makefile, though.\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5008598,5008598,
luke-jr,2012-04-07T14:38:11Z,"Write a .new file, use diff to compare, then mv over the real file if different?\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5008620,5008620,
laanwj,2012-04-07T14:42:19Z,"Could certainly be done in sh script. Something like:\n\n```\nBUILD_H=src/build.h\nif [ -e ""$BUILD_H"" ] ; then\n    CURRENT_BUILD_VERSION=`cat $BUILD_H`\nelse\n    CURRENT_BUILD_VERSION=\nfi\n# expected to be run in the project's root directory\nif [ -d .git -a -e ""$(which git)"" ]; then\n    NEW_BUILD_VERSION=""#define BUILD_DESC \""$(git describe)\""""\nelif echo $PWD | grep '/[a-z]\+-[a-z]\+-[0-9a-f",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5008654,5008654,
laanwj,2012-04-07T14:47:56Z,Luke's suggestion is easier.\n,https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5008683,5008683,
sipa,2012-04-07T14:49:07Z,"Right, of course. That won't prevent rebuilding build.h, but it will prevent its dependencies from being rebuilt.\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5008692,5008692,
sipa,2012-04-07T15:14:30Z,"New version, mostly following @laanwj's idea, but generalized genbuild.sh a bit.\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5008902,5008902,
laanwj,2012-04-07T15:28:46Z,I just realized: I think we don't handle the case in which an empty build.h file needs to be created (as an empty file is handled in the same way as no file).\n\nMaybe set NEWINFO to a C++ comment i.s.o. completely empty when no version info can be found...\n,https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5009019,5009019,
sipa,2012-04-07T19:43:47Z,"Ok, fairly large rewrite: by using the export-subst git attribute in a somewhat hacky way, the commit id is now included statically in version.cpp in exported source trees (github tar/zip bundles, output of the git-archive command, gitian build src/ directories, ...). contrib/build.sh is only used for running a git-describe where possible anyway, and does not require cd'ing to a root anymore.\n\nT",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5011072,5011072,
luke-jr,2012-04-07T21:23:56Z,I don't think this will put the correct file in the Win32-setup source?\n,https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5011632,5011632,
sipa,2012-04-07T23:02:06Z,@luke-jr now it does.\n,https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5012158,5012158,
jgarzik,2012-04-08T00:18:25Z,"1) there should be no need to run from project's root dir.  git certainly works in sub-directories (where "".git"" is in .. etc.)\n\n2) 'clean' is a makefile target.  one types ""make clean"" (or sometimes ""make distclean"")  to remove build generated objects.  Your change fails to update the 'clean' makefile target.  The general rationale is that you want your build to be able to clean up after itself",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5012514,5012514,
sipa,2012-04-08T00:31:44Z,"1) there was; this was for handling cases where we worked in a gitless environnement. the script looked at the directory name to find the commit id (since github's tarballs contain a directory [projname]-[reponame]-[commitid]). The script used some pattern matching on the last component of $PWD to find this. I've now switched to using the export-subst method, which is far more robust.\n\n2) oh sur",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5012569,5012569,
sipa,2012-04-09T16:40:00Z,"Ok, updated, simplified and added some comments. I've also changed it to use git describe --dirty, which will result in nice version strings like 0.6.0-66-g4f364be-dirty-beta. The problem is that the gitian scripts modify the source directory before building, so they too result in the dirty marker being added. It could be avoided by setting some env variable to disable the dirty marker entirely, b",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5028403,5028403,
luke-jr,2012-04-10T13:52:18Z,version.cpp:43:23: fatal error: build.h: No such file or directory\n,https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5046279,5046279,
sipa,2012-04-10T16:51:10Z,"Ok, again some changes: the ""dirty"" flag added in the gitian builds was a result of a bug in git that was fixed in 1.7.7. For now I've worked around it. Gitian builds are now done from a clean repository, and seem to be deterministic.\n\nI also added a CLIENT_DATE next to CLIENT_BUILD, with either the time of the last commit, or the build time. It's written to debug.log at startup. If someone want",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5050483,5050483,
jgarzik,2012-04-10T18:49:23Z,"ACK\n\nWould prefer that genbuild.sh output to stdout, rather than overwrote a file, but that's not a big deal.\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5053309,5053309,
sipa,2012-04-10T18:53:05Z,"@jgarzik reason is that we want to prevent build.h being updated unnecessarily, as that would cause a rebuild of version.cpp and linking every time.\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5053406,5053406,
jgarzik,2012-04-10T18:55:21Z,"I know the reason the logic exists.  It is only a question of taste, where that logic should go.  Did not mean to suggest the logic should be deleted.\n",https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5053466,5053466,
gavinandresen,2012-04-10T20:25:47Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1054#issuecomment-5055365,5055365,
luke-jr,2012-04-07T01:24:49Z,Shouldn't this be conditional on !windows?\n,https://github.com/bitcoin/bitcoin/pull/1054#discussion_r657494,657494,bitcoin-qt.pro
luke-jr,2012-04-07T01:25:56Z,"How about having genbuild.sh write to stdout, and pipe it to build.h here?\n",https://github.com/bitcoin/bitcoin/pull/1054#discussion_r657496,657496,src/makefile.linux-mingw
sipa,2012-04-07T02:20:33Z,"Oh yes, indeed. Fixed.\n",https://github.com/bitcoin/bitcoin/pull/1054#discussion_r657558,657558,bitcoin-qt.pro
sipa,2012-04-07T02:20:47Z,That's probably more flexible. Done.\n,https://github.com/bitcoin/bitcoin/pull/1054#discussion_r657559,657559,src/makefile.linux-mingw
gavinandresen,2012-04-09T14:08:44Z,"Can you put a big comment either before or in this complicated nested #ifdef explaining what is going on?  I'm lost.\n\nSomething like:\n""If you're building from an un-tarred git-produced tarball, then blah, if you're building from a checked out git directory then blah or blah depending on blah....""\n",https://github.com/bitcoin/bitcoin/pull/1054#discussion_r660103,660103,src/version.cpp
