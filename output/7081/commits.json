[
  {
    "sha": "45b8e278fba213fc88ff2be532f15c06accfc857",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NWI4ZTI3OGZiYTIxM2ZjODhmZjJiZTUzMmYxNWMwNmFjY2ZjODU3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-02-22T02:41:01Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-12-01T20:57:08Z"
      },
      "message": "-bytespersigop option to additionally limit sigops in transactions we relay and mine",
      "tree": {
        "sha": "7574cdcd43ff43f7c9c5730ce064daca7f0de1a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7574cdcd43ff43f7c9c5730ce064daca7f0de1a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45b8e278fba213fc88ff2be532f15c06accfc857",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45b8e278fba213fc88ff2be532f15c06accfc857",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/45b8e278fba213fc88ff2be532f15c06accfc857",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45b8e278fba213fc88ff2be532f15c06accfc857/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4077ad20d03f0ef61d48ef34b3107661b0ff8ffe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4077ad20d03f0ef61d48ef34b3107661b0ff8ffe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4077ad20d03f0ef61d48ef34b3107661b0ff8ffe"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b4f12a573311ef818b12ef70c286c8cfe58e10f0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45b8e278fba213fc88ff2be532f15c06accfc857/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45b8e278fba213fc88ff2be532f15c06accfc857/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=45b8e278fba213fc88ff2be532f15c06accfc857",
        "patch": "@@ -474,6 +474,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", !Params(CBaseChainParams::TESTNET).RequireStandard()));\n+    strUsage += HelpMessageOpt(\"-bytespersigop\", strprintf(_(\"Minimum bytes per sigop in transactions we relay and mine (default: %u)\"), DEFAULT_BYTES_PER_SIGOP));\n     strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), DEFAULT_ACCEPT_DATACARRIER));\n     strUsage += HelpMessageOpt(\"-datacarriersize\", strprintf(_(\"Maximum size of data in data carrier transactions we relay and mine (default: %u)\"), MAX_OP_RETURN_RELAY));\n \n@@ -937,6 +938,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     fRequireStandard = !GetBoolArg(\"-acceptnonstdtxn\", !Params().RequireStandard());\n     if (Params().RequireStandard() && !fRequireStandard)\n         return InitError(strprintf(\"acceptnonstdtxn is not currently supported for %s chain\", chainparams.NetworkIDString()));\n+    nBytesPerSigOp = GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n #ifdef ENABLE_WALLET\n     if (mapArgs.count(\"-mintxfee\"))"
      },
      {
        "sha": "e860565aa9a329c4faf01cd1639c9203142d0f58",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45b8e278fba213fc88ff2be532f15c06accfc857/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45b8e278fba213fc88ff2be532f15c06accfc857/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=45b8e278fba213fc88ff2be532f15c06accfc857",
        "patch": "@@ -69,6 +69,7 @@ bool fHavePruned = false;\n bool fPruneMode = false;\n bool fIsBareMultisigStd = DEFAULT_PERMIT_BAREMULTISIG;\n bool fRequireStandard = true;\n+unsigned int nBytesPerSigOp = DEFAULT_BYTES_PER_SIGOP;\n bool fCheckBlockIndex = false;\n bool fCheckpointsEnabled = DEFAULT_CHECKPOINTS_ENABLED;\n size_t nCoinCacheUsage = 5000 * 300;\n@@ -937,16 +938,8 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         if (fRequireStandard && !AreInputsStandard(tx, view))\n             return state.Invalid(false, REJECT_NONSTANDARD, \"bad-txns-nonstandard-inputs\");\n \n-        // Check that the transaction doesn't have an excessive number of\n-        // sigops, making it impossible to mine. Since the coinbase transaction\n-        // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n-        // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n-        // merely non-standard transaction.\n         unsigned int nSigOps = GetLegacySigOpCount(tx);\n         nSigOps += GetP2SHSigOpCount(tx, view);\n-        if (nSigOps > MAX_STANDARD_TX_SIGOPS)\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n-                strprintf(\"%d > %d\", nSigOps, MAX_STANDARD_TX_SIGOPS));\n \n         CAmount nValueOut = tx.GetValueOut();\n         CAmount nFees = nValueIn-nValueOut;\n@@ -967,6 +960,15 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx), inChainInputValue, fSpendsCoinbase, nSigOps);\n         unsigned int nSize = entry.GetTxSize();\n \n+        // Check that the transaction doesn't have an excessive number of\n+        // sigops, making it impossible to mine. Since the coinbase transaction\n+        // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n+        // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n+        // merely non-standard transaction.\n+        if ((nSigOps > MAX_STANDARD_TX_SIGOPS) || (nBytesPerSigOp && nSigOps > nSize / nBytesPerSigOp))\n+            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n+                strprintf(\"%d\", nSigOps));\n+\n         // Don't accept it if it can't get into a block\n         CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)"
      },
      {
        "sha": "fba4e0971565a8f4f530e8cc3908eb080eadcf85",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45b8e278fba213fc88ff2be532f15c06accfc857/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45b8e278fba213fc88ff2be532f15c06accfc857/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=45b8e278fba213fc88ff2be532f15c06accfc857",
        "patch": "@@ -92,6 +92,7 @@ static const bool DEFAULT_RELAYPRIORITY = true;\n \n /** Default for -permitbaremultisig */\n static const bool DEFAULT_PERMIT_BAREMULTISIG = true;\n+static const unsigned int DEFAULT_BYTES_PER_SIGOP = 20;\n static const bool DEFAULT_CHECKPOINTS_ENABLED = true;\n static const bool DEFAULT_TXINDEX = false;\n static const unsigned int DEFAULT_BANSCORE_THRESHOLD = 100;\n@@ -122,6 +123,7 @@ extern int nScriptCheckThreads;\n extern bool fTxIndex;\n extern bool fIsBareMultisigStd;\n extern bool fRequireStandard;\n+extern unsigned int nBytesPerSigOp;\n extern bool fCheckBlockIndex;\n extern bool fCheckpointsEnabled;\n extern size_t nCoinCacheUsage;"
      }
    ]
  },
  {
    "sha": "fdc202f4b02802bfb0ec162d71a115eb86f1bde9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZGMyMDJmNGIwMjgwMmJmYjBlYzE2MmQ3MWExMTVlYjg2ZjFiZGU5",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-09T16:17:17Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-09T16:53:12Z"
      },
      "message": "Merge branch bytespersigop",
      "tree": {
        "sha": "c08a9e1db25d3aa435e9ed2305cb80c9957d423a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c08a9e1db25d3aa435e9ed2305cb80c9957d423a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdc202f4b02802bfb0ec162d71a115eb86f1bde9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdc202f4b02802bfb0ec162d71a115eb86f1bde9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fdc202f4b02802bfb0ec162d71a115eb86f1bde9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdc202f4b02802bfb0ec162d71a115eb86f1bde9/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "901b01d674031f9aca717deeb372bafa160a24af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/901b01d674031f9aca717deeb372bafa160a24af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/901b01d674031f9aca717deeb372bafa160a24af"
      },
      {
        "sha": "45b8e278fba213fc88ff2be532f15c06accfc857",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45b8e278fba213fc88ff2be532f15c06accfc857",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45b8e278fba213fc88ff2be532f15c06accfc857"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "399cc8b8d833d61ec514a3289059310bd504f8e7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc202f4b02802bfb0ec162d71a115eb86f1bde9/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc202f4b02802bfb0ec162d71a115eb86f1bde9/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fdc202f4b02802bfb0ec162d71a115eb86f1bde9",
        "patch": "@@ -474,6 +474,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", !Params(CBaseChainParams::TESTNET).RequireStandard()));\n+    strUsage += HelpMessageOpt(\"-bytespersigop\", strprintf(_(\"Minimum bytes per sigop in transactions we relay and mine (default: %u)\"), DEFAULT_BYTES_PER_SIGOP));\n     strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), DEFAULT_ACCEPT_DATACARRIER));\n     strUsage += HelpMessageOpt(\"-datacarriersize\", strprintf(_(\"Maximum size of data in data carrier transactions we relay and mine (default: %u)\"), MAX_OP_RETURN_RELAY));\n \n@@ -937,6 +938,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     fRequireStandard = !GetBoolArg(\"-acceptnonstdtxn\", !Params().RequireStandard());\n     if (Params().RequireStandard() && !fRequireStandard)\n         return InitError(strprintf(\"acceptnonstdtxn is not currently supported for %s chain\", chainparams.NetworkIDString()));\n+    nBytesPerSigOp = GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n #ifdef ENABLE_WALLET\n     if (mapArgs.count(\"-mintxfee\"))"
      },
      {
        "sha": "5c8a51d0ce6be978a97ee513ec9250ac6ebdd667",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc202f4b02802bfb0ec162d71a115eb86f1bde9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc202f4b02802bfb0ec162d71a115eb86f1bde9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=fdc202f4b02802bfb0ec162d71a115eb86f1bde9",
        "patch": "@@ -69,6 +69,7 @@ bool fHavePruned = false;\n bool fPruneMode = false;\n bool fIsBareMultisigStd = DEFAULT_PERMIT_BAREMULTISIG;\n bool fRequireStandard = true;\n+unsigned int nBytesPerSigOp = DEFAULT_BYTES_PER_SIGOP;\n bool fCheckBlockIndex = false;\n bool fCheckpointsEnabled = DEFAULT_CHECKPOINTS_ENABLED;\n size_t nCoinCacheUsage = 5000 * 300;\n@@ -929,16 +930,8 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState &state, const C\n         if (fRequireStandard && !AreInputsStandard(tx, view))\n             return state.Invalid(false, REJECT_NONSTANDARD, \"bad-txns-nonstandard-inputs\");\n \n-        // Check that the transaction doesn't have an excessive number of\n-        // sigops, making it impossible to mine. Since the coinbase transaction\n-        // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n-        // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n-        // merely non-standard transaction.\n         unsigned int nSigOps = GetLegacySigOpCount(tx);\n         nSigOps += GetP2SHSigOpCount(tx, view);\n-        if (nSigOps > MAX_STANDARD_TX_SIGOPS)\n-            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n-                strprintf(\"%d > %d\", nSigOps, MAX_STANDARD_TX_SIGOPS));\n \n         CAmount nValueOut = tx.GetValueOut();\n         CAmount nFees = nValueIn-nValueOut;\n@@ -964,6 +957,15 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState &state, const C\n         CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx), inChainInputValue, fSpendsCoinbase, nSigOps);\n         unsigned int nSize = entry.GetTxSize();\n \n+        // Check that the transaction doesn't have an excessive number of\n+        // sigops, making it impossible to mine. Since the coinbase transaction\n+        // itself can contain sigops MAX_STANDARD_TX_SIGOPS is less than\n+        // MAX_BLOCK_SIGOPS; we still consider this an invalid rather than\n+        // merely non-standard transaction.\n+        if ((nSigOps > MAX_STANDARD_TX_SIGOPS) || (nBytesPerSigOp && nSigOps > nSize / nBytesPerSigOp))\n+            return state.DoS(0, false, REJECT_NONSTANDARD, \"bad-txns-too-many-sigops\", false,\n+                strprintf(\"%d\", nSigOps));\n+\n         CAmount mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);\n         if (mempoolRejectFee > 0 && nModifiedFees < mempoolRejectFee) {\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool min fee not met\", false, strprintf(\"%d < %d\", nFees, mempoolRejectFee));"
      },
      {
        "sha": "453e6146e94f04e9e5c3948c0d54821b332d4fcc",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc202f4b02802bfb0ec162d71a115eb86f1bde9/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc202f4b02802bfb0ec162d71a115eb86f1bde9/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=fdc202f4b02802bfb0ec162d71a115eb86f1bde9",
        "patch": "@@ -92,6 +92,7 @@ static const bool DEFAULT_RELAYPRIORITY = true;\n \n /** Default for -permitbaremultisig */\n static const bool DEFAULT_PERMIT_BAREMULTISIG = true;\n+static const unsigned int DEFAULT_BYTES_PER_SIGOP = 20;\n static const bool DEFAULT_CHECKPOINTS_ENABLED = true;\n static const bool DEFAULT_TXINDEX = false;\n static const unsigned int DEFAULT_BANSCORE_THRESHOLD = 100;\n@@ -122,6 +123,7 @@ extern int nScriptCheckThreads;\n extern bool fTxIndex;\n extern bool fIsBareMultisigStd;\n extern bool fRequireStandard;\n+extern unsigned int nBytesPerSigOp;\n extern bool fCheckBlockIndex;\n extern bool fCheckpointsEnabled;\n extern size_t nCoinCacheUsage;"
      }
    ]
  }
]