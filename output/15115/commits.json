[
  {
    "sha": "11e896f456f6d6eab45eb2c495ceeb05e43c6c98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWU4OTZmNDU2ZjZkNmVhYjQ1ZWIyYzQ5NWNlZWIwNWU0M2M2Yzk4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-12-15T04:20:46Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T13:03:16Z"
      },
      "message": "GUI: TransactionRecord: Use \"any from me\" as the criteria for deciding whether a transaction is a send or receive\n\nThis changes behaviour (IMO for the better) in the case where some but not all inputs are from us, and the net amount is positive.",
      "tree": {
        "sha": "b01dc2694ef723c8eb933d295c306aa7d7411796",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b01dc2694ef723c8eb933d295c306aa7d7411796"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11e896f456f6d6eab45eb2c495ceeb05e43c6c98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11e896f456f6d6eab45eb2c495ceeb05e43c6c98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11e896f456f6d6eab45eb2c495ceeb05e43c6c98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11e896f456f6d6eab45eb2c495ceeb05e43c6c98/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e9b30126545d6ddd8772363e4079d1e4908ad117",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9b30126545d6ddd8772363e4079d1e4908ad117",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9b30126545d6ddd8772363e4079d1e4908ad117"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 16,
      "deletions": 10
    },
    "files": [
      {
        "sha": "29c68e5cdf12a4cfca8f387cbc830325f9b91c79",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 10,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11e896f456f6d6eab45eb2c495ceeb05e43c6c98/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11e896f456f6d6eab45eb2c495ceeb05e43c6c98/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=11e896f456f6d6eab45eb2c495ceeb05e43c6c98",
        "patch": "@@ -35,8 +35,22 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n     uint256 hash = wtx.tx->GetHash();\n     std::map<std::string, std::string> mapValue = wtx.value_map;\n \n-    if (nNet > 0 || wtx.is_coinbase)\n-    {\n+    bool involvesWatchAddress = false;\n+    isminetype fAllFromMe = ISMINE_SPENDABLE;\n+    bool any_from_me = false;\n+    if (wtx.is_coinbase) {\n+        fAllFromMe = ISMINE_NO;\n+    } else {\n+        any_from_me = false;\n+        for (const isminetype mine : wtx.txin_is_mine)\n+        {\n+            if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n+            if(fAllFromMe > mine) fAllFromMe = mine;\n+            if (mine) any_from_me = true;\n+        }\n+    }\n+\n+    if (!any_from_me) {\n         //\n         // Credit\n         //\n@@ -74,14 +88,6 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n     }\n     else\n     {\n-        bool involvesWatchAddress = false;\n-        isminetype fAllFromMe = ISMINE_SPENDABLE;\n-        for (const isminetype mine : wtx.txin_is_mine)\n-        {\n-            if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n-            if(fAllFromMe > mine) fAllFromMe = mine;\n-        }\n-\n         isminetype fAllToMe = ISMINE_SPENDABLE;\n         for (const isminetype mine : wtx.txout_is_mine)\n         {"
      }
    ]
  },
  {
    "sha": "74e41d7a5f66df7561feaac35ac3d42dfb856035",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGU0MWQ3YTVmNjZkZjc1NjFmZWFhYzM1YWMzZDQyZGZiODU2MDM1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-12-15T19:52:03Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T13:35:05Z"
      },
      "message": "GUI: TransactionRecord: Refactor to turn send-to-self into send+receive pairs",
      "tree": {
        "sha": "2a2a6df4d9acfbb246f0e98216d4f560df28b675",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a2a6df4d9acfbb246f0e98216d4f560df28b675"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74e41d7a5f66df7561feaac35ac3d42dfb856035",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e41d7a5f66df7561feaac35ac3d42dfb856035",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74e41d7a5f66df7561feaac35ac3d42dfb856035",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e41d7a5f66df7561feaac35ac3d42dfb856035/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11e896f456f6d6eab45eb2c495ceeb05e43c6c98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11e896f456f6d6eab45eb2c495ceeb05e43c6c98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11e896f456f6d6eab45eb2c495ceeb05e43c6c98"
      }
    ],
    "stats": {
      "total": 132,
      "additions": 55,
      "deletions": 77
    },
    "files": [
      {
        "sha": "1c560064e27735c745205ba1879a224b31accb0d",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74e41d7a5f66df7561feaac35ac3d42dfb856035/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74e41d7a5f66df7561feaac35ac3d42dfb856035/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=74e41d7a5f66df7561feaac35ac3d42dfb856035",
        "patch": "@@ -48,6 +48,7 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n     result.txout_address_is_mine.reserve(wtx.tx->vout.size());\n     for (const auto& txout : wtx.tx->vout) {\n         result.txout_is_mine.emplace_back(wallet.IsMine(txout));\n+        result.txout_is_change.push_back(wallet.IsChange(txout));\n         result.txout_address.emplace_back();\n         result.txout_address_is_mine.emplace_back(ExtractDestination(txout.scriptPubKey, result.txout_address.back()) ?\n                                                       wallet.IsMine(result.txout_address.back()) :"
      },
      {
        "sha": "71f74c18a95e472b027ec6bb40bd31a399528435",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74e41d7a5f66df7561feaac35ac3d42dfb856035/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74e41d7a5f66df7561feaac35ac3d42dfb856035/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=74e41d7a5f66df7561feaac35ac3d42dfb856035",
        "patch": "@@ -341,6 +341,7 @@ struct WalletTx\n     CTransactionRef tx;\n     std::vector<isminetype> txin_is_mine;\n     std::vector<isminetype> txout_is_mine;\n+    std::vector<bool> txout_is_change;\n     std::vector<CTxDestination> txout_address;\n     std::vector<isminetype> txout_address_is_mine;\n     CAmount credit;"
      },
      {
        "sha": "8fb14fc85633c7058515337befb177de35478f71",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 77,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74e41d7a5f66df7561feaac35ac3d42dfb856035/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74e41d7a5f66df7561feaac35ac3d42dfb856035/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=74e41d7a5f66df7561feaac35ac3d42dfb856035",
        "patch": "@@ -50,90 +50,36 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n         }\n     }\n \n-    if (!any_from_me) {\n-        //\n-        // Credit\n-        //\n-        for(unsigned int i = 0; i < wtx.tx->vout.size(); i++)\n-        {\n-            const CTxOut& txout = wtx.tx->vout[i];\n-            isminetype mine = wtx.txout_is_mine[i];\n-            if(mine)\n-            {\n-                TransactionRecord sub(hash, nTime);\n-                sub.idx = i; // vout index\n-                sub.credit = txout.nValue;\n-                sub.involvesWatchAddress = mine & ISMINE_WATCH_ONLY;\n-                if (wtx.txout_address_is_mine[i])\n-                {\n-                    // Received by Bitcoin Address\n-                    sub.type = TransactionRecord::RecvWithAddress;\n-                    sub.address = EncodeDestination(wtx.txout_address[i]);\n-                }\n-                else\n-                {\n-                    // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n-                    sub.type = TransactionRecord::RecvFromOther;\n-                    sub.address = mapValue[\"from\"];\n-                }\n-                if (wtx.is_coinbase)\n-                {\n-                    // Generated\n-                    sub.type = TransactionRecord::Generated;\n-                }\n-\n-                parts.append(sub);\n-            }\n-        }\n-    }\n-    else\n-    {\n-        isminetype fAllToMe = ISMINE_SPENDABLE;\n+    if (fAllFromMe || !any_from_me) {\n         for (const isminetype mine : wtx.txout_is_mine)\n         {\n             if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n-            if(fAllToMe > mine) fAllToMe = mine;\n         }\n \n-        if (fAllFromMe && fAllToMe)\n+        CAmount nTxFee = nDebit - wtx.tx->GetValueOut();\n+\n+        for(unsigned int i = 0; i < wtx.tx->vout.size(); i++)\n         {\n-            // Payment to self\n-            std::string address;\n-            for (auto it = wtx.txout_address.begin(); it != wtx.txout_address.end(); ++it) {\n-                if (it != wtx.txout_address.begin()) address += \", \";\n-                address += EncodeDestination(*it);\n+            const CTxOut& txout = wtx.tx->vout[i];\n+\n+            if (wtx.txout_is_change[i]) {\n+                continue;\n             }\n \n-            CAmount nChange = wtx.change;\n-            parts.append(TransactionRecord(hash, nTime, TransactionRecord::SendToSelf, address, -(nDebit - nChange), nCredit - nChange));\n-            parts.last().involvesWatchAddress = involvesWatchAddress;   // maybe pass to TransactionRecord as constructor argument\n-        }\n-        else if (fAllFromMe)\n-        {\n-            //\n-            // Debit\n-            //\n-            CAmount nTxFee = nDebit - wtx.tx->GetValueOut();\n+            if (fAllFromMe) {\n+                //\n+                // Debit\n+                //\n \n-            for (unsigned int nOut = 0; nOut < wtx.tx->vout.size(); nOut++)\n-            {\n-                const CTxOut& txout = wtx.tx->vout[nOut];\n                 TransactionRecord sub(hash, nTime);\n-                sub.idx = nOut;\n+                sub.idx = i;\n                 sub.involvesWatchAddress = involvesWatchAddress;\n \n-                if(wtx.txout_is_mine[nOut])\n-                {\n-                    // Ignore parts sent to self, as this is usually the change\n-                    // from a transaction sent back to our own address.\n-                    continue;\n-                }\n-\n-                if (!boost::get<CNoDestination>(&wtx.txout_address[nOut]))\n+                if (!boost::get<CNoDestination>(&wtx.txout_address[i]))\n                 {\n                     // Sent to Bitcoin Address\n                     sub.type = TransactionRecord::SendToAddress;\n-                    sub.address = EncodeDestination(wtx.txout_address[nOut]);\n+                    sub.address = EncodeDestination(wtx.txout_address[i]);\n                 }\n                 else\n                 {\n@@ -153,15 +99,45 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n \n                 parts.append(sub);\n             }\n+\n+            isminetype mine = wtx.txout_is_mine[i];\n+            if(mine)\n+            {\n+                //\n+                // Credit\n+                //\n+\n+                TransactionRecord sub(hash, nTime);\n+                sub.idx = i; // vout index\n+                sub.credit = txout.nValue;\n+                sub.involvesWatchAddress = mine & ISMINE_WATCH_ONLY;\n+                if (wtx.txout_address_is_mine[i])\n+                {\n+                    // Received by Bitcoin Address\n+                    sub.type = TransactionRecord::RecvWithAddress;\n+                    sub.address = EncodeDestination(wtx.txout_address[i]);\n+                }\n+                else\n+                {\n+                    // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n+                    sub.type = TransactionRecord::RecvFromOther;\n+                    sub.address = mapValue[\"from\"];\n+                }\n+                if (wtx.is_coinbase)\n+                {\n+                    // Generated\n+                    sub.type = TransactionRecord::Generated;\n+                }\n+\n+                parts.append(sub);\n+            }\n         }\n-        else\n-        {\n-            //\n-            // Mixed debit transaction, can't break down payees\n-            //\n-            parts.append(TransactionRecord(hash, nTime, TransactionRecord::Other, \"\", nNet, 0));\n-            parts.last().involvesWatchAddress = involvesWatchAddress;\n-        }\n+    } else {\n+        //\n+        // Mixed debit transaction, can't break down payees\n+        //\n+        parts.append(TransactionRecord(hash, nTime, TransactionRecord::Other, \"\", nNet, 0));\n+        parts.last().involvesWatchAddress = involvesWatchAddress;\n     }\n \n     return parts;"
      }
    ]
  },
  {
    "sha": "7d408b13a0b8d493fbfa49010b485e4d374c4f50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDQwOGIxM2EwYjhkNDkzZmJmYTQ5MDEwYjQ4NWU0ZDM3NGM0ZjUw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-01-06T12:45:52Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T13:35:06Z"
      },
      "message": "GUI: Remove SendToSelf TransactionRecord type",
      "tree": {
        "sha": "12233702ba8f54a100a7ca326b51ffc3ecdb5ea0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12233702ba8f54a100a7ca326b51ffc3ecdb5ea0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d408b13a0b8d493fbfa49010b485e4d374c4f50",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d408b13a0b8d493fbfa49010b485e4d374c4f50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d408b13a0b8d493fbfa49010b485e4d374c4f50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d408b13a0b8d493fbfa49010b485e4d374c4f50/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74e41d7a5f66df7561feaac35ac3d42dfb856035",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e41d7a5f66df7561feaac35ac3d42dfb856035",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74e41d7a5f66df7561feaac35ac3d42dfb856035"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "66daeed2bcdaa9bc7e4f11b06d3343f398d1a0ea",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d408b13a0b8d493fbfa49010b485e4d374c4f50/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d408b13a0b8d493fbfa49010b485e4d374c4f50/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=7d408b13a0b8d493fbfa49010b485e4d374c4f50",
        "patch": "@@ -80,7 +80,6 @@ class TransactionRecord\n         SendToOther,\n         RecvWithAddress,\n         RecvFromOther,\n-        SendToSelf\n     };\n \n     /** Number of confirmation recommended for accepting a transaction */"
      },
      {
        "sha": "93321ff8d146d6d49c74781a62be8738cf16aa62",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d408b13a0b8d493fbfa49010b485e4d374c4f50/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d408b13a0b8d493fbfa49010b485e4d374c4f50/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=7d408b13a0b8d493fbfa49010b485e4d374c4f50",
        "patch": "@@ -345,8 +345,6 @@ QString TransactionTableModel::formatTxType(const TransactionRecord *wtx) const\n     case TransactionRecord::SendToAddress:\n     case TransactionRecord::SendToOther:\n         return tr(\"Sent to\");\n-    case TransactionRecord::SendToSelf:\n-        return tr(\"Payment to yourself\");\n     case TransactionRecord::Generated:\n         return tr(\"Mined\");\n     default:\n@@ -389,8 +387,6 @@ QString TransactionTableModel::formatTxToAddress(const TransactionRecord *wtx, b\n         return lookupAddress(wtx->address, tooltip) + watchAddress;\n     case TransactionRecord::SendToOther:\n         return QString::fromStdString(wtx->address) + watchAddress;\n-    case TransactionRecord::SendToSelf:\n-        return lookupAddress(wtx->address, tooltip) + watchAddress;\n     default:\n         return tr(\"(n/a)\") + watchAddress;\n     }\n@@ -409,8 +405,6 @@ QVariant TransactionTableModel::addressColor(const TransactionRecord *wtx) const\n         if(label.isEmpty())\n             return COLOR_BAREADDRESS;\n         } break;\n-    case TransactionRecord::SendToSelf:\n-        return COLOR_BAREADDRESS;\n     default:\n         break;\n     }"
      },
      {
        "sha": "c77c06f8917072d5e0edc470966ebe69c70071c2",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d408b13a0b8d493fbfa49010b485e4d374c4f50/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d408b13a0b8d493fbfa49010b485e4d374c4f50/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=7d408b13a0b8d493fbfa49010b485e4d374c4f50",
        "patch": "@@ -87,7 +87,6 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n                                         TransactionFilterProxy::TYPE(TransactionRecord::RecvFromOther));\n     typeWidget->addItem(tr(\"Sent to\"), TransactionFilterProxy::TYPE(TransactionRecord::SendToAddress) |\n                                   TransactionFilterProxy::TYPE(TransactionRecord::SendToOther));\n-    typeWidget->addItem(tr(\"To yourself\"), TransactionFilterProxy::TYPE(TransactionRecord::SendToSelf));\n     typeWidget->addItem(tr(\"Mined\"), TransactionFilterProxy::TYPE(TransactionRecord::Generated));\n     typeWidget->addItem(tr(\"Other\"), TransactionFilterProxy::TYPE(TransactionRecord::Other));\n "
      }
    ]
  },
  {
    "sha": "6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWM3ZjE5OGY2ZTFkZDk1M2VmMmE5NzdiZjVlZjcwZGY5ZTBmNTM4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-01-07T09:37:43Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T13:35:06Z"
      },
      "message": "Bugfix: Ignore ischange flag when we're not the sender\n\nIf we didn't send it, it can't possibly be change, even if that's the key's purpose",
      "tree": {
        "sha": "b73be333636696c940bcda71c570b915acda19c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b73be333636696c940bcda71c570b915acda19c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d408b13a0b8d493fbfa49010b485e4d374c4f50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d408b13a0b8d493fbfa49010b485e4d374c4f50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d408b13a0b8d493fbfa49010b485e4d374c4f50"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ab3086c62097cd457dd96431e15385180a1b0a96",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538",
        "patch": "@@ -62,11 +62,13 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n         {\n             const CTxOut& txout = wtx.tx->vout[i];\n \n-            if (wtx.txout_is_change[i]) {\n-                continue;\n-            }\n-\n             if (fAllFromMe) {\n+                // Change is only really possible if we're the sender\n+                // Otherwise, someone just sent bitcoins to a change address, which should be shown\n+                if (wtx.txout_is_change[i]) {\n+                    continue;\n+                }\n+\n                 //\n                 // Debit\n                 //"
      }
    ]
  },
  {
    "sha": "77a74aac443b62462ef7e791f552889a76f65563",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2E3NGFhYzQ0M2I2MjQ2MmVmN2U3OTFmNTUyODg5YTc2ZjY1NTYz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-12-15T22:49:26Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T13:35:07Z"
      },
      "message": "GUI: TransactionRecord: When time/index/etc match, sort send before receive",
      "tree": {
        "sha": "1daf17a405917e3e7525b5ff66a6fa01faa03b41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1daf17a405917e3e7525b5ff66a6fa01faa03b41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77a74aac443b62462ef7e791f552889a76f65563",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77a74aac443b62462ef7e791f552889a76f65563",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77a74aac443b62462ef7e791f552889a76f65563",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77a74aac443b62462ef7e791f552889a76f65563/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ac7f198f6e1dd953ef2a977bf5ef70df9e0f538"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6b583d9d050eb5df394d3a70a6ef6152631fe203",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77a74aac443b62462ef7e791f552889a76f65563/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77a74aac443b62462ef7e791f552889a76f65563/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=77a74aac443b62462ef7e791f552889a76f65563",
        "patch": "@@ -150,11 +150,21 @@ void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, cons\n     // Determine transaction status\n \n     // Sort order, unrecorded transactions sort to the top\n-    status.sortKey = strprintf(\"%010d-%01d-%010u-%03d\",\n+    int typesort;\n+    switch (type) {\n+    case SendToAddress: case SendToOther:\n+        typesort = 2; break;\n+    case RecvWithAddress: case RecvFromOther:\n+        typesort = 3; break;\n+    default:\n+        typesort = 9;\n+    }\n+    status.sortKey = strprintf(\"%010d-%01d-%010u-%03d-%d\",\n         wtx.block_height,\n         wtx.is_coinbase ? 1 : 0,\n         wtx.time_received,\n-        idx);\n+        idx,\n+        typesort);\n     status.countsForBalance = wtx.is_trusted && !(wtx.blocks_to_maturity > 0);\n     status.depth = wtx.depth_in_main_chain;\n     status.m_cur_block_hash = block_hash;"
      },
      {
        "sha": "a9182f8b023611e8affe23c487aaff0b42860d0a",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77a74aac443b62462ef7e791f552889a76f65563/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77a74aac443b62462ef7e791f552889a76f65563/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=77a74aac443b62462ef7e791f552889a76f65563",
        "patch": "@@ -16,6 +16,7 @@\n \n #include <core_io.h>\n #include <interfaces/handler.h>\n+#include <tinyformat.h>\n #include <uint256.h>\n \n #include <algorithm>\n@@ -523,7 +524,7 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n         case Status:\n             return QString::fromStdString(rec->status.sortKey);\n         case Date:\n-            return rec->time;\n+            return QString::fromStdString(strprintf(\"%020-%s\", rec->time, rec->status.sortKey));\n         case Type:\n             return formatTxType(rec);\n         case Watchonly:"
      }
    ]
  }
]