[
  {
    "sha": "68c280f19732fb96bc29113ce9c8007d0101868c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGMyODBmMTk3MzJmYjk2YmMyOTExM2NlOWM4MDA3ZDAxMDE4Njhj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-03-05T15:42:25Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-03-10T21:38:21Z"
      },
      "message": "test, refactor: abstract the feature_nulldummy blockheight values\n\nRefactoring only, no change in test behavior.",
      "tree": {
        "sha": "36731fc1e4aa299188ddb298377ec691ad97c31e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36731fc1e4aa299188ddb298377ec691ad97c31e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68c280f19732fb96bc29113ce9c8007d0101868c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmBJPE0ACgkQT1chs9Dj\nkh2DOxAAwn5yCqTrobQyRdlbxkjq4kj3qUSgWQm4rwpfuMV+/JW0K0wRyYakVsm2\n3UTiBPDvTdRQo0Q65m0dMJNpm85Yi2vrKtWIPmD21yOcYJNDM4+k2kltAa9rQ1Q0\nWM0FLAgDEnFqE8BmwjVxP3FeIajHD9kVEdSkuv7i314vwhQyl/0FFOrJ2tTMgamd\nrKWEB1SoD/k//asBO0yTpjdweNYoT3QYVrvY46lQws7hTc1K1oOOdcPnxkPcV9MT\n6mSxFh4U3dTHSPyZB0SlAv923SmCR2n7AmncNSlV5y7rBXUZMAKclYozPbnph6kV\npaVq59p2Mmi/H/IdkbTIt19pWpFZXqORAVMdZQUiNvLE75wV/HIDz0Fma8gEZEOc\nMY2wqcGD3SNbB7fi0TGi8N/6OIH1mxXdc0Kjc+XozeXSNssi42ujup/nYrKiGBoO\nzBgbHkIMOgziaajhsa3+Zgs4UlHef+VXQQXqqXm14XoMEQOQR3WQ0X/7kS0SF3u5\nx2CW1LE8BsjzB94S4hiU54i3QhmSQSKOm/uFJhFe9s8mXMvM2PFJCwEfn7afyEKn\nobazJhCw/mODXBNnfMvReGI3a5TR4k1qJa34bdkO8bzy1WlX50HJSap49V9jg0as\n6DX40fvPymADXRe5YxPDRqCy8s0fxzqgikmJwQZ6m+1TmY3+7+s=\n=h7SS\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILq5TN+d3s+STWKZgO1+6aOu3pgi5AzoGTg0wUhgD8giCP/wEC3vn1flUUeZ\nIvZDXmZUsH8I8QRgSTxP8Ah5HdvesFg+/gCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEHHg4Im66i7u7bGABUlj\njsgI8QRgSTxP8AgrPEcPHQaWgwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEN8gtd+un/eJcVvhG4KC05EI8QRgSTxO8AjPbmeb\nJH0DngCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BD1Korm6c0rNxVR8KHw/FtjCPEEYEkuefAIvO1jbF4xS+gA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 36731fc1e4aa299188ddb298377ec691ad97c31e\nparent ed25cb58f605ba583c735f330482df0bf9348f3a\nauthor Jon Atack <jon@atack.com> 1614958945 +0100\ncommitter Jon Atack <jon@atack.com> 1615412301 +0100\n\ntest, refactor: abstract the feature_nulldummy blockheight values\n\nRefactoring only, no change in test behavior.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68c280f19732fb96bc29113ce9c8007d0101868c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68c280f19732fb96bc29113ce9c8007d0101868c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68c280f19732fb96bc29113ce9c8007d0101868c/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed25cb58f605ba583c735f330482df0bf9348f3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed25cb58f605ba583c735f330482df0bf9348f3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed25cb58f605ba583c735f330482df0bf9348f3a"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 14,
      "deletions": 12
    },
    "files": [
      {
        "sha": "35a020f70ca465563f9e7b8466dd4a827f42915a",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68c280f19732fb96bc29113ce9c8007d0101868c/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68c280f19732fb96bc29113ce9c8007d0101868c/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=68c280f19732fb96bc29113ce9c8007d0101868c",
        "patch": "@@ -6,11 +6,11 @@\n \n Connect to a single node.\n Generate 2 blocks (save the coinbases for later).\n-Generate 427 more blocks.\n-[Policy/Consensus] Check that NULLDUMMY compliant transactions are accepted in the 430th block.\n+Generate COINBASE_MATURITY (CB) more blocks to ensure the coinbases are mature.\n+[Policy/Consensus] Check that NULLDUMMY compliant transactions are accepted in block CB + 3.\n [Policy] Check that non-NULLDUMMY transactions are rejected before activation.\n-[Consensus] Check that the new NULLDUMMY rules are not enforced on the 431st block.\n-[Policy/Consensus] Check that the new NULLDUMMY rules are enforced on the 432nd block.\n+[Consensus] Check that the new NULLDUMMY rules are not enforced on block CB + 4.\n+[Policy/Consensus] Check that the new NULLDUMMY rules are enforced on block CB + 5.\n \"\"\"\n import time\n \n@@ -20,6 +20,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n \n+COINBASE_MATURITY = 427\n NULLDUMMY_ERROR = \"non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero)\"\n \n def trueDummy(tx):\n@@ -43,7 +44,7 @@ def set_test_params(self):\n         # This script tests NULLDUMMY activation, which is part of the 'segwit' deployment, so we go through\n         # normal segwit activation here (and don't use the default always-on behaviour).\n         self.extra_args = [[\n-            '-segwitheight=432',\n+            f'-segwitheight={COINBASE_MATURITY + 5}',\n             '-addresstype=legacy',\n         ]] * 2\n \n@@ -64,16 +65,16 @@ def run_test(self):\n             wmulti.importaddress(self.ms_address)\n             wmulti.importaddress(self.wit_ms_address)\n \n-        self.coinbase_blocks = self.nodes[0].generate(2)  # Block 2\n+        self.coinbase_blocks = self.nodes[0].generate(2)  # block height = 2\n         coinbase_txid = []\n         for i in self.coinbase_blocks:\n             coinbase_txid.append(self.nodes[0].getblock(i)['tx'][0])\n-        self.nodes[0].generate(427)  # Block 429\n+        self.nodes[0].generate(COINBASE_MATURITY)  # block height = COINBASE_MATURITY + 2\n         self.lastblockhash = self.nodes[0].getbestblockhash()\n-        self.lastblockheight = 429\n-        self.lastblocktime = int(time.time()) + 429\n+        self.lastblockheight = COINBASE_MATURITY + 2\n+        self.lastblocktime = int(time.time()) + self.lastblockheight\n \n-        self.log.info(\"Test 1: NULLDUMMY compliant base transactions should be accepted to mempool and mined before activation [430]\")\n+        self.log.info(f\"Test 1: NULLDUMMY compliant base transactions should be accepted to mempool and mined before activation [{COINBASE_MATURITY + 3}]\")\n         test1txs = [create_transaction(self.nodes[0], coinbase_txid[0], self.ms_address, amount=49)]\n         txid1 = self.nodes[0].sendrawtransaction(test1txs[0].serialize_with_witness().hex(), 0)\n         test1txs.append(create_transaction(self.nodes[0], txid1, self.ms_address, amount=48))\n@@ -87,7 +88,7 @@ def run_test(self):\n         trueDummy(test2tx)\n         assert_raises_rpc_error(-26, NULLDUMMY_ERROR, self.nodes[0].sendrawtransaction, test2tx.serialize_with_witness().hex(), 0)\n \n-        self.log.info(\"Test 3: Non-NULLDUMMY base transactions should be accepted in a block before activation [431]\")\n+        self.log.info(f\"Test 3: Non-NULLDUMMY base transactions should be accepted in a block before activation [{COINBASE_MATURITY + 4}]\")\n         self.block_submit(self.nodes[0], [test2tx], False, True)\n \n         self.log.info(\"Test 4: Non-NULLDUMMY base multisig transaction is invalid after activation\")\n@@ -104,7 +105,7 @@ def run_test(self):\n         assert_raises_rpc_error(-26, NULLDUMMY_ERROR, self.nodes[0].sendrawtransaction, test5tx.serialize_with_witness().hex(), 0)\n         self.block_submit(self.nodes[0], [test5tx], True)\n \n-        self.log.info(\"Test 6: NULLDUMMY compliant base/witness transactions should be accepted to mempool and in block after activation [432]\")\n+        self.log.info(f\"Test 6: NULLDUMMY compliant base/witness transactions should be accepted to mempool and in block after activation [{COINBASE_MATURITY + 5}]\")\n         for i in test6txs:\n             self.nodes[0].sendrawtransaction(i.serialize_with_witness().hex(), 0)\n         self.block_submit(self.nodes[0], test6txs, True, True)\n@@ -130,5 +131,6 @@ def block_submit(self, node, txs, witness=False, accept=False):\n         else:\n             assert_equal(node.getbestblockhash(), self.lastblockhash)\n \n+\n if __name__ == '__main__':\n     NULLDUMMYTest().main()"
      }
    ]
  },
  {
    "sha": "ccd976dd3dbb8f991dc1203ada2043f1736be5a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2Q5NzZkZDNkYmI4Zjk5MWRjMTIwM2FkYTIwNDNmMTczNmJlNWE0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-03-06T11:01:45Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-03-10T21:47:59Z"
      },
      "message": "test: use 327 fewer blocks in feature_nulldummy\n\nby generating 100 blocks for coinbase maturity instead of 427.\n\nThis speeds up the test and should help avoid timeout errors.",
      "tree": {
        "sha": "2a8f06f4d87c99e1a73044b6f66aa381b5f7cd58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a8f06f4d87c99e1a73044b6f66aa381b5f7cd58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccd976dd3dbb8f991dc1203ada2043f1736be5a4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmBJPpcACgkQT1chs9Dj\nkh1C7BAAhhmiIvTeF4o27kGw++wphdnmpfHCmbtGZKS9stsYD8YglF47l1HNpoXC\nmY8jCM0mecTsI5yVGJVU1mO05avKrGbGrupY3lHmT1LYvFT8TkjK/rVDmgBZhB2I\n6AOoIhalHL8J5VqrCdVC0c/yq7Nbv2JUUA655oyvyJndws358MLoQhcqrR1s/LzD\nJe4R/Nt1BtjNJaJdKB/MUkrkNCS7wCv1GCZl7tz3IeTsKzt6YRmOhZQXsS6k+87u\nVZ6btykcUUUoHUVAJItZFyDIvWwYjt8u0xHfWnJ6NJy9vK6chbPzFzfx7SIfd8WF\n1oizlBp9+Mf5JMCbu3euKs96vYZ4EbnLppgwbA23NaEK5f4E7gP35W488sROO+ut\nSkiWaBmBCctqYkww7h+OJd8LHamhJEuvLVnoD93eXFb/nVP7Be6sLlL5Zmx/gvQV\nW7MTaPky5DPLLjDcFI4gTS2fGEh9/lCUAf3UpDTxIwoLSHR+iyF0cPGh5HQJPS14\nXBaDVhTJn+E8/tDcHjScV0zOWKS2jfq5ao3tnMOEUJfMsI1LDMihTT1izKituE41\nk34lzGvoqzz83UbLqfWcFxjklI87HsI9cJ/pNWuvPera0udNqulVFO6RO6SXJbiU\n0mt/xbpVZLWUjCER12/4DcoQodVkRXReijoU9Jt/4JyLlJ3LD8Q=\n=08Wf\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPx72cbE8JLqlIFpMhDb++/0lUzdMXiZfU9CmR3UjsJpCP/wEAfqHpLv5CJW\nlfL1vHhjq8II8QRgST6Y8Aipb43lSDs3ogCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEDUv7yRWWKXMNo7b9gWR\nIBcI8QRgST6Y8AgXej9eKQAuIgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEJ4h5cfo6begYlyCI5wrMxYI8QRgSTDD8Aij1s8f\n6GC3HACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQ+2ocD7y91YT8LEceXTBvBQjxIK5ousv32iPuxsxVVNmAIYXOH194\nbwVzz9R+OJzpHa15CPEEYEk+l/AIs46C2YR9hUwAg9/jDS75DI4uLWh0dHBzOi8v\nYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 2a8f06f4d87c99e1a73044b6f66aa381b5f7cd58\nparent 68c280f19732fb96bc29113ce9c8007d0101868c\nauthor Jon Atack <jon@atack.com> 1615028505 +0100\ncommitter Jon Atack <jon@atack.com> 1615412879 +0100\n\ntest: use 327 fewer blocks in feature_nulldummy\n\nby generating 100 blocks for coinbase maturity instead of 427.\n\nThis speeds up the test and should help avoid timeout errors.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccd976dd3dbb8f991dc1203ada2043f1736be5a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccd976dd3dbb8f991dc1203ada2043f1736be5a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccd976dd3dbb8f991dc1203ada2043f1736be5a4/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68c280f19732fb96bc29113ce9c8007d0101868c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68c280f19732fb96bc29113ce9c8007d0101868c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68c280f19732fb96bc29113ce9c8007d0101868c"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c7981d31dc984b0e683d71444818ca53f5e75e42",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd976dd3dbb8f991dc1203ada2043f1736be5a4/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd976dd3dbb8f991dc1203ada2043f1736be5a4/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=ccd976dd3dbb8f991dc1203ada2043f1736be5a4",
        "patch": "@@ -20,14 +20,14 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n \n-COINBASE_MATURITY = 427\n+COINBASE_MATURITY = 100\n NULLDUMMY_ERROR = \"non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero)\"\n \n def trueDummy(tx):\n     scriptSig = CScript(tx.vin[0].scriptSig)\n     newscript = []\n     for i in scriptSig:\n-        if (len(newscript) == 0):\n+        if len(newscript) == 0:\n             assert len(i) == 0\n             newscript.append(b'\\x51')\n         else:\n@@ -38,7 +38,7 @@ def trueDummy(tx):\n class NULLDUMMYTest(BitcoinTestFramework):\n \n     def set_test_params(self):\n-        # Need two nodes only so GBT doesn't complain that it's not connected\n+        # Need two nodes so GBT (getblocktemplate) doesn't complain that it's not connected.\n         self.num_nodes = 2\n         self.setup_clean_chain = True\n         # This script tests NULLDUMMY activation, which is part of the 'segwit' deployment, so we go through"
      }
    ]
  }
]