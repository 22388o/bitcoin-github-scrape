[
  {
    "sha": "ece88fd26995350dfaa4675b4291605a20203527",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplY2U4OGZkMjY5OTUzNTBkZmFhNDY3NWI0MjkxNjA1YTIwMjAzNTI3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-08T16:39:05Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-08T22:31:01Z"
      },
      "message": "Introduce BigEndian wrapper and use it for netaddress ports",
      "tree": {
        "sha": "580a594a66289796f73812d5a5f98c5a0d8d4476",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/580a594a66289796f73812d5a5f98c5a0d8d4476"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ece88fd26995350dfaa4675b4291605a20203527",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ece88fd26995350dfaa4675b4291605a20203527",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ece88fd26995350dfaa4675b4291605a20203527",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ece88fd26995350dfaa4675b4291605a20203527/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97785863e2faa4a6d4e1130e300011985df0858c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97785863e2faa4a6d4e1130e300011985df0858c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97785863e2faa4a6d4e1130e300011985df0858c"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 50,
      "deletions": 8
    },
    "files": [
      {
        "sha": "38f8709257b472a1d2967d4b3995df8e45030251",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ece88fd26995350dfaa4675b4291605a20203527/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ece88fd26995350dfaa4675b4291605a20203527/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=ece88fd26995350dfaa4675b4291605a20203527",
        "patch": "@@ -141,7 +141,7 @@ class CSubNet\n class CService : public CNetAddr\n {\n     protected:\n-        unsigned short port; // host order\n+        uint16_t port; // host order\n \n     public:\n         CService();\n@@ -168,13 +168,7 @@ class CService : public CNetAddr\n         template <typename Stream, typename Operation>\n         inline void SerializationOp(Stream& s, Operation ser_action) {\n             READWRITE(ip);\n-\n-            // TODO: introduce native support for BE serialization in serialize.h\n-            unsigned short portN = htons(port);\n-            READWRITE(Span<unsigned char>((unsigned char*)&portN, 2));\n-            if (ser_action.ForRead()) {\n-                 port = ntohs(portN);\n-            }\n+            READWRITE(WrapBigEndian(port));\n         }\n };\n "
      },
      {
        "sha": "2491879c364889c175c9d860b40d58a922a6d94c",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ece88fd26995350dfaa4675b4291605a20203527/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ece88fd26995350dfaa4675b4291605a20203527/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=ece88fd26995350dfaa4675b4291605a20203527",
        "patch": "@@ -79,6 +79,11 @@ template<typename Stream> inline void ser_writedata16(Stream &s, uint16_t obj)\n     obj = htole16(obj);\n     s.write((char*)&obj, 2);\n }\n+template<typename Stream> inline void ser_writedata16be(Stream &s, uint16_t obj)\n+{\n+    obj = htobe16(obj);\n+    s.write((char*)&obj, 2);\n+}\n template<typename Stream> inline void ser_writedata32(Stream &s, uint32_t obj)\n {\n     obj = htole32(obj);\n@@ -101,6 +106,12 @@ template<typename Stream> inline uint16_t ser_readdata16(Stream &s)\n     s.read((char*)&obj, 2);\n     return le16toh(obj);\n }\n+template<typename Stream> inline uint16_t ser_readdata16be(Stream &s)\n+{\n+    uint16_t obj;\n+    s.read((char*)&obj, 2);\n+    return be16toh(obj);\n+}\n template<typename Stream> inline uint32_t ser_readdata32(Stream &s)\n {\n     uint32_t obj;\n@@ -411,6 +422,40 @@ class CVarInt\n     }\n };\n \n+/** Serialization wrapper class for big-endian integers.\n+ *\n+ * Use this wrapper around integer types that are stored in memory in native\n+ * byte order, but serialized in big endian notation. This is only intended\n+ * to implement serializers that are compatible with existing formats, and\n+ * its use is not recommended for new data structures.\n+ *\n+ * Only 16-bit types are supported for now.\n+ */\n+template<typename I>\n+class BigEndian\n+{\n+protected:\n+    I& m_val;\n+public:\n+    explicit BigEndian(I& val) : m_val(val)\n+    {\n+        static_assert(std::is_unsigned<I>::value, \"BigEndian type must be unsigned integer\");\n+        static_assert(sizeof(I) == 2 && std::numeric_limits<I>::min() == 0 && std::numeric_limits<I>::max() == std::numeric_limits<uint16_t>::max(), \"Unsupported BigEndian size\");\n+    }\n+\n+    template<typename Stream>\n+    void Serialize(Stream& s) const\n+    {\n+        ser_writedata16be(s, m_val);\n+    }\n+\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        m_val = ser_readdata16be(s);\n+    }\n+};\n+\n class CCompactSize\n {\n protected:\n@@ -461,6 +506,9 @@ class LimitedString\n template<VarIntMode Mode=VarIntMode::DEFAULT, typename I>\n CVarInt<Mode, I> WrapVarInt(I& n) { return CVarInt<Mode, I>{n}; }\n \n+template<typename I>\n+BigEndian<I> WrapBigEndian(I& n) { return BigEndian<I>(n); }\n+\n /**\n  * Forward declarations\n  */"
      }
    ]
  }
]