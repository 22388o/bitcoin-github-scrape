DrahtBot,2020-12-04 01:53:59,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/20377#issuecomment-738503550,738503550,
practicalswift,2020-12-16 14:29:06,@MarcoFalke Thanks for reviewing. Feedback addressed. Please re-review :),https://github.com/bitcoin/bitcoin/pull/20377#issuecomment-746378511,746378511,
practicalswift,2020-12-27 19:29:24,Feedback addressed. Should hopefully be ready for final review :),https://github.com/bitcoin/bitcoin/pull/20377#issuecomment-751506958,751506958,
MarcoFalke,2020-12-29 08:27:10,review ACK 4ddbcd0d9abe40cd387e63d8c4817e0fe36004dc,https://github.com/bitcoin/bitcoin/pull/20377#issuecomment-751993683,751993683,
MarcoFalke,2020-12-15 18:27:03,I don't really like re-using the same seed for different serialization formats. I think it would be better to have separate targets (and folders) for this,https://github.com/bitcoin/bitcoin/pull/20377#discussion_r543583370,543583370,src/test/fuzz/data_stream.cpp
practicalswift,2020-12-16 12:40:38,Fixed!,https://github.com/bitcoin/bitcoin/pull/20377#discussion_r544266621,544266621,src/test/fuzz/data_stream.cpp
MarcoFalke,2020-12-16 13:05:02,would be nice to introduce an `ALL_FEE_EST_HORIZON` constexpr,https://github.com/bitcoin/bitcoin/pull/20377#discussion_r544281969,544281969,src/test/fuzz/kitchen_sink.cpp
MarcoFalke,2020-12-16 13:05:24,"```suggestion\nFUZZ_TARGET_INIT(data_stream_addr_man, initialize_data_stream_addr_man)\n```",https://github.com/bitcoin/bitcoin/pull/20377#discussion_r544282216,544282216,src/test/fuzz/data_stream.cpp
practicalswift,2020-12-16 14:26:39,Fixed!,https://github.com/bitcoin/bitcoin/pull/20377#discussion_r544340176,544340176,src/test/fuzz/kitchen_sink.cpp
practicalswift,2020-12-16 14:26:48,Fixed!,https://github.com/bitcoin/bitcoin/pull/20377#discussion_r544340299,544340299,src/test/fuzz/data_stream.cpp
MarcoFalke,2020-12-26 18:30:13,"Can you explain why it is required to boot up a full node to call a single constructor that only invokes `std::move`. Maybe the whole fuzz test isn't particularly useful, when it only calls `std::move`, which is already covered by other fuzz targets: https://marcofalke.github.io/btc_cov/fuzz.coverage/src/net.h.gcov.html#745",https://github.com/bitcoin/bitcoin/pull/20377#discussion_r549018287,549018287,src/test/fuzz/data_stream.cpp
practicalswift,2020-12-27 19:28:55,Good catch. Removing :),https://github.com/bitcoin/bitcoin/pull/20377#discussion_r549155060,549155060,src/test/fuzz/data_stream.cpp
