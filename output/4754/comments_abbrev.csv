sipa,2014-08-23T10:14:52Z,"Idea ACK on splitting script in a base, interpreter and utils module. You'll need to fix a boost foreach include somewhere though, and I haven't verified that it's move only.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53148888,53148888,
theuni,2014-08-28T17:10:54Z,I'll verify this today.\n,https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53757879,53757879,
theuni,2014-08-28T21:29:25Z,"I can attest to the code movement, other than the 2 issues raised above.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53803073,53803073,
jtimon,2014-08-29T13:48:14Z,"@theuni Great, thanks. I can leave the std thing for a separate PR, no problem.\nI'm confused about the anonymous namespace though. I thought it would be equivalent to just remove empty lines (which you know I did too). I don't understand its purpose, any reason to maintain that?\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53877404,53877404,
theuni,2014-08-29T16:12:24Z,"@jtimon See https://github.com/bitcoin/bitcoin/pull/4754/files#diff-be2905e2f5218ecdbe4e55637dac75f3L978 for what changed.\n\nThe same question is asked and answered well here: https://stackoverflow.com/questions/1147903/anonymous-namespace-class-definition\n\nIt's a rather insignificant functional change, I only pointed it out for the sake of being thorough.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53896879,53896879,
sipa,2014-08-29T16:15:16Z,"Right, anonymous namespaces in C++ are weird and have little to do with actual namespacing... they just prevent symbols from being visible externally, similar to static functions/globals in C.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53897293,53897293,
jtimon,2014-08-29T17:46:18Z,So should I maintain the anonymous namespace or is it ok to delete it?\n,https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53908151,53908151,
jtimon,2014-08-29T17:54:43Z,"Pushed again with the std nit solved, but I left the deletion of the anonymous namespace.\nIt's not something important so if it's going to hold back this PR I'll just restore it, but that stackoverflow thread doesn't convince me that we need it here.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53909095,53909095,
theuni,2014-08-29T18:08:57Z,"@jtimon for reviews like this where we're strictly verifying code movement, please avoid rebasing until the end, just add the nit fixes on top. Your rebase could've changed anything, so all former reviews would be invalid. In this case, I stashed your pre-rebased branch before pulling. For anyone else who may be checking the movement, the diff is as-expected:\n\n```\ncory@cory-i7:~/dev/bitcoin(cod",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53910968,53910968,
theuni,2014-08-29T18:10:54Z,"I don't see why you'd remove the anon namespace as it's definitely a good thing, but it's not worth arguing here. ACK.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53911181,53911181,
sipa,2014-08-29T23:54:25Z,"@jtimon They're not pointless. They allow the compiler to omit generated code if every instance of a function/method is inlined, make assumptions about how a function gets called, reduce risk of symbol name collisions, and speed up linking due to fewer exported symbols. I generally try to surround 'private' code in .cpp with an anonymous namespace for that reason. Though it's hardly _wrong_ to rem",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53941704,53941704,
jtimon,2014-08-30T08:01:10Z," CheckSig is called by scriptutils::CombineMultisig\nCheckSig (and CTransactionSignatureSerializer)  is moved above evalscript to prevent a redundant delcaration of checksig just before evalscript, but now that checksig is in the .h this movement was not necessary, sorry.\nI guess it will be better to just leave it this way now.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53951994,53951994,
jtimon,2014-08-30T11:32:47Z,Would it make sense to move CombineMultisig to interpreter to keep CheckSig() private?\n,https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53955938,53955938,
sipa,2014-08-30T14:12:26Z,"No, exposing CheckSig seems the right approach for that. Multisig related\nstuff doesn't belong in interpreter inho.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53959461,53959461,
jtimon,2014-08-31T18:19:01Z,"Added a fix to the last commit (without rebasing) that restores the order for a simpler diff between the old script.cpp and interpreter.cpp in which I also restore the anonymous namespace.\nTo avoid wasting the review work (as @theuni explained), it is better that the merger does the rebase himself.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-53996486,53996486,
sipa,2014-08-31T22:45:44Z,"- You removed the recently added CScript::clear() method.\n- Apart from that, verified move-only between _1fa679edc5a1eb379049191e8ee18a3b8a0a5a05 and _243fb7a97cf9747a78acd81a66b362d427b1557a.\n\nACK if you add CScript::clear again.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-54003783,54003783,
jtimon,2014-08-31T23:38:51Z,Restored CScript::clear() (without rebasing)\n,https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-54005047,54005047,
sipa,2014-09-01T13:18:28Z,ACK.\nTested testnet reindex.\nVerified move-only 1fa679edc5a1eb379049191e8ee18a3b8a0a5a05..2b0f9f9d5c3c4c8a60302951fccad65ed6eb7575.\n,https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-54058011,54058011,
jtimon,2014-09-02T14:30:51Z,Rebased after #4812's merge.\n,https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-54159777,54159777,
BitcoinPullTester,2014-09-02T14:43:32Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4754_ff51b1a1169c2bb271006620a4b648dc1385f081/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-54161862,54161862,
sipa,2014-09-08T15:36:13Z,"ACK. Verified move-only.\n\nThis needs a trivial rebase on top of #4865, but let's do that at merge time.\n",https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-54838985,54838985,
laanwj,2014-09-08T18:03:58Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-54861573,54861573,
sipa,2014-09-08T18:39:13Z,Merged by eecd3c0f.\n,https://github.com/bitcoin/bitcoin/pull/4754#issuecomment-54866791,54866791,
theuni,2014-08-28T20:48:21Z,This was moved out of the anon namespace.\n,https://github.com/bitcoin/bitcoin/pull/4754#discussion_r16866815,16866815,src/script/interpreter.cpp
theuni,2014-08-28T20:59:04Z,"Being _extremely_ pedantic here:\n\n```\n-    std::vector<unsigned char> data;\n+    vector<unsigned char> data;\n```\n\nIt appears that you did this because you removed the std namespace for script/script.cpp. I agree with that change as it's good practice, and it bothers me that ""using namespace std"" is used all over the bitcoin code.\n\nHOWEVER\n\nThat makes this no longer just code movement, s",https://github.com/bitcoin/bitcoin/pull/4754#discussion_r16867472,16867472,src/script/script.cpp
Diapolo,2014-09-08T17:10:47Z,Can you follow the alphabetical ordering please? I'm starting to get frustrated... I'm not allowed to cleanup and quite often pulls get in that don't even try to match that.\n,https://github.com/bitcoin/bitcoin/pull/4754#discussion_r17251675,17251675,src/Makefile.am
sipa,2014-09-08T17:12:17Z,Let's fix that after merging this.\n,https://github.com/bitcoin/bitcoin/pull/4754#discussion_r17251759,17251759,src/Makefile.am
Diapolo,2014-09-08T17:13:59Z,I really hope someone does it and also at some time our headers and includes reflect this...\n,https://github.com/bitcoin/bitcoin/pull/4754#discussion_r17251858,17251858,src/Makefile.am
jtimon,2014-09-08T17:17:39Z,"Yes, sorry. Maybe #4755 is a good place to fix this?\n",https://github.com/bitcoin/bitcoin/pull/4754#discussion_r17252051,17252051,src/Makefile.am
Diapolo,2014-09-09T08:05:05Z,@sipa @jtimon See #4881 for a cleanup ;). Couldn't resist.... perhaps just base #4755 on that?\n,https://github.com/bitcoin/bitcoin/pull/4754#discussion_r17286973,17286973,src/Makefile.am
rebroad,2014-10-24T01:57:50Z,"In file included from ./script/compressor.h:9:\n./script/script.h:197:19: error: no matching conversion for functional-style cast from 'const char [57]' to\n      'scriptnum_error'\n            throw scriptnum_error(""CScriptNum(const std::vector<unsigned char>&) : overflow"");\n                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n./script/script.h:173:7: not",https://github.com/bitcoin/bitcoin/pull/4754#discussion_r19319930,19319930,src/script/compressor.h
theuni,2014-10-24T03:34:06Z,This should be fixed in master by 3a757c52947a5a1beefb456ca7d3ebab7a5a14a2.\n,https://github.com/bitcoin/bitcoin/pull/4754#discussion_r19321824,19321824,src/script/compressor.h
