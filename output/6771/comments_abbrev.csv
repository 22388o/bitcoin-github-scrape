gmaxwell,2015-10-06T20:57:26Z,Concept ACK.\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-145998556,145998556,
Mirobit,2015-10-06T21:57:54Z,Are there any other use cases than excessive gambling and spam that require more than 3 unconfirmed ancestors? \nThis seems like a good opportunity to fight spam without downsides for regular users. \n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146013734,146013734,
ghost,2015-10-07T01:10:26Z,"So if you're only saving 2.6%, why bother? Why not increase the max block size to 1.026Mb instead?\n\n@Mirobit Who are we to decide how bitcoin is used? What do you want to 'fight' next - porn? Donations to unsavoury nations? People who we don't agree with?\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146048208,146048208,
morcos,2015-10-07T01:36:03Z,"@NanoAkron, to be clear, the goal here is not to restrict transactions.  I wish the 2.6% number was 0.0%.  Nor is the goal to prevent any specific type or kind of transaction, spam or otherwise.   The goal is only to prevent particularly constructed chains of transactions which would serve to break critical functionality of the network.  Such chains are only likely constructed for the particular p",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146053047,146053047,
jgarzik,2015-10-07T23:30:09Z,"Example use case - bitcoin business(es) that depend on tx chains: https://twitter.com/taariqlewis/status/651160362629230592\n\n(this is notably not an endorsement of that activity, as you'll gather from reading responses)\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146366576,146366576,
matthieu,2015-10-08T02:56:28Z,"The largest number of unconfirmed transaction on a single address we've seen at BlockCypher was 164. That particular customer had a burst of activity from its end-users during a period of full blocks and long block gaps.Those 164 transactions were unevenly distributed on 3 UTXOs, leading to a ~100 transactions chain. While I can't name them, a fair amount of people here have used this service, so ",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146403747,146403747,
TheBlueMatt,2015-10-08T03:07:50Z,"You stated that you saw a long transaction chain in production, but no reason was given as to why your customer had to chain transactions together instead of using other utxos? Are you suggesting that this customer did not otherwise have funds available to pay out when they needed to and, thus, had to chain their own transactions?\n\nCalling this a ""useful metric"" is a bit of an understatement. Th",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146404812,146404812,
matthieu,2015-10-08T04:10:32Z,"Ideally they'd have shredded their UTXOs a little better but didn't. Funds were available but people don't anticipate worst case situations well. They could have been more diligent but on the other hand, the more limits people can hit on transacting, the more complex developing around these limits become.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146414563,146414563,
TheBlueMatt,2015-10-08T05:46:51Z,"Hmm, so if they had available UTXOs, were they spending UTXOs which they received from others or just making their own chains? The Bitcoin Core tx selection of ""first pick txn which are already confirmed"" is generally a good idea for hygene. If they were spending UTXOs others had sent them then it's something we should actively discourage anyway.\n\nOn October 7, 2015 9:10:40 PM PDT, Matthieu Riou",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146426807,146426807,
taariq,2015-10-08T06:08:32Z,"We, at Serica and DigitalTangible actively use unspent tx chains to allow our customers to speed their bitcoin user-experience without the need for them to wait on blockchain confirmations. These transactions are usually sequential and must happen between our customers and our marketplace of merchants and other customers. For example, a user agrees to place an order to purchase bitcoin and then ma",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146429708,146429708,
matthieu,2015-10-08T06:14:30Z,"@TheBlueMatt their own chain. And confirmed first was used, just a faster stream of incoming than confirming with not enough UTXOs in that period of time.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146430387,146430387,
TheBlueMatt,2015-10-08T06:27:20Z,"@taariq yea, I wouldnt be worried about that. No one wants to set a package size limit, its only a requirement for the mempool limiting and tracking algorithms to have reasonable upper limits on runtime. Still, I think 5 is more than anyone else had seen a use-case for, so thanks for the feeback :)\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146432007,146432007,
TheBlueMatt,2015-10-08T06:38:11Z,"@matthieu Ahh, ok, thanks for the clarification. That is quite...annoying. I'm not sure I'd trust the code with much higher limits yet, but maybe it warrants more study instead of just a belt-and-suspenders limit, then.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146433559,146433559,
pstratem,2015-10-08T06:39:18Z,@matthieu it sounds like they could have been using sendmany\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146433728,146433728,
matthieu,2015-10-08T06:45:02Z,"@pstratem there are several things they could have done better. How much do you want people to know to be able to transact without bad surprises tho? Making it more complex is good for services like ours that swallow the complexity, but not for the ecosystem in general. Odd that _I_ should be making that point.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146434822,146434822,
pstratem,2015-10-08T06:47:56Z,@matthieu eh? the sendmany rpc call is right there...\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146435440,146435440,
TheBlueMatt,2015-10-08T06:51:18Z,"I think the point was they're not using Bitcoin Core.\n\nOn October 7, 2015 11:48:06 PM PDT, Patrick Strateman notifications@github.com wrote:\n\n> @matthieu eh? the sendmany rpc call is right there...\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146435440\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146436369,146436369,
matthieu,2015-10-08T06:57:15Z,"The point is also they had no prior knowledge they would either need to batch their transactions or ever hit a transaction peak that high. Send as it comes is what everyone starts with, batching can get tricky fast.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146438159,146438159,
morcos,2015-10-08T10:24:54Z,"It would be helpful to know whether there are other use cases like this that would be hampered.\nI think if its once in a blue moon something that used to work would now need some more careful transaction preparation, then maybe this change is worth it in the balance.\n\nTo Matt's point of the reasoning behind this change: it's also an understatement to say its just needed to govern complexity and",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146488407,146488407,
MarcoFalke,2015-10-08T11:40:08Z,"NACK based on my reply below.\n\n> @pstratem they could have been using sendmany\n\nYou can't bundle customer's requests of transactions which have to be sent out immediately.\n\n> @morcos But as we've seen with the minimum relay fee and the stress tests, its still an issue if people have to bring down their nodes and restart them with different parameters to respond to the attack.\n\nIf you don't",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146511271,146511271,
morcos,2015-10-08T12:28:11Z,"@MarcoFalke Just to reemphasize this point.  This is not only about resources.  Very powerful nodes can still be attacked if they have a mempool with some size limit.\n\nI do agree that better wallet UI is needed, but that problem is not introduced by this pull.\n\nIf we don't make the default small enough to be safe, then most people will have to configure their own policy.  I suspect that will l",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146522887,146522887,
matthieu,2015-10-08T16:12:24Z,"@morcos Given this isn't a consensus change, any issue with lowering it gradually (over a few releases) rather than cranking it down all of a sudden? Try with 50 ancestors and 100 descendants for a bit and then go lower if no real difficulty has been found?\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146596014,146596014,
dthorpe,2015-10-08T17:58:36Z,"+1 to Taqriq's use case.  \n\nI also have a transaction system implemented which involves multi-step transactions which spend from UTXOs that are known to us but may yet be unconfirmed by the blockchain. Completely independent of taariq's use case, but similar in that chains of txs are created and submitted to the mempool together without waiting for sequential block confirmation of each tx in the",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146638523,146638523,
petertodd,2015-10-08T18:07:02Z,@dthorpe Can you explain more what that application actually is? Are you sure you're not vulnerable to malleability?\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146640897,146640897,
petertodd,2015-10-08T18:08:50Z,"Note that for the case where you can't use 'sendmany' because you need to send funds immediately, you could instead use replace-by-fee to rewrite the txout set, splitting the change txout into the new payee and change. This style of payment uses significantly less blockchain space than chained transactions.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146641458,146641458,
dthorpe,2015-10-08T18:35:03Z,@petertodd I'd be happy to discuss in more detail offline.  first.last@gmail.com\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146647751,146647751,
morcos,2015-10-08T18:36:57Z,"@matthieu I agree it would be good to give people time to adjust their applications to a lower limit, but that will happen naturally as more and more of the network upgrades to 0.12.   But yes, if there is too much resistance to 25/25, we might have to start with higher limits.  I think node performance should be reasonable with 50/100 but I worry about attacks.  Maybe there is some middle ground ",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146648169,146648169,
petertodd,2015-10-08T18:37:54Z,"@dthorpe I can't take on any more consulting for the next few weeks, but you might find this link post about replace-by-fee use-cases useful: http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146648410,146648410,
petertodd,2015-10-08T18:39:11Z,"@dthorpe I've got a opt-in full-RBF patch ready BTW, and will propose it as a pull-req once this mempool stuff settles down. (hopefully in time for v0.12!) Code is reasonably well tested, as f2pool uses (most of) it.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146648731,146648731,
dthorpe,2015-10-08T19:08:34Z,"@petertodd I've been following the CPFP and RBF discussions with interest. Not so much to entirely replace the tx chains we have, but to reduce the number of outputs necessary to pay network fees across the chain, and improve the all-or-none granularity of the tx set for inclusion in a block.\n\nI gave a slightly more specific example of my use case on the bitcoin-dev list a few weeks ago: http://",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146657517,146657517,
pstratem,2015-10-08T19:24:01Z,This limit should be much lower than 25.\n\nIndeed the only reason to relay chains of unconfirmed transactions is CPFP.\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146662111,146662111,
dexX7,2015-10-08T20:53:04Z,"> Indeed the only reason to relay chains of unconfirmed transactions is CPFP.\n\nI assume this statement is based on the assumption that there are unspent confirmed outputs available, in case there is need to send many transactions in a short timeframe? If so, it seems like a trade off, and it may result in situations where a lot of unspent outputs are prepared, just to have some available.\n\nI c",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146681936,146681936,
dthorpe,2015-10-08T21:47:16Z,"> Indeed the only reason to relay chains of unconfirmed transactions is CPFP.\n\nCertainly, CPFP would provide great benefits for asynchronous brokered exchange scenarios (A => B => C as a pseudo ""atomic"" set of transactions), but until CPFP is actually deployed and usable (and/or sigHash allows merging of independent fully signed txs), we're stuck with more primitive techniques such as zero-conf ",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-146695037,146695037,
morcos,2015-10-14T18:16:25Z,"I've updated the size limits to 101kB.\n\nI understand there is still some objection to 25 as a count limit, but I'd like to err on the side of what will make the network useable for the vast majority of participants.  Even 25 is a compromise in this sense, because until we have better mechanisms for dealing with large chains of transactions, abuse is still possible within the 25 limit.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-148142621,148142621,
sdaftuar,2015-10-14T18:33:21Z,ACK.  It doesn't yet seem like there are any common use cases anyone has brought up that would be hindered by these limits.  Agree with @MarcoFalke about updating the release notes but I don't think that should hold up this pull (there's much more to explain about mempool changes than just this particular set of limits).\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-148147571,148147571,
TheBlueMatt,2015-10-14T21:27:11Z,"ACK. I don't like doing this because it does make some things more annoying for developers, but, honestly, as long as they retransmit transactions as their chains are confirmed, 25 txn/block isn't so bad.\n\nOn October 14, 2015 11:33:31 AM PDT, Suhas Daftuar notifications@github.com wrote:\n\n> ACK.  It doesn't yet seem like there are any common use cases anyone\n> has brought up that would be hin",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-148207547,148207547,
petertodd,2015-10-23T16:26:55Z,utACK\n\n#6871 gives high-volume applications a good way to avoid long chains.\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-150625503,150625503,
dcousens,2015-10-26T12:02:47Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-151112393,151112393,
MarcoFalke,2015-10-26T20:42:32Z,"Needs rebase due to #6722.\n\n> ""for the particular purpose of attacking the entire Bitcoin system""\n\nIs this attack still possible after #6722 got merged? \n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-151278425,151278425,
TheBlueMatt,2015-10-27T00:29:05Z,"@MarcoFalke this pull was primarily done to make #6722 have stricter CPU-usage bounds to prevent DoS, so, yes, this is still something we want after #6722.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-151323676,151323676,
sipa,2015-10-28T01:55:13Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-151696104,151696104,
morcos,2015-10-28T04:02:04Z,"sorry, rebased\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-151715834,151715834,
sdaftuar,2015-11-05T20:01:19Z,"I've generated a lot of historical data on blocks to look at the length of chains we see within blocks.  For each block I looked at, I calculated for every transaction the number of in-block ancestors and in-block descendants, along with size of those ancestors and size of those descendants.  Detailed data is available here:\n\nhttps://www.dropbox.com/s/kkh0g4kl9qwt1cx/alldata2.gz?dl=0\n\nTop line",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-154173939,154173939,
ABISprotocol,2015-11-06T05:49:34Z,"NACK.  Please see running commentary in this thread for details as to why, for example thoughts contributed from @matthieu and @taariq.  I'd like to see, in particular, BlockCypher's concerns addressed (having this PR changed accordingly) or having this PR closed (not being merged).\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-154304612,154304612,
MarcoFalke,2015-11-06T07:24:01Z,> stricter CPU-usage bounds\n\nIs there an estimation that gives the CPU-usage as a function of the limits? Is it non-linear?\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-154333198,154333198,
laanwj,2015-11-12T21:38:54Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-156244285,156244285,
gmaxwell,2015-11-12T23:09:44Z,"@dthorpe Didn't see your above comment until now ""I'm counting on BIP62 to significantly reduce that risk.""  BIP62 cannot remove malleability from multisignature transactions; and I believe it is unlikely that BIP62 will ever be deployed on the Bitcoin network due to it's invasiveness and necessary incompleteness. (Well, pedantically, BIP62 as is will not be deployed as its outdated; a revised ver",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-156266032,156266032,
dthorpe,2015-11-16T17:03:26Z,"@gmaxwell understood, thanks.\n",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-157098712,157098712,
nopara73,2018-12-07T18:53:28Z,"Since you were struggling to find legitimate usecases, I'd like to contribute to the conversation that in Wasabi Wallet's coinjoin chains I'm starting to hit these limits in various ways.  \n\n## Background\n\nBefore I discuss the limits individually I'd like to provide some background:\n\nWasabi launched 3 months ago and the coinjoin volume is exponentially growing since then. An average Wa",https://github.com/bitcoin/bitcoin/pull/6771#issuecomment-445329667,445329667,
petertodd,2015-10-07T13:01:14Z,"Note that this means a max size tx - 100KB - can't be respent. This could cause problems, e.g. with CPFP.\n",https://github.com/bitcoin/bitcoin/pull/6771#discussion_r41386443,41386443,src/main.h
morcos,2015-10-07T18:42:02Z,@petertodd I was assuming that if people cared about that they could limit their transactions to 99.5KB and still chain a child or two off of it to pay extra fees.   I suppose alternatively we could raise the default to 101?  \n\nThe size limits would only have restricted approx 0.01% of transactions that passed the count limits over the last several months.\n,https://github.com/bitcoin/bitcoin/pull/6771#discussion_r41428873,41428873,src/main.h
TheBlueMatt,2015-10-08T00:32:47Z,"I would agree with @petertodd here, we should set the size limit to something like 101 or 105.\n",https://github.com/bitcoin/bitcoin/pull/6771#discussion_r41465323,41465323,src/main.h
