RHavar,2017-06-06T17:59:27Z,utACK   I prefer this API.  I'll compile it and play with it a bit later today. Thanks for doing this ðŸ¥‡ ,https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-306567690,306567690,
sipa,2017-06-06T18:35:26Z,"My reason for asking this is that it would allow someone to gather information using this RPC, without needing implementation-specific information. Sure, they'll need to understand the details to process the output anyway, but not the just collect.",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-306577859,306577859,
RHavar,2017-06-06T18:47:20Z,"ACK. Seems to work well, and easier to log/use\n\n```\nbitcoin-cli estimaterawfee 50 0.5\n{\n  ""short"": {\n    ""feerate"": -1\n  },\n  ""medium"": {\n    ""feerate"": -1\n  },\n  ""long"": {\n    ""feerate"": 0.00056300,\n    ""decay"": 0.99931,\n    ""scale"": 24,\n    ""pass"": {\n      ""startrange"": 54641,\n      ""endrange"": 57374,\n      ""withintarget"": 878.66,\n      ""totalconfirmed"": 149",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-306581006,306581006,
laanwj,2017-06-07T13:00:33Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-306787276,306787276,
instagibbs,2017-06-07T13:02:18Z,concept ACK as well. ,https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-306787704,306787704,
jlopp,2017-06-07T13:39:22Z,Concept ACK; this will reduce the number of RPC calls we need to make to get a full picture of the fee market.,https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-306797506,306797506,
morcos,2017-06-14T19:27:58Z,"rebased due to adjacent line change in src/rpc/client.cpp\n\n",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-308533754,308533754,
RHavar,2017-06-14T19:31:50Z,"I've been running this patch for the last week on https://www.estimatefee.com to come up with estimates for how long a specific transaction will take to confirm. Haven't had any problems, and it works well and offers a nicer API.  So  ACK'ing again",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-308534639,308534639,
laanwj,2017-06-26T11:02:40Z,"```\n  ""short"": {\n    ""feerate"": -1\n  },\n```\nWhile we're changing the interface anyway, would it make sense to change the ""information absent"" response to something else than `-1`? (according to discussion in #8758)\n",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-311028530,311028530,
sipa,2017-06-27T02:31:53Z,"> While we're changing the interface anyway, would it make sense to change the ""information absent"" response to something else than -1\n\nACK",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-311235567,311235567,
TheBlueMatt,2017-06-27T23:34:51Z,"utACK 7780de8a0f333f9f168eeea2f2227597392034ff irrespective of if the ""information absent"" response is changed.",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-311515094,311515094,
morcos,2017-06-28T15:35:44Z,"OK Updated to change error reporting and information absent\nFor a target outside the range:\n```\nmorcos@queen:~/Projects/bitcoin2$ src/bitcoin-cli -regtest estimaterawfee 1009 \nerror code: -8\nerror message:\nInvalid nblocks\n```\n\nWhen an answer can't be returned due to no fee rate meeting the threshold at the target (pass bucket is omitted but fail bucket still contains useful infor",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-311698254,311698254,
morcos,2017-07-07T02:36:41Z,"Addressed nits and squashed\n([rawpi.ver2](https://github.com/morcos/bitcoin/commits/rawapi.ver2)) -> 0220261 ([rawapi.ver2.squash](https://github.com/morcos/bitcoin/commits/rawapi.ver2.squash))",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-313571587,313571587,
morcos,2017-07-07T13:17:18Z,"Addressed nits and squashed\n([rawpi.ver3](https://github.com/morcos/bitcoin/commits/rawapi.ver3)) -> 6dc1410 ([rawapi.ver3.squash](https://github.com/morcos/bitcoin/commits/rawapi.ver3.squash))\n\nThanks for review @promag !",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-313678023,313678023,
instagibbs,2017-07-07T14:59:30Z,tACK https://github.com/bitcoin/bitcoin/pull/10543/commits/6dc14106a14ebd91a740db925e0bef59ef6233f4,https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-313706309,313706309,
TheBlueMatt,2017-07-07T21:56:49Z,re-utACK 6dc14106a14ebd91a740db925e0bef59ef6233f4,https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-313802659,313802659,
morcos,2017-07-11T00:10:14Z,"Addressed comments\n\n([rawpi.ver4](https://github.com/morcos/bitcoin/commits/rawapi.ver4)) -> ([rawapi.ver4.squash](https://github.com/morcos/bitcoin/commits/rawapi.ver4.squash)) -> 5e3b7b5  ([rawapi.ver4.rebase](https://github.com/morcos/bitcoin/commits/rawapi.ver4.rebase)) \n",https://github.com/bitcoin/bitcoin/pull/10543#issuecomment-314285021,314285021,
promag,2017-07-06T21:49:30Z,Missing space before second `||`.,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126025043,126025043,src/rpc/mining.cpp
promag,2017-07-06T21:52:19Z,Invert condition and switch blocks.,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126025585,126025585,src/rpc/mining.cpp
promag,2017-07-06T21:56:05Z,"What about early `continue;` to avoid large indentation:\n```cpp\nif ((unsigned int)nBlocks > ::feeEstimator.HighestTargetTracked(horizon)) continue;\n```",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126026402,126026402,src/rpc/mining.cpp
morcos,2017-07-07T02:05:24Z,"I like having the success condition be the first thing you read, but I'll add a comment",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126056010,126056010,src/rpc/mining.cpp
promag,2017-07-07T09:09:21Z,"Nit, missing comma here and in the following lines.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126101980,126101980,src/rpc/mining.cpp
promag,2017-07-07T09:12:17Z,"Nit, remove `horizon`.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126102532,126102532,src/rpc/mining.cpp
promag,2017-07-07T09:15:55Z,"Nit, rename `horizon_names`.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126103116,126103116,src/rpc/mining.cpp
promag,2017-07-07T09:18:40Z,"Maybe for another PR, but IMO `operator!=` would be more expressive, no?",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126103658,126103658,src/rpc/mining.cpp
promag,2017-07-07T09:19:50Z,"Nit, snake case these multi word variables?",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126103933,126103933,src/rpc/mining.cpp
promag,2017-07-07T09:26:26Z,Should we make these round with 2 decimal places as strings? See https://stackoverflow.com/a/1343925.,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126105283,126105283,src/rpc/mining.cpp
morcos,2017-07-07T12:36:58Z,"This RPC is kind of a low level debugging function anyway, so I might just save that for some later PR if people want it.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126136347,126136347,src/rpc/mining.cpp
morcos,2017-07-07T12:41:58Z,i stuck with fixing the new ones,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126137232,126137232,src/rpc/mining.cpp
morcos,2017-07-07T13:13:52Z,"Yeah I should have just added that operator before, since this has annoyed me a couple of times.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126143070,126143070,src/rpc/mining.cpp
promag,2017-07-07T14:17:52Z,"Nit nit, place after `operator==`.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126157737,126157737,src/policy/feerate.h
promag,2017-07-07T14:24:20Z,"Since `nBlocks` and also `CBlockIndex::nHeight` are `int`, why not return `int` here too?",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126159406,126159406,src/policy/fees.h
promag,2017-07-07T14:28:03Z,"My suggestion was to snake case `feeRate`, `passbucket` and `failbucket`.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126160313,126160313,src/rpc/mining.cpp
promag,2017-07-07T14:28:38Z,"Nit, missing space before `errors`.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126160454,126160454,src/rpc/mining.cpp
promag,2017-07-07T14:38:36Z,"This omits the given horizon key from the output. Is this considered best practice for an API? An alternative is to return an array:\n```json\n[{ ""horizon"": ""short"", ""feerate"": 0.00068495, ... }]\n```",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126162896,126162896,src/rpc/mining.cpp
morcos,2017-07-07T16:02:47Z,"Yeah I thought about that, but I figure it should really be an unsigned int, and so why not start moving things slowly in right direction.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126183367,126183367,src/policy/fees.h
morcos,2017-07-07T16:04:04Z,Yes it's omitted because it is not meaningful to return an answer for a target higher than the horizon tracks.,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126183659,126183659,src/rpc/mining.cpp
promag,2017-07-07T16:04:21Z,"No problem, `uint32_t` then?",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126183718,126183718,src/policy/fees.h
morcos,2017-07-07T16:04:42Z,"yeah i just fixed variables introduced in this PR, instead of changing preexisting variables",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126183781,126183781,src/rpc/mining.cpp
morcos,2017-07-07T16:05:02Z,"will fix if there are any more changes, but leave for now to avoid churn.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126183862,126183862,src/rpc/mining.cpp
morcos,2017-07-07T16:05:22Z,meh,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126183944,126183944,src/policy/feerate.h
promag,2017-07-07T16:05:47Z,Touched code should be fixed too?,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126184056,126184056,src/rpc/mining.cpp
promag,2017-07-07T16:07:34Z,"Hence the suggestion to return the array, a client iterates each element (if any) and uses the `horizon` value.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126184454,126184454,src/rpc/mining.cpp
morcos,2017-07-07T17:01:30Z,"Oh sorry, I misunderstood at first.  I suppose I'm not familiar enough with JSON practices to know what would be preferred.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126195964,126195964,src/rpc/mining.cpp
morcos,2017-07-07T17:02:37Z,"Maybe in this case it could have been since I touched a lot of the code, but I think in general it's easier not to make more changes than necessary in order to facilitate the review.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126196173,126196173,src/rpc/mining.cpp
morcos,2017-07-07T17:02:55Z,any reason?,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126196224,126196224,src/policy/fees.h
promag,2017-07-07T17:15:55Z,Best practice? Not network code but still. See https://stackoverflow.com/a/21621533.,https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126198708,126198708,src/policy/fees.h
ryanofsky,2017-07-10T20:13:49Z,"In commit ""Change API to estimaterawfee""\n\nThis is pretty fragile. Consider replacing `horizon_names` array with `FeeEstimateHorizon -> std::string` function, or at adding a comment to FeeEstimateHorizon saying the enum values are used as array indices and need to be stable.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126524211,126524211,src/rpc/mining.cpp
ryanofsky,2017-07-10T20:21:44Z,"In commit ""Add function to report highest estimate target tracked per horizon""\n\nSeems like it would be safer to throw an error than to rely on code handling this to do something with this 0.",https://github.com/bitcoin/bitcoin/pull/10543#discussion_r126526157,126526157,src/policy/fees.cpp
