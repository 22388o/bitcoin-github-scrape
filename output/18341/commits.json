[
  {
    "sha": "7df0cf719fecf1b8d09801295db8bd2137bfe033",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGYwY2Y3MTlmZWNmMWI4ZDA5ODAxMjk1ZGI4YmQyMTM3YmZlMDMz",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2020-03-13T10:40:03Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2020-03-14T08:24:21Z"
      },
      "message": "Replace remaining literals BTC with CURRENCY_UNIT\n\nThis replaces one remaining instance of the literal \"BTC\" string with\nthe CURRENCY_UNIT constant, as is done in most of the codebase already.\n\nThe other remaining instance (which is just part of a log message and thus\nnot really user-visible) is just removed.\n\nAfter this change, no instance of literal \"BTC\" remains anywhere in the\nnon-Qt and non-test codebase.",
      "tree": {
        "sha": "b2421947068ac94b53f92ae37eabb2e39d6e4f8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2421947068ac94b53f92ae37eabb2e39d6e4f8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7df0cf719fecf1b8d09801295db8bd2137bfe033",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7df0cf719fecf1b8d09801295db8bd2137bfe033",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7df0cf719fecf1b8d09801295db8bd2137bfe033",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7df0cf719fecf1b8d09801295db8bd2137bfe033/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f9e6a3c1ce8710364a815ac1796b45ccf1325b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f9e6a3c1ce8710364a815ac1796b45ccf1325b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f9e6a3c1ce8710364a815ac1796b45ccf1325b5"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a5b68e4ebde46f80c675898a2ed45d69806d4f63",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7df0cf719fecf1b8d09801295db8bd2137bfe033/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7df0cf719fecf1b8d09801295db8bd2137bfe033/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=7df0cf719fecf1b8d09801295db8bd2137bfe033",
        "patch": "@@ -974,7 +974,7 @@ bool MemPoolAccept::Finalize(ATMPArgs& args, Workspace& ws)\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : allConflicting)\n     {\n-        LogPrint(BCLog::MEMPOOL, \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+        LogPrint(BCLog::MEMPOOL, \"replacing tx %s with %s for %s additional fees, %d delta bytes\\n\",\n                 it->GetTx().GetHash().ToString(),\n                 hash.ToString(),\n                 FormatMoney(nModifiedFees - nConflictingFees),"
      },
      {
        "sha": "95e92ffce85cb54554221f52f45aba60000e8825",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7df0cf719fecf1b8d09801295db8bd2137bfe033/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7df0cf719fecf1b8d09801295db8bd2137bfe033/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7df0cf719fecf1b8d09801295db8bd2137bfe033",
        "patch": "@@ -3361,7 +3361,7 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n             \"                         the dust threshold.\"},\n                             {\"fee_rate\", RPCArg::Type::NUM, /* default */ \"fallback to 'confTarget'\", \"FeeRate (NOT total fee) to pay, in \" + CURRENCY_UNIT + \" per kB\\n\"\n             \"                         Specify a fee rate instead of relying on the built-in fee estimator.\\n\"\n-            \"                         Must be at least 0.0001 BTC per kB higher than the current transaction fee rate.\\n\"},\n+                                     \"Must be at least 0.0001 \" + CURRENCY_UNIT + \" per kB higher than the current transaction fee rate.\\n\"},\n                             {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"true\", \"Whether the new transaction should still be\\n\"\n             \"                         marked bip-125 replaceable. If true, the sequence numbers in the transaction will\\n\"\n             \"                         be left unchanged from the original. If false, any input sequence numbers in the\\n\""
      }
    ]
  }
]