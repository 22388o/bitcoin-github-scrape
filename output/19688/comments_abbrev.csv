hebasto,2020-08-08 21:03:41,friendly ping @practicalswift @Crypt-iQ @darosior ,https://github.com/bitcoin/bitcoin/pull/19688#issuecomment-670973624,670973624,
fjahr,2020-08-09 22:02:23,"> NOTE: Unfortunately, on my system (`clang version 10.0.0-4ubuntu1`) due to unknown for me reasons `make cov` never finishes, trying to `Processing src/test/test_bitcoin-util_tests.gcda` forever (stopped waiting).\n\nI have observed the same issue with `10.0.0_3` on macOS.\n",https://github.com/bitcoin/bitcoin/pull/19688#issuecomment-671106211,671106211,
Crypt-iQ,2020-08-10 20:54:58,"Tested ACK 75f9659d7a497ae1f86d905029f83c0193ecfeb2\n\n`make cov` still hanging after ~11+ hours on `test_bitcoin-util_tests.gcda`\n`make cov_fuzz` output: https://crypt-iq.github.io/fuzz.coverage/\n\nRunning `clang-10` and ubuntu",https://github.com/bitcoin/bitcoin/pull/19688#issuecomment-671584765,671584765,
Crypt-iQ,2020-08-12 16:29:16,"Might be a bit unrelated, but I had to move `qa-assets` from `/root` to `/root/bitcoin` for `make cov_fuzz` to work. Would be nice to be able to specify a directory, but probably out of scope for this PR.",https://github.com/bitcoin/bitcoin/pull/19688#issuecomment-672979598,672979598,
hebasto,2020-08-13 11:04:30,"> `make cov` still hanging after ~11+ hours on `test_bitcoin-util_tests.gcda`\n\nI've narrowed this problem down to https://github.com/bitcoin/bitcoin/blob/6757b3ac8f670cbc188fc7531394e713975c9351/src/test/util_tests.cpp#L505",https://github.com/bitcoin/bitcoin/pull/19688#issuecomment-673412426,673412426,
hebasto,2020-08-13 13:32:09,"@Crypt-iQ \n> `make cov` still hanging after ~11+ hours on `test_bitcoin-util_tests.gcda`\n\nFixed in #19709.",https://github.com/bitcoin/bitcoin/pull/19688#issuecomment-673480476,673480476,
MarcoFalke,2020-08-12 20:19:39,Could add a comment that this is needed because of a potential dash in the filename of COV_TOOL? (At least I think that was the reason a wrapper is required),https://github.com/bitcoin/bitcoin/pull/19688#discussion_r469516066,469516066,Makefile.am
vasild,2020-08-13 08:48:11,"My understanding is that the wrapper is needed because we run `lcov --gcov-tool /path/to/gcov` and our gcov is `llvm-cov gcov`, so `lcov --gcov-tool ""llvm-cov gcov"" other arguments` would not work.\n\nIt is also possible to generate the coverage without using gcov/lcov:\n\n```sh\n... compile with clang++ -fprofile-instr-generate -fcoverage-mapping ...\nexport LLVM_PROFILE_FILE=""/tmp/coverage",https://github.com/bitcoin/bitcoin/pull/19688#discussion_r469796616,469796616,Makefile.am
