[
  {
    "sha": "0cd9273fd959c6742574259d026039f7da0309a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowY2Q5MjczZmQ5NTljNjc0MjU3NDI1OWQwMjYwMzlmN2RhMDMwOWEy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-07T08:50:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-09-26T14:12:47Z"
      },
      "message": "rpc: Prevent `dumpwallet` from overwriting files\n\nPrevent arbitrary files from being overwritten. There have been reports\nthat users have overwritten wallet files this way. It may also avoid\nother security issues.\n\nFixes #9934. Adds mention to release notes and adds a test.",
      "tree": {
        "sha": "575776245a1af0acffb9f22a987ef7bbf1d86eba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/575776245a1af0acffb9f22a987ef7bbf1d86eba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0cd9273fd959c6742574259d026039f7da0309a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cd9273fd959c6742574259d026039f7da0309a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0cd9273fd959c6742574259d026039f7da0309a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cd9273fd959c6742574259d026039f7da0309a2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "94c9015bca861085f76ca3c045e17d0591aa6c8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94c9015bca861085f76ca3c045e17d0591aa6c8b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/94c9015bca861085f76ca3c045e17d0591aa6c8b"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 19,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4ecca7897cb7db793ee082b3d732e85ec9040649",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cd9273fd959c6742574259d026039f7da0309a2/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cd9273fd959c6742574259d026039f7da0309a2/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=0cd9273fd959c6742574259d026039f7da0309a2",
        "patch": "@@ -83,6 +83,9 @@ Low-level RPC changes\n   * `getwalletinfo`\n   * `getmininginfo`\n \n+- `dumpwallet` no longer allows overwriting files. This is a security measure\n+  as well as prevents dangerous user mistakes.\n+\n Credits\n =======\n "
      },
      {
        "sha": "1123fd6dbb18084e11b490738fa1829076566257",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cd9273fd959c6742574259d026039f7da0309a2/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cd9273fd959c6742574259d026039f7da0309a2/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=0cd9273fd959c6742574259d026039f7da0309a2",
        "patch": "@@ -600,7 +600,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"dumpwallet \\\"filename\\\"\\n\"\n-            \"\\nDumps all wallet keys in a human-readable format.\\n\"\n+            \"\\nDumps all wallet keys in a human-readable format to a server-side file. This does not allow overwriting existing files.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"filename\\\"    (string, required) The filename with path (either absolute or relative to bitcoind)\\n\"\n             \"\\nResult:\\n\"\n@@ -616,9 +616,19 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n \n     EnsureWalletIsUnlocked(pwallet);\n \n-    std::ofstream file;\n     boost::filesystem::path filepath = request.params[0].get_str();\n     filepath = boost::filesystem::absolute(filepath);\n+\n+    /* Prevent arbitrary files from being overwritten. There have been reports\n+     * that users have overwritten wallet files this way:\n+     * https://github.com/bitcoin/bitcoin/issues/9934\n+     * It may also avoid other security issues.\n+     */\n+    if (boost::filesystem::exists(filepath)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, filepath.string() + \" already exists. If you are sure this is what you want, move it out of the way first\");\n+    }\n+\n+    std::ofstream file;\n     file.open(filepath.string().c_str());\n     if (!file.is_open())\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");"
      },
      {
        "sha": "12db95e5d999e3c14bc8a1ca4bd735fc0bbbd949",
        "filename": "test/functional/wallet-dump.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cd9273fd959c6742574259d026039f7da0309a2/test/functional/wallet-dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cd9273fd959c6742574259d026039f7da0309a2/test/functional/wallet-dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-dump.py?ref=0cd9273fd959c6742574259d026039f7da0309a2",
        "patch": "@@ -7,7 +7,7 @@\n import os\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import (assert_equal, assert_raises_jsonrpc)\n \n \n def read_dump(file_name, addrs, hd_master_addr_old):\n@@ -105,5 +105,8 @@ def run_test (self):\n         assert_equal(found_addr_chg, 90*2 + 50)  # old reserve keys are marked as change now\n         assert_equal(found_addr_rsv, 90*2) \n \n+        # Overwriting should fail\n+        assert_raises_jsonrpc(-8, \"already exists\", self.nodes[0].dumpwallet, tmpdir + \"/node0/wallet.unencrypted.dump\")\n+\n if __name__ == '__main__':\n     WalletDumpTest().main ()"
      }
    ]
  }
]