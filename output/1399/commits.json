[
  {
    "sha": "1e8aeae15a300eca107752d6ef52fa0f5c2410c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZThhZWFlMTVhMzAwZWNhMTA3NzUyZDZlZjUyZmEwZjVjMjQxMGMz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-30T20:44:23Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-06-14T15:37:15Z"
      },
      "message": "Improve parsing of IPv6 addresses\n\nImplement the following rules:\n* Interpret [X]:Y as host=X port=Y, if Y is an integer\n* Interpret X:Y as host=X port=Y, if Y is an integer and X contains no colon\n* Interpret X:Y as host=X:Y port=default otherwise",
      "tree": {
        "sha": "b9c8e59dc0756bfb386ddb82b20a4648c0216c6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9c8e59dc0756bfb386ddb82b20a4648c0216c6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e8aeae15a300eca107752d6ef52fa0f5c2410c3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e8aeae15a300eca107752d6ef52fa0f5c2410c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e8aeae15a300eca107752d6ef52fa0f5c2410c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e8aeae15a300eca107752d6ef52fa0f5c2410c3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d59bce21e5dbb0a15051e40d5dd717fd7bf982d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d59bce21e5dbb0a15051e40d5dd717fd7bf982d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d59bce21e5dbb0a15051e40d5dd717fd7bf982d8"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 27,
      "deletions": 43
    },
    "files": [
      {
        "sha": "343da636521f04a627552b21b04be07ef2693bd4",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 43,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e8aeae15a300eca107752d6ef52fa0f5c2410c3/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e8aeae15a300eca107752d6ef52fa0f5c2410c3/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=1e8aeae15a300eca107752d6ef52fa0f5c2410c3",
        "patch": "@@ -33,6 +33,27 @@ enum Network ParseNetwork(std::string net) {\n     return NET_UNROUTABLE;\n }\n \n+void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n+    size_t colon = in.find_last_of(':');\n+    // if a : is found, and it either follows a [...], or no other : is in the string, treat it as port separator\n+    bool fHaveColon = colon != in.npos;\n+    bool fBracketed = fHaveColon && (in[0]=='[' && in[colon-1]==']'); // if there is a colon, and in[0]=='[', colon is not 0, so in[colon-1] is safe\n+    bool fMultiColon = fHaveColon && (in.find_last_of(':',colon-1) != in.npos);\n+    if (fHaveColon && (colon==0 || fBracketed || !fMultiColon)) {\n+        char *endp = NULL;\n+        int n = strtol(in.c_str() + colon + 1, &endp, 10);\n+        if (endp && *endp == 0 && n >= 0) {\n+            in = in.substr(0, colon);\n+            if (n > 0 && n < 0x10000)\n+                portOut = n;\n+        }\n+    }\n+    if (in.size()>0 && in[0] == '[' && in[in.size()-1] == ']')\n+        hostOut = in.substr(1, in.size()-2);\n+    else\n+        hostOut = in;\n+}\n+\n bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)\n {\n     vIP.clear();\n@@ -114,36 +135,11 @@ bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault,\n     if (pszName[0] == 0)\n         return false;\n     int port = portDefault;\n-    char psz[256];\n-    char *pszHost = psz;\n-    strlcpy(psz, pszName, sizeof(psz));\n-    char* pszColon = strrchr(psz+1,':');\n-    char *pszPortEnd = NULL;\n-    int portParsed = pszColon ? strtoul(pszColon+1, &pszPortEnd, 10) : 0;\n-    if (pszColon && pszPortEnd && pszPortEnd[0] == 0)\n-    {\n-        if (psz[0] == '[' && pszColon[-1] == ']')\n-        {\n-            pszHost = psz+1;\n-            pszColon[-1] = 0;\n-        }\n-        else\n-            pszColon[0] = 0;\n-        if (port >= 0 && port <= USHRT_MAX)\n-            port = portParsed;\n-    }\n-    else\n-    {\n-        if (psz[0] == '[' && psz[strlen(psz)-1] == ']')\n-        {\n-            pszHost = psz+1;\n-            psz[strlen(psz)-1] = 0;\n-        }\n-\n-    }\n+    std::string hostname = \"\";\n+    SplitHostPort(std::string(pszName), port, hostname);\n \n     std::vector<CNetAddr> vIP;\n-    bool fRet = LookupIntern(pszHost, vIP, nMaxSolutions, fAllowLookup);\n+    bool fRet = LookupIntern(hostname.c_str(), vIP, nMaxSolutions, fAllowLookup);\n     if (!fRet)\n         return false;\n     vAddr.resize(vIP.size());\n@@ -496,22 +492,9 @@ bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout)\n \n bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout)\n {\n-    string strDest(pszDest);\n+    string strDest;\n     int port = portDefault;\n-\n-    // split hostname and port\n-    size_t colon = strDest.find_last_of(':');\n-    if (colon != strDest.npos) {\n-        char *endp = NULL;\n-        int n = strtol(pszDest + colon + 1, &endp, 10);\n-        if (endp && *endp == 0 && n >= 0) {\n-            strDest = strDest.substr(0, colon);\n-            if (n > 0 && n < 0x10000)\n-                port = n;\n-        }\n-    }\n-    if (strDest[0] == '[' && strDest[strDest.size()-1] == ']')\n-        strDest = strDest.substr(1, strDest.size()-2);\n+    SplitHostPort(string(pszDest), port, strDest);\n \n     SOCKET hSocket = INVALID_SOCKET;\n     CService addrResolved(CNetAddr(strDest, fNameLookup && !nameproxyInfo.second), port);"
      },
      {
        "sha": "878ac986b69e47da92a56c3638a0d41fb76ccc86",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e8aeae15a300eca107752d6ef52fa0f5c2410c3/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e8aeae15a300eca107752d6ef52fa0f5c2410c3/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=1e8aeae15a300eca107752d6ef52fa0f5c2410c3",
        "patch": "@@ -133,6 +133,7 @@ class CService : public CNetAddr\n };\n \n enum Network ParseNetwork(std::string net);\n+void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n bool SetProxy(enum Network net, CService addrProxy, int nSocksVersion = 5);\n bool GetProxy(enum Network net, CService &addrProxy);\n bool IsProxy(const CNetAddr &addr);"
      }
    ]
  },
  {
    "sha": "c4971e24f9bc0b3acc7478b53d03d73a6e64ecbc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDk3MWUyNGY5YmMwYjNhY2M3NDc4YjUzZDAzZDczYTZlNjRlY2Jj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-06-08T16:42:05Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-06-14T15:43:10Z"
      },
      "message": "Add netbase tests",
      "tree": {
        "sha": "342465ff783904756c23a3d935a9ef8972649243",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/342465ff783904756c23a3d935a9ef8972649243"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4971e24f9bc0b3acc7478b53d03d73a6e64ecbc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4971e24f9bc0b3acc7478b53d03d73a6e64ecbc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4971e24f9bc0b3acc7478b53d03d73a6e64ecbc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4971e24f9bc0b3acc7478b53d03d73a6e64ecbc/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e8aeae15a300eca107752d6ef52fa0f5c2410c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e8aeae15a300eca107752d6ef52fa0f5c2410c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e8aeae15a300eca107752d6ef52fa0f5c2410c3"
      }
    ],
    "stats": {
      "total": 92,
      "additions": 92,
      "deletions": 0
    },
    "files": [
      {
        "sha": "77a360aca3e640a4922f3162a5d95ee2eb24f529",
        "filename": "src/test/netbase_tests.cpp",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4971e24f9bc0b3acc7478b53d03d73a6e64ecbc/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4971e24f9bc0b3acc7478b53d03d73a6e64ecbc/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=c4971e24f9bc0b3acc7478b53d03d73a6e64ecbc",
        "patch": "@@ -0,0 +1,92 @@\n+#include <boost/test/unit_test.hpp>\n+\n+#include <string>\n+#include <vector>\n+\n+#include \"netbase.h\"\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(netbase_tests)\n+\n+BOOST_AUTO_TEST_CASE(netbase_networks)\n+{\n+    BOOST_CHECK(CNetAddr(\"127.0.0.1\").GetNetwork()                              == NET_UNROUTABLE);\n+    BOOST_CHECK(CNetAddr(\"::1\").GetNetwork()                                    == NET_UNROUTABLE);\n+    BOOST_CHECK(CNetAddr(\"8.8.8.8\").GetNetwork()                                == NET_IPV4);\n+    BOOST_CHECK(CNetAddr(\"2001::8888\").GetNetwork()                             == NET_IPV6);\n+    BOOST_CHECK(CNetAddr(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\").GetNetwork() == NET_TOR);\n+}\n+\n+BOOST_AUTO_TEST_CASE(netbase_properties)\n+{\n+    BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsIPv4());\n+    BOOST_CHECK(CNetAddr(\"::FFFF:192.168.1.1\").IsIPv4());\n+    BOOST_CHECK(CNetAddr(\"::1\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"10.0.0.1\").IsRFC1918());\n+    BOOST_CHECK(CNetAddr(\"192.168.1.1\").IsRFC1918());\n+    BOOST_CHECK(CNetAddr(\"172.31.255.255\").IsRFC1918());\n+    BOOST_CHECK(CNetAddr(\"2001:0DB8::\").IsRFC3849());\n+    BOOST_CHECK(CNetAddr(\"169.254.1.1\").IsRFC3927());\n+    BOOST_CHECK(CNetAddr(\"2002::1\").IsRFC3964());\n+    BOOST_CHECK(CNetAddr(\"FC00::\").IsRFC4193());\n+    BOOST_CHECK(CNetAddr(\"2001::2\").IsRFC4380());\n+    BOOST_CHECK(CNetAddr(\"2001:10::\").IsRFC4843());\n+    BOOST_CHECK(CNetAddr(\"FE80::\").IsRFC4862());\n+    BOOST_CHECK(CNetAddr(\"64:FF9B::\").IsRFC6052());\n+    BOOST_CHECK(CNetAddr(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\").IsOnionCat());\n+    BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsLocal());\n+    BOOST_CHECK(CNetAddr(\"::1\").IsLocal());\n+    BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n+    BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n+    BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+}\n+\n+bool static TestSplitHost(string test, string host, int port)\n+{\n+    string hostOut;\n+    int portOut = -1;\n+    SplitHostPort(test, portOut, hostOut);\n+    return hostOut == host && port == portOut;\n+}\n+\n+BOOST_AUTO_TEST_CASE(netbase_splithost)\n+{\n+    BOOST_CHECK(TestSplitHost(\"www.bitcoin.org\", \"www.bitcoin.org\", -1));\n+    BOOST_CHECK(TestSplitHost(\"[www.bitcoin.org]\", \"www.bitcoin.org\", -1));\n+    BOOST_CHECK(TestSplitHost(\"www.bitcoin.org:80\", \"www.bitcoin.org\", 80));\n+    BOOST_CHECK(TestSplitHost(\"[www.bitcoin.org]:80\", \"www.bitcoin.org\", 80));\n+    BOOST_CHECK(TestSplitHost(\"127.0.0.1\", \"127.0.0.1\", -1));\n+    BOOST_CHECK(TestSplitHost(\"127.0.0.1:8333\", \"127.0.0.1\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"[127.0.0.1]\", \"127.0.0.1\", -1));\n+    BOOST_CHECK(TestSplitHost(\"[127.0.0.1]:8333\", \"127.0.0.1\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"::ffff:127.0.0.1\", \"::ffff:127.0.0.1\", -1));\n+    BOOST_CHECK(TestSplitHost(\"[::ffff:127.0.0.1]:8333\", \"::ffff:127.0.0.1\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"[::]:8333\", \"::\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"::8333\", \"::8333\", -1));\n+    BOOST_CHECK(TestSplitHost(\":8333\", \"\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"[]:8333\", \"\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"\", \"\", -1));\n+}\n+\n+bool static TestParse(string src, string canon)\n+{\n+    CService addr;\n+    if (!LookupNumeric(src.c_str(), addr, 65535))\n+        return canon == \"\";\n+    return canon == addr.ToString();\n+}\n+\n+BOOST_AUTO_TEST_CASE(netbase_lookupnumeric)\n+{\n+    BOOST_CHECK(TestParse(\"127.0.0.1\", \"127.0.0.1:65535\"));\n+    BOOST_CHECK(TestParse(\"127.0.0.1:8333\", \"127.0.0.1:8333\"));\n+    BOOST_CHECK(TestParse(\"::ffff:127.0.0.1\", \"127.0.0.1:65535\"));\n+    BOOST_CHECK(TestParse(\"::\", \"[::]:65535\"));\n+    BOOST_CHECK(TestParse(\"[::]:8333\", \"[::]:8333\"));\n+    BOOST_CHECK(TestParse(\"[127.0.0.1]\", \"127.0.0.1:65535\"));\n+    BOOST_CHECK(TestParse(\":::\", \"\"));\n+    BOOST_CHECK(TestParse(\"128.5.1\", \"128.5.0.1:65535\"));\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]