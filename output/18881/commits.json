[
  {
    "sha": "458992b06d80eb568141f60a33d38e12e894e27a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTg5OTJiMDZkODBlYjU2ODE0MWY2MGEzM2QzOGUxMmU4OTRlMjdh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-05T05:07:47Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T22:13:49Z"
      },
      "message": "Prevent UB in DeleteLock() function",
      "tree": {
        "sha": "e4ceacb8391cccd46765ee41f4f75dc968afc7cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4ceacb8391cccd46765ee41f4f75dc968afc7cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/458992b06d80eb568141f60a33d38e12e894e27a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DCJ8ACgkQQQEIES5+\nqB9uGw//fbNWh/IpbfdJE4LnjxQCFh318aL2QIxvS+EbuuWLa8wDegGjVZwnS1PW\nN3pV61jJxEFkuPL3lrOp5UZEle8sWKZkCsnh8siV8YXRG6w4FwJXTUas7b96OyeM\nD0He1ZEK6v1i5X3U688Sxjo0D9DDGqFBApP9sIw4a18c5uyJtPcYbtgMrIa431s6\nmM5geFzKq44uGur/ydlpIspcFIEgAPubMEKJNSQEuCF5IH9VYhlX6PEw5mxcPmtU\nHWsmCdOfkWA/EdnPKvJQa3vLIpBVwAOgunazIBIwbXjfWxjFIZiyFLFOIgbIP2kX\n7Xg9CeY6XO8uUMRlZ17Fls7pIqjKQ89y88WWVU0JqBWB6wcIVJF2SJEhUaDswjH3\nH4euZwndvVZZFaZjF4zSF5jUfdXkLY2+fVpIikEUtMa5TfPIzxZCCS+5iPkyiO1M\nStNGl5PtZPAmgfgvzgNPK733sRkGPEOHixhuLd45ZEVi9AiBYvnPx/kckMfzTPPO\nDnjkib17I2P8mptPxoHr1zXzbOvl1bVs7YqYA6D1NTBGShUN58uvcXjKj7gFDwY3\nVCd2rzE7O3LNe2owhRYKoY8NMh9LQj7jPcctj1o/3mPzyPXBstkKuNoEPUkEYfSs\neMuaG51LTIxmm+6geL5p59LlfqscjOB24syqNxAVsOLKH0sMJFI=\n=cXOW\n-----END PGP SIGNATURE-----",
        "payload": "tree e4ceacb8391cccd46765ee41f4f75dc968afc7cc\nparent ec79b5f86b22ad8f77c736f9bb76c2e4d7faeaa4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1588655267 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589840029 +0300\n\nPrevent UB in DeleteLock() function\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/458992b06d80eb568141f60a33d38e12e894e27a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/458992b06d80eb568141f60a33d38e12e894e27a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/458992b06d80eb568141f60a33d38e12e894e27a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec79b5f86b22ad8f77c736f9bb76c2e4d7faeaa4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec79b5f86b22ad8f77c736f9bb76c2e4d7faeaa4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec79b5f86b22ad8f77c736f9bb76c2e4d7faeaa4"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 5,
      "deletions": 14
    },
    "files": [
      {
        "sha": "afb5ad51b18ddc687f94c233f16f3168502f89bb",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 14,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/458992b06d80eb568141f60a33d38e12e894e27a/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/458992b06d80eb568141f60a33d38e12e894e27a/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=458992b06d80eb568141f60a33d38e12e894e27a",
        "patch": "@@ -78,21 +78,16 @@ typedef std::map<std::pair<void*, void*>, LockStack> LockOrders;\n typedef std::set<std::pair<void*, void*> > InvLockOrders;\n \n struct LockData {\n-    // Very ugly hack: as the global constructs and destructors run single\n-    // threaded, we use this boolean to know whether LockData still exists,\n-    // as DeleteLock can get called by global RecursiveMutex destructors\n-    // after LockData disappears.\n-    bool available;\n-    LockData() : available(true) {}\n-    ~LockData() { available = false; }\n-\n     LockOrders lockorders;\n     InvLockOrders invlockorders;\n     std::mutex dd_mutex;\n };\n+\n LockData& GetLockData() {\n-    static LockData lockdata;\n-    return lockdata;\n+    // This approach guarantees that the object is not destroyed until after its last use.\n+    // The operating system automatically reclaims all the memory in a program's heap when that program exits.\n+    static LockData& lock_data = *new LockData();\n+    return lock_data;\n }\n \n static thread_local LockStack g_lockstack;\n@@ -207,10 +202,6 @@ void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLi\n void DeleteLock(void* cs)\n {\n     LockData& lockdata = GetLockData();\n-    if (!lockdata.available) {\n-        // We're already shutting down.\n-        return;\n-    }\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n     std::pair<void*, void*> item = std::make_pair(cs, nullptr);\n     LockOrders::iterator it = lockdata.lockorders.lower_bound(item);"
      }
    ]
  },
  {
    "sha": "8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDg5MjFhYmQzNWMzYWMxYjhlYmFjYjExZGU4ZTFiYmM3YjI4ZDY2",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T06:40:50Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T22:14:07Z"
      },
      "message": "refactor: Add LockStackItem type alias",
      "tree": {
        "sha": "8727fcdbbe78ff8c911299b1997fe5e77e0ce1a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8727fcdbbe78ff8c911299b1997fe5e77e0ce1a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DCK8ACgkQQQEIES5+\nqB/+1Q/7BZ0PEdpOOk703gNAr+FSsP++GFp8xeP4RiXsAKo5hdhmsMIW/q//casn\nTemxti0XNNePRkHmKPt4SYz/Rb3nBi9k9DmkWaoEce9U9x5EkJw1a5VYNIzCtVIS\nErYo3uie2d6T9OoF5d1e50KIxqlP6yybjArOuxZX4gKdcIYRBDLBmsXpiBAtY17R\nyinWXU3NDbFzjqvc05zLOWTEwR9soUYBgvnAvr1jLtF/ZznOCiC4amTDfrrEQfQJ\nuu5aCIitr2jI4oS6b8bQrWGABd7oeEcT7Qc5fNfZhqWw6NPGSzs4QFgshPCdahIP\n8EIr2eeOjMcDkWC0H7tTSuffO/O1ncbtrjM8vqh/TuElGzW9RYl3YsQDODz4NGwf\nOYo21NW2v5ZSLny9vQuEUpeC8n2WKCvCCmo45+TqFwkMUDhav9WEy2k3ylTtBpor\nVhhNLcjGIAeyBVp81w7T8jCjfr6qk6GL5Wfxiqfc2WvBQYtRVesuK2e7hHqemU4X\nXoo7zuN0Yd+qG5qH2DFFr3Va8i4sYLjd3/a7z6kCjVvD2nIg9UONULeW9wMhgJAs\nJChg8htPKBfXOEUFmGsk+1pC4gnlBraDc350kwecagnyhStRCLjK0rfKfFB5gW1P\n6AKZs1A23HUL9rvbu/KQJMRqPLnF56tRhUsgGlMWQEG7FOtfNOo=\n=bzAM\n-----END PGP SIGNATURE-----",
        "payload": "tree 8727fcdbbe78ff8c911299b1997fe5e77e0ce1a5\nparent 458992b06d80eb568141f60a33d38e12e894e27a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589784050 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589840047 +0300\n\nrefactor: Add LockStackItem type alias\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "458992b06d80eb568141f60a33d38e12e894e27a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/458992b06d80eb568141f60a33d38e12e894e27a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/458992b06d80eb568141f60a33d38e12e894e27a"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "35137a4b9959355ef4cb4ce2047d422e5a47c63c",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66",
        "patch": "@@ -7,15 +7,17 @@\n #endif\n \n #include <sync.h>\n-#include <tinyformat.h>\n \n #include <logging.h>\n+#include <tinyformat.h>\n #include <util/strencodings.h>\n #include <util/threadnames.h>\n \n #include <map>\n #include <set>\n #include <system_error>\n+#include <utility>\n+#include <vector>\n \n #ifdef DEBUG_LOCKCONTENTION\n #if !defined(HAVE_THREAD_LOCAL)\n@@ -73,7 +75,8 @@ struct CLockLocation {\n     int sourceLine;\n };\n \n-typedef std::vector<std::pair<void*, CLockLocation> > LockStack;\n+using LockStackItem = std::pair<void*, CLockLocation>;\n+using LockStack = std::vector<LockStackItem>;\n typedef std::map<std::pair<void*, void*>, LockStack> LockOrders;\n typedef std::set<std::pair<void*, void*> > InvLockOrders;\n \n@@ -96,7 +99,7 @@ static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch,\n {\n     LogPrintf(\"POTENTIAL DEADLOCK DETECTED\\n\");\n     LogPrintf(\"Previous lock order was:\\n\");\n-    for (const std::pair<void*, CLockLocation> & i : s2) {\n+    for (const LockStackItem& i : s2) {\n         if (i.first == mismatch.first) {\n             LogPrintf(\" (1)\"); /* Continued */\n         }\n@@ -106,7 +109,7 @@ static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch,\n         LogPrintf(\" %s\\n\", i.second.ToString());\n     }\n     LogPrintf(\"Current lock order is:\\n\");\n-    for (const std::pair<void*, CLockLocation> & i : s1) {\n+    for (const LockStackItem& i : s1) {\n         if (i.first == mismatch.first) {\n             LogPrintf(\" (1)\"); /* Continued */\n         }\n@@ -129,7 +132,7 @@ static void push_lock(void* c, const CLockLocation& locklocation)\n \n     g_lockstack.push_back(std::make_pair(c, locklocation));\n \n-    for (const std::pair<void*, CLockLocation>& i : g_lockstack) {\n+    for (const LockStackItem& i : g_lockstack) {\n         if (i.first == c)\n             break;\n \n@@ -175,14 +178,14 @@ void LeaveCritical()\n std::string LocksHeld()\n {\n     std::string result;\n-    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n+    for (const LockStackItem& i : g_lockstack)\n         result += i.second.ToString() + std::string(\"\\n\");\n     return result;\n }\n \n void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {\n-    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n+    for (const LockStackItem& i : g_lockstack)\n         if (i.first == cs)\n             return;\n     tfm::format(std::cerr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n@@ -191,7 +194,7 @@ void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine,\n \n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {\n-    for (const std::pair<void*, CLockLocation>& i : g_lockstack) {\n+    for (const LockStackItem& i : g_lockstack) {\n         if (i.first == cs) {\n             tfm::format(std::cerr, \"Assertion failed: lock %s held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n             abort();"
      }
    ]
  },
  {
    "sha": "f511f61dda4e860079153d5e51d64658cc265283",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTExZjYxZGRhNGU4NjAwNzkxNTNkNWU1MWQ2NDY1OGNjMjY1Mjgz",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T07:00:08Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T22:14:07Z"
      },
      "message": "refactor: Add LockPair type alias",
      "tree": {
        "sha": "61c2d7b9840ee92be945e81340e110ff542ecf7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61c2d7b9840ee92be945e81340e110ff542ecf7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f511f61dda4e860079153d5e51d64658cc265283",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DCK8ACgkQQQEIES5+\nqB8qtg//Q0pp755joMqq2CL3nXN32QoBIsGdzk9ddT/1aXn2Y40K1paJwvhG/tje\nRZu1FjQUn8q8GdIRYtPm5Zsacg81YWx1tdSCO0kz8NLfVZ2q4BKvSn3Fla3YPk3Q\nKiGPRUBu+XjSuyPU9/b0HTKMXuOiErxSRowfbwAqkh0eRl8C08mn5mHUqBz28Q7D\nCtKX2p7q+iN0MM6TpImEapVTVian7my7B6mih2nOuG9vcm8atXt8I8NSxIxFUtxI\nL8Dfn8onVi3ZFKtgKsDpoxslKstDq0zV8I/gMlORYpbmQKgvNy+WJm8ypq8F0J9d\nZYXAJZKlWhJuzf/DgqW0fpYWvd9yrAnY7xjYEBCzhNqBXc40lWkj0+g/wA2R4vNC\nVNNldiMXXxuKxh2K9/vjJ4OSxrCzY76WP8TcSsvbFnvDIKCHxCG1C+B/HUOnNvyS\n5vajBNhW47HC8eyAMu4kdB2f08CzptDq8TpDiFbHhzXZrJUlZZdEKBWY54aEa12Y\nr29HvtvszW9HNhXqJlUOfnlVYGSbnQil21dxkvaIAcCXThMNzptQ6j4To2bhg1pN\nQO5gSwmF6iwhHzFio57lImBTz8BJRLFLinjLj1GcM6jqBQmo7hhEHvx0qgA//OyN\nyeOSD8DMGHp42Xk69+nRb5sxVUed2Pgf2RPpav/I1tPtVCR3UuM=\n=R6zK\n-----END PGP SIGNATURE-----",
        "payload": "tree 61c2d7b9840ee92be945e81340e110ff542ecf7f\nparent 8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589785208 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589840047 +0300\n\nrefactor: Add LockPair type alias\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f511f61dda4e860079153d5e51d64658cc265283",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f511f61dda4e860079153d5e51d64658cc265283",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f511f61dda4e860079153d5e51d64658cc265283/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8921abd35c3ac1b8ebacb11de8e1bbc7b28d66"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "cfbbb78c6b20b52c572d08383f5dc2dda964d1ce",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f511f61dda4e860079153d5e51d64658cc265283/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f511f61dda4e860079153d5e51d64658cc265283/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=f511f61dda4e860079153d5e51d64658cc265283",
        "patch": "@@ -77,8 +77,10 @@ struct CLockLocation {\n \n using LockStackItem = std::pair<void*, CLockLocation>;\n using LockStack = std::vector<LockStackItem>;\n-typedef std::map<std::pair<void*, void*>, LockStack> LockOrders;\n-typedef std::set<std::pair<void*, void*> > InvLockOrders;\n+\n+using LockPair = std::pair<void*, void*>;\n+using LockOrders = std::map<LockPair, LockStack>;\n+using InvLockOrders = std::set<LockPair>;\n \n struct LockData {\n     LockOrders lockorders;\n@@ -95,7 +97,7 @@ LockData& GetLockData() {\n \n static thread_local LockStack g_lockstack;\n \n-static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch, const LockStack& s1, const LockStack& s2)\n+static void potential_deadlock_detected(const LockPair& mismatch, const LockStack& s1, const LockStack& s2)\n {\n     LogPrintf(\"POTENTIAL DEADLOCK DETECTED\\n\");\n     LogPrintf(\"Previous lock order was:\\n\");\n@@ -136,12 +138,12 @@ static void push_lock(void* c, const CLockLocation& locklocation)\n         if (i.first == c)\n             break;\n \n-        std::pair<void*, void*> p1 = std::make_pair(i.first, c);\n+        const LockPair p1 = std::make_pair(i.first, c);\n         if (lockdata.lockorders.count(p1))\n             continue;\n         lockdata.lockorders.emplace(p1, g_lockstack);\n \n-        std::pair<void*, void*> p2 = std::make_pair(c, i.first);\n+        const LockPair p2 = std::make_pair(c, i.first);\n         lockdata.invlockorders.insert(p2);\n         if (lockdata.lockorders.count(p2))\n             potential_deadlock_detected(p1, lockdata.lockorders[p2], lockdata.lockorders[p1]);\n@@ -206,16 +208,16 @@ void DeleteLock(void* cs)\n {\n     LockData& lockdata = GetLockData();\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n-    std::pair<void*, void*> item = std::make_pair(cs, nullptr);\n+    const LockPair item = std::make_pair(cs, nullptr);\n     LockOrders::iterator it = lockdata.lockorders.lower_bound(item);\n     while (it != lockdata.lockorders.end() && it->first.first == cs) {\n-        std::pair<void*, void*> invitem = std::make_pair(it->first.second, it->first.first);\n+        const LockPair invitem = std::make_pair(it->first.second, it->first.first);\n         lockdata.invlockorders.erase(invitem);\n         lockdata.lockorders.erase(it++);\n     }\n     InvLockOrders::iterator invit = lockdata.invlockorders.lower_bound(item);\n     while (invit != lockdata.invlockorders.end() && invit->first == cs) {\n-        std::pair<void*, void*> invinvitem = std::make_pair(invit->second, invit->first);\n+        const LockPair invinvitem = std::make_pair(invit->second, invit->first);\n         lockdata.lockorders.erase(invinvitem);\n         lockdata.invlockorders.erase(invit++);\n     }"
      }
    ]
  },
  {
    "sha": "58e6881bc5be002e8ddbc9b75422c0deae66a2df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGU2ODgxYmM1YmUwMDJlOGRkYmM5Yjc1NDIyYzBkZWFlNjZhMmRm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T14:45:46Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T22:14:07Z"
      },
      "message": "refactor: Refactor duplicated code into LockHeld()",
      "tree": {
        "sha": "3fbf313131c6feb325dd0110ee50de50bff0b933",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3fbf313131c6feb325dd0110ee50de50bff0b933"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58e6881bc5be002e8ddbc9b75422c0deae66a2df",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DCK8ACgkQQQEIES5+\nqB+tGg//Qtv/yGuouzkLuHfOMZMnY2F4Sm5ZIY/I8yxgiM1cagzIgYNVET4HIzHS\nBdsGuq3UahHcqcRE8aC2tH49AiEN+VoE/BSBdj6yVbhw+8OKFbvnj42h/faHVDM6\nJ/+85KT0FW0E0wdZw8HJBr7tT9ZLbXM6UDtlfnfcXCTSyIMVPum3myCXh3Z6NgpF\nVNvOpuMQ/csith+6EJ+BJVgGOAoya9PCq8vyHbnk3lrKh700glSmFz4kelKUzoCi\nngcxIAL/TB+RfI8w1hyDzWpcvSNJj0cMx4zh2VaxDBxSTmHoL5xBagcaREHdYcGH\nP98Z+alVMneIQyX2j3ghHrosOfdKlPYiyzI7CoKnCns3800XMJSFkRqtF9WeLR/G\nUwhq64LUOn+bcBZsb1Swv3FzaxJu/YIpSGdj/zUOxz5bUmWUhpD6vkzrAhPiWm4h\nuj1a60QpkIpNY9Z314z0s+e8l5VpzpY6cAWo3M+eHgYf4j9Ys745nLewyAKacJov\nyXBfc5T01L7i60dbcLxFuJpfZ+nUntWjvW4t9vd0OBUY15Tp0skj9C+9FWZlcW24\niplEuVgrOwRdKjbcplhzKxmnQRxFvbPVo4HBd4WE294ENZsjN121PcJxK5ov+FH7\nRFv9CqKqxZrth5zEKz9y1iuseXJyFTybyeNZBsHiLEowb/HR1kg=\n=k6tb\n-----END PGP SIGNATURE-----",
        "payload": "tree 3fbf313131c6feb325dd0110ee50de50bff0b933\nparent f511f61dda4e860079153d5e51d64658cc265283\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589813146 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589840047 +0300\n\nrefactor: Refactor duplicated code into LockHeld()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e6881bc5be002e8ddbc9b75422c0deae66a2df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58e6881bc5be002e8ddbc9b75422c0deae66a2df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e6881bc5be002e8ddbc9b75422c0deae66a2df/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f511f61dda4e860079153d5e51d64658cc265283",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f511f61dda4e860079153d5e51d64658cc265283",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f511f61dda4e860079153d5e51d64658cc265283"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 13,
      "deletions": 9
    },
    "files": [
      {
        "sha": "5817e22c86ef0e24108882c3b316bb3d673c3aa9",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58e6881bc5be002e8ddbc9b75422c0deae66a2df/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58e6881bc5be002e8ddbc9b75422c0deae66a2df/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=58e6881bc5be002e8ddbc9b75422c0deae66a2df",
        "patch": "@@ -185,23 +185,27 @@ std::string LocksHeld()\n     return result;\n }\n \n+static bool LockHeld(void* mutex)\n+{\n+    for (const LockStackItem& i : g_lockstack) {\n+        if (i.first == mutex) return true;\n+    }\n+\n+    return false;\n+}\n+\n void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {\n-    for (const LockStackItem& i : g_lockstack)\n-        if (i.first == cs)\n-            return;\n+    if (LockHeld(cs)) return;\n     tfm::format(std::cerr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n     abort();\n }\n \n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {\n-    for (const LockStackItem& i : g_lockstack) {\n-        if (i.first == cs) {\n-            tfm::format(std::cerr, \"Assertion failed: lock %s held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n-            abort();\n-        }\n-    }\n+    if (!LockHeld(cs)) return;\n+    tfm::format(std::cerr, \"Assertion failed: lock %s held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n+    abort();\n }\n \n void DeleteLock(void* cs)"
      }
    ]
  },
  {
    "sha": "26c093a9957756f3743c2347fe0abd90f81159c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNmMwOTNhOTk1Nzc1NmYzNzQzYzIzNDdmZTBhYmQ5MGY4MTE1OWM0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T15:22:26Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T22:14:08Z"
      },
      "message": "Replace thread_local g_lockstack with a mutex-protected map\n\nThis change prevents UB in case of early g_lockstack destroying.\n\nCo-authored-by: Wladimir J. van der Laan <laanwj@protonmail.com>",
      "tree": {
        "sha": "4efc88a350ffe47d3935d255a14c05b28b07be7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4efc88a350ffe47d3935d255a14c05b28b07be7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26c093a9957756f3743c2347fe0abd90f81159c4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DCLAACgkQQQEIES5+\nqB+F2Q/9FoKcYpPei92mC1gWwsxi6UhgL7auIi3gfV//ixKwfshiwfL4gWIhmO5A\nwdhmAy7ARpYx4Uj8ekmoSuI9ol+52uuQdfjxvuCEf+jUMOiPfdrNbGDXRCCeP53S\nveFn70Mq5x79JtO1OtzfTZc19u7u/+6geUVIjbxZtbQyQz0EFzJW+iOZ3uG8TO73\nQbqAq4XhnsuQJAcCO5OUUzq7WUZaFYEEDHOynKlfHmFWHRin3YBoCLLm3HTL3xHe\nSQ6nqGvgueZouNGYyfaAgHP+WVOUvHE27B7NzmE59cL+1awuWnkmNXAna6wR7GN1\nHgvc/5fEb3GPivGOpliyfN7IZxNuRhAqdfc3trMtv1mflq4lv4HSB2N0iwoqsM1h\nqqDWY7lViD/66BPzvy6+JrjzkjE+bdF2Dkgcq86ujkaMRCRr/esM/VLTrzz5TBzj\nQJ+hm/wZflTR5nuZqDv4CMA1MWdE+lGw0tAwy2MtihNpFHD/0Keg+64rjpgmHGlL\nFFFWdcHZU9CHEIBjaPBgLRwP+WoMRiKRgTMCBM+h/qz5qks9UI9K/BU21XfCWDxZ\n9cn5mVqsPizd+eAibbQS1Fiq+wEJX7iK7jSAC2wNdUESmc7GR0+wxdP1Otgu1G3s\neV2Z1SA4St3/NzaWymkHJLzRLajOE6hmFFahxTUtVO6TomUCuTQ=\n=5mJE\n-----END PGP SIGNATURE-----",
        "payload": "tree 4efc88a350ffe47d3935d255a14c05b28b07be7a\nparent 58e6881bc5be002e8ddbc9b75422c0deae66a2df\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589815346 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589840048 +0300\n\nReplace thread_local g_lockstack with a mutex-protected map\n\nThis change prevents UB in case of early g_lockstack destroying.\n\nCo-authored-by: Wladimir J. van der Laan <laanwj@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c093a9957756f3743c2347fe0abd90f81159c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26c093a9957756f3743c2347fe0abd90f81159c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c093a9957756f3743c2347fe0abd90f81159c4/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "58e6881bc5be002e8ddbc9b75422c0deae66a2df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58e6881bc5be002e8ddbc9b75422c0deae66a2df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58e6881bc5be002e8ddbc9b75422c0deae66a2df"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 37,
      "deletions": 14
    },
    "files": [
      {
        "sha": "9b0878bbea23649ae63c657ee11c3cbd575b46c7",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 14,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c093a9957756f3743c2347fe0abd90f81159c4/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c093a9957756f3743c2347fe0abd90f81159c4/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=26c093a9957756f3743c2347fe0abd90f81159c4",
        "patch": "@@ -16,6 +16,8 @@\n #include <map>\n #include <set>\n #include <system_error>\n+#include <thread>\n+#include <unordered_map>\n #include <utility>\n #include <vector>\n \n@@ -77,12 +79,14 @@ struct CLockLocation {\n \n using LockStackItem = std::pair<void*, CLockLocation>;\n using LockStack = std::vector<LockStackItem>;\n+using LockStacks = std::unordered_map<std::thread::id, LockStack>;\n \n using LockPair = std::pair<void*, void*>;\n using LockOrders = std::map<LockPair, LockStack>;\n using InvLockOrders = std::set<LockPair>;\n \n struct LockData {\n+    LockStacks m_lock_stacks;\n     LockOrders lockorders;\n     InvLockOrders invlockorders;\n     std::mutex dd_mutex;\n@@ -95,8 +99,6 @@ LockData& GetLockData() {\n     return lock_data;\n }\n \n-static thread_local LockStack g_lockstack;\n-\n static void potential_deadlock_detected(const LockPair& mismatch, const LockStack& s1, const LockStack& s2)\n {\n     LogPrintf(\"POTENTIAL DEADLOCK DETECTED\\n\");\n@@ -132,16 +134,16 @@ static void push_lock(void* c, const CLockLocation& locklocation)\n     LockData& lockdata = GetLockData();\n     std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n \n-    g_lockstack.push_back(std::make_pair(c, locklocation));\n-\n-    for (const LockStackItem& i : g_lockstack) {\n+    LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n+    lock_stack.emplace_back(c, locklocation);\n+    for (const LockStackItem& i : lock_stack) {\n         if (i.first == c)\n             break;\n \n         const LockPair p1 = std::make_pair(i.first, c);\n         if (lockdata.lockorders.count(p1))\n             continue;\n-        lockdata.lockorders.emplace(p1, g_lockstack);\n+        lockdata.lockorders.emplace(p1, lock_stack);\n \n         const LockPair p2 = std::make_pair(c, i.first);\n         lockdata.invlockorders.insert(p2);\n@@ -152,7 +154,14 @@ static void push_lock(void* c, const CLockLocation& locklocation)\n \n static void pop_lock()\n {\n-    g_lockstack.pop_back();\n+    LockData& lockdata = GetLockData();\n+    std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n+\n+    LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n+    lock_stack.pop_back();\n+    if (lock_stack.empty()) {\n+        lockdata.m_lock_stacks.erase(std::this_thread::get_id());\n+    }\n }\n \n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n@@ -162,11 +171,17 @@ void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs\n \n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line)\n {\n-    if (!g_lockstack.empty()) {\n-        const auto& lastlock = g_lockstack.back();\n-        if (lastlock.first == cs) {\n-            lockname = lastlock.second.Name();\n-            return;\n+    {\n+        LockData& lockdata = GetLockData();\n+        std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n+\n+        const LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n+        if (!lock_stack.empty()) {\n+            const auto& lastlock = lock_stack.back();\n+            if (lastlock.first == cs) {\n+                lockname = lastlock.second.Name();\n+                return;\n+            }\n         }\n     }\n     throw std::system_error(EPERM, std::generic_category(), strprintf(\"%s:%s %s was not most recent critical section locked\", file, line, guardname));\n@@ -179,15 +194,23 @@ void LeaveCritical()\n \n std::string LocksHeld()\n {\n+    LockData& lockdata = GetLockData();\n+    std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n+\n+    const LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n     std::string result;\n-    for (const LockStackItem& i : g_lockstack)\n+    for (const LockStackItem& i : lock_stack)\n         result += i.second.ToString() + std::string(\"\\n\");\n     return result;\n }\n \n static bool LockHeld(void* mutex)\n {\n-    for (const LockStackItem& i : g_lockstack) {\n+    LockData& lockdata = GetLockData();\n+    std::lock_guard<std::mutex> lock(lockdata.dd_mutex);\n+\n+    const LockStack& lock_stack = lockdata.m_lock_stacks[std::this_thread::get_id()];\n+    for (const LockStackItem& i : lock_stack) {\n         if (i.first == mutex) return true;\n     }\n "
      }
    ]
  },
  {
    "sha": "90eb027204f5a9d7c00fa97d4112243bd37a9012",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MGViMDI3MjA0ZjVhOWQ3YzAwZmE5N2Q0MTEyMjQzYmQzN2E5MDEy",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-22T12:45:21Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-22T12:45:21Z"
      },
      "message": "doc: Add and fix comments about never destroyed objects",
      "tree": {
        "sha": "48f59f69118a294203762b72481d6c61e3d6c25f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48f59f69118a294203762b72481d6c61e3d6c25f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/90eb027204f5a9d7c00fa97d4112243bd37a9012",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7HyWEACgkQQQEIES5+\nqB/+lRAAmTmeVmQxS8ER0rH/9BqsjEXCRrSBq4p9kJ+ZTDjArwxk3dn9luUx5exM\nR2P6tgFXUh0ukJxvFyAOLxXBNDAwJ0Q9f6ui1ta1Y7jo1d6rY8khJUlwfVgqj1Sy\n8jP+ggewmFim2L/OT5l30aqs+E8LNc8V5m7x5uJmMIm+YlIaapOvOKm/M1+lTZeq\nn4F8XSJwhhkkF8BQEgk1SbZ81zhueXFnZ/hutWs5UFvkUnnCB/FrjUg8kmsYqr94\nLI3ANZij3Cb43tw8HQgP33cSxyVHQ/nFGBIZp3JsP3/9uOHsOR/78GjQWikOJUVM\nGH0gNJZAYPcSca4cS/WswN029jTE7+6S7yBUEwwiEaTRgJq5ZJxSve8yHhxBIB24\nholmcet1x2PJ3g9u40iPbkLQhRqo/Fi+e0sxwUaGgHhMeOwqOWNRfYD8UFOpZbBD\n8rSfWPRGK7DIaTg+VfFt1dRLZNXsVSChdt+Otp/Qv/bYNIW3nx2Q/WAVqi23Rj32\nOgCLDW5227rY15rH48ZgXWXbqwkVEA2fZlmzCRm6rAQPkgtUHC5waVgP6lo1nvoH\ngQc1e2Cw9Ex04laH6DhbKI9esHOuRNqwpoL++wlNU3OpizUHkbi6mPhRTV9G8Hms\nGJ8mJe1dveVz6paco+0c8V8be7cCSa4WD0wNDJ5yrxHFca5ynj4=\n=AerY\n-----END PGP SIGNATURE-----",
        "payload": "tree 48f59f69118a294203762b72481d6c61e3d6c25f\nparent 26c093a9957756f3743c2347fe0abd90f81159c4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590151521 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590151521 +0300\n\ndoc: Add and fix comments about never destroyed objects\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90eb027204f5a9d7c00fa97d4112243bd37a9012",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/90eb027204f5a9d7c00fa97d4112243bd37a9012",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90eb027204f5a9d7c00fa97d4112243bd37a9012/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26c093a9957756f3743c2347fe0abd90f81159c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c093a9957756f3743c2347fe0abd90f81159c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26c093a9957756f3743c2347fe0abd90f81159c4"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "56c44ae1ea4aa2f4510d558bd63a123bc8e524f9",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90eb027204f5a9d7c00fa97d4112243bd37a9012/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90eb027204f5a9d7c00fa97d4112243bd37a9012/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=90eb027204f5a9d7c00fa97d4112243bd37a9012",
        "patch": "@@ -22,8 +22,8 @@ BCLog::Logger& LogInstance()\n  * access the logger. When the shutdown sequence is fully audited and tested,\n  * explicit destruction of these objects can be implemented by changing this\n  * from a raw pointer to a std::unique_ptr.\n- * Since the destructor is never called, the logger and all its members must\n- * have a trivial destructor.\n+ * Since the ~Logger() destructor is never called, the Logger class and all\n+ * its subclasses must have implicitly-defined destructors.\n  *\n  * This method of initialization was originally introduced in\n  * ee3374234c60aba2cc4c5cd5cac1c0aefc2d817c."
      },
      {
        "sha": "c3312b5a00ed9578a86685d23d04f1b7f81dd342",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/90eb027204f5a9d7c00fa97d4112243bd37a9012/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/90eb027204f5a9d7c00fa97d4112243bd37a9012/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=90eb027204f5a9d7c00fa97d4112243bd37a9012",
        "patch": "@@ -95,6 +95,8 @@ struct LockData {\n LockData& GetLockData() {\n     // This approach guarantees that the object is not destroyed until after its last use.\n     // The operating system automatically reclaims all the memory in a program's heap when that program exits.\n+    // Since the ~LockData() destructor is never called, the LockData class and all\n+    // its subclasses must have implicitly-defined destructors.\n     static LockData& lock_data = *new LockData();\n     return lock_data;\n }"
      }
    ]
  }
]