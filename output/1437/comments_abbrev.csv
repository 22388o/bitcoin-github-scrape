Diapolo,2012-06-10T11:27:50Z,"Whenever I proposed to update to Boost 1.49 for the Win-build I got the answer no that is not importand enough ... see #1023, which even hardens the URI handling.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6227661,6227661,
TheBlueMatt,2012-06-10T12:28:43Z,"Dunno, maybe gavin didn't quite understand the phrasing there.  To be clear, this simply encourages using a path of boost_1_49_0 instead of boost_1_47_0 when building with a MinGW makefile, if you add your own -I/-L you can still gladly use any boost version you want.  It also upgrades gitian build to use 1.49 and patches boost according to a request for testing that a boost developer made at http",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6227977,6227977,
Diapolo,2012-06-10T12:34:25Z,"I'm with you and I have used boost 1.49 with this mentioned lines enabled for a long time now. I think my pull would perfectly fit on top of what you are doing here, but it seems no one even tried to look at it in detail :-/.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6228011,6228011,
gavinandresen,2012-06-12T13:30:51Z,"I think this feature is big enough it needs a test plan (see https://secure.bettermeans.com/projects/4180/wiki/Raw_Transaction_RPC_Test_Plan for an example of what I'm thinking). Also, since it opens up potential security holes, writing a tool to throw ""fuzzed"" input at it and verifying that nothing bad happens would make me happy.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6270376,6270376,
TheBlueMatt,2012-06-12T16:03:37Z,To test:\n1) launch Bitcoin-Qt with a bitcoin: URI to make sure it opens URIs provided at initial start.\n    Result should be opening directly to the send dialog with the content of the provided URI.\n2) while [ true ]; do ./release/bitcoin-qt.exe bitcoin:1JBMattRztKDF2KRS3vhjJXA7h47NEsn2c; done\n    Ensure only one URI is added per second to the send dialog (note that any more sent to Bitcoin wi,https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6274621,6274621,
laanwj,2012-06-13T07:11:40Z,"It would be nice to get URL support back in once and for all. If that means requiring boost 1.49 _on windows_ that's fine with me. But it's too bad it still needs the monkey patch to be stable :/ Won't the upstream boost developers integrate it?\n\n`Anything larger than 256 will attempt to launch bitcoin`\n\nIs that desired behavior? I'd prefer showing an error message about a too-long URL, then q",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6294361,6294361,
Diapolo,2012-06-13T12:59:13Z,"@laanwj I consider this pull as a base for further updates to the URI handling code, even if not all parts of my re-work pull #1023 are considered good or mergable, I'm fine with a cherry picking or splitting them. But I think this pull needs to get in ASAP and if we need a patched boost 1.49 on Windows that's ok.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6300139,6300139,
laanwj,2012-06-13T13:22:53Z,"I agree with merging this ASAP.\n\nFeels like a deja-vu, but can we detect the patched boost 1.49 somehow, compile time? It would be nice if it failed if one tried to build on windows with URL support without the patched boost. Otherwise, someone building bitcoin manually on windows might run into the mysterious crashes again.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6300706,6300706,
Diapolo,2012-06-13T13:39:53Z,"@laanwj I guess we need no detection for the Windows users, we just need an official dependency package, which includes the used version of Boost and its libs.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6301160,6301160,
laanwj,2012-06-13T13:43:39Z,"Agreed, but not everyone will be using that, if you build from source you could insist to build everything from source. It's easy to miss.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6301255,6301255,
Diapolo,2012-06-13T14:19:33Z,"Why not `#if !defined(BOOST_INTERPROCESS_HAS_WINDOWS_KERNEL_BOOTTIME) || !defined(BOOST_INTERPROCESS_HAS_KERNEL_BOOTTIME)` and throw an error. It should be insinde an #ifdef WIN32, too or use defined(WIN32) as addition argument.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6302267,6302267,
TheBlueMatt,2012-06-13T14:39:04Z,"In terms of erroring if we dont detect BOOST_... flags specified, Id really prefer not to.  I dont want to follow boost and remove the checks if boost upgrades and complicate them with complicated boost version checks.  Anyone who is building bitcoin for Windows should be reading and creating executables by closely following the gitian commands.  Especially note that we add the mthreads/-fexceptio",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6302817,6302817,
laanwj,2012-06-13T14:52:50Z,"-mthreads/-fexceptions doesn't apply to people building on windows. It's a cross-compile specific issue.\n\nAnother idea (better than failing) would be to make URL support a build option in bitcoin-qt.pro, which is disabled by default on Windows. Then document it as ""Enable this only with a patched Boost >=1.49 (link to patch), otherwise you may experience random crashes at startup"".\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6303212,6303212,
TheBlueMatt,2012-06-13T14:56:47Z,"And AFAIK, most people who compile bitcoin for windows do cross compile.  I know several people recently have been on #bitcoin-dev asking how to build it, and ended up giving up and cross compiling in an Ubuntu VM.\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6303306,6303306,
Diapolo,2012-06-13T15:55:01Z,At least I build it native on Windows ;).\n,https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6304959,6304959,
TheBlueMatt,2012-06-15T15:19:26Z,Added a\n#if defined(WIN32) && (!defined(BOOST_INTERPROCESS_HAS_WINDOWS_KERNEL_BOOTTIME) || !defined(BOOST_INTERPROCESS_HAS_KERNEL_BOOTTIME) || BOOST_VERSION < 104900)\n#warning\n,https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6359118,6359118,
Diapolo,2012-06-15T17:52:58Z,"That's a good thing, even if it does not look very nice ;).\n",https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6362559,6362559,
laanwj,2012-06-16T06:36:17Z,I don't think looking nice is important in any way here. It is a complex logical expression because we need a complex logical expression.\n\nACK\n,https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6371220,6371220,
sipa,2012-06-16T11:38:18Z,I think it is important that this functionality gets added soon. I haven't checked or tested the code though.\n,https://github.com/bitcoin/bitcoin/pull/1437#issuecomment-6372560,6372560,
Diapolo,2012-06-10T15:40:50Z,"To ensure we use the first available Icon from the executable you could use `$INSTDIR\bitcoin-qt.exe,0`.\n",https://github.com/bitcoin/bitcoin/pull/1437#discussion_r957043,957043,share/setup.nsi
Diapolo,2012-06-10T15:43:39Z,"HTTP uses `URL:HyperText Transfer Protocol` as description, so we could use `URL:Bitcoin Protocol`.\n\nWe should also add a `FriendlyTypeName` subkey, which should be set to the same string as the default string (see: http://msdn.microsoft.com/en-us/library/windows/desktop/cc144152%28v=vs.85%29.aspx)\n",https://github.com/bitcoin/bitcoin/pull/1437#discussion_r957048,957048,share/setup.nsi
TheBlueMatt,2012-06-10T16:46:39Z,"Do we want that, wont not using that let Windows pick the best icon based on size and color-depth?\n",https://github.com/bitcoin/bitcoin/pull/1437#discussion_r957106,957106,share/setup.nsi
TheBlueMatt,2012-06-10T16:49:31Z,"AFAIK, its never really displayed anywhere, and if it is, Id guess its clear ;).\nAnyway, Id kinda like to leave the Revert commit to just revert and nothing more...feel free to add more useful stuff in a separate pull, Id say.\n",https://github.com/bitcoin/bitcoin/pull/1437#discussion_r957115,957115,share/setup.nsi
laanwj,2012-06-12T19:23:29Z,"One windows ""icon"" embeds multiple sizes/color depths. An executable can embed multiple icons, for example the icons for different file types. However, Bitcoin-qt only has one icon defined in the .rc, so this doesn't matter here.\n",https://github.com/bitcoin/bitcoin/pull/1437#discussion_r970164,970164,share/setup.nsi
laanwj,2012-06-13T13:24:19Z,"This enables it for MAC_OSX too, is that intended? \nI remember boost interprocess had/has another problem on mac:  it took 100% CPU time.\n",https://github.com/bitcoin/bitcoin/pull/1437#discussion_r975879,975879,src/qt/bitcoin.cpp
TheBlueMatt,2012-06-13T14:31:59Z,"This simply attempts to open the message_queue, which will fail as we never set up the message_queue listener in ipcInit on OSX.  There is no point having an ugly ifdef here, especially since we are never gonna get called with a bitcoin: URI on osx on the command line unless a user does it manually.\n",https://github.com/bitcoin/bitcoin/pull/1437#discussion_r976432,976432,src/qt/bitcoin.cpp
