prusnak,2021-11-16 23:08:36,@vasild @jonatack Would you like to experiment with Yggdrasil too?,https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-970791267,970791267,
sipa,2021-11-16 23:37:04,"I set up an Yggdrasil router as well: `[200:b9b6:8c66:f88d:7043:e30b:d803:c3e2]:8333` (it's not running this branch, but I don't think that matters).",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-970847933,970847933,
DrahtBot,2021-11-17 04:31:35,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#21879](https://github.com/bitcoin/bitcoin/pull/21879) (Wrap accept() and extend usage of Sock by vasild)\n* [#21878](htt",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-971172801,971172801,
laanwj,2021-11-17 11:24:57,"Mind that this is a P2P BIP-level change, I think you'll want to write a (short) ancillary BIP to BIP155 to propose this new assigned number.",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-971484260,971484260,
vasild,2021-11-18 14:13:44,"The addresses used by Yggdrasil are considered routable by Bitcoin Core. That is - just like any other normal IPv6 address, publicly routable on the global internet. They will be gossiped. This is in contrast to CJDNS which uses unroutable addresses from RFC 4193 and thus need special handling in Bitcoin Core.\n\n~~I have to think more and review carefully this PR, but it may be that it is not n",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-972902876,972902876,
prusnak,2021-11-18 15:17:45,"> I have to think more and review carefully this PR, but it may be that it is not necessary and Yggdrasil ""just works"" with current `master`.\n\nThat would great news actually!\n\n",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-972961839,972961839,
sipa,2021-11-18 15:33:23,"If we add support for this, I do think we want to at least include logic to treat Yggdrasil's addresses separately for the purpose of group mapping (e.g. like Tor, treat all of Yggdrasil as 1 or a few network groups, rather than using the normal IPv6 logic). We could do that with or without treating it as a separate network:\n* With a separate network, as this PR currently does, it's a somewhat c",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-972976606,972976606,
vasild,2021-11-18 15:52:23,"> ... treat Yggdrasil's addresses separately for the purpose of group mapping ...\n\nRight!\n\n> I have a slight preference for the first approach.\n\nMe too.",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-972994358,972994358,
jb55,2021-11-18 17:27:26,Interesting... Concept ACK,https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-973094795,973094795,
jamesob,2021-11-18 22:36:42,"Concept ACK, will review",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-973332841,973332841,
prusnak,2021-11-18 22:57:38,"> I think you'll want to write a (short) ancillary BIP to BIP155 to propose this new assigned number.\n\nPR to bips repo in https://github.com/bitcoin/bips/pull/1238",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-973369380,973369380,
vasild,2021-11-19 10:57:28,"Concept ACK\n\nWithout this PR, `master` is able to connect to yggdrasil addresses and will gossip them (good). With minimal changes (this PR), we can get (thanks, @sipa):\n\n* Proper reporting, like in `getpeerinfo` RPC (to print `yggdrasil` instead of `ipv6`)\n* Proper network grouping - don't do nonsensical netmasks on those addresses\n* Don't try to connect to such addresses if `-somecon",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-973972160,973972160,
sipa,2021-11-19 16:31:28,"@prayank23 Moving the discussion from https://github.com/bitcoin/bips/pull/1238#issuecomment-974190303 here, because I think it's more a question about Bitcoin Core's implemention.\n\nI'm not convinced we should add this either, because of the low maturity of the project. But I think the discussion is a bit more nuanced than just looking at that.\n\nThe name of this PR is a bit misleading, for",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974221615,974221615,
prayank23,2021-11-19 18:17:33,"@sipa That makes sense. Thanks for explaining everything in detail.\n\nI retract my NACK and have no opinion on this pull request. Will follow the progress, research more about yggdrasil and do tests though.",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974300160,974300160,
ShadowJonathan,2021-11-21 11:28:46,"Hey everyone, **I would not recommend adding Yggdrasil support**, not on the basis of principle, but on the basis of the nature of the project itself, let me explain.\n\nYggdrasil is largely an experimental academic protocol/software, aimed to research routing at scale, the intention (of its author @Arceliar) is to - eventually - wrap it up, place a v1 on it, and write a paper, but there is sofa",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974798596,974798596,
prusnak,2021-11-21 11:34:58,"> wrap it up, place a v1 on it, and write a paper, but there is sofar no intention to keep up support after that.\n\nCan you please comment on that? @neilalexander @arceliar",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974799539,974799539,
ShadowJonathan,2021-11-21 11:36:20,"@prusnak please also read my disclaimer at the bottom, it's the intention i got from the authors while talking to them (especially @Arceliar), my point being that yggdrasil is more an academic project than a continuous software one. @neilalexander works on yggdrasil on the latter basis, but has split off efforts into Pinecone, primarily inspired by Yggdrasil.",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974799742,974799742,
jsarenik,2021-11-21 11:40:01,"Looks good to me. Skimmed through the patch, everything seems trivial there. Running yggdrasil (often shortened to `ygg` which I would prefer in the column names instead of widening them) since early 2017.\n\n```\n$ echo $COLUMNS\n80\n```",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974800290,974800290,
Arceliar,2021-11-21 18:58:25,"> > wrap it up, place a v1 on it, and write a paper, but there is sofar no intention to keep up support after that.\n> \n> Can you please comment on that? @neilalexander @Arceliar\n\nJust to clarify, v1 only means that I'm satisfied the R&D work is ""done"" and things are ready to be documented and published. That doesn't mean the project will be abandoned, just that it's no longer a platform fo",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974873650,974873650,
ShadowJonathan,2021-11-21 19:58:39,"Alright, i've somewhat skimmed the changes made here, and I do think they're pretty resistant to yggdrasil's version changes, but i'd like to re-iterate that major protocol changes *can* happen between versions, and that addresses may not always be guaranteed to be addressable from the local node, until v1",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974884949,974884949,
neilalexander,2021-11-21 20:03:28,"> Can you please comment on that? @neilalexander @Arceliar\n\nGiven that all the PR seems to do is to add the understanding that `0200::/7` is unofficially Yggdrasil address space for the purposes of peer connectivity and configurability, I don’t really think there’s an issue here. Even if we reach a supposed v1, it also doesn’t mean that the current network will go away overnight. \n\nYggdras",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974885912,974885912,
ShadowJonathan,2021-11-21 20:05:59,"> As long as the only dependency here is on the address space and not any other aspect of the protocol then I would think this is safe enough to do.\n\nAgreed, admittedly my concern mainly was if and when yggdrasil would be imported as a dependency into existing binaries, but that doesn't seem to be the case here.",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-974886380,974886380,
jsarenik,2021-11-30 20:45:53,"Tested ACK a85cd9187d33bd9a2859aabe28c656825da0e539\n\n```\n$ ./src/bitcoind -version\nBitcoin Core version v22.99.0-a85cd9187d33\n$ ./src/bitcoind -help | grep -B1 ygg\n       Make outgoing connections only through network <net> (ipv4, ipv6, onion,\n       i2p, cjdns, ygg). Incoming connections are not affected by this\n--\n\n  -yggdrasilreachable\n```\n\n`make check` passed. Will so",https://github.com/bitcoin/bitcoin/pull/23531#issuecomment-983006203,983006203,
jonatack,2021-11-17 16:34:45,"5ede1d13 The network column widths printed by -netinfo are currently 8 characters. Haven't tested, but with ""yggdrasil"", I would guess they either would need to be increased to at least 10 characters (each, or just for this column) or a shorter name of max 7 chars could be used.",https://github.com/bitcoin/bitcoin/pull/23531#discussion_r751420063,751420063,src/bitcoin-cli.cpp
jonatack,2021-11-17 17:20:45,"0a33d6c only had a quick look, so to be confirmed, but it looks like you need to do something like this for the functional test to pass\n```diff\n class ProxyTest(BitcoinTestFramework):\n     def set_test_params(self):\n-        self.num_nodes = 5\n+        self.num_nodes = 6\n         self.setup_clean_chain = True\n \n     def setup_nodes(self):\n@@ -109,7 +109,9 @@ class ProxyTest(Bitco",https://github.com/bitcoin/bitcoin/pull/23531#discussion_r751461962,751461962,test/functional/feature_proxy.py
jonatack,2021-11-17 17:33:54,"(maybe just ""ygg""?)",https://github.com/bitcoin/bitcoin/pull/23531#discussion_r751473084,751473084,src/bitcoin-cli.cpp
prusnak,2021-11-18 00:12:43,Addressed in [5fcbec5b76bb2bfa9c62abf3a2ffae9f540ae8b2](https://github.com/bitcoin/bitcoin/pull/23531/commits/5fcbec5b76bb2bfa9c62abf3a2ffae9f540ae8b2),https://github.com/bitcoin/bitcoin/pull/23531#discussion_r751782876,751782876,test/functional/feature_proxy.py
jsarenik,2021-11-29 08:48:49,What about just `ygg` here?,https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758141914,758141914,src/bitcoin-cli.cpp
jsarenik,2021-11-29 08:49:31,This wouldn't be needed if `ygg` is used in the columnt header.,https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758142474,758142474,src/bitcoin-cli.cpp
jsarenik,2021-11-29 08:50:15,Also not needed when the header is shortened to `ygg` instead of `yggdrasil`.,https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758143035,758143035,src/bitcoin-cli.cpp
jsarenik,2021-11-29 08:54:06,What about 'ygg' also here? Others are at most 5 characters long (`onion`). `yggdrasil` is 9. More than double the median length of 4.,https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758146197,758146197,src/bitcoin-cli.cpp
jsarenik,2021-11-29 08:57:48,what about `MaybeFlipIPv6toAltNet` ? otherwise it would invite to add all the other alternative network layer names in this function name eventually…,https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758149166,758149166,src/net.cpp
prusnak,2021-11-29 11:10:42,"""yggdrasil"" renamed to ""ygg"" in da2803cf1c20d5b63a6be6ecc3f703ea84b59649",https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758260052,758260052,src/bitcoin-cli.cpp
prusnak,2021-11-29 11:11:01,"""yggdrasil"" renamed to ""ygg"" in da2803cf1c20d5b63a6be6ecc3f703ea84b59649",https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758260350,758260350,src/bitcoin-cli.cpp
prusnak,2021-11-29 11:11:19,"""yggdrasil"" renamed to ""ygg"" in da2803cf1c20d5b63a6be6ecc3f703ea84b59649",https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758260605,758260605,src/bitcoin-cli.cpp
prusnak,2021-11-29 11:11:29,done in 0b3dd4140e34ca2a87b813bb810958d70b5160d8,https://github.com/bitcoin/bitcoin/pull/23531#discussion_r758260738,758260738,src/net.cpp
