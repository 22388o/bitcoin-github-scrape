[
  {
    "sha": "7c1570d6e18a8228897a2d6dab28ccbb91eb8342",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzE1NzBkNmUxOGE4MjI4ODk3YTJkNmRhYjI4Y2NiYjkxZWI4MzQy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-06-13T20:26:01Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-06-13T20:26:01Z"
      },
      "message": "Wallet: correctly deprecate getbalance accounts, re-add minconf and include-watch-only",
      "tree": {
        "sha": "5a75c6f33d26244388c217a68263ec2da101557e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a75c6f33d26244388c217a68263ec2da101557e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c1570d6e18a8228897a2d6dab28ccbb91eb8342",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlshfhgACgkQHrd2uwPH\nki0uHg//dshNcEWZHrApT9zui/Gjvt2FZ1S4xsAckgp7O09vqCuq8FKpDm8hNJ+C\nrDM5j7Lolx0YCDkb8GG7bScN3iiG1mtymIFTrKDaDGVN5MFkBfkN7Epe3a40fynZ\n8hOLeJUiGANDSUxp9LBwBKx+iQoYgXzBOUKbDTfwVJkJks3ZMWFnkxVeDTLAtiQC\nLOWGGZJ96cOzTsxFI3S8mf88YmarvTg3Bews6frqtEpb5g+KVLsa2WI8vsg3a7CY\no08M16whvW9MraqBcAxZGgZxxtZIptxSJdsnLQTpGbOsbdh81OnnFfzoNSV3VfPn\nsulS5xeaXH2rdkk+78mJ6xqvza64HiQDRKoz2DOmK1j/NIIP3By1je8otp/JL7pA\nraCc3kg6wFDGwZYCsiDy0iupd8YZ7QbEHsKmEmecz88mdT7zyDgUdnNSs1H49Lhf\nBwaKIbr7t36IuhKaa2lgHS1/sXcUGIEu6UH5ztgBzyb36UxlkWTWeU4oiUsktyAA\num0Q9Vbn5ft56ye1ZBVAYLcOMTu+A2btBzHCe8CjST8PZgZoM6ezFV3d/Y3uVnXw\nqpcjNABYZsLqm0pj35jOg7P43uZRSvTrS598hZjlogp0MGQ5rhDyhxbe7EX0KfKM\nW/ySDXChq50b2AU8ezSAbSkcGahiQ8Y4lQmbkS3UHqBwk/PHj00=\n=6qyW\n-----END PGP SIGNATURE-----",
        "payload": "tree 5a75c6f33d26244388c217a68263ec2da101557e\nparent 4a7e64fc85461a205f2b51da52d1455795d43b91\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1528921561 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1528921561 +0200\n\nWallet: correctly deprecate getbalance accounts, re-add minconf and include-watch-only\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c1570d6e18a8228897a2d6dab28ccbb91eb8342",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c1570d6e18a8228897a2d6dab28ccbb91eb8342",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c1570d6e18a8228897a2d6dab28ccbb91eb8342/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a7e64fc85461a205f2b51da52d1455795d43b91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a7e64fc85461a205f2b51da52d1455795d43b91",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a7e64fc85461a205f2b51da52d1455795d43b91"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 32,
      "deletions": 28
    },
    "files": [
      {
        "sha": "ad8fba8d66dad887b3966c7be53144a5999f5277",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 28,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c1570d6e18a8228897a2d6dab28ccbb91eb8342/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c1570d6e18a8228897a2d6dab28ccbb91eb8342/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7c1570d6e18a8228897a2d6dab28ccbb91eb8342",
        "patch": "@@ -849,8 +849,9 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || (request.params.size() > 3 && IsDeprecatedRPCEnabled(\"accounts\")) || (request.params.size() != 0 && !IsDeprecatedRPCEnabled(\"accounts\")))\n+    if (request.fHelp || request.params.size() > 3)\n         throw std::runtime_error(\n+            (IsDeprecatedRPCEnabled(\"accounts\") ? std::string(\n             \"getbalance ( \\\"account\\\" minconf include_watchonly )\\n\"\n             \"\\nIf account is not specified, returns the server's total available balance.\\n\"\n             \"The available balance is what the wallet considers currently spendable, and is\\n\"\n@@ -871,9 +872,16 @@ static UniValue getbalance(const JSONRPCRequest& request)\n             \"                     the bumpfee command), temporarily resulting in low or even negative\\n\"\n             \"                     balances. In general, account balance calculation is not considered\\n\"\n             \"                     reliable and has resulted in confusing outcomes, so it is recommended to\\n\"\n-            \"                     avoid passing this argument.\\n\"\n-            \"2. minconf           (numeric, optional, default=1) DEPRECATED. Only valid when an account is specified. This argument will be removed in V0.18. To use this deprecated argument, start bitcoind with -deprecatedrpc=accounts. Only include transactions confirmed at least this many times.\\n\"\n-            \"3. include_watchonly (bool, optional, default=false) DEPRECATED. Only valid when an account is specified. This argument will be removed in V0.18. To use this deprecated argument, start bitcoind with -deprecatedrpc=accounts. Also include balance in watch-only addresses (see 'importaddress')\\n\"\n+            \"                     avoid passing this argument.\\n\")\n+            : std::string(\n+            \"getbalance ( \\\"(dummy)\\\" minconf include_watchonly )\\n\"\n+            \"\\nReturns the total available balance.\\n\"\n+            \"The available balance is what the wallet considers currently spendable, and is\\n\"\n+            \"thus affected by options which limit spendability such as -spendzeroconfchange.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. (dummy)           (string, optional) Ignored. Remains for backward compatibility.\\n\")) +\n+            \"2. minconf           (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n+            \"3. include_watchonly (bool, optional, default=false) Also include balance in watch-only addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n             \"amount              (numeric) The total amount in \" + CURRENCY_UNIT + \" received for this account.\\n\"\n             \"\\nExamples:\\n\"\n@@ -891,38 +899,34 @@ static UniValue getbalance(const JSONRPCRequest& request)\n \n     LOCK2(cs_main, pwallet->cs_wallet);\n \n+    std::string* account = nullptr;\n+    const UniValue& minconf = request.params[1];\n+    const UniValue& include_watchonly = request.params[2];\n+    int nMinDepth = 1;\n+    if (!minconf.isNull())\n+        nMinDepth = minconf.get_int();\n+    isminefilter filter = ISMINE_SPENDABLE;\n+    if(!include_watchonly.isNull())\n+        if(include_watchonly.get_bool())\n+            filter = filter | ISMINE_WATCH_ONLY;\n+\n     if (IsDeprecatedRPCEnabled(\"accounts\")) {\n         const UniValue& account_value = request.params[0];\n-        const UniValue& minconf = request.params[1];\n-        const UniValue& include_watchonly = request.params[2];\n \n-        if (account_value.isNull()) {\n-            if (!minconf.isNull()) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER,\n-                    \"getbalance minconf option is only currently supported if an account is specified\");\n-            }\n-            if (!include_watchonly.isNull()) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER,\n-                    \"getbalance include_watchonly option is only currently supported if an account is specified\");\n-            }\n-            return ValueFromAmount(pwallet->GetBalance());\n+        if (!account_value.isNull()) {\n+            const std::string& account_param = account_value.get_str();\n+            account = account_param != \"*\" ? const_cast<std::string*>(&account_param) : nullptr;\n         }\n \n-        const std::string& account_param = account_value.get_str();\n-        const std::string* account = account_param != \"*\" ? &account_param : nullptr;\n-\n-        int nMinDepth = 1;\n-        if (!minconf.isNull())\n-            nMinDepth = minconf.get_int();\n-        isminefilter filter = ISMINE_SPENDABLE;\n-        if(!include_watchonly.isNull())\n-            if(include_watchonly.get_bool())\n-                filter = filter | ISMINE_WATCH_ONLY;\n-\n         return ValueFromAmount(pwallet->GetLegacyBalance(filter, nMinDepth, account));\n     }\n \n-    return ValueFromAmount(pwallet->GetBalance());\n+    if (!minconf.isNull() || !include_watchonly.isNull() || account) {\n+        return ValueFromAmount(pwallet->GetLegacyBalance(filter, nMinDepth, account));\n+    }\n+    else {\n+        return ValueFromAmount(pwallet->GetBalance());\n+    }\n }\n \n static UniValue getunconfirmedbalance(const JSONRPCRequest &request)"
      }
    ]
  },
  {
    "sha": "61cb9c8e7863e21944fe9e1262c490e974bceef3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MWNiOWM4ZTc4NjNlMjE5NDRmZTllMTI2MmM0OTBlOTc0YmNlZWYz",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-06-27T07:02:43Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-06-27T07:02:43Z"
      },
      "message": "wallet: add min/max conf filter to GetWatchOnlyBalance()",
      "tree": {
        "sha": "ddd6d3a9c49c8a2b2e461e471a39016ecf55d8d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddd6d3a9c49c8a2b2e461e471a39016ecf55d8d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61cb9c8e7863e21944fe9e1262c490e974bceef3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlszNqQACgkQHrd2uwPH\nki1DwQ//ZvuDfhwWM7idWkwzY9Joyv1Tm2JKev7O/mOfBdyJwrjl+pAoseGIluBp\n/tSQtfFfA6rl31uJZMTBiRhic0PK7tuFtkODpToIkrPiiVbMz3NjP6I5PDUX1/Sj\n00huPdLOSpMO/3fWNL8TCjFiJL2931+c5IgaWwoSe96axFBHyKe5ScIJJytaZZX1\nCx96Jf8Wbt/InMzw5T/wxgKoZxOJ39ik7Mh4cOZYM/hveI6l18dKnlEb9/v5Ty0Y\nxIjwcviAlrFyWrDRRonoNPQogs61M67+D1q0AeoMsKakag40W1G4SVoxtC4pzmZd\n5Yc98BltTsbGlcKWz9NvwF0oA3R60wlEHLO+OgRVcDzOmCeR9qgQYWqJH4J8zWzB\n/PSVnMURYuvfcYfpyIwQLk4sLXB/ymKYPu4OFjzEV0fQFcEtpAUnmNvTsS7NoOTY\nEuqtQJ00x4l5o077BRP20Wxsbp0ffNpdjzNOzfP788Vjf+1OImMZh0gL7PenZ71M\n7FFVh/LCUZDcrKsgjtTPh96x6UKTbFlkRhPHEqalWeH7l5TPq9bcD01Fdtc2mir6\n1UCXZEog/alNbiKrNp/x05FmS2AvbhaHjHA4/uIXKJMwWaeWbKNcuK+6uHeRd5EO\nDXhG1qwUWfDTrpSKtjnrEGVkTwnFuPOB3QU+mNRJVV+xlwYOEGs=\n=TdIb\n-----END PGP SIGNATURE-----",
        "payload": "tree ddd6d3a9c49c8a2b2e461e471a39016ecf55d8d9\nparent 7c1570d6e18a8228897a2d6dab28ccbb91eb8342\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1530082963 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1530082963 +0200\n\nwallet: add min/max conf filter to GetWatchOnlyBalance()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61cb9c8e7863e21944fe9e1262c490e974bceef3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/61cb9c8e7863e21944fe9e1262c490e974bceef3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61cb9c8e7863e21944fe9e1262c490e974bceef3/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c1570d6e18a8228897a2d6dab28ccbb91eb8342",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c1570d6e18a8228897a2d6dab28ccbb91eb8342",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c1570d6e18a8228897a2d6dab28ccbb91eb8342"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 9,
      "deletions": 14
    },
    "files": [
      {
        "sha": "1150bbc8ee0a6bd02f9bba1732ddd044d5dd6a99",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 13,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61cb9c8e7863e21944fe9e1262c490e974bceef3/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61cb9c8e7863e21944fe9e1262c490e974bceef3/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=61cb9c8e7863e21944fe9e1262c490e974bceef3",
        "patch": "@@ -2186,16 +2186,21 @@ CAmount CWallet::GetImmatureBalance() const\n     return nTotal;\n }\n \n-CAmount CWallet::GetWatchOnlyBalance() const\n+CAmount CWallet::GetWatchOnlyBalance(int min_depth, int max_depth) const\n {\n     CAmount nTotal = 0;\n     {\n         LOCK2(cs_main, cs_wallet);\n         for (const auto& entry : mapWallet)\n         {\n             const CWalletTx* pcoin = &entry.second;\n-            if (pcoin->IsTrusted())\n+            int depth = pcoin->GetDepthInMainChain();\n+            if ( (min_depth == 0 && !pcoin->IsTrusted() && depth == 0 && pcoin->InMempool()) /* either 0 conf... */\n+                ||\n+                 (pcoin->IsTrusted() && (min_depth == 1 || depth >= min_depth) && (max_depth < 0 || depth <= max_depth)) /*... or within depth limits (if set) */\n+               ) {\n                 nTotal += pcoin->GetAvailableWatchOnlyCredit();\n+            }\n         }\n     }\n \n@@ -2204,17 +2209,7 @@ CAmount CWallet::GetWatchOnlyBalance() const\n \n CAmount CWallet::GetUnconfirmedWatchOnlyBalance() const\n {\n-    CAmount nTotal = 0;\n-    {\n-        LOCK2(cs_main, cs_wallet);\n-        for (const auto& entry : mapWallet)\n-        {\n-            const CWalletTx* pcoin = &entry.second;\n-            if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n-                nTotal += pcoin->GetAvailableWatchOnlyCredit();\n-        }\n-    }\n-    return nTotal;\n+    return GetWatchOnlyBalance(0, 0);\n }\n \n CAmount CWallet::GetImmatureWatchOnlyBalance() const"
      },
      {
        "sha": "efed731d3f581269d6b87a0523f8e2f41f0a5d7f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61cb9c8e7863e21944fe9e1262c490e974bceef3/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61cb9c8e7863e21944fe9e1262c490e974bceef3/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=61cb9c8e7863e21944fe9e1262c490e974bceef3",
        "patch": "@@ -946,7 +946,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetBalance() const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;\n-    CAmount GetWatchOnlyBalance() const;\n+    CAmount GetWatchOnlyBalance(int min_depth = 1, int max_depth = -1 /* unlimited */) const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;\n     CAmount GetImmatureWatchOnlyBalance() const;\n     CAmount GetLegacyBalance(const isminefilter& filter, int minDepth, const std::string* account) const;"
      }
    ]
  },
  {
    "sha": "9bbd407936f399c706bbc70c8b5ffa0bba0cfec9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YmJkNDA3OTM2ZjM5OWM3MDZiYmM3MGM4YjVmZmEwYmJhMGNmZWM5",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-06-27T07:03:13Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-06-27T07:03:13Z"
      },
      "message": "Use GetWatchOnlyBalance instead of GetLegacyBalance in getbalanc",
      "tree": {
        "sha": "bca9cec5cd3d739a0627f2f76575694cd6b8942f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bca9cec5cd3d739a0627f2f76575694cd6b8942f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9bbd407936f399c706bbc70c8b5ffa0bba0cfec9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlszNtQACgkQHrd2uwPH\nki1FgQ/+JiN+l2RnI2yscUdajJSrfucssZAPgtYDCwxwx9qzBUUEHnP/ld2HNu7i\njqyS/SDxBzyUPlZY7bECI5/XYLNmFMUcxkE6+ExuR900LHi3n/Xvh1mDz2hx8c6H\nhyFK201n0YRpLJdI7vzaOXcLcNUAwa2FZNtLftQTrf6FxL3TBd4x8ToEf+D49j0Y\ncXAmx/HLdjEaUUApDRZb1AdsfO1gP4c5WL0tc45BkyBmE+4WWw3IIEnR8kReptfs\nDNAhqxOpVmEKknzRV7nsEGKI/evqBG0Z1WPew8dBWMdyRGvZDfrtKOcmrbn1hFfv\n7ll3QymEp11bC6g3sRuljSo6F1yfJUFsCnqfclVVz4znoPQGjCUseyn93bzw3rXe\nPetadPDVf60XSWGz4KXo1i1W+Ttk+JpeOdUWfl9eUbBUanhYDkICqkv2kfs7s9x1\nMV1OpDf/sAisSzsopCvU5uXah1Gs9L8GobFJuiOmHJz5+efOzT+wvowQxiOLBEJe\nH/pCcI7fofQmx8vf1KdHvL8ZrS1EVPtd5sUj5ovTez9/fW1aFKl7sfKUkZDrG3vl\nLNP6trKdTJSVFGTbkK4Uy06fvgO256OZwLFz4voO4RPGbzc68Y1XI2l4tbUNEx1t\nBe3LR0Ovh0PeiqC7C4CRr+iibZ/uGsjhICP3kyEybOKhfiSfUms=\n=fE2l\n-----END PGP SIGNATURE-----",
        "payload": "tree bca9cec5cd3d739a0627f2f76575694cd6b8942f\nparent 61cb9c8e7863e21944fe9e1262c490e974bceef3\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1530082993 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1530082993 +0200\n\nUse GetWatchOnlyBalance instead of GetLegacyBalance in getbalanc\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bbd407936f399c706bbc70c8b5ffa0bba0cfec9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9bbd407936f399c706bbc70c8b5ffa0bba0cfec9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bbd407936f399c706bbc70c8b5ffa0bba0cfec9/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "61cb9c8e7863e21944fe9e1262c490e974bceef3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61cb9c8e7863e21944fe9e1262c490e974bceef3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/61cb9c8e7863e21944fe9e1262c490e974bceef3"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "3693e606f8a08d58addf555e6b95a5847e06ff0c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9bbd407936f399c706bbc70c8b5ffa0bba0cfec9/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9bbd407936f399c706bbc70c8b5ffa0bba0cfec9/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9bbd407936f399c706bbc70c8b5ffa0bba0cfec9",
        "patch": "@@ -905,12 +905,11 @@ static UniValue getbalance(const JSONRPCRequest& request)\n     int nMinDepth = 1;\n     if (!minconf.isNull())\n         nMinDepth = minconf.get_int();\n-    isminefilter filter = ISMINE_SPENDABLE;\n-    if(!include_watchonly.isNull())\n-        if(include_watchonly.get_bool())\n-            filter = filter | ISMINE_WATCH_ONLY;\n-\n     if (IsDeprecatedRPCEnabled(\"accounts\")) {\n+        isminefilter filter = ISMINE_SPENDABLE;\n+        if(!include_watchonly.isNull())\n+            if(include_watchonly.get_bool())\n+                filter = filter | ISMINE_WATCH_ONLY;\n         const UniValue& account_value = request.params[0];\n \n         if (!account_value.isNull()) {\n@@ -921,8 +920,8 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         return ValueFromAmount(pwallet->GetLegacyBalance(filter, nMinDepth, account));\n     }\n \n-    if (!minconf.isNull() || !include_watchonly.isNull() || account) {\n-        return ValueFromAmount(pwallet->GetLegacyBalance(filter, nMinDepth, account));\n+    if (!minconf.isNull() || !include_watchonly.isNull()) {\n+        return ValueFromAmount(pwallet->GetWatchOnlyBalance(nMinDepth));\n     }\n     else {\n         return ValueFromAmount(pwallet->GetBalance());"
      }
    ]
  }
]