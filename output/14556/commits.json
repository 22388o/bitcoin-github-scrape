[
  {
    "sha": "fb3ce75807c50055a97f573fc72bf44d997ea218",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjNjZTc1ODA3YzUwMDU1YTk3ZjU3M2ZjNzJiZjQ0ZDk5N2VhMjE4",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2018-10-23T19:02:20Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-01-02T22:10:24Z"
      },
      "message": "Don't label transactions \"Open\" while catching up\n\nSince the default `nSequence` is `0xFFFFFFFE` and locktime is enabled,\nthe checking `wtx.is_final` is meaningless until the syncing has\ncompleted.",
      "tree": {
        "sha": "b45b48afbd769d16037d35cbc25dd6dd66e25342",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b45b48afbd769d16037d35cbc25dd6dd66e25342"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb3ce75807c50055a97f573fc72bf44d997ea218",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAlwtNtAACgkQQQEIES5+\nqB8pdRAAgm1wo29HeFSYsgiIJPhvay9GjtHSAhr1kBtoJzMdcr7xJ0FTunPFRSfb\ncSUjxWdvYoHR0bjo8xcza0Z8X1nKI0eoosem1WirJx1XWVz4+90+BBuXyne2kiLG\nmfxmdsr5t04WGtqUzw/z5B80yNWoYZyMNGYT08u+PAxybsA4jIO9bhQrAxKSPIHF\nmzX8XNwhclIl8xuiLYFyo6KE/Tb1uNAGOEZKC8QNFlTmXxN0ySjUeGKIb+d+yeW7\npbbwYeFquGWP3w3BKQDaeoNv2whJ1FBUQ5d6JSwvXky+ufPrw9gIv9DE6Db+GC9S\n40HgXY4YTs9540iWpSY3ONRr2iZa9Ujxq2O+bKHKY6XB0xdcRf3hqBOcpFLd92Et\nUuqbhwQ/d4Nq5MSPjPsUE+f4eNLHms9qRfJ9X6YYrJza1ZC/EF6yoPSt6UelHF2Q\nKFBHV0adN/ZCjfKJteBIQwYA/dDBKQtiIOCZHNtre1AJsbBTU5hsmQSoOqTy0DBt\nmqSOqw+4HahgYZmEoPQZk+Wu8ScZABH68dv1AQITAXR/q91l/FYjfvFG5lkntZ0X\n5cjb30VahbYU/9PaTGytVRh3oYFvPHxoy9gc6BPjV84/SoV+8Lc1EIkOCpJ1xWDD\nJGmT6Rgv+4kfBb5SChh+MPo5a0UTJeDaD0Fx+0FP+00WoZ45598=\n=/Q/0\n-----END PGP SIGNATURE-----",
        "payload": "tree b45b48afbd769d16037d35cbc25dd6dd66e25342\nparent bfd7e5409720445b8439de20a5695b220f79f53d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1540321340 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1546467024 +0200\n\nDon't label transactions \"Open\" while catching up\n\nSince the default `nSequence` is `0xFFFFFFFE` and locktime is enabled,\nthe checking `wtx.is_final` is meaningless until the syncing has\ncompleted.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb3ce75807c50055a97f573fc72bf44d997ea218",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb3ce75807c50055a97f573fc72bf44d997ea218",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb3ce75807c50055a97f573fc72bf44d997ea218/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bfd7e5409720445b8439de20a5695b220f79f53d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bfd7e5409720445b8439de20a5695b220f79f53d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bfd7e5409720445b8439de20a5695b220f79f53d"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 27,
      "deletions": 14
    },
    "files": [
      {
        "sha": "5a6f10b84fcfaa6a7f01d5c0732c216bc774239e",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb3ce75807c50055a97f573fc72bf44d997ea218/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb3ce75807c50055a97f573fc72bf44d997ea218/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=fb3ce75807c50055a97f573fc72bf44d997ea218",
        "patch": "@@ -18,15 +18,23 @@\n  * Maximum amount of time that a block timestamp is allowed to exceed the\n  * current network-adjusted time before the block will be accepted.\n  */\n-static const int64_t MAX_FUTURE_BLOCK_TIME = 2 * 60 * 60;\n+static constexpr int64_t MAX_FUTURE_BLOCK_TIME = 2 * 60 * 60;\n \n /**\n  * Timestamp window used as a grace period by code that compares external\n  * timestamps (such as timestamps passed to RPCs, or wallet key creation times)\n  * to block timestamps. This should be set at least as high as\n  * MAX_FUTURE_BLOCK_TIME.\n  */\n-static const int64_t TIMESTAMP_WINDOW = MAX_FUTURE_BLOCK_TIME;\n+static constexpr int64_t TIMESTAMP_WINDOW = MAX_FUTURE_BLOCK_TIME;\n+\n+/**\n+ * Maximum gap between node time and block time used\n+ * for the \"Catching up...\" mode in GUI.\n+ *\n+ * Ref: https://github.com/bitcoin/bitcoin/pull/1026\n+ */\n+static constexpr int64_t MAX_BLOCK_TIME_GAP = 90 * 60;\n \n class CBlockFileInfo\n {"
      },
      {
        "sha": "8db34ed759c4582110c8f69cfeef29be55736226",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb3ce75807c50055a97f573fc72bf44d997ea218/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb3ce75807c50055a97f573fc72bf44d997ea218/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=fb3ce75807c50055a97f573fc72bf44d997ea218",
        "patch": "@@ -318,7 +318,8 @@ class WalletImpl : public Wallet\n     }\n     bool tryGetTxStatus(const uint256& txid,\n         interfaces::WalletTxStatus& tx_status,\n-        int& num_blocks) override\n+        int& num_blocks,\n+        int64_t& block_time) override\n     {\n         auto locked_chain = m_wallet.chain().lock(true /* try_lock */);\n         if (!locked_chain) {\n@@ -333,6 +334,7 @@ class WalletImpl : public Wallet\n             return false;\n         }\n         num_blocks = ::chainActive.Height();\n+        block_time = ::chainActive.Tip()->GetBlockTime();\n         tx_status = MakeWalletTxStatus(*locked_chain, mi->second);\n         return true;\n     }"
      },
      {
        "sha": "da60684a4f1b53a71a28579cffdb1d9f86bbe2a3",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb3ce75807c50055a97f573fc72bf44d997ea218/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb3ce75807c50055a97f573fc72bf44d997ea218/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=fb3ce75807c50055a97f573fc72bf44d997ea218",
        "patch": "@@ -178,7 +178,8 @@ class Wallet\n     //! Try to get updated status for a particular transaction, if possible without blocking.\n     virtual bool tryGetTxStatus(const uint256& txid,\n         WalletTxStatus& tx_status,\n-        int& num_blocks) = 0;\n+        int& num_blocks,\n+        int64_t& block_time) = 0;\n \n     //! Get transaction details.\n     virtual WalletTx getWalletTxDetails(const uint256& txid,"
      },
      {
        "sha": "bbbbfb89193b46e83f83c65a541279572fedbd09",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb3ce75807c50055a97f573fc72bf44d997ea218/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb3ce75807c50055a97f573fc72bf44d997ea218/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=fb3ce75807c50055a97f573fc72bf44d997ea218",
        "patch": "@@ -28,6 +28,7 @@\n #include <qt/macdockiconhandler.h>\n #endif\n \n+#include <chain.h>\n #include <chainparams.h>\n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n@@ -903,8 +904,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n     tooltip = tr(\"Processed %n block(s) of transaction history.\", \"\", count);\n \n     // Set icon state: spinning if catching up, tick otherwise\n-    if(secs < 90*60)\n-    {\n+    if (secs < MAX_BLOCK_TIME_GAP) {\n         tooltip = tr(\"Up to date\") + QString(\".<br>\") + tooltip;\n         labelBlocksIcon->setPixmap(platformStyle->SingleColorIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n "
      },
      {
        "sha": "aa785553c8d6be621c6b9c9bb90fce0977f6b730",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb3ce75807c50055a97f573fc72bf44d997ea218/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb3ce75807c50055a97f573fc72bf44d997ea218/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=fb3ce75807c50055a97f573fc72bf44d997ea218",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <qt/transactionrecord.h>\n \n+#include <chain.h>\n #include <consensus/consensus.h>\n #include <interfaces/wallet.h>\n #include <key_io.h>\n@@ -12,6 +13,7 @@\n \n #include <stdint.h>\n \n+#include <QDateTime>\n \n /* Return positive answer if transaction should be shown in list.\n  */\n@@ -158,7 +160,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n     return parts;\n }\n \n-void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks)\n+void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks, int64_t block_time)\n {\n     // Determine transaction status\n \n@@ -172,10 +174,9 @@ void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, int\n     status.depth = wtx.depth_in_main_chain;\n     status.cur_num_blocks = numBlocks;\n \n-    if (!wtx.is_final)\n-    {\n-        if (wtx.lock_time < LOCKTIME_THRESHOLD)\n-        {\n+    const bool up_to_date = ((int64_t)QDateTime::currentMSecsSinceEpoch() / 1000 - block_time < MAX_BLOCK_TIME_GAP);\n+    if (up_to_date && !wtx.is_final) {\n+        if (wtx.lock_time < LOCKTIME_THRESHOLD) {\n             status.status = TransactionStatus::OpenUntilBlock;\n             status.open_for = wtx.lock_time - numBlocks;\n         }"
      },
      {
        "sha": "3f64cefd09cb52f8f4e25679461ad0af68ba8a4b",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb3ce75807c50055a97f573fc72bf44d997ea218/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb3ce75807c50055a97f573fc72bf44d997ea218/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=fb3ce75807c50055a97f573fc72bf44d997ea218",
        "patch": "@@ -138,7 +138,7 @@ class TransactionRecord\n \n     /** Update status from core wallet tx.\n      */\n-    void updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks);\n+    void updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks, int64_t block_time);\n \n     /** Return whether a status update is needed.\n      */"
      },
      {
        "sha": "40ce2b4fa2a417b58e6bcfdae8ab1f234d06ec7d",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb3ce75807c50055a97f573fc72bf44d997ea218/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb3ce75807c50055a97f573fc72bf44d997ea218/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=fb3ce75807c50055a97f573fc72bf44d997ea218",
        "patch": "@@ -193,8 +193,9 @@ class TransactionTablePriv\n             // simply re-use the cached status.\n             interfaces::WalletTxStatus wtx;\n             int numBlocks;\n-            if (wallet.tryGetTxStatus(rec->hash, wtx, numBlocks) && rec->statusUpdateNeeded(numBlocks)) {\n-                rec->updateStatus(wtx, numBlocks);\n+            int64_t block_time;\n+            if (wallet.tryGetTxStatus(rec->hash, wtx, numBlocks, block_time) && rec->statusUpdateNeeded(numBlocks)) {\n+                rec->updateStatus(wtx, numBlocks, block_time);\n             }\n             return rec;\n         }"
      }
    ]
  }
]