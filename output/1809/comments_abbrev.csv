gmaxwell,2012-09-09T18:31:37Z,"NAK.\n\nThe intended application doesn't currently exist, so we can't know that the change is necessary and sufficient to enable itâ€” or am I mistaken? Can you point to its transactions in the chain?\n\nInstead, this would enable a large amount of harmful usage while concurrently removing the incentive to develop and adopt the appropriate payment protocols and overlay networks which would enable th",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8407655,8407655,
gavinandresen,2012-09-09T19:24:28Z,"NIT: you'd save a byte by using OP_2DROP instead of DROP DROP\n\nI'm torn on whether or not it is time to implement a standard OP_DROP transaction type. If we do, it feels to me like it should be:\n\n```\n..64-or-fewer bytes.. OP_DROP ..n.. ..pubkeys.. ..m.. OP_CHECKMULTISIG\n```\n\n64 bytes because 64-byte SHA3 hashes are likely to be common in the next ten years.  CHECKMULTISIG instead of CHECKS",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8408233,8408233,
gmaxwell,2012-09-09T19:38:05Z,"As I enumerated on Jeff's call out for mob support ( :P ) ,  the actually likely applications of this are instant messaging, txn source deanonymization, and timestamping. The first two should be correctly addressed by a payment protocol (optionally via a p2p network), the latter should be accomplished via coinbase timestamping.   There would be no reason to develop either of those functions with t",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8408353,8408353,
jgarzik,2012-09-09T20:20:37Z,"Updated commit with the following changes:\n1) Ditch previous made-standard transaction types\n2) Make OP_DROP + multisig a standard transaction type\n3) Permit up to 80 bytes of OP_DROP data.\n\n80 bytes was chosen because OP_DROP + OP_DROP was intended to enable ""hash + tiny bit of metadata"" as shown in proposals.  If the presumed hash size is 64, we want a bit extra.\n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8408858,8408858,
jgarzik,2012-09-09T20:24:43Z,"RE fees:  great suggestion.  I am now endeavoring to figure out how to disable free transactions for TX_MULTISIG_DATA, and will do so in a separate commit.\n\nRE use cases:  as I stated in IRC, I am working on a basic version of TD's distributed bond proposal right now.  I also feel quite strongly that the ability to attach a tiny bit of data to your own transaction should be a fundamental right o",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8408900,8408900,
sipa,2012-09-09T20:38:07Z,"@jgarzik Sure the use case for attaching metadata to payments comes up, but in my opinion that is just because no infrastructure for negotiating a payment exists. I still haven't seen a need for that metadata to be attached to the actual bitcoin transaction that is used to perform that payment. My opinion remains that only data necessary for the world to validate the transfer belongs in the transa",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8409045,8409045,
gmaxwell,2012-09-09T20:42:06Z,@jgarzik You actually think that people have a fundamental right to force third parties to perpetually store information unrelated to securing and inflation proofing Bitcoin as a price of being able to contribute their participation to the decentralized trust the Bitcoin is secure and inflation proof. I don't agree. \n\nIf you instead want to say that creating costs unrelated to operating the curr,https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8409081,8409081,
luke-jr,2012-09-09T21:07:17Z,I agree this shouldn't be standard or encouraged until there is a strong use case for it. Is there a good reason this metadata can't be stored in a merged-mined block?\n,https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8409341,8409341,
BitcoinPullTester,2012-09-09T21:35:13Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8b5974ceb1542bb04c65d8a664019de3053ca1cf for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8409619,8409619,
luke-jr,2012-09-09T21:37:24Z,Revising my comment with IRC input: probably ACK as soon as testnet-proven.\n,https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8409642,8409642,
mikehearn,2012-09-10T00:17:57Z,"Dropped data can be left out of the working set as it can't affect spendability, I think? That means the only cost is disk storage, not disk seeks or memory, and rarely accessed disk storage is cheap. You can buy a terabyte hard disk for almost nothing these days.\n\nThis does remind me a lot of the DNS discussions. We definitely don't want totally random data-intensive applications to stuff data ",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8411017,8411017,
laanwj,2012-09-10T02:46:30Z,I agree with @sipa. Only data that is strictly necessary for the world to validate a transaction has a place in the block chain. That's the whole point of it. Everything that is only significant to the sender and receiver (or miner) should be between the sender and receiver (or miner) and doesn't need to be stored forever by every other full node in the world.\n\nReally I'd love sending some metad,https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8412481,8412481,
mikehearn,2012-09-10T11:15:51Z,"Actually I remembered just after I posted my last message that you do need the entire script in the uxto set because of how the signature hash is calculated.\n\nOTOH I thought of something else - setting aside the uxto set, in terms of long term storage, this kind of thing is fairly neutral. <20 bytes of data> DROP 1 <key> CHECKMULTISIG + a scriptSig is a hash, a key and a sig .... same as a pay-t",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8420449,8420449,
BitcoinPullTester,2012-09-11T10:10:56Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5a62d80f715f06e42d178c437a33809a6d258a8d for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-8454956,8454956,
BitcoinPullTester,2012-10-21T08:52:22Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7d68f17333d15c3d1af6c87bf56f45b4546eb219 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-9640838,9640838,
jgarzik,2012-11-16T02:40:45Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-10434759,10434759,
BitcoinPullTester,2012-11-27T18:56:36Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8afa3ce75f6f49f68e6310d2fffabfffcfbd7770 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-10771376,10771376,
jgarzik,2013-04-08T23:08:29Z,"Closing.  It sounds like current consensus favors a slightly different approach, if small-data is ever accepted:  a single TxOut per transaction may be obviously prunable, e.g. OP_RETURN.\n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-16084769,16084769,
mikehearn,2013-04-09T10:08:21Z,They're orthogonal - some use cases require spendable outputs that contain a hash as well.\n,https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-16104399,16104399,
jgarzik,2013-06-04T20:35:41Z,"Renewed interested in this at the conference and elsewhere.  We need to figure out a nice way to attach a hash to a transaction, given that people are already doing this in a not-nice way (unspendable addresses).\n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-18937181,18937181,
luke-jr,2013-06-04T20:43:37Z,"IMO, this kind of thing really should have @gmaxwell 's hash preimage required-to-relay as a prerequisite...\n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-18937708,18937708,
mikehearn,2013-06-17T10:44:45Z,"There's a lot of interest in oracles coming down the line, it seems, and that's a use case for this kind of transaction.\n\nIf someone popped up with an actual working server that did this, I feel we'd be able to justify the <hash> OP_DROP <keys> OP_CHECKMULTISIG form. \n",https://github.com/bitcoin/bitcoin/pull/1809#issuecomment-19537664,19537664,
luke-jr,2012-09-20T09:59:17Z,This _replaces_ the previous min fee if it was greater. I'm not sure we want to accept 10 kB transactions for only nBaseFee if they add data to it...\n,https://github.com/bitcoin/bitcoin/pull/1809#discussion_r1649076,1649076,src/main.cpp
