[
  {
    "sha": "54729f3f4e6765dfded590af5fb28c88331685f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDcyOWYzZjRlNjc2NWRmZGVkNTkwYWY1ZmIyOGM4ODMzMTY4NWY4",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:52:59Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:18:12Z"
      },
      "message": "Add libsqlite3",
      "tree": {
        "sha": "5098b5eaebe7a3a283d37564b89dba7453e10198",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5098b5eaebe7a3a283d37564b89dba7453e10198"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54729f3f4e6765dfded590af5fb28c88331685f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54729f3f4e6765dfded590af5fb28c88331685f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54729f3f4e6765dfded590af5fb28c88331685f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54729f3f4e6765dfded590af5fb28c88331685f8/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99a1d572eabca89790216b3919a237e07063a376",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99a1d572eabca89790216b3919a237e07063a376",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99a1d572eabca89790216b3919a237e07063a376"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 9,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6db9dab40492880a60c2d3207753ea0780bdc890",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54729f3f4e6765dfded590af5fb28c88331685f8/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54729f3f4e6765dfded590af5fb28c88331685f8/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=54729f3f4e6765dfded590af5fb28c88331685f8",
        "patch": "@@ -1222,6 +1222,9 @@ if test x$enable_wallet != xno; then\n     if test x$suppress_external_warnings != xno ; then\n         BDB_CPPFLAGS=SUPPRESS_WARNINGS($BDB_CPPFLAGS)\n     fi\n+\n+    dnl Check for sqlite3\n+    PKG_CHECK_MODULES([SQLITE], [sqlite3 >= 3.7.17], , [AC_MSG_ERROR([sqlite3 not found.])])\n fi\n \n dnl Check for libminiupnpc (optional)\n@@ -1643,6 +1646,7 @@ AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n AC_SUBST(BOOST_LIBS)\n+AC_SUBST(SQLITE_LIBS)\n AC_SUBST(TESTDEFS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)"
      },
      {
        "sha": "398d904fe61ac22f02edc9147a8ef22634a08433",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=54729f3f4e6765dfded590af5fb28c88331685f8",
        "patch": "@@ -589,7 +589,7 @@ bitcoin_bin_ldadd = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoin_bin_ldadd += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+bitcoin_bin_ldadd += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS) $(SQLITE_LIBS)\n \n bitcoind_SOURCES = $(bitcoin_daemon_sources)\n bitcoind_CPPFLAGS = $(bitcoin_bin_cppflags)"
      },
      {
        "sha": "beb3f8dfd2068ed503aa7603aa89549f45128c1c",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=54729f3f4e6765dfded590af5fb28c88331685f8",
        "patch": "@@ -74,7 +74,7 @@ bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n bench_bench_bitcoin_SOURCES += bench/wallet_balance.cpp\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(SQLITE_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)"
      },
      {
        "sha": "f46310a6039e3f86ec13578049dbc974fe96dbfb",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=54729f3f4e6765dfded590af5fb28c88331685f8",
        "patch": "@@ -321,7 +321,7 @@ bitcoin_qt_ldadd += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n bitcoin_qt_ldadd += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n-  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)\n bitcoin_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n bitcoin_qt_libtoolflags = $(AM_LIBTOOLFLAGS) --tag CXX\n "
      },
      {
        "sha": "c05dd387373a8d7040f8bcf3578f2299f6e60dee",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=54729f3f4e6765dfded590af5fb28c88331685f8",
        "patch": "@@ -56,7 +56,7 @@ endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n-  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(SQLITE_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n "
      },
      {
        "sha": "c6a4a4edc43c3c9a9f8aa07dce732ecd00a3cba0",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54729f3f4e6765dfded590af5fb28c88331685f8/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=54729f3f4e6765dfded590af5fb28c88331685f8",
        "patch": "@@ -315,7 +315,7 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_C\n   $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n-test_test_bitcoin_LDADD += $(BDB_LIBS) $(MINIUPNPC_LIBS)\n+test_test_bitcoin_LDADD += $(BDB_LIBS) $(MINIUPNPC_LIBS) $(SQLITE_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS) -static\n \n if ENABLE_ZMQ"
      }
    ]
  },
  {
    "sha": "e87df8258090138d5c22ac46b8602b618620e8a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODdkZjgyNTgwOTAxMzhkNWMyMmFjNDZiODYwMmI2MTg2MjBlOGEx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T03:18:08Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:18:13Z"
      },
      "message": "Add sqlite to travis and depends",
      "tree": {
        "sha": "a616b86d8bee3a88a02bab56fde9664fe65fac70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a616b86d8bee3a88a02bab56fde9664fe65fac70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e87df8258090138d5c22ac46b8602b618620e8a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e87df8258090138d5c22ac46b8602b618620e8a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e87df8258090138d5c22ac46b8602b618620e8a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e87df8258090138d5c22ac46b8602b618620e8a1/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54729f3f4e6765dfded590af5fb28c88331685f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54729f3f4e6765dfded590af5fb28c88331685f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54729f3f4e6765dfded590af5fb28c88331685f8"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 44,
      "deletions": 8
    },
    "files": [
      {
        "sha": "42fa653d8cfb744149283f852cb69f317471dcae",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -132,6 +132,7 @@ jobs:\n           - berkeley-db4\n           - miniupnpc\n           - qrencode\n+          - sqlite\n           - ccache\n           - zeromq\n       env: >-"
      },
      {
        "sha": "dfd3929c4410b92364a6f314295ddbaab7912bf7",
        "filename": "build_msvc/vcpkg.json",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/build_msvc/vcpkg.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/build_msvc/vcpkg.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg.json?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -9,11 +9,12 @@\n     \"boost-signals2\",\n     \"boost-test\",\n     \"boost-thread\",\n+    \"sqlite3\",\n     \"double-conversion\",\n     {\n       \"name\": \"libevent\",\n       \"features\": [\"thread\"]\n     },\n     \"zeromq\"\n   ]\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "191b8049b02e746035dd5b3eb525d8dbb120684c",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n export DOCKER_NAME_TAG=ubuntu:20.04\n export NO_DEPENDS=1\n export GOAL=\"install\""
      },
      {
        "sha": "b88ee2b50fb195f8ea6a7684dacb7e780c535ac4",
        "filename": "ci/test/00_setup_env_native_msan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/ci/test/00_setup_env_native_msan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/ci/test/00_setup_env_native_msan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_msan.sh?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -15,7 +15,7 @@ export BDB_PREFIX=\"${BASE_ROOT_DIR}/db4\"\n \n export CONTAINER_NAME=\"ci_native_msan\"\n export PACKAGES=\"clang-9 llvm-9 cmake\"\n-export DEP_OPTS=\"NO_WALLET=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++11 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' zeromq_cxxflags='-std=c++11 ${MSAN_AND_LIBCXX_FLAGS}'\"\n+export DEP_OPTS=\"NO_BDB=1 NO_QT=1 CC='clang' CXX='clang++' CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' boost_cxxflags='-std=c++11 -fvisibility=hidden -fPIC ${MSAN_AND_LIBCXX_FLAGS}' zeromq_cxxflags='-std=c++11 ${MSAN_AND_LIBCXX_FLAGS}'\"\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-wallet --with-sanitizers=memory --with-asm=no --prefix=${BASE_ROOT_DIR}/depends/x86_64-pc-linux-gnu/ CC=clang CXX=clang++ CFLAGS='${MSAN_FLAGS}' CXXFLAGS='${MSAN_AND_LIBCXX_FLAGS}' BDB_LIBS='-L${BDB_PREFIX}/lib -ldb_cxx-4.8' BDB_CFLAGS='-I${BDB_PREFIX}/include'\"\n export USE_MEMORY_SANITIZER=\"true\""
      },
      {
        "sha": "bfaea13a2505530afa14df5a2ebb55c954b2576d",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_valgrind\n-export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev\"\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libsqlite3-dev\"\n export USE_VALGRIND=1\n export NO_DEPENDS=1\n export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547"
      },
      {
        "sha": "65f9a2e5c91d3b61599e3d6fb492389cd672da3d",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -78,7 +78,7 @@ script: |\n             echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n             echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n             echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+            echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n             chmod +x ${WRAP_DIR}/${i}-${prog}\n         fi\n     done"
      },
      {
        "sha": "5f671b95ce3df0f77418dba9c556dbd897333025",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -81,7 +81,7 @@ script: |\n         echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        echo \"\\$REAL \\\"\\$@\\\"\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done"
      },
      {
        "sha": "1ad21f6821bba036d92208aae32310ae1a1f62bd",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -134,7 +134,10 @@ qrencode_packages_$(NO_QR) = $(qrencode_packages)\n \n qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages) $(qrencode_packages_)\n \n-wallet_packages_$(NO_WALLET) = $(wallet_packages)\n+bdb_packages_$(NO_BDB) = $(bdb_packages)\n+sqlite_packages_$(NO_SQLITE) = $(sqlite_packages)\n+wallet_packages_$(NO_WALLET) = $(bdb_packages_) $(sqlite_packages_)\n+\n upnp_packages_$(NO_UPNP) = $(upnp_packages)\n zmq_packages_$(NO_ZMQ) = $(zmq_packages)\n multiprocess_packages_$(MULTIPROCESS) = $(multiprocess_packages)"
      },
      {
        "sha": "869ebe12fd32b029246bebad85ea224dbf4ba057",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -99,6 +99,10 @@ The following can be set when running make: `make FOO=bar`\n <dd>Don't download/build/cache packages needed for enabling zeromq</dd>\n <dt>NO_WALLET</dt>\n <dd>Don't download/build/cache libs needed to enable the wallet</dd>\n+<dt>NO_BDB</dt>\n+<dd>Don't download/build/cache BerkeleyDB</dd>\n+<dt>NO_SQLITE</dt>\n+<dd>Don't download/build/cache SQLite</dd>\n <dt>NO_UPNP</dt>\n <dd>Don't download/build/cache packages needed for enabling upnp</dd>\n <dt>MULTIPROCESS</dt>"
      },
      {
        "sha": "4627acb521879b5546bc3e26a6be4b2803257007",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -10,7 +10,8 @@ qt_android_packages=qt\n qt_darwin_packages=qt\n qt_mingw32_packages=qt\n \n-wallet_packages=bdb\n+bdb_packages=bdb\n+sqlite_packages=sqlite\n \n zmq_packages=zeromq\n "
      },
      {
        "sha": "5b3a61b239c64b2cbf6c538d0548791c75915490",
        "filename": "depends/packages/sqlite.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87df8258090138d5c22ac46b8602b618620e8a1/depends/packages/sqlite.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87df8258090138d5c22ac46b8602b618620e8a1/depends/packages/sqlite.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/sqlite.mk?ref=e87df8258090138d5c22ac46b8602b618620e8a1",
        "patch": "@@ -0,0 +1,26 @@\n+package=sqlite\n+$(package)_version=3320100\n+$(package)_download_path=https://sqlite.org/2020/\n+$(package)_file_name=sqlite-autoconf-$($(package)_version).tar.gz\n+$(package)_sha256_hash=486748abfb16abd8af664e3a5f03b228e5f124682b0c942e157644bf6fff7d10\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared --disable-readline --disable-dynamic-extensions --enable-option-checking\n+$(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) libsqlite3.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-includeHEADERS install-pkgconfigDATA\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm lib/*.la\n+endef"
      }
    ]
  },
  {
    "sha": "7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTc3YjZlMWM4OGExYTdiNDVlY2Y1YzdmMTczNWJhZTZmNWE4MmJm",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:01Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:27:37Z"
      },
      "message": "Add SQLiteDatabase and SQLiteBatch dummy classes",
      "tree": {
        "sha": "b4a468cc34ba460e540097a03d2be6327fabbcff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4a468cc34ba460e540097a03d2be6327fabbcff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e87df8258090138d5c22ac46b8602b618620e8a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e87df8258090138d5c22ac46b8602b618620e8a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e87df8258090138d5c22ac46b8602b618620e8a1"
      }
    ],
    "stats": {
      "total": 210,
      "additions": 210,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e359ae2cb2dc82a580b28d0a34d6985d47feace2",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
        "patch": "@@ -257,6 +257,7 @@ BITCOIN_CORE_H = \\\n   wallet/rpcwallet.h \\\n   wallet/salvage.h \\\n   wallet/scriptpubkeyman.h \\\n+  wallet/sqlite.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n   wallet/wallettool.h \\\n@@ -370,6 +371,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/rpcwallet.cpp \\\n   wallet/salvage.cpp \\\n   wallet/scriptpubkeyman.cpp \\\n+  wallet/sqlite.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n   wallet/walletutil.cpp \\"
      },
      {
        "sha": "0ea131779550f2d986e3287b315c9992cd33a5f2",
        "filename": "src/wallet/sqlite.cpp",
        "status": "added",
        "additions": 109,
        "deletions": 0,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
        "patch": "@@ -0,0 +1,109 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <wallet/sqlite.h>\n+\n+#include <util/memory.h>\n+#include <util/strencodings.h>\n+#include <util/translation.h>\n+#include <wallet/db.h>\n+\n+#include <stdint.h>\n+\n+static const char* const DATABASE_FILENAME = \"wallet.dat\";\n+\n+SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_path, bool mock)\n+    : WalletDatabase(), m_mock(mock), m_dir_path(dir_path.string()), m_file_path(file_path.string())\n+{\n+}\n+\n+SQLiteDatabase::~SQLiteDatabase()\n+{\n+}\n+\n+void SQLiteDatabase::Open()\n+{\n+}\n+\n+bool SQLiteDatabase::Rewrite(const char* skip)\n+{\n+    return false;\n+}\n+\n+bool SQLiteDatabase::Backup(const std::string& dest) const\n+{\n+    return false;\n+}\n+\n+void SQLiteDatabase::Close()\n+{\n+}\n+\n+std::unique_ptr<DatabaseBatch> SQLiteDatabase::MakeBatch(bool flush_on_close)\n+{\n+    return nullptr;\n+}\n+\n+void SQLiteBatch::Close()\n+{\n+}\n+\n+bool SQLiteBatch::ReadKey(CDataStream&& key, CDataStream& value)\n+{\n+    return false;\n+}\n+\n+bool SQLiteBatch::WriteKey(CDataStream&& key, CDataStream&& value, bool overwrite)\n+{\n+    return false;\n+}\n+\n+bool SQLiteBatch::EraseKey(CDataStream&& key)\n+{\n+    return false;\n+}\n+\n+bool SQLiteBatch::HasKey(CDataStream&& key)\n+{\n+    return false;\n+}\n+\n+bool SQLiteBatch::StartCursor()\n+{\n+    return false;\n+}\n+\n+bool SQLiteBatch::ReadAtCursor(CDataStream& key, CDataStream& value, bool& complete)\n+{\n+    return false;\n+}\n+\n+void SQLiteBatch::CloseCursor()\n+{\n+}\n+\n+bool SQLiteBatch::TxnBegin()\n+{\n+    return false;\n+}\n+\n+bool SQLiteBatch::TxnCommit()\n+{\n+    return false;\n+}\n+\n+bool SQLiteBatch::TxnAbort()\n+{\n+    return false;\n+}\n+\n+bool ExistsSQLiteDatabase(const fs::path& path)\n+{\n+    return false;\n+}\n+\n+std::unique_ptr<SQLiteDatabase> MakeSQLiteDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error)\n+{\n+    return MakeUnique<SQLiteDatabase>(path, path / DATABASE_FILENAME);\n+}"
      },
      {
        "sha": "0c9ab32fc82f8c4d83168c3a1e5c0afaeea98511",
        "filename": "src/wallet/sqlite.h",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
        "patch": "@@ -0,0 +1,99 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_SQLITE_H\n+#define BITCOIN_WALLET_SQLITE_H\n+\n+#include <wallet/db.h>\n+\n+struct bilingual_str;\n+class SQLiteDatabase;\n+\n+/** RAII class that provides access to a WalletDatabase */\n+class SQLiteBatch : public DatabaseBatch\n+{\n+private:\n+    SQLiteDatabase& m_database;\n+\n+    bool ReadKey(CDataStream&& key, CDataStream& value) override;\n+    bool WriteKey(CDataStream&& key, CDataStream&& value, bool overwrite = true) override;\n+    bool EraseKey(CDataStream&& key) override;\n+    bool HasKey(CDataStream&& key) override;\n+\n+public:\n+    explicit SQLiteBatch(SQLiteDatabase& database);\n+\n+    /* No-op. See commeng on SQLiteDatabase::Flush */\n+    void Flush() override {}\n+\n+    void Close() override;\n+\n+    bool StartCursor() override;\n+    bool ReadAtCursor(CDataStream& key, CDataStream& value, bool& complete) override;\n+    void CloseCursor() override;\n+    bool TxnBegin() override;\n+    bool TxnCommit() override;\n+    bool TxnAbort() override;\n+};\n+\n+/** An instance of this class represents one SQLite3 database.\n+ **/\n+class SQLiteDatabase : public WalletDatabase\n+{\n+private:\n+    const bool m_mock{false};\n+\n+    const std::string m_dir_path;\n+\n+    const std::string m_file_path;\n+\n+public:\n+    SQLiteDatabase() = delete;\n+\n+    /** Create DB handle to real database */\n+    SQLiteDatabase(const fs::path& dir_path, const fs::path& file_path, bool mock = false);\n+\n+    ~SQLiteDatabase();\n+\n+    /** Open the database if it is not already opened */\n+    void Open() override;\n+\n+    /** Close the database */\n+    void Close() override;\n+\n+    /* These functions are unused */\n+    void AddRef() override { assert(false); }\n+    void RemoveRef() override { assert(false); }\n+\n+    /** Rewrite the entire database on disk */\n+    bool Rewrite(const char* skip = nullptr) override;\n+\n+    /** Back up the entire database to a file.\n+     */\n+    bool Backup(const std::string& dest) const override;\n+\n+    /** No-ops\n+     *\n+     * SQLite always flushes everything to the database file after each transaction\n+     * (each Read/Write/Erase that we do is its own transaction unless we called\n+     * TxnBegin) so there is no need to have Flush or Periodic Flush.\n+     *\n+     * There is no DB env to reload, so ReloadDbEnv has nothing to do\n+     */\n+    void Flush() override {}\n+    bool PeriodicFlush() override { return false; }\n+    void ReloadDbEnv() override {}\n+\n+    void IncrementUpdateCounter() override { ++nUpdateCounter; }\n+\n+    std::string Filename() override { return m_file_path; }\n+\n+    /** Make a SQLiteBatch connected to this database */\n+    std::unique_ptr<DatabaseBatch> MakeBatch(bool flush_on_close = true) override;\n+};\n+\n+bool ExistsSQLiteDatabase(const fs::path& path);\n+std::unique_ptr<SQLiteDatabase> MakeSQLiteDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\n+\n+#endif // BITCOIN_WALLET_SQLITE_H"
      }
    ]
  },
  {
    "sha": "ca8b7e04ab89f99075b093fa248919fd10acbdf7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYThiN2UwNGFiODlmOTkwNzViMDkzZmEyNDg5MTlmZDEwYWNiZGY3",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:05Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:27:40Z"
      },
      "message": "Implement SQLiteDatabaseVersion",
      "tree": {
        "sha": "26a0d07f1b1d139ba8f0dd119cd33d5637ba844f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26a0d07f1b1d139ba8f0dd119cd33d5637ba844f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca8b7e04ab89f99075b093fa248919fd10acbdf7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8b7e04ab89f99075b093fa248919fd10acbdf7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca8b7e04ab89f99075b093fa248919fd10acbdf7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8b7e04ab89f99075b093fa248919fd10acbdf7/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7577b6e1c88a1a7b45ecf5c7f1735bae6f5a82bf"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c406269cabcbd19c256dbf1f9a2775543e58b8e3",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8b7e04ab89f99075b093fa248919fd10acbdf7/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8b7e04ab89f99075b093fa248919fd10acbdf7/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=ca8b7e04ab89f99075b093fa248919fd10acbdf7",
        "patch": "@@ -9,6 +9,7 @@\n #include <util/translation.h>\n #include <wallet/db.h>\n \n+#include <sqlite3.h>\n #include <stdint.h>\n \n static const char* const DATABASE_FILENAME = \"wallet.dat\";\n@@ -107,3 +108,8 @@ std::unique_ptr<SQLiteDatabase> MakeSQLiteDatabase(const fs::path& path, const D\n {\n     return MakeUnique<SQLiteDatabase>(path, path / DATABASE_FILENAME);\n }\n+\n+std::string SQLiteDatabaseVersion()\n+{\n+    return std::string(sqlite3_libversion());\n+}"
      },
      {
        "sha": "b52930177133509e1be09a8628ae5dc8ad1fe6aa",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8b7e04ab89f99075b093fa248919fd10acbdf7/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8b7e04ab89f99075b093fa248919fd10acbdf7/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=ca8b7e04ab89f99075b093fa248919fd10acbdf7",
        "patch": "@@ -96,4 +96,6 @@ class SQLiteDatabase : public WalletDatabase\n bool ExistsSQLiteDatabase(const fs::path& path);\n std::unique_ptr<SQLiteDatabase> MakeSQLiteDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\n \n+std::string SQLiteDatabaseVersion();\n+\n #endif // BITCOIN_WALLET_SQLITE_H"
      }
    ]
  },
  {
    "sha": "5a488b3d77326a0d957c1233493061da1b6ec207",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTQ4OGIzZDc3MzI2YTBkOTU3YzEyMzM0OTMwNjFkYTFiNmVjMjA3",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:06Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:17Z"
      },
      "message": "Constructors, destructors, and relevant private fields for SQLiteDatabase/Batch",
      "tree": {
        "sha": "2ffa8972c26d53e007a2b60686602a36cb01aa41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ffa8972c26d53e007a2b60686602a36cb01aa41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a488b3d77326a0d957c1233493061da1b6ec207",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a488b3d77326a0d957c1233493061da1b6ec207",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a488b3d77326a0d957c1233493061da1b6ec207",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a488b3d77326a0d957c1233493061da1b6ec207/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ca8b7e04ab89f99075b093fa248919fd10acbdf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8b7e04ab89f99075b093fa248919fd10acbdf7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca8b7e04ab89f99075b093fa248919fd10acbdf7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9a9904e17d88d6d16a8c4e0dfc366532104a38ed",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a488b3d77326a0d957c1233493061da1b6ec207/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a488b3d77326a0d957c1233493061da1b6ec207/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=5a488b3d77326a0d957c1233493061da1b6ec207",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <wallet/sqlite.h>\n \n+#include <logging.h>\n #include <util/memory.h>\n #include <util/strencodings.h>\n #include <util/translation.h>\n@@ -17,10 +18,15 @@ static const char* const DATABASE_FILENAME = \"wallet.dat\";\n SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_path, bool mock)\n     : WalletDatabase(), m_mock(mock), m_dir_path(dir_path.string()), m_file_path(file_path.string())\n {\n+    LogPrintf(\"Using SQLite Version %s\\n\", SQLiteDatabaseVersion());\n+    LogPrintf(\"Using wallet %s\\n\", m_dir_path);\n+\n+    Open();\n }\n \n SQLiteDatabase::~SQLiteDatabase()\n {\n+    Close();\n }\n \n void SQLiteDatabase::Open()\n@@ -46,6 +52,11 @@ std::unique_ptr<DatabaseBatch> SQLiteDatabase::MakeBatch(bool flush_on_close)\n     return nullptr;\n }\n \n+SQLiteBatch::SQLiteBatch(SQLiteDatabase& database)\n+    : m_database(database)\n+{\n+}\n+\n void SQLiteBatch::Close()\n {\n }"
      },
      {
        "sha": "e56533b7b6d907f141c886c97e35c3eba7a4ed60",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a488b3d77326a0d957c1233493061da1b6ec207/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a488b3d77326a0d957c1233493061da1b6ec207/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=5a488b3d77326a0d957c1233493061da1b6ec207",
        "patch": "@@ -7,6 +7,8 @@\n \n #include <wallet/db.h>\n \n+#include <sqlite3.h>\n+\n struct bilingual_str;\n class SQLiteDatabase;\n \n@@ -23,6 +25,7 @@ class SQLiteBatch : public DatabaseBatch\n \n public:\n     explicit SQLiteBatch(SQLiteDatabase& database);\n+    ~SQLiteBatch() override { Close(); }\n \n     /* No-op. See commeng on SQLiteDatabase::Flush */\n     void Flush() override {}\n@@ -91,6 +94,8 @@ class SQLiteDatabase : public WalletDatabase\n \n     /** Make a SQLiteBatch connected to this database */\n     std::unique_ptr<DatabaseBatch> MakeBatch(bool flush_on_close = true) override;\n+\n+    sqlite3* m_db{nullptr};\n };\n \n bool ExistsSQLiteDatabase(const fs::path& path);"
      }
    ]
  },
  {
    "sha": "3bfa0fe1259280f8c32b41a798c9453b73f89b02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYmZhMGZlMTI1OTI4MGY4YzMyYjQxYTc5OGM5NDUzYjczZjg5YjAy",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:24Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Initialize and Shutdown sqlite3 globals\n\nsqlite3 recommends that sqlite3_initialize be called when the\napplication starts, and sqlite3_shutdown when it stops. Since we don't\nalways use sqlite3, we initialize it when a SQLiteDatabse is constructed\n(calling sqlite3_initialize after initialized is a no-op). We call\nsqlite3_shutdown when we see that there are no databases opened. The\nnumber of open databases is tracked by an atomic g_dbs_open.",
      "tree": {
        "sha": "66228e67c4ea659fd7abb7c71eef9da3d26fd765",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66228e67c4ea659fd7abb7c71eef9da3d26fd765"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bfa0fe1259280f8c32b41a798c9453b73f89b02",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bfa0fe1259280f8c32b41a798c9453b73f89b02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3bfa0fe1259280f8c32b41a798c9453b73f89b02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bfa0fe1259280f8c32b41a798c9453b73f89b02/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a488b3d77326a0d957c1233493061da1b6ec207",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a488b3d77326a0d957c1233493061da1b6ec207",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a488b3d77326a0d957c1233493061da1b6ec207"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 55,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ed331b64708189a2ed3f6262933e14912a6411a1",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 4,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bfa0fe1259280f8c32b41a798c9453b73f89b02/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bfa0fe1259280f8c32b41a798c9453b73f89b02/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=3bfa0fe1259280f8c32b41a798c9453b73f89b02",
        "patch": "@@ -5,6 +5,7 @@\n #include <wallet/sqlite.h>\n \n #include <logging.h>\n+#include <sync.h>\n #include <util/memory.h>\n #include <util/strencodings.h>\n #include <util/translation.h>\n@@ -15,18 +16,66 @@\n \n static const char* const DATABASE_FILENAME = \"wallet.dat\";\n \n+static Mutex g_sqlite_mutex;\n+static int g_sqlite_count GUARDED_BY(g_sqlite_mutex) = 0;\n+\n+static void ErrorLogCallback(void* arg, int code, const char* msg)\n+{\n+    // From sqlite3_config() documentation for the SQLITE_CONFIG_LOG option:\n+    // \"The void pointer that is the second argument to SQLITE_CONFIG_LOG is passed through as\n+    // the first parameter to the application-defined logger function whenever that function is\n+    // invoked.\"\n+    // Assert that this is the case:\n+    assert(arg == nullptr);\n+    LogPrintf(\"SQLite Error. Code: %d. Message: %s\\n\", code, msg);\n+}\n+\n SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_path, bool mock)\n     : WalletDatabase(), m_mock(mock), m_dir_path(dir_path.string()), m_file_path(file_path.string())\n {\n-    LogPrintf(\"Using SQLite Version %s\\n\", SQLiteDatabaseVersion());\n-    LogPrintf(\"Using wallet %s\\n\", m_dir_path);\n-\n-    Open();\n+    {\n+        LOCK(g_sqlite_mutex);\n+        LogPrintf(\"Using SQLite Version %s\\n\", SQLiteDatabaseVersion());\n+        LogPrintf(\"Using wallet %s\\n\", m_dir_path);\n+\n+        if (++g_sqlite_count == 1) {\n+            // Setup logging\n+            int ret = sqlite3_config(SQLITE_CONFIG_LOG, ErrorLogCallback, nullptr);\n+            if (ret != SQLITE_OK) {\n+                throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup error log: %s\\n\", sqlite3_errstr(ret)));\n+            }\n+        }\n+        int ret = sqlite3_initialize(); // This is a no-op if sqlite3 is already initialized\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to initialize SQLite: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+    }\n+\n+    try {\n+        Open();\n+    } catch (const std::runtime_error&) {\n+        // If open fails, cleanup this object and rethrow the exception\n+        Cleanup();\n+        throw;\n+    }\n }\n \n SQLiteDatabase::~SQLiteDatabase()\n+{\n+    Cleanup();\n+}\n+\n+void SQLiteDatabase::Cleanup() noexcept\n {\n     Close();\n+\n+    LOCK(g_sqlite_mutex);\n+    if (--g_sqlite_count == 0) {\n+        int ret = sqlite3_shutdown();\n+        if (ret != SQLITE_OK) {\n+            LogPrintf(\"SQLiteDatabase: Failed to shutdown SQLite: %s\\n\", sqlite3_errstr(ret));\n+        }\n+    }\n }\n \n void SQLiteDatabase::Open()"
      },
      {
        "sha": "8171cf27d6b980a4649fa59758694286e75ab082",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bfa0fe1259280f8c32b41a798c9453b73f89b02/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bfa0fe1259280f8c32b41a798c9453b73f89b02/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=3bfa0fe1259280f8c32b41a798c9453b73f89b02",
        "patch": "@@ -51,6 +51,8 @@ class SQLiteDatabase : public WalletDatabase\n \n     const std::string m_file_path;\n \n+    void Cleanup() noexcept;\n+\n public:\n     SQLiteDatabase() = delete;\n "
      }
    ]
  },
  {
    "sha": "a0de83372be83f59015cd3d61af2303b74fb64b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGRlODMzNzJiZTgzZjU5MDE1Y2QzZDYxYWYyMzAzYjc0ZmI2NGI1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:30Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteDatabase::Open",
      "tree": {
        "sha": "4f5843fc13d5a9631003a0be9fb0fab94782bd56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f5843fc13d5a9631003a0be9fb0fab94782bd56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0de83372be83f59015cd3d61af2303b74fb64b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0de83372be83f59015cd3d61af2303b74fb64b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0de83372be83f59015cd3d61af2303b74fb64b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0de83372be83f59015cd3d61af2303b74fb64b5/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3bfa0fe1259280f8c32b41a798c9453b73f89b02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bfa0fe1259280f8c32b41a798c9453b73f89b02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3bfa0fe1259280f8c32b41a798c9453b73f89b02"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 69,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fb0bef14ee3b1eadc8c99838b1ee2e39a88054de",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0de83372be83f59015cd3d61af2303b74fb64b5/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0de83372be83f59015cd3d61af2303b74fb64b5/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=a0de83372be83f59015cd3d61af2303b74fb64b5",
        "patch": "@@ -8,6 +8,7 @@\n #include <sync.h>\n #include <util/memory.h>\n #include <util/strencodings.h>\n+#include <util/system.h>\n #include <util/translation.h>\n #include <wallet/db.h>\n \n@@ -80,6 +81,72 @@ void SQLiteDatabase::Cleanup() noexcept\n \n void SQLiteDatabase::Open()\n {\n+    int flags = SQLITE_OPEN_FULLMUTEX | SQLITE_OPEN_READWRITE | SQLITE_OPEN_CREATE;\n+    if (m_mock) {\n+        flags |= SQLITE_OPEN_MEMORY; // In memory database for mock db\n+    }\n+\n+    if (m_db == nullptr) {\n+        TryCreateDirectories(m_dir_path);\n+        int ret = sqlite3_open_v2(m_file_path.c_str(), &m_db, flags, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to open database: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+    }\n+\n+    if (sqlite3_db_readonly(m_db, \"main\") != 0) {\n+        throw std::runtime_error(\"SQLiteDatabase: Database opened in readonly mode but read-write permissions are needed\");\n+    }\n+\n+    // Acquire an exclusive lock on the database\n+    // First change the locking mode to exclusive\n+    int ret = sqlite3_exec(m_db, \"PRAGMA locking_mode = exclusive\", nullptr, nullptr, nullptr);\n+    if (ret != SQLITE_OK) {\n+        throw std::runtime_error(strprintf(\"SQLiteDatabase: Unable to change database locking mode to exclusive: %s\\n\", sqlite3_errstr(ret)));\n+    }\n+    // Now begin a transaction to acquire the exclusive lock. This lock won't be released until we close because of the exclusive locking mode.\n+    ret = sqlite3_exec(m_db, \"BEGIN EXCLUSIVE TRANSACTION\", nullptr, nullptr, nullptr);\n+    if (ret != SQLITE_OK) {\n+        throw std::runtime_error(\"SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\\n\");\n+    }\n+    ret = sqlite3_exec(m_db, \"COMMIT\", nullptr, nullptr, nullptr);\n+    if (ret != SQLITE_OK) {\n+        throw std::runtime_error(strprintf(\"SQLiteDatabase: Unable to end exclusive lock transaction: %s\\n\", sqlite3_errstr(ret)));\n+    }\n+\n+    // Enable fullfsync for the platforms that use it\n+    ret = sqlite3_exec(m_db, \"PRAGMA fullfsync = true\", nullptr, nullptr, nullptr);\n+    if (ret != SQLITE_OK) {\n+        throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to enable fullfsync: %s\\n\", sqlite3_errstr(ret)));\n+    }\n+\n+    // Make the table for our key-value pairs\n+    // First check that the main table exists\n+    sqlite3_stmt* check_main_stmt{nullptr};\n+    ret = sqlite3_prepare_v2(m_db, \"SELECT name FROM sqlite_master WHERE type='table' AND name='main'\", -1, &check_main_stmt, nullptr);\n+    if (ret != SQLITE_OK) {\n+        throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to prepare statement to check table existence: %s\\n\", sqlite3_errstr(ret)));\n+    }\n+    ret = sqlite3_step(check_main_stmt);\n+    if (sqlite3_finalize(check_main_stmt) != SQLITE_OK) {\n+        throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to finalize statement checking table existence: %s\\n\", sqlite3_errstr(ret)));\n+    }\n+    bool table_exists;\n+    if (ret == SQLITE_DONE) {\n+        table_exists = false;\n+    } else if (ret == SQLITE_ROW) {\n+        table_exists = true;\n+    } else {\n+        throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to execute statement to check table existence: %s\\n\", sqlite3_errstr(ret)));\n+    }\n+\n+    // Do the db setup things because the table doesn't exist only when we are creating a new wallet\n+    if (!table_exists) {\n+        ret = sqlite3_exec(m_db, \"CREATE TABLE main(key BLOB PRIMARY KEY NOT NULL, value BLOB NOT NULL)\", nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to create new database: %s\\n\", sqlite3_errstr(ret)));\n+        }\n+    }\n }\n \n bool SQLiteDatabase::Rewrite(const char* skip)\n@@ -104,6 +171,8 @@ std::unique_ptr<DatabaseBatch> SQLiteDatabase::MakeBatch(bool flush_on_close)\n SQLiteBatch::SQLiteBatch(SQLiteDatabase& database)\n     : m_database(database)\n {\n+    // Make sure we have a db handle\n+    assert(m_database.m_db);\n }\n \n void SQLiteBatch::Close()"
      }
    ]
  },
  {
    "sha": "93825352a36456283bf87e39b5888363ee242f21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzgyNTM1MmEzNjQ1NjI4M2JmODdlMzliNTg4ODM2M2VlMjQyZjIx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:32Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteDatabase::Close",
      "tree": {
        "sha": "800785b07ae73308a7810ea760e0f4fc51b88e60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/800785b07ae73308a7810ea760e0f4fc51b88e60"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93825352a36456283bf87e39b5888363ee242f21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93825352a36456283bf87e39b5888363ee242f21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93825352a36456283bf87e39b5888363ee242f21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93825352a36456283bf87e39b5888363ee242f21/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0de83372be83f59015cd3d61af2303b74fb64b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0de83372be83f59015cd3d61af2303b74fb64b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0de83372be83f59015cd3d61af2303b74fb64b5"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7d96575a643a8289d1e368ece72c6a205b53e3f5",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93825352a36456283bf87e39b5888363ee242f21/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93825352a36456283bf87e39b5888363ee242f21/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=93825352a36456283bf87e39b5888363ee242f21",
        "patch": "@@ -161,6 +161,11 @@ bool SQLiteDatabase::Backup(const std::string& dest) const\n \n void SQLiteDatabase::Close()\n {\n+    int res = sqlite3_close(m_db);\n+    if (res != SQLITE_OK) {\n+        throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to close database: %s\\n\", sqlite3_errstr(res)));\n+    }\n+    m_db = nullptr;\n }\n \n std::unique_ptr<DatabaseBatch> SQLiteDatabase::MakeBatch(bool flush_on_close)"
      }
    ]
  },
  {
    "sha": "6636a2608a4e5906ee8092d5731595542261e0ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjM2YTI2MDhhNGU1OTA2ZWU4MDkyZDU3MzE1OTU1NDIyNjFlMGFk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-16T18:57:30Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteBatch::Close",
      "tree": {
        "sha": "c68cd3445b812937eac78554f13c810b8b20b1b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c68cd3445b812937eac78554f13c810b8b20b1b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6636a2608a4e5906ee8092d5731595542261e0ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6636a2608a4e5906ee8092d5731595542261e0ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6636a2608a4e5906ee8092d5731595542261e0ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6636a2608a4e5906ee8092d5731595542261e0ad/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93825352a36456283bf87e39b5888363ee242f21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93825352a36456283bf87e39b5888363ee242f21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93825352a36456283bf87e39b5888363ee242f21"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d89508c9df30cb9c26b1b2bdf0cb1a302ff85b4f",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6636a2608a4e5906ee8092d5731595542261e0ad/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6636a2608a4e5906ee8092d5731595542261e0ad/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=6636a2608a4e5906ee8092d5731595542261e0ad",
        "patch": "@@ -182,6 +182,14 @@ SQLiteBatch::SQLiteBatch(SQLiteDatabase& database)\n \n void SQLiteBatch::Close()\n {\n+    // If m_db is in a transaction (i.e. not in autocommit mode), then abort the transaction in progress\n+    if (m_database.m_db && sqlite3_get_autocommit(m_database.m_db) == 0) {\n+        if (TxnAbort()) {\n+            LogPrintf(\"SQLiteBatch: Batch closed unexpectedly without the transaction being explicitly committed or aborted\\n\");\n+        } else {\n+            LogPrintf(\"SQLiteBatch: Batch closed and failed to abort transaction\\n\");\n+        }\n+    }\n }\n \n bool SQLiteBatch::ReadKey(CDataStream&& key, CDataStream& value)"
      }
    ]
  },
  {
    "sha": "7aa45620e2f2178145a2eca58ccbab3cecff08fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YWE0NTYyMGUyZjIxNzgxNDVhMmVjYTU4Y2NiYWIzY2VjZmYwOGZi",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:41Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Add SetupSQLStatements",
      "tree": {
        "sha": "1f8c7b2c46c6f3e2d9724611b868183dc5868e9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f8c7b2c46c6f3e2d9724611b868183dc5868e9a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7aa45620e2f2178145a2eca58ccbab3cecff08fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aa45620e2f2178145a2eca58ccbab3cecff08fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7aa45620e2f2178145a2eca58ccbab3cecff08fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aa45620e2f2178145a2eca58ccbab3cecff08fb/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6636a2608a4e5906ee8092d5731595542261e0ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6636a2608a4e5906ee8092d5731595542261e0ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6636a2608a4e5906ee8092d5731595542261e0ad"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 67,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cacb5554bbc8073edfaaaf3eeaf2421e4af20165",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aa45620e2f2178145a2eca58ccbab3cecff08fb/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aa45620e2f2178145a2eca58ccbab3cecff08fb/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=7aa45620e2f2178145a2eca58ccbab3cecff08fb",
        "patch": "@@ -61,6 +61,36 @@ SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_pa\n     }\n }\n \n+void SQLiteBatch::SetupSQLStatements()\n+{\n+    int res;\n+    if (!m_read_stmt) {\n+        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT value FROM main WHERE key = ?\", -1, &m_read_stmt, nullptr)) != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n+        }\n+    }\n+    if (!m_insert_stmt) {\n+        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT INTO main VALUES(?, ?)\", -1, &m_insert_stmt, nullptr)) != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n+        }\n+    }\n+    if (!m_overwrite_stmt) {\n+        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT or REPLACE into main values(?, ?)\", -1, &m_overwrite_stmt, nullptr)) != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n+        }\n+    }\n+    if (!m_delete_stmt) {\n+        if ((res = sqlite3_prepare_v2(m_database.m_db, \"DELETE FROM main WHERE key = ?\", -1, &m_delete_stmt, nullptr)) != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n+        }\n+    }\n+    if (!m_cursor_stmt) {\n+        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT key, value FROM main\", -1, &m_cursor_stmt, nullptr)) != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements : %s\\n\", sqlite3_errstr(res)));\n+        }\n+    }\n+}\n+\n SQLiteDatabase::~SQLiteDatabase()\n {\n     Cleanup();\n@@ -178,6 +208,8 @@ SQLiteBatch::SQLiteBatch(SQLiteDatabase& database)\n {\n     // Make sure we have a db handle\n     assert(m_database.m_db);\n+\n+    SetupSQLStatements();\n }\n \n void SQLiteBatch::Close()\n@@ -190,6 +222,33 @@ void SQLiteBatch::Close()\n             LogPrintf(\"SQLiteBatch: Batch closed and failed to abort transaction\\n\");\n         }\n     }\n+\n+    // Free all of the prepared statements\n+    int ret = sqlite3_finalize(m_read_stmt);\n+    if (ret != SQLITE_OK) {\n+        LogPrintf(\"SQLiteBatch: Batch closed but could not finalize read statement: %s\\n\", sqlite3_errstr(ret));\n+    }\n+    ret = sqlite3_finalize(m_insert_stmt);\n+    if (ret != SQLITE_OK) {\n+        LogPrintf(\"SQLiteBatch: Batch closed but could not finalize insert statement: %s\\n\", sqlite3_errstr(ret));\n+    }\n+    ret = sqlite3_finalize(m_overwrite_stmt);\n+    if (ret != SQLITE_OK) {\n+        LogPrintf(\"SQLiteBatch: Batch closed but could not finalize overwrite statement: %s\\n\", sqlite3_errstr(ret));\n+    }\n+    ret = sqlite3_finalize(m_delete_stmt);\n+    if (ret != SQLITE_OK) {\n+        LogPrintf(\"SQLiteBatch: Batch closed but could not finalize delete statement: %s\\n\", sqlite3_errstr(ret));\n+    }\n+    ret = sqlite3_finalize(m_cursor_stmt);\n+    if (ret != SQLITE_OK) {\n+        LogPrintf(\"SQLiteBatch: Batch closed but could not finalize cursor statement: %s\\n\", sqlite3_errstr(ret));\n+    }\n+    m_read_stmt = nullptr;\n+    m_insert_stmt = nullptr;\n+    m_overwrite_stmt = nullptr;\n+    m_delete_stmt = nullptr;\n+    m_cursor_stmt = nullptr;\n }\n \n bool SQLiteBatch::ReadKey(CDataStream&& key, CDataStream& value)"
      },
      {
        "sha": "4d4dca1d202288420dadad172a1a890a0a83fa32",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aa45620e2f2178145a2eca58ccbab3cecff08fb/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aa45620e2f2178145a2eca58ccbab3cecff08fb/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=7aa45620e2f2178145a2eca58ccbab3cecff08fb",
        "patch": "@@ -18,6 +18,14 @@ class SQLiteBatch : public DatabaseBatch\n private:\n     SQLiteDatabase& m_database;\n \n+    sqlite3_stmt* m_read_stmt{nullptr};\n+    sqlite3_stmt* m_insert_stmt{nullptr};\n+    sqlite3_stmt* m_overwrite_stmt{nullptr};\n+    sqlite3_stmt* m_delete_stmt{nullptr};\n+    sqlite3_stmt* m_cursor_stmt{nullptr};\n+\n+    void SetupSQLStatements();\n+\n     bool ReadKey(CDataStream&& key, CDataStream& value) override;\n     bool WriteKey(CDataStream&& key, CDataStream&& value, bool overwrite = true) override;\n     bool EraseKey(CDataStream&& key) override;"
      }
    ]
  },
  {
    "sha": "bf90e033f4fe86cfb90492c7e0962278ea3a146d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjkwZTAzM2Y0ZmU4NmNmYjkwNDkyYzdlMDk2MjI3OGVhM2ExNDZk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:44Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteBatch::ReadKey, WriteKey, EraseKey, and HasKey",
      "tree": {
        "sha": "b14397fd592a48bfab24ae1aeb0b21728ae3b1f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b14397fd592a48bfab24ae1aeb0b21728ae3b1f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf90e033f4fe86cfb90492c7e0962278ea3a146d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf90e033f4fe86cfb90492c7e0962278ea3a146d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf90e033f4fe86cfb90492c7e0962278ea3a146d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf90e033f4fe86cfb90492c7e0962278ea3a146d/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7aa45620e2f2178145a2eca58ccbab3cecff08fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aa45620e2f2178145a2eca58ccbab3cecff08fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7aa45620e2f2178145a2eca58ccbab3cecff08fb"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 100,
      "deletions": 4
    },
    "files": [
      {
        "sha": "aae32e404ebee1c95898c2a217e99ab955455daa",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 100,
        "deletions": 4,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf90e033f4fe86cfb90492c7e0962278ea3a146d/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf90e033f4fe86cfb90492c7e0962278ea3a146d/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=bf90e033f4fe86cfb90492c7e0962278ea3a146d",
        "patch": "@@ -253,22 +253,118 @@ void SQLiteBatch::Close()\n \n bool SQLiteBatch::ReadKey(CDataStream&& key, CDataStream& value)\n {\n-    return false;\n+    if (!m_database.m_db) return false;\n+    assert(m_read_stmt);\n+\n+    // Bind: leftmost parameter in statement is index 1\n+    int res = sqlite3_bind_blob(m_read_stmt, 1, key.data(), key.size(), SQLITE_STATIC);\n+    if (res != SQLITE_OK) {\n+        LogPrintf(\"%s: Unable to bind statement: %s\\n\", __func__, sqlite3_errstr(res));\n+        sqlite3_clear_bindings(m_read_stmt);\n+        sqlite3_reset(m_read_stmt);\n+        return false;\n+    }\n+    res = sqlite3_step(m_read_stmt);\n+    if (res != SQLITE_ROW) {\n+        if (res != SQLITE_DONE) {\n+            // SQLITE_DONE means \"not found\", don't log an error in that case.\n+            LogPrintf(\"%s: Unable to execute statement: %s\\n\", __func__, sqlite3_errstr(res));\n+        }\n+        sqlite3_clear_bindings(m_read_stmt);\n+        sqlite3_reset(m_read_stmt);\n+        return false;\n+    }\n+    // Leftmost column in result is index 0\n+    const char* data = reinterpret_cast<const char*>(sqlite3_column_blob(m_read_stmt, 0));\n+    int data_size = sqlite3_column_bytes(m_read_stmt, 0);\n+    value.write(data, data_size);\n+\n+    sqlite3_clear_bindings(m_read_stmt);\n+    sqlite3_reset(m_read_stmt);\n+    return true;\n }\n \n bool SQLiteBatch::WriteKey(CDataStream&& key, CDataStream&& value, bool overwrite)\n {\n-    return false;\n+    if (!m_database.m_db) return false;\n+    assert(m_insert_stmt && m_overwrite_stmt);\n+\n+    sqlite3_stmt* stmt;\n+    if (overwrite) {\n+        stmt = m_overwrite_stmt;\n+    } else {\n+        stmt = m_insert_stmt;\n+    }\n+\n+    // Bind: leftmost parameter in statement is index 1\n+    // Insert index 1 is key, 2 is value\n+    int res = sqlite3_bind_blob(stmt, 1, key.data(), key.size(), SQLITE_STATIC);\n+    if (res != SQLITE_OK) {\n+        LogPrintf(\"%s: Unable to bind key to statement: %s\\n\", __func__, sqlite3_errstr(res));\n+        sqlite3_clear_bindings(stmt);\n+        sqlite3_reset(stmt);\n+        return false;\n+    }\n+    res = sqlite3_bind_blob(stmt, 2, value.data(), value.size(), SQLITE_STATIC);\n+    if (res != SQLITE_OK) {\n+        LogPrintf(\"%s: Unable to bind value to statement: %s\\n\", __func__, sqlite3_errstr(res));\n+        sqlite3_clear_bindings(stmt);\n+        sqlite3_reset(stmt);\n+        return false;\n+    }\n+\n+    // Execute\n+    res = sqlite3_step(stmt);\n+    sqlite3_clear_bindings(stmt);\n+    sqlite3_reset(stmt);\n+    if (res != SQLITE_DONE) {\n+        LogPrintf(\"%s: Unable to execute statement: %s\\n\", __func__, sqlite3_errstr(res));\n+    }\n+    return res == SQLITE_DONE;\n }\n \n bool SQLiteBatch::EraseKey(CDataStream&& key)\n {\n-    return false;\n+    if (!m_database.m_db) return false;\n+    assert(m_delete_stmt);\n+\n+    // Bind: leftmost parameter in statement is index 1\n+    int res = sqlite3_bind_blob(m_delete_stmt, 1, key.data(), key.size(), SQLITE_STATIC);\n+    if (res != SQLITE_OK) {\n+        LogPrintf(\"%s: Unable to bind statement: %s\\n\", __func__, sqlite3_errstr(res));\n+        sqlite3_clear_bindings(m_delete_stmt);\n+        sqlite3_reset(m_delete_stmt);\n+        return false;\n+    }\n+\n+    // Execute\n+    res = sqlite3_step(m_delete_stmt);\n+    sqlite3_clear_bindings(m_delete_stmt);\n+    sqlite3_reset(m_delete_stmt);\n+    if (res != SQLITE_DONE) {\n+        LogPrintf(\"%s: Unable to execute statement: %s\\n\", __func__, sqlite3_errstr(res));\n+    }\n+    return res == SQLITE_DONE;\n }\n \n bool SQLiteBatch::HasKey(CDataStream&& key)\n {\n-    return false;\n+    if (!m_database.m_db) return false;\n+    assert(m_read_stmt);\n+\n+    // Bind: leftmost parameter in statement is index 1\n+    bool ret = false;\n+    int res = sqlite3_bind_blob(m_read_stmt, 1, key.data(), key.size(), SQLITE_STATIC);\n+    if (res == SQLITE_OK) {\n+        res = sqlite3_step(m_read_stmt);\n+        if (res == SQLITE_ROW) {\n+            ret = true;\n+        }\n+    }\n+\n+    sqlite3_clear_bindings(m_read_stmt);\n+    sqlite3_reset(m_read_stmt);\n+    return ret;\n }\n \n bool SQLiteBatch::StartCursor()"
      }
    ]
  },
  {
    "sha": "f6f9cd6a64842ef23777312f2465e826ca04b886",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNmY5Y2Q2YTY0ODQyZWYyMzc3NzMxMmYyNDY1ZTgyNmNhMDRiODg2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:46Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteBatch::StartCursor, ReadAtCursor, and CloseCursor",
      "tree": {
        "sha": "296c59f7a55da61207e96812ee45d4d3580b0655",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/296c59f7a55da61207e96812ee45d4d3580b0655"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6f9cd6a64842ef23777312f2465e826ca04b886",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6f9cd6a64842ef23777312f2465e826ca04b886",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6f9cd6a64842ef23777312f2465e826ca04b886",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6f9cd6a64842ef23777312f2465e826ca04b886/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf90e033f4fe86cfb90492c7e0962278ea3a146d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf90e033f4fe86cfb90492c7e0962278ea3a146d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf90e033f4fe86cfb90492c7e0962278ea3a146d"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 30,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d684eef87e07697ac5dea25cbe95b4c3917754dd",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 2,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6f9cd6a64842ef23777312f2465e826ca04b886/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6f9cd6a64842ef23777312f2465e826ca04b886/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=f6f9cd6a64842ef23777312f2465e826ca04b886",
        "patch": "@@ -369,16 +369,42 @@ bool SQLiteBatch::HasKey(CDataStream&& key)\n \n bool SQLiteBatch::StartCursor()\n {\n-    return false;\n+    assert(!m_cursor_init);\n+    if (!m_database.m_db) return false;\n+    m_cursor_init = true;\n+    return true;\n }\n \n bool SQLiteBatch::ReadAtCursor(CDataStream& key, CDataStream& value, bool& complete)\n {\n-    return false;\n+    complete = false;\n+\n+    if (!m_cursor_init) return false;\n+\n+    int res = sqlite3_step(m_cursor_stmt);\n+    if (res == SQLITE_DONE) {\n+        complete = true;\n+        return true;\n+    }\n+    if (res != SQLITE_ROW) {\n+        LogPrintf(\"SQLiteBatch::ReadAtCursor: Unable to execute cursor step: %s\\n\", sqlite3_errstr(res));\n+        return false;\n+    }\n+\n+    // Leftmost column in result is index 0\n+    const char* key_data = reinterpret_cast<const char*>(sqlite3_column_blob(m_cursor_stmt, 0));\n+    int key_data_size = sqlite3_column_bytes(m_cursor_stmt, 0);\n+    key.write(key_data, key_data_size);\n+    const char* value_data = reinterpret_cast<const char*>(sqlite3_column_blob(m_cursor_stmt, 1));\n+    int value_data_size = sqlite3_column_bytes(m_cursor_stmt, 1);\n+    value.write(value_data, value_data_size);\n+    return true;\n }\n \n void SQLiteBatch::CloseCursor()\n {\n+    sqlite3_reset(m_cursor_stmt);\n+    m_cursor_init = false;\n }\n \n bool SQLiteBatch::TxnBegin()"
      },
      {
        "sha": "dca6560abbc9096ac4c24bd1c9829689681a194b",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6f9cd6a64842ef23777312f2465e826ca04b886/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6f9cd6a64842ef23777312f2465e826ca04b886/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=f6f9cd6a64842ef23777312f2465e826ca04b886",
        "patch": "@@ -18,6 +18,8 @@ class SQLiteBatch : public DatabaseBatch\n private:\n     SQLiteDatabase& m_database;\n \n+    bool m_cursor_init = false;\n+\n     sqlite3_stmt* m_read_stmt{nullptr};\n     sqlite3_stmt* m_insert_stmt{nullptr};\n     sqlite3_stmt* m_overwrite_stmt{nullptr};"
      }
    ]
  },
  {
    "sha": "ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzVjMTYxN2U3ZjQyNzNkYWYyNGMyNGRhMWY2YmM1ZWY1YWIyZDJi",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:48Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteDatabase::Backup",
      "tree": {
        "sha": "b4dbcde20f00fb7731cdfe54578f2566552cfe64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4dbcde20f00fb7731cdfe54578f2566552cfe64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6f9cd6a64842ef23777312f2465e826ca04b886",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6f9cd6a64842ef23777312f2465e826ca04b886",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6f9cd6a64842ef23777312f2465e826ca04b886"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 23,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8ad82743abf0319dc50d992f0503b5fde736521d",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b",
        "patch": "@@ -186,7 +186,29 @@ bool SQLiteDatabase::Rewrite(const char* skip)\n \n bool SQLiteDatabase::Backup(const std::string& dest) const\n {\n-    return false;\n+    sqlite3* db_copy;\n+    int res = sqlite3_open(dest.c_str(), &db_copy);\n+    if (res != SQLITE_OK) {\n+        sqlite3_close(db_copy);\n+        return false;\n+    }\n+    sqlite3_backup* backup = sqlite3_backup_init(db_copy, \"main\", m_db, \"main\");\n+    if (!backup) {\n+        LogPrintf(\"%s: Unable to begin backup: %s\\n\", __func__, sqlite3_errmsg(m_db));\n+        sqlite3_close(db_copy);\n+        return false;\n+    }\n+    // Specifying -1 will copy all of the pages\n+    res = sqlite3_backup_step(backup, -1);\n+    if (res != SQLITE_DONE) {\n+        LogPrintf(\"%s: Unable to backup: %s\\n\", __func__, sqlite3_errstr(res));\n+        sqlite3_backup_finish(backup);\n+        sqlite3_close(db_copy);\n+        return false;\n+    }\n+    res = sqlite3_backup_finish(backup);\n+    sqlite3_close(db_copy);\n+    return res == SQLITE_OK;\n }\n \n void SQLiteDatabase::Close()"
      }
    ]
  },
  {
    "sha": "010e3659069e6f97dd7b24483f50ed71042b84b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTBlMzY1OTA2OWU2Zjk3ZGQ3YjI0NDgzZjUwZWQ3MTA0MmI4NGIw",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:50Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteDatabase::TxnBegin, TxnCommit, and TxnAbort",
      "tree": {
        "sha": "9f5058b01439db7be80a3a5d6665f44ca92af0d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f5058b01439db7be80a3a5d6665f44ca92af0d2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/010e3659069e6f97dd7b24483f50ed71042b84b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/010e3659069e6f97dd7b24483f50ed71042b84b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/010e3659069e6f97dd7b24483f50ed71042b84b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/010e3659069e6f97dd7b24483f50ed71042b84b0/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac5c1617e7f4273daf24c24da1f6bc5ef5ab2d2b"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 18,
      "deletions": 3
    },
    "files": [
      {
        "sha": "1889313dd59a82b3aa4584b29861bf390e8d231f",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/010e3659069e6f97dd7b24483f50ed71042b84b0/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/010e3659069e6f97dd7b24483f50ed71042b84b0/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=010e3659069e6f97dd7b24483f50ed71042b84b0",
        "patch": "@@ -431,17 +431,32 @@ void SQLiteBatch::CloseCursor()\n \n bool SQLiteBatch::TxnBegin()\n {\n-    return false;\n+    if (!m_database.m_db || sqlite3_get_autocommit(m_database.m_db) == 0) return false;\n+    int res = sqlite3_exec(m_database.m_db, \"BEGIN TRANSACTION\", nullptr, nullptr, nullptr);\n+    if (res != SQLITE_OK) {\n+        LogPrintf(\"SQLiteBatch: Failed to begin the transaction\\n\");\n+    }\n+    return res == SQLITE_OK;\n }\n \n bool SQLiteBatch::TxnCommit()\n {\n-    return false;\n+    if (!m_database.m_db || sqlite3_get_autocommit(m_database.m_db) != 0) return false;\n+    int res = sqlite3_exec(m_database.m_db, \"COMMIT TRANSACTION\", nullptr, nullptr, nullptr);\n+    if (res != SQLITE_OK) {\n+        LogPrintf(\"SQLiteBatch: Failed to commit the transaction\\n\");\n+    }\n+    return res == SQLITE_OK;\n }\n \n bool SQLiteBatch::TxnAbort()\n {\n-    return false;\n+    if (!m_database.m_db || sqlite3_get_autocommit(m_database.m_db) != 0) return false;\n+    int res = sqlite3_exec(m_database.m_db, \"ROLLBACK TRANSACTION\", nullptr, nullptr, nullptr);\n+    if (res != SQLITE_OK) {\n+        LogPrintf(\"SQLiteBatch: Failed to abort the transaction\\n\");\n+    }\n+    return res == SQLITE_OK;\n }\n \n bool ExistsSQLiteDatabase(const fs::path& path)"
      }
    ]
  },
  {
    "sha": "b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNGRmOGZkYjE5ZmNkZWQ3ZTZkNDkxZWNmMGI3MDVjYWMwZWM3NmEx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:53:57Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteDatabase::Rewrite\n\nRewrite uses the VACUUM command which does exactly what we want. A\nspecific advertised use case is to compact a database and ensure that\nany deleted data is actually deleted.",
      "tree": {
        "sha": "a6eb6a459472caa6328f10887eda5c868df2728f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6eb6a459472caa6328f10887eda5c868df2728f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "010e3659069e6f97dd7b24483f50ed71042b84b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/010e3659069e6f97dd7b24483f50ed71042b84b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/010e3659069e6f97dd7b24483f50ed71042b84b0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f9c4dfb2a50c6d560adf1efeee8330197bcfb12a",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1",
        "patch": "@@ -181,7 +181,9 @@ void SQLiteDatabase::Open()\n \n bool SQLiteDatabase::Rewrite(const char* skip)\n {\n-    return false;\n+    // Rewrite the database using the VACUUM command: https://sqlite.org/lang_vacuum.html\n+    int ret = sqlite3_exec(m_db, \"VACUUM\", nullptr, nullptr, nullptr);\n+    return ret == SQLITE_OK;\n }\n \n bool SQLiteDatabase::Backup(const std::string& dest) const"
      }
    ]
  },
  {
    "sha": "727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjdlNmIyYTRlZTVhYmI3ZjJkY2JjOWY3Nzc4MjkxOTA4ZGMyOGFk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:54:00Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteDatabase::Verify",
      "tree": {
        "sha": "60112fd51a448130edc2b4533c2ce5837a411def",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60112fd51a448130edc2b4533c2ce5837a411def"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4df8fdb19fcded7e6d491ecf0b705cac0ec76a1"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 53,
      "deletions": 1
    },
    "files": [
      {
        "sha": "bfdd8591625c73f6dcd0aad2a046ebe00a94d210",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 1,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad",
        "patch": "@@ -109,6 +109,44 @@ void SQLiteDatabase::Cleanup() noexcept\n     }\n }\n \n+bool SQLiteDatabase::Verify(bilingual_str& error)\n+{\n+    assert(m_db);\n+\n+    sqlite3_stmt* stmt{nullptr};\n+    ret = sqlite3_prepare_v2(m_db, \"PRAGMA integrity_check\", -1, &stmt, nullptr);\n+    if (ret != SQLITE_OK) {\n+        sqlite3_finalize(stmt);\n+        error = strprintf(_(\"SQLiteDatabase: Failed to prepare statement to verify database: %s\"), sqlite3_errstr(ret));\n+        return false;\n+    }\n+    while (true) {\n+        ret = sqlite3_step(stmt);\n+        if (ret == SQLITE_DONE) {\n+            break;\n+        }\n+        if (ret != SQLITE_ROW) {\n+            error = strprintf(_(\"SQLiteDatabase: Failed to execute statement to verify database: %s\"), sqlite3_errstr(ret));\n+            break;\n+        }\n+        const char* msg = (const char*)sqlite3_column_text(stmt, 0);\n+        if (!msg) {\n+            error = strprintf(_(\"SQLiteDatabase: Failed to read database verification error: %s\"), sqlite3_errstr(ret));\n+            break;\n+        }\n+        std::string str_msg(msg);\n+        if (str_msg == \"ok\") {\n+            continue;\n+        }\n+        if (error.empty()) {\n+            error = _(\"Failed to verify database\") + Untranslated(\"\\n\");\n+        }\n+        error += Untranslated(strprintf(\"%s\\n\", str_msg));\n+    }\n+    sqlite3_finalize(stmt);\n+    return error.empty();\n+}\n+\n void SQLiteDatabase::Open()\n {\n     int flags = SQLITE_OPEN_FULLMUTEX | SQLITE_OPEN_READWRITE | SQLITE_OPEN_CREATE;\n@@ -468,7 +506,19 @@ bool ExistsSQLiteDatabase(const fs::path& path)\n \n std::unique_ptr<SQLiteDatabase> MakeSQLiteDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error)\n {\n-    return MakeUnique<SQLiteDatabase>(path, path / DATABASE_FILENAME);\n+    const fs::path file = path / DATABASE_FILENAME;\n+    try {\n+        auto db = MakeUnique<SQLiteDatabase>(path, file);\n+        if (options.verify && !db->Verify(error)) {\n+            status = DatabaseStatus::FAILED_VERIFY;\n+            return nullptr;\n+        }\n+        return db;\n+    } catch (const std::runtime_error& e) {\n+        status = DatabaseStatus::FAILED_LOAD;\n+        error.original = e.what();\n+        return nullptr;\n+    }\n }\n \n std::string SQLiteDatabaseVersion()"
      },
      {
        "sha": "c6a3f7f5030f069b6cdbbe835e007d5e7707ac64",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad",
        "patch": "@@ -71,6 +71,8 @@ class SQLiteDatabase : public WalletDatabase\n \n     ~SQLiteDatabase();\n \n+    bool Verify(bilingual_str& error);\n+\n     /** Open the database if it is not already opened */\n     void Open() override;\n "
      }
    ]
  },
  {
    "sha": "6045f77003f167bee9a85e2d53f8fc6ff2e297d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDQ1Zjc3MDAzZjE2N2JlZTlhODVlMmQ1M2Y4ZmM2ZmYyZTI5N2Q4",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-16T19:38:12Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Implement SQLiteDatabase::MakeBatch",
      "tree": {
        "sha": "e42b2e022dcd9750ca65c0239a71a1796e64469f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e42b2e022dcd9750ca65c0239a71a1796e64469f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6045f77003f167bee9a85e2d53f8fc6ff2e297d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6045f77003f167bee9a85e2d53f8fc6ff2e297d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6045f77003f167bee9a85e2d53f8fc6ff2e297d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6045f77003f167bee9a85e2d53f8fc6ff2e297d8/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/727e6b2a4ee5abb7f2dcbc9f7778291908dc28ad"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5c30d72e8454eba2d6d8b2f19babe367a43f078f",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6045f77003f167bee9a85e2d53f8fc6ff2e297d8/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6045f77003f167bee9a85e2d53f8fc6ff2e297d8/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=6045f77003f167bee9a85e2d53f8fc6ff2e297d8",
        "patch": "@@ -262,7 +262,8 @@ void SQLiteDatabase::Close()\n \n std::unique_ptr<DatabaseBatch> SQLiteDatabase::MakeBatch(bool flush_on_close)\n {\n-    return nullptr;\n+    // We ignore flush_on_close because we don't do manual flushing for SQLite\n+    return MakeUnique<SQLiteBatch>(*this);\n }\n \n SQLiteBatch::SQLiteBatch(SQLiteDatabase& database)"
      }
    ]
  },
  {
    "sha": "ac38a87225be0f1103ff9629d63980550d2f372b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzM4YTg3MjI1YmUwZjExMDNmZjk2MjlkNjM5ODA1NTBkMmYzNzJi",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:54:05Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Determine wallet file type based on file magic",
      "tree": {
        "sha": "a985380a416f93c7c2f07ae101079cbb351dbbdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a985380a416f93c7c2f07ae101079cbb351dbbdc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac38a87225be0f1103ff9629d63980550d2f372b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac38a87225be0f1103ff9629d63980550d2f372b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac38a87225be0f1103ff9629d63980550d2f372b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac38a87225be0f1103ff9629d63980550d2f372b/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6045f77003f167bee9a85e2d53f8fc6ff2e297d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6045f77003f167bee9a85e2d53f8fc6ff2e297d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6045f77003f167bee9a85e2d53f8fc6ff2e297d8"
      }
    ],
    "stats": {
      "total": 113,
      "additions": 83,
      "deletions": 30
    },
    "files": [
      {
        "sha": "85aae0170d8c19e4185471b0441a5cd860936e5b",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 1,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=ac38a87225be0f1103ff9629d63980550d2f372b",
        "patch": "@@ -813,7 +813,7 @@ bool ExistsBerkeleyDatabase(const fs::path& path)\n     fs::path env_directory;\n     std::string data_filename;\n     SplitWalletPath(path, env_directory, data_filename);\n-    return IsBerkeleyBtree(env_directory / data_filename);\n+    return IsBDBFile(env_directory / data_filename);\n }\n \n std::unique_ptr<BerkeleyDatabase> MakeBerkeleyDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error)\n@@ -839,3 +839,28 @@ std::unique_ptr<BerkeleyDatabase> MakeBerkeleyDatabase(const fs::path& path, con\n     status = DatabaseStatus::SUCCESS;\n     return db;\n }\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;\n+\n+    // A Berkeley DB Btree file has at least 4K.\n+    // This check also prevents opening lock files.\n+    boost::system::error_code ec;\n+    auto size = fs::file_size(path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n+    if (size < 4096) return false;\n+\n+    fsbridge::ifstream file(path, std::ios::binary);\n+    if (!file.is_open()) return false;\n+\n+    file.seekg(12, std::ios::beg); // Magic bytes start at offset 12\n+    uint32_t data = 0;\n+    file.read((char*) &data, sizeof(data)); // Read 4 bytes of file to compare against magic\n+\n+    // Berkeley DB Btree magic bytes, from:\n+    //  https://github.com/file/file/blob/5824af38469ec1ca9ac3ffd251e7afe9dc11e227/magic/Magdir/database#L74-L75\n+    //  - big endian systems - 00 05 31 62\n+    //  - little endian systems - 62 31 05 00\n+    return data == 0x00053162 || data == 0x62310500;\n+}"
      },
      {
        "sha": "5403e95ee446c107d48528bde6ce6e2fa02f3f5d",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=ac38a87225be0f1103ff9629d63980550d2f372b",
        "patch": "@@ -87,7 +87,7 @@ class BerkeleyEnvironment\n std::shared_ptr<BerkeleyEnvironment> GetWalletEnv(const fs::path& wallet_path, std::string& database_filename);\n \n /** Check format of database file */\n-bool IsBerkeleyBtree(const fs::path& path);\n+bool IsBDBFile(const fs::path& path);\n \n class BerkeleyBatch;\n "
      },
      {
        "sha": "3ecccd4e00ebf3e991d011f09e2c28786f1d2498",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=ac38a87225be0f1103ff9629d63980550d2f372b",
        "patch": "@@ -8,6 +8,7 @@\n \n #include <clientversion.h>\n #include <fs.h>\n+#include <optional.h>\n #include <streams.h>\n #include <support/allocators/secure.h>\n #include <util/memory.h>\n@@ -194,11 +195,13 @@ class DummyDatabase : public WalletDatabase\n \n enum class DatabaseFormat {\n     BERKELEY,\n+    SQLITE,\n };\n \n struct DatabaseOptions {\n     bool require_existing = false;\n     bool require_create = false;\n+    Optional<DatabaseFormat> require_format;\n     uint64_t create_flags = 0;\n     SecureString create_passphrase;\n     bool verify = true;"
      },
      {
        "sha": "ce390440d965c57a86b11c5d8a51fb3b05393d1d",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 1,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=ac38a87225be0f1103ff9629d63980550d2f372b",
        "patch": "@@ -502,7 +502,8 @@ bool SQLiteBatch::TxnAbort()\n \n bool ExistsSQLiteDatabase(const fs::path& path)\n {\n-    return false;\n+    const fs::path file = path / DATABASE_FILENAME;\n+    return fs::symlink_status(file).type() == fs::regular_file && IsSQLiteFile(file);\n }\n \n std::unique_ptr<SQLiteDatabase> MakeSQLiteDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error)\n@@ -526,3 +527,26 @@ std::string SQLiteDatabaseVersion()\n {\n     return std::string(sqlite3_libversion());\n }\n+\n+bool IsSQLiteFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;\n+\n+    // A SQLite Database file is at least 512 bytes.\n+    boost::system::error_code ec;\n+    auto size = fs::file_size(path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n+    if (size < 512) return false;\n+\n+    fsbridge::ifstream file(path, std::ios::binary);\n+    if (!file.is_open()) return false;\n+\n+    // Magic is at beginning and is 16 bytes long\n+    char magic[16];\n+    file.read(magic, 16);\n+    file.close();\n+\n+    // Check the magic, see https://sqlite.org/fileformat2.html\n+    std::string magic_str(magic);\n+    return magic_str == std::string(\"SQLite format 3\");\n+}"
      },
      {
        "sha": "5e5e93903b82b7388d42f96a25faa81e5ff130f2",
        "filename": "src/wallet/sqlite.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/sqlite.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/sqlite.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.h?ref=ac38a87225be0f1103ff9629d63980550d2f372b",
        "patch": "@@ -116,5 +116,6 @@ bool ExistsSQLiteDatabase(const fs::path& path);\n std::unique_ptr<SQLiteDatabase> MakeSQLiteDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\n \n std::string SQLiteDatabaseVersion();\n+bool IsSQLiteFile(const fs::path& path);\n \n #endif // BITCOIN_WALLET_SQLITE_H"
      },
      {
        "sha": "0092a29cb4c21e9cf38a70dc4d5ecfb878ddf394",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=ac38a87225be0f1103ff9629d63980550d2f372b",
        "patch": "@@ -15,6 +15,7 @@\n #include <util/time.h>\n #include <util/translation.h>\n #include <wallet/bdb.h>\n+#include <wallet/sqlite.h>\n #include <wallet/wallet.h>\n \n #include <atomic>\n@@ -1011,6 +1012,14 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n         if (ExistsBerkeleyDatabase(path)) {\n             format = DatabaseFormat::BERKELEY;\n         }\n+        if (ExistsSQLiteDatabase(path)) {\n+            if (format) {\n+                error = Untranslated(strprintf(\"Failed to load database path '%s'. Data is in ambiguous format.\", path.string()));\n+                status = DatabaseStatus::FAILED_BAD_FORMAT;\n+                return nullptr;\n+            }\n+            format = DatabaseFormat::SQLITE;\n+        }\n     } else if (options.require_existing) {\n         error = Untranslated(strprintf(\"Failed to load database path '%s'. Path does not exist.\", path.string()));\n         status = DatabaseStatus::FAILED_NOT_FOUND;\n@@ -1029,6 +1038,20 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n         return nullptr;\n     }\n \n+    // A db already exists so format is set, but options also specifies the format, so make sure they agree\n+    if (format && options.require_format && format != options.require_format) {\n+        error = Untranslated(strprintf(\"Failed to load database path '%s'. Data is not in required format.\", path.string()));\n+        status = DatabaseStatus::FAILED_BAD_FORMAT;\n+        return nullptr;\n+    }\n+\n+    // Format is not set when a db doesn't already exist, so use the format specified by the options if it is set.\n+    if (!format && options.require_format) format = options.require_format;\n+\n+    if (format && format == DatabaseFormat::SQLITE) {\n+        return MakeSQLiteDatabase(path, options, status, error);\n+    }\n+\n     return MakeBerkeleyDatabase(path, options, status, error);\n }\n "
      },
      {
        "sha": "23cdb8f64cd4273604d117dfd1a8677e69a95406",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 27,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac38a87225be0f1103ff9629d63980550d2f372b/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=ac38a87225be0f1103ff9629d63980550d2f372b",
        "patch": "@@ -7,6 +7,8 @@\n #include <logging.h>\n #include <util/system.h>\n \n+bool ExistsBerkeleyDatabase(const fs::path& path);\n+\n fs::path GetWalletDir()\n {\n     fs::path path;\n@@ -29,31 +31,6 @@ fs::path GetWalletDir()\n     return path;\n }\n \n-bool IsBerkeleyBtree(const fs::path& path)\n-{\n-    if (!fs::exists(path)) return false;\n-\n-    // A Berkeley DB Btree file has at least 4K.\n-    // This check also prevents opening lock files.\n-    boost::system::error_code ec;\n-    auto size = fs::file_size(path, ec);\n-    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n-    if (size < 4096) return false;\n-\n-    fsbridge::ifstream file(path, std::ios::binary);\n-    if (!file.is_open()) return false;\n-\n-    file.seekg(12, std::ios::beg); // Magic bytes start at offset 12\n-    uint32_t data = 0;\n-    file.read((char*) &data, sizeof(data)); // Read 4 bytes of file to compare against magic\n-\n-    // Berkeley DB Btree magic bytes, from:\n-    //  https://github.com/file/file/blob/5824af38469ec1ca9ac3ffd251e7afe9dc11e227/magic/Magdir/database#L74-L75\n-    //  - big endian systems - 00 05 31 62\n-    //  - little endian systems - 62 31 05 00\n-    return data == 0x00053162 || data == 0x62310500;\n-}\n-\n std::vector<fs::path> ListWalletDir()\n {\n     const fs::path wallet_dir = GetWalletDir();\n@@ -71,10 +48,10 @@ std::vector<fs::path> ListWalletDir()\n         // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n         const fs::path path = it->path().string().substr(offset);\n \n-        if (it->status().type() == fs::directory_file && IsBerkeleyBtree(it->path() / \"wallet.dat\")) {\n+        if (it->status().type() == fs::directory_file && ExistsBerkeleyDatabase(it->path())) {\n             // Found a directory which contains wallet.dat btree file, add it as a wallet.\n             paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBerkeleyBtree(it->path())) {\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && ExistsBerkeleyDatabase(it->path())) {\n             if (it->path().filename() == \"wallet.dat\") {\n                 // Found top-level wallet.dat btree file, add top level directory \"\"\n                 // as a wallet."
      }
    ]
  },
  {
    "sha": "9b78f3ce8ed1867c37f6b9fff98f74582d44b789",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Yjc4ZjNjZThlZDE4NjdjMzdmNmI5ZmZmOThmNzQ1ODJkNDRiNzg5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-11T20:24:17Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "walletutil: Wallets can also be sqlite",
      "tree": {
        "sha": "b3a6cd467709b5e03dbbc743e0bf3c52298d0455",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3a6cd467709b5e03dbbc743e0bf3c52298d0455"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b78f3ce8ed1867c37f6b9fff98f74582d44b789",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b78f3ce8ed1867c37f6b9fff98f74582d44b789",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b78f3ce8ed1867c37f6b9fff98f74582d44b789",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b78f3ce8ed1867c37f6b9fff98f74582d44b789/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac38a87225be0f1103ff9629d63980550d2f372b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac38a87225be0f1103ff9629d63980550d2f372b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac38a87225be0f1103ff9629d63980550d2f372b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a2a55f9751e271b6ea128ab9b1149c4491d69f99",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b78f3ce8ed1867c37f6b9fff98f74582d44b789/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b78f3ce8ed1867c37f6b9fff98f74582d44b789/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=9b78f3ce8ed1867c37f6b9fff98f74582d44b789",
        "patch": "@@ -8,6 +8,7 @@\n #include <util/system.h>\n \n bool ExistsBerkeleyDatabase(const fs::path& path);\n+bool ExistsSQLiteDatabase(const fs::path& path);\n \n fs::path GetWalletDir()\n {\n@@ -48,7 +49,8 @@ std::vector<fs::path> ListWalletDir()\n         // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n         const fs::path path = it->path().string().substr(offset);\n \n-        if (it->status().type() == fs::directory_file && ExistsBerkeleyDatabase(it->path())) {\n+        if (it->status().type() == fs::directory_file &&\n+            (ExistsBerkeleyDatabase(it->path()) || ExistsSQLiteDatabase(it->path()))) {\n             // Found a directory which contains wallet.dat btree file, add it as a wallet.\n             paths.emplace_back(path);\n         } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && ExistsBerkeleyDatabase(it->path())) {"
      }
    ]
  },
  {
    "sha": "9af5de3798c49f86f27bb79396e075fb8c1b2381",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YWY1ZGUzNzk4YzQ5Zjg2ZjI3YmI3OTM5NmUwNzVmYjhjMWIyMzgx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-27T00:54:13Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Use SQLite for descriptor wallets\n\nMakeWalletDatabase no longer has a default DatabaseFormat. Instead\ncallers, like CWallet::Create, need to specify the database type to\ncreate if the file does not exist. If it exists and NONE is given, then\nCreateWalletDatabase will try to autodetect the type.",
      "tree": {
        "sha": "6420a760fc7e686d74c0e61e3ec030bcb524947c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6420a760fc7e686d74c0e61e3ec030bcb524947c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9af5de3798c49f86f27bb79396e075fb8c1b2381",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af5de3798c49f86f27bb79396e075fb8c1b2381",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9af5de3798c49f86f27bb79396e075fb8c1b2381",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af5de3798c49f86f27bb79396e075fb8c1b2381/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b78f3ce8ed1867c37f6b9fff98f74582d44b789",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b78f3ce8ed1867c37f6b9fff98f74582d44b789",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b78f3ce8ed1867c37f6b9fff98f74582d44b789"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6b7d05fdf3d889de7c8cc39a03480b63ade59d5d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9af5de3798c49f86f27bb79396e075fb8c1b2381/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9af5de3798c49f86f27bb79396e075fb8c1b2381/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9af5de3798c49f86f27bb79396e075fb8c1b2381",
        "patch": "@@ -243,11 +243,13 @@ std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string&\n     return wallet;\n }\n \n-std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::string& name, Optional<bool> load_on_start, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error, std::vector<bilingual_str>& warnings)\n+std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::string& name, Optional<bool> load_on_start, DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error, std::vector<bilingual_str>& warnings)\n {\n     uint64_t wallet_creation_flags = options.create_flags;\n     const SecureString& passphrase = options.create_passphrase;\n \n+    if (wallet_creation_flags & WALLET_FLAG_DESCRIPTORS) options.require_format = DatabaseFormat::SQLITE;\n+\n     // Indicate that the wallet is actually supposed to be blank and not just blank to make it encrypted\n     bool create_blank = (wallet_creation_flags & WALLET_FLAG_BLANK_WALLET);\n "
      },
      {
        "sha": "245144a1c9b3a2487ac63803cb333f801db4ca98",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9af5de3798c49f86f27bb79396e075fb8c1b2381/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9af5de3798c49f86f27bb79396e075fb8c1b2381/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=9af5de3798c49f86f27bb79396e075fb8c1b2381",
        "patch": "@@ -55,7 +55,7 @@ bool RemoveWallet(const std::shared_ptr<CWallet>& wallet, Optional<bool> load_on\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, Optional<bool> load_on_start, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error, std::vector<bilingual_str>& warnings);\n-std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::string& name, Optional<bool> load_on_start, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error, std::vector<bilingual_str>& warnings);\n+std::shared_ptr<CWallet> CreateWallet(interfaces::Chain& chain, const std::string& name, Optional<bool> load_on_start, DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error, std::vector<bilingual_str>& warnings);\n std::unique_ptr<interfaces::Handler> HandleLoadWallet(LoadWalletFn load_wallet);\n std::unique_ptr<WalletDatabase> MakeWalletDatabase(const std::string& name, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\n "
      }
    ]
  },
  {
    "sha": "9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDNkMmQyNjNjMzMxZTNjNzdiOGYwZDAxZWNjOWZlYTA0MDdkZDE3",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-09-09T23:30:20Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Use network magic as sqlite wallet application ID",
      "tree": {
        "sha": "0970d3efb6f47bf78068a31514962dbee4c1d863",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0970d3efb6f47bf78068a31514962dbee4c1d863"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9af5de3798c49f86f27bb79396e075fb8c1b2381",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af5de3798c49f86f27bb79396e075fb8c1b2381",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9af5de3798c49f86f27bb79396e075fb8c1b2381"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 44,
      "deletions": 1
    },
    "files": [
      {
        "sha": "473413084b16dab7c1f60c334fb2355ca315aa22",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 1,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17",
        "patch": "@@ -4,6 +4,8 @@\n \n #include <wallet/sqlite.h>\n \n+#include <chainparams.h>\n+#include <crypto/common.h>\n #include <logging.h>\n #include <sync.h>\n #include <util/memory.h>\n@@ -113,6 +115,28 @@ bool SQLiteDatabase::Verify(bilingual_str& error)\n {\n     assert(m_db);\n \n+    // Check the application ID matches our network magic\n+    sqlite3_stmt* app_id_stmt{nullptr};\n+    int ret = sqlite3_prepare_v2(m_db, \"PRAGMA application_id\", -1, &app_id_stmt, nullptr);\n+    if (ret != SQLITE_OK) {\n+        sqlite3_finalize(app_id_stmt);\n+        error = strprintf(_(\"SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s\"), sqlite3_errstr(ret));\n+        return false;\n+    }\n+    ret = sqlite3_step(app_id_stmt);\n+    if (ret != SQLITE_ROW) {\n+        sqlite3_finalize(app_id_stmt);\n+        error = strprintf(_(\"SQLiteDatabase: Failed to fetch the application id: %s\"), sqlite3_errstr(ret));\n+        return false;\n+    }\n+    uint32_t app_id = static_cast<uint32_t>(sqlite3_column_int(app_id_stmt, 0));\n+    sqlite3_finalize(app_id_stmt);\n+    uint32_t net_magic = ReadBE32(Params().MessageStart());\n+    if (app_id != net_magic) {\n+        error = strprintf(_(\"SQLiteDatabase: Unexpected application id. Expected %u, got %u\"), net_magic, app_id);\n+        return false;\n+    }\n+\n     sqlite3_stmt* stmt{nullptr};\n     ret = sqlite3_prepare_v2(m_db, \"PRAGMA integrity_check\", -1, &stmt, nullptr);\n     if (ret != SQLITE_OK) {\n@@ -214,6 +238,14 @@ void SQLiteDatabase::Open()\n         if (ret != SQLITE_OK) {\n             throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to create new database: %s\\n\", sqlite3_errstr(ret)));\n         }\n+\n+        // Set the application id\n+        uint32_t app_id = ReadBE32(Params().MessageStart());\n+        std::string set_app_id = strprintf(\"PRAGMA application_id = %d\", static_cast<int32_t>(app_id));\n+        ret = sqlite3_exec(m_db, set_app_id.c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set the application id: %s\\n\", sqlite3_errstr(ret)));\n+        }\n     }\n }\n \n@@ -544,9 +576,20 @@ bool IsSQLiteFile(const fs::path& path)\n     // Magic is at beginning and is 16 bytes long\n     char magic[16];\n     file.read(magic, 16);\n+\n+    // Application id is at offset 68 and 4 bytes long\n+    file.seekg(68, std::ios::beg);\n+    char app_id[4];\n+    file.read(app_id, 4);\n+\n     file.close();\n \n     // Check the magic, see https://sqlite.org/fileformat2.html\n     std::string magic_str(magic);\n-    return magic_str == std::string(\"SQLite format 3\");\n+    if (magic_str != std::string(\"SQLite format 3\")) {\n+        return false;\n+    }\n+\n+    // Check the application id matches our network magic\n+    return memcmp(Params().MessageStart(), app_id, 4) == 0;\n }"
      }
    ]
  },
  {
    "sha": "6173269866306058fcb1cc825b9eb681838678ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTczMjY5ODY2MzA2MDU4ZmNiMWNjODI1YjllYjY4MTgzODY3OGNh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-09-10T00:22:32Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Set and check the sqlite user version",
      "tree": {
        "sha": "65dfba766487a24e7482eb66e0f568ac134214ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65dfba766487a24e7482eb66e0f568ac134214ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6173269866306058fcb1cc825b9eb681838678ca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6173269866306058fcb1cc825b9eb681838678ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6173269866306058fcb1cc825b9eb681838678ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6173269866306058fcb1cc825b9eb681838678ca/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d3d2d263c331e3c77b8f0d01ecc9fea0407dd17"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8a6b547feb03ef04d7bc433866346863c9314b09",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6173269866306058fcb1cc825b9eb681838678ca/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6173269866306058fcb1cc825b9eb681838678ca/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=6173269866306058fcb1cc825b9eb681838678ca",
        "patch": "@@ -18,6 +18,7 @@\n #include <stdint.h>\n \n static const char* const DATABASE_FILENAME = \"wallet.dat\";\n+static constexpr int32_t WALLET_SCHEMA_VERSION = 0;\n \n static Mutex g_sqlite_mutex;\n static int g_sqlite_count GUARDED_BY(g_sqlite_mutex) = 0;\n@@ -137,6 +138,27 @@ bool SQLiteDatabase::Verify(bilingual_str& error)\n         return false;\n     }\n \n+    // Check our schema version\n+    sqlite3_stmt* user_ver_stmt{nullptr};\n+    ret = sqlite3_prepare_v2(m_db, \"PRAGMA user_version\", -1, &user_ver_stmt, nullptr);\n+    if (ret != SQLITE_OK) {\n+        sqlite3_finalize(user_ver_stmt);\n+        error = strprintf(_(\"SQLiteDatabase: Failed to prepare the statement to fetch sqlite wallet schema version: %s\"), sqlite3_errstr(ret));\n+        return false;\n+    }\n+    ret = sqlite3_step(user_ver_stmt);\n+    if (ret != SQLITE_ROW) {\n+        sqlite3_finalize(user_ver_stmt);\n+        error = strprintf(_(\"SQLiteDatabase: Failed to fetch sqlite wallet schema version: %s\"), sqlite3_errstr(ret));\n+        return false;\n+    }\n+    int32_t user_ver = sqlite3_column_int(user_ver_stmt, 0);\n+    sqlite3_finalize(user_ver_stmt);\n+    if (user_ver != WALLET_SCHEMA_VERSION) {\n+        error = strprintf(_(\"SQLiteDatabase: Unknown sqlite wallet schema version %d. Only version %d is supported\"), user_ver, WALLET_SCHEMA_VERSION);\n+        return false;\n+    }\n+\n     sqlite3_stmt* stmt{nullptr};\n     ret = sqlite3_prepare_v2(m_db, \"PRAGMA integrity_check\", -1, &stmt, nullptr);\n     if (ret != SQLITE_OK) {\n@@ -246,6 +268,13 @@ void SQLiteDatabase::Open()\n         if (ret != SQLITE_OK) {\n             throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set the application id: %s\\n\", sqlite3_errstr(ret)));\n         }\n+\n+        // Set the user version\n+        std::string set_user_ver = strprintf(\"PRAGMA user_version = %d\", WALLET_SCHEMA_VERSION);\n+        ret = sqlite3_exec(m_db, set_user_ver.c_str(), nullptr, nullptr, nullptr);\n+        if (ret != SQLITE_OK) {\n+            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to set the wallet schema version: %s\\n\", sqlite3_errstr(ret)));\n+        }\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "f023b7cac0eb16d3c1bf40f1f7898b290de4cc73",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDIzYjdjYWMwZWIxNmQzYzFiZjQwZjFmNzg5OGIyOTBkZTRjYzcz",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-09-23T16:16:40Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "wallet: Enforce sqlite serialized threading mode",
      "tree": {
        "sha": "909bb791b499df2e02375aa91414d826ba235123",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/909bb791b499df2e02375aa91414d826ba235123"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f023b7cac0eb16d3c1bf40f1f7898b290de4cc73",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f023b7cac0eb16d3c1bf40f1f7898b290de4cc73",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f023b7cac0eb16d3c1bf40f1f7898b290de4cc73",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f023b7cac0eb16d3c1bf40f1f7898b290de4cc73/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6173269866306058fcb1cc825b9eb681838678ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6173269866306058fcb1cc825b9eb681838678ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6173269866306058fcb1cc825b9eb681838678ca"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "02a161ecbded193ccca7b8145be8bcc8843e209c",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f023b7cac0eb16d3c1bf40f1f7898b290de4cc73/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f023b7cac0eb16d3c1bf40f1f7898b290de4cc73/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=f023b7cac0eb16d3c1bf40f1f7898b290de4cc73",
        "patch": "@@ -48,6 +48,11 @@ SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_pa\n             if (ret != SQLITE_OK) {\n                 throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup error log: %s\\n\", sqlite3_errstr(ret)));\n             }\n+            // Force serialized threading mode\n+            ret = sqlite3_config(SQLITE_CONFIG_SERIALIZED);\n+            if (ret != SQLITE_OK) {\n+                throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to configure serialized threading mode: %s\\n\", sqlite3_errstr(ret)));\n+            }\n         }\n         int ret = sqlite3_initialize(); // This is a no-op if sqlite3 is already initialized\n         if (ret != SQLITE_OK) {"
      }
    ]
  },
  {
    "sha": "6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzY2MzlhYzlmNmUxNjc3ZGEwNjZjZjgwOWY5ZTNmYTRkMmU3YzMy",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-09-30T16:24:12Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Include sqlite3 in documentation",
      "tree": {
        "sha": "b8d6a7209663169552f4aaf3612bc5b05f8985fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8d6a7209663169552f4aaf3612bc5b05f8985fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f023b7cac0eb16d3c1bf40f1f7898b290de4cc73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f023b7cac0eb16d3c1bf40f1f7898b290de4cc73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f023b7cac0eb16d3c1bf40f1f7898b290de4cc73"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 16,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2a7d71eea6317116527c7d7845c701f7241cb68f",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
        "patch": "@@ -19,7 +19,7 @@ Then install [Homebrew](https://brew.sh).\n \n ## Dependencies\n ```shell\n-brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode\n+brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode sqlite\n ```\n \n If you run into issues, check [Homebrew's troubleshooting page](https://docs.brew.sh/Troubleshooting).\n@@ -79,7 +79,7 @@ compiled in `disable-wallet` mode with:\n ./configure --disable-wallet\n ```\n \n-In this case there is no dependency on Berkeley DB 4.8.\n+In this case there is no dependency on Berkeley DB 4.8 and SQLite.\n \n Mining is also possible in disable-wallet mode using the `getblocktemplate` RPC call.\n "
      },
      {
        "sha": "c076fb6fffbab603513b686fed66d9247e05fd02",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
        "patch": "@@ -46,6 +46,7 @@ Optional dependencies:\n  libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n  univalue    | Utility          | JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)\n  libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n+ sqlite3     | SQLite DB       | Wallet storage (only needed when wallet enabled)\n \n For the versions used, see [dependencies.md](dependencies.md)\n \n@@ -91,6 +92,10 @@ pass `--with-incompatible-bdb` to configure.\n \n Otherwise, you can build from self-compiled `depends` (see above).\n \n+SQLite is required for the wallet:\n+\n+    sudo apt install libsqlite3-dev\n+\n To build Bitcoin Core without wallet, see [*Disable-wallet mode*](/doc/build-unix.md#disable-wallet-mode)\n \n \n@@ -144,6 +149,10 @@ libqrencode (optional) can be installed with:\n \n     sudo dnf install qrencode-devel\n \n+SQLite can be installed with:\n+\n+    sudo dnf install sqlite-devel\n+\n Notes\n -----\n The release is built with GCC and then \"strip bitcoind\" to strip the debug\n@@ -238,7 +247,7 @@ disable-wallet mode with:\n \n     ./configure --disable-wallet\n \n-In this case there is no dependency on Berkeley DB 4.8.\n+In this case there is no dependency on Berkeley DB 4.8 and SQLite.\n \n Mining is also possible in disable-wallet mode using the `getblocktemplate` RPC call.\n "
      },
      {
        "sha": "ddd50ef29668615ed9f4a22f8e515d32f56261c6",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
        "patch": "@@ -21,6 +21,7 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | Python (tests) |  | [3.5](https://www.python.org/downloads) |  |  |  |\n | qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |\n | Qt | [5.9.8](https://download.qt.io/official_releases/qt/) | [5.5.1](https://github.com/bitcoin/bitcoin/issues/13478) | No |  |  |\n+| SQLite | [3.32.1](https://sqlite.org/download.html) | [3.7.17](https://github.com/bitcoin/bitcoin/pull/19077) |  |  |  |\n | XCB |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Linux only) |\n | xkbcommon |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Linux only) |\n | ZeroMQ | [4.3.1](https://github.com/zeromq/libzmq/releases) | 4.0.0 | No |  |  |\n@@ -33,6 +34,7 @@ Some dependencies are not needed in all configurations. The following are some f\n #### Options passed to `./configure`\n * MiniUPnPc is not needed with  `--with-miniupnpc=no`.\n * Berkeley DB is not needed with `--disable-wallet`.\n+* SQLite is not needed with `--disable-wallet`.\n * Qt is not needed with `--without-gui`.\n * If the qrencode dependency is absent, QR support won't be added. To force an error when that happens, pass `--with-qrencode`.\n * ZeroMQ is needed only with the `--with-zmq` option."
      },
      {
        "sha": "e3f195de43f0d672a0aa608064c25a5bacd59739",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
        "patch": "@@ -72,8 +72,9 @@ Subdirectory | File(s)           | Description\n -------------|-------------------|------------\n `database/`  | BDB logging files | Part of BDB environment; created at start and deleted on shutdown; a user *must keep it as safe* as personal wallet `wallet.dat`\n `./`         | `db.log`          | BDB error file\n-`./`         | `wallet.dat`      | Personal wallet (BDB) with keys and transactions\n+`./`         | `wallet.dat`      | Personal wallet with keys and transactions. May be either a Berkeley DB or SQLite database file.\n `./`         | `.walletlock`     | Wallet lock file\n+`./`         | `wallet.dat-journal` | SQLite Rollback Journal file for `wallet.dat`. Usually created at start and deleted on shutdown. A user *must keep it as safe* as the `wallet.dat` file.\n \n 1. Each user-defined wallet named \"wallet_name\" resides in `wallets/wallet_name/` subdirectory.\n "
      }
    ]
  },
  {
    "sha": "310b0fde04639b7446efd5c1d2701caa4b991b86",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTBiMGZkZTA0NjM5Yjc0NDZlZmQ1YzFkMjcwMWNhYTRiOTkxYjg2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-04-03T22:49:36Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Run dumpwallet for legacy wallets only in  wallet_backup.py\n\nDescriptor wallets don't support dumpwallet, so make the tests that do\ndumpwallet legacy wallet only.",
      "tree": {
        "sha": "52925901267bf787e52c3d6e1bc830c67c78fa00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52925901267bf787e52c3d6e1bc830c67c78fa00"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/310b0fde04639b7446efd5c1d2701caa4b991b86",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/310b0fde04639b7446efd5c1d2701caa4b991b86",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/310b0fde04639b7446efd5c1d2701caa4b991b86",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/310b0fde04639b7446efd5c1d2701caa4b991b86/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c6639ac9f6e1677da066cf809f9e3fa4d2e7c32"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 24,
      "deletions": 20
    },
    "files": [
      {
        "sha": "6bd4f20df9fcd61beddd00d0e6ae7d70d28c2450",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/310b0fde04639b7446efd5c1d2701caa4b991b86/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/310b0fde04639b7446efd5c1d2701caa4b991b86/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=310b0fde04639b7446efd5c1d2701caa4b991b86",
        "patch": "@@ -88,6 +88,7 @@\n     'wallet_hd.py',\n     'wallet_hd.py --descriptors',\n     'wallet_backup.py',\n+    'wallet_backup.py --descriptors',\n     # vv Tests less than 5m vv\n     'mining_getblocktemplate_longpoll.py',\n     'feature_maxuploadtarget.py',"
      },
      {
        "sha": "0cf8e6d926a7c95e05b0a86f949f5d40d074d87f",
        "filename": "test/functional/wallet_backup.py",
        "status": "modified",
        "additions": 23,
        "deletions": 20,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/310b0fde04639b7446efd5c1d2701caa4b991b86/test/functional/wallet_backup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/310b0fde04639b7446efd5c1d2701caa4b991b86/test/functional/wallet_backup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_backup.py?ref=310b0fde04639b7446efd5c1d2701caa4b991b86",
        "patch": "@@ -135,11 +135,13 @@ def run_test(self):\n         self.log.info(\"Backing up\")\n \n         self.nodes[0].backupwallet(os.path.join(self.nodes[0].datadir, 'wallet.bak'))\n-        self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, 'wallet.dump'))\n         self.nodes[1].backupwallet(os.path.join(self.nodes[1].datadir, 'wallet.bak'))\n-        self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, 'wallet.dump'))\n         self.nodes[2].backupwallet(os.path.join(self.nodes[2].datadir, 'wallet.bak'))\n-        self.nodes[2].dumpwallet(os.path.join(self.nodes[2].datadir, 'wallet.dump'))\n+\n+        if not self.options.descriptors:\n+            self.nodes[0].dumpwallet(os.path.join(self.nodes[0].datadir, 'wallet.dump'))\n+            self.nodes[1].dumpwallet(os.path.join(self.nodes[1].datadir, 'wallet.dump'))\n+            self.nodes[2].dumpwallet(os.path.join(self.nodes[2].datadir, 'wallet.dump'))\n \n         self.log.info(\"More transactions\")\n         for _ in range(5):\n@@ -183,29 +185,30 @@ def run_test(self):\n         assert_equal(self.nodes[1].getbalance(), balance1)\n         assert_equal(self.nodes[2].getbalance(), balance2)\n \n-        self.log.info(\"Restoring using dumped wallet\")\n-        self.stop_three()\n-        self.erase_three()\n+        if not self.options.descriptors:\n+            self.log.info(\"Restoring using dumped wallet\")\n+            self.stop_three()\n+            self.erase_three()\n \n-        #start node2 with no chain\n-        shutil.rmtree(os.path.join(self.nodes[2].datadir, self.chain, 'blocks'))\n-        shutil.rmtree(os.path.join(self.nodes[2].datadir, self.chain, 'chainstate'))\n+            #start node2 with no chain\n+            shutil.rmtree(os.path.join(self.nodes[2].datadir, self.chain, 'blocks'))\n+            shutil.rmtree(os.path.join(self.nodes[2].datadir, self.chain, 'chainstate'))\n \n-        self.start_three()\n+            self.start_three()\n \n-        assert_equal(self.nodes[0].getbalance(), 0)\n-        assert_equal(self.nodes[1].getbalance(), 0)\n-        assert_equal(self.nodes[2].getbalance(), 0)\n+            assert_equal(self.nodes[0].getbalance(), 0)\n+            assert_equal(self.nodes[1].getbalance(), 0)\n+            assert_equal(self.nodes[2].getbalance(), 0)\n \n-        self.nodes[0].importwallet(os.path.join(self.nodes[0].datadir, 'wallet.dump'))\n-        self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, 'wallet.dump'))\n-        self.nodes[2].importwallet(os.path.join(self.nodes[2].datadir, 'wallet.dump'))\n+            self.nodes[0].importwallet(os.path.join(self.nodes[0].datadir, 'wallet.dump'))\n+            self.nodes[1].importwallet(os.path.join(self.nodes[1].datadir, 'wallet.dump'))\n+            self.nodes[2].importwallet(os.path.join(self.nodes[2].datadir, 'wallet.dump'))\n \n-        self.sync_blocks()\n+            self.sync_blocks()\n \n-        assert_equal(self.nodes[0].getbalance(), balance0)\n-        assert_equal(self.nodes[1].getbalance(), balance1)\n-        assert_equal(self.nodes[2].getbalance(), balance2)\n+            assert_equal(self.nodes[0].getbalance(), balance0)\n+            assert_equal(self.nodes[1].getbalance(), balance1)\n+            assert_equal(self.nodes[2].getbalance(), balance2)\n \n         # Backup to source wallet file must fail\n         sourcePaths = ["
      }
    ]
  },
  {
    "sha": "c4a29d0a90b821c443c10891d9326c534d15cf97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGEyOWQwYTkwYjgyMWM0NDNjMTA4OTFkOTMyNmM1MzRkMTVjZjk3",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-10-07T18:50:05Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-14T15:28:18Z"
      },
      "message": "Update wallet_multiwallet.py for descriptor and sqlite wallets",
      "tree": {
        "sha": "3cb071df0b6bbf7839c8f0eb26c64372d17d1564",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cb071df0b6bbf7839c8f0eb26c64372d17d1564"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4a29d0a90b821c443c10891d9326c534d15cf97",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4a29d0a90b821c443c10891d9326c534d15cf97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a29d0a90b821c443c10891d9326c534d15cf97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4a29d0a90b821c443c10891d9326c534d15cf97/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "310b0fde04639b7446efd5c1d2701caa4b991b86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/310b0fde04639b7446efd5c1d2701caa4b991b86",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/310b0fde04639b7446efd5c1d2701caa4b991b86"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 26,
      "deletions": 12
    },
    "files": [
      {
        "sha": "115ffa3e8dcdfee2af9e099b32e83b2afa30f5b6",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4a29d0a90b821c443c10891d9326c534d15cf97/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4a29d0a90b821c443c10891d9326c534d15cf97/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=c4a29d0a90b821c443c10891d9326c534d15cf97",
        "patch": "@@ -103,7 +103,7 @@ def __init__(self):\n         self.supports_cli = True\n         self.bind_to_localhost_only = True\n         self.parse_args()\n-        self.default_wallet_name = \"\"\n+        self.default_wallet_name = \"default_wallet\" if self.options.descriptors else \"\"\n         self.wallet_data_filename = \"wallet.dat\"\n         # Optional list of wallet names that can be set in set_test_params to\n         # create and import keys to. If unset, default is len(nodes) *"
      },
      {
        "sha": "6b746b1fee147a45222e9ea284c6d95632c20900",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4a29d0a90b821c443c10891d9326c534d15cf97/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4a29d0a90b821c443c10891d9326c534d15cf97/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=c4a29d0a90b821c443c10891d9326c534d15cf97",
        "patch": "@@ -141,6 +141,7 @@\n     'mempool_reorg.py',\n     'mempool_persist.py',\n     'wallet_multiwallet.py',\n+    'wallet_multiwallet.py --descriptors',\n     'wallet_multiwallet.py --usecli',\n     'wallet_createwallet.py',\n     'wallet_createwallet.py --usecli',"
      },
      {
        "sha": "61791a756c2dc0c7f6dbcff6be4f82c960a42a4a",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 24,
        "deletions": 11,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4a29d0a90b821c443c10891d9326c534d15cf97/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4a29d0a90b821c443c10891d9326c534d15cf97/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=c4a29d0a90b821c443c10891d9326c534d15cf97",
        "patch": "@@ -60,8 +60,10 @@ def run_test(self):\n         wallet = lambda name: node.get_wallet_rpc(name)\n \n         def wallet_file(name):\n+            if name == self.default_wallet_name:\n+                return wallet_dir(self.default_wallet_name, self.wallet_data_filename)\n             if os.path.isdir(wallet_dir(name)):\n-                return wallet_dir(name, self.wallet_data_filename)\n+                return wallet_dir(name, \"wallet.dat\")\n             return wallet_dir(name)\n \n         assert_equal(self.nodes[0].listwalletdir(), { 'wallets': [{ 'name': self.default_wallet_name }] })\n@@ -77,13 +79,18 @@ def wallet_file(name):\n \n         # rename wallet.dat to make sure plain wallet file paths (as opposed to\n         # directory paths) can be loaded\n-        os.rename(wallet_dir(self.default_wallet_name, self.wallet_data_filename), wallet_dir(\"w8\"))\n-\n         # create another dummy wallet for use in testing backups later\n-        self.start_node(0, [\"-nowallet\", \"-wallet=\" + self.default_wallet_name])\n+        self.start_node(0, [\"-nowallet\", \"-wallet=empty\", \"-wallet=plain\"])\n+        node.createwallet(\"created\")\n         self.stop_nodes()\n         empty_wallet = os.path.join(self.options.tmpdir, 'empty.dat')\n-        os.rename(wallet_dir(self.default_wallet_name, self.wallet_data_filename), empty_wallet)\n+        os.rename(wallet_file(\"empty\"), empty_wallet)\n+        shutil.rmtree(wallet_dir(\"empty\"))\n+        empty_created_wallet = os.path.join(self.options.tmpdir, 'empty.created.dat')\n+        os.rename(wallet_dir(\"created\", self.wallet_data_filename), empty_created_wallet)\n+        shutil.rmtree(wallet_dir(\"created\"))\n+        os.rename(wallet_file(\"plain\"), wallet_dir(\"w8\"))\n+        shutil.rmtree(wallet_dir(\"plain\"))\n \n         # restart node with a mix of wallet names:\n         #   w1, w2, w3 - to verify new wallets created when non-existing paths specified\n@@ -151,7 +158,7 @@ def wallet_file(name):\n         competing_wallet_dir = os.path.join(self.options.tmpdir, 'competing_walletdir')\n         os.mkdir(competing_wallet_dir)\n         self.restart_node(0, ['-walletdir=' + competing_wallet_dir])\n-        exp_stderr = r\"Error: Error initializing wallet database environment \\\"\\S+competing_walletdir\\\"!\"\n+        exp_stderr = r\"Error: Error initializing wallet database environment \\\"\\S+competing_walletdir\\S*\\\"!\"\n         self.nodes[1].assert_start_raises_init_error(['-walletdir=' + competing_wallet_dir], exp_stderr, match=ErrorMatch.PARTIAL_REGEX)\n \n         self.restart_node(0, extra_args)\n@@ -246,12 +253,13 @@ def wallet_file(name):\n         assert_raises_rpc_error(-18, \"Wallet file verification failed. Failed to load database path '{}'. Path does not exist.\".format(path), self.nodes[0].loadwallet, 'wallets')\n \n         # Fail to load duplicate wallets\n-        path = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\", \"w1\", self.wallet_data_filename)\n+        path = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\", \"w1\", \"wallet.dat\")\n         assert_raises_rpc_error(-4, \"Wallet file verification failed. Refusing to load database. Data file '{}' is already loaded.\".format(path), self.nodes[0].loadwallet, wallet_names[0])\n \n         # Fail to load duplicate wallets by different ways (directory and filepath)\n-        path = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\", self.wallet_data_filename)\n-        assert_raises_rpc_error(-4, \"Wallet file verification failed. Refusing to load database. Data file '{}' is already loaded.\".format(path), self.nodes[0].loadwallet, self.wallet_data_filename)\n+        if not self.options.descriptors:\n+            path = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\", \"wallet.dat\")\n+            assert_raises_rpc_error(-4, \"Wallet file verification failed. Refusing to load database. Data file '{}' is already loaded.\".format(path), self.nodes[0].loadwallet, 'wallet.dat')\n \n         # Fail to load if one wallet is a copy of another\n         assert_raises_rpc_error(-4, \"BerkeleyDatabase: Can't open database w8_copy (duplicates fileid\", self.nodes[0].loadwallet, 'w8_copy')\n@@ -334,9 +342,11 @@ def wallet_file(name):\n             rpc = self.nodes[0].get_wallet_rpc(wallet_name)\n             addr = rpc.getnewaddress()\n             backup = os.path.join(self.options.tmpdir, 'backup.dat')\n+            if os.path.exists(backup):\n+                os.unlink(backup)\n             rpc.backupwallet(backup)\n             self.nodes[0].unloadwallet(wallet_name)\n-            shutil.copyfile(empty_wallet, wallet_file(wallet_name))\n+            shutil.copyfile(empty_created_wallet if wallet_name == self.default_wallet_name else empty_wallet, wallet_file(wallet_name))\n             self.nodes[0].loadwallet(wallet_name)\n             assert_equal(rpc.getaddressinfo(addr)['ismine'], False)\n             self.nodes[0].unloadwallet(wallet_name)\n@@ -348,7 +358,10 @@ def wallet_file(name):\n         self.start_node(1)\n         wallet = os.path.join(self.options.tmpdir, 'my_wallet')\n         self.nodes[0].createwallet(wallet)\n-        assert_raises_rpc_error(-4, \"Error initializing wallet database environment\", self.nodes[1].loadwallet, wallet)\n+        if self.options.descriptors:\n+            assert_raises_rpc_error(-4, \"Unable to obtain an exclusive lock\", self.nodes[1].loadwallet, wallet)\n+        else:\n+            assert_raises_rpc_error(-4, \"Error initializing wallet database environment\", self.nodes[1].loadwallet, wallet)\n         self.nodes[0].unloadwallet(wallet)\n         self.nodes[1].loadwallet(wallet)\n "
      }
    ]
  }
]