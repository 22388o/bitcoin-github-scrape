BitcoinPullTester,2013-10-04T23:20:50Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c2b705f0ce0a1c51f71db62b757d43f752499e8a for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3054#issuecomment-25736597,25736597,
gavinandresen,2013-10-04T23:53:41Z,"NACK from me. Compilers are very good at optimizing away creation of temporary objects, and I'm against this kind of ""worry about micro-optimizations that used to matter in some compiler somewhere but aren't relevant any more"" change.\n",https://github.com/bitcoin/bitcoin/pull/3054#issuecomment-25737552,25737552,
lano1106,2013-10-05T06:10:37Z,g++ 4.8.1 isn't that good then as I have verified that the generated binaries after the patch were smaller.\n\nI have seen computation programs execution time reduced from 2 hours to 25 mins by doing just that.\n\nGranted bitcoin is probably more io bounded than it is doing heavy STL iterations but why doing gratuitous pessimization when a better form that does not affect readability or code compl,https://github.com/bitcoin/bitcoin/pull/3054#issuecomment-25742924,25742924,
gavinandresen,2013-10-05T06:52:22Z,"Our bottleneck is testing and review, so the best way to slowly gain our trust is to help test and review existing pull requests, before adding to the general workload by submitting small improvements that must still be tested and reviewed.\n\nRE: generated binaries are smaller: how much smaller for release builds?  Eleven bytes or eleven-hundred K? Significantly smaller binaries would be a good r",https://github.com/bitcoin/bitcoin/pull/3054#issuecomment-25743331,25743331,
gmaxwell,2013-10-05T15:07:16Z,> I have seen computation programs execution time reduced from 2 hours to 25 mins by doing just that.\n\nAnd the improvement here was?\n,https://github.com/bitcoin/bitcoin/pull/3054#issuecomment-25750200,25750200,
lano1106,2013-10-06T05:12:07Z,"Gavin,\n\nWe are talking about 10KB on the 64-bits build but I think that you were right and I must say that this is before stripping the exec. After stripping they have the same size.\n\nI have explored the question further with these small test program\n\nlano1106@Wailaba2 ~/dev/test :( $ cat pre.cpp\n#include <iostream>\n#include <map>\n\nint main( int argc, char *argv[] )\n{\n    std::map<int,",https://github.com/bitcoin/bitcoin/pull/3054#issuecomment-25762528,25762528,
laanwj,2013-10-06T07:33:44Z,"We're not a big fan of commits that make changes all over the place. If you want to optimize, it's better to pick a function that's used a lot, benchmark it, then re-benchmark it after the changes.\n",https://github.com/bitcoin/bitcoin/pull/3054#issuecomment-25763768,25763768,
luke-jr,2014-02-20T22:34:07Z,"@gavinandresen I'm pretty sure it would violate the C++ spec to optimise away postfix copying.\n\n@lano1106 Gaining trust should not be a goal here. Every change must be carefully reviewed, tested, and audited, regardless of how much ""trust"" anyone has for the author.\n",https://github.com/bitcoin/bitcoin/pull/3054#issuecomment-35677755,35677755,
