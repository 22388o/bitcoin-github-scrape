[
  {
    "sha": "e8870911d241050b86ac9bae8969d31d7e3f14f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODg3MDkxMWQyNDEwNTBiODZhYzliYWU4OTY5ZDMxZDdlM2YxNGYw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-04T01:24:23Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-04T01:24:23Z"
      },
      "message": "-acceptnonstdtxn option to skip \"non-standard transaction\" checks",
      "tree": {
        "sha": "7bc6b4fd7f93fc8368ac62d63b37cf45d2da977c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bc6b4fd7f93fc8368ac62d63b37cf45d2da977c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8870911d241050b86ac9bae8969d31d7e3f14f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8870911d241050b86ac9bae8969d31d7e3f14f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8870911d241050b86ac9bae8969d31d7e3f14f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8870911d241050b86ac9bae8969d31d7e3f14f0/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7eb151ad0ed441d6fd598551059a9bbfb09e99e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7eb151ad0ed441d6fd598551059a9bbfb09e99e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7eb151ad0ed441d6fd598551059a9bbfb09e99e"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ddeb65a78d6937688d8ec580c990be7ab5013a9b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8870911d241050b86ac9bae8969d31d7e3f14f0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8870911d241050b86ac9bae8969d31d7e3f14f0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e8870911d241050b86ac9bae8969d31d7e3f14f0",
        "patch": "@@ -199,6 +199,7 @@ bool AppInit2(int argc, char* argv[])\n             \"  -rpcport=<port>  \\t\\t  \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332)\\n\") +\n             \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\\n\") +\n             \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\\n\") +\n+            \"  -acceptnonstdtxn \\t  \"   + _(\"Accept \\\"non-standard\\\" transactions for relay and blocks\\n\") +\n             \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\\n\") +\n             \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\\n\");\n "
      },
      {
        "sha": "95377e9e0c09d371b549db6c2e422f64e6d145ea",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8870911d241050b86ac9bae8969d31d7e3f14f0/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8870911d241050b86ac9bae8969d31d7e3f14f0/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e8870911d241050b86ac9bae8969d31d7e3f14f0",
        "patch": "@@ -352,12 +352,16 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n     if (IsCoinBase())\n         return error(\"AcceptToMemoryPool() : coinbase as individual tx\");\n \n+    unsigned int nSize = ::GetSerializeSize(*this, SER_NETWORK);\n+\n+    if (!GetBoolArg(\"-acceptnonstdtxn\"))\n+    {\n+\n     // To help v0.1.5 clients who would see it as a negative number\n     if ((int64)nLockTime > INT_MAX)\n         return error(\"AcceptToMemoryPool() : not accepting nLockTime beyond 2038 yet\");\n \n     // Safety limits\n-    unsigned int nSize = ::GetSerializeSize(*this, SER_NETWORK);\n     // Checking ECDSA signatures is a CPU bottleneck, so to avoid denial-of-service\n     // attacks disallow transactions with more than one SigOp per 34 bytes.\n     // 34 bytes because a TxOut is:\n@@ -369,6 +373,8 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n     if (!fTestNet && !IsStandard())\n         return error(\"AcceptToMemoryPool() : nonstandard transaction type\");\n \n+    }\n+\n     // Do we already have it?\n     uint256 hash = GetHash();\n     CRITICAL_BLOCK(cs_mapTransactions)"
      }
    ]
  }
]