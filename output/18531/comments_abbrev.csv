DrahtBot,2020-04-05 19:37:23,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17356 (RPC: Internal named params by luke-jr)\n\nIf you consider this pull request important, please also help to review ",https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-609470621,609470621,
MarcoFalke,2020-04-12 13:37:34,"> Here or follow up, makes sense to also assert type of returned UniValue?\n\nSure, but let's not get ahead of ourselves. I am going to submit any further works as follow-ups, including:\n\n* Removing the CRPCCommand arguments, now that they are asserted to be equal and thus redundant\n* Removing all python regex linters on the args, now that RPCMan can be used to generate any output, includi",https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-612615820,612615820,
MarcoFalke,2020-04-29 23:25:04,"@pierreN Thanks for the review. I do like your suggestion to pass in the checks into RPCMan and execute them there. However, I think this can be done nicely in a follow-up and would bloat this pull a bit too much.",https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-621521187,621521187,
pierreN,2020-05-01 04:47:34,"> I do like your suggestion to pass in the checks into RPCMan and execute them there. However, I think this can be done nicely in a follow-up and would bloat this pull a bit too much.\n\nThanks, indeed. I'll send a PR once this one is merged then :smiley: ",https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-622246413,622246413,
MarcoFalke,2020-06-12 21:55:15,"Rebased to reduce the diff and get rid of the already merged bugfixes.\n\nNot sure why GitHub is hiding the comments (there are only 8 in total), but for reference this has one Concept ACK and one (stale) tested ACK.",https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-643498455,643498455,
jonatack,2020-06-21 15:31:09,"Concept ACK, will review.\n\nFor testing the printed JSON of CAmounts, I propose `assert_scale` in test_framework/util.py in 741d4b94f4f30ca2d7e4886bc98a9faa8d5cc8c2 used for testing bitcoin balances in #19089 and #19092.",https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-647143058,647143058,
MarcoFalke,2020-09-24 19:04:34,This is ready for review now,https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-698531407,698531407,
fjahr,2020-09-25 10:06:24,tested ACK faaf9c58e4aa809019d4ca12747dd47411988e37,https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-698844429,698844429,
MarcoFalke,2020-11-19 14:06:50,"> since these are just checked for equality and discarded anyway. Or maybe that's what the PR was originally intended to do? The code changes are simple, but the PR description is a little hard to follow\n\nIndeed. Done in #20012 ",https://github.com/bitcoin/bitcoin/pull/18531#issuecomment-730398514,730398514,
pierreN,2020-04-18 14:32:06,"Since you add a call to `RPCMan::Check`, why then recheck again for `fHelp` flag/`params` size? The if statement could be removed, right?",https://github.com/bitcoin/bitcoin/pull/18531#discussion_r410705275,410705275,src/rpc/server.cpp
fjahr,2020-08-30 15:38:24,Missed fixing the headline here.,https://github.com/bitcoin/bitcoin/pull/18531#discussion_r479784231,479784231,src/rpc/blockchain.cpp
promag,2020-09-25 08:45:31,ðŸ˜„ ,https://github.com/bitcoin/bitcoin/pull/18531#discussion_r494840386,494840386,test/lint/lint-rpc-help.sh
promag,2020-09-25 08:50:58,I wouldn't mind adding a commit to ditch this definition.,https://github.com/bitcoin/bitcoin/pull/18531#discussion_r494843632,494843632,src/rpc/server.h
MarcoFalke,2020-09-25 10:07:39,The def is also used in #20012 ,https://github.com/bitcoin/bitcoin/pull/18531#discussion_r494886655,494886655,src/rpc/server.h
