instagibbs,2017-05-08T17:33:37Z,"Note: This is a ""regression"" due to `MIN_FINAL_CHANGE` being taken out of the calculation: https://github.com/bitcoin/bitcoin/pull/10333/files#diff-b2bb174788c7409b671c46ccc86034bdL2647\n\nA bit confusing since the change is dropped when `IsDust` as before... this would be a good time to sync this behavior.",https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-299935053,299935053,
instagibbs,2017-05-12T14:18:50Z,"rebased, and included logic to attempt change larger than `MIN_FINAL_CHANGE` when possible. In the end some cases cannot be avoided, and just-over-dust change may be kept.",https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-301089430,301089430,
instagibbs,2017-06-21T13:57:38Z,"suggested new strategy: instead of ""trying one more time"" when change is in middle-ground, cache the current transaction, increase the amount you're attempting to send, and try again. If you then run out of available coins, you simply return the cached version of the transaction.",https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-310086654,310086654,
instagibbs,2017-06-23T04:48:13Z,"Implemented the previously mentioned idea. Instead of doing ""one more try"" to get acceptable change, it caches the successful yet small change transaction and slowly grows the amount of coins it grabs until it creates an acceptable transaction, given reasonable chosen inputs this will result in a transaction with change larger than MIN_FINAL_CHANGE. If it fails and runs out of coins it returns the",https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-310570245,310570245,
instagibbs,2017-06-24T13:15:02Z,"fixed issues, thanks @achow101 ",https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-310837809,310837809,
morcos,2017-07-05T15:25:59Z,I think #10712 is preferable to this PR,https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-313137292,313137292,
instagibbs,2017-07-05T15:31:46Z,closing in favor of #10712,https://github.com/bitcoin/bitcoin/pull/10333#issuecomment-313139092,313139092,
achow101,2017-06-23T19:28:07Z,`have_cached_txn` should probably be set to true here as it is never actually set anywhere,https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123827636,123827636,src/wallet/wallet.cpp
achow101,2017-06-23T19:28:35Z,Shouldn't you assign `have_cached_txn` to false here as it is not assiged before it is used down below?,https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123827711,123827711,src/wallet/wallet.cpp
achow101,2017-06-23T19:30:38Z,I don't see how this case matters. Wouldn't `nChangePosInOut` never be set to an out of range index?,https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123828021,123828021,src/wallet/wallet.cpp
instagibbs,2017-06-23T19:36:20Z,"Caller may request a too-high change position. This is also a simple code move, not going to change this logic.",https://github.com/bitcoin/bitcoin/pull/10333#discussion_r123828993,123828993,src/wallet/wallet.cpp
