DrahtBot,2018-10-10T00:17:20Z,"<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #11625 (Add BitcoinApplication & RPCConsole tests by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428395698,428395698,
fanquake,2018-10-10T00:42:24Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428399569,428399569,
TheBlueMatt,2018-10-10T00:43:32Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428399744,428399744,
meshcollider,2018-10-10T02:13:08Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428414159,428414159,
MarcoFalke,2018-10-10T04:07:06Z,"I don't know enough of automake if this is possible, but could you please not link with `SSL_LIBS` when this flag is set? This way we'd get linker errors when new usage of the ssl libs are introduced.",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428431024,428431024,
jameshilliard,2018-10-10T04:59:14Z,"@MarcoFalke Something like this?\n```diff\ndiff --git a/src/Makefile.qt.include b/src/Makefile.qt.include\nindex dfc4903cf..1d70b79d4 100644\n--- a/src/Makefile.qt.include\n+++ b/src/Makefile.qt.include\n@@ -419,8 +419,11 @@ endif\n if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n+if ENABLE_BIP70\n+qt_bitcoin_qt_LDADD += $(SSL_LIBS) $(CRYPTO_LIBS)\n+endif",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428438307,428438307,
MarcoFalke,2018-10-10T05:06:41Z,I think `CRYPTO_LIBS` is always needed for the rng. Otherwise ACK if it compiles and links.,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428439355,428439355,
Sjors,2018-10-10T06:32:50Z,"Concept ACK, though if we can't agree on deprecation (commit 3a093dd), let's at least merge the other commits.\n\nI'm fine with deprecation, less fine with actually removing it until there's a good alternative (e.g. w3c payment standard). If this deprecation goes into 0.18 then I assume it won't get removed earlier than 0.19. That gives us some time to see if a better standard is proposed, and/o",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428454210,428454210,
jameshilliard,2018-10-10T06:55:02Z,"> Can someone clarify in what way BitPay deviates from the BIP?\n\nTechnically BitPay only requires BIP70 to decode the receiving address and amount for the transaction, you don't actually have to use a BIP70 compatible wallet at all if you use an external decoder, they mostly use BIP70 as a way to try and block manual address and transaction amount entry, some of their non-standard BIP70 featur",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428458965,428458965,
jnewbery,2018-10-10T07:26:20Z,"Concept ACK\n\n> The one major payment processor that doesn't support BIP21 and currently uses a customized non-standard version of BIP70 has indicated that ""Unfortunately the original BIP70 is not useful for us.""\n\nDo you have a source for this?",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428466520,428466520,
jameshilliard,2018-10-10T07:37:10Z,"> Do you have a source for this?\n\nStephen Pair(BitPay CEO) in an email exchange.",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428469445,428469445,
sipa,2018-10-11T09:39:08Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-428889843,428889843,
gmaxwell,2018-10-12T19:47:32Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-429442412,429442412,
jonasschnelli,2018-10-16T08:29:09Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-430148657,430148657,
gasteve,2018-10-19T20:55:33Z,"> > Can someone clarify in what way BitPay deviates from the BIP?\n> \n> Technically BitPay only requires BIP70 to decode the receiving address and amount for the transaction, you don't actually have to use a BIP70 compatible wallet at all if you use an external decoder, they mostly use BIP70 as a way to try and block manual address and transaction amount entry, some of their non-standard BIP70 ",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431496319,431496319,
luke-jr,2018-10-19T21:37:01Z,IMO BIP70 should be made optional before a separate PR deprecates it.,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431506205,431506205,
jameshilliard,2018-10-19T23:06:53Z,@luke-jr this just adds a warning message and makes BIP70 optional via a configure flag it doesn't remove it in default builds,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431523342,431523342,
MarcoFalke,2018-10-20T08:14:35Z,"If the deprecation message is controversial, then maybe add it in a separate pull request?",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431559767,431559767,
luke-jr,2018-10-20T13:07:25Z,"I don't think it's controversial, just a logically separate change. My comment is NOT intended to be a ""NACK"" or anything like it.",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431579113,431579113,
wtogami,2018-10-20T13:07:56Z,I asked Luke. He clarified that he does not feel deprecation would be controversial because nobody uses BIP70. He only thinks that message should be in a different PR from the build-time option. That is a reasonable statement.,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431579238,431579238,
laanwj,2018-10-20T15:57:02Z,"yes, kill it with fire, please â€” concept ACK",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431593929,431593929,
MarcoFalke,2018-10-21T02:24:40Z,"Could squash the "" Remove QT_VERSION checks "" commit and the "" Enable BIP70 deprecation warning only when BIP70 support is compiled in "" commit into the corresponding earlier ones?",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431633513,431633513,
jameshilliard,2018-10-22T10:44:20Z,@MarcoFalke squashed,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-431800029,431800029,
Sjors,2018-10-23T07:46:49Z,"@gasteve wrote:\n> While we currently do allow a transaction to be sent only over p2p \n\nThere's no way to prevent a wallet from broadcasting a transaction over p2p, so I'm not sure what you mean by ""allow""?",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432133822,432133822,
jameshilliard,2018-10-23T07:54:33Z,"> There's no way to prevent a wallet from broadcasting a transaction over p2p, so I'm not sure what you mean by ""allow""?\n\nThat's not the case with copay....",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432136507,432136507,
Sjors,2018-10-23T10:21:56Z,"> That's not the case with copay....\n\nIndividual wallets can do whatever they want, but the merchant has no way of knowing in advance that their customer is using any specific wallet, so I don't see how it's relevant to BIP 70.",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432189178,432189178,
jnewbery,2018-10-23T13:59:27Z,"@Sjors - I think there's a miscommunication. The 'we' @gasteve is referring to is Bitpay. He's saying that they'll stop accepting payments broadcast on the Bitcoin p2p network.\n\nIn any case, the only reason https://github.com/bitcoin/bitcoin/pull/11622 was closed was to maintain compatibility with BitPay: https://github.com/bitcoin/bitcoin/pull/11622#issuecomment-347815461. The CEO has now con",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432258479,432258479,
Sjors,2018-10-24T04:37:36Z,"@jnewbery ""stop accepting"" still doesn't make any sense. Does BitPay expect the customer to pay twice?\n\nDeprecating (but not yet removing) BIP70 support is fine by me regardless. This level of confusion is one of the problems with the BIP70 standard I referred to above.",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432510076,432510076,
MarcoFalke,2018-10-24T11:11:47Z,utACK 48439b3c10 (Confirmed that I can build when protobuf is not installed),https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432614222,432614222,
fanquake,2018-10-24T14:30:07Z,"After merging this on top of 2e15fa16cd3b5badefc00466a67611f0f06d81db I'm unable to build the gui without protobuf:\n```\nmerge 14451\nbrew unlink protobuf\n./autogen.sh && ./configure\n...\nchecking for protobuf... no\nconfigure: WARNING: libprotobuf not found; bitcoin-qt frontend will not be built\n```",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432681225,432681225,
laanwj,2018-10-24T14:30:08Z,utACK 48439b3c10391e5f5555c7d98e1a99706b77eaf7,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432681241,432681241,
MarcoFalke,2018-10-24T14:35:47Z,"@fanquake The default is to build with bip70, so you'd have to do `./configure --disable-bip70` after unlink of protobuf.",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432683556,432683556,
jnewbery,2018-10-24T18:35:36Z,Needs release notes for the new `configure` option,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432777756,432777756,
DrahtBot,2018-10-24T21:36:08Z,<!--a722867cd34abeea1fadc8d60700f111-->\nGitian builds for commit e895fdc9fc83a35fc279b770b46c89e137e11128 (master):\n * `2530ab79b537dbeb7053ad6519e61486...` [bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz](https://drahtbot.space/gitian/bitcoin/bitcoin/e895fdc9fc83a35fc279b770b46c89e137e11128/bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz)\n * `7c843a8f7b5f15130e9443a429d434db...` [bitcoin-0.17.9,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432836858,432836858,
MarcoFalke,2018-10-25T00:44:31Z,"Windows cross build fails with:\n\n```\n  OBJCXXLD qt/bitcoin-qt.exe\n/home/ubuntu/build/bitcoin/depends/i686-w64-mingw32/share/../lib/libQt5Network.a(qsslsocket_openssl_symbols.o):qsslsocket_openssl_symbols.cpp:(.text+0x4e1): undefined reference to `SSL_accept'\n/home/ubuntu/build/bitcoin/depends/i686-w64-mingw32/share/../lib/libQt5Network.a(qsslsocket_openssl_symbols.o):qsslsocket_openssl_s",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432874893,432874893,
jameshilliard,2018-10-25T00:53:51Z,"I've made a follow up PR #14564 which disables BIP70 instead of the GUI when protobuf is missing.\n\n@MarcoFalke Is that with bip70 enabled or disabled?",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432876252,432876252,
MarcoFalke,2018-10-25T00:54:50Z,"This is the gitian build, so the default option is used (enabled)",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432876422,432876422,
MarcoFalke,2018-10-25T00:59:30Z,The whole build log is https://drahtbot.space/gitian/bitcoin/bitcoin/dd9eb3ae9c27467cf06259fb401510f6d9f06fd7/bitcoin-win-build.log,https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432877173,432877173,
jameshilliard,2018-10-25T02:10:12Z,"Weird, I see no obvious cause of that error, is it possible there's a bad cached version of qt?",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432888770,432888770,
MarcoFalke,2018-10-25T02:15:15Z,"Indeed weird, travis should have failed because it mimics the gitian cross build with its out of tree build...",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-432889600,432889600,
ken2812221,2018-10-25T11:40:59Z,"@MarcoFalke travis-ci does not build qt binaries for Windows. #13515 enable it, but it's a little bit complicate.",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-433018203,433018203,
NicolasDorier,2018-12-10T03:27:40Z,"Post ACK on that, I also deprecated BIP70 in NBitcoin and removed support from BTCPay after I found out that even Bitpay broke the standard. (My BIP70 compliant parser was crashing on Bitpay's payment request)",https://github.com/bitcoin/bitcoin/pull/14451#issuecomment-445653312,445653312,
fanquake,2018-10-10T00:48:28Z,"Can drop the Qt 5 check here, master now requires > 5.0",https://github.com/bitcoin/bitcoin/pull/14451#discussion_r223907854,223907854,src/qt/paymentserver.cpp
fanquake,2018-10-10T00:48:53Z,Can also remove the version check here,https://github.com/bitcoin/bitcoin/pull/14451#discussion_r223907935,223907935,src/qt/paymentserver.cpp
