[
  {
    "sha": "a99999cc04c2e7d79bb841fd954c84e985ed3b88",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOTk5OTljYzA0YzJlN2Q3OWJiODQxZmQ5NTRjODRlOTg1ZWQzYjg4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-06T18:57:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-06T19:16:43Z"
      },
      "message": "util: Add SetupHelpOptions()",
      "tree": {
        "sha": "4e32156106ce44a6e47805a9b7c6d8ebc7514460",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e32156106ce44a6e47805a9b7c6d8ebc7514460"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a99999cc04c2e7d79bb841fd954c84e985ed3b88",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcWzKbAAoJEM4rdWl+aaVITHgL/3IFV/yvx3cS+is3u7/RPVCP\nZXhQZKNmL5k2z3ZoCDEatrQszTyDTeqlEDgoi9i5O2kdq2gbzBoCklN238sVYITV\nOMnUgql82DUngEDNotu0m227pu5yO6SZ/1AtBZvm/i2nGKM7ePNAV17kQlcQ5hMZ\nx3FZeR6HLNLZWQywVofBWiG8R3IBUthVdUWotIvCIJjmSFoStOdjgIg1+tDSwkGv\nC6FPpnW6OaZP2ZEuEG6piRJLFOpeMzJoG5UTt+CUi4sKkCo6PzFSp4r64QaBDMXt\n0p6oB+6ODhH9e6VjflqKvLke6PECg4mIK5Aio6jGly0aVAmNDkhHEt0A9D+qE9V0\npyTShVXnqSu6UrvJqin0h3VifQnC5ZDwLVRYKGlFhQ7KU2kD77t8PLj3LEIRX2tq\nErW2cSIMVVwUr7Uz12+B7azf5OVS50FdY0XE699lrh98isd/BczwRUixewLaBs05\n2Wo7kfy56Cv9YSug6BGGmJ9Hy0hod9AOs5u+G15T/g==\n=I1tV\n-----END PGP SIGNATURE-----",
        "payload": "tree 4e32156106ce44a6e47805a9b7c6d8ebc7514460\nparent 1a6036978e9d7fabafcd7a113a221d68bc1bd8db\nauthor MarcoFalke <falke.marco@gmail.com> 1549479472 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1549480603 -0500\n\nutil: Add SetupHelpOptions()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a99999cc04c2e7d79bb841fd954c84e985ed3b88",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a99999cc04c2e7d79bb841fd954c84e985ed3b88",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a99999cc04c2e7d79bb841fd954c84e985ed3b88/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a6036978e9d7fabafcd7a113a221d68bc1bd8db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a6036978e9d7fabafcd7a113a221d68bc1bd8db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a6036978e9d7fabafcd7a113a221d68bc1bd8db"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 23,
      "deletions": 28
    },
    "files": [
      {
        "sha": "95c1d24dff0cc13d6b46728008564080ffe5674c",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -20,7 +20,7 @@ Bitcoin Core RPC client version v0.17.99.0\n .HP\n \\-?\n .IP\n-This help message\n+Print this help message and exit\n .HP\n \\fB\\-conf=\\fR<file>\n .IP"
      },
      {
        "sha": "6b6071d9b744c6c21923086773b5563585d6824e",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -14,7 +14,7 @@ Bitcoin Core bitcoin\\-tx utility version v0.17.99.0\n .HP\n \\-?\n .IP\n-This help message\n+Print this help message and exit\n .HP\n \\fB\\-create\\fR\n .IP"
      },
      {
        "sha": "1cb8cdebcd3e533936120218d5d0243ef132b842",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -15,7 +15,7 @@ bitcoin\\-wallet [options] <command>\n .HP\n \\-?\n .IP\n-This help message\n+Print this help message and exit\n .HP\n \\fB\\-datadir=\\fR<dir>\n .IP"
      },
      {
        "sha": "d67b2c5bc7896fa68370dfe6aa4967520b14d3b8",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -24,7 +24,8 @@ static const int64_t DEFAULT_PLOT_HEIGHT = 768;\n \n static void SetupBenchArgs()\n {\n-    gArgs.AddArg(\"-?\", \"Print this help message and exit\", false, OptionsCategory::OPTIONS);\n+    SetupHelpOptions(gArgs);\n+\n     gArgs.AddArg(\"-list\", \"List benchmarks without executing them. Can be combined with -scaling and -filter\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-evals=<n>\", strprintf(\"Number of measurement evaluations to perform. (default: %u)\", DEFAULT_BENCH_EVALUATIONS), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-filter=<regex>\", strprintf(\"Regular expression filter to select benchmark by name (default: %s)\", DEFAULT_BENCH_FILTER), false, OptionsCategory::OPTIONS);\n@@ -33,10 +34,6 @@ static void SetupBenchArgs()\n     gArgs.AddArg(\"-plot-plotlyurl=<uri>\", strprintf(\"URL to use for plotly.js (default: %s)\", DEFAULT_PLOT_PLOTLYURL), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-plot-width=<x>\", strprintf(\"Plot width in pixel (default: %u)\", DEFAULT_PLOT_WIDTH), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-plot-height=<x>\", strprintf(\"Plot height in pixel (default: %u)\", DEFAULT_PLOT_HEIGHT), false, OptionsCategory::OPTIONS);\n-\n-    // Hidden\n-    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n-    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n }\n \n static fs::path SetDataDir()"
      },
      {
        "sha": "b0e1f67d93981f32fceab04f91d0153a75e2c6ea",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -34,11 +34,12 @@ static const int CONTINUE_EXECUTION=-1;\n \n static void SetupCliArgs()\n {\n+    SetupHelpOptions(gArgs);\n+\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n     const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n     const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n \n-    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-version\", \"Print version and exit\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n@@ -55,10 +56,6 @@ static void SetupCliArgs()\n     gArgs.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind). This changes the RPC endpoint used, e.g. http://127.0.0.1:8332/wallet/<walletname>\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-stdin\", \"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases). When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password.\", false, OptionsCategory::OPTIONS);\n-\n-    // Hidden\n-    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n-    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n }\n \n /** libevent event log callback */"
      },
      {
        "sha": "4be89aab6cfe1986c1e5b8f9ddced62716baf8e9",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -35,7 +35,8 @@ const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n \n static void SetupBitcoinTxArgs()\n {\n-    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    SetupHelpOptions(gArgs);\n+\n     gArgs.AddArg(\"-create\", \"Create new, empty TX.\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-json\", \"Select JSON output\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-txid\", \"Output only the hex-encoded transaction id of the resultant transaction.\", false, OptionsCategory::OPTIONS);\n@@ -66,10 +67,6 @@ static void SetupBitcoinTxArgs()\n \n     gArgs.AddArg(\"load=NAME:FILENAME\", \"Load JSON file FILENAME into register NAME\", false, OptionsCategory::REGISTER_COMMANDS);\n     gArgs.AddArg(\"set=NAME:JSON-STRING\", \"Set register NAME to given JSON-STRING\", false, OptionsCategory::REGISTER_COMMANDS);\n-\n-    // Hidden\n-    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n-    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n }\n \n //"
      },
      {
        "sha": "32a539aac66d914f4254012315ec3a7d7acb4383",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -20,20 +20,16 @@ const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n \n static void SetupWalletToolArgs()\n {\n+    SetupHelpOptions(gArgs);\n     SetupChainParamsBaseOptions();\n \n-    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: 0).\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -debug is true, 0 otherwise.\", false, OptionsCategory::DEBUG_TEST);\n \n     gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n     gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n-\n-    // Hidden\n-    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n-    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n }\n \n static bool WalletAppInit(int argc, char* argv[])"
      },
      {
        "sha": "09e28f4006d29477690fa98274658824260220ed",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -326,6 +326,9 @@ static void OnRPCStopped()\n \n void SetupServerArgs()\n {\n+    SetupHelpOptions(gArgs);\n+    gArgs.AddArg(\"-help-debug\", \"Print help message with debugging options and exit\", false, OptionsCategory::DEBUG_TEST); // server-only for now\n+\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n     const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n     const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n@@ -334,14 +337,11 @@ void SetupServerArgs()\n     const auto regtestChainParams = CreateChainParams(CBaseChainParams::REGTEST);\n \n     // Hidden Options\n-    std::vector<std::string> hidden_args = {\"-h\", \"-help\",\n+    std::vector<std::string> hidden_args = {\n         \"-dbcrashratio\", \"-forcecompactdb\",\n         // GUI args. These will be overwritten by SetupUIArgs for the GUI\n         \"-allowselfsignedrootcertificates\", \"-choosedatadir\", \"-lang=<lang>\", \"-min\", \"-resetguisettings\", \"-rootcertificates=<file>\", \"-splash\", \"-uiplatform\"};\n \n-    // Set all of the args and their help\n-    // When adding new options to the categories, please keep and ensure alphabetical ordering.\n-    gArgs.AddArg(\"-?\", \"Print this help message and exit\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-version\", \"Print version and exit\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-alertnotify=<cmd>\", \"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-assumevalid=<hex>\", strprintf(\"If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)\", defaultChainParams->GetConsensus().defaultAssumeValid.GetHex(), testnetChainParams->GetConsensus().defaultAssumeValid.GetHex()), false, OptionsCategory::OPTIONS);\n@@ -470,7 +470,6 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: -nodebug, supplying <category> is optional). \"\n         \"If <category> is not supplied or if <category> = 1, output all debugging information. <category> can be: \" + ListLogCategories() + \".\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-debugexclude=<category>\", strprintf(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except one or more specified categories.\"), false, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-help-debug\", \"Print help message with debugging options and exit\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), true, OptionsCategory::DEBUG_TEST);"
      },
      {
        "sha": "27ed24d01223e8c1269f34d035506f2a03982fe7",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -635,6 +635,12 @@ bool HelpRequested(const ArgsManager& args)\n     return args.IsArgSet(\"-?\") || args.IsArgSet(\"-h\") || args.IsArgSet(\"-help\") || args.IsArgSet(\"-help-debug\");\n }\n \n+void SetupHelpOptions(ArgsManager& args)\n+{\n+    args.AddArg(\"-?\", \"Print this help message and exit\", false, OptionsCategory::OPTIONS);\n+    args.AddHiddenArgs({\"-h\", \"-help\"});\n+}\n+\n static const int screenWidth = 79;\n static const int optIndent = 2;\n static const int msgIndent = 7;"
      },
      {
        "sha": "54d4cf2e58b738ded4e4cc528a9c006b54ba5083",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a99999cc04c2e7d79bb841fd954c84e985ed3b88/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=a99999cc04c2e7d79bb841fd954c84e985ed3b88",
        "patch": "@@ -295,6 +295,9 @@ extern ArgsManager gArgs;\n  */\n bool HelpRequested(const ArgsManager& args);\n \n+/** Add help options to the args manager */\n+void SetupHelpOptions(ArgsManager& args);\n+\n /**\n  * Format a string to be used as group of options in help messages\n  *"
      }
    ]
  }
]