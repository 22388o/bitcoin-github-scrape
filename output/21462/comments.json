[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/801431851",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-801431851",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 801431851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTQzMTg1MQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-17T20:46:31Z",
    "updated_at": "2021-04-09T00:21:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/801431851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/816340336",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-816340336",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 816340336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNjM0MDMzNg==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-09T01:36:01Z",
    "updated_at": "2021-04-09T01:36:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps we can test this by doing a trial run? I've PR'ed my attestations of 5da0e361b8b5a6d730a244e774c6810946619229 here: https://github.com/bitcoin-core/guix.sigs/pull/1\r\n\r\nWhat I did:\r\n- Run `guix-build`\r\n- Run `env GUIX_SIGS_REPO=<path/to/guix.sigs> SIGNER=0x96AB007F1A7ED999=dongcarl ./contrib/guix/guix-attest`\r\n\r\nOnce you've run `./contrib/guix/guix-attest`, you can verify against my signatures using:\r\n```\r\n$ env GUIX_SIGS_REPO=<path/to/guix.sigs> ./contrib/guix/guix-verify\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/816340336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817045364",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-817045364",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 817045364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzA0NTM2NA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-10T01:00:17Z",
    "updated_at": "2021-04-10T01:00:17Z",
    "author_association": "MEMBER",
    "body": "> I think it is possible when bitcoin-core/guix.sigs#1 is merged, no?\r\n\r\nThe PR doesn't have to be merged, you should be able to just fetch and checkout the branch you want to verify against.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817045364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817068909",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-817068909",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 817068909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzA2ODkwOQ==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-10T03:10:25Z",
    "updated_at": "2021-04-10T03:10:25Z",
    "author_association": "MEMBER",
    "body": "I have done a trial run through the attestation / verify steps as well. https://github.com/bitcoin-core/guix.sigs/pull/3.\r\n\r\nNote that for anyone attesting/verifying on macOS, the invocations of `find` and `xargs` used in the attestation script are not currently compatible with BSD `find` or `xargs`. I just swapped them out for `gfind` and `gxargs` for now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817068909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817840179",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-817840179",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 817840179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzg0MDE3OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-12T14:04:37Z",
    "updated_at": "2021-04-12T14:04:37Z",
    "author_association": "MEMBER",
    "body": "> Personally I'm not a big fan of using the word \"sign\" as it's been used to refer to both codesigning and GPG signing.\r\n\r\nI tend to agree, \"gitian signature\" has always been somewhat ambiguous and confusing, attestation is a better word.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817840179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817857040",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-817857040",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 817857040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzg1NzA0MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-12T14:24:36Z",
    "updated_at": "2021-04-12T14:24:36Z",
    "author_association": "MEMBER",
    "body": "FWIW: I have a multi-step flow:\r\n\r\n- On the build VM, `gitian-sign` with `-p true` to generate `.assert` files but bypass the actual signing\r\n- Copy `.assert` files to signing machine\r\n- On signing machine, generate detached signatures and check them into git\r\n\r\nI'm not sure how far it is reasonable to accommodate my specific way of working (though there may be more people doing this, it's good to be careful with signing keys). But it would be nice to be able to skip the `gpg` invocation in `guix-attest`.\r\n\r\nFor checking gitian signatures, I have been using my own script for this as well, see:\r\nbitcoin-core/bitcoin-maintainer-tools#71 bitcoin-core/bitcoin-maintainer-tools#90 . I think I can straightforwardly adapt it to Guix attestations when needed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/817857040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/818287891",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-818287891",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 818287891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxODI4Nzg5MQ==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-12T22:36:25Z",
    "updated_at": "2021-04-12T22:39:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pushed 5da0e361b8b5a6d730a244e774c6810946619229 -> 0c238fd118742d6c059dc114b5cc0747adf7f6c5\r\n- Added commits to address:\r\n  - https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-817068909\r\n  - https://github.com/bitcoin/bitcoin/pull/21462#discussion_r611083278\r\n  - https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-817857040\r\n\r\nlaanwj: Please let me know if the `NO_SIGN` flag is enough for your workflow!\r\n\r\nMy attestations: https://github.com/dongcarl/guix.sigs/commit/fb313a28a57dc7020309b1521cef0b783d3ca81f",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/818287891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819386255",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-819386255",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 819386255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTM4NjI1NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-14T09:44:13Z",
    "updated_at": "2021-04-14T09:44:13Z",
    "author_association": "MEMBER",
    "body": "> laanwj: Please let me know if the NO_SIGN flag is enough for your workflow!\r\n\r\nYes seems perfect!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819386255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819619977",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-819619977",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 819619977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTYxOTk3Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-14T15:44:19Z",
    "updated_at": "2021-04-14T15:44:19Z",
    "author_association": "MEMBER",
    "body": "I succeeded in generating attestations and signing them externally after removing the above checks and\r\n```bash\r\nGUIX_SIGS_REPO=/home/guest/guix.sigs SIGNER=laanwj NO_SIGN=1 contrib/guix/guix-attest\r\n```\r\n\r\nMy only comment really is that having one attestation file per architecture means having to create a lot of signatures. I need to push the button on my external signer device for every one of them :smile: ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819619977/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819641975",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-819641975",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 819641975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTY0MTk3NQ==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-14T16:15:14Z",
    "updated_at": "2021-04-14T16:15:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pushed 0c238fd118742d6c059dc114b5cc0747adf7f6c5 -> 816c70c3cef2dde50436461f3fe43f8915840a26\r\n- Addressed https://github.com/bitcoin/bitcoin/pull/21462#pullrequestreview-635756951\r\n- Addressed https://github.com/bitcoin/bitcoin/pull/21462#pullrequestreview-635757547",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819641975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819829454",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-819829454",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 819829454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTgyOTQ1NA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-14T21:01:45Z",
    "updated_at": "2021-04-14T22:28:06Z",
    "author_association": "MEMBER",
    "body": "Building 816c70c3cef2dde50436461f3fe43f8915840a26\r\n\r\nEDIT: see attestation result https://github.com/bitcoin-core/guix.sigs/pull/5",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/819829454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820388953",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820388953",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820388953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDM4ODk1Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T12:37:17Z",
    "updated_at": "2021-04-15T12:37:17Z",
    "author_association": "MEMBER",
    "body": "Tested ACK 816c70c3cef2dde50436461f3fe43f8915840a26\r\nResults at bitcoin-core/guix.sigs#4",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820388953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820646505",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820646505",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820646505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY0NjUwNQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T18:33:47Z",
    "updated_at": "2021-04-15T19:00:34Z",
    "author_association": "MEMBER",
    "body": "~~Tested ACK 816c70c3cef2dde50436461f3fe43f8915840a26~~. I tried building, attesting, and verifying (as well as testing that verification fails with invalid signature).\r\n\r\nAs a follow-up, I think the output of guix-verify could be improved a bit (giving a global success/fail output, and perhaps grouping the output by signer).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820646505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820661221",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820661221",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820661221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY2MTIyMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T18:58:32Z",
    "updated_at": "2021-04-15T18:58:46Z",
    "author_association": "MEMBER",
    "body": "Actually, I think it would be better if the signed data contained a stronger commitment to the source code it was built from than just a truncated git commit id.\r\n\r\nAttestations are really claims by the builder that certain input source code corresponds to the resulting build output. As the gpg-signed SHA256SUMS file doesn't actually commit the source code, someone could try to grind git commit ids to a collide with honest source code, get signers to accidentally guix attest the malicious source code, and then distribute the malicious build output along with a claim it was built from honest source code.\r\n\r\nA possibility would be including the dist-archive source tgz in every SHA256SUMS file.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820661221/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820667353",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820667353",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820667353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY2NzM1Mw==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T19:09:14Z",
    "updated_at": "2021-04-15T19:09:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "You're right, attesting to truncated git commit ids by themselves is problematic and we should attest to the source code as well. I'm wondering what specific malicious activity can be thwarted by attesting to the source tgz in every SHA256SUMS file vs. attesting to it in `dist-archive/$SIGNER/SHA256SUMS` like we do now?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820667353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820668031",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820668031",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820668031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY2ODAzMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T19:10:24Z",
    "updated_at": "2021-04-15T19:10:24Z",
    "author_association": "MEMBER",
    "body": "@dongcarl You can selectively combine (dist-archive/$SIGNER/SHA256SUMS from the honest source code, binary-platform/$SIGNER/SHA256SUMS from the malicious one).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820668031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820670724",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820670724",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820670724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY3MDcyNA==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T19:14:59Z",
    "updated_at": "2021-04-15T19:14:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let's say we do attest to the source tgz in every SHA256SUMS file. If I were a malicious signer, I could still manually construct the SHA256SUMS to attest to honest source code and malicious binaries, no?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820670724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820671879",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820671879",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820671879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY3MTg3OQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T19:16:35Z",
    "updated_at": "2021-04-15T19:30:55Z",
    "author_association": "MEMBER",
    "body": "@dongcarl You can't modify the SHA256SUMS without invalidating its signatures. The signatures are per-SHA256SUMS-file, so you can mix and match different SHA256SUMS files, but you can't mix and match lines within one file.\r\n\r\nI'm not talking about a malicious signer. I'm talking about for example someone creating a PR with a hidden backdoor (which never gets merged or even reviewed) that leads to a collision in the short git commit id with honest code, and then they get *honest* signers to produce an attested guix build for that. They can then take the dist-archive SHA256SUMS + honest sigs on it from the good source code, and the x86_64 SHA256SUMS file + its (honestly created) sigs on the malicious code.\r\n\r\nMy point is: a guix attestation isn't and shouldn't be interpreted as the builder/attester vouching for the code they are building - we have the review process for that. It is purely a statement that particular source code (good or bad) corresponds to particular binaries, and in order to do so with cryptographic assurances, the SHA256SUMS file (or whatever is signed) needs to commit to both the input and the output of the build process.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820671879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820686179",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820686179",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820686179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY4NjE3OQ==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T19:42:36Z",
    "updated_at": "2021-04-15T19:42:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> They can then take the dist-archive SHA256SUMS + honest sigs on it from the good source code, and the x86_64 SHA256SUMS file + its (honestly created) sigs on the malicious code.\r\n\r\nOkay I see... And if the malicious person combines them, they can make it seem like the honest signer is producing malicious code... Am I understanding that right?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820686179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820686980",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820686980",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820686980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY4Njk4MA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T19:44:02Z",
    "updated_at": "2021-04-15T19:44:02Z",
    "author_association": "MEMBER",
    "body": "Right, they can then make a distribution of the software along with SHA256SUMS{,.asc} with malicious binaries and honest source code, signed by honest signers.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820686980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820688480",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820688480",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820688480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY4ODQ4MA==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T19:47:02Z",
    "updated_at": "2021-04-15T19:47:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah that makes sense! Thanks for spotting it and being patient with me. I will make the changes :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820688480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820689746",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-820689746",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 820689746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDY4OTc0Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-15T19:49:27Z",
    "updated_at": "2021-04-15T19:49:58Z",
    "author_association": "MEMBER",
    "body": "So, if you'd want to do this exactly, I think you'd want to have a build process that first creates the dist-archive, and then afterwards builds the binaries, using just the dist-archive output as input (rather than the source tree you were working on).\r\n\r\nPerhaps something for later, as you obviously trust the guix build scripts themselves not to do anything crazy here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/820689746/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/821167872",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-821167872",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 821167872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTE2Nzg3Mg==",
    "user": {
      "login": "Emzy",
      "id": 1223908,
      "node_id": "MDQ6VXNlcjEyMjM5MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1223908?u=66477849292f33a9134f23b8d8000f0492d591b3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Emzy",
      "html_url": "https://github.com/Emzy",
      "followers_url": "https://api.github.com/users/Emzy/followers",
      "following_url": "https://api.github.com/users/Emzy/following{/other_user}",
      "gists_url": "https://api.github.com/users/Emzy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Emzy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Emzy/subscriptions",
      "organizations_url": "https://api.github.com/users/Emzy/orgs",
      "repos_url": "https://api.github.com/users/Emzy/repos",
      "events_url": "https://api.github.com/users/Emzy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Emzy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-16T13:18:33Z",
    "updated_at": "2021-04-16T13:18:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested ACK.\r\nWorks with Yubikey as signing device.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/821167872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823582223",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-823582223",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 823582223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzU4MjIyMw==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-20T20:33:48Z",
    "updated_at": "2021-04-20T22:02:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pushed 816c70c3cef2dde50436461f3fe43f8915840a26 -> 7cd57f3ac308ba296842289542b15e902f105964\r\n- The build output is now constructed in $DISTSRC/output, then moved (likely atomically) to $OUTDIR when everything is done\r\n- Inputs are now attested to, thanks to sipa's suggestions\r\n\r\nPlease see commit messages for more explanations.\r\n\r\nSignatures up here: https://github.com/dongcarl/guix.sigs/tree/2021-04-PR21462/7cd57f3ac308",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823582223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828570998",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-828570998",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 828570998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyODU3MDk5OA==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-28T15:55:46Z",
    "updated_at": "2021-04-28T15:55:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wondering if the latest changes look alright, and what else needs fixing up here before it's ready for merge!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828570998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831142339",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-831142339",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 831142339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTE0MjMzOQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-03T09:33:18Z",
    "updated_at": "2021-05-03T09:33:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n\ud83d\udd75\ufe0f @practicalswift has been requested to review this pull request as specified in the REVIEWERS file.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831142339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831459776",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-831459776",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 831459776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMTQ1OTc3Ng==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-03T18:50:23Z",
    "updated_at": "2021-05-03T18:50:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pushed 7cd57f3ac308ba296842289542b15e902f105964 -> feda2c8e3180cb983c35976d4440cea23a155b7f\r\n- Addressed: https://github.com/bitcoin/bitcoin/pull/21462#discussion_r623755390, https://github.com/bitcoin/bitcoin/pull/21462#discussion_r623770745 (see last commit)\r\n\r\nAs always, guix.sigs are up at: https://github.com/dongcarl/guix.sigs/tree/2021-04-PR21462/feda2c8e3180",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/831459776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832052492",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-832052492",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 832052492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjA1MjQ5Mg==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-04T15:56:41Z",
    "updated_at": "2021-05-04T15:56:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pushed feda2c8e31..d420e5c1c0:\r\n- Added an ERR trap to remove incomplete sigdirs if signing fails\r\n\r\nguix.sigs up at: https://github.com/dongcarl/guix.sigs/tree/2021-04-PR21462/d420e5c1c015",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832052492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832973942",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-832973942",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 832973942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjk3Mzk0Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-05T20:09:04Z",
    "updated_at": "2021-05-05T20:12:22Z",
    "author_association": "MEMBER",
    "body": "Tested ACK\r\nI get the same output.\r\n```\r\nfor x in *; do diff -du $x/dongcarl/SHA256SUMS $x/laanwj/SHA256SUMS; done\r\n```\r\nWould it be useful to have a concatenated SHA256SUMS (with all files) as well? I mean, depending on how we're going to do the distribution on the website and torrent. \r\n\r\nI guess if we're redesigning this it makes sense to have the two match up, not sign a different file with the 'distribution signing key' anymore but the same one (or forego my distribution signing key completely, just collect the attestations).\r\n\r\nOr is the idea is to start using a subdirectory per platform there (each with its own SHA256SUMS) too? In this case, having `inputs/bitcoin-d420e5c1c015.tar.gz` in every one might not be practical, it implies having to duplicate the tarball . Maybe `../bitcoin-d420e5c1c015.tar.gz` then have the tarball in the top-level directory?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832973942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834726762",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-834726762",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 834726762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNDcyNjc2Mg==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-07T19:41:39Z",
    "updated_at": "2021-05-07T19:41:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Or is the idea is to start using a subdirectory per platform there (each with its own SHA256SUMS) too? In this case, having `inputs/bitcoin-d420e5c1c015.tar.gz` in every one might not be practical, it implies having to duplicate the tarball .\r\n\r\nHmmm, are you talking about for the webserver? I think it can be done using hard/symlinks at the FS level, or just using virtualized paths at the HTTP level.\r\n\r\nWondering what particular user-flow you have in mind :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/834726762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/839691607",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#issuecomment-839691607",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21462",
    "id": 839691607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTY5MTYwNw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-12T11:20:31Z",
    "updated_at": "2021-05-12T11:20:31Z",
    "author_association": "MEMBER",
    "body": "Code review and tested ACK d420e5c1c015f58d07aca4d6a805086488f74d03\r\n\r\n> Wondering what particular user-flow you have in mind :-)\r\n\r\nAfter discussion on IRC: let's leave this for another PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/839691607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611083278",
    "pull_request_review_id": 632946596,
    "id": 611083278,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA4MzI3OA==",
    "diff_hunk": "@@ -0,0 +1,170 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find gpg\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> \\\\\n+        SIGNER=GPG_KEY_NAME[=SIGNER_NAME] \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example w/o overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/dongcarl/guix.sigs \\\\\n+        SIGNER=0x96AB007F1A7ED999=dongcarl \\\\\n+      ./contrib/guix/guix-attest\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ] || [ -z \"$SIGNER\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+################\n+# The key specified in SIGNER should be usable\n+################\n+\n+IFS='=' read -r gpg_key_name signer_name <<< \"$SIGNER\"\n+if [ -z \"${signer_name}\" ]; then\n+    signer_name=\"$gpg_key_name\"\n+fi\n+\n+if ! gpg --dry-run --list-secret-keys \"${gpg_key_name}\" >/dev/null 2>&1; then\n+    echo \"ERR: GPG can't seem to find any key named '${gpg_key_name}'\"\n+    exit 1\n+fi\n+\n+################\n+# We should be able to find at least one output\n+################\n+\n+echo \"Looking for build output directories in ${OUTDIR_BASE}\"\n+\n+shopt -s nullglob\n+OUTDIRS=( \"${OUTDIR_BASE}\"/* ) # This expands to an array of directories...\n+shopt -u nullglob\n+\n+if (( ${#OUTDIRS[@]} )); then\n+    echo \"Found build output directories:\"\n+    for outdir in \"${OUTDIRS[@]}\"; do\n+        echo \"    '$outdir'\"\n+    done\n+    echo\n+else\n+    echo \"ERR: Could not find any build output directories in ${OUTDIR_BASE}\"\n+    exit 1\n+fi\n+\n+\n+##############\n+##  Attest  ##\n+##############\n+\n+# Usage: out_name $outdir\n+#\n+#   HOST: The output directory being attested\n+#\n+out_name() {\n+    basename \"$1\"\n+}\n+\n+# Usage: out_sig_dir $outdir\n+#\n+#   outdir: The output directory being attested\n+#\n+out_sig_dir() {\n+    echo \"$GUIX_SIGS_REPO/$VERSION/$(out_name \"$1\")/$signer_name\"\n+}\n+\n+# Accumulate a list of signature directories that already exist...\n+outdirs_already_attested_to=()\n+\n+echo \"Attesting to build outputs for version: '${VERSION}'\"\n+echo \"\"\n+\n+# MAIN LOGIC: Loop through each output for VERSION and attest to output in\n+#             GUIX_SIGS_REPO as SIGNERif attestation does not exist\n+for outdir in \"${OUTDIRS[@]}\"; do\n+    outname=\"$(out_name \"$outdir\")\"\n+    outsigdir=\"$(out_sig_dir \"$outdir\")\"\n+    if [ -e \"$outsigdir\" ]; then\n+        echo \"${outname}: SKIPPING: Signature directory already exists in the specified guix.sigs repository\"\n+        outdirs_already_attested_to+=(\"$outdir\")\n+    else\n+        mkdir -p \"$outsigdir\"\n+        echo \"${outname}: Hashing build outputs to produce SHA256SUMS\"\n+        (\n+            cd \"$outdir\"\n+            find . -type f -printf '%P\\0' | env LC_ALL=C sort -z | xargs -r0 sha256sum >> \"$outsigdir\"/SHA256SUMS\n+        )\n+        echo \"${outname}: Signing SHA256SUMS to produce SHA256SUMS.asc\"\n+        gpg --detach-sign --local-user \"$gpg_key_name\" --output \"$outsigdir\"/SHA256SUMS.asc \"$outsigdir\"/SHA256SUMS",
    "path": "contrib/guix/guix-attest",
    "position": null,
    "original_position": 151,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "8dd3c4a7ce9ac744668517a365cf8757713e7e7a",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you're producing .asc files I think it would be expected that they're ascii-armored (`--armor`); otherwise use the .sig extension (this doesn't really matter, but it's a convention).\r\n\r\n",
    "created_at": "2021-04-10T19:20:29Z",
    "updated_at": "2021-05-04T15:55:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r611083278",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611083278"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r611083278"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611083278/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 151,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613348311",
    "pull_request_review_id": 635756951,
    "id": 613348311,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzM0ODMxMQ==",
    "diff_hunk": "@@ -0,0 +1,188 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find gpg",
    "path": "contrib/guix/guix-attest",
    "position": null,
    "original_position": 21,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "0c238fd118742d6c059dc114b5cc0747adf7f6c5",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`gpg` check can be skipped in case of `NO_SIGN`?",
    "created_at": "2021-04-14T15:24:22Z",
    "updated_at": "2021-05-04T15:55:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r613348311",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613348311"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r613348311"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613348311/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 21,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613348725",
    "pull_request_review_id": 635757547,
    "id": 613348725,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzM0ODcyNQ==",
    "diff_hunk": "@@ -0,0 +1,188 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find gpg\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> \\\\\n+        SIGNER=GPG_KEY_NAME[=SIGNER_NAME] \\\\\n+        [ NO_SIGN=1 ]\n+      ./contrib/guix/guix-attest\n+\n+Example w/o overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/dongcarl/guix.sigs \\\\\n+        SIGNER=0x96AB007F1A7ED999=dongcarl \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example w/o signing, just creating SHA256SUMS:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+        NO_SIGN=1 \\\\\n+      ./contrib/guix/guix-attest\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ] || [ -z \"$SIGNER\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+################\n+# The key specified in SIGNER should be usable\n+################\n+\n+IFS='=' read -r gpg_key_name signer_name <<< \"$SIGNER\"\n+if [ -z \"${signer_name}\" ]; then\n+    signer_name=\"$gpg_key_name\"\n+fi\n+\n+if ! gpg --dry-run --list-secret-keys \"${gpg_key_name}\" >/dev/null 2>&1; then",
    "path": "contrib/guix/guix-attest",
    "position": null,
    "original_position": 90,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "0c238fd118742d6c059dc114b5cc0747adf7f6c5",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This check can be skipped in case of NO_SIGN",
    "created_at": "2021-04-14T15:24:52Z",
    "updated_at": "2021-05-04T15:55:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r613348725",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613348725"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r613348725"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613348725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 90,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623755390",
    "pull_request_review_id": 649058243,
    "id": 623755390,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzc1NTM5MA==",
    "diff_hunk": "@@ -0,0 +1,198 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find\n+if [ -z \"$NO_SIGN\" ]; then\n+    check_tools gpg\n+fi\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> \\\\\n+        SIGNER=GPG_KEY_NAME[=SIGNER_NAME] \\\\\n+        [ NO_SIGN=1 ]\n+      ./contrib/guix/guix-attest\n+\n+Example w/o overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/dongcarl/guix.sigs \\\\\n+        SIGNER=0x96AB007F1A7ED999=dongcarl \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example w/o signing, just creating SHA256SUMS:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+        NO_SIGN=1 \\\\\n+      ./contrib/guix/guix-attest\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ] || [ -z \"$SIGNER\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+################\n+# The key specified in SIGNER should be usable\n+################\n+\n+IFS='=' read -r gpg_key_name signer_name <<< \"$SIGNER\"\n+if [ -z \"${signer_name}\" ]; then\n+    signer_name=\"$gpg_key_name\"\n+fi\n+\n+if [ -z \"$NO_SIGN\" ] && ! gpg --dry-run --list-secret-keys \"${gpg_key_name}\" >/dev/null 2>&1; then\n+    echo \"ERR: GPG can't seem to find any key named '${gpg_key_name}'\"\n+    exit 1\n+fi\n+\n+################\n+# We should be able to find at least one output\n+################\n+\n+echo \"Looking for build output directories in ${OUTDIR_BASE}\"\n+\n+shopt -s nullglob\n+OUTDIRS=( \"${OUTDIR_BASE}\"/* ) # This expands to an array of directories...\n+shopt -u nullglob\n+\n+if (( ${#OUTDIRS[@]} )); then\n+    echo \"Found build output directories:\"\n+    for outdir in \"${OUTDIRS[@]}\"; do\n+        echo \"    '$outdir'\"\n+    done\n+    echo\n+else\n+    echo \"ERR: Could not find any build output directories in ${OUTDIR_BASE}\"\n+    exit 1\n+fi\n+\n+\n+##############\n+##  Attest  ##\n+##############\n+\n+# Usage: out_name $outdir\n+#\n+#   HOST: The output directory being attested\n+#\n+out_name() {\n+    basename \"$1\"\n+}\n+\n+# Usage: out_sig_dir $outdir\n+#\n+#   outdir: The output directory being attested\n+#\n+out_sig_dir() {\n+    echo \"$GUIX_SIGS_REPO/$VERSION/$(out_name \"$1\")/$signer_name\"\n+}\n+\n+# Accumulate a list of signature directories that already exist...\n+outdirs_already_attested_to=()\n+\n+echo \"Attesting to build outputs for version: '${VERSION}'\"\n+echo \"\"\n+\n+# MAIN LOGIC: Loop through each output for VERSION and attest to output in\n+#             GUIX_SIGS_REPO as SIGNERif attestation does not exist",
    "path": "contrib/guix/guix-attest",
    "position": null,
    "original_position": 147,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "7cd57f3ac308ba296842289542b15e902f105964",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "8dd3c4a7ce9ac744668517a365cf8757713e7e7a: \r\n```suggestion\r\n#             GUIX_SIGS_REPO as SIGNER, if attestation does not exist\r\n```",
    "created_at": "2021-04-30T09:49:59Z",
    "updated_at": "2021-05-04T15:55:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r623755390",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623755390"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r623755390"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623755390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 147,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623770745",
    "pull_request_review_id": 649058243,
    "id": 623770745,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzc3MDc0NQ==",
    "diff_hunk": "@@ -153,10 +153,17 @@ for outdir in \"${OUTDIRS[@]}\"; do\n         outdirs_already_attested_to+=(\"$outdir\")\n     else\n         mkdir -p \"$outsigdir\"\n-        echo \"${outname}: Hashing build outputs to produce SHA256SUMS\"\n+\n         (\n             cd \"$outdir\"\n-            files=\"$(find . -type f)\"\n+\n+            if [ -e inputs.SHA256SUMS ]; then\n+                echo \"${outname}: Including existent input SHA256SUMS\"\n+                cat inputs.SHA256SUMS >> \"$outsigdir\"/SHA256SUMS\n+            fi",
    "path": "contrib/guix/guix-attest",
    "position": 170,
    "original_position": 13,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "7cd57f3ac308ba296842289542b15e902f105964",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "shouldn't this fail when the file is missing?",
    "created_at": "2021-04-30T10:17:08Z",
    "updated_at": "2021-05-04T15:55:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r623770745",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623770745"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r623770745"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/623770745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 170,
    "original_line": 167,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624067732",
    "pull_request_review_id": 649462532,
    "id": 624067732,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDA2NzczMg==",
    "diff_hunk": "@@ -153,10 +153,17 @@ for outdir in \"${OUTDIRS[@]}\"; do\n         outdirs_already_attested_to+=(\"$outdir\")\n     else\n         mkdir -p \"$outsigdir\"\n-        echo \"${outname}: Hashing build outputs to produce SHA256SUMS\"\n+\n         (\n             cd \"$outdir\"\n-            files=\"$(find . -type f)\"\n+\n+            if [ -e inputs.SHA256SUMS ]; then\n+                echo \"${outname}: Including existent input SHA256SUMS\"\n+                cat inputs.SHA256SUMS >> \"$outsigdir\"/SHA256SUMS\n+            fi",
    "path": "contrib/guix/guix-attest",
    "position": 170,
    "original_position": 13,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "7cd57f3ac308ba296842289542b15e902f105964",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thinking about this since `dist-archive` does not have an `inputs.SHA256SUMS`... Right now, we attest to the bitcoin repo's git-archive in `distsrc-archive`, but I think perhaps it only makes sense to attest to it in the context of it being inputs to the host-specific outputs. When we add codesignatures, similarly it only makes sense to attest to the detached-sigs repo's git-archive in the context of it being inputs to the host-specific codesigned outputs. Will make a change so that we don't attest to `dist-archive` directly.",
    "created_at": "2021-04-30T18:05:15Z",
    "updated_at": "2021-05-04T15:55:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r624067732",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624067732"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r624067732"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/624067732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 170,
    "original_line": 167,
    "side": "RIGHT",
    "in_reply_to_id": 623770745
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632379087",
    "pull_request_review_id": 659642075,
    "id": 632379087,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjM3OTA4Nw==",
    "diff_hunk": "@@ -0,0 +1,207 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find\n+if [ -z \"$NO_SIGN\" ]; then\n+    check_tools gpg\n+fi\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> \\\\\n+        SIGNER=GPG_KEY_NAME[=SIGNER_NAME] \\\\\n+        [ NO_SIGN=1 ]\n+      ./contrib/guix/guix-attest\n+\n+Example w/o overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/dongcarl/guix.sigs \\\\\n+        SIGNER=0x96AB007F1A7ED999=dongcarl \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example w/o signing, just creating SHA256SUMS:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+        NO_SIGN=1 \\\\\n+      ./contrib/guix/guix-attest\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ] || [ -z \"$SIGNER\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+################\n+# The key specified in SIGNER should be usable\n+################\n+\n+IFS='=' read -r gpg_key_name signer_name <<< \"$SIGNER\"\n+if [ -z \"${signer_name}\" ]; then\n+    signer_name=\"$gpg_key_name\"\n+fi\n+\n+if [ -z \"$NO_SIGN\" ] && ! gpg --dry-run --list-secret-keys \"${gpg_key_name}\" >/dev/null 2>&1; then\n+    echo \"ERR: GPG can't seem to find any key named '${gpg_key_name}'\"\n+    exit 1\n+fi\n+\n+################\n+# We should be able to find at least one output\n+################\n+\n+echo \"Looking for build output directories in ${OUTDIR_BASE}\"\n+\n+shopt -s nullglob\n+OUTDIRS=( \"${OUTDIR_BASE}\"/* ) # This expands to an array of directories...\n+shopt -u nullglob\n+\n+if (( ${#OUTDIRS[@]} )); then\n+    echo \"Found build output directories:\"\n+    for outdir in \"${OUTDIRS[@]}\"; do\n+        echo \"    '$outdir'\"\n+    done\n+    echo\n+else\n+    echo \"ERR: Could not find any build output directories in ${OUTDIR_BASE}\"\n+    exit 1\n+fi\n+\n+\n+##############\n+##  Attest  ##\n+##############\n+\n+# Usage: out_name $outdir\n+#\n+#   HOST: The output directory being attested\n+#\n+out_name() {\n+    basename \"$1\"\n+}\n+\n+# Usage: out_sig_dir $outdir\n+#\n+#   outdir: The output directory being attested\n+#\n+out_sig_dir() {\n+    echo \"$GUIX_SIGS_REPO/$VERSION/$(out_name \"$1\")/$signer_name\"\n+}\n+\n+# Accumulate a list of signature directories that already exist...\n+outdirs_already_attested_to=()\n+\n+echo \"Attesting to build outputs for version: '${VERSION}'\"\n+echo \"\"\n+\n+# MAIN LOGIC: Loop through each output for VERSION and attest to output in\n+#             GUIX_SIGS_REPO as SIGNER, if attestation does not exist\n+for outdir in \"${OUTDIRS[@]}\"; do\n+    if [ -e \"${outdir}/SKIPATTEST.TAG\" ]; then\n+        echo \"${outname}: SKIPPING: Output directory marked with SKIPATTEST.TAG file\"\n+        continue\n+    fi\n+    outname=\"$(out_name \"$outdir\")\"\n+    outsigdir=\"$(out_sig_dir \"$outdir\")\"\n+    if [ -e \"$outsigdir\" ]; then\n+        echo \"${outname}: SKIPPING: Signature directory already exists in the specified guix.sigs repository\"\n+        outdirs_already_attested_to+=(\"$outdir\")\n+    else\n+        # Clean up incomplete sigdir if something fails (likely gpg)\n+        trap 'rm -rf \"$outsigdir\"' ERR\n+\n+        mkdir -p \"$outsigdir\"\n+\n+        (\n+            cd \"$outdir\"\n+\n+            if [ -e inputs.SHA256SUMS ]; then\n+                echo \"${outname}: Including existent input SHA256SUMS\"\n+                cat inputs.SHA256SUMS >> \"$outsigdir\"/SHA256SUMS",
    "path": "contrib/guix/guix-attest",
    "position": 169,
    "original_position": 169,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This line fails with \"path not found\" on macOS when `GUIX_SIGS_REPO` is a relative path like `../guix.sigs`.",
    "created_at": "2021-05-14T08:43:25Z",
    "updated_at": "2021-05-14T09:13:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r632379087",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632379087"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r632379087"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632379087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 169,
    "original_line": 169,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632387721",
    "pull_request_review_id": 659642075,
    "id": 632387721,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjM4NzcyMQ==",
    "diff_hunk": "@@ -0,0 +1,207 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find\n+if [ -z \"$NO_SIGN\" ]; then\n+    check_tools gpg\n+fi\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> \\\\\n+        SIGNER=GPG_KEY_NAME[=SIGNER_NAME] \\\\\n+        [ NO_SIGN=1 ]\n+      ./contrib/guix/guix-attest\n+\n+Example w/o overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/dongcarl/guix.sigs \\\\\n+        SIGNER=0x96AB007F1A7ED999=dongcarl \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example w/o signing, just creating SHA256SUMS:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+        NO_SIGN=1 \\\\\n+      ./contrib/guix/guix-attest\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ] || [ -z \"$SIGNER\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+################\n+# The key specified in SIGNER should be usable\n+################\n+\n+IFS='=' read -r gpg_key_name signer_name <<< \"$SIGNER\"\n+if [ -z \"${signer_name}\" ]; then\n+    signer_name=\"$gpg_key_name\"\n+fi\n+\n+if [ -z \"$NO_SIGN\" ] && ! gpg --dry-run --list-secret-keys \"${gpg_key_name}\" >/dev/null 2>&1; then\n+    echo \"ERR: GPG can't seem to find any key named '${gpg_key_name}'\"\n+    exit 1\n+fi\n+\n+################\n+# We should be able to find at least one output\n+################\n+\n+echo \"Looking for build output directories in ${OUTDIR_BASE}\"\n+\n+shopt -s nullglob\n+OUTDIRS=( \"${OUTDIR_BASE}\"/* ) # This expands to an array of directories...\n+shopt -u nullglob\n+\n+if (( ${#OUTDIRS[@]} )); then\n+    echo \"Found build output directories:\"\n+    for outdir in \"${OUTDIRS[@]}\"; do\n+        echo \"    '$outdir'\"\n+    done\n+    echo\n+else\n+    echo \"ERR: Could not find any build output directories in ${OUTDIR_BASE}\"\n+    exit 1\n+fi\n+\n+\n+##############\n+##  Attest  ##\n+##############\n+\n+# Usage: out_name $outdir\n+#\n+#   HOST: The output directory being attested\n+#\n+out_name() {\n+    basename \"$1\"\n+}\n+\n+# Usage: out_sig_dir $outdir\n+#\n+#   outdir: The output directory being attested\n+#\n+out_sig_dir() {\n+    echo \"$GUIX_SIGS_REPO/$VERSION/$(out_name \"$1\")/$signer_name\"\n+}\n+\n+# Accumulate a list of signature directories that already exist...\n+outdirs_already_attested_to=()\n+\n+echo \"Attesting to build outputs for version: '${VERSION}'\"\n+echo \"\"\n+\n+# MAIN LOGIC: Loop through each output for VERSION and attest to output in\n+#             GUIX_SIGS_REPO as SIGNER, if attestation does not exist\n+for outdir in \"${OUTDIRS[@]}\"; do\n+    if [ -e \"${outdir}/SKIPATTEST.TAG\" ]; then\n+        echo \"${outname}: SKIPPING: Output directory marked with SKIPATTEST.TAG file\"\n+        continue\n+    fi\n+    outname=\"$(out_name \"$outdir\")\"\n+    outsigdir=\"$(out_sig_dir \"$outdir\")\"\n+    if [ -e \"$outsigdir\" ]; then\n+        echo \"${outname}: SKIPPING: Signature directory already exists in the specified guix.sigs repository\"\n+        outdirs_already_attested_to+=(\"$outdir\")\n+    else\n+        # Clean up incomplete sigdir if something fails (likely gpg)\n+        trap 'rm -rf \"$outsigdir\"' ERR\n+\n+        mkdir -p \"$outsigdir\"\n+\n+        (\n+            cd \"$outdir\"\n+\n+            if [ -e inputs.SHA256SUMS ]; then\n+                echo \"${outname}: Including existent input SHA256SUMS\"\n+                cat inputs.SHA256SUMS >> \"$outsigdir\"/SHA256SUMS\n+            fi\n+\n+            echo \"${outname}: Hashing build outputs to produce SHA256SUMS\"\n+            files=\"$(find -L . -type f ! -iname '*.SHA256SUMS')\"\n+            if [ -n \"$files\" ]; then\n+                cut -c3- <<< \"$files\" | env LC_ALL=C sort | xargs sha256sum >> \"$outsigdir\"/SHA256SUMS",
    "path": "contrib/guix/guix-attest",
    "position": 175,
    "original_position": 175,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "On macOS this needs to be `shasum -a 256` or the user has to make an alias or `brew install coreutils`",
    "created_at": "2021-05-14T08:58:31Z",
    "updated_at": "2021-05-14T09:13:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r632387721",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632387721"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r632387721"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632387721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 175,
    "original_line": 175,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632785006",
    "pull_request_review_id": 660192171,
    "id": 632785006,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjc4NTAwNg==",
    "diff_hunk": "@@ -0,0 +1,207 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find\n+if [ -z \"$NO_SIGN\" ]; then\n+    check_tools gpg\n+fi\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> \\\\\n+        SIGNER=GPG_KEY_NAME[=SIGNER_NAME] \\\\\n+        [ NO_SIGN=1 ]\n+      ./contrib/guix/guix-attest\n+\n+Example w/o overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/dongcarl/guix.sigs \\\\\n+        SIGNER=0x96AB007F1A7ED999=dongcarl \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example w/o signing, just creating SHA256SUMS:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+        NO_SIGN=1 \\\\\n+      ./contrib/guix/guix-attest\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ] || [ -z \"$SIGNER\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+################\n+# The key specified in SIGNER should be usable\n+################\n+\n+IFS='=' read -r gpg_key_name signer_name <<< \"$SIGNER\"\n+if [ -z \"${signer_name}\" ]; then\n+    signer_name=\"$gpg_key_name\"\n+fi\n+\n+if [ -z \"$NO_SIGN\" ] && ! gpg --dry-run --list-secret-keys \"${gpg_key_name}\" >/dev/null 2>&1; then\n+    echo \"ERR: GPG can't seem to find any key named '${gpg_key_name}'\"\n+    exit 1\n+fi\n+\n+################\n+# We should be able to find at least one output\n+################\n+\n+echo \"Looking for build output directories in ${OUTDIR_BASE}\"\n+\n+shopt -s nullglob\n+OUTDIRS=( \"${OUTDIR_BASE}\"/* ) # This expands to an array of directories...\n+shopt -u nullglob\n+\n+if (( ${#OUTDIRS[@]} )); then\n+    echo \"Found build output directories:\"\n+    for outdir in \"${OUTDIRS[@]}\"; do\n+        echo \"    '$outdir'\"\n+    done\n+    echo\n+else\n+    echo \"ERR: Could not find any build output directories in ${OUTDIR_BASE}\"\n+    exit 1\n+fi\n+\n+\n+##############\n+##  Attest  ##\n+##############\n+\n+# Usage: out_name $outdir\n+#\n+#   HOST: The output directory being attested\n+#\n+out_name() {\n+    basename \"$1\"\n+}\n+\n+# Usage: out_sig_dir $outdir\n+#\n+#   outdir: The output directory being attested\n+#\n+out_sig_dir() {\n+    echo \"$GUIX_SIGS_REPO/$VERSION/$(out_name \"$1\")/$signer_name\"\n+}\n+\n+# Accumulate a list of signature directories that already exist...\n+outdirs_already_attested_to=()\n+\n+echo \"Attesting to build outputs for version: '${VERSION}'\"\n+echo \"\"\n+\n+# MAIN LOGIC: Loop through each output for VERSION and attest to output in\n+#             GUIX_SIGS_REPO as SIGNER, if attestation does not exist\n+for outdir in \"${OUTDIRS[@]}\"; do\n+    if [ -e \"${outdir}/SKIPATTEST.TAG\" ]; then\n+        echo \"${outname}: SKIPPING: Output directory marked with SKIPATTEST.TAG file\"\n+        continue\n+    fi\n+    outname=\"$(out_name \"$outdir\")\"\n+    outsigdir=\"$(out_sig_dir \"$outdir\")\"\n+    if [ -e \"$outsigdir\" ]; then\n+        echo \"${outname}: SKIPPING: Signature directory already exists in the specified guix.sigs repository\"\n+        outdirs_already_attested_to+=(\"$outdir\")\n+    else\n+        # Clean up incomplete sigdir if something fails (likely gpg)\n+        trap 'rm -rf \"$outsigdir\"' ERR\n+\n+        mkdir -p \"$outsigdir\"\n+\n+        (\n+            cd \"$outdir\"\n+\n+            if [ -e inputs.SHA256SUMS ]; then\n+                echo \"${outname}: Including existent input SHA256SUMS\"\n+                cat inputs.SHA256SUMS >> \"$outsigdir\"/SHA256SUMS\n+            fi\n+\n+            echo \"${outname}: Hashing build outputs to produce SHA256SUMS\"\n+            files=\"$(find -L . -type f ! -iname '*.SHA256SUMS')\"\n+            if [ -n \"$files\" ]; then\n+                cut -c3- <<< \"$files\" | env LC_ALL=C sort | xargs sha256sum >> \"$outsigdir\"/SHA256SUMS",
    "path": "contrib/guix/guix-attest",
    "position": 175,
    "original_position": 175,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmmm, does `shasum -a 256` produce identical output to `sha256sum`?",
    "created_at": "2021-05-14T20:32:59Z",
    "updated_at": "2021-05-14T20:32:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r632785006",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632785006"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r632785006"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632785006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 175,
    "original_line": 175,
    "side": "RIGHT",
    "in_reply_to_id": 632387721
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632810858",
    "pull_request_review_id": 660220760,
    "id": 632810858,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMjgxMDg1OA==",
    "diff_hunk": "@@ -0,0 +1,207 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Source the common prelude, which:\n+#   1. Checks if we're at the top directory of the Bitcoin Core repository\n+#   2. Defines a few common functions and variables\n+#\n+# shellcheck source=libexec/prelude.bash\n+source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n+\n+\n+###################\n+## Sanity Checks ##\n+###################\n+\n+################\n+# Required non-builtin commands should be invokable\n+################\n+\n+check_tools cat env basename mkdir xargs find\n+if [ -z \"$NO_SIGN\" ]; then\n+    check_tools gpg\n+fi\n+\n+################\n+# Required env vars should be non-empty\n+################\n+\n+cmd_usage() {\n+cat <<EOF\n+Synopsis:\n+\n+    env GUIX_SIGS_REPO=<path/to/guix.sigs> \\\\\n+        SIGNER=GPG_KEY_NAME[=SIGNER_NAME] \\\\\n+        [ NO_SIGN=1 ]\n+      ./contrib/guix/guix-attest\n+\n+Example w/o overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example overriding signing name:\n+\n+    env GUIX_SIGS_REPO=/home/dongcarl/guix.sigs \\\\\n+        SIGNER=0x96AB007F1A7ED999=dongcarl \\\\\n+      ./contrib/guix/guix-attest\n+\n+Example w/o signing, just creating SHA256SUMS:\n+\n+    env GUIX_SIGS_REPO=/home/achow101/guix.sigs \\\\\n+        SIGNER=achow101 \\\\\n+        NO_SIGN=1 \\\\\n+      ./contrib/guix/guix-attest\n+\n+EOF\n+}\n+\n+if [ -z \"$GUIX_SIGS_REPO\" ] || [ -z \"$SIGNER\" ]; then\n+    cmd_usage\n+    exit 1\n+fi\n+\n+################\n+# GUIX_SIGS_REPO should exist as a directory\n+################\n+\n+if [ ! -d \"$GUIX_SIGS_REPO\" ]; then\n+cat << EOF\n+ERR: The specified GUIX_SIGS_REPO is not an existent directory:\n+\n+    '$GUIX_SIGS_REPO'\n+\n+Hint: Please clone the guix.sigs repository and point to it with the\n+      GUIX_SIGS_REPO environment variable.\n+\n+EOF\n+cmd_usage\n+exit 1\n+fi\n+\n+################\n+# The key specified in SIGNER should be usable\n+################\n+\n+IFS='=' read -r gpg_key_name signer_name <<< \"$SIGNER\"\n+if [ -z \"${signer_name}\" ]; then\n+    signer_name=\"$gpg_key_name\"\n+fi\n+\n+if [ -z \"$NO_SIGN\" ] && ! gpg --dry-run --list-secret-keys \"${gpg_key_name}\" >/dev/null 2>&1; then\n+    echo \"ERR: GPG can't seem to find any key named '${gpg_key_name}'\"\n+    exit 1\n+fi\n+\n+################\n+# We should be able to find at least one output\n+################\n+\n+echo \"Looking for build output directories in ${OUTDIR_BASE}\"\n+\n+shopt -s nullglob\n+OUTDIRS=( \"${OUTDIR_BASE}\"/* ) # This expands to an array of directories...\n+shopt -u nullglob\n+\n+if (( ${#OUTDIRS[@]} )); then\n+    echo \"Found build output directories:\"\n+    for outdir in \"${OUTDIRS[@]}\"; do\n+        echo \"    '$outdir'\"\n+    done\n+    echo\n+else\n+    echo \"ERR: Could not find any build output directories in ${OUTDIR_BASE}\"\n+    exit 1\n+fi\n+\n+\n+##############\n+##  Attest  ##\n+##############\n+\n+# Usage: out_name $outdir\n+#\n+#   HOST: The output directory being attested\n+#\n+out_name() {\n+    basename \"$1\"\n+}\n+\n+# Usage: out_sig_dir $outdir\n+#\n+#   outdir: The output directory being attested\n+#\n+out_sig_dir() {\n+    echo \"$GUIX_SIGS_REPO/$VERSION/$(out_name \"$1\")/$signer_name\"\n+}\n+\n+# Accumulate a list of signature directories that already exist...\n+outdirs_already_attested_to=()\n+\n+echo \"Attesting to build outputs for version: '${VERSION}'\"\n+echo \"\"\n+\n+# MAIN LOGIC: Loop through each output for VERSION and attest to output in\n+#             GUIX_SIGS_REPO as SIGNER, if attestation does not exist\n+for outdir in \"${OUTDIRS[@]}\"; do\n+    if [ -e \"${outdir}/SKIPATTEST.TAG\" ]; then\n+        echo \"${outname}: SKIPPING: Output directory marked with SKIPATTEST.TAG file\"\n+        continue\n+    fi\n+    outname=\"$(out_name \"$outdir\")\"\n+    outsigdir=\"$(out_sig_dir \"$outdir\")\"\n+    if [ -e \"$outsigdir\" ]; then\n+        echo \"${outname}: SKIPPING: Signature directory already exists in the specified guix.sigs repository\"\n+        outdirs_already_attested_to+=(\"$outdir\")\n+    else\n+        # Clean up incomplete sigdir if something fails (likely gpg)\n+        trap 'rm -rf \"$outsigdir\"' ERR\n+\n+        mkdir -p \"$outsigdir\"\n+\n+        (\n+            cd \"$outdir\"\n+\n+            if [ -e inputs.SHA256SUMS ]; then\n+                echo \"${outname}: Including existent input SHA256SUMS\"\n+                cat inputs.SHA256SUMS >> \"$outsigdir\"/SHA256SUMS\n+            fi\n+\n+            echo \"${outname}: Hashing build outputs to produce SHA256SUMS\"\n+            files=\"$(find -L . -type f ! -iname '*.SHA256SUMS')\"\n+            if [ -n \"$files\" ]; then\n+                cut -c3- <<< \"$files\" | env LC_ALL=C sort | xargs sha256sum >> \"$outsigdir\"/SHA256SUMS",
    "path": "contrib/guix/guix-attest",
    "position": 175,
    "original_position": 175,
    "commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "original_commit_id": "d420e5c1c015f58d07aca4d6a805086488f74d03",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If my uploaded attestation is correct, yes :-)",
    "created_at": "2021-05-14T21:12:27Z",
    "updated_at": "2021-05-14T21:12:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r632810858",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632810858"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21462#discussion_r632810858"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21462"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/632810858/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 175,
    "original_line": 175,
    "side": "RIGHT",
    "in_reply_to_id": 632387721
  }
]