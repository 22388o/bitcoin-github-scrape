laanwj,2016-10-19T14:12:29Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-254824807,254824807,
pedrobranco,2016-10-19T14:24:22Z,WDYT of adding new options like `maximumAmount` (which ables to define a range with `minimumAmount`) or maybe `sumAmount` (return unspents until the respective sum is bigger than `sumAmount`) ?\n,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-254828344,254828344,
laanwj,2016-10-19T15:39:23Z,"Yes, would make sense. Passing the JSON ""query object"" is a good idea.\n",https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-254851868,254851868,
pedrobranco,2016-10-19T17:01:52Z,"~~I'm willing to implement~~ I've also implemented `maximumAmount`, `minimumSumAmount` and `maximumCount` options.\n\n`minimumAmount` and `maximumAmount` are options to **filter** unspents, but `maximumCount` and `minimumSumAmount` are **grouping** options which returns unspents until satisfies one of these conditions.\n",https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-254875939,254875939,
pedrobranco,2017-02-07T14:11:46Z,@laanwj @luke-jr Is this PR mergeable as is? ,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-278010575,278010575,
laanwj,2017-02-07T14:39:49Z,"Looks like it! but as we're past the feature freeze for 0.14 and this is a new feature, merging this will have to wait until 0.14 is branched off.",https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-278018454,278018454,
pedrobranco,2017-02-07T14:56:22Z,About tests: there aren't any tests specifically for testing `listunspent` options. Should we now create them?,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-278023465,278023465,
laanwj,2017-02-07T15:12:11Z,"Yes, tests for that would be great. They'd make it possible to automatically detect when something breaks this functionality.",https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-278028646,278028646,
pedrobranco,2017-03-07T18:01:37Z,"> Yes, tests for that would be great. They'd make it possible to automatically detect when something breaks this functionality.\n\n@laanwj I'm already working on it. Can I submit in another PR?",https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-284804630,284804630,
fanquake,2017-04-02T07:06:29Z,This needs a rebase. @pedrobranco Tests could be submitted in a follow-up PR.,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-290969075,290969075,
pedrobranco,2017-04-12T13:28:28Z,Ready.,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-293575697,293575697,
pedrobranco,2017-05-16T15:28:08Z,Any thoughts if this is going to be merged? /cc @laanwj,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-301819173,301819173,
laanwj,2017-05-17T07:12:59Z,Merged (and rebased) via 9390845,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-302005923,302005923,
pedrobranco,2017-05-17T13:41:34Z,Thank you @laanwj üëç ,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-302093625,302093625,
sipa,2017-05-18T00:38:15Z,@laanwj I suppose you forgot to close after merging?,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-302268723,302268723,
laanwj,2017-05-18T08:31:13Z,"Yes, did'nt automatically happen as I did a rebase locally. Thanks\n\nOn May 18, 2017 2:38 AM, ""Pieter Wuille"" <notifications@github.com> wrote:\n\n> @laanwj <https://github.com/laanwj> I suppose you forgot to close after\n> merging?\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/8952#issu",https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-302337552,302337552,
fedelcs,2018-07-12T22:46:53Z,"@pedrobranco I've been trying to use the _minimumSumAmount_ along with the _addresses_ parameter, and I keep getting fewer outputs than I should.\n\nLooking at the code it seems that the _minimumSumAmount_ is applied first, finding a correct set of outputs, but then when the addresses/destinations are checked, some of those are removed. \n\nIs this the expected behavior? Shouldn't this be, fir",https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-404673982,404673982,
promag,2018-07-13T06:06:18Z,Looks like a bug.,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-404735451,404735451,
promag,2018-07-15T16:32:30Z,"@fedelcs IIRC `minimumSumAmount` was added to allow early returns in the coin selection. Note that the problem only exists when both args are used.\n\nTo fix this we should either:\n - push down address filtering to `CWallet::AvailableCoins`\n - truncate the result once the `minimumSumAmount` is achieved.",https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-405102679,405102679,
RussianSwiss,2018-07-20T23:25:21Z,Need to have a feature show all addresses' UTXO set with non-zero balance (not only own addresses like listunspent) in Bitcoin Core as a build-in feature.,https://github.com/bitcoin/bitcoin/pull/8952#issuecomment-406750234,406750234,
luke-jr,2017-02-03T05:31:12Z,"Instead of the dual meanings, just say default=unlimited (and make sure 0 doesn't behave in such a manner).",https://github.com/bitcoin/bitcoin/pull/8952#discussion_r99279207,99279207,src/wallet/rpcwallet.cpp
pedrobranco,2017-02-03T16:16:35Z,üëç ,https://github.com/bitcoin/bitcoin/pull/8952#discussion_r99368980,99368980,src/wallet/rpcwallet.cpp
kallewoof,2017-02-28T19:52:30Z,"Maybe I'm misreading, but this (`nMinimumSumAmount`) sounds like a maximum, not a minimum. Esp. since it defaults to `MAX_MONEY` rather than `0`.",https://github.com/bitcoin/bitcoin/pull/8952#discussion_r103538064,103538064,src/wallet/wallet.cpp
kallewoof,2017-02-28T19:53:37Z,"Typo: `[...]Minimum sum value of all UTXOs in ""` (missing `of`).",https://github.com/bitcoin/bitcoin/pull/8952#discussion_r103538282,103538282,src/wallet/rpcwallet.cpp
kallewoof,2017-02-28T19:55:31Z,"Need to add `options` to the first line, e.g.\n```C++\n""listunspent ( minconf maxconf  [\""addresses\"",...] [include_unsafe] [options] )\n""\n```",https://github.com/bitcoin/bitcoin/pull/8952#discussion_r103538713,103538713,src/wallet/rpcwallet.cpp
pedrobranco,2017-03-02T00:20:03Z,I see no issue here since is to be used like it was a _minorant_ set of unspents which satisfies the passed value. If It it was called `maximum` it should not retrieve unspents which sum are greater than the passed value.,https://github.com/bitcoin/bitcoin/pull/8952#discussion_r103823982,103823982,src/wallet/wallet.cpp
kallewoof,2017-03-02T17:46:43Z,"You are collecting the sum of the `nValue` and once the total exceeds the *minimum* you stop. Generally speaking,\n\n```C++\nint minimumSum = 5;\nint values[] = {1,2,3,2,3};\nint sum = 0;\nfor (int i = 0; i < 5; i++) {\n  sum += values[i];\n  if (sum >= minimumSum) break;\n}\n```\n\nThe above looks inverted to me, and will no doubt confuse the user. If you used the word minorant, it mi",https://github.com/bitcoin/bitcoin/pull/8952#discussion_r103986036,103986036,src/wallet/wallet.cpp
pedrobranco,2017-03-07T18:09:33Z,@kallewoof Any suggestions? `nTargetSumAmount`?,https://github.com/bitcoin/bitcoin/pull/8952#discussion_r104737185,104737185,src/wallet/wallet.cpp
kallewoof,2017-03-10T17:13:50Z,@pedrobranco I say keep it as it is if no one else complains.,https://github.com/bitcoin/bitcoin/pull/8952#discussion_r105442791,105442791,src/wallet/wallet.cpp
laanwj,2017-05-17T06:31:40Z,"Not necessary in this pull, but if we keep extending these arguments I think it'd be better to group then into a CoinConstraints structure and pass that in.\n\nSpeaking of which - isn't CCoinControl pretty much that?\n",https://github.com/bitcoin/bitcoin/pull/8952#discussion_r116919810,116919810,src/wallet/wallet.cpp
promag,2017-05-17T14:01:14Z,@laanwj I agree with creating a structure and grow there.,https://github.com/bitcoin/bitcoin/pull/8952#discussion_r117008873,117008873,src/wallet/wallet.cpp
