DrahtBot,2020-01-24 19:36:56,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18044 (Use wtxid for transaction relay by sdaftuar)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckB",https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-578270758,578270758,
Empact,2020-01-24 21:31:31,Concept ACK - my only concern is that this increases the number of cases in which the local and the global form of the variable are shadowing one another. How about doing something like this (in whole or in part) to simplify the call patterns overall while making the member references locally explicit: https://github.com/Empact/bitcoin/tree/2020-01-peer-logic-members,https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-578309923,578309923,
MarcoFalke,2020-01-25 17:02:09,"> my only concern is that this increases the number of cases in which the local and the global form of the variable are shadowing one another\n\nThe global will be renamed to g_mempool, so this won't be an issue. See also https://github.com/bitcoin/bitcoin/pull/17564#discussion_r354482575\n\n> How about doing something like this (in whole or in part) to simplify the call patterns overall while",https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-578423122,578423122,
practicalswift,2020-01-26 08:39:54,"Concept ACK\n\nReduced use of globals is very welcome from a fuzzing perspective :)",https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-578481395,578481395,
Empact,2020-01-30 03:34:02,ACK https://github.com/bitcoin/bitcoin/pull/17997/commits/fa6ff6e7346ca87dfcb9331d1b21b131c91a8f58 code review plus I checked each existing `mempool` reference to ensure there were no remaining references to `::mempool`.,https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-580068392,580068392,
MarcoFalke,2020-02-18 16:26:58,Rebased,https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-587548106,587548106,
promag,2020-02-18 17:02:37,Code review ACK fa2c363cca8cb2224bc90a47362244af9a9c498e.,https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-587566545,587566545,
MarcoFalke,2020-03-11 20:13:38,"Rebased and squashed, as requested by @promag in https://github.com/bitcoin/bitcoin/pull/17997#pullrequestreview-348398170",https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-597844377,597844377,
jnewbery,2020-03-13 21:51:15,code review ACK fa7fea3654203bf7e7bd504589dd564af7fc749d,https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-598927081,598927081,
jnewbery,2020-03-13 21:51:31,(looking forward to the `mempool` -> `g_mempool` rename),https://github.com/bitcoin/bitcoin/pull/17997#issuecomment-598927344,598927344,
