[
  {
    "sha": "3595b18793a94a0cdfe64b5e0cfc0260e19661fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTk1YjE4NzkzYTk0YTBjZGZlNjRiNWUwY2ZjMDI2MGUxOTY2MWZl",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-08-28T21:55:52Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-08-29T01:43:28Z"
      },
      "message": "Don't force IRC off if not listening, do force it off if IPv4 is off.\n\nPreviously Bitcoin would refuse to use IRC if it was either not\naccepting inbound connections or not making outbound. Instead this\nchanges it to not use IRC only if it's not doing either or if\nIPv4 is off completely. If Bitcoin is not listening this will use\nthe default random nicks rather than the IP based ones.",
      "tree": {
        "sha": "89f223dcbec2b2266cf830e4ddee60a1b65d66e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89f223dcbec2b2266cf830e4ddee60a1b65d66e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3595b18793a94a0cdfe64b5e0cfc0260e19661fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3595b18793a94a0cdfe64b5e0cfc0260e19661fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3595b18793a94a0cdfe64b5e0cfc0260e19661fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3595b18793a94a0cdfe64b5e0cfc0260e19661fe/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f388758071967be35bd04e016e862c0536552a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f388758071967be35bd04e016e862c0536552a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f388758071967be35bd04e016e862c0536552a9"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9e88541c2a156514e56cfb91e95ad83edc07542c",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3595b18793a94a0cdfe64b5e0cfc0260e19661fe/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3595b18793a94a0cdfe64b5e0cfc0260e19661fe/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=3595b18793a94a0cdfe64b5e0cfc0260e19661fe",
        "patch": "@@ -207,10 +207,15 @@ void ThreadIRCSeed(void* parg)\n \n void ThreadIRCSeed2(void* parg)\n {\n-    /* Don't advertise on IRC if we don't allow incoming connections */\n-    if (mapArgs.count(\"-connect\") || fNoListen)\n+    // Don't connect to IRC if we won't use IPv4 connections.\n+    if (IsLimited(NET_IPV4))\n         return;\n \n+    // ... or if we won't make outbound connections and won't accept inbound ones.\n+    if (mapArgs.count(\"-connect\") && fNoListen)\n+        return;\n+\n+    // ... or if IRC is not enabled.\n     if (!GetBoolArg(\"-irc\", false))\n         return;\n \n@@ -251,7 +256,8 @@ void ThreadIRCSeed2(void* parg)\n         CNetAddr addrIPv4(\"1.2.3.4\"); // arbitrary IPv4 address to make GetLocal prefer IPv4 addresses\n         CService addrLocal;\n         string strMyName;\n-        if (GetLocal(addrLocal, &addrIPv4))\n+        // Don't use our IP as our nick if we're not listening\n+        if (!fNoListen && GetLocal(addrLocal, &addrIPv4))\n             strMyName = EncodeAddress(GetLocalAddress(&addrConnect));\n         if (strMyName == \"\")\n             strMyName = strprintf(\"x%u\", GetRand(1000000000));\n@@ -283,15 +289,16 @@ void ThreadIRCSeed2(void* parg)\n         if (GetIPFromIRC(hSocket, strMyName, addrFromIRC))\n         {\n             printf(\"GetIPFromIRC() returned %s\\n\", addrFromIRC.ToString().c_str());\n-            if (addrFromIRC.IsRoutable())\n+            // Don't use our IP as our nick if we're not listening\n+            if (!fNoListen && addrFromIRC.IsRoutable())\n             {\n                 // IRC lets you to re-nick\n                 AddLocal(addrFromIRC, LOCAL_IRC);\n                 strMyName = EncodeAddress(GetLocalAddress(&addrConnect));\n                 Send(hSocket, strprintf(\"NICK %s\\r\", strMyName.c_str()).c_str());\n             }\n         }\n-        \n+\n         if (fTestNet) {\n             Send(hSocket, \"JOIN #bitcoinTEST3\\r\");\n             Send(hSocket, \"WHO #bitcoinTEST3\\r\");"
      }
    ]
  },
  {
    "sha": "6a60c64c6b4c6a8095e12b515fc7e30eedfab5ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTYwYzY0YzZiNGM2YTgwOTVlMTJiNTE1ZmM3ZTMwZWVkZmFiNWFi",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-08-29T02:04:38Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-08-29T02:04:38Z"
      },
      "message": "Don't retry a failing IRC nickname forever.\n\nIf our IRC nick is in use (because some other node thinks it has\nthe same address we think we have) don't fruitlessly try to reconnect\nusing that name forever. After three tries, give up and use a random\nnick. Either we'll learn a new local address from IRC and switch\nto that, or it was right and the other guy is advertising for us.\n\nThis avoids a pessimal case where a second testnet node behind\na nat is unable to get any peers because he can't get on IRC.",
      "tree": {
        "sha": "43dbceb1c0c4102c8275d96a70a53af698bc704e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43dbceb1c0c4102c8275d96a70a53af698bc704e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a60c64c6b4c6a8095e12b515fc7e30eedfab5ab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a60c64c6b4c6a8095e12b515fc7e30eedfab5ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a60c64c6b4c6a8095e12b515fc7e30eedfab5ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a60c64c6b4c6a8095e12b515fc7e30eedfab5ab/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3595b18793a94a0cdfe64b5e0cfc0260e19661fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3595b18793a94a0cdfe64b5e0cfc0260e19661fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3595b18793a94a0cdfe64b5e0cfc0260e19661fe"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6991e6ee7e704cc34e0b46328d60d5dccc5ebe42",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a60c64c6b4c6a8095e12b515fc7e30eedfab5ab/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a60c64c6b4c6a8095e12b515fc7e30eedfab5ab/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=6a60c64c6b4c6a8095e12b515fc7e30eedfab5ab",
        "patch": "@@ -222,6 +222,7 @@ void ThreadIRCSeed2(void* parg)\n     printf(\"ThreadIRCSeed started\\n\");\n     int nErrorWait = 10;\n     int nRetryWait = 10;\n+    int nNameRetry = 0;\n \n     while (!fShutdown)\n     {\n@@ -257,7 +258,8 @@ void ThreadIRCSeed2(void* parg)\n         CService addrLocal;\n         string strMyName;\n         // Don't use our IP as our nick if we're not listening\n-        if (!fNoListen && GetLocal(addrLocal, &addrIPv4))\n+        // or if it keeps failing because the nick is already in use.\n+        if (!fNoListen && GetLocal(addrLocal, &addrIPv4) && nNameRetry<3)\n             strMyName = EncodeAddress(GetLocalAddress(&addrConnect));\n         if (strMyName == \"\")\n             strMyName = strprintf(\"x%u\", GetRand(1000000000));\n@@ -273,6 +275,7 @@ void ThreadIRCSeed2(void* parg)\n             if (nRet == 2)\n             {\n                 printf(\"IRC name already in use\\n\");\n+                nNameRetry++;\n                 Wait(10);\n                 continue;\n             }\n@@ -282,6 +285,7 @@ void ThreadIRCSeed2(void* parg)\n             else\n                 return;\n         }\n+        nNameRetry = 0;\n         Sleep(500);\n \n         // Get our external IP from the IRC server and re-nick before joining the channel"
      }
    ]
  }
]