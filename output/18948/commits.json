[
  {
    "sha": "5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjU5ZTczNDkzZmNkZmI1ZDBjYjlkNjg2YzI0YzRmYmUxYzIxN2Vk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-14T17:46:32Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-11-25T14:12:23Z"
      },
      "message": "qt: Add ObjectInvoke template function\n\nThis is a replacement of the QMetaObject::invokeMethod functor overload\nwhich is available in Qt 5.10+.\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>",
      "tree": {
        "sha": "92e38fc5475fa7a9553d9675c7ac821e231ca43e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92e38fc5475fa7a9553d9675c7ac821e231ca43e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl++ZkcACgkQQQEIES5+\nqB88Rw//fLXmz2SY0F4ZjnGOqULqDQ34Rwpe/+b10+pL/BVbUkZhpPJqWBuTZVnf\ncleVDY7+VZ1ilRFDbNhgiUQ3EQxwlfblLNyv4LSJ82SffDm2jUt8CEbDOOEXiuTr\nopN51ovsfz2pCiXvOemyubislWzpFDiop1cwOe79wYucS9c+5qgjjPSCwT0cRN8C\n4jCRrS2WXWvlb6FPZxYiPIwMVkjjFqMLHEVwn1ZEYREnjOEplvxwkHoVcliodYP7\n9eJ0GFIUolfBG+2yJua+x+NaGEOj09lP2wvcFt7WYTEzLuDAkTzfWlorELLxXfb9\nMW7XCSPWBClD3rgnx69kZWUtg4gT8TC8EGbVAxe5XbTomM8ZA3TcCjEHKJ2llHyz\n6weZ7QTJ6lVF2QtY3uKk/Yk3AiYc4SPkO7qgD7qRv9sWRjDu03/To8XDwuV9Shpf\nK2VT1hrioofsJqTa8gtINZ66tmyqAvSRSq975xyB2pQ00uSDHardtmMlMmifKnzZ\nzD6p/BMXN0tKkNVmftoxLyCb8B2y7UJ1Zw7SkrwpYPZ0vfskgVQP88UoyysWOtI3\nocuENNWUFCFEvoWqQWNCYJ+GB/E6M9IgTe+CVkfg3uZjB92BFFVVnzT0kSa67ATb\nr8EXaALDCGM+mS2Bs7ku+MVvslhEWtouE1ytHX1uHlaFThuJMQI=\n=+Ksv\n-----END PGP SIGNATURE-----",
        "payload": "tree 92e38fc5475fa7a9553d9675c7ac821e231ca43e\nparent afdfd3c8c1ce96adae11809e3989de381137fee9\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1597427192 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1606313543 +0200\n\nqt: Add ObjectInvoke template function\n\nThis is a replacement of the QMetaObject::invokeMethod functor overload\nwhich is available in Qt 5.10+.\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "afdfd3c8c1ce96adae11809e3989de381137fee9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afdfd3c8c1ce96adae11809e3989de381137fee9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/afdfd3c8c1ce96adae11809e3989de381137fee9"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d7bd12488444cbb96a89d4e1a128957050965873",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed",
        "patch": "@@ -340,6 +340,18 @@ namespace GUIUtil\n     #endif\n     }\n \n+    /**\n+     * Queue a function to run in an object's event loop. This can be\n+     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but\n+     * for now use a QObject::connect for compatibility with older Qt versions, based on\n+     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style\n+     */\n+    template <typename Fn>\n+    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)\n+    {\n+        QObject source;\n+        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);\n+    }\n \n } // namespace GUIUtil\n "
      }
    ]
  },
  {
    "sha": "5fcfee68af47d4a891ae9c9964d73886f0f01d7d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmNmZWU2OGFmNDdkNGE4OTFhZTljOTk2NGQ3Mzg4NmYwZjAxZDdk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-14T17:53:35Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-11-25T14:12:32Z"
      },
      "message": "qt: Call setParent() in the parent's context\n\nsetParent(parent) calls sendEvent(parent, QChildEvent) that implies\nrunning in the thread which created the parent object.",
      "tree": {
        "sha": "12620c8013a41c129308a0d2e466be591249a47b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12620c8013a41c129308a0d2e466be591249a47b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fcfee68af47d4a891ae9c9964d73886f0f01d7d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl++ZlAACgkQQQEIES5+\nqB/dxQ//akG/BWYZcUNI42HoTbrlsQtGhocF1nZsLHclzrBaCrQ41FIL4v1YpUHn\nlxrgn+zgcW6UUKKiXOc12XPYM5b7Nz4rdCUXmNg0flP1l/Zd//q4yJvgurNcI/GJ\n7909QTIsrOPL6BQp3pSso/1lZEA+Wf7uwy3Bys8wJ1q6SVBhDBRMImZAfeerDnwH\nFWVSNhGZ32POv1xoEcvlD5OEd/HWMiqKr6mrF7QAh8TL3SDXpwvuA8bg23mU57QQ\nQLKeZftMeufFBASgxtFHAPwGvXJaLrU3i+6KFoEl4cNmXKHP/Mnie0IV0+JzbpfP\njQsP0qCPt53PjrzJ8S8CimTtla3cPgiNR7Mc/l8fPQMUWAAGep3hc9H7BeYhSkVn\ncEU7Rp81uLwRoWHwMtd9Y8wljcsEsopV5tB9uf+WDTgU1wFEfMiOXbByRhWpl4hH\naNpu6eVB6BrWRAJZVFVdG/jLEe7KSWv/JGqHywAt9xvp3Yn0VJBKPDKXCR/TleqO\ntmRTRbZJKNCFCIQCHcPKqZ+a2UpoGnK+g9R4QtW5b/c3G6mCqCFJR+cmhLYDAU0E\niS2QQxblzx2B51+dmvHrBGTiy+zwpodHHsCNm1VJM0SA4FA/6Bwe2gpmEpgNdPbL\n+Fz6C0qUJmHKZkujT1kSzAzAQC7ytFWky409pYPd8WdycVgazE4=\n=Am6g\n-----END PGP SIGNATURE-----",
        "payload": "tree 12620c8013a41c129308a0d2e466be591249a47b\nparent 5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1597427615 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1606313552 +0200\n\nqt: Call setParent() in the parent's context\n\nsetParent(parent) calls sendEvent(parent, QChildEvent) that implies\nrunning in the thread which created the parent object.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fcfee68af47d4a891ae9c9964d73886f0f01d7d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fcfee68af47d4a891ae9c9964d73886f0f01d7d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fcfee68af47d4a891ae9c9964d73886f0f01d7d/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5659e73493fcdfb5d0cb9d686c24c4fbe1c217ed"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a59f33b785f1859bbfdb08f0d0ceda3f786e89b2",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fcfee68af47d4a891ae9c9964d73886f0f01d7d/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fcfee68af47d4a891ae9c9964d73886f0f01d7d/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=5fcfee68af47d4a891ae9c9964d73886f0f01d7d",
        "patch": "@@ -131,7 +131,11 @@ WalletModel* WalletController::getOrCreateWallet(std::unique_ptr<interfaces::Wal\n     WalletModel* wallet_model = new WalletModel(std::move(wallet), m_client_model, m_platform_style, nullptr);\n     // Handler callback runs in a different thread so fix wallet model thread affinity.\n     wallet_model->moveToThread(thread());\n-    wallet_model->setParent(this);\n+    // setParent(parent) must be called in the thread which created the parent object. More details in #18948.\n+    GUIUtil::ObjectInvoke(this, [wallet_model, this] {\n+        wallet_model->setParent(this);\n+    }, GUIUtil::blockingGUIThreadConnection());\n+\n     m_wallets.push_back(wallet_model);\n \n     // WalletModel::startPollBalance needs to be called in a thread managed by"
      }
    ]
  },
  {
    "sha": "8963b2c71f120b2746396c4987392f0105c8dd60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTYzYjJjNzFmMTIwYjI3NDYzOTZjNDk4NzM5MmYwMTA1YzhkZDYw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-11T14:12:59Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-11-25T14:12:33Z"
      },
      "message": "qt: Improve comments in WalletController::getOrCreateWallet()",
      "tree": {
        "sha": "fc68e4e836f895ad54f477e30f7111e70fe08096",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc68e4e836f895ad54f477e30f7111e70fe08096"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8963b2c71f120b2746396c4987392f0105c8dd60",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl++ZlEACgkQQQEIES5+\nqB/82RAAtPt5YtK9AFiElMOH8bc3bW7csnDERSt5I+JUFOFWE3uW0b7GEIRUpKIt\n9dBzR+2A+572sPygDknPuZsnTQi7HkQVyj+a9vLz5sUuNZ/p/aoLYYdUIWXPnxmY\nFWEPBOxNFGhS1MQGRbygxAe3wxd+QhJ1xfbS3ME9nfqj/VgwawOs7XIJpwD4Fykb\nF0a1ee2szCQcjmkV67nk9aMrDPKsdYvxb0HS4Iqh3oj/t2CB7ca52LelMRBeejpB\nufP3Nhr2oxkWJ7XA14GtPvvPuu0NQEtM9HGZZ08Wfhs876lBoEhhiOkWDJJJqfsX\nQRNQtnQS+WP3JJmeaI6Li55a6Nx4NzDeCH52AbIu0bKUh16EjiJ+IiBSSL5iyx6S\nS4QTpqnPQNT3qb95qB3gYrTifS/Fbil16uGC3uytroJEPym87qIjhactmE7JUm2m\nsloCbEggxTN1/miPwJEqZa4b5xlGXTSLuK+mHZb3fr1+urB1ZZwhOKJLtZW4Zx9E\nCBqHU+lAIDzuB1DvnC9P3x6Aq/9BejBEaAsoq26jWeJzc8TaDw47NX9ULclB79Ib\n8CCF522H1u3qkwo2JbGACbOmAzXbhdq2tItOxx5fP642oGikuBN6/yK/iegyCK6X\nVaoWez7VtecUWOKlMi1p3mX7g5Sjd83QYvp51m0IBeh/DgdSDJ4=\n=X/jb\n-----END PGP SIGNATURE-----",
        "payload": "tree fc68e4e836f895ad54f477e30f7111e70fe08096\nparent 5fcfee68af47d4a891ae9c9964d73886f0f01d7d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589206379 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1606313553 +0200\n\nqt: Improve comments in WalletController::getOrCreateWallet()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8963b2c71f120b2746396c4987392f0105c8dd60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8963b2c71f120b2746396c4987392f0105c8dd60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8963b2c71f120b2746396c4987392f0105c8dd60/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5fcfee68af47d4a891ae9c9964d73886f0f01d7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fcfee68af47d4a891ae9c9964d73886f0f01d7d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fcfee68af47d4a891ae9c9964d73886f0f01d7d"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "83f3cccbff0a3da3e6c1b7dc660ee66274a2a73d",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8963b2c71f120b2746396c4987392f0105c8dd60/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8963b2c71f120b2746396c4987392f0105c8dd60/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=8963b2c71f120b2746396c4987392f0105c8dd60",
        "patch": "@@ -128,8 +128,14 @@ WalletModel* WalletController::getOrCreateWallet(std::unique_ptr<interfaces::Wal\n     }\n \n     // Instantiate model and register it.\n-    WalletModel* wallet_model = new WalletModel(std::move(wallet), m_client_model, m_platform_style, nullptr);\n-    // Handler callback runs in a different thread so fix wallet model thread affinity.\n+    WalletModel* wallet_model = new WalletModel(std::move(wallet), m_client_model, m_platform_style,\n+                                                nullptr /* required for the following moveToThread() call */);\n+\n+    // Move WalletModel object to the thread that created the WalletController\n+    // object (GUI main thread), instead of the current thread, which could be\n+    // an outside wallet thread or RPC thread sending a LoadWallet notification.\n+    // This ensures queued signals sent to the WalletModel object will be\n+    // handled on the GUI event loop.\n     wallet_model->moveToThread(thread());\n     // setParent(parent) must be called in the thread which created the parent object. More details in #18948.\n     GUIUtil::ObjectInvoke(this, [wallet_model, this] {\n@@ -161,7 +167,6 @@ WalletModel* WalletController::getOrCreateWallet(std::unique_ptr<interfaces::Wal\n     // Re-emit coinsSent signal from wallet model.\n     connect(wallet_model, &WalletModel::coinsSent, this, &WalletController::coinsSent);\n \n-    // Notify walletAdded signal on the GUI thread.\n     Q_EMIT walletAdded(wallet_model);\n \n     return wallet_model;"
      }
    ]
  }
]