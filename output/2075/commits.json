[
  {
    "sha": "96079cce380859e38f701ce84c5a8d98d424c4fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjA3OWNjZTM4MDg1OWUzOGY3MDFjZTg0YzVhOGQ5OGQ0MjRjNGZh",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-04T21:02:38Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-04T21:02:38Z"
      },
      "message": "Just some comments on what I'm aiming to do here",
      "tree": {
        "sha": "2ef6a9232e088c868947b8a902ebdc22176f4529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ef6a9232e088c868947b8a902ebdc22176f4529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96079cce380859e38f701ce84c5a8d98d424c4fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96079cce380859e38f701ce84c5a8d98d424c4fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96079cce380859e38f701ce84c5a8d98d424c4fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96079cce380859e38f701ce84c5a8d98d424c4fa/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd7fb7d1deece9da15d7750b3e05f729555a2cbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd7fb7d1deece9da15d7750b3e05f729555a2cbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd7fb7d1deece9da15d7750b3e05f729555a2cbe"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 24,
      "deletions": 6
    },
    "files": [
      {
        "sha": "33de4b6ccbdbe36f6a805581cf4e9391ee2232f5",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 6,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96079cce380859e38f701ce84c5a8d98d424c4fa/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96079cce380859e38f701ce84c5a8d98d424c4fa/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=96079cce380859e38f701ce84c5a8d98d424c4fa",
        "patch": "@@ -4,6 +4,8 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"wallet.h\"\n+// TODO: Remove this include after removing all dependencies\n+// NOTE: DO NOT ADD NEW DEPENDENCIES ON CWalletDB!\n #include \"walletdb.h\"\n #include \"bitcoinrpc.h\"\n #include \"init.h\"\n@@ -15,19 +17,22 @@ using namespace std;\n int64 nWalletUnlockTime;\n static CCriticalSection cs_nWalletUnlockTime;\n \n+// TODO: Move to rpchelpers.cpp\n std::string HelpRequiringPassphrase()\n {\n     return pwalletMain->IsCrypted()\n         ? \"\\nrequires wallet passphrase to be set with walletpassphrase first\"\n         : \"\";\n }\n \n+// TODO: Move to rpchelpers.cpp\n void EnsureWalletIsUnlocked()\n {\n     if (pwalletMain->IsLocked())\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n }\n \n+// TODO: Move to rpchelpers.cpp\n void WalletTxToJSON(const CWalletTx& wtx, Object& entry)\n {\n     int confirms = wtx.GetDepthInMainChain();\n@@ -47,6 +52,7 @@ void WalletTxToJSON(const CWalletTx& wtx, Object& entry)\n         entry.push_back(Pair(item.first, item.second));\n }\n \n+// TODO: Move to rpchelpers.cpp\n string AccountFromValue(const Value& value)\n {\n     string strAccount = value.get_str();\n@@ -114,7 +120,7 @@ Value getnewaddress(const Array& params, bool fHelp)\n     return CBitcoinAddress(keyID).ToString();\n }\n \n-\n+// TODO: Move to CBitcoinAddress::GetAccountAddress(const std::string strAccount, const bool bForceNew)\n CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n {\n     CWalletDB walletdb(pwalletMain->strWalletFile);\n@@ -232,6 +238,7 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n \n     // Find all addresses that have the given account\n     Array ret;\n+    // TODO: Move bulk to std::vector<string> CWallet::GetAddressesByAccount(const std::string strAccount)\n     BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n     {\n         const CBitcoinAddress& address = item.first;\n@@ -390,6 +397,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n     scriptPubKey.SetDestination(address.Get());\n+    // TODO: Should look like if (!pwalletMain->IsMyAddress(address))\n     if (!IsMine(*pwalletMain,scriptPubKey))\n         return (double)0.0;\n \n@@ -398,6 +406,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n     if (params.size() > 1)\n         nMinDepth = params[1].get_int();\n \n+    // TODO: Replace whole block with return ValueFromAmount(pwalletMain->GetAddressTally(nMinDepth))\n     // Tally\n     int64 nAmount = 0;\n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n@@ -415,7 +424,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n     return  ValueFromAmount(nAmount);\n }\n \n-\n+// TODO: Move to set<CTxDestination> CWallet::GetAccountAddresses(const std::string strAccount)\n void GetAccountAddresses(string strAccount, set<CTxDestination>& setAddress)\n {\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& item, pwalletMain->mapAddressBook)\n@@ -444,6 +453,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n     set<CTxDestination> setAddress;\n     GetAccountAddresses(strAccount, setAddress);\n \n+    // TODO: Replace whole block with return ValueFromAmount(pwalletMain->GetAccountTally(strAccount, nMinDepth))\n     // Tally\n     int64 nAmount = 0;\n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n@@ -464,7 +474,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n     return (double)nAmount / (double)COIN;\n }\n \n-\n+// TODO: Move to int64 CWallet::GetAccountBalance(const string& strAccount, const int nMinDepth)\n int64 GetAccountBalance(CWalletDB& walletdb, const string& strAccount, int nMinDepth)\n {\n     int64 nBalance = 0;\n@@ -490,6 +500,7 @@ int64 GetAccountBalance(CWalletDB& walletdb, const string& strAccount, int nMinD\n     return nBalance;\n }\n \n+// TODO: Move to int64 CWallet::GetAccountBalance(const string& strAccount, const int nMinDepth)\n int64 GetAccountBalance(const string& strAccount, int nMinDepth)\n {\n     CWalletDB walletdb(pwalletMain->strWalletFile);\n@@ -513,6 +524,7 @@ Value getbalance(const Array& params, bool fHelp)\n         nMinDepth = params[1].get_int();\n \n     if (params[0].get_str() == \"*\") {\n+    \t// TODO: Why is there a \"different way\" if both \"should always return the same number\"?\n         // Calculate total balance a different way from GetBalance()\n         // (GetBalance() sums up all unspent TxOuts)\n         // getbalance and getbalance '*' should always return the same number.\n@@ -565,6 +577,7 @@ Value movecmd(const Array& params, bool fHelp)\n     if (params.size() > 4)\n         strComment = params[4].get_str();\n \n+    // TODO: replace block with pwalletMain->MoveBalance(string from, string to, int64 amount, unused, string comment)\n     CWalletDB walletdb(pwalletMain->strWalletFile);\n     if (!walletdb.TxnBegin())\n         throw JSONRPCError(RPC_DATABASE_ERROR, \"database error\");\n@@ -804,7 +817,7 @@ Value createmultisig(const Array& params, bool fHelp)\n     return result;\n }\n \n-\n+// TODO: Move to wallet.h\n struct tallyitem\n {\n     int64 nAmount;\n@@ -816,6 +829,7 @@ struct tallyitem\n     }\n };\n \n+// TODO: Move bulk to std::vector<std::map<std::string, std::object> > CWallet::ListReceived\n Value ListReceived(const Array& params, bool fByAccounts)\n {\n     // Minimum confirmations\n@@ -937,6 +951,7 @@ Value listreceivedbyaccount(const Array& params, bool fHelp)\n     return ListReceived(params, true);\n }\n \n+// TODO: std::vector<> CWalletTx::(const string& strAccount, int nMinDepth, bool fLong)\n void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, Array& ret)\n {\n     int64 nFee;\n@@ -998,6 +1013,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     }\n }\n \n+// TODO: Move to rpchelpers.cpp\n void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Array& ret)\n {\n     bool fAllAccounts = (strAccount == string(\"*\"));\n@@ -1037,6 +1053,7 @@ Value listtransactions(const Array& params, bool fHelp)\n     if (nFrom < 0)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Negative from\");\n \n+    // TODO: return ArrayFromVector(pwalletMain->GetTxList(string strAccount, int ncount, int nfrom);\n     Array ret;\n \n     std::list<CAccountingEntry> acentries;\n@@ -1084,6 +1101,7 @@ Value listaccounts(const Array& params, bool fHelp)\n     if (params.size() > 0)\n         nMinDepth = params[0].get_int();\n \n+    // TODO: return ObjectFromMap(pwalletMain->GetAccountList(int nMindepth);\n     map<string, int64> mapAccountBalances;\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& entry, pwalletMain->mapAddressBook) {\n         if (IsMine(*pwalletMain, entry.first)) // This address belongs to me\n@@ -1152,7 +1170,7 @@ Value listsinceblock(const Array& params, bool fHelp)\n     int depth = pindex ? (1 + nBestHeight - pindex->nHeight) : -1;\n \n     Array transactions;\n-\n+    // TODO: transactions = ArrayFromVector(std::vector<tx?> CWallet->GetTransactionList(int nDepth)\n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); it++)\n     {\n         CWalletTx tx = (*it).second;\n@@ -1253,7 +1271,7 @@ Value keypoolrefill(const Array& params, bool fHelp)\n     return Value::null;\n }\n \n-\n+// TODO: CWallet::ThreadTopUpKeyPool\n void ThreadTopUpKeyPool(void* parg)\n {\n     // Make this thread recognisable as the key-topping-up thread"
      }
    ]
  },
  {
    "sha": "b2551e24cb8dee4f359aefe8959f747f296b8dc0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjU1MWUyNGNiOGRlZTRmMzU5YWVmZTg5NTlmNzQ3ZjI5NmI4ZGMw",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-04T21:20:51Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-04T21:20:51Z"
      },
      "message": "more TODO comments for things to be moved to rpchelpers.cpp",
      "tree": {
        "sha": "9b7cce2b68dbe1ecf46cdf2d39a5289ee518234b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b7cce2b68dbe1ecf46cdf2d39a5289ee518234b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2551e24cb8dee4f359aefe8959f747f296b8dc0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2551e24cb8dee4f359aefe8959f747f296b8dc0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2551e24cb8dee4f359aefe8959f747f296b8dc0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2551e24cb8dee4f359aefe8959f747f296b8dc0/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96079cce380859e38f701ce84c5a8d98d424c4fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96079cce380859e38f701ce84c5a8d98d424c4fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96079cce380859e38f701ce84c5a8d98d424c4fa"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 12,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9bd320d617f90504988587606a31c0c3d965b93b",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2551e24cb8dee4f359aefe8959f747f296b8dc0/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2551e24cb8dee4f359aefe8959f747f296b8dc0/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=b2551e24cb8dee4f359aefe8959f747f296b8dc0",
        "patch": "@@ -9,6 +9,7 @@\n using namespace json_spirit;\n using namespace std;\n \n+// TODO: move to rpchelpers.cpp\n double GetDifficulty(const CBlockIndex* blockindex)\n {\n     // Floating point number that is a multiple of the minimum difficulty,\n@@ -40,7 +41,7 @@ double GetDifficulty(const CBlockIndex* blockindex)\n     return dDiff;\n }\n \n-\n+// TODO: move to rpchelpers.cpp\n Object blockToJSON(const CBlock& block, const CBlockIndex* blockindex)\n {\n     Object result;"
      },
      {
        "sha": "b15182937eb8e5ad75f7b810cab92dba4a292f6a",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2551e24cb8dee4f359aefe8959f747f296b8dc0/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2551e24cb8dee4f359aefe8959f747f296b8dc0/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=b2551e24cb8dee4f359aefe8959f747f296b8dc0",
        "patch": "@@ -19,6 +19,7 @@ Value getconnectioncount(const Array& params, bool fHelp)\n     return (int)vNodes.size();\n }\n \n+// TODO: move to rpchelpers.cpp\n static void CopyNodeStats(std::vector<CNodeStats>& vstats)\n {\n     vstats.clear();"
      },
      {
        "sha": "3b650d3eec74f916555e88e93506ab28f7fa08bf",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2551e24cb8dee4f359aefe8959f747f296b8dc0/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2551e24cb8dee4f359aefe8959f747f296b8dc0/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=b2551e24cb8dee4f359aefe8959f747f296b8dc0",
        "patch": "@@ -22,6 +22,7 @@ using namespace json_spirit;\n // Utilities: convert hex-encoded Values\n // (throws error if not hex).\n //\n+// TODO: move to rpchelpers.cpp\n uint256 ParseHashV(const Value& v, string strName)\n {\n     string strHex;\n@@ -33,10 +34,14 @@ uint256 ParseHashV(const Value& v, string strName)\n     result.SetHex(strHex);\n     return result;\n }\n+\n+// TODO: move to rpchelpers.cpp\n uint256 ParseHashO(const Object& o, string strKey)\n {\n     return ParseHashV(find_value(o, strKey), strKey);\n }\n+\n+// TODO: move to rpchelpers.cpp\n vector<unsigned char> ParseHexV(const Value& v, string strName)\n {\n     string strHex;\n@@ -46,11 +51,14 @@ vector<unsigned char> ParseHexV(const Value& v, string strName)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, strName+\" must be hexadecimal string (not '\"+strHex+\"')\");\n     return ParseHex(strHex);\n }\n+\n+// TODO: move to rpchelpers.cpp\n vector<unsigned char> ParseHexO(const Object& o, string strKey)\n {\n     return ParseHexV(find_value(o, strKey), strKey);\n }\n \n+// TODO: move to rpchelpers.cpp\n void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out)\n {\n     txnouttype type;\n@@ -75,6 +83,7 @@ void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out)\n     out.push_back(Pair(\"addresses\", a));\n }\n \n+// TODO: move to rpchelpers.cpp\n void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)\n {\n     entry.push_back(Pair(\"txid\", tx.GetHash().GetHex()));"
      }
    ]
  },
  {
    "sha": "56e396ce0d7b9299a03f0132c49150335e503ee2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmUzOTZjZTBkN2I5Mjk5YTAzZjAxMzJjNDkxNTAzMzVlNTAzZWUy",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-05T10:50:55Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-05T10:50:55Z"
      },
      "message": "Make GetAccountAddress and SetAccount into methods of CWallet",
      "tree": {
        "sha": "b071445c3316f1220092a196dfc9b6f637b8a4fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b071445c3316f1220092a196dfc9b6f637b8a4fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56e396ce0d7b9299a03f0132c49150335e503ee2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56e396ce0d7b9299a03f0132c49150335e503ee2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56e396ce0d7b9299a03f0132c49150335e503ee2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56e396ce0d7b9299a03f0132c49150335e503ee2/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b2551e24cb8dee4f359aefe8959f747f296b8dc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2551e24cb8dee4f359aefe8959f747f296b8dc0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2551e24cb8dee4f359aefe8959f747f296b8dc0"
      }
    ],
    "stats": {
      "total": 139,
      "additions": 70,
      "deletions": 69
    },
    "files": [
      {
        "sha": "272144260d4329cbe8408030f54b6fab2722c608",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 69,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e396ce0d7b9299a03f0132c49150335e503ee2/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e396ce0d7b9299a03f0132c49150335e503ee2/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=56e396ce0d7b9299a03f0132c49150335e503ee2",
        "patch": "@@ -48,7 +48,7 @@ void WalletTxToJSON(const CWalletTx& wtx, Object& entry)\n     entry.push_back(Pair(\"txid\", wtx.GetHash().GetHex()));\n     entry.push_back(Pair(\"time\", (boost::int64_t)wtx.GetTxTime()));\n     entry.push_back(Pair(\"timereceived\", (boost::int64_t)wtx.nTimeReceived));\n-    BOOST_FOREACH(const PAIRTYPE(string,string)& item, wtx.mapValue)\n+    BOOST_FOREACH(const PAIRTYPE(string, string)& item, wtx.mapValue)\n         entry.push_back(Pair(item.first, item.second));\n }\n \n@@ -90,8 +90,6 @@ Value getinfo(const Array& params, bool fHelp)\n     return obj;\n }\n \n-\n-\n Value getnewaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -120,45 +118,6 @@ Value getnewaddress(const Array& params, bool fHelp)\n     return CBitcoinAddress(keyID).ToString();\n }\n \n-// TODO: Move to CBitcoinAddress::GetAccountAddress(const std::string strAccount, const bool bForceNew)\n-CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n-{\n-    CWalletDB walletdb(pwalletMain->strWalletFile);\n-\n-    CAccount account;\n-    walletdb.ReadAccount(strAccount, account);\n-\n-    bool bKeyUsed = false;\n-\n-    // Check if the current key has been used\n-    if (account.vchPubKey.IsValid())\n-    {\n-        CScript scriptPubKey;\n-        scriptPubKey.SetDestination(account.vchPubKey.GetID());\n-        for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin();\n-             it != pwalletMain->mapWallet.end() && account.vchPubKey.IsValid();\n-             ++it)\n-        {\n-            const CWalletTx& wtx = (*it).second;\n-            BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-                if (txout.scriptPubKey == scriptPubKey)\n-                    bKeyUsed = true;\n-        }\n-    }\n-\n-    // Generate a new key\n-    if (!account.vchPubKey.IsValid() || bForceNew || bKeyUsed)\n-    {\n-        if (!pwalletMain->GetKeyFromPool(account.vchPubKey, false))\n-            throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n-\n-        pwalletMain->SetAddressBookName(account.vchPubKey.GetID(), strAccount);\n-        walletdb.WriteAccount(strAccount, account);\n-    }\n-\n-    return CBitcoinAddress(account.vchPubKey.GetID());\n-}\n-\n Value getaccountaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -168,46 +127,32 @@ Value getaccountaddress(const Array& params, bool fHelp)\n \n     // Parse the account first so we don't generate a key if there's an error\n     string strAccount = AccountFromValue(params[0]);\n-\n-    Value ret;\n-\n-    ret = GetAccountAddress(strAccount).ToString();\n-\n-    return ret;\n+    CBitcoinAddress address = pwalletMain->GetAccountAddress(strAccount, false);\n+    if (address.IsValid())\n+    \treturn address.ToString();\n+    throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n }\n \n-\n-\n Value setaccount(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n-            \"setaccount <bitcoinaddress> <account>\\n\"\n-            \"Sets the account associated with the given address.\");\n+            \"setaccount <bitcoinaddress> [account]\\n\"\n+            \"Sets the address's account to [account] or \\\"\\\".\");\n \n     CBitcoinAddress address(params[0].get_str());\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n \n-\n     string strAccount;\n     if (params.size() > 1)\n         strAccount = AccountFromValue(params[1]);\n \n-    // Detect when changing the account of an address that is the 'unused current key' of another account:\n-    if (pwalletMain->mapAddressBook.count(address.Get()))\n-    {\n-        string strOldAccount = pwalletMain->mapAddressBook[address.Get()];\n-        if (address == GetAccountAddress(strOldAccount))\n-            GetAccountAddress(strOldAccount, true);\n-    }\n-\n-    pwalletMain->SetAddressBookName(address.Get(), strAccount);\n-\n+    // TODO: Use the return code for something\n+    pwalletMain->SetAccount(address, strAccount);\n     return Value::null;\n }\n \n-\n Value getaccount(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -226,7 +171,6 @@ Value getaccount(const Array& params, bool fHelp)\n     return strAccount;\n }\n \n-\n Value getaddressesbyaccount(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -398,7 +342,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n     scriptPubKey.SetDestination(address.Get());\n     // TODO: Should look like if (!pwalletMain->IsMyAddress(address))\n-    if (!IsMine(*pwalletMain,scriptPubKey))\n+    if (!IsMine(*pwalletMain, scriptPubKey))\n         return (double)0.0;\n \n     // Minimum confirmations\n@@ -416,9 +360,8 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n             continue;\n \n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-            if (txout.scriptPubKey == scriptPubKey)\n-                if (wtx.GetDepthInMainChain() >= nMinDepth)\n-                    nAmount += txout.nValue;\n+            if (txout.scriptPubKey == scriptPubKey && wtx.GetDepthInMainChain() >= nMinDepth)\n+                nAmount += txout.nValue;\n     }\n \n     return  ValueFromAmount(nAmount);"
      },
      {
        "sha": "8bf4017de0fdd729ce900450526900436922c427",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e396ce0d7b9299a03f0132c49150335e503ee2/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e396ce0d7b9299a03f0132c49150335e503ee2/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=56e396ce0d7b9299a03f0132c49150335e503ee2",
        "patch": "@@ -1770,3 +1770,59 @@ void CWallet::UpdatedTransaction(const uint256 &hashTx)\n             NotifyTransactionChanged(this, hashTx, CT_UPDATED);\n     }\n }\n+\n+CBitcoinAddress CWallet::GetAccountAddress(const std::string strAccount, bool bForceNew=false)\n+{\n+    CWalletDB walletdb(strWalletFile);\n+    CAccount account;\n+    walletdb.ReadAccount(strAccount, account);\n+    bool bKeyUsed = false;\n+\n+    // Check if the current key has been used\n+    if (account.vchPubKey.IsValid())\n+    {\n+        CScript scriptPubKey;\n+        scriptPubKey.SetDestination(account.vchPubKey.GetID());\n+        // TODO: Is this IsValid() check really necessary here?\n+        for (map<uint256, CWalletTx>::iterator it = mapWallet.begin();\n+             it != mapWallet.end() && account.vchPubKey.IsValid() && !bKeyUsed;\n+             ++it)\n+        {\n+            //const CWalletTx& wtx = (*it).second;\n+            BOOST_FOREACH(const CTxOut& txout, (*it).second.vout)\n+                if (txout.scriptPubKey == scriptPubKey)\n+                {\n+                    bKeyUsed = true;\n+                    break;\n+                }\n+        }\n+    }\n+\n+    // Generate a new key\n+    if (!account.vchPubKey.IsValid() || bForceNew || bKeyUsed)\n+    {\n+    \t// Caller must check validity to detect keypool depletion\n+        if (!GetKeyFromPool(account.vchPubKey, false))\n+        \treturn CBitcoinAddress();\n+\n+        // TODO: Do something with the return code\n+        SetAddressBookName(account.vchPubKey.GetID(), strAccount);\n+        walletdb.WriteAccount(strAccount, account);\n+    }\n+\n+    return CBitcoinAddress(account.vchPubKey.GetID());\n+}\n+\n+bool CWallet::SetAccount(const CBitcoinAddress address, const std::string strAccount)\n+{\n+    // Detect when changing the account of an address that is the 'unused current key' of another account:\n+    CTxDestination dest = address.Get();\n+\tif (mapAddressBook.count(dest))\n+    {\n+        string strOldAccount = mapAddressBook[dest];\n+        if (address == GetAccountAddress(strOldAccount, false) && !GetAccountAddress(strOldAccount, true).IsValid())\n+            return false;\n+    }\n+\n+    return SetAddressBookName(dest, strAccount);\n+}"
      },
      {
        "sha": "a7f77bd0fd73b2b093f3c97c220f79f342f9884b",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56e396ce0d7b9299a03f0132c49150335e503ee2/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56e396ce0d7b9299a03f0132c49150335e503ee2/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=56e396ce0d7b9299a03f0132c49150335e503ee2",
        "patch": "@@ -283,6 +283,8 @@ class CWallet : public CCryptoKeyStore\n     bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n \n     bool SetDefaultKey(const CPubKey &vchPubKey);\n+    CBitcoinAddress GetAccountAddress(const std::string strAccount, bool bForceNew);\n+    bool SetAccount(const CBitcoinAddress address, const std::string strAccount);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower\n     bool SetMinVersion(enum WalletFeature, CWalletDB* pwalletdbIn = NULL, bool fExplicit = false);"
      }
    ]
  },
  {
    "sha": "35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWNkYTA4MDZhMGQwZmE3ODBjNzQzNWE0NTBhZDUwZGE2YjViYzli",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-05T17:23:22Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-05T17:23:22Z"
      },
      "message": "move some stuff touched by setaccount into methods of CWallet",
      "tree": {
        "sha": "b0e4e44b5a07fa189af6c060f3712362da298927",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0e4e44b5a07fa189af6c060f3712362da298927"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35cda0806a0d0fa780c7435a450ad50da6b5bc9b/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "56e396ce0d7b9299a03f0132c49150335e503ee2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56e396ce0d7b9299a03f0132c49150335e503ee2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56e396ce0d7b9299a03f0132c49150335e503ee2"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 35,
      "deletions": 27
    },
    "files": [
      {
        "sha": "90cac979cdf12db9781da67f5745914436998fcc",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 27,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35cda0806a0d0fa780c7435a450ad50da6b5bc9b/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35cda0806a0d0fa780c7435a450ad50da6b5bc9b/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
        "patch": "@@ -327,7 +327,6 @@ Value verifymessage(const Array& params, bool fHelp)\n     return (key.GetPubKey().GetID() == keyID);\n }\n \n-\n Value getreceivedbyaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n@@ -337,34 +336,13 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n \n     // Bitcoin address\n     CBitcoinAddress address = CBitcoinAddress(params[0].get_str());\n-    CScript scriptPubKey;\n-    if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n-    scriptPubKey.SetDestination(address.Get());\n-    // TODO: Should look like if (!pwalletMain->IsMyAddress(address))\n-    if (!IsMine(*pwalletMain, scriptPubKey))\n-        return (double)0.0;\n \n     // Minimum confirmations\n     int nMinDepth = 1;\n     if (params.size() > 1)\n         nMinDepth = params[1].get_int();\n \n-    // TODO: Replace whole block with return ValueFromAmount(pwalletMain->GetAddressTally(nMinDepth))\n-    // Tally\n-    int64 nAmount = 0;\n-    for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n-    {\n-        const CWalletTx& wtx = (*it).second;\n-        if (wtx.IsCoinBase() || !wtx.IsFinal())\n-            continue;\n-\n-        BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-            if (txout.scriptPubKey == scriptPubKey && wtx.GetDepthInMainChain() >= nMinDepth)\n-                nAmount += txout.nValue;\n-    }\n-\n-    return  ValueFromAmount(nAmount);\n+    return ValueFromAmount(pwalletMain->GetAddressTally(address, nMinDepth));\n }\n \n // TODO: Move to set<CTxDestination> CWallet::GetAccountAddresses(const std::string strAccount)\n@@ -408,7 +386,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n             CTxDestination address;\n-            if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*pwalletMain, address) && setAddress.count(address))\n+            if (ExtractDestination(txout.scriptPubKey, address) && pwalletMain->IsMyAddress(address) && setAddress.count(address))\n                 if (wtx.GetDepthInMainChain() >= nMinDepth)\n                     nAmount += txout.nValue;\n         }\n@@ -801,7 +779,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n             CTxDestination address;\n-            if (!ExtractDestination(txout.scriptPubKey, address) || !IsMine(*pwalletMain, address))\n+            if (!ExtractDestination(txout.scriptPubKey, address) || !pwalletMain->IsMyAddress(address))\n                 continue;\n \n             tallyitem& item = mapTally[address];\n@@ -1047,7 +1025,7 @@ Value listaccounts(const Array& params, bool fHelp)\n     // TODO: return ObjectFromMap(pwalletMain->GetAccountList(int nMindepth);\n     map<string, int64> mapAccountBalances;\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& entry, pwalletMain->mapAddressBook) {\n-        if (IsMine(*pwalletMain, entry.first)) // This address belongs to me\n+        if (pwalletMain->IsMyAddress(CBitcoinAddress(entry.first))) // This address belongs to me\n             mapAccountBalances[entry.second] = 0;\n     }\n \n@@ -1446,7 +1424,7 @@ Value validateaddress(const Array& params, bool fHelp)\n         CTxDestination dest = address.Get();\n         string currentAddress = address.ToString();\n         ret.push_back(Pair(\"address\", currentAddress));\n-        bool fMine = IsMine(*pwalletMain, dest);\n+        bool fMine = pwalletMain->IsMyAddress(address);\n         ret.push_back(Pair(\"ismine\", fMine));\n         if (fMine) {\n             Object detail = boost::apply_visitor(DescribeAddressVisitor(), dest);"
      },
      {
        "sha": "157e6f7b398c34993db42727c212e3247636c1fb",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35cda0806a0d0fa780c7435a450ad50da6b5bc9b/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35cda0806a0d0fa780c7435a450ad50da6b5bc9b/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
        "patch": "@@ -1826,3 +1826,31 @@ bool CWallet::SetAccount(const CBitcoinAddress address, const std::string strAcc\n \n     return SetAddressBookName(dest, strAccount);\n }\n+\n+bool CWallet::IsMyAddress(const CBitcoinAddress& address) const\n+{\n+    CScript scriptPubKey;\n+    scriptPubKey.SetDestination(address.Get());\n+    return ::IsMine(*this, scriptPubKey);\n+}\n+\n+int64 CWallet::GetAddressTally(const CBitcoinAddress address, int nMinDepth)\n+{\n+    if (!IsMyAddress(address))\n+        return 0;\n+\n+    int64 nAmount = 0;\n+    CScript scriptPubKey;\n+    scriptPubKey.SetDestination(address.Get());\n+    for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+    {\n+        const CWalletTx& wtx = (*it).second;\n+        if (wtx.IsCoinBase() || !wtx.IsFinal())\n+            continue;\n+\n+        BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n+            if (txout.scriptPubKey == scriptPubKey && wtx.GetDepthInMainChain() >= nMinDepth)\n+                nAmount += txout.nValue;\n+    }\n+    return nAmount;\n+}"
      },
      {
        "sha": "4628393a89118e352f4dab3cb7502dc0403cd9aa",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35cda0806a0d0fa780c7435a450ad50da6b5bc9b/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35cda0806a0d0fa780c7435a450ad50da6b5bc9b/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
        "patch": "@@ -196,6 +196,7 @@ class CWallet : public CCryptoKeyStore\n     {\n         return ::IsMine(*this, txout.scriptPubKey);\n     }\n+    bool IsMyAddress(const CBitcoinAddress& address) const;\n     int64 GetCredit(const CTxOut& txout) const\n     {\n         if (!MoneyRange(txout.nValue))\n@@ -285,6 +286,7 @@ class CWallet : public CCryptoKeyStore\n     bool SetDefaultKey(const CPubKey &vchPubKey);\n     CBitcoinAddress GetAccountAddress(const std::string strAccount, bool bForceNew);\n     bool SetAccount(const CBitcoinAddress address, const std::string strAccount);\n+    int64 GetAddressTally(const CBitcoinAddress address, int nMinDepth);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower\n     bool SetMinVersion(enum WalletFeature, CWalletDB* pwalletdbIn = NULL, bool fExplicit = false);"
      }
    ]
  },
  {
    "sha": "b62f6de0a2402032be7de3de99713346fae7acc4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjJmNmRlMGEyNDAyMDMyYmU3ZGUzZGU5OTcxMzM0NmZhZTdhY2M0",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-06T17:16:56Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-06T17:16:56Z"
      },
      "message": "Some touch-ups per Diapolo's diff comments.",
      "tree": {
        "sha": "a62af044f23ad7bcbc15d44b6cea37552628977d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a62af044f23ad7bcbc15d44b6cea37552628977d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b62f6de0a2402032be7de3de99713346fae7acc4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b62f6de0a2402032be7de3de99713346fae7acc4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b62f6de0a2402032be7de3de99713346fae7acc4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b62f6de0a2402032be7de3de99713346fae7acc4/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35cda0806a0d0fa780c7435a450ad50da6b5bc9b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35cda0806a0d0fa780c7435a450ad50da6b5bc9b"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 15,
      "deletions": 10
    },
    "files": [
      {
        "sha": "608dedb8dc6612d9c12d4b8b9abcc4f6410688b8",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b62f6de0a2402032be7de3de99713346fae7acc4/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b62f6de0a2402032be7de3de99713346fae7acc4/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=b62f6de0a2402032be7de3de99713346fae7acc4",
        "patch": "@@ -164,10 +164,13 @@ Value getaccount(const Array& params, bool fHelp)\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n \n+    // TODO: Exception if !pwalletMain->IsMyAddress(address)?\n     string strAccount;\n+    // TODO: std::string CWallet::GetAccount(const CBitcoinAddress& address)\n     map<CTxDestination, string>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n     if (mi != pwalletMain->mapAddressBook.end() && !(*mi).second.empty())\n         strAccount = (*mi).second;\n+    // TODO: Exception if account not found?\n     return strAccount;\n }\n \n@@ -181,6 +184,7 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n     string strAccount = AccountFromValue(params[0]);\n \n     // Find all addresses that have the given account\n+    // TODO: return VectorToArray(pwalletMain->GetAddressesByAccount(strAccount));\n     Array ret;\n     // TODO: Move bulk to std::vector<string> CWallet::GetAddressesByAccount(const std::string strAccount)\n     BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n@@ -208,6 +212,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     // Amount\n     int64 nAmount = AmountFromValue(params[1]);\n \n+    // TODO: string strError = pwalletMain->SendToAddress(address, nAmount, comment, commentto);\n     // Wallet comments\n     CWalletTx wtx;\n     if (params.size() > 2 && params[2].type() != null_type && !params[2].get_str().empty())\n@@ -386,7 +391,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n             CTxDestination address;\n-            if (ExtractDestination(txout.scriptPubKey, address) && pwalletMain->IsMyAddress(address) && setAddress.count(address))\n+            if (ExtractDestination(txout.scriptPubKey, address) && pwalletMain->IsMine(address) && setAddress.count(address))\n                 if (wtx.GetDepthInMainChain() >= nMinDepth)\n                     nAmount += txout.nValue;\n         }\n@@ -779,7 +784,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n             CTxDestination address;\n-            if (!ExtractDestination(txout.scriptPubKey, address) || !pwalletMain->IsMyAddress(address))\n+            if (!ExtractDestination(txout.scriptPubKey, address) || !pwalletMain->IsMine(address))\n                 continue;\n \n             tallyitem& item = mapTally[address];\n@@ -1025,7 +1030,7 @@ Value listaccounts(const Array& params, bool fHelp)\n     // TODO: return ObjectFromMap(pwalletMain->GetAccountList(int nMindepth);\n     map<string, int64> mapAccountBalances;\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& entry, pwalletMain->mapAddressBook) {\n-        if (pwalletMain->IsMyAddress(CBitcoinAddress(entry.first))) // This address belongs to me\n+        if (pwalletMain->IsMine(CBitcoinAddress(entry.first))) // This address belongs to me\n             mapAccountBalances[entry.second] = 0;\n     }\n \n@@ -1424,7 +1429,7 @@ Value validateaddress(const Array& params, bool fHelp)\n         CTxDestination dest = address.Get();\n         string currentAddress = address.ToString();\n         ret.push_back(Pair(\"address\", currentAddress));\n-        bool fMine = pwalletMain->IsMyAddress(address);\n+        bool fMine = pwalletMain->IsMine(address);\n         ret.push_back(Pair(\"ismine\", fMine));\n         if (fMine) {\n             Object detail = boost::apply_visitor(DescribeAddressVisitor(), dest);"
      },
      {
        "sha": "5e937c21a411b3a91691a98ddf97780edae12607",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b62f6de0a2402032be7de3de99713346fae7acc4/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b62f6de0a2402032be7de3de99713346fae7acc4/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=b62f6de0a2402032be7de3de99713346fae7acc4",
        "patch": "@@ -1801,9 +1801,9 @@ CBitcoinAddress CWallet::GetAccountAddress(const std::string strAccount, bool bF\n     // Generate a new key\n     if (!account.vchPubKey.IsValid() || bForceNew || bKeyUsed)\n     {\n-    \t// Caller must check validity to detect keypool depletion\n+        // Caller must check validity to detect keypool depletion\n         if (!GetKeyFromPool(account.vchPubKey, false))\n-        \treturn CBitcoinAddress();\n+            return CBitcoinAddress();\n \n         // TODO: Do something with the return code\n         SetAddressBookName(account.vchPubKey.GetID(), strAccount);\n@@ -1817,7 +1817,7 @@ bool CWallet::SetAccount(const CBitcoinAddress address, const std::string strAcc\n {\n     // Detect when changing the account of an address that is the 'unused current key' of another account:\n     CTxDestination dest = address.Get();\n-\tif (mapAddressBook.count(dest))\n+    if (mapAddressBook.count(dest))\n     {\n         string strOldAccount = mapAddressBook[dest];\n         if (address == GetAccountAddress(strOldAccount, false) && !GetAccountAddress(strOldAccount, true).IsValid())\n@@ -1827,7 +1827,7 @@ bool CWallet::SetAccount(const CBitcoinAddress address, const std::string strAcc\n     return SetAddressBookName(dest, strAccount);\n }\n \n-bool CWallet::IsMyAddress(const CBitcoinAddress& address) const\n+bool CWallet::IsMine(const CBitcoinAddress& address) const\n {\n     CScript scriptPubKey;\n     scriptPubKey.SetDestination(address.Get());\n@@ -1836,7 +1836,7 @@ bool CWallet::IsMyAddress(const CBitcoinAddress& address) const\n \n int64 CWallet::GetAddressTally(const CBitcoinAddress address, int nMinDepth)\n {\n-    if (!IsMyAddress(address))\n+    if (!IsMine(address))\n         return 0;\n \n     int64 nAmount = 0;"
      },
      {
        "sha": "36a284133691f3b7bf5ef102bd6942bd7a15883a",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b62f6de0a2402032be7de3de99713346fae7acc4/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b62f6de0a2402032be7de3de99713346fae7acc4/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=b62f6de0a2402032be7de3de99713346fae7acc4",
        "patch": "@@ -196,7 +196,7 @@ class CWallet : public CCryptoKeyStore\n     {\n         return ::IsMine(*this, txout.scriptPubKey);\n     }\n-    bool IsMyAddress(const CBitcoinAddress& address) const;\n+    bool IsMine(const CBitcoinAddress& address) const;\n     int64 GetCredit(const CTxOut& txout) const\n     {\n         if (!MoneyRange(txout.nValue))"
      }
    ]
  },
  {
    "sha": "f342af9bfcfb50a7951fd1882410ebe791deccba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzQyYWY5YmZjZmI1MGE3OTUxZmQxODgyNDEwZWJlNzkxZGVjY2Jh",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-07T22:49:56Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-07T22:49:56Z"
      },
      "message": "make GetAccountBalance a method of CWallet; clean up some spacing",
      "tree": {
        "sha": "5de20c15c53a0809b9fc9e5d2527e2a315e76321",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5de20c15c53a0809b9fc9e5d2527e2a315e76321"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f342af9bfcfb50a7951fd1882410ebe791deccba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f342af9bfcfb50a7951fd1882410ebe791deccba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f342af9bfcfb50a7951fd1882410ebe791deccba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f342af9bfcfb50a7951fd1882410ebe791deccba/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b62f6de0a2402032be7de3de99713346fae7acc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b62f6de0a2402032be7de3de99713346fae7acc4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b62f6de0a2402032be7de3de99713346fae7acc4"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 31,
      "deletions": 46
    },
    "files": [
      {
        "sha": "26ae5ba22396245e2ed6d44f6d9e4027ebb08f04",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 46,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f342af9bfcfb50a7951fd1882410ebe791deccba/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f342af9bfcfb50a7951fd1882410ebe791deccba/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=f342af9bfcfb50a7951fd1882410ebe791deccba",
        "patch": "@@ -400,40 +400,6 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n     return (double)nAmount / (double)COIN;\n }\n \n-// TODO: Move to int64 CWallet::GetAccountBalance(const string& strAccount, const int nMinDepth)\n-int64 GetAccountBalance(CWalletDB& walletdb, const string& strAccount, int nMinDepth)\n-{\n-    int64 nBalance = 0;\n-\n-    // Tally wallet transactions\n-    for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n-    {\n-        const CWalletTx& wtx = (*it).second;\n-        if (!wtx.IsFinal())\n-            continue;\n-\n-        int64 nReceived, nSent, nFee;\n-        wtx.GetAccountAmounts(strAccount, nReceived, nSent, nFee);\n-\n-        if (nReceived != 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n-            nBalance += nReceived;\n-        nBalance -= nSent + nFee;\n-    }\n-\n-    // Tally internal accounting entries\n-    nBalance += walletdb.GetAccountCreditDebit(strAccount);\n-\n-    return nBalance;\n-}\n-\n-// TODO: Move to int64 CWallet::GetAccountBalance(const string& strAccount, const int nMinDepth)\n-int64 GetAccountBalance(const string& strAccount, int nMinDepth)\n-{\n-    CWalletDB walletdb(pwalletMain->strWalletFile);\n-    return GetAccountBalance(walletdb, strAccount, nMinDepth);\n-}\n-\n-\n Value getbalance(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 2)\n@@ -480,12 +446,11 @@ Value getbalance(const Array& params, bool fHelp)\n \n     string strAccount = AccountFromValue(params[0]);\n \n-    int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n+    int64 nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth);\n \n     return ValueFromAmount(nBalance);\n }\n \n-\n Value movecmd(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 3 || params.size() > 5)\n@@ -536,7 +501,6 @@ Value movecmd(const Array& params, bool fHelp)\n     return true;\n }\n \n-\n Value sendfrom(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 3 || params.size() > 6)\n@@ -564,7 +528,7 @@ Value sendfrom(const Array& params, bool fHelp)\n     EnsureWalletIsUnlocked();\n \n     // Check funds\n-    int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n+    int64 nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth);\n     if (nAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n@@ -576,7 +540,6 @@ Value sendfrom(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n-\n Value sendmany(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 4)\n@@ -621,7 +584,7 @@ Value sendmany(const Array& params, bool fHelp)\n     EnsureWalletIsUnlocked();\n \n     // Check funds\n-    int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n+    int64 nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth);\n     if (totalAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n@@ -1163,7 +1126,6 @@ Value gettransaction(const Array& params, bool fHelp)\n     return entry;\n }\n \n-\n Value backupwallet(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -1178,7 +1140,6 @@ Value backupwallet(const Array& params, bool fHelp)\n     return Value::null;\n }\n \n-\n Value keypoolrefill(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 0)\n@@ -1288,7 +1249,6 @@ Value walletpassphrase(const Array& params, bool fHelp)\n     return Value::null;\n }\n \n-\n Value walletpassphrasechange(const Array& params, bool fHelp)\n {\n     if (pwalletMain->IsCrypted() && (fHelp || params.size() != 2))\n@@ -1321,7 +1281,6 @@ Value walletpassphrasechange(const Array& params, bool fHelp)\n     return Value::null;\n }\n \n-\n Value walletlock(const Array& params, bool fHelp)\n {\n     if (pwalletMain->IsCrypted() && (fHelp || params.size() != 0))\n@@ -1344,7 +1303,6 @@ Value walletlock(const Array& params, bool fHelp)\n     return Value::null;\n }\n \n-\n Value encryptwallet(const Array& params, bool fHelp)\n {\n     if (!pwalletMain->IsCrypted() && (fHelp || params.size() != 1))\n@@ -1440,4 +1398,3 @@ Value validateaddress(const Array& params, bool fHelp)\n     }\n     return ret;\n }\n-"
      },
      {
        "sha": "a59220da1e587cdeca1d53e4739b668cd08757e8",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f342af9bfcfb50a7951fd1882410ebe791deccba/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f342af9bfcfb50a7951fd1882410ebe791deccba/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=f342af9bfcfb50a7951fd1882410ebe791deccba",
        "patch": "@@ -1854,3 +1854,30 @@ int64 CWallet::GetAddressTally(const CBitcoinAddress address, int nMinDepth)\n     }\n     return nAmount;\n }\n+\n+int64 CWallet::GetAccountBalance(const string& strAccount, int nMinDepth)\n+{\n+\tCWalletDB walletdb(strWalletFile);\n+    int64 nBalance = 0;\n+    // Moved out of loop to avoid some unneeded operations\n+    int64 nReceived, nSent, nFee;\n+\n+    // Tally wallet transactions\n+    for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+    {\n+        const CWalletTx& wtx = (*it).second;\n+        if (!wtx.IsFinal())\n+            continue;\n+\n+        wtx.GetAccountAmounts(strAccount, nReceived, nSent, nFee);\n+\n+        if (nReceived != 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n+            nBalance += nReceived;\n+        nBalance -= nSent + nFee;\n+    }\n+\n+    // Tally internal accounting entries\n+    nBalance += walletdb.GetAccountCreditDebit(strAccount);\n+\n+    return nBalance;\n+}"
      },
      {
        "sha": "edae12acb410ddbd85adae77f85d8a8272e41fa4",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f342af9bfcfb50a7951fd1882410ebe791deccba/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f342af9bfcfb50a7951fd1882410ebe791deccba/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=f342af9bfcfb50a7951fd1882410ebe791deccba",
        "patch": "@@ -286,6 +286,7 @@ class CWallet : public CCryptoKeyStore\n     bool SetDefaultKey(const CPubKey &vchPubKey);\n     CBitcoinAddress GetAccountAddress(const std::string strAccount, bool bForceNew);\n     bool SetAccount(const CBitcoinAddress address, const std::string strAccount);\n+    int64 GetAccountBalance(const std::string& strAccount, int nMinDepth);\n     int64 GetAddressTally(const CBitcoinAddress address, int nMinDepth);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower"
      }
    ]
  },
  {
    "sha": "18f7e1d3885c7f89380386be27289084bdd3d2c0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOGY3ZTFkMzg4NWM3Zjg5MzgwMzg2YmUyNzI4OTA4NGJkZDNkMmMw",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-07T23:35:44Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-07T23:35:44Z"
      },
      "message": "make GetAccountAddresses into a method of CWallet",
      "tree": {
        "sha": "65b843ef00c25d79ec9e5d90a28404ff3a91347e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65b843ef00c25d79ec9e5d90a28404ff3a91347e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18f7e1d3885c7f89380386be27289084bdd3d2c0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18f7e1d3885c7f89380386be27289084bdd3d2c0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/18f7e1d3885c7f89380386be27289084bdd3d2c0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18f7e1d3885c7f89380386be27289084bdd3d2c0/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f342af9bfcfb50a7951fd1882410ebe791deccba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f342af9bfcfb50a7951fd1882410ebe791deccba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f342af9bfcfb50a7951fd1882410ebe791deccba"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 16,
      "deletions": 14
    },
    "files": [
      {
        "sha": "ee15b4deb489c6546e13be17d9b6737d4a083ed6",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 14,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18f7e1d3885c7f89380386be27289084bdd3d2c0/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18f7e1d3885c7f89380386be27289084bdd3d2c0/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=18f7e1d3885c7f89380386be27289084bdd3d2c0",
        "patch": "@@ -350,18 +350,6 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n     return ValueFromAmount(pwalletMain->GetAddressTally(address, nMinDepth));\n }\n \n-// TODO: Move to set<CTxDestination> CWallet::GetAccountAddresses(const std::string strAccount)\n-void GetAccountAddresses(string strAccount, set<CTxDestination>& setAddress)\n-{\n-    BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& item, pwalletMain->mapAddressBook)\n-    {\n-        const CTxDestination& address = item.first;\n-        const string& strName = item.second;\n-        if (strName == strAccount)\n-            setAddress.insert(address);\n-    }\n-}\n-\n Value getreceivedbyaccount(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n@@ -376,8 +364,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n \n     // Get the set of pub keys assigned to account\n     string strAccount = AccountFromValue(params[0]);\n-    set<CTxDestination> setAddress;\n-    GetAccountAddresses(strAccount, setAddress);\n+    set<CTxDestination> setAddress = pwalletMain->GetAccountAddresses(strAccount);\n \n     // TODO: Replace whole block with return ValueFromAmount(pwalletMain->GetAccountTally(strAccount, nMinDepth))\n     // Tally"
      },
      {
        "sha": "770a9b391040cbf5abefbf36ff5054d6cca7215f",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18f7e1d3885c7f89380386be27289084bdd3d2c0/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18f7e1d3885c7f89380386be27289084bdd3d2c0/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=18f7e1d3885c7f89380386be27289084bdd3d2c0",
        "patch": "@@ -1881,3 +1881,17 @@ int64 CWallet::GetAccountBalance(const string& strAccount, int nMinDepth)\n \n     return nBalance;\n }\n+\n+// TODO: Move to set<CTxDestination> CWallet::GetAccountAddresses(const std::string strAccount)\n+std::set<CTxDestination> CWallet::GetAccountAddresses(std::string strAccount)\n+{\n+\tset<CTxDestination> setRet;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& item, mapAddressBook)\n+    {\n+        const CTxDestination& address = item.first;\n+        const string& strName = item.second;\n+        if (strName == strAccount)\n+            setRet.insert(address);\n+    }\n+    return setRet;\n+}"
      },
      {
        "sha": "014364d9b4c3f74cf01bee64caa69eb6b3448bb2",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18f7e1d3885c7f89380386be27289084bdd3d2c0/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18f7e1d3885c7f89380386be27289084bdd3d2c0/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=18f7e1d3885c7f89380386be27289084bdd3d2c0",
        "patch": "@@ -288,6 +288,7 @@ class CWallet : public CCryptoKeyStore\n     bool SetAccount(const CBitcoinAddress address, const std::string strAccount);\n     int64 GetAccountBalance(const std::string& strAccount, int nMinDepth);\n     int64 GetAddressTally(const CBitcoinAddress address, int nMinDepth);\n+    std::set<CTxDestination> GetAccountAddresses(std::string strAccount);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower\n     bool SetMinVersion(enum WalletFeature, CWalletDB* pwalletdbIn = NULL, bool fExplicit = false);"
      }
    ]
  },
  {
    "sha": "1668147ff31bfb36c680e4d4a8aff066fc288b6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNjY4MTQ3ZmYzMWJmYjM2YzY4MGU0ZDRhOGFmZjA2NmZjMjg4YjZk",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-07T23:46:19Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-07T23:46:19Z"
      },
      "message": "snip an unneeded comment; inline a couple of variables in\nCWallet::GetAccountAddresses()",
      "tree": {
        "sha": "b39c7f3a532aad0691118c52023b4fc9aadc933c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b39c7f3a532aad0691118c52023b4fc9aadc933c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1668147ff31bfb36c680e4d4a8aff066fc288b6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1668147ff31bfb36c680e4d4a8aff066fc288b6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1668147ff31bfb36c680e4d4a8aff066fc288b6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1668147ff31bfb36c680e4d4a8aff066fc288b6d/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "18f7e1d3885c7f89380386be27289084bdd3d2c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18f7e1d3885c7f89380386be27289084bdd3d2c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/18f7e1d3885c7f89380386be27289084bdd3d2c0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "23217356cbd76cd8f69c795915cc5b72425e581e",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1668147ff31bfb36c680e4d4a8aff066fc288b6d/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1668147ff31bfb36c680e4d4a8aff066fc288b6d/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=1668147ff31bfb36c680e4d4a8aff066fc288b6d",
        "patch": "@@ -1882,16 +1882,14 @@ int64 CWallet::GetAccountBalance(const string& strAccount, int nMinDepth)\n     return nBalance;\n }\n \n-// TODO: Move to set<CTxDestination> CWallet::GetAccountAddresses(const std::string strAccount)\n std::set<CTxDestination> CWallet::GetAccountAddresses(std::string strAccount)\n {\n \tset<CTxDestination> setRet;\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& item, mapAddressBook)\n     {\n-        const CTxDestination& address = item.first;\n-        const string& strName = item.second;\n-        if (strName == strAccount)\n-            setRet.insert(address);\n+        if (item.second == strAccount)\n+        \t// push address into set\n+            setRet.insert(item.first);\n     }\n     return setRet;\n }"
      }
    ]
  },
  {
    "sha": "a16766870ea277f613ec1a3e6e3e7c65c44eee59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTY3NjY4NzBlYTI3N2Y2MTNlYzFhM2U2ZTNlN2M2NWM0NGVlZTU5",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-08T00:14:13Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-08T00:14:13Z"
      },
      "message": "use CWallet::GetAccountAddresses() in getaddressesbyaccount()",
      "tree": {
        "sha": "2c9cccdaedc2762a58f3d10e237516e1b75e3ce0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c9cccdaedc2762a58f3d10e237516e1b75e3ce0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a16766870ea277f613ec1a3e6e3e7c65c44eee59",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16766870ea277f613ec1a3e6e3e7c65c44eee59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a16766870ea277f613ec1a3e6e3e7c65c44eee59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16766870ea277f613ec1a3e6e3e7c65c44eee59/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1668147ff31bfb36c680e4d4a8aff066fc288b6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1668147ff31bfb36c680e4d4a8aff066fc288b6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1668147ff31bfb36c680e4d4a8aff066fc288b6d"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 4,
      "deletions": 9
    },
    "files": [
      {
        "sha": "484187334e96b00f7a8b0bddaddad8302016a477",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a16766870ea277f613ec1a3e6e3e7c65c44eee59/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a16766870ea277f613ec1a3e6e3e7c65c44eee59/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=a16766870ea277f613ec1a3e6e3e7c65c44eee59",
        "patch": "@@ -184,16 +184,11 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n     string strAccount = AccountFromValue(params[0]);\n \n     // Find all addresses that have the given account\n-    // TODO: return VectorToArray(pwalletMain->GetAddressesByAccount(strAccount));\n+    // TODO: use vectors instead of sets?\n+    std::set<CTxDestination> setAddress = pwalletMain->GetAccountAddresses(strAccount);\n     Array ret;\n-    // TODO: Move bulk to std::vector<string> CWallet::GetAddressesByAccount(const std::string strAccount)\n-    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n-    {\n-        const CBitcoinAddress& address = item.first;\n-        const string& strName = item.second;\n-        if (strName == strAccount)\n-            ret.push_back(address.ToString());\n-    }\n+    BOOST_FOREACH(const CTxDestination& item, setAddress)\n+    \tret.push_back(CBitcoinAddress(item).ToString());\n     return ret;\n }\n "
      }
    ]
  },
  {
    "sha": "801be244dd41790b522fe464f32dea48241fe549",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDFiZTI0NGRkNDE3OTBiNTIyZmU0NjRmMzJkZWE0ODI0MWZlNTQ5",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-08T21:36:39Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-08T21:36:39Z"
      },
      "message": "indentation fix",
      "tree": {
        "sha": "2985a67f9785076739adf3440349625fe8905fd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2985a67f9785076739adf3440349625fe8905fd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/801be244dd41790b522fe464f32dea48241fe549",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/801be244dd41790b522fe464f32dea48241fe549",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/801be244dd41790b522fe464f32dea48241fe549",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/801be244dd41790b522fe464f32dea48241fe549/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a16766870ea277f613ec1a3e6e3e7c65c44eee59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16766870ea277f613ec1a3e6e3e7c65c44eee59",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a16766870ea277f613ec1a3e6e3e7c65c44eee59"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6f2576fb37a35da86fbd84d36f441246eb3ca753",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/801be244dd41790b522fe464f32dea48241fe549/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/801be244dd41790b522fe464f32dea48241fe549/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=801be244dd41790b522fe464f32dea48241fe549",
        "patch": "@@ -188,7 +188,7 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n     std::set<CTxDestination> setAddress = pwalletMain->GetAccountAddresses(strAccount);\n     Array ret;\n     BOOST_FOREACH(const CTxDestination& item, setAddress)\n-    \tret.push_back(CBitcoinAddress(item).ToString());\n+        ret.push_back(CBitcoinAddress(item).ToString());\n     return ret;\n }\n "
      }
    ]
  },
  {
    "sha": "c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2IxMDg2ZDlmNzk3MjJhN2Y0NzQ5Y2QwYjkyNGRmZjcwOGIzYzNh",
    "commit": {
      "author": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-25T20:59:54Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-25T20:59:54Z"
      },
      "message": "Remove CBitcoinAddress deps in wallet.cpp; Remove an inappropriate TODO.",
      "tree": {
        "sha": "e62dcb128d463d5ce284e63f71cd1f9cf1bfeb89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e62dcb128d463d5ce284e63f71cd1f9cf1bfeb89"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7b1086d9f79722a7f4749cd0b924dff708b3c3a/comments",
    "author": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "801be244dd41790b522fe464f32dea48241fe549",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/801be244dd41790b522fe464f32dea48241fe549",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/801be244dd41790b522fe464f32dea48241fe549"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 14,
      "deletions": 16
    },
    "files": [
      {
        "sha": "02decc388202dc2a94431c0819a15448de6b9fd2",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7b1086d9f79722a7f4749cd0b924dff708b3c3a/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7b1086d9f79722a7f4749cd0b924dff708b3c3a/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
        "patch": "@@ -127,7 +127,7 @@ Value getaccountaddress(const Array& params, bool fHelp)\n \n     // Parse the account first so we don't generate a key if there's an error\n     string strAccount = AccountFromValue(params[0]);\n-    CBitcoinAddress address = pwalletMain->GetAccountAddress(strAccount, false);\n+    CBitcoinAddress address = CBitcoinAddress(pwalletMain->GetAccountAddress(strAccount, false));\n     if (address.IsValid())\n     \treturn address.ToString();\n     throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n@@ -149,7 +149,7 @@ Value setaccount(const Array& params, bool fHelp)\n         strAccount = AccountFromValue(params[1]);\n \n     // TODO: Use the return code for something\n-    pwalletMain->SetAccount(address, strAccount);\n+    pwalletMain->SetAccount(address.Get(), strAccount);\n     return Value::null;\n }\n \n@@ -342,7 +342,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n     if (params.size() > 1)\n         nMinDepth = params[1].get_int();\n \n-    return ValueFromAmount(pwalletMain->GetAddressTally(address, nMinDepth));\n+    return ValueFromAmount(pwalletMain->GetAddressTally(address.Get(), nMinDepth));\n }\n \n Value getreceivedbyaccount(const Array& params, bool fHelp)\n@@ -398,7 +398,6 @@ Value getbalance(const Array& params, bool fHelp)\n         nMinDepth = params[1].get_int();\n \n     if (params[0].get_str() == \"*\") {\n-    \t// TODO: Why is there a \"different way\" if both \"should always return the same number\"?\n         // Calculate total balance a different way from GetBalance()\n         // (GetBalance() sums up all unspent TxOuts)\n         // getbalance and getbalance '*' should always return the same number."
      },
      {
        "sha": "cd6bbfb7d74c240aeb853ba257ba6856cc943b77",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7b1086d9f79722a7f4749cd0b924dff708b3c3a/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7b1086d9f79722a7f4749cd0b924dff708b3c3a/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
        "patch": "@@ -1771,7 +1771,7 @@ void CWallet::UpdatedTransaction(const uint256 &hashTx)\n     }\n }\n \n-CBitcoinAddress CWallet::GetAccountAddress(const std::string strAccount, bool bForceNew=false)\n+CTxDestination CWallet::GetAccountAddress(const std::string strAccount, bool bForceNew=false)\n {\n     CWalletDB walletdb(strWalletFile);\n     CAccount account;\n@@ -1803,24 +1803,23 @@ CBitcoinAddress CWallet::GetAccountAddress(const std::string strAccount, bool bF\n     {\n         // Caller must check validity to detect keypool depletion\n         if (!GetKeyFromPool(account.vchPubKey, false))\n-            return CBitcoinAddress();\n+            return CTxDestination();\n \n         // TODO: Do something with the return code\n         SetAddressBookName(account.vchPubKey.GetID(), strAccount);\n         walletdb.WriteAccount(strAccount, account);\n     }\n \n-    return CBitcoinAddress(account.vchPubKey.GetID());\n+    return CTxDestination(account.vchPubKey.GetID());\n }\n \n-bool CWallet::SetAccount(const CBitcoinAddress address, const std::string strAccount)\n+bool CWallet::SetAccount(const CTxDestination& dest, const std::string strAccount)\n {\n     // Detect when changing the account of an address that is the 'unused current key' of another account:\n-    CTxDestination dest = address.Get();\n     if (mapAddressBook.count(dest))\n     {\n         string strOldAccount = mapAddressBook[dest];\n-        if (address == GetAccountAddress(strOldAccount, false) && !GetAccountAddress(strOldAccount, true).IsValid())\n+        if (dest == GetAccountAddress(strOldAccount, false) && !CBitcoinAddress(GetAccountAddress(strOldAccount, true)).IsValid())\n             return false;\n     }\n \n@@ -1834,14 +1833,14 @@ bool CWallet::IsMine(const CBitcoinAddress& address) const\n     return ::IsMine(*this, scriptPubKey);\n }\n \n-int64 CWallet::GetAddressTally(const CBitcoinAddress address, int nMinDepth)\n+int64 CWallet::GetAddressTally(const CTxDestination& dest, int nMinDepth)\n {\n-    if (!IsMine(address))\n+    if (!IsMine(CBitcoinAddress(dest)))\n         return 0;\n \n     int64 nAmount = 0;\n     CScript scriptPubKey;\n-    scriptPubKey.SetDestination(address.Get());\n+    scriptPubKey.SetDestination(dest);\n     for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n     {\n         const CWalletTx& wtx = (*it).second;"
      },
      {
        "sha": "5e76c3da3f8bdbc31212cbc29aca9fb3b9c68aa6",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7b1086d9f79722a7f4749cd0b924dff708b3c3a/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7b1086d9f79722a7f4749cd0b924dff708b3c3a/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
        "patch": "@@ -284,10 +284,10 @@ class CWallet : public CCryptoKeyStore\n     bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n \n     bool SetDefaultKey(const CPubKey &vchPubKey);\n-    CBitcoinAddress GetAccountAddress(const std::string strAccount, bool bForceNew);\n-    bool SetAccount(const CBitcoinAddress address, const std::string strAccount);\n+    CTxDestination GetAccountAddress(const std::string strAccount, bool bForceNew);\n+    bool SetAccount(const CTxDestination& dest, const std::string strAccount);\n     int64 GetAccountBalance(const std::string& strAccount, int nMinDepth);\n-    int64 GetAddressTally(const CBitcoinAddress address, int nMinDepth);\n+    int64 GetAddressTally(const CTxDestination& dest, int nMinDepth);\n     std::set<CTxDestination> GetAccountAddresses(std::string strAccount);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower"
      }
    ]
  },
  {
    "sha": "895e618227f0377c4232ab4e9388dae4b01500e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTVlNjE4MjI3ZjAzNzdjNDIzMmFiNGU5Mzg4ZGFlNGIwMTUwMGUx",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-15T17:08:50Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:12:35Z"
      },
      "message": "tests for SetCompact and GetCompact of CBigNum",
      "tree": {
        "sha": "871134fcca465b5de12c3a0c4a43936e9d414949",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/871134fcca465b5de12c3a0c4a43936e9d414949"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/895e618227f0377c4232ab4e9388dae4b01500e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/895e618227f0377c4232ab4e9388dae4b01500e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/895e618227f0377c4232ab4e9388dae4b01500e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/895e618227f0377c4232ab4e9388dae4b01500e1/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7b1086d9f79722a7f4749cd0b924dff708b3c3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7b1086d9f79722a7f4749cd0b924dff708b3c3a"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 53,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5b898d149907200412a59a1675500c9e19f07055",
        "filename": "src/test/bignum_tests.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/895e618227f0377c4232ab4e9388dae4b01500e1/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/895e618227f0377c4232ab4e9388dae4b01500e1/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=895e618227f0377c4232ab4e9388dae4b01500e1",
        "patch": "@@ -122,4 +122,57 @@ BOOST_AUTO_TEST_CASE(bignum_setint64)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(bignum_SetCompact)\n+{\n+    CBigNum num;\n+    num.SetCompact(0);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"0\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0);\n+\n+    num.SetCompact(0x00123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"0\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0);\n+\n+    num.SetCompact(0x01123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"12\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x01120000);\n+\n+    // Make sure that we don't generate compacts with the 0x00800000 bit set\n+    num = 0x80;\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x02008000);\n+\n+    num.SetCompact(0x01fedcba);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"-7e\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x01fe0000);\n+\n+    num.SetCompact(0x02123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"1234\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x02123400);\n+\n+    num.SetCompact(0x03123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"123456\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x03123456);\n+\n+    num.SetCompact(0x04123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"12345600\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x04123456);\n+\n+    num.SetCompact(0x04923456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"-12345600\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x04923456);\n+\n+    num.SetCompact(0x05009234);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"92340000\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x05009234);\n+\n+    num.SetCompact(0x20123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"1234560000000000000000000000000000000000000000000000000000000000\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x20123456);\n+\n+    num.SetCompact(0xff123456);\n+    BOOST_CHECK_EQUAL(num.GetHexn+    BOOST_CHECK_EQUAL(num.GetCompact(), 0xff123456);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "087d9712947de5a8a1ae861c09c24c7d86bd0d5d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowODdkOTcxMjk0N2RlNWE4YTFhZTg2MWMwOWMyNGM3ZDg2YmQwZDVk",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-15T17:09:17Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:12:35Z"
      },
      "message": "reimplement CBigNum's compact encoding of difficulty targets\n\nUse shifts instead of going through the MPI representation of BIGNUMs.\nBe careful to keep the meaning of 0x00800000 as sign bit.",
      "tree": {
        "sha": "f7949a7e50fa3ef78afa46a5f42457f509b687e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7949a7e50fa3ef78afa46a5f42457f509b687e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/087d9712947de5a8a1ae861c09c24c7d86bd0d5d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/087d9712947de5a8a1ae861c09c24c7d86bd0d5d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/087d9712947de5a8a1ae861c09c24c7d86bd0d5d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/087d9712947de5a8a1ae861c09c24c7d86bd0d5d/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "895e618227f0377c4232ab4e9388dae4b01500e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/895e618227f0377c4232ab4e9388dae4b01500e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/895e618227f0377c4232ab4e9388dae4b01500e1"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 54,
      "deletions": 14
    },
    "files": [
      {
        "sha": "ad98613f5fab937ecf5e613fd5b9fd86cc359ef5",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 54,
        "deletions": 14,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/087d9712947de5a8a1ae861c09c24c7d86bd0d5d/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/087d9712947de5a8a1ae861c09c24c7d86bd0d5d/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=087d9712947de5a8a1ae861c09c24c7d86bd0d5d",
        "patch": "@@ -262,28 +262,68 @@ class CBigNum : public BIGNUM\n         return vch;\n     }\n \n+    // The \"compact\" format is a representation of a whole\n+    // number N using an unsigned 32bit number similar to a\n+    // floating point format.\n+    // The most significant 8 bits are the unsigned exponent of base 256.\n+    // This exponent can be thought of as \"number of bytes of N\".\n+    // The lower 23 bits are the mantissa.\n+    // Bit number 24 (0x800000) represents the sign of N.\n+    // N = (-1^sign) * mantissa * 256^(exponent-3)\n+    //\n+    // Satoshi's original implementation used BN_bn2mpi() and BN_mpi2bn().\n+    // MPI uses the most significant bit of the first byte as sign.\n+    // Thus 0x1234560000 is compact (0x05123456)\n+    // and  0xc0de000000 is compact (0x0600c0de)\n+    // (0x05c0de00) would be -0x40de000000\n+    //\n+    // Bitcoin only uses this \"compact\" format for encoding difficulty\n+    // targets, which are unsigned 256bit quantities.  Thus, all the\n+    // complexities of the sign bit and using base 256 are probably an\n+    // implementation accident.\n+    //\n+    // This implementation directly uses shifts instead of going\n+    // through an intermediate MPI representation.\n     CBigNum& SetCompact(unsigned int nCompact)\n     {\n         unsigned int nSize = nCompact >> 24;\n-        std::vector<unsigned char> vch(4 + nSize);\n-        vch[3] = nSize;\n-        if (nSize >= 1) vch[4] = (nCompact >> 16) & 0xff;\n-        if (nSize >= 2) vch[5] = (nCompact >> 8) & 0xff;\n-        if (nSize >= 3) vch[6] = (nCompact >> 0) & 0xff;\n-        BN_mpi2bn(&vch[0], vch.size(), this);\n+        bool fNegative     =(nCompact & 0x00800000) != 0;\n+        unsigned int nWord = nCompact & 0x007fffff;\n+        if (nSize <= 3)\n+        {\n+            nWord >>= 8*(3-nSize);\n+            BN_set_word(this, nWord);\n+        }\n+        else\n+        {\n+            BN_set_word(this, nWord);\n+            BN_lshift(this, this, 8*(nSize-3));\n+        }\n+        BN_set_negative(this, fNegative);\n         return *this;\n     }\n \n     unsigned int GetCompact() const\n     {\n-        unsigned int nSize = BN_bn2mpi(this, NULL);\n-        std::vector<unsigned char> vch(nSize);\n-        nSize -= 4;\n-        BN_bn2mpi(this, &vch[0]);\n-        unsigned int nCompact = nSize << 24;\n-        if (nSize >= 1) nCompact |= (vch[4] << 16);\n-        if (nSize >= 2) nCompact |= (vch[5] << 8);\n-        if (nSize >= 3) nCompact |= (vch[6] << 0);\n+        unsigned int nSize = BN_num_bytes(this);\n+        unsigned int nCompact = 0;\n+        if (nSize <= 3)\n+            nCompact = BN_get_word(this) << 8*(3-nSize);\n+        else\n+        {\n+            CBigNum bn;\n+            BN_rshift(&bn, this, 8*(nSize-3));\n+            nCompact = BN_get_word(&bn);\n+        }\n+        // The 0x00800000 bit denotes the sign.\n+        // Thus, if it is already set, divide the mantissa by 256 and increase the exponent.\n+        if (nCompact & 0x00800000)\n+        {\n+            nCompact >>= 8;\n+            nSize++;\n+        }\n+        nCompact |= nSize << 24;\n+        nCompact |= (BN_is_negative(this) ? 0x00800000 : 0);\n         return nCompact;\n     }\n "
      }
    ]
  },
  {
    "sha": "3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTEyYjM5MzBmOGQ2M2U0YTJhMTZhZTJlZmUyNTExYWNlYzJiNWIw",
    "commit": {
      "author": {
        "name": "grimd34th",
        "email": "ubpd34th@gmail.com",
        "date": "2012-10-21T14:38:12Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:12:36Z"
      },
      "message": "Add NATIVE_WINDOWS\n\nWith a change of libs, and specifying NATIVE_WINDOWS as TARGET_OS it should compile libleveldb.a and libmemenv.a just fine, it did for me and Diapolo when testing.",
      "tree": {
        "sha": "5287ce8fa1993237a0de66d53dd7f1d1d2e41264",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5287ce8fa1993237a0de66d53dd7f1d1d2e41264"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0/comments",
    "author": {
      "login": "grimd34th",
      "id": 934782,
      "node_id": "MDQ6VXNlcjkzNDc4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/934782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grimd34th",
      "html_url": "https://github.com/grimd34th",
      "followers_url": "https://api.github.com/users/grimd34th/followers",
      "following_url": "https://api.github.com/users/grimd34th/following{/other_user}",
      "gists_url": "https://api.github.com/users/grimd34th/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grimd34th/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grimd34th/subscriptions",
      "organizations_url": "https://api.github.com/users/grimd34th/orgs",
      "repos_url": "https://api.github.com/users/grimd34th/repos",
      "events_url": "https://api.github.com/users/grimd34th/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grimd34th/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "087d9712947de5a8a1ae861c09c24c7d86bd0d5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/087d9712947de5a8a1ae861c09c24c7d86bd0d5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/087d9712947de5a8a1ae861c09c24c7d86bd0d5d"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b16a3aae7c0007f7fbeca9c9886edf77276f5c4f",
        "filename": "src/leveldb/build_detect_platform",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0/src/leveldb/build_detect_platform",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0/src/leveldb/build_detect_platform",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/build_detect_platform?ref=3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0",
        "patch": "@@ -119,6 +119,16 @@ case \"$TARGET_OS\" in\n         PLATFORM_EXTRALIBS=\"-lboost_system-mt-s -lboost_filesystem-mt-s -lboost_thread_win32-mt-s\"\n         CROSS_COMPILE=true\n         ;;\n+  NATIVE_WINDOWS)\n+        PLATFORM=OS_WINDOWS\n+        COMMON_FLAGS=\"-fno-builtin-memcmp -D_REENTRANT -DOS_WINDOWS -DLEVELDB_PLATFORM_WINDOWS -DBOOST_THREAD_USE_LIB\"\n+        PLATFORM_CXXFLAGS=\"\"\n+        PLATFORM_LDFLAGS=\"\"\n+        PLATFORM_SHARED_CFLAGS=\"\"\n+        PLATFORM_SOURCES=\"port/port_win.cc util/env_boost.cc util/win_logger.cc\"\n+\t\tPLATFORM_EXTRALIBS=\"-lboost_system-mgw45-mt-s-1_50 -lboost_filesystem-mgw45-mt-s-1_50 -lboost_thread-mgw45-mt-s-1_50 -lboost_chrono-mgw45-mt-s-1_50\"\n+        CROSS_COMPILE=true\t\n+\t    ;;\n     *)\n         echo \"Unknown platform!\" >&2\n         exit 1"
      }
    ]
  },
  {
    "sha": "714fc57a2d3e2dc75ec5429350ef73cf4b417958",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTRmYzU3YTJkM2UyZGM3NWVjNTQyOTM1MGVmNzNjZjRiNDE3OTU4",
    "commit": {
      "author": {
        "name": "Alexander Kjeldaas",
        "email": "alexander.kjeldaas@gmail.com",
        "date": "2012-11-11T01:21:07Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:12:36Z"
      },
      "message": "o Added threadsafety.h - a set of macros using the -Wthread-safety\n  feature in clang.  These macros should primarily be used to\n  document which locks protect a given piece of data.  Secondary it\n  can be used to document the set of held and excluded locks when\n  entering a function.",
      "tree": {
        "sha": "43e6b8add7ff379b4e80f30d9c7274ed9a68b478",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43e6b8add7ff379b4e80f30d9c7274ed9a68b478"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/714fc57a2d3e2dc75ec5429350ef73cf4b417958",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/714fc57a2d3e2dc75ec5429350ef73cf4b417958",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/714fc57a2d3e2dc75ec5429350ef73cf4b417958",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/714fc57a2d3e2dc75ec5429350ef73cf4b417958/comments",
    "author": {
      "login": "alexanderkjeldaas",
      "id": 339369,
      "node_id": "MDQ6VXNlcjMzOTM2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexanderkjeldaas",
      "html_url": "https://github.com/alexanderkjeldaas",
      "followers_url": "https://api.github.com/users/alexanderkjeldaas/followers",
      "following_url": "https://api.github.com/users/alexanderkjeldaas/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexanderkjeldaas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexanderkjeldaas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexanderkjeldaas/subscriptions",
      "organizations_url": "https://api.github.com/users/alexanderkjeldaas/orgs",
      "repos_url": "https://api.github.com/users/alexanderkjeldaas/repos",
      "events_url": "https://api.github.com/users/alexanderkjeldaas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexanderkjeldaas/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e12b3930f8d63e4a2a16ae2efe2511acec2b5b0"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 53,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3d3d526fd66611ccdd3350d10b2557cb46579c1f",
        "filename": "src/threadsafety.h",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/714fc57a2d3e2dc75ec5429350ef73cf4b417958/src/threadsafety.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/714fc57a2d3e2dc75ec5429350ef73cf4b417958/src/threadsafety.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/threadsafety.h?ref=714fc57a2d3e2dc75ec5429350ef73cf4b417958",
        "patch": "@@ -0,0 +1,53 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2012 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_THREADSAFETY_H\n+#define BITCOIN_THREADSAFETY_H\n+\n+#ifdef __clang__\n+// TL;DR Add GUARDED_BY(mutex) to member variables. The others are\n+// rarely necessary. Ex: int nFoo GUARDED_BY(cs_foo);\n+//\n+// See http://clang.llvm.org/docs/LanguageExtensions.html#threadsafety\n+// for documentation.  The clang compiler can do advanced static analysis\n+// of locking when given the -Wthread-safety option.\n+#define LOCKABLE                        __attribute__ ((lockable))\n+#define SCOPED_LOCKABLE                 __attribute__ ((scoped_lockable))\n+#define GUARDED_BY(x)                   __attribute__ ((guarded_by(x)))\n+#define GUARDED_VAR                     __attribute__ ((guarded_var))\n+#define PT_GUARDED_BY(x)                __attribute__ ((pt_guarded_by(x)))\n+#define PT_GUARDED_VAR                  __attribute__ ((pt_guarded_var))\n+#define ACQUIRED_AFTER(...)             __attribute__ ((acquired_after(__VA_ARGS__)))\n+#define ACQUIRED_BEFORE(...)            __attribute__ ((acquired_before(__VA_ARGS__)))\n+#define EXCLUSIVE_LOCK_FUNCTION(...)    __attribute__ ((exclusive_lock_function(__VA_ARGS__)))\n+#define SHARED_LOCK_FUNCTION(...)       __attribute__ ((shared_lock_function(__VA_ARGS__)))\n+#define EXCLUSIVE_TRYLOCK_FUNCTION(...) __attribute__ ((exclusive_trylock_function(__VA_ARGS__)))\n+#define SHARED_TRYLOCK_FUNCTION(...)    __attribute__ ((shared_trylock_function(__VA_ARGS__)))\n+#define UNLOCK_FUNCTION(...)            __attribute__ ((unlock_function(__VA_ARGS__)))\n+#define LOCK_RETURNED(x)                __attribute__ ((lock_returned(x)))\n+#define LOCKS_EXCLUDED(...)             __attribute__ ((locks_excluded(__VA_ARGS__)))\n+#define EXCLUSIVE_LOCKS_REQUIRED(...)   __attribute__ ((exclusive_locks_required(__VA_ARGS__)))\n+#define SHARED_LOCKS_REQUIRED(...)      __attribute__ ((shared_locks_required(__VA_ARGS__)))\n+#define NO_THREAD_SAFETY_ANALYSIS       __attribute__ ((no_thread_safety_analysis))\n+#else\n+#define LOCKABLE\n+#define SCOPED_LOCKABLE\n+#define GUARDED_BY(x)\n+#define GUARDED_VAR\n+#define PT_GUARDED_BY(x)\n+#define PT_GUARDED_VAR\n+#define ACQUIRED_AFTER(...)\n+#define ACQUIRED_BEFORE(...)\n+#define EXCLUSIVE_LOCK_FUNCTION(...)\n+#define SHARED_LOCK_FUNCTION(...)\n+#define EXCLUSIVE_TRYLOCK_FUNCTION(...)\n+#define SHARED_TRYLOCK_FUNCTION(...)\n+#define UNLOCK_FUNCTION(...)\n+#define LOCK_RETURNED(x)\n+#define LOCKS_EXCLUDED(...)\n+#define EXCLUSIVE_LOCKS_REQUIRED(...)\n+#define SHARED_LOCKS_REQUIRED(...)\n+#define NO_THREAD_SAFETY_ANALYSIS\n+#endif  // __GNUC__\n+#endif  // BITCOIN_THREADSAFETY_H"
      }
    ]
  },
  {
    "sha": "e622ef1e57ed5e3f6d434cd67b231484e6259a61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjIyZWYxZTU3ZWQ1ZTNmNmQ0MzRjZDY3YjIzMTQ4NGU2MjU5YTYx",
    "commit": {
      "author": {
        "name": "Alexander Kjeldaas",
        "email": "alexander.kjeldaas@gmail.com",
        "date": "2012-11-11T02:50:26Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:12:36Z"
      },
      "message": "o Added AnnotatedMixin which adds locking annotations to the mutex\n  API, compatible with clang's -Wthread-safety",
      "tree": {
        "sha": "25dd8e7fb9c98f9beb3c0e577d0e2da86742fdee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25dd8e7fb9c98f9beb3c0e577d0e2da86742fdee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e622ef1e57ed5e3f6d434cd67b231484e6259a61",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e622ef1e57ed5e3f6d434cd67b231484e6259a61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e622ef1e57ed5e3f6d434cd67b231484e6259a61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e622ef1e57ed5e3f6d434cd67b231484e6259a61/comments",
    "author": {
      "login": "alexanderkjeldaas",
      "id": 339369,
      "node_id": "MDQ6VXNlcjMzOTM2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexanderkjeldaas",
      "html_url": "https://github.com/alexanderkjeldaas",
      "followers_url": "https://api.github.com/users/alexanderkjeldaas/followers",
      "following_url": "https://api.github.com/users/alexanderkjeldaas/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexanderkjeldaas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexanderkjeldaas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexanderkjeldaas/subscriptions",
      "organizations_url": "https://api.github.com/users/alexanderkjeldaas/orgs",
      "repos_url": "https://api.github.com/users/alexanderkjeldaas/repos",
      "events_url": "https://api.github.com/users/alexanderkjeldaas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexanderkjeldaas/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "714fc57a2d3e2dc75ec5429350ef73cf4b417958",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/714fc57a2d3e2dc75ec5429350ef73cf4b417958",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/714fc57a2d3e2dc75ec5429350ef73cf4b417958"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 23,
      "deletions": 2
    },
    "files": [
      {
        "sha": "930c9b2b80bb88610efddcc354db7158218355ab",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 23,
        "deletions": 2,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e622ef1e57ed5e3f6d434cd67b231484e6259a61/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e622ef1e57ed5e3f6d434cd67b231484e6259a61/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=e622ef1e57ed5e3f6d434cd67b231484e6259a61",
        "patch": "@@ -9,15 +9,36 @@\n #include <boost/thread/recursive_mutex.hpp>\n #include <boost/thread/locks.hpp>\n #include <boost/thread/condition_variable.hpp>\n+#include \"threadsafety.h\"\n \n+// Template mixin that adds -Wthread-safety locking annotations to a\n+// subset of the mutex API.\n+template <typename PARENT>\n+class LOCKABLE AnnotatedMixin : public PARENT\n+{\n+public:\n+    void lock() EXCLUSIVE_LOCK_FUNCTION()\n+    {\n+      PARENT::lock();\n+    }\n \n+    void unlock() UNLOCK_FUNCTION()\n+    {\n+      PARENT::unlock();\n+    }\n \n+    bool try_lock() EXCLUSIVE_TRYLOCK_FUNCTION(true)\n+    {\n+      return PARENT::try_lock();\n+    }\n+};\n \n /** Wrapped boost mutex: supports recursive locking, but no waiting  */\n-typedef boost::recursive_mutex CCriticalSection;\n+// TODO: We should move away from using the recursive lock by default.\n+typedef AnnotatedMixin<boost::recursive_mutex> CCriticalSection;\n \n /** Wrapped boost mutex: supports waiting but not recursive locking */\n-typedef boost::mutex CWaitableCriticalSection;\n+typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n \n #ifdef DEBUG_LOCKORDER\n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false);"
      }
    ]
  },
  {
    "sha": "637075a8a594880a954615f1f7efca5246956189",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzcwNzVhOGE1OTQ4ODBhOTU0NjE1ZjFmN2VmY2E1MjQ2OTU2MTg5",
    "commit": {
      "author": {
        "name": "Alexander Kjeldaas",
        "email": "alexander.kjeldaas@gmail.com",
        "date": "2012-11-11T02:51:50Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:12:36Z"
      },
      "message": "o Annotated lock-like functions in net.h.\no Removed unused function EndMessageAbortIfEmpty",
      "tree": {
        "sha": "46ad7ed13c4d63cd696b2ad80c1f07518a6e41a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46ad7ed13c4d63cd696b2ad80c1f07518a6e41a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637075a8a594880a954615f1f7efca5246956189",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/637075a8a594880a954615f1f7efca5246956189",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/637075a8a594880a954615f1f7efca5246956189",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/637075a8a594880a954615f1f7efca5246956189/comments",
    "author": {
      "login": "alexanderkjeldaas",
      "id": 339369,
      "node_id": "MDQ6VXNlcjMzOTM2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/339369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexanderkjeldaas",
      "html_url": "https://github.com/alexanderkjeldaas",
      "followers_url": "https://api.github.com/users/alexanderkjeldaas/followers",
      "following_url": "https://api.github.com/users/alexanderkjeldaas/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexanderkjeldaas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexanderkjeldaas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexanderkjeldaas/subscriptions",
      "organizations_url": "https://api.github.com/users/alexanderkjeldaas/orgs",
      "repos_url": "https://api.github.com/users/alexanderkjeldaas/repos",
      "events_url": "https://api.github.com/users/alexanderkjeldaas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexanderkjeldaas/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e622ef1e57ed5e3f6d434cd67b231484e6259a61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e622ef1e57ed5e3f6d434cd67b231484e6259a61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e622ef1e57ed5e3f6d434cd67b231484e6259a61"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 6,
      "deletions": 16
    },
    "files": [
      {
        "sha": "ace119f954d2d07d41adb679bdd82830c45b1739",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 16,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/637075a8a594880a954615f1f7efca5246956189/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/637075a8a594880a954615f1f7efca5246956189/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=637075a8a594880a954615f1f7efca5246956189",
        "patch": "@@ -305,7 +305,8 @@ class CNode\n \n \n \n-    void BeginMessage(const char* pszCommand)\n+    // TODO: Document the postcondition of this function.  Is cs_vSend locked?\n+    void BeginMessage(const char* pszCommand) EXCLUSIVE_LOCK_FUNCTION(cs_vSend)\n     {\n         ENTER_CRITICAL_SECTION(cs_vSend);\n         if (nHeaderStart != -1)\n@@ -317,7 +318,8 @@ class CNode\n             printf(\"sending: %s \", pszCommand);\n     }\n \n-    void AbortMessage()\n+    // TODO: Document the precondition of this function.  Is cs_vSend locked?\n+    void AbortMessage() UNLOCK_FUNCTION(cs_vSend)\n     {\n         if (nHeaderStart < 0)\n             return;\n@@ -330,7 +332,8 @@ class CNode\n             printf(\"(aborted)\\n\");\n     }\n \n-    void EndMessage()\n+    // TODO: Document the precondition of this function.  Is cs_vSend locked?\n+    void EndMessage() UNLOCK_FUNCTION(cs_vSend)\n     {\n         if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n         {\n@@ -362,19 +365,6 @@ class CNode\n         LEAVE_CRITICAL_SECTION(cs_vSend);\n     }\n \n-    void EndMessageAbortIfEmpty()\n-    {\n-        if (nHeaderStart < 0)\n-            return;\n-        int nSize = vSend.size() - nMessageStart;\n-        if (nSize > 0)\n-            EndMessage();\n-        else\n-            AbortMessage();\n-    }\n-\n-\n-\n     void PushVersion();\n \n "
      }
    ]
  },
  {
    "sha": "000f859afa5b1a657d18e739f2d54c237eb43805",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDBmODU5YWZhNWIxYTY1N2QxOGU3MzlmMmQ1NGMyMzdlYjQzODA1",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-09-27T17:52:09Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:08Z"
      },
      "message": "Add new RPC \"lockunspent\", to prevent spending of selected outputs\nand associated RPC \"listlockunspent\".\n\nThis is a memory-only filter, which is empty when a node restarts.",
      "tree": {
        "sha": "d7b16648a8411ea1c16f0105991e23daa3cd4f9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7b16648a8411ea1c16f0105991e23daa3cd4f9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/000f859afa5b1a657d18e739f2d54c237eb43805",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/000f859afa5b1a657d18e739f2d54c237eb43805",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/000f859afa5b1a657d18e739f2d54c237eb43805",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/000f859afa5b1a657d18e739f2d54c237eb43805/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "637075a8a594880a954615f1f7efca5246956189",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/637075a8a594880a954615f1f7efca5246956189",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/637075a8a594880a954615f1f7efca5246956189"
      }
    ],
    "stats": {
      "total": 130,
      "additions": 127,
      "deletions": 3
    },
    "files": [
      {
        "sha": "bfb696da3d5576fa45be4fbe57681c9148d308e1",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/000f859afa5b1a657d18e739f2d54c237eb43805/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/000f859afa5b1a657d18e739f2d54c237eb43805/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=000f859afa5b1a657d18e739f2d54c237eb43805",
        "patch": "@@ -254,6 +254,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"sendrawtransaction\",     &sendrawtransaction,     false,  false },\n     { \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,   false },\n     { \"gettxout\",               &gettxout,               true,   false },\n+    { \"lockunspent\",            &lockunspent,            false,  false },\n+    { \"listlockunspent\",        &listlockunspent,        false,  false },\n };\n \n CRPCTable::CRPCTable()\n@@ -1215,6 +1217,8 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n     if (strMethod == \"gettxout\"               && n > 1) ConvertTo<boost::int64_t>(params[1]);\n     if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n+    if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n+    if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n \n     return params;\n }"
      },
      {
        "sha": "44050ae1bb4079084d12c3d8d7431c9cb8687651",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/000f859afa5b1a657d18e739f2d54c237eb43805/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/000f859afa5b1a657d18e739f2d54c237eb43805/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=000f859afa5b1a657d18e739f2d54c237eb43805",
        "patch": "@@ -177,6 +177,8 @@ extern json_spirit::Value getinfo(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getrawtransaction(const json_spirit::Array& params, bool fHelp); // in rcprawtransaction.cpp\n extern json_spirit::Value listunspent(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value lockunspent(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value listlockunspent(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value createrawtransaction(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value decoderawtransaction(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value signrawtransaction(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "6dee12fa0efe2283d7fe208e46c65ba64ff21e34",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 77,
        "deletions": 1,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/000f859afa5b1a657d18e739f2d54c237eb43805/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/000f859afa5b1a657d18e739f2d54c237eb43805/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=000f859afa5b1a657d18e739f2d54c237eb43805",
        "patch": "@@ -3,6 +3,8 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <boost/assign/list_of.hpp>\n+\n #include \"wallet.h\"\n // TODO: Remove this include after removing all dependencies\n // NOTE: DO NOT ADD NEW DEPENDENCIES ON CWalletDB!\n@@ -11,8 +13,10 @@\n #include \"init.h\"\n #include \"base58.h\"\n \n-using namespace json_spirit;\n using namespace std;\n+using namespace boost;\n+using namespace boost::assign;\n+using namespace json_spirit;\n \n int64 nWalletUnlockTime;\n static CCriticalSection cs_nWalletUnlockTime;\n@@ -1379,3 +1383,75 @@ Value validateaddress(const Array& params, bool fHelp)\n     }\n     return ret;\n }\n+\n+\n+Value lockunspent(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"lockunspent unlock? [array-of-Objects]\\n\"\n+            \"Updates list of temporarily unspendable outputs.\");\n+\n+    if (params.size() == 1)\n+        RPCTypeCheck(params, list_of(bool_type));\n+    else\n+        RPCTypeCheck(params, list_of(bool_type)(array_type));\n+\n+    bool fUnlock = params[0].get_bool();\n+\n+    if (params.size() == 1) {\n+        if (fUnlock)\n+            pwalletMain->UnlockAllCoins();\n+        return true;\n+    }\n+\n+    Array outputs = params[1].get_array();\n+    BOOST_FOREACH(Value& output, outputs)\n+    {\n+        if (output.type() != obj_type)\n+            throw JSONRPCError(-8, \"Invalid parameter, expected object\");\n+        const Object& o = output.get_obj();\n+\n+        RPCTypeCheck(o, map_list_of(\"txid\", str_type)(\"vout\", int_type));\n+\n+        string txid = find_value(o, \"txid\").get_str();\n+        if (!IsHex(txid))\n+            throw JSONRPCError(-8, \"Invalid parameter, expected hex txid\");\n+\n+        int nOutput = find_value(o, \"vout\").get_int();\n+        if (nOutput < 0)\n+            throw JSONRPCError(-8, \"Invalid parameter, vout must be positive\");\n+\n+        COutPoint outpt(uint256(txid), nOutput);\n+\n+        if (fUnlock)\n+            pwalletMain->UnlockCoin(outpt);\n+        else\n+            pwalletMain->LockCoin(outpt);\n+    }\n+\n+    return true;\n+}\n+\n+Value listlockunspent(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() > 0)\n+        throw runtime_error(\n+            \"listlockunspent\\n\"\n+            \"Returns list of temporarily unspendable outputs.\");\n+\n+    vector<COutPoint> vOutpts;\n+    pwalletMain->ListLockedCoins(vOutpts);\n+\n+    Array ret;\n+\n+    BOOST_FOREACH(COutPoint &outpt, vOutpts) {\n+        Object o;\n+\n+        o.push_back(Pair(\"txid\", outpt.hash.GetHex()));\n+        o.push_back(Pair(\"vout\", (int)outpt.n));\n+        ret.push_back(o);\n+    }\n+\n+    return ret;\n+}"
      },
      {
        "sha": "360b27a7710113b3202375365770ce2b9420e50b",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 2,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/000f859afa5b1a657d18e739f2d54c237eb43805/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/000f859afa5b1a657d18e739f2d54c237eb43805/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=000f859afa5b1a657d18e739f2d54c237eb43805",
        "patch": "@@ -957,9 +957,11 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed) const\n             if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n                 continue;\n \n-            for (unsigned int i = 0; i < pcoin->vout.size(); i++)\n-                if (!(pcoin->IsSpent(i)) && IsMine(pcoin->vout[i]) && pcoin->vout[i].nValue > 0)\n+            for (unsigned int i = 0; i < pcoin->vout.size(); i++) {\n+                if (!(pcoin->IsSpent(i)) && IsMine(pcoin->vout[i]) &&\n+                    !IsLockedCoin((*it).first, i) && pcoin->vout[i].nValue > 0)\n                     vCoins.push_back(COutput(pcoin, i, pcoin->GetDepthInMainChain()));\n+            }\n         }\n     }\n }\n@@ -1771,6 +1773,7 @@ void CWallet::UpdatedTransaction(const uint256 &hashTx)\n     }\n }\n \n+\n CTxDestination CWallet::GetAccountAddress(const std::string strAccount, bool bForceNew=false)\n {\n     CWalletDB walletdb(strWalletFile);\n@@ -1892,3 +1895,35 @@ std::set<CTxDestination> CWallet::GetAccountAddresses(std::string strAccount)\n     }\n     return setRet;\n }\n+\n+void CWallet::LockCoin(COutPoint& output)\n+{\n+    setLockedCoins.insert(output);\n+}\n+\n+void CWallet::UnlockCoin(COutPoint& output)\n+{\n+    setLockedCoins.erase(output);\n+}\n+\n+void CWallet::UnlockAllCoins()\n+{\n+    setLockedCoins.clear();\n+}\n+\n+bool CWallet::IsLockedCoin(uint256 hash, unsigned int n) const\n+{\n+    COutPoint outpt(hash, n);\n+\n+    return (setLockedCoins.count(outpt) > 0);\n+}\n+\n+void CWallet::ListLockedCoins(std::vector<COutPoint>& vOutpts)\n+{\n+    for (std::set<COutPoint>::iterator it = setLockedCoins.begin();\n+         it != setLockedCoins.end(); it++) {\n+        COutPoint outpt = (*it);\n+        vOutpts.push_back(outpt);\n+    }\n+}\n+"
      },
      {
        "sha": "f2293003e7d4238cf84562088b40e62bec6a0ae7",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/000f859afa5b1a657d18e739f2d54c237eb43805/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/000f859afa5b1a657d18e739f2d54c237eb43805/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=000f859afa5b1a657d18e739f2d54c237eb43805",
        "patch": "@@ -119,11 +119,18 @@ class CWallet : public CCryptoKeyStore\n \n     CPubKey vchDefaultKey;\n \n+    std::set<COutPoint> setLockedCoins;\n+\n     // check whether we are allowed to upgrade (or already support) to the named feature\n     bool CanSupportFeature(enum WalletFeature wf) { return nWalletMaxVersion >= wf; }\n \n     void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true) const;\n     bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const;\n+    bool IsLockedCoin(uint256 hash, unsigned int n) const;\n+    void LockCoin(COutPoint& output);\n+    void UnlockCoin(COutPoint& output);\n+    void UnlockAllCoins();\n+    void ListLockedCoins(std::vector<COutPoint>& vOutpts);\n \n     // keystore implementation\n     // Generate a new key"
      }
    ]
  },
  {
    "sha": "1cb1882847fc3bb257476f3a9e0b85b14f43d68b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2IxODgyODQ3ZmMzYmIyNTc0NzZmM2E5ZTBiODViMTRmNDNkNjhi",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-11-27T21:20:43Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:09Z"
      },
      "message": "split of createTrayIconMenu() from createTrayIcon() in BitcoinGUI\n\n- this allows to setup the trayicon before we have and want a trayicon menu\n- should be of great use, when we remove that splash screen\n- fixes a small bug with the toggleHideAction icon, which is not only used with\n  trayicon but also with the Mac dock",
      "tree": {
        "sha": "80dc4826e53725f164aa0c64c9ff52f92738f484",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80dc4826e53725f164aa0c64c9ff52f92738f484"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cb1882847fc3bb257476f3a9e0b85b14f43d68b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cb1882847fc3bb257476f3a9e0b85b14f43d68b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1cb1882847fc3bb257476f3a9e0b85b14f43d68b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cb1882847fc3bb257476f3a9e0b85b14f43d68b/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "000f859afa5b1a657d18e739f2d54c237eb43805",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/000f859afa5b1a657d18e739f2d54c237eb43805",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/000f859afa5b1a657d18e739f2d54c237eb43805"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 24,
      "deletions": 9
    },
    "files": [
      {
        "sha": "aa45716c482376f193acc9566e16a02c14978aa0",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 8,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cb1882847fc3bb257476f3a9e0b85b14f43d68b/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cb1882847fc3bb257476f3a9e0b85b14f43d68b/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=1cb1882847fc3bb257476f3a9e0b85b14f43d68b",
        "patch": "@@ -90,7 +90,7 @@ BitcoinGUI::BitcoinGUI(QWidget *parent):\n     // Create the toolbars\n     createToolBars();\n \n-    // Create the tray icon (or setup the dock icon)\n+    // Create system tray icon and notification\n     createTrayIcon();\n \n     // Create tabs\n@@ -354,12 +354,17 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n                 // Just attach \" [testnet]\" to the existing tooltip\n                 trayIcon->setToolTip(trayIcon->toolTip() + QString(\" \") + tr(\"[testnet]\"));\n                 trayIcon->setIcon(QIcon(\":/icons/toolbar_testnet\"));\n-                toggleHideAction->setIcon(QIcon(\":/icons/toolbar_testnet\"));\n             }\n \n+            toggleHideAction->setIcon(QIcon(\":/icons/toolbar_testnet\"));\n             aboutAction->setIcon(QIcon(\":/icons/toolbar_testnet\"));\n         }\n \n+        // Create system tray menu (or setup the dock menu) that late to prevent users from calling actions,\n+        // while the client has not yet fully loaded\n+        if(trayIcon)\n+            createTrayIconMenu();\n+\n         // Keep up to date with client\n         setNumConnections(clientModel->getNumConnections());\n         connect(clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n@@ -407,16 +412,26 @@ void BitcoinGUI::setWalletModel(WalletModel *walletModel)\n \n void BitcoinGUI::createTrayIcon()\n {\n-    QMenu *trayIconMenu;\n #ifndef Q_OS_MAC\n     trayIcon = new QSystemTrayIcon(this);\n-    trayIconMenu = new QMenu(this);\n-    trayIcon->setContextMenu(trayIconMenu);\n+\n     trayIcon->setToolTip(tr(\"Bitcoin client\"));\n     trayIcon->setIcon(QIcon(\":/icons/toolbar\"));\n+    trayIcon->show();\n+#endif\n+\n+    notificator = new Notificator(qApp->applicationName(), trayIcon);\n+}\n+\n+void BitcoinGUI::createTrayIconMenu()\n+{\n+    QMenu *trayIconMenu;\n+#ifndef Q_OS_MAC\n+    trayIconMenu = new QMenu(this);\n+    trayIcon->setContextMenu(trayIconMenu);\n+\n     connect(trayIcon, SIGNAL(activated(QSystemTrayIcon::ActivationReason)),\n             this, SLOT(trayIconActivated(QSystemTrayIcon::ActivationReason)));\n-    trayIcon->show();\n #else\n     // Note: On Mac, the dock icon is used to provide the tray's functionality.\n     MacDockIconHandler *dockIconHandler = MacDockIconHandler::instance();\n@@ -438,8 +453,6 @@ void BitcoinGUI::createTrayIcon()\n     trayIconMenu->addSeparator();\n     trayIconMenu->addAction(quitAction);\n #endif\n-\n-    notificator = new Notificator(qApp->applicationName(), trayIcon);\n }\n \n #ifndef Q_OS_MAC"
      },
      {
        "sha": "ecb3244ad53e906041f1591963a32875da4a9d50",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cb1882847fc3bb257476f3a9e0b85b14f43d68b/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cb1882847fc3bb257476f3a9e0b85b14f43d68b/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=1cb1882847fc3bb257476f3a9e0b85b14f43d68b",
        "patch": "@@ -105,8 +105,10 @@ class BitcoinGUI : public QMainWindow\n     void createMenuBar();\n     /** Create the toolbars */\n     void createToolBars();\n-    /** Create system tray (notification) icon */\n+    /** Create system tray icon and notification */\n     void createTrayIcon();\n+    /** Create system tray menu (or setup the dock menu) */\n+    void createTrayIconMenu();\n \n public slots:\n     /** Set number of connections shown in the UI */"
      }
    ]
  },
  {
    "sha": "b13fab57a5df19486c3f6622b411571b37de9a0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTNmYWI1N2E1ZGYxOTQ4NmMzZjY2MjJiNDExNTcxYjM3ZGU5YTBm",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-11-28T17:07:42Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:09Z"
      },
      "message": "Add \"checkpoints\" option, to permit disabling of checkpoint logic.",
      "tree": {
        "sha": "fc02bcd91da024655b003c76e9673d334d5dca55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc02bcd91da024655b003c76e9673d334d5dca55"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b13fab57a5df19486c3f6622b411571b37de9a0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b13fab57a5df19486c3f6622b411571b37de9a0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b13fab57a5df19486c3f6622b411571b37de9a0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b13fab57a5df19486c3f6622b411571b37de9a0f/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1cb1882847fc3bb257476f3a9e0b85b14f43d68b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cb1882847fc3bb257476f3a9e0b85b14f43d68b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1cb1882847fc3bb257476f3a9e0b85b14f43d68b"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cf3980561c2ece933f387c79ac77f96e4fad4ac2",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b13fab57a5df19486c3f6622b411571b37de9a0f/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b13fab57a5df19486c3f6622b411571b37de9a0f/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=b13fab57a5df19486c3f6622b411571b37de9a0f",
        "patch": "@@ -39,6 +39,9 @@ namespace Checkpoints\n \n     bool CheckBlock(int nHeight, const uint256& hash)\n     {\n+        if (!GetBoolArg(\"-checkpoints\", false))\n+            return true;\n+\n         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n \n         MapCheckpoints::const_iterator i = checkpoints.find(nHeight);\n@@ -48,13 +51,19 @@ namespace Checkpoints\n \n     int GetTotalBlocksEstimate()\n     {\n+        if (!GetBoolArg(\"-checkpoints\", false))\n+            return 0;\n+\n         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n \n         return checkpoints.rbegin()->first;\n     }\n \n     CBlockIndex* GetLastCheckpoint(const std::map<uint256, CBlockIndex*>& mapBlockIndex)\n     {\n+        if (!GetBoolArg(\"-checkpoints\", false))\n+            return NULL;\n+\n         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n \n         BOOST_REVERSE_FOREACH(const MapCheckpoints::value_type& i, checkpoints)"
      },
      {
        "sha": "bd941497f9f8a3e9df67e2c3277af12f4f96b1c3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b13fab57a5df19486c3f6622b411571b37de9a0f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b13fab57a5df19486c3f6622b411571b37de9a0f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b13fab57a5df19486c3f6622b411571b37de9a0f",
        "patch": "@@ -258,6 +258,7 @@ std::string HelpMessage()\n         \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\" +\n         \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\" +\n         \"  -irc                   \" + _(\"Find peers using internet relay chat (default: 0)\") + \"\\n\" +\n+        \"  -checkpoints           \" + _(\"Lock in block chain with compiled-in checkpoints (default: 1)\") + \"\\n\" +\n         \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\" +\n         \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\" +\n         \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\" +"
      }
    ]
  },
  {
    "sha": "68247322ad8b67d695db8dea4f4a03a7a9b9d752",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODI0NzMyMmFkOGI2N2Q2OTVkYjhkZWE0ZjRhMDNhN2E5YjlkNzUy",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-11-28T17:10:57Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:09Z"
      },
      "message": "New 'checkpoints' option should default to true.",
      "tree": {
        "sha": "e0215d8487fcfd6f34da3e492efcd82303849820",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0215d8487fcfd6f34da3e492efcd82303849820"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68247322ad8b67d695db8dea4f4a03a7a9b9d752",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68247322ad8b67d695db8dea4f4a03a7a9b9d752",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68247322ad8b67d695db8dea4f4a03a7a9b9d752",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68247322ad8b67d695db8dea4f4a03a7a9b9d752/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b13fab57a5df19486c3f6622b411571b37de9a0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b13fab57a5df19486c3f6622b411571b37de9a0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b13fab57a5df19486c3f6622b411571b37de9a0f"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "279003072e7a85a3a47a1164e4d647244bfd12a8",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68247322ad8b67d695db8dea4f4a03a7a9b9d752/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68247322ad8b67d695db8dea4f4a03a7a9b9d752/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=68247322ad8b67d695db8dea4f4a03a7a9b9d752",
        "patch": "@@ -39,7 +39,7 @@ namespace Checkpoints\n \n     bool CheckBlock(int nHeight, const uint256& hash)\n     {\n-        if (!GetBoolArg(\"-checkpoints\", false))\n+        if (!GetBoolArg(\"-checkpoints\", true))\n             return true;\n \n         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n@@ -51,7 +51,7 @@ namespace Checkpoints\n \n     int GetTotalBlocksEstimate()\n     {\n-        if (!GetBoolArg(\"-checkpoints\", false))\n+        if (!GetBoolArg(\"-checkpoints\", true))\n             return 0;\n \n         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n@@ -61,7 +61,7 @@ namespace Checkpoints\n \n     CBlockIndex* GetLastCheckpoint(const std::map<uint256, CBlockIndex*>& mapBlockIndex)\n     {\n-        if (!GetBoolArg(\"-checkpoints\", false))\n+        if (!GetBoolArg(\"-checkpoints\", true))\n             return NULL;\n \n         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);"
      }
    ]
  },
  {
    "sha": "31f532bcae940bc7b5ef35c97908ceb87edeef3c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWY1MzJiY2FlOTQwYmM3YjVlZjM1Yzk3OTA4Y2ViODdlZGVlZjNj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-11-30T23:26:56Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:09Z"
      },
      "message": "Enable script verification for reorganized mempool tx",
      "tree": {
        "sha": "1aceadebf48b0fca66162659c2bab1f0c7a9fb1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1aceadebf48b0fca66162659c2bab1f0c7a9fb1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31f532bcae940bc7b5ef35c97908ceb87edeef3c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f532bcae940bc7b5ef35c97908ceb87edeef3c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31f532bcae940bc7b5ef35c97908ceb87edeef3c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f532bcae940bc7b5ef35c97908ceb87edeef3c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68247322ad8b67d695db8dea4f4a03a7a9b9d752",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68247322ad8b67d695db8dea4f4a03a7a9b9d752",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68247322ad8b67d695db8dea4f4a03a7a9b9d752"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "466d4346d5ada586db09a2e89e429d2df95714d7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31f532bcae940bc7b5ef35c97908ceb87edeef3c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31f532bcae940bc7b5ef35c97908ceb87edeef3c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=31f532bcae940bc7b5ef35c97908ceb87edeef3c",
        "patch": "@@ -1776,7 +1776,7 @@ bool SetBestChain(CBlockIndex* pindexNew)\n \n     // Resurrect memory transactions that were in the disconnected branch\n     BOOST_FOREACH(CTransaction& tx, vResurrect)\n-        tx.AcceptToMemoryPool(false);\n+        tx.AcceptToMemoryPool();\n \n     // Delete redundant memory transactions that are in the connected branch\n     BOOST_FOREACH(CTransaction& tx, vDelete) {"
      }
    ]
  },
  {
    "sha": "0d4c38072933e75aef200b94b2a9af026c58d0e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDRjMzgwNzI5MzNlNzVhZWYyMDBiOTRiMmE5YWYwMjZjNThkMGU4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-11-30T23:41:27Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:09Z"
      },
      "message": "Only send reorged txn to mempool after checkpoint",
      "tree": {
        "sha": "67cc4199087f4ae9703b374c48cb86f5c0e70bb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67cc4199087f4ae9703b374c48cb86f5c0e70bb5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d4c38072933e75aef200b94b2a9af026c58d0e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d4c38072933e75aef200b94b2a9af026c58d0e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d4c38072933e75aef200b94b2a9af026c58d0e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d4c38072933e75aef200b94b2a9af026c58d0e8/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31f532bcae940bc7b5ef35c97908ceb87edeef3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31f532bcae940bc7b5ef35c97908ceb87edeef3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31f532bcae940bc7b5ef35c97908ceb87edeef3c"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1c1a27c5c3ca3fde3c3c40b564a36414b3129bec",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d4c38072933e75aef200b94b2a9af026c58d0e8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d4c38072933e75aef200b94b2a9af026c58d0e8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0d4c38072933e75aef200b94b2a9af026c58d0e8",
        "patch": "@@ -1726,9 +1726,11 @@ bool SetBestChain(CBlockIndex* pindexNew)\n         if (!viewTemp.Flush())\n             return error(\"SetBestBlock() : Cache flush failed after disconnect\");\n \n-        // Queue memory transactions to resurrect\n+        // Queue memory transactions to resurrect.\n+        // We only do this for blocks after the last checkpoint (reorganisation before that\n+        // point should only happen with -reindex/-loadblock, or a misbehaving peer.\n         BOOST_FOREACH(const CTransaction& tx, block.vtx)\n-            if (!tx.IsCoinBase())\n+            if (!tx.IsCoinBase() && pindex->nHeight > Checkpoints::GetTotalBlocksEstimate())\n                 vResurrect.push_back(tx);\n     }\n "
      }
    ]
  },
  {
    "sha": "2334194a519b4b4b7f7dfab10c5d7057a214208a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzM0MTk0YTUxOWI0YjRiN2Y3ZGZhYjEwYzVkNzA1N2EyMTQyMDhh",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-01T10:36:53Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:09Z"
      },
      "message": "FlushBlockFile(): check for valid FILE pointer\n\n- don't call FileCommit() and fclose() if no valid FILE pointer was\n  returned by OpenBlockFile()",
      "tree": {
        "sha": "682ec87b47eb20093351ea98c6e679889e257f07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/682ec87b47eb20093351ea98c6e679889e257f07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2334194a519b4b4b7f7dfab10c5d7057a214208a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2334194a519b4b4b7f7dfab10c5d7057a214208a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2334194a519b4b4b7f7dfab10c5d7057a214208a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2334194a519b4b4b7f7dfab10c5d7057a214208a/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0d4c38072933e75aef200b94b2a9af026c58d0e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d4c38072933e75aef200b94b2a9af026c58d0e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d4c38072933e75aef200b94b2a9af026c58d0e8"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "67fd9bc40f3682e28b7ad95dc07b56c53f7415c3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2334194a519b4b4b7f7dfab10c5d7057a214208a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2334194a519b4b4b7f7dfab10c5d7057a214208a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2334194a519b4b4b7f7dfab10c5d7057a214208a",
        "patch": "@@ -1540,12 +1540,16 @@ void static FlushBlockFile()\n     posOld.nPos = 0;\n \n     FILE *fileOld = OpenBlockFile(posOld);\n-    FileCommit(fileOld);\n-    fclose(fileOld);\n+    if (fileOld) {\n+        FileCommit(fileOld);\n+        fclose(fileOld);\n+    }\n \n     fileOld = OpenUndoFile(posOld);\n-    FileCommit(fileOld);\n-    fclose(fileOld);\n+    if (fileOld) {\n+        FileCommit(fileOld);\n+        fclose(fileOld);\n+    }\n }\n \n bool FindUndoPos(int nFile, CDiskBlockPos &pos, unsigned int nAddSize);"
      }
    ]
  },
  {
    "sha": "0a94022f8cdea21c9bda6f336e3a2773a7db8b0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTk0MDIyZjhjZGVhMjFjOWJkYTZmMzM2ZTNhMjc3M2E3ZGI4YjBm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-01T15:46:23Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:10Z"
      },
      "message": "Make SetBestChain() atomic\n\nIn case a reorganisation fails, the internal state could become\ninconsistent (memory only). Previously, a cache per block connect\nor disconnect action was used, so blocks could not be applied in\na partial way. Extend this to a cache for the entire reorganisation,\nmaking it atomic entirely. This also simplifies the code a bit.",
      "tree": {
        "sha": "af70665a61090015d49e3ceea8ef31c1656ff656",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af70665a61090015d49e3ceea8ef31c1656ff656"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a94022f8cdea21c9bda6f336e3a2773a7db8b0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a94022f8cdea21c9bda6f336e3a2773a7db8b0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a94022f8cdea21c9bda6f336e3a2773a7db8b0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a94022f8cdea21c9bda6f336e3a2773a7db8b0f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2334194a519b4b4b7f7dfab10c5d7057a214208a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2334194a519b4b4b7f7dfab10c5d7057a214208a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2334194a519b4b4b7f7dfab10c5d7057a214208a"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "9698bc4ca3966ad74064c6143227d9fcbd16ed6e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a94022f8cdea21c9bda6f336e3a2773a7db8b0f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a94022f8cdea21c9bda6f336e3a2773a7db8b0f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0a94022f8cdea21c9bda6f336e3a2773a7db8b0f",
        "patch": "@@ -1671,7 +1671,9 @@ bool CBlock::ConnectBlock(CBlockIndex* pindex, CCoinsViewCache &view, bool fJust\n \n bool SetBestChain(CBlockIndex* pindexNew)\n {\n-    CCoinsViewCache &view = *pcoinsTip;\n+    // All modifications to the coin state will be done in this cache.\n+    // Only when all have succeeded, we push it to pcoinsTip.\n+    CCoinsViewCache view(*pcoinsTip, true);\n \n     // special case for attaching the genesis block\n     // note that no ConnectBlock is called, so its coinbase output is non-spendable\n@@ -1724,11 +1726,8 @@ bool SetBestChain(CBlockIndex* pindexNew)\n         CBlock block;\n         if (!block.ReadFromDisk(pindex))\n             return error(\"SetBestBlock() : ReadFromDisk for disconnect failed\");\n-        CCoinsViewCache viewTemp(view, true);\n-        if (!block.DisconnectBlock(pindex, viewTemp))\n+        if (!block.DisconnectBlock(pindex, view))\n             return error(\"SetBestBlock() : DisconnectBlock %s failed\", BlockHashStr(pindex->GetBlockHash()).c_str());\n-        if (!viewTemp.Flush())\n-            return error(\"SetBestBlock() : Cache flush failed after disconnect\");\n \n         // Queue memory transactions to resurrect.\n         // We only do this for blocks after the last checkpoint (reorganisation before that\n@@ -1744,26 +1743,27 @@ bool SetBestChain(CBlockIndex* pindexNew)\n         CBlock block;\n         if (!block.ReadFromDisk(pindex))\n             return error(\"SetBestBlock() : ReadFromDisk for connect failed\");\n-        CCoinsViewCache viewTemp(view, true);\n-        if (!block.ConnectBlock(pindex, viewTemp)) {\n+        if (!block.ConnectBlock(pindex, view)) {\n             InvalidChainFound(pindexNew);\n             InvalidBlockFound(pindex);\n             return error(\"SetBestBlock() : ConnectBlock %s failed\", BlockHashStr(pindex->GetBlockHash()).c_str());\n         }\n-        if (!viewTemp.Flush())\n-            return error(\"SetBestBlock() : Cache flush failed after connect\");\n \n         // Queue memory transactions to delete\n         BOOST_FOREACH(const CTransaction& tx, block.vtx)\n             vDelete.push_back(tx);\n     }\n \n+    // Flush changes to global coin state\n+    if (!view.Flush())\n+        return error(\"SetBestBlock() : unable to modify coin state\");\n+\n     // Make sure it's successfully written to disk before changing memory structure\n     bool fIsInitialDownload = IsInitialBlockDownload();\n-    if (!fIsInitialDownload || view.GetCacheSize() > nCoinCacheSize) {\n+    if (!fIsInitialDownload || pcoinsTip->GetCacheSize() > nCoinCacheSize) {\n         FlushBlockFile();\n         pblocktree->Sync();\n-        if (!view.Flush())\n+        if (!pcoinsTip->Flush())\n             return false;\n     }\n "
      }
    ]
  },
  {
    "sha": "a70ce53bcd72fa6885305564dc011638fd404182",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzBjZTUzYmNkNzJmYTY4ODUzMDU1NjRkYzAxMTYzOGZkNDA0MTgy",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-03T09:14:54Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:10Z"
      },
      "message": "add 2 constructors in CDiskBlockPos to simplify class usage\n\n- add a default-constructor, which simply calls SetNull() and a\n  constructor to directly pass nFile and nPos\n- change code to use that new constructors",
      "tree": {
        "sha": "0318aa0aa61cf79e13c56fa754fc75dc0d84ed98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0318aa0aa61cf79e13c56fa754fc75dc0d84ed98"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a70ce53bcd72fa6885305564dc011638fd404182",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a70ce53bcd72fa6885305564dc011638fd404182",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a70ce53bcd72fa6885305564dc011638fd404182",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a70ce53bcd72fa6885305564dc011638fd404182/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a94022f8cdea21c9bda6f336e3a2773a7db8b0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a94022f8cdea21c9bda6f336e3a2773a7db8b0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a94022f8cdea21c9bda6f336e3a2773a7db8b0f"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "fa5d8e0a0b3b2620c76fb02e6d98735d9322cd34",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a70ce53bcd72fa6885305564dc011638fd404182/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a70ce53bcd72fa6885305564dc011638fd404182/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a70ce53bcd72fa6885305564dc011638fd404182",
        "patch": "@@ -347,9 +347,7 @@ void ThreadImport(void *data) {\n         CImportingNow imp;\n         int nFile = 0;\n         while (!fShutdown) {\n-            CDiskBlockPos pos;\n-            pos.nFile = nFile;\n-            pos.nPos = 0;\n+            CDiskBlockPos pos(nFile, 0);\n             FILE *file = OpenBlockFile(pos, true);\n             if (!file)\n                 break;"
      },
      {
        "sha": "ed03414173b06d6b3676a71db47036f3eb9db026",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a70ce53bcd72fa6885305564dc011638fd404182/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a70ce53bcd72fa6885305564dc011638fd404182/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a70ce53bcd72fa6885305564dc011638fd404182",
        "patch": "@@ -1535,9 +1535,7 @@ void static FlushBlockFile()\n {\n     LOCK(cs_LastBlockFile);\n \n-    CDiskBlockPos posOld;\n-    posOld.nFile = nLastBlockFile;\n-    posOld.nPos = 0;\n+    CDiskBlockPos posOld(nLastBlockFile, 0);\n \n     FILE *fileOld = OpenBlockFile(posOld);\n     if (fileOld) {"
      },
      {
        "sha": "fbd68127a496158e28a0101801cfbca360dac153",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a70ce53bcd72fa6885305564dc011638fd404182/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a70ce53bcd72fa6885305564dc011638fd404182/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=a70ce53bcd72fa6885305564dc011638fd404182",
        "patch": "@@ -192,6 +192,15 @@ class CDiskBlockPos\n         READWRITE(VARINT(nPos));\n     )\n \n+    CDiskBlockPos() {\n+        SetNull();\n+    }\n+\n+    CDiskBlockPos(int nFileIn, unsigned int nPosIn) {\n+        nFile = nFileIn;\n+        nPos = nPosIn;\n+    }\n+\n     friend bool operator==(const CDiskBlockPos &a, const CDiskBlockPos &b) {\n         return (a.nFile == b.nFile && a.nPos == b.nPos);\n     }\n@@ -1493,8 +1502,7 @@ class CBlockIndex\n         if (nStatus & BLOCK_HAVE_DATA) {\n             ret.nFile = nFile;\n             ret.nPos  = nDataPos;\n-        } else\n-            ret.SetNull();\n+        }\n         return ret;\n     }\n \n@@ -1503,8 +1511,7 @@ class CBlockIndex\n         if (nStatus & BLOCK_HAVE_UNDO) {\n             ret.nFile = nFile;\n             ret.nPos  = nUndoPos;\n-        } else\n-            ret.SetNull();\n+        }\n         return ret;\n     }\n "
      }
    ]
  },
  {
    "sha": "eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWM1NTdiMDEyYWJjNGY2NWEyYmE2ZTk5OWY3OGE2ZjdiZjdlOGZl",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2012-12-03T10:34:15Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:10Z"
      },
      "message": "Replace text on how to enable IPv6 with disable\n\nIPv6 support is now enabled by default, thus documentation should tell\nyou how to disable it.\n\nSimilarly the build-osx use of the flag can be removed.",
      "tree": {
        "sha": "2646ddd027c009f8d486d6b30b825f3e17cc88ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2646ddd027c009f8d486d6b30b825f3e17cc88ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a70ce53bcd72fa6885305564dc011638fd404182",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a70ce53bcd72fa6885305564dc011638fd404182",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a70ce53bcd72fa6885305564dc011638fd404182"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "fd878043c030a4fa9a27993b8bd9413cbad258c2",
        "filename": "doc/build-osx.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe/doc/build-osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe/doc/build-osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.txt?ref=eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe",
        "patch": "@@ -44,7 +44,7 @@ sudo port install qrencode\n 4.  Now you should be able to build bitcoind:\n \n cd bitcoin/src\n-make -f makefile.osx USE_IPV6=1\n+make -f makefile.osx\n \n Run:\n   ./bitcoind --help  # for a list of command-line options."
      },
      {
        "sha": "a1e24ff5d1ff50aabc933d59bb6e208bb3457b78",
        "filename": "doc/build-unix.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe/doc/build-unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe/doc/build-unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.txt?ref=eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe",
        "patch": "@@ -36,8 +36,8 @@ turned off by default.  Set USE_UPNP to a different value to control this:\n  USE_UPNP=0    (the default) UPnP support turned off by default at runtime\n  USE_UPNP=1    UPnP support turned on by default at runtime\n \n-IPv6 support may be enabled by setting:\n- USE_IPV6=1    Enable IPv6 support\n+IPv6 support may be disabled by setting:\n+ USE_IPV6=0    Disable IPv6 support\n \n Licenses of statically linked libraries:\n  Berkeley DB   New BSD license with additional requirement that linked"
      }
    ]
  },
  {
    "sha": "f80420348e1a9739c41cd9d77333ba858e473e9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODA0MjAzNDhlMWE5NzM5YzQxY2Q5ZDc3MzMzYmE4NThlNDczZTlk",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-03T12:24:42Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:10Z"
      },
      "message": "Bitcoin-Qt: remove obsolete modal flag from GUI APIs\n\n- as we (can) supply the CClientUIInterface::MODAL flag via the style\n  parameter, we don't need a separate bool for checking the modality",
      "tree": {
        "sha": "1016dddb2ebcd59522fbc3cfc509c7fe0f5e8ad7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1016dddb2ebcd59522fbc3cfc509c7fe0f5e8ad7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f80420348e1a9739c41cd9d77333ba858e473e9d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f80420348e1a9739c41cd9d77333ba858e473e9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f80420348e1a9739c41cd9d77333ba858e473e9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f80420348e1a9739c41cd9d77333ba858e473e9d/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eec557b012abc4f65a2ba6e999f78a6f7bf7e8fe"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 9,
      "deletions": 11
    },
    "files": [
      {
        "sha": "95d956dd8c7451f78a1e32aaa7b17e79745c51f2",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=f80420348e1a9739c41cd9d77333ba858e473e9d",
        "patch": "@@ -45,7 +45,6 @@ static void ThreadSafeMessageBox(const std::string& message, const std::string&\n                                    modal ? GUIUtil::blockingGUIThreadConnection() : Qt::QueuedConnection,\n                                    Q_ARG(QString, QString::fromStdString(caption)),\n                                    Q_ARG(QString, QString::fromStdString(message)),\n-                                   Q_ARG(bool, modal),\n                                    Q_ARG(unsigned int, style));\n     }\n     else"
      },
      {
        "sha": "3fe86501f693ebbdd4e6e1db3763d42d6bb05a15",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=f80420348e1a9739c41cd9d77333ba858e473e9d",
        "patch": "@@ -373,7 +373,7 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         connect(clientModel, SIGNAL(numBlocksChanged(int,int)), this, SLOT(setNumBlocks(int,int)));\n \n         // Receive and report messages from network/worker thread\n-        connect(clientModel, SIGNAL(message(QString,QString,bool,unsigned int)), this, SLOT(message(QString,QString,bool,unsigned int)));\n+        connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         overviewPage->setClientModel(clientModel);\n         rpcConsole->setClientModel(clientModel);\n@@ -388,7 +388,7 @@ void BitcoinGUI::setWalletModel(WalletModel *walletModel)\n     if(walletModel)\n     {\n         // Receive and report messages from wallet thread\n-        connect(walletModel, SIGNAL(message(QString,QString,bool,unsigned int)), this, SLOT(message(QString,QString,bool,unsigned int)));\n+        connect(walletModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         // Put transaction list in tabs\n         transactionView->setModel(walletModel);\n@@ -606,7 +606,7 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n     progressBar->setToolTip(tooltip);\n }\n \n-void BitcoinGUI::message(const QString &title, const QString &message, bool modal, unsigned int style)\n+void BitcoinGUI::message(const QString &title, const QString &message, unsigned int style)\n {\n     QString strTitle = tr(\"Bitcoin\") + \" - \";\n     // Default to information icon\n@@ -639,7 +639,7 @@ void BitcoinGUI::message(const QString &title, const QString &message, bool moda\n     }\n \n     // Display message\n-    if (modal) {\n+    if (style & CClientUIInterface::MODAL) {\n         // Check for buttons, use OK as default, if none was supplied\n         QMessageBox::StandardButton buttons;\n         if (!(buttons = (QMessageBox::StandardButton)(style & CClientUIInterface::BTN_MASK)))"
      },
      {
        "sha": "3faf6d948ca7660b08dbf23b4793828570e23a77",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=f80420348e1a9739c41cd9d77333ba858e473e9d",
        "patch": "@@ -124,11 +124,10 @@ public slots:\n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title\n        @param[in] message   the displayed text\n-       @param[in] modal     true to use a message box, false to use a notification\n-       @param[in] style     style definitions (icon and used buttons - buttons only for message boxes)\n+       @param[in] style     modality and style definitions (icon and used buttons - buttons only for message boxes)\n                             @see CClientUIInterface::MessageBoxFlags\n     */\n-    void message(const QString &title, const QString &message, bool modal, unsigned int style);\n+    void message(const QString &title, const QString &message, unsigned int style);\n     /** Asks the user whether to pay the transaction fee or to cancel the transaction.\n        It is currently not possible to pass a return value to another thread through\n        BlockingQueuedConnection, so an indirected pointer is used."
      },
      {
        "sha": "ce112803f84c2974f425d9cba755010c4ca4932d",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=f80420348e1a9739c41cd9d77333ba858e473e9d",
        "patch": "@@ -84,7 +84,7 @@ void ClientModel::updateAlert(const QString &hash, int status)\n         CAlert alert = CAlert::getAlertByHash(hash_256);\n         if(!alert.IsNull())\n         {\n-            emit message(tr(\"Network Alert\"), QString::fromStdString(alert.strStatusBar), false, CClientUIInterface::ICON_ERROR);\n+            emit message(tr(\"Network Alert\"), QString::fromStdString(alert.strStatusBar), CClientUIInterface::ICON_ERROR);\n         }\n     }\n "
      },
      {
        "sha": "1afccb78593c31db786d95a9395218827704f371",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=f80420348e1a9739c41cd9d77333ba858e473e9d",
        "patch": "@@ -71,7 +71,7 @@ class ClientModel : public QObject\n     void alertsChanged(const QString &warnings);\n \n     //! Asynchronous message notification\n-    void message(const QString &title, const QString &message, bool modal, unsigned int style);\n+    void message(const QString &title, const QString &message, unsigned int style);\n \n public slots:\n     void updateTimer();"
      },
      {
        "sha": "fd5c8c4d4f62e494c17bc9e9d378739cd4065770",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f80420348e1a9739c41cd9d77333ba858e473e9d/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=f80420348e1a9739c41cd9d77333ba858e473e9d",
        "patch": "@@ -148,7 +148,7 @@ class WalletModel : public QObject\n     void requireUnlock();\n \n     // Asynchronous message notification\n-    void message(const QString &title, const QString &message, bool modal, unsigned int style);\n+    void message(const QString &title, const QString &message, unsigned int style);\n \n public slots:\n     /* Wallet status might have changed */"
      }
    ]
  },
  {
    "sha": "7fbec986b15f512224f88bd10e37a96331be2693",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZmJlYzk4NmIxNWY1MTIyMjRmODhiZDEwZTM3YTk2MzMxYmUyNjkz",
    "commit": {
      "author": {
        "name": "redshark1802",
        "email": "redshark@gmx.org",
        "date": "2012-12-03T12:36:44Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:11Z"
      },
      "message": "added build instructions for Ubuntu >= 12.04",
      "tree": {
        "sha": "bf5d4738f0cc3540000eba5dc6acf480c8b463e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf5d4738f0cc3540000eba5dc6acf480c8b463e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fbec986b15f512224f88bd10e37a96331be2693",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fbec986b15f512224f88bd10e37a96331be2693",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7fbec986b15f512224f88bd10e37a96331be2693",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fbec986b15f512224f88bd10e37a96331be2693/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f80420348e1a9739c41cd9d77333ba858e473e9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f80420348e1a9739c41cd9d77333ba858e473e9d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f80420348e1a9739c41cd9d77333ba858e473e9d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b0fdd4d810c0d71555e859bd8ddc99041b50b806",
        "filename": "doc/readme-qt.rst",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fbec986b15f512224f88bd10e37a96331be2693/doc/readme-qt.rst",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fbec986b15f512224f88bd10e37a96331be2693/doc/readme-qt.rst",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.rst?ref=7fbec986b15f512224f88bd10e37a96331be2693",
        "patch": "@@ -8,14 +8,26 @@ Debian\n -------\n \n First, make sure that the required packages for Qt4 development of your\n-distribution are installed, for Debian and Ubuntu these are:\n+distribution are installed, these are\n+\n+::\n+\n+for Debian and Ubuntu  <= 11.10 :\n \n ::\n \n     apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n         libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n         libssl-dev libdb4.8++-dev\n \n+for Ubuntu >= 12.04 (please read the 'Berkely DB version warning' below):\n+\n+::\n+\n+    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n+        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n+        libssl-dev libdb++-dev libminiupnpc-dev\n+\n then execute the following:\n \n ::"
      }
    ]
  },
  {
    "sha": "46ec79cdd9774e13b3d19cece5b89731208cc9a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NmVjNzljZGQ5Nzc0ZTEzYjNkMTljZWNlNWI4OTczMTIwOGNjOWE3",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-11-27T21:02:50Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:11Z"
      },
      "message": "use new message() function in BitcoinGUI\n\n- use it for displaying URI parsing warnings\n- use it for displaying error and information in backup wallet function\n  (the information display is new and the error was a warning before)\n\n- cleanup BitcoinGUI::incomingTransaction()\n-- use message() + the information icon from message\n-- comment out an unused parameter in the function definition and\n   declaration\n-- move all pre-checks at the beginning of the function",
      "tree": {
        "sha": "ff86d393cdbef9c50a365af969665001f402c625",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff86d393cdbef9c50a365af969665001f402c625"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46ec79cdd9774e13b3d19cece5b89731208cc9a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46ec79cdd9774e13b3d19cece5b89731208cc9a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46ec79cdd9774e13b3d19cece5b89731208cc9a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46ec79cdd9774e13b3d19cece5b89731208cc9a7/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fbec986b15f512224f88bd10e37a96331be2693",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fbec986b15f512224f88bd10e37a96331be2693",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fbec986b15f512224f88bd10e37a96331be2693"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 31,
      "deletions": 31
    },
    "files": [
      {
        "sha": "9cd22ed297679d80e53e381620dc74f320e18670",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 30,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46ec79cdd9774e13b3d19cece5b89731208cc9a7/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46ec79cdd9774e13b3d19cece5b89731208cc9a7/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=46ec79cdd9774e13b3d19cece5b89731208cc9a7",
        "patch": "@@ -697,39 +697,33 @@ void BitcoinGUI::askFee(qint64 nFeeRequired, bool *payFee)\n     *payFee = (retval == QMessageBox::Yes);\n }\n \n-void BitcoinGUI::incomingTransaction(const QModelIndex & parent, int start, int end)\n+void BitcoinGUI::incomingTransaction(const QModelIndex& parent, int start, int /*end*/)\n {\n-    if(!walletModel || !clientModel)\n+    // Prevent balloon-spam when initial block download is in progress\n+    if(!walletModel || !clientModel || clientModel->inInitialBlockDownload())\n         return;\n+\n     TransactionTableModel *ttm = walletModel->getTransactionTableModel();\n+\n+    QString date = ttm->index(start, TransactionTableModel::Date, parent)\n+                     .data().toString();\n     qint64 amount = ttm->index(start, TransactionTableModel::Amount, parent)\n-                    .data(Qt::EditRole).toULongLong();\n-    if(!clientModel->inInitialBlockDownload())\n-    {\n-        // On new transaction, make an info balloon\n-        // Unless the initial block download is in progress, to prevent balloon-spam\n-        QString date = ttm->index(start, TransactionTableModel::Date, parent)\n-                        .data().toString();\n-        QString type = ttm->index(start, TransactionTableModel::Type, parent)\n+                      .data(Qt::EditRole).toULongLong();\n+    QString type = ttm->index(start, TransactionTableModel::Type, parent)\n+                     .data().toString();\n+    QString address = ttm->index(start, TransactionTableModel::ToAddress, parent)\n                         .data().toString();\n-        QString address = ttm->index(start, TransactionTableModel::ToAddress, parent)\n-                        .data().toString();\n-        QIcon icon = qvariant_cast<QIcon>(ttm->index(start,\n-                            TransactionTableModel::ToAddress, parent)\n-                        .data(Qt::DecorationRole));\n \n-        notificator->notify(Notificator::Information,\n-                            (amount)<0 ? tr(\"Sent transaction\") :\n-                                         tr(\"Incoming transaction\"),\n-                              tr(\"Date: %1\\n\"\n-                                 \"Amount: %2\\n\"\n-                                 \"Type: %3\\n\"\n-                                 \"Address: %4\\n\")\n-                              .arg(date)\n-                              .arg(BitcoinUnits::formatWithUnit(walletModel->getOptionsModel()->getDisplayUnit(), amount, true))\n-                              .arg(type)\n-                              .arg(address), icon);\n-    }\n+    // On new transaction, make an info balloon\n+    message((amount)<0 ? tr(\"Sent transaction\") : tr(\"Incoming transaction\"),\n+             tr(\"Date: %1\\n\"\n+                \"Amount: %2\\n\"\n+                \"Type: %3\\n\"\n+                \"Address: %4\\n\")\n+                  .arg(date)\n+                  .arg(BitcoinUnits::formatWithUnit(walletModel->getOptionsModel()->getDisplayUnit(), amount, true))\n+                  .arg(type)\n+                  .arg(address), CClientUIInterface::MSG_INFORMATION);\n }\n \n void BitcoinGUI::gotoOverviewPage()\n@@ -821,7 +815,8 @@ void BitcoinGUI::dropEvent(QDropEvent *event)\n         if (nValidUrisFound)\n             gotoSendCoinsPage();\n         else\n-            notificator->notify(Notificator::Warning, tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"));\n+            message(tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n+                      CClientUIInterface::ICON_WARNING);\n     }\n \n     event->acceptProposedAction();\n@@ -848,7 +843,8 @@ void BitcoinGUI::handleURI(QString strURI)\n         gotoSendCoinsPage();\n     }\n     else\n-        notificator->notify(Notificator::Warning, tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"));\n+        message(tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n+                  CClientUIInterface::ICON_WARNING);\n }\n \n void BitcoinGUI::setEncryptionStatus(int status)\n@@ -898,8 +894,12 @@ void BitcoinGUI::backupWallet()\n     QString filename = QFileDialog::getSaveFileName(this, tr(\"Backup Wallet\"), saveDir, tr(\"Wallet Data (*.dat)\"));\n     if(!filename.isEmpty()) {\n         if(!walletModel->backupWallet(filename)) {\n-            QMessageBox::warning(this, tr(\"Backup Failed\"), tr(\"There was an error trying to save the wallet data to the new location.\"));\n+            message(tr(\"Backup Failed\"), tr(\"There was an error trying to save the wallet data to the new location.\"),\n+                      CClientUIInterface::MSG_ERROR);\n         }\n+        else\n+            message(tr(\"Backup Successful\"), tr(\"The wallet data was successfully saved to the new location.\"),\n+                      CClientUIInterface::MSG_INFORMATION);\n     }\n }\n "
      },
      {
        "sha": "b7afdb1c8c61001a15ae5084645b49ec2a564a63",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46ec79cdd9774e13b3d19cece5b89731208cc9a7/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46ec79cdd9774e13b3d19cece5b89731208cc9a7/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=46ec79cdd9774e13b3d19cece5b89731208cc9a7",
        "patch": "@@ -168,7 +168,7 @@ private slots:\n \n         The new items are those between start and end inclusive, under the given parent item.\n     */\n-    void incomingTransaction(const QModelIndex & parent, int start, int end);\n+    void incomingTransaction(const QModelIndex& parent, int start, int /*end*/);\n     /** Encrypt the wallet */\n     void encryptWallet(bool status);\n     /** Backup the wallet */"
      }
    ]
  },
  {
    "sha": "6496a83f5a760a8dcd60981b70d9aaff6fcdaff2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDk2YTgzZjVhNzYwYThkY2Q2MDk4MWI3MGQ5YWFmZjZmY2RhZmYy",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-03T12:35:14Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:11Z"
      },
      "message": "remove unneeded flag from MSG_INFORMATION and fix an indentation",
      "tree": {
        "sha": "8b6786cd29160919f44ebc52cac5087826856457",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b6786cd29160919f44ebc52cac5087826856457"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46ec79cdd9774e13b3d19cece5b89731208cc9a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46ec79cdd9774e13b3d19cece5b89731208cc9a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46ec79cdd9774e13b3d19cece5b89731208cc9a7"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "833b52cb15a59c085dbab9e91cbc0550b59aaa2b",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=6496a83f5a760a8dcd60981b70d9aaff6fcdaff2",
        "patch": "@@ -46,11 +46,11 @@ public slots:\n private:\n     QWidget *parent;\n     enum Mode {\n-        None,        /**< Ignore informational notifications, and show a modal pop-up dialog for Critical notifications. */\n-        Freedesktop, /**< Use DBus org.freedesktop.Notifications */\n-        QSystemTray, /**< Use QSystemTray::showMessage */\n+        None,           /**< Ignore informational notifications, and show a modal pop-up dialog for Critical notifications. */\n+        Freedesktop,    /**< Use DBus org.freedesktop.Notifications */\n+        QSystemTray,    /**< Use QSystemTray::showMessage */\n         Growl12,        /**< Use the Growl 1.2 notification system (Mac only) */\n-        Growl13        /**< Use the Growl 1.3 notification system (Mac only) */\n+        Growl13         /**< Use the Growl 1.3 notification system (Mac only) */\n     };\n     QString programName;\n     Mode mode;"
      },
      {
        "sha": "072d250796b9923dd4333fe1be1421584d9f02c6",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=6496a83f5a760a8dcd60981b70d9aaff6fcdaff2",
        "patch": "@@ -62,7 +62,7 @@ class CClientUIInterface\n         MODAL               = 0x10000000U,\n \n         /** Predefined combinations for certain default usage cases */\n-        MSG_INFORMATION = (ICON_INFORMATION | BTN_OK),\n+        MSG_INFORMATION = ICON_INFORMATION,\n         MSG_WARNING = (ICON_WARNING | BTN_OK | MODAL),\n         MSG_ERROR = (ICON_ERROR | BTN_OK | MODAL)\n     };"
      }
    ]
  },
  {
    "sha": "a761c8c50786fbdc69d431f06ace035e99b7285a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzYxYzhjNTA3ODZmYmRjNjlkNDMxZjA2YWNlMDM1ZTk5YjcyODVh",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-03T12:51:58Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:11Z"
      },
      "message": "rework ThreadSafeAskFee() / askFee() functions\n\n- remove unused parameter from ThreadSafeAskFee(), which also results in\n  the removal of an orphan translation-string",
      "tree": {
        "sha": "9b4b2a0efa81f4ba628d0f884fe1479e7454ddaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b4b2a0efa81f4ba628d0f884fe1479e7454ddaf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a761c8c50786fbdc69d431f06ace035e99b7285a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a761c8c50786fbdc69d431f06ace035e99b7285a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a761c8c50786fbdc69d431f06ace035e99b7285a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a761c8c50786fbdc69d431f06ace035e99b7285a/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6496a83f5a760a8dcd60981b70d9aaff6fcdaff2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6496a83f5a760a8dcd60981b70d9aaff6fcdaff2"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "204e76aba7b4d6384c70ecee03e748f9b97f6dbb",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a761c8c50786fbdc69d431f06ace035e99b7285a/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a761c8c50786fbdc69d431f06ace035e99b7285a/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=a761c8c50786fbdc69d431f06ace035e99b7285a",
        "patch": "@@ -32,7 +32,7 @@ static int noui_ThreadSafeMessageBox(const std::string& message, const std::stri\n     return 4;\n }\n \n-static bool noui_ThreadSafeAskFee(int64 nFeeRequired, const std::string& strCaption)\n+static bool noui_ThreadSafeAskFee(int64 /*nFeeRequired*/)\n {\n     return true;\n }"
      },
      {
        "sha": "dbdfade0b15401d83e8b662d37261c39c8edce10",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a761c8c50786fbdc69d431f06ace035e99b7285a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a761c8c50786fbdc69d431f06ace035e99b7285a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=a761c8c50786fbdc69d431f06ace035e99b7285a",
        "patch": "@@ -54,12 +54,13 @@ static void ThreadSafeMessageBox(const std::string& message, const std::string&\n     }\n }\n \n-static bool ThreadSafeAskFee(int64 nFeeRequired, const std::string& strCaption)\n+static bool ThreadSafeAskFee(int64 nFeeRequired)\n {\n     if(!guiref)\n         return false;\n     if(nFeeRequired < MIN_TX_FEE || nFeeRequired <= nTransactionFee || fDaemon)\n         return true;\n+\n     bool payFee = false;\n \n     QMetaObject::invokeMethod(guiref, \"askFee\", GUIUtil::blockingGUIThreadConnection(),"
      },
      {
        "sha": "9d5a2c04ffc5810c04d51625e0ab56eb7517a5c6",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a761c8c50786fbdc69d431f06ace035e99b7285a/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a761c8c50786fbdc69d431f06ace035e99b7285a/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=a761c8c50786fbdc69d431f06ace035e99b7285a",
        "patch": "@@ -189,7 +189,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(const QList<SendCoinsRecipie\n             }\n             return TransactionCreationFailed;\n         }\n-        if(!uiInterface.ThreadSafeAskFee(nFeeRequired, tr(\"Sending...\").toStdString()))\n+        if(!uiInterface.ThreadSafeAskFee(nFeeRequired))\n         {\n             return Aborted;\n         }"
      },
      {
        "sha": "703e15f0957f66ea7cb836f4555f9fbbe476acc0",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a761c8c50786fbdc69d431f06ace035e99b7285a/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a761c8c50786fbdc69d431f06ace035e99b7285a/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=a761c8c50786fbdc69d431f06ace035e99b7285a",
        "patch": "@@ -71,7 +71,7 @@ class CClientUIInterface\n     boost::signals2::signal<void (const std::string& message, const std::string& caption, unsigned int style)> ThreadSafeMessageBox;\n \n     /** Ask the user whether they want to pay a fee or not. */\n-    boost::signals2::signal<bool (int64 nFeeRequired, const std::string& strCaption), boost::signals2::last_value<bool> > ThreadSafeAskFee;\n+    boost::signals2::signal<bool (int64 nFeeRequired), boost::signals2::last_value<bool> > ThreadSafeAskFee;\n \n     /** Handle a URL passed at the command line. */\n     boost::signals2::signal<void (const std::string& strURI)> ThreadSafeHandleURI;"
      },
      {
        "sha": "11348080b3dc243a5a722357f7a12fdad776aa7c",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a761c8c50786fbdc69d431f06ace035e99b7285a/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a761c8c50786fbdc69d431f06ace035e99b7285a/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=a761c8c50786fbdc69d431f06ace035e99b7285a",
        "patch": "@@ -1312,7 +1312,7 @@ string CWallet::SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew,\n         return strError;\n     }\n \n-    if (fAskFee && !uiInterface.ThreadSafeAskFee(nFeeRequired, _(\"Sending...\")))\n+    if (fAskFee && !uiInterface.ThreadSafeAskFee(nFeeRequired))\n         return \"ABORTED\";\n \n     if (!CommitTransaction(wtxNew, reservekey))"
      }
    ]
  },
  {
    "sha": "1ead321ad176b004cd6d1868acdf73fccb8c5b99",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZWFkMzIxYWQxNzZiMDA0Y2Q2ZDE4NjhhY2RmNzNmY2NiOGM1Yjk5",
    "commit": {
      "author": {
        "name": "grimd34th",
        "email": "ubpd34th@gmail.com",
        "date": "2012-12-04T21:00:47Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:11Z"
      },
      "message": "Update src/makefile.mingw\n\nWith MinGW we use .a not .lib",
      "tree": {
        "sha": "639634e0d34cae45069a275bc0ea0b3c31d42449",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/639634e0d34cae45069a275bc0ea0b3c31d42449"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ead321ad176b004cd6d1868acdf73fccb8c5b99",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ead321ad176b004cd6d1868acdf73fccb8c5b99",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ead321ad176b004cd6d1868acdf73fccb8c5b99",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ead321ad176b004cd6d1868acdf73fccb8c5b99/comments",
    "author": {
      "login": "grimd34th",
      "id": 934782,
      "node_id": "MDQ6VXNlcjkzNDc4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/934782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grimd34th",
      "html_url": "https://github.com/grimd34th",
      "followers_url": "https://api.github.com/users/grimd34th/followers",
      "following_url": "https://api.github.com/users/grimd34th/following{/other_user}",
      "gists_url": "https://api.github.com/users/grimd34th/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grimd34th/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grimd34th/subscriptions",
      "organizations_url": "https://api.github.com/users/grimd34th/orgs",
      "repos_url": "https://api.github.com/users/grimd34th/repos",
      "events_url": "https://api.github.com/users/grimd34th/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grimd34th/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a761c8c50786fbdc69d431f06ace035e99b7285a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a761c8c50786fbdc69d431f06ace035e99b7285a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a761c8c50786fbdc69d431f06ace035e99b7285a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "22d65d670338169ee18ca3f8f705c68c0f9b81f7",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ead321ad176b004cd6d1868acdf73fccb8c5b99/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ead321ad176b004cd6d1868acdf73fccb8c5b99/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=1ead321ad176b004cd6d1868acdf73fccb8c5b99",
        "patch": "@@ -97,7 +97,7 @@ DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)\n # TODO: If this fails, try adding a ranlib libleveldb.a && ranlib libmemenv.a\n leveldb/libleveldb.a:\n \tcd leveldb && $(MAKE) libleveldb.a libmemenv.a && cd ..\n-obj/leveldb.o: leveldb/libleveldb.lib\n+obj/leveldb.o: leveldb/libleveldb.a\n \n obj/%.o: %.cpp $(HEADERS)\n \tg++ -c $(CFLAGS) -o $@ $<"
      }
    ]
  },
  {
    "sha": "39bc56d1514c7af53a72a9308e63452521d6579b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOWJjNTZkMTUxNGM3YWY1M2E3MmE5MzA4ZTYzNDUyNTIxZDY1Nzli",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-04T06:48:57Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:12Z"
      },
      "message": "call CheckDiskSpace() before pre-allocating space\n\n- even if we are allowed to fail pre-allocating, it's better to check\n  for sufficient space before calling AllocateFileRange() and if we\n  are out of disk space return with error()\n- the above change allows us to remove the CheckDiskSpace() check\n  in CBlock::AcceptBlock()",
      "tree": {
        "sha": "a416f031e387ee4d321c31d7f8535d4576826eb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a416f031e387ee4d321c31d7f8535d4576826eb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39bc56d1514c7af53a72a9308e63452521d6579b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39bc56d1514c7af53a72a9308e63452521d6579b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/39bc56d1514c7af53a72a9308e63452521d6579b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39bc56d1514c7af53a72a9308e63452521d6579b/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1ead321ad176b004cd6d1868acdf73fccb8c5b99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ead321ad176b004cd6d1868acdf73fccb8c5b99",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1ead321ad176b004cd6d1868acdf73fccb8c5b99"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 19,
      "deletions": 15
    },
    "files": [
      {
        "sha": "8edc25c789aba0a5a0562afdcb0f74ff88ad4bd3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39bc56d1514c7af53a72a9308e63452521d6579b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39bc56d1514c7af53a72a9308e63452521d6579b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=39bc56d1514c7af53a72a9308e63452521d6579b",
        "patch": "@@ -1918,12 +1918,16 @@ bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int nHeigh\n         unsigned int nOldChunks = (pos.nPos + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n         unsigned int nNewChunks = (infoLastBlockFile.nSize + BLOCKFILE_CHUNK_SIZE - 1) / BLOCKFILE_CHUNK_SIZE;\n         if (nNewChunks > nOldChunks) {\n-            FILE *file = OpenBlockFile(pos);\n-            if (file) {\n-                printf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n-                AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n-                fclose(file);\n+            if (CheckDiskSpace(nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos)) {\n+                FILE *file = OpenBlockFile(pos);\n+                if (file) {\n+                    printf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n+                    AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n+                    fclose(file);\n+                }\n             }\n+            else\n+                return error(\"FindBlockPos() : out of disk space\");\n         }\n     }\n \n@@ -1960,12 +1964,16 @@ bool FindUndoPos(int nFile, CDiskBlockPos &pos, unsigned int nAddSize)\n     unsigned int nOldChunks = (pos.nPos + UNDOFILE_CHUNK_SIZE - 1) / UNDOFILE_CHUNK_SIZE;\n     unsigned int nNewChunks = (nNewSize + UNDOFILE_CHUNK_SIZE - 1) / UNDOFILE_CHUNK_SIZE;\n     if (nNewChunks > nOldChunks) {\n-        FILE *file = OpenUndoFile(pos);\n-        if (file) {\n-            printf(\"Pre-allocating up to position 0x%x in rev%05u.dat\\n\", nNewChunks * UNDOFILE_CHUNK_SIZE, pos.nFile);\n-            AllocateFileRange(file, pos.nPos, nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos);\n-            fclose(file);\n+        if (CheckDiskSpace(nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos)) {\n+            FILE *file = OpenUndoFile(pos);\n+            if (file) {\n+                printf(\"Pre-allocating up to position 0x%x in rev%05u.dat\\n\", nNewChunks * UNDOFILE_CHUNK_SIZE, pos.nFile);\n+                AllocateFileRange(file, pos.nPos, nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos);\n+                fclose(file);\n+            }\n         }\n+        else\n+            return error(\"FindUndoPos() : out of disk space\");\n     }\n \n     return true;\n@@ -2090,12 +2098,8 @@ bool CBlock::AcceptBlock(CDiskBlockPos *dbp)\n     // Write block to history file\n     unsigned int nBlockSize = ::GetSerializeSize(*this, SER_DISK, CLIENT_VERSION);\n     CDiskBlockPos blockPos;\n-    if (dbp == NULL) {\n-        if (!CheckDiskSpace(::GetSerializeSize(*this, SER_DISK, CLIENT_VERSION)))\n-            return error(\"AcceptBlock() : out of disk space\");\n-    } else {\n+    if (dbp != NULL)\n         blockPos = *dbp;\n-    }\n     if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, nTime, dbp != NULL))\n         return error(\"AcceptBlock() : FindBlockPos failed\");\n     if (dbp == NULL)"
      }
    ]
  },
  {
    "sha": "f1e482a503bf51df79bb315cf0a6f45ef6c22ea2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMWU0ODJhNTAzYmY1MWRmNzliYjMxNWNmMGE2ZjQ1ZWY2YzIyZWEy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-01T17:07:55Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:12Z"
      },
      "message": "Add GetTimeMicros() for ore accurate benchmarking",
      "tree": {
        "sha": "4fdfe40eca1d8efbb893cacc48e1cf090970448b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4fdfe40eca1d8efbb893cacc48e1cf090970448b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f1e482a503bf51df79bb315cf0a6f45ef6c22ea2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1e482a503bf51df79bb315cf0a6f45ef6c22ea2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f1e482a503bf51df79bb315cf0a6f45ef6c22ea2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1e482a503bf51df79bb315cf0a6f45ef6c22ea2/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "39bc56d1514c7af53a72a9308e63452521d6579b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39bc56d1514c7af53a72a9308e63452521d6579b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39bc56d1514c7af53a72a9308e63452521d6579b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1ed5c30aaef753c42195bd1b4919fe95b897e9de",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1e482a503bf51df79bb315cf0a6f45ef6c22ea2/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1e482a503bf51df79bb315cf0a6f45ef6c22ea2/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=f1e482a503bf51df79bb315cf0a6f45ef6c22ea2",
        "patch": "@@ -330,6 +330,12 @@ inline int64 GetTimeMillis()\n             boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_milliseconds();\n }\n \n+inline int64 GetTimeMicros()\n+{\n+    return (boost::posix_time::ptime(boost::posix_time::microsec_clock::universal_time()) -\n+            boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();\n+}\n+\n inline std::string DateTimeStrFormat(const char* pszFormat, int64 nTime)\n {\n     time_t n = nTime;"
      }
    ]
  },
  {
    "sha": "d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzJjOTFhNTBjYWM2N2E4ZmYzYjhiNjljOWJlNzlhZGI3YzZhNTM3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-01T19:10:23Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:12Z"
      },
      "message": "Add -benchmark for reporting block processing times",
      "tree": {
        "sha": "a7571daf22e805de7c12f86ca734419692c7770e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7571daf22e805de7c12f86ca734419692c7770e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f1e482a503bf51df79bb315cf0a6f45ef6c22ea2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1e482a503bf51df79bb315cf0a6f45ef6c22ea2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f1e482a503bf51df79bb315cf0a6f45ef6c22ea2"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e2bde0816b7ff860fa626c217f5c164422627c88",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
        "patch": "@@ -482,6 +482,7 @@ bool AppInit2()\n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n     fDebug = GetBoolArg(\"-debug\");\n+    fBenchmark = GetBoolArg(\"-benchmark\");\n \n     // -debug implies fDebug*\n     if (fDebug)"
      },
      {
        "sha": "d7737f13fb47c2991c9368693b6fba62d4813b0b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
        "patch": "@@ -42,6 +42,7 @@ set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexValid; // may contain\n int64 nTimeBestReceived = 0;\n bool fImporting = false;\n bool fReindex = false;\n+bool fBenchmark = false;\n unsigned int nCoinCacheSize = 5000;\n \n CMedianFilter<int> cPeerBlockCounts(5, 0); // Amount of blocks that other nodes claim to have\n@@ -1590,12 +1591,16 @@ bool CBlock::ConnectBlock(CBlockIndex* pindex, CCoinsViewCache &view, bool fJust\n \n     CBlockUndo blockundo;\n \n+    int64 nStart = GetTimeMicros();\n     int64 nFees = 0;\n+    int nInputs = 0;\n     unsigned int nSigOps = 0;\n     for (unsigned int i=0; i<vtx.size(); i++)\n     {\n+\n         const CTransaction &tx = vtx[i];\n \n+        nInputs += tx.vin.size();\n         nSigOps += tx.GetLegacySigOpCount();\n         if (nSigOps > MAX_BLOCK_SIGOPS)\n             return DoS(100, error(\"ConnectBlock() : too many sigops\"));\n@@ -1626,7 +1631,11 @@ bool CBlock::ConnectBlock(CBlockIndex* pindex, CCoinsViewCache &view, bool fJust\n             return error(\"ConnectBlock() : UpdateInputs failed\");\n         if (!tx.IsCoinBase())\n             blockundo.vtxundo.push_back(txundo);\n+\n     }\n+    int64 nTime = GetTimeMicros() - nStart;\n+    if (fBenchmark)\n+        printf(\"- Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin)\\n\", (unsigned)vtx.size(), 0.001 * nTime, 0.001 * nTime / vtx.size(), nInputs <= 1 ? 0 : 0.001 * nTime / (nInputs-1));\n \n     if (vtx[0].GetValueOut() > GetBlockValue(pindex->nHeight, nFees))\n         return error(\"ConnectBlock() : coinbase pays too much (actual=%\"PRI64d\" vs limit=%\"PRI64d\")\", vtx[0].GetValueOut(), GetBlockValue(pindex->nHeight, nFees));\n@@ -1724,8 +1733,11 @@ bool SetBestChain(CBlockIndex* pindexNew)\n         CBlock block;\n         if (!block.ReadFromDisk(pindex))\n             return error(\"SetBestBlock() : ReadFromDisk for disconnect failed\");\n+        int64 nStart = GetTimeMicros();\n         if (!block.DisconnectBlock(pindex, view))\n             return error(\"SetBestBlock() : DisconnectBlock %s failed\", BlockHashStr(pindex->GetBlockHash()).c_str());\n+        if (fBenchmark)\n+            printf(\"- Disconnect: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001);\n \n         // Queue memory transactions to resurrect.\n         // We only do this for blocks after the last checkpoint (reorganisation before that\n@@ -1741,20 +1753,28 @@ bool SetBestChain(CBlockIndex* pindexNew)\n         CBlock block;\n         if (!block.ReadFromDisk(pindex))\n             return error(\"SetBestBlock() : ReadFromDisk for connect failed\");\n+        int64 nStart = GetTimeMicros();\n         if (!block.ConnectBlock(pindex, view)) {\n             InvalidChainFound(pindexNew);\n             InvalidBlockFound(pindex);\n             return error(\"SetBestBlock() : ConnectBlock %s failed\", BlockHashStr(pindex->GetBlockHash()).c_str());\n         }\n+        if (fBenchmark)\n+            printf(\"- Connect: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001); \n \n         // Queue memory transactions to delete\n         BOOST_FOREACH(const CTransaction& tx, block.vtx)\n             vDelete.push_back(tx);\n     }\n \n     // Flush changes to global coin state\n+    int64 nStart = GetTimeMicros();\n+    int nModified = view.GetCacheSize();\n     if (!view.Flush())\n         return error(\"SetBestBlock() : unable to modify coin state\");\n+    int64 nTime = GetTimeMicros() - nStart;\n+    if (fBenchmark)\n+        printf(\"- Flush %i transactions: %.2fms (%.4fms/tx)\\n\", nModified, 0.001 * nTime, 0.001 * nTime / nModified);\n \n     // Make sure it's successfully written to disk before changing memory structure\n     bool fIsInitialDownload = IsInitialBlockDownload();"
      },
      {
        "sha": "fdaec3469ea1b223ebb6de3a64a749feb7f93c55",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
        "patch": "@@ -89,6 +89,7 @@ extern std::set<CWallet*> setpwalletRegistered;\n extern unsigned char pchMessageStart[4];\n extern bool fImporting;\n extern bool fReindex;\n+extern bool fBenchmark;\n extern unsigned int nCoinCacheSize;\n \n // Settings"
      }
    ]
  },
  {
    "sha": "5c80b21e412a22341769b8e77172da1e957bc0f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzgwYjIxZTQxMmEyMjM0MTc2OWI4ZTc3MTcyZGExZTk1N2JjMGY1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-02T20:59:22Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:13Z"
      },
      "message": "Reconstruct coins/ from scratch when missing.",
      "tree": {
        "sha": "d7d1d3c6a7af740f28996dd426fa5ee46ea664d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7d1d3c6a7af740f28996dd426fa5ee46ea664d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c80b21e412a22341769b8e77172da1e957bc0f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c80b21e412a22341769b8e77172da1e957bc0f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c80b21e412a22341769b8e77172da1e957bc0f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c80b21e412a22341769b8e77172da1e957bc0f5/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d32c91a50cac67a8ff3b8b69c9be79adb7c6a537"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 11,
      "deletions": 14
    },
    "files": [
      {
        "sha": "820075556953d8a7691606d2f15b581610343def",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c80b21e412a22341769b8e77172da1e957bc0f5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c80b21e412a22341769b8e77172da1e957bc0f5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=5c80b21e412a22341769b8e77172da1e957bc0f5",
        "patch": "@@ -867,7 +867,7 @@ bool AppInit2()\n         if (walletdb.ReadBestBlock(locator))\n             pindexRescan = locator.GetBlockIndex();\n     }\n-    if (pindexBest != pindexRescan)\n+    if (pindexBest && pindexBest != pindexRescan)\n     {\n         uiInterface.InitMessage(_(\"Rescanning...\"));\n         printf(\"Rescanning last %i blocks (from block %i)...\\n\", pindexBest->nHeight - pindexRescan->nHeight, pindexRescan->nHeight);"
      },
      {
        "sha": "51e21a7028f90187d0c25ee458850bdf6459b91b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c80b21e412a22341769b8e77172da1e957bc0f5/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c80b21e412a22341769b8e77172da1e957bc0f5/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5c80b21e412a22341769b8e77172da1e957bc0f5",
        "patch": "@@ -1700,7 +1700,7 @@ bool SetBestChain(CBlockIndex* pindexNew)\n     // Find the fork (typically, there is none)\n     CBlockIndex* pfork = view.GetBestBlock();\n     CBlockIndex* plonger = pindexNew;\n-    while (pfork != plonger)\n+    while (pfork && pfork != plonger)\n     {\n         while (plonger->nHeight > pfork->nHeight)\n             if (!(plonger = plonger->pprev))\n@@ -2346,13 +2346,18 @@ bool static LoadBlockIndexDB()\n     if (pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile))\n         printf(\"LoadBlockIndex(): last block file: %s\\n\", infoLastBlockFile.ToString().c_str());\n \n+    // Load bnBestInvalidWork, OK if it doesn't exist\n+    pblocktree->ReadBestInvalidWork(bnBestInvalidWork);\n+\n+    // Check whether we need to continue reindexing\n+    bool fReindexing = false;\n+    pblocktree->ReadReindexing(fReindexing);\n+    fReindex |= fReindexing;\n+\n     // Load hashBestChain pointer to end of best chain\n     pindexBest = pcoinsTip->GetBestBlock();\n     if (pindexBest == NULL)\n-    {\n-        if (pindexGenesisBlock == NULL)\n-            return true;\n-    }\n+        return true;\n     hashBestChain = pindexBest->GetBlockHash();\n     nBestHeight = pindexBest->nHeight;\n     bnBestChainWork = pindexBest->bnChainWork;\n@@ -2368,14 +2373,6 @@ bool static LoadBlockIndexDB()\n         BlockHashStr(hashBestChain).c_str(), nBestHeight,\n         DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n \n-    // Load bnBestInvalidWork, OK if it doesn't exist\n-    pblocktree->ReadBestInvalidWork(bnBestInvalidWork);\n-\n-    // Check whether we need to continue reindexing\n-    bool fReindexing = false;\n-    pblocktree->ReadReindexing(fReindexing);\n-    fReindex |= fReindexing;\n-\n     // Verify blocks in the best chain\n     int nCheckLevel = GetArg(\"-checklevel\", 1);\n     int nCheckDepth = GetArg( \"-checkblocks\", 2500);"
      }
    ]
  },
  {
    "sha": "982502f15b695eebc8d014738aa7e653648b5177",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODI1MDJmMTViNjk1ZWViYzhkMDE0NzM4YWE3ZTY1MzY0OGI1MTc3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-04T22:46:30Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:13Z"
      },
      "message": "Update the block file counter in database when using -reindex\n\nThis problem is like earth (mostly harmless). After/during a\n-reindex, it means the statistics about the last block file\nreported in debug.log are always of blk00000.dat instead of the\nlast file. Apart from that, it means a few more database entries\nneed to be read when finding a file to append to the first time.",
      "tree": {
        "sha": "00d5189318c9ff9c0c8208a239cd328cea9e7a35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00d5189318c9ff9c0c8208a239cd328cea9e7a35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/982502f15b695eebc8d014738aa7e653648b5177",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/982502f15b695eebc8d014738aa7e653648b5177",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/982502f15b695eebc8d014738aa7e653648b5177",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/982502f15b695eebc8d014738aa7e653648b5177/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c80b21e412a22341769b8e77172da1e957bc0f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c80b21e412a22341769b8e77172da1e957bc0f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c80b21e412a22341769b8e77172da1e957bc0f5"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7a6e8567ca94a0317db1e5914de24de7aaddf2d5",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/982502f15b695eebc8d014738aa7e653648b5177/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/982502f15b695eebc8d014738aa7e653648b5177/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=982502f15b695eebc8d014738aa7e653648b5177",
        "patch": "@@ -1917,6 +1917,7 @@ bool FindBlockPos(CDiskBlockPos &pos, unsigned int nAddSize, unsigned int nHeigh\n             nLastBlockFile = pos.nFile;\n             infoLastBlockFile.SetNull();\n             pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile);\n+            fUpdatedLast = true;\n         }\n     } else {\n         while (infoLastBlockFile.nSize + nAddSize >= MAX_BLOCKFILE_SIZE) {"
      }
    ]
  },
  {
    "sha": "77f72362b50956451a29462d94988ccd98048720",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2Y3MjM2MmI1MDk1NjQ1MWEyOTQ2MmQ5NDk4OGNjZDk4MDQ4NzIw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-04T22:53:26Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:13Z"
      },
      "message": "Allow lengthy block reconnections to be interrupted\n\nWhen the coin database is out of date with the block database, the\nbest block in it is automatically switched to. This reconnection\nprocess can take time, so allow it to be interrupted.\n\nThis also stops block connection as soon as shutdown is requested,\nleading to a faster shutdown.",
      "tree": {
        "sha": "7920f01cf0273e0e7bc200cc14a300fcf72259b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7920f01cf0273e0e7bc200cc14a300fcf72259b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77f72362b50956451a29462d94988ccd98048720",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f72362b50956451a29462d94988ccd98048720",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77f72362b50956451a29462d94988ccd98048720",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f72362b50956451a29462d94988ccd98048720/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "982502f15b695eebc8d014738aa7e653648b5177",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/982502f15b695eebc8d014738aa7e653648b5177",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/982502f15b695eebc8d014738aa7e653648b5177"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "7f311fa8818f2f62ddfe7f455d99d2e3ebfd3e15",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77f72362b50956451a29462d94988ccd98048720/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77f72362b50956451a29462d94988ccd98048720/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=77f72362b50956451a29462d94988ccd98048720",
        "patch": "@@ -346,7 +346,7 @@ void ThreadImport(void *data) {\n     if (fReindex) {\n         CImportingNow imp;\n         int nFile = 0;\n-        while (!fShutdown) {\n+        while (!fRequestShutdown) {\n             CDiskBlockPos pos(nFile, 0);\n             FILE *file = OpenBlockFile(pos, true);\n             if (!file)\n@@ -355,7 +355,7 @@ void ThreadImport(void *data) {\n             LoadExternalBlockFile(file, &pos);\n             nFile++;\n         }\n-        if (!fShutdown) {\n+        if (!fRequestShutdown) {\n             pblocktree->WriteReindexing(false);\n             fReindex = false;\n             printf(\"Reindexing finished\\n\");\n@@ -364,7 +364,7 @@ void ThreadImport(void *data) {\n \n     // hardcoded $DATADIR/bootstrap.dat\n     filesystem::path pathBootstrap = GetDataDir() / \"bootstrap.dat\";\n-    if (filesystem::exists(pathBootstrap) && !fShutdown) {\n+    if (filesystem::exists(pathBootstrap) && !fRequestShutdown) {\n         FILE *file = fopen(pathBootstrap.string().c_str(), \"rb\");\n         if (file) {\n             CImportingNow imp;\n@@ -377,7 +377,7 @@ void ThreadImport(void *data) {\n \n     // -loadblock=\n     BOOST_FOREACH(boost::filesystem::path &path, import->vFiles) {\n-        if (fShutdown)\n+        if (fRequestShutdown)\n             break;\n         FILE *file = fopen(path.string().c_str(), \"rb\");\n         if (file) {"
      },
      {
        "sha": "61bd6b7b87511cc22202863e946d9f28432b458b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77f72362b50956451a29462d94988ccd98048720/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77f72362b50956451a29462d94988ccd98048720/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=77f72362b50956451a29462d94988ccd98048720",
        "patch": "@@ -1241,9 +1241,12 @@ bool ConnectBestBlock() {\n \n             if (pindexTest->pprev == NULL || pindexTest->pnext != NULL) {\n                 reverse(vAttach.begin(), vAttach.end());\n-                BOOST_FOREACH(CBlockIndex *pindexSwitch, vAttach)\n+                BOOST_FOREACH(CBlockIndex *pindexSwitch, vAttach) {\n+                    if (fRequestShutdown)\n+                        break;\n                     if (!SetBestChain(pindexSwitch))\n                         return false;\n+                }\n                 return true;\n             }\n             pindexTest = pindexTest->pprev;\n@@ -2574,7 +2577,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n             }\n         }\n         uint64 nRewind = blkdat.GetPos();\n-        while (blkdat.good() && !blkdat.eof() && !fShutdown) {\n+        while (blkdat.good() && !blkdat.eof() && !fRequestShutdown) {\n             blkdat.SetPos(nRewind);\n             nRewind++; // start one byte further next time, in case of failure\n             blkdat.SetLimit(); // remove former limit"
      },
      {
        "sha": "3cbc6b196bd6c5e027e16913972b303487ebc44a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77f72362b50956451a29462d94988ccd98048720/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77f72362b50956451a29462d94988ccd98048720/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=77f72362b50956451a29462d94988ccd98048720",
        "patch": "@@ -64,7 +64,7 @@ bool fDebug = false;\n bool fDebugNet = false;\n bool fPrintToConsole = false;\n bool fPrintToDebugger = false;\n-bool fRequestShutdown = false;\n+volatile bool fRequestShutdown = false;\n bool fShutdown = false;\n bool fDaemon = false;\n bool fServer = false;"
      },
      {
        "sha": "ab921e6f05dd4ef459aa7bb11d1a30d1370ee185",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77f72362b50956451a29462d94988ccd98048720/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77f72362b50956451a29462d94988ccd98048720/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=77f72362b50956451a29462d94988ccd98048720",
        "patch": "@@ -132,7 +132,7 @@ extern bool fDebug;\n extern bool fDebugNet;\n extern bool fPrintToConsole;\n extern bool fPrintToDebugger;\n-extern bool fRequestShutdown;\n+extern volatile bool fRequestShutdown;\n extern bool fShutdown;\n extern bool fDaemon;\n extern bool fServer;"
      }
    ]
  },
  {
    "sha": "0c556cb3ebe85a31200f8322ace3fee778745aa3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzU1NmNiM2ViZTg1YTMxMjAwZjgzMjJhY2UzZmVlNzc4NzQ1YWEz",
    "commit": {
      "author": {
        "name": "Mike Cassano",
        "email": "mcassano@gmail.com",
        "date": "2012-12-06T19:05:11Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:13Z"
      },
      "message": "add rescan bool to importprivkey to control whether to do a rescan after import",
      "tree": {
        "sha": "0010edb525b282474b89ca2b1f03453aa4f82d1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0010edb525b282474b89ca2b1f03453aa4f82d1e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c556cb3ebe85a31200f8322ace3fee778745aa3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c556cb3ebe85a31200f8322ace3fee778745aa3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c556cb3ebe85a31200f8322ace3fee778745aa3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c556cb3ebe85a31200f8322ace3fee778745aa3/comments",
    "author": {
      "login": "mcassano",
      "id": 2073030,
      "node_id": "MDQ6VXNlcjIwNzMwMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2073030?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcassano",
      "html_url": "https://github.com/mcassano",
      "followers_url": "https://api.github.com/users/mcassano/followers",
      "following_url": "https://api.github.com/users/mcassano/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcassano/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcassano/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcassano/subscriptions",
      "organizations_url": "https://api.github.com/users/mcassano/orgs",
      "repos_url": "https://api.github.com/users/mcassano/repos",
      "events_url": "https://api.github.com/users/mcassano/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcassano/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77f72362b50956451a29462d94988ccd98048720",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f72362b50956451a29462d94988ccd98048720",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77f72362b50956451a29462d94988ccd98048720"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "77cef027365a6531a90100996bc22a70e8d2123d",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c556cb3ebe85a31200f8322ace3fee778745aa3/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c556cb3ebe85a31200f8322ace3fee778745aa3/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=0c556cb3ebe85a31200f8322ace3fee778745aa3",
        "patch": "@@ -34,15 +34,21 @@ class CTxDump\n \n Value importprivkey(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 1 || params.size() > 2)\n+    if (fHelp || params.size() < 1 || params.size() > 3)\n         throw runtime_error(\n-            \"importprivkey <bitcoinprivkey> [label]\\n\"\n+            \"importprivkey <bitcoinprivkey> [label] [rescan=true]\\n\"\n             \"Adds a private key (as returned by dumpprivkey) to your wallet.\");\n \n     string strSecret = params[0].get_str();\n     string strLabel = \"\";\n     if (params.size() > 1)\n         strLabel = params[1].get_str();\n+\n+    // Whether to perform rescan after import\n+    bool fRescan = true;\n+    if (params.size() > 2)\n+        fRescan = params[2].get_bool();\n+\n     CBitcoinSecret vchSecret;\n     bool fGood = vchSecret.SetString(strSecret);\n \n@@ -61,9 +67,11 @@ Value importprivkey(const Array& params, bool fHelp)\n \n         if (!pwalletMain->AddKey(key))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n-\n-        pwalletMain->ScanForWalletTransactions(pindexGenesisBlock, true);\n-        pwalletMain->ReacceptWalletTransactions();\n+\t\n+        if (fRescan) {\n+            pwalletMain->ScanForWalletTransactions(pindexGenesisBlock, true);\n+            pwalletMain->ReacceptWalletTransactions();\n+        }\n     }\n \n     return Value::null;"
      }
    ]
  },
  {
    "sha": "6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTQyMWNhNjViZmFhZDlhNmRiZWIyNWIxNWRjYjY1NTZiMzc5YmMw",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-12-10T14:41:04Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:13Z"
      },
      "message": "Checkpoint at first 25-btc-reward block (210,000)",
      "tree": {
        "sha": "ac14f1e8f1d5158cd46f463b3cb91b4a7e8144ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac14f1e8f1d5158cd46f463b3cb91b4a7e8144ef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c556cb3ebe85a31200f8322ace3fee778745aa3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c556cb3ebe85a31200f8322ace3fee778745aa3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c556cb3ebe85a31200f8322ace3fee778745aa3"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4d2096ef07b0d8729d34872cba4e59f1c3af1731",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0",
        "patch": "@@ -30,6 +30,7 @@ namespace Checkpoints\n         (134444, uint256(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\"))\n         (168000, uint256(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\"))\n         (193000, uint256(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\"))\n+        (210000, uint256(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\"))\n         ;\n \n     static MapCheckpoints mapCheckpointsTestnet ="
      }
    ]
  },
  {
    "sha": "6b4776977c5d4bb2bc17c938e12fdb1ffb683aac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjQ3NzY5NzdjNWQ0YmIyYmMxN2M5MzhlMTJmZGIxZmZiNjgzYWFj",
    "commit": {
      "author": {
        "name": "Andrey Alekseenko",
        "email": "al42and@gmail.com",
        "date": "2012-12-12T07:31:30Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:14Z"
      },
      "message": "OptionsModel now has MapPortUPnP=false if UPNP is not supported",
      "tree": {
        "sha": "52bc560a95086c36e85604c9d7a54b7edf779d7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52bc560a95086c36e85604c9d7a54b7edf779d7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b4776977c5d4bb2bc17c938e12fdb1ffb683aac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4776977c5d4bb2bc17c938e12fdb1ffb683aac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b4776977c5d4bb2bc17c938e12fdb1ffb683aac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4776977c5d4bb2bc17c938e12fdb1ffb683aac/comments",
    "author": {
      "login": "al42and",
      "id": 933873,
      "node_id": "MDQ6VXNlcjkzMzg3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/933873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/al42and",
      "html_url": "https://github.com/al42and",
      "followers_url": "https://api.github.com/users/al42and/followers",
      "following_url": "https://api.github.com/users/al42and/following{/other_user}",
      "gists_url": "https://api.github.com/users/al42and/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/al42and/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/al42and/subscriptions",
      "organizations_url": "https://api.github.com/users/al42and/orgs",
      "repos_url": "https://api.github.com/users/al42and/repos",
      "events_url": "https://api.github.com/users/al42and/events{/privacy}",
      "received_events_url": "https://api.github.com/users/al42and/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a421ca65bfaad9a6dbeb25b15dcb6556b379bc0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5dac5a6c457e04377bd233c2b0211ab802f8dc12",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b4776977c5d4bb2bc17c938e12fdb1ffb683aac/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b4776977c5d4bb2bc17c938e12fdb1ffb683aac/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=6b4776977c5d4bb2bc17c938e12fdb1ffb683aac",
        "patch": "@@ -137,7 +137,11 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         case MinimizeToTray:\n             return QVariant(fMinimizeToTray);\n         case MapPortUPnP:\n+#ifdef USE_UPNP\n             return settings.value(\"fUseUPnP\", GetBoolArg(\"-upnp\", true));\n+#else\n+            return QVariant(false);\n+#endif\n         case MinimizeOnClose:\n             return QVariant(fMinimizeOnClose);\n         case ProxyUse: {"
      }
    ]
  },
  {
    "sha": "969a8ff194fbd5b66e725f886a249576f1b9da49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjlhOGZmMTk0ZmJkNWI2NmU3MjVmODg2YTI0OTU3NmYxYjlkYTQ5",
    "commit": {
      "author": {
        "name": "Richard Schwab",
        "email": "mail@w.tf-w.tf",
        "date": "2012-12-12T15:32:22Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:14Z"
      },
      "message": "Change timestamps to use ISO8601 formatting",
      "tree": {
        "sha": "f3b12c03cbdd867c7614a010a4902b4eea9413c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3b12c03cbdd867c7614a010a4902b4eea9413c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/969a8ff194fbd5b66e725f886a249576f1b9da49",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/969a8ff194fbd5b66e725f886a249576f1b9da49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/969a8ff194fbd5b66e725f886a249576f1b9da49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/969a8ff194fbd5b66e725f886a249576f1b9da49/comments",
    "author": {
      "login": "Nothing4You",
      "id": 3694534,
      "node_id": "MDQ6VXNlcjM2OTQ1MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3694534?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nothing4You",
      "html_url": "https://github.com/Nothing4You",
      "followers_url": "https://api.github.com/users/Nothing4You/followers",
      "following_url": "https://api.github.com/users/Nothing4You/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nothing4You/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nothing4You/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nothing4You/subscriptions",
      "organizations_url": "https://api.github.com/users/Nothing4You/orgs",
      "repos_url": "https://api.github.com/users/Nothing4You/repos",
      "events_url": "https://api.github.com/users/Nothing4You/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nothing4You/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b4776977c5d4bb2bc17c938e12fdb1ffb683aac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4776977c5d4bb2bc17c938e12fdb1ffb683aac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b4776977c5d4bb2bc17c938e12fdb1ffb683aac"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "74533e49e103eb758cb0f77acc75c6f7d3df2463",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/969a8ff194fbd5b66e725f886a249576f1b9da49/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/969a8ff194fbd5b66e725f886a249576f1b9da49/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=969a8ff194fbd5b66e725f886a249576f1b9da49",
        "patch": "@@ -571,7 +571,7 @@ bool AppInit2()\n     printf(\"Bitcoin version %s (%s)\\n\", FormatFullVersion().c_str(), CLIENT_DATE.c_str());\n     printf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n     if (!fLogTimestamps)\n-        printf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%x %H:%M:%S\", GetTime()).c_str());\n+        printf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", GetTime()).c_str());\n     printf(\"Default data directory %s\\n\", GetDefaultDataDir().string().c_str());\n     printf(\"Used data directory %s\\n\", strDataDir.c_str());\n     std::ostringstream strErrors;"
      },
      {
        "sha": "96bdabd5864a999cd514b69acb34c50976611b03",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/969a8ff194fbd5b66e725f886a249576f1b9da49/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/969a8ff194fbd5b66e725f886a249576f1b9da49/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=969a8ff194fbd5b66e725f886a249576f1b9da49",
        "patch": "@@ -1187,11 +1187,11 @@ void static InvalidChainFound(CBlockIndex* pindexNew)\n     }\n     printf(\"InvalidChainFound: invalid block=%s  height=%d  work=%s  date=%s\\n\",\n       BlockHashStr(pindexNew->GetBlockHash()).c_str(), pindexNew->nHeight,\n-      pindexNew->bnChainWork.ToString().c_str(), DateTimeStrFormat(\"%x %H:%M:%S\",\n+      pindexNew->bnChainWork.ToString().c_str(), DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\",\n       pindexNew->GetBlockTime()).c_str());\n     printf(\"InvalidChainFound:  current best=%s  height=%d  work=%s  date=%s\\n\",\n       BlockHashStr(hashBestChain).c_str(), nBestHeight, bnBestChainWork.ToString().c_str(),\n-      DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n+      DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n     if (pindexBest && bnBestInvalidWork > bnBestChainWork + pindexBest->GetBlockWork() * 6)\n         printf(\"InvalidChainFound: Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.\\n\");\n }\n@@ -1828,7 +1828,7 @@ bool SetBestChain(CBlockIndex* pindexNew)\n     nTransactionsUpdated++;\n     printf(\"SetBestChain: new best=%s  height=%d  work=%s  tx=%lu  date=%s\\n\",\n       BlockHashStr(hashBestChain).c_str(), nBestHeight, bnBestChainWork.ToString().c_str(), (unsigned long)pindexNew->nChainTx,\n-      DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n+      DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n \n     // Check the version of the last 100 blocks to see if we need to upgrade:\n     if (!fIsInitialDownload)\n@@ -2375,7 +2375,7 @@ bool static LoadBlockIndexDB()\n     }\n     printf(\"LoadBlockIndex(): hashBestChain=%s  height=%d date=%s\\n\",\n         BlockHashStr(hashBestChain).c_str(), nBestHeight,\n-        DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n+        DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n \n     // Verify blocks in the best chain\n     int nCheckLevel = GetArg(\"-checklevel\", 1);\n@@ -2538,7 +2538,7 @@ void PrintBlockTree()\n         printf(\"%d (blk%05u.dat:0x%x)  %s  tx %\"PRIszu\"\",\n             pindex->nHeight,\n             pindex->GetBlockPos().nFile, pindex->GetBlockPos().nPos,\n-            DateTimeStrFormat(\"%x %H:%M:%S\", block.GetBlockTime()).c_str(),\n+            DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", block.GetBlockTime()).c_str(),\n             block.vtx.size());\n \n         PrintWallets(block);"
      },
      {
        "sha": "c47d25bbe9e7369b308e32db4a82849add268e9c",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/969a8ff194fbd5b66e725f886a249576f1b9da49/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/969a8ff194fbd5b66e725f886a249576f1b9da49/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=969a8ff194fbd5b66e725f886a249576f1b9da49",
        "patch": "@@ -104,11 +104,11 @@ BOOST_AUTO_TEST_CASE(util_HexStr)\n BOOST_AUTO_TEST_CASE(util_DateTimeStrFormat)\n {\n /*These are platform-dependant and thus removed to avoid useless test failures\n-    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%x %H:%M:%S\", 0), \"01/01/70 00:00:00\");\n-    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%x %H:%M:%S\", 0x7FFFFFFF), \"01/19/38 03:14:07\");\n+    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", 0), \"1970-01-01T00:00:00\");\n+    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", 0x7FFFFFFF), \"2038-01-19T03:14:07\");\n     // Formats used within Bitcoin\n-    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%x %H:%M:%S\", 1317425777), \"09/30/11 23:36:17\");\n-    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%x %H:%M\", 1317425777), \"09/30/11 23:36\");\n+    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", 1317425777), \"2011-09-30T23:36:17\");\n+    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%Y-%m-%dT%H:%M\", 1317425777), \"2011-09-30T23:36\");\n */\n }\n "
      },
      {
        "sha": "806f3ebcf6e83b4e547e27b3ffd087f06a4a8923",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/969a8ff194fbd5b66e725f886a249576f1b9da49/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/969a8ff194fbd5b66e725f886a249576f1b9da49/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=969a8ff194fbd5b66e725f886a249576f1b9da49",
        "patch": "@@ -240,7 +240,7 @@ inline int OutputDebugStringF(const char* pszFormat, ...)\n \n             // Debug print useful for profiling\n             if (fLogTimestamps && fStartedNewLine)\n-                fprintf(fileout, \"%s \", DateTimeStrFormat(\"%x %H:%M:%S\", GetTime()).c_str());\n+                fprintf(fileout, \"%s \", DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", GetTime()).c_str());\n             if (pszFormat[strlen(pszFormat) - 1] == '\\n')\n                 fStartedNewLine = true;\n             else"
      },
      {
        "sha": "4419cbb5f796be4ca541a4b2e6d57781bb8ecf02",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/969a8ff194fbd5b66e725f886a249576f1b9da49/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/969a8ff194fbd5b66e725f886a249576f1b9da49/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=969a8ff194fbd5b66e725f886a249576f1b9da49",
        "patch": "@@ -238,7 +238,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             //printf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString().c_str());\n             //printf(\" %12\"PRI64d\"  %s  %s  %s\\n\",\n             //    wtx.vout[0].nValue,\n-            //    DateTimeStrFormat(\"%x %H:%M:%S\", wtx.GetBlockTime()).c_str(),\n+            //    DateTimeStrFormat(\"%Y-%m-%dT%H:%M:%S\", wtx.GetBlockTime()).c_str(),\n             //    wtx.hashBlock.ToString().substr(0,20).c_str(),\n             //    wtx.mapValue[\"message\"].c_str());\n         }"
      }
    ]
  },
  {
    "sha": "b3a18c18217202d1973f438a78bb71d403cc7b21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiM2ExOGMxODIxNzIwMmQxOTczZjQzOGE3OGJiNzFkNDAzY2M3YjIx",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-12-04T18:42:21Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:14Z"
      },
      "message": "Compile c/objective-c code max compatiblity when RELEASE",
      "tree": {
        "sha": "02d1a81a470315d17c11f233b561b7dc998033b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02d1a81a470315d17c11f233b561b7dc998033b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3a18c18217202d1973f438a78bb71d403cc7b21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3a18c18217202d1973f438a78bb71d403cc7b21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b3a18c18217202d1973f438a78bb71d403cc7b21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3a18c18217202d1973f438a78bb71d403cc7b21/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "969a8ff194fbd5b66e725f886a249576f1b9da49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/969a8ff194fbd5b66e725f886a249576f1b9da49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/969a8ff194fbd5b66e725f886a249576f1b9da49"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3b2de5af3b1ec3f39f2d7118e3375d379d276a29",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3a18c18217202d1973f438a78bb71d403cc7b21/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3a18c18217202d1973f438a78bb71d403cc7b21/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=b3a18c18217202d1973f438a78bb71d403cc7b21",
        "patch": "@@ -24,6 +24,8 @@ UI_DIR = build\n contains(RELEASE, 1) {\n     # Mac: compile for maximum compatibility (10.5, 32-bit)\n     macx:QMAKE_CXXFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n+    macx:QMAKE_CFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n+    macx:QMAKE_OBJECTIVE_CFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n \n     !windows:!macx {\n         # Linux: static link"
      }
    ]
  },
  {
    "sha": "13d773fdcb50a6686af191b8f545d4962c7ba384",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxM2Q3NzNmZGNiNTBhNjY4NmFmMTkxYjhmNTQ1ZDQ5NjJjN2JhMzg0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-12T18:31:18Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:14Z"
      },
      "message": "add threadsafety.h to bitcoin-qt.pro\n\n- to be able to see threadsafety.h in the Qt Creator IDE the file needs to\n  be added to the HEADERS section",
      "tree": {
        "sha": "651ef82bd2eb8ad3dc28a67c95a9d29fd5f66fb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/651ef82bd2eb8ad3dc28a67c95a9d29fd5f66fb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13d773fdcb50a6686af191b8f545d4962c7ba384",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13d773fdcb50a6686af191b8f545d4962c7ba384",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13d773fdcb50a6686af191b8f545d4962c7ba384",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13d773fdcb50a6686af191b8f545d4962c7ba384/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b3a18c18217202d1973f438a78bb71d403cc7b21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3a18c18217202d1973f438a78bb71d403cc7b21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b3a18c18217202d1973f438a78bb71d403cc7b21"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b10cda2af648b175f9145b91a8432bd0bc79185b",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13d773fdcb50a6686af191b8f545d4962c7ba384/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13d773fdcb50a6686af191b8f545d4962c7ba384/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=13d773fdcb50a6686af191b8f545d4962c7ba384",
        "patch": "@@ -197,7 +197,8 @@ HEADERS += src/qt/bitcoingui.h \\\n     src/netbase.h \\\n     src/clientversion.h \\\n     src/txdb.h \\\n-    src/leveldb.h\n+    src/leveldb.h \\\n+    src/threadsafety.h\n \n SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \\\n     src/qt/transactiontablemodel.cpp \\"
      }
    ]
  },
  {
    "sha": "992d36570bf6deaba9a147c78af87fe65ef8f6be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTJkMzY1NzBiZjZkZWFiYTlhMTQ3Yzc4YWY4N2ZlNjVlZjhmNmJl",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-12T18:35:22Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:15Z"
      },
      "message": "LevelDB: build_detect_platform fix NATIVE_WINDOWS indentation\n\n- fix some indentation issues",
      "tree": {
        "sha": "9c8e78d71f94faec3e16da20ff855a705b0b01ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c8e78d71f94faec3e16da20ff855a705b0b01ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/992d36570bf6deaba9a147c78af87fe65ef8f6be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/992d36570bf6deaba9a147c78af87fe65ef8f6be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/992d36570bf6deaba9a147c78af87fe65ef8f6be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/992d36570bf6deaba9a147c78af87fe65ef8f6be/comments",
    "author": null,
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13d773fdcb50a6686af191b8f545d4962c7ba384",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13d773fdcb50a6686af191b8f545d4962c7ba384",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13d773fdcb50a6686af191b8f545d4962c7ba384"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "566d1f83a4cd86ad0ee5ddff0849080a8011cbd1",
        "filename": "src/leveldb/build_detect_platform",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/992d36570bf6deaba9a147c78af87fe65ef8f6be/src/leveldb/build_detect_platform",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/992d36570bf6deaba9a147c78af87fe65ef8f6be/src/leveldb/build_detect_platform",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/build_detect_platform?ref=992d36570bf6deaba9a147c78af87fe65ef8f6be",
        "patch": "@@ -119,15 +119,15 @@ case \"$TARGET_OS\" in\n         PLATFORM_EXTRALIBS=\"-lboost_system-mt-s -lboost_filesystem-mt-s -lboost_thread_win32-mt-s\"\n         CROSS_COMPILE=true\n         ;;\n-  NATIVE_WINDOWS)\n+    NATIVE_WINDOWS)\n         PLATFORM=OS_WINDOWS\n         COMMON_FLAGS=\"-fno-builtin-memcmp -D_REENTRANT -DOS_WINDOWS -DLEVELDB_PLATFORM_WINDOWS -DBOOST_THREAD_USE_LIB\"\n         PLATFORM_CXXFLAGS=\"\"\n         PLATFORM_LDFLAGS=\"\"\n         PLATFORM_SHARED_CFLAGS=\"\"\n         PLATFORM_SOURCES=\"port/port_win.cc util/env_boost.cc util/win_logger.cc\"\n-\t\tPLATFORM_EXTRALIBS=\"-lboost_system-mgw45-mt-s-1_50 -lboost_filesystem-mgw45-mt-s-1_50 -lboost_thread-mgw45-mt-s-1_50 -lboost_chrono-mgw45-mt-s-1_50\"\n-        CROSS_COMPILE=true\t\n+        PLATFORM_EXTRALIBS=\"-lboost_system-mgw45-mt-s-1_50 -lboost_filesystem-mgw45-mt-s-1_50 -lboost_thread-mgw45-mt-s-1_50 -lboost_chrono-mgw45-mt-s-1_50\"\n+        CROSS_COMPILE=true\n \t    ;;\n     *)\n         echo \"Unknown platform!\" >&2"
      }
    ]
  },
  {
    "sha": "013d36f7b071382daecb50ad036513c8db710690",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTNkMzZmN2IwNzEzODJkYWVjYjUwYWQwMzY1MTNjOGRiNzEwNjkw",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2012-12-17T10:09:53Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:15Z"
      },
      "message": "Fix two typos in main.h\n\nBreak one long comment down into 3 lines so it's readable.",
      "tree": {
        "sha": "1d34804111fa853cfba740bf8b9edc9a1b19c299",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d34804111fa853cfba740bf8b9edc9a1b19c299"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/013d36f7b071382daecb50ad036513c8db710690",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/013d36f7b071382daecb50ad036513c8db710690",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/013d36f7b071382daecb50ad036513c8db710690",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/013d36f7b071382daecb50ad036513c8db710690/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "992d36570bf6deaba9a147c78af87fe65ef8f6be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/992d36570bf6deaba9a147c78af87fe65ef8f6be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/992d36570bf6deaba9a147c78af87fe65ef8f6be"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1ee7a999344c92ea1da320dae572cc87fd9b41ab",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/013d36f7b071382daecb50ad036513c8db710690/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/013d36f7b071382daecb50ad036513c8db710690/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=013d36f7b071382daecb50ad036513c8db710690",
        "patch": "@@ -131,7 +131,9 @@ class CBigNum : public BIGNUM\n \n         if (sn < (int64)0)\n         {\n-            // Since the minimum signed integer cannot be represented as positive so long as its type is signed, and it's not well-defined what happens if you make it unsigned before negating it, we instead increment the negative integer by 1, convert it, then increment the (now positive) unsigned integer by 1 to compensate\n+            // Since the minimum signed integer cannot be represented as positive so long as its type is signed, \n+            // and it's not well-defined what happens if you make it unsigned before negating it,\n+            // we instead increment the negative integer by 1, convert it, then increment the (now positive) unsigned integer by 1 to compensate\n             n = -(sn + 1);\n             ++n;\n             fNegative = true;"
      },
      {
        "sha": "8bceffbaf92a642e12edb387d4315eebc53356d2",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/013d36f7b071382daecb50ad036513c8db710690/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/013d36f7b071382daecb50ad036513c8db710690/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=013d36f7b071382daecb50ad036513c8db710690",
        "patch": "@@ -152,7 +152,7 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n unsigned int ComputeMinWork(unsigned int nBase, int64 nTime);\n /** Get the number of active peers */\n int GetNumBlocksOfPeers();\n-/** Check whether we are doin an inital block download (synchronizing from disk or network) */\n+/** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */\n std::string GetWarnings(std::string strFor);"
      }
    ]
  },
  {
    "sha": "c235cc1e16a018bbc789824c9c336006e6244d60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjM1Y2MxZTE2YTAxOGJiYzc4OTgyNGM5YzMzNjAwNmU2MjQ0ZDYw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-18T19:56:21Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:15Z"
      },
      "message": "Split off hash.h from util.h",
      "tree": {
        "sha": "1886f8e872d11ed5398aeaccd764ca53cb136bb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1886f8e872d11ed5398aeaccd764ca53cb136bb8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c235cc1e16a018bbc789824c9c336006e6244d60",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c235cc1e16a018bbc789824c9c336006e6244d60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c235cc1e16a018bbc789824c9c336006e6244d60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c235cc1e16a018bbc789824c9c336006e6244d60/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "013d36f7b071382daecb50ad036513c8db710690",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/013d36f7b071382daecb50ad036513c8db710690",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/013d36f7b071382daecb50ad036513c8db710690"
      }
    ],
    "stats": {
      "total": 228,
      "additions": 121,
      "deletions": 107
    },
    "files": [
      {
        "sha": "2ca142add6932961701459ca1f3c3fe71b24bc98",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c235cc1e16a018bbc789824c9c336006e6244d60/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c235cc1e16a018bbc789824c9c336006e6244d60/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=c235cc1e16a018bbc789824c9c336006e6244d60",
        "patch": "@@ -144,6 +144,7 @@ HEADERS += src/qt/bitcoingui.h \\\n     src/compat.h \\\n     src/sync.h \\\n     src/util.h \\\n+    src/hash.h \\\n     src/uint256.h \\\n     src/serialize.h \\\n     src/main.h \\"
      },
      {
        "sha": "780edde90f7cb1b45ec9ae0d3e286b793fc79c56",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c235cc1e16a018bbc789824c9c336006e6244d60/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c235cc1e16a018bbc789824c9c336006e6244d60/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=c235cc1e16a018bbc789824c9c336006e6244d60",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"addrman.h\"\n+#include \"hash.h\"\n \n using namespace std;\n "
      },
      {
        "sha": "bc013139bbbc051e10d1987d91605684ee7a9be1",
        "filename": "src/hash.h",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c235cc1e16a018bbc789824c9c336006e6244d60/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c235cc1e16a018bbc789824c9c336006e6244d60/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=c235cc1e16a018bbc789824c9c336006e6244d60",
        "patch": "@@ -0,0 +1,116 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2012 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#ifndef BITCOIN_HASH_H\n+#define BITCOIN_HASH_H\n+\n+#include \"uint256.h\"\n+#include \"serialize.h\"\n+\n+#include <openssl/sha.h>\n+#include <openssl/ripemd.h>\n+\n+template<typename T1>\n+inline uint256 Hash(const T1 pbegin, const T1 pend)\n+{\n+    static unsigned char pblank[1];\n+    uint256 hash1;\n+    SHA256((pbegin == pend ? pblank : (unsigned char*)&pbegin[0]), (pend - pbegin) * sizeof(pbegin[0]), (unsigned char*)&hash1);\n+    uint256 hash2;\n+    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n+    return hash2;\n+}\n+\n+class CHashWriter\n+{\n+private:\n+    SHA256_CTX ctx;\n+\n+public:\n+    int nType;\n+    int nVersion;\n+\n+    void Init() {\n+        SHA256_Init(&ctx);\n+    }\n+\n+    CHashWriter(int nTypeIn, int nVersionIn) : nType(nTypeIn), nVersion(nVersionIn) {\n+        Init();\n+    }\n+\n+    CHashWriter& write(const char *pch, size_t size) {\n+        SHA256_Update(&ctx, pch, size);\n+        return (*this);\n+    }\n+\n+    // invalidates the object\n+    uint256 GetHash() {\n+        uint256 hash1;\n+        SHA256_Final((unsigned char*)&hash1, &ctx);\n+        uint256 hash2;\n+        SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n+        return hash2;\n+    }\n+\n+    template<typename T>\n+    CHashWriter& operator<<(const T& obj) {\n+        // Serialize to this stream\n+        ::Serialize(*this, obj, nType, nVersion);\n+        return (*this);\n+    }\n+};\n+\n+\n+template<typename T1, typename T2>\n+inline uint256 Hash(const T1 p1begin, const T1 p1end,\n+                    const T2 p2begin, const T2 p2end)\n+{\n+    static unsigned char pblank[1];\n+    uint256 hash1;\n+    SHA256_CTX ctx;\n+    SHA256_Init(&ctx);\n+    SHA256_Update(&ctx, (p1begin == p1end ? pblank : (unsigned char*)&p1begin[0]), (p1end - p1begin) * sizeof(p1begin[0]));\n+    SHA256_Update(&ctx, (p2begin == p2end ? pblank : (unsigned char*)&p2begin[0]), (p2end - p2begin) * sizeof(p2begin[0]));\n+    SHA256_Final((unsigned char*)&hash1, &ctx);\n+    uint256 hash2;\n+    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n+    return hash2;\n+}\n+\n+template<typename T1, typename T2, typename T3>\n+inline uint256 Hash(const T1 p1begin, const T1 p1end,\n+                    const T2 p2begin, const T2 p2end,\n+                    const T3 p3begin, const T3 p3end)\n+{\n+    static unsigned char pblank[1];\n+    uint256 hash1;\n+    SHA256_CTX ctx;\n+    SHA256_Init(&ctx);\n+    SHA256_Update(&ctx, (p1begin == p1end ? pblank : (unsigned char*)&p1begin[0]), (p1end - p1begin) * sizeof(p1begin[0]));\n+    SHA256_Update(&ctx, (p2begin == p2end ? pblank : (unsigned char*)&p2begin[0]), (p2end - p2begin) * sizeof(p2begin[0]));\n+    SHA256_Update(&ctx, (p3begin == p3end ? pblank : (unsigned char*)&p3begin[0]), (p3end - p3begin) * sizeof(p3begin[0]));\n+    SHA256_Final((unsigned char*)&hash1, &ctx);\n+    uint256 hash2;\n+    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n+    return hash2;\n+}\n+\n+template<typename T>\n+uint256 SerializeHash(const T& obj, int nType=SER_GETHASH, int nVersion=PROTOCOL_VERSION)\n+{\n+    CHashWriter ss(nType, nVersion);\n+    ss << obj;\n+    return ss.GetHash();\n+}\n+\n+inline uint160 Hash160(const std::vector<unsigned char>& vch)\n+{\n+    uint256 hash1;\n+    SHA256(&vch[0], vch.size(), (unsigned char*)&hash1);\n+    uint160 hash2;\n+    RIPEMD160((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n+    return hash2;\n+}\n+\n+#endif"
      },
      {
        "sha": "4da16b9cdb5088e8910c859aecf4c001ea36decb",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c235cc1e16a018bbc789824c9c336006e6244d60/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c235cc1e16a018bbc789824c9c336006e6244d60/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=c235cc1e16a018bbc789824c9c336006e6244d60",
        "patch": "@@ -11,7 +11,7 @@\n #include \"allocators.h\"\n #include \"serialize.h\"\n #include \"uint256.h\"\n-#include \"util.h\"\n+#include \"hash.h\"\n \n #include <openssl/ec.h> // for EC_KEY definition\n "
      },
      {
        "sha": "e37953772e0385f5a56d7a613ab56155b9ef6e7d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c235cc1e16a018bbc789824c9c336006e6244d60/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c235cc1e16a018bbc789824c9c336006e6244d60/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c235cc1e16a018bbc789824c9c336006e6244d60",
        "patch": "@@ -18,6 +18,7 @@\n #include \"netbase.h\"\n #include \"protocol.h\"\n #include \"addrman.h\"\n+#include \"hash.h\"\n \n class CNode;\n class CBlockIndex;"
      },
      {
        "sha": "4f31ce9cf3476abaa539731ac3bcd4d78c9401c2",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c235cc1e16a018bbc789824c9c336006e6244d60/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c235cc1e16a018bbc789824c9c336006e6244d60/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=c235cc1e16a018bbc789824c9c336006e6244d60",
        "patch": "@@ -6,6 +6,7 @@\n #include \"netbase.h\"\n #include \"util.h\"\n #include \"sync.h\"\n+#include \"hash.h\"\n \n #ifndef WIN32\n #include <sys/fcntl.h>"
      },
      {
        "sha": "8bea0dd2b35d1a04cb1736628e1b979e4047ff8f",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 106,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c235cc1e16a018bbc789824c9c336006e6244d60/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c235cc1e16a018bbc789824c9c336006e6244d60/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=c235cc1e16a018bbc789824c9c336006e6244d60",
        "patch": "@@ -24,9 +24,6 @@ typedef int pid_t; /* define for Windows compatibility */\n #include <boost/date_time/gregorian/gregorian_types.hpp>\n #include <boost/date_time/posix_time/posix_time_types.hpp>\n \n-#include <openssl/sha.h>\n-#include <openssl/ripemd.h>\n-\n #include \"netbase.h\" // for AddTimeData\n \n typedef long long  int64;\n@@ -414,109 +411,6 @@ bool SoftSetBoolArg(const std::string& strArg, bool fValue);\n \n \n \n-template<typename T1>\n-inline uint256 Hash(const T1 pbegin, const T1 pend)\n-{\n-    static unsigned char pblank[1];\n-    uint256 hash1;\n-    SHA256((pbegin == pend ? pblank : (unsigned char*)&pbegin[0]), (pend - pbegin) * sizeof(pbegin[0]), (unsigned char*)&hash1);\n-    uint256 hash2;\n-    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-    return hash2;\n-}\n-\n-class CHashWriter\n-{\n-private:\n-    SHA256_CTX ctx;\n-\n-public:\n-    int nType;\n-    int nVersion;\n-\n-    void Init() {\n-        SHA256_Init(&ctx);\n-    }\n-\n-    CHashWriter(int nTypeIn, int nVersionIn) : nType(nTypeIn), nVersion(nVersionIn) {\n-        Init();\n-    }\n-\n-    CHashWriter& write(const char *pch, size_t size) {\n-        SHA256_Update(&ctx, pch, size);\n-        return (*this);\n-    }\n-\n-    // invalidates the object\n-    uint256 GetHash() {\n-        uint256 hash1;\n-        SHA256_Final((unsigned char*)&hash1, &ctx);\n-        uint256 hash2;\n-        SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-        return hash2;\n-    }\n-\n-    template<typename T>\n-    CHashWriter& operator<<(const T& obj) {\n-        // Serialize to this stream\n-        ::Serialize(*this, obj, nType, nVersion);\n-        return (*this);\n-    }\n-};\n-\n-\n-template<typename T1, typename T2>\n-inline uint256 Hash(const T1 p1begin, const T1 p1end,\n-                    const T2 p2begin, const T2 p2end)\n-{\n-    static unsigned char pblank[1];\n-    uint256 hash1;\n-    SHA256_CTX ctx;\n-    SHA256_Init(&ctx);\n-    SHA256_Update(&ctx, (p1begin == p1end ? pblank : (unsigned char*)&p1begin[0]), (p1end - p1begin) * sizeof(p1begin[0]));\n-    SHA256_Update(&ctx, (p2begin == p2end ? pblank : (unsigned char*)&p2begin[0]), (p2end - p2begin) * sizeof(p2begin[0]));\n-    SHA256_Final((unsigned char*)&hash1, &ctx);\n-    uint256 hash2;\n-    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-    return hash2;\n-}\n-\n-template<typename T1, typename T2, typename T3>\n-inline uint256 Hash(const T1 p1begin, const T1 p1end,\n-                    const T2 p2begin, const T2 p2end,\n-                    const T3 p3begin, const T3 p3end)\n-{\n-    static unsigned char pblank[1];\n-    uint256 hash1;\n-    SHA256_CTX ctx;\n-    SHA256_Init(&ctx);\n-    SHA256_Update(&ctx, (p1begin == p1end ? pblank : (unsigned char*)&p1begin[0]), (p1end - p1begin) * sizeof(p1begin[0]));\n-    SHA256_Update(&ctx, (p2begin == p2end ? pblank : (unsigned char*)&p2begin[0]), (p2end - p2begin) * sizeof(p2begin[0]));\n-    SHA256_Update(&ctx, (p3begin == p3end ? pblank : (unsigned char*)&p3begin[0]), (p3end - p3begin) * sizeof(p3begin[0]));\n-    SHA256_Final((unsigned char*)&hash1, &ctx);\n-    uint256 hash2;\n-    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-    return hash2;\n-}\n-\n-template<typename T>\n-uint256 SerializeHash(const T& obj, int nType=SER_GETHASH, int nVersion=PROTOCOL_VERSION)\n-{\n-    CHashWriter ss(nType, nVersion);\n-    ss << obj;\n-    return ss.GetHash();\n-}\n-\n-inline uint160 Hash160(const std::vector<unsigned char>& vch)\n-{\n-    uint256 hash1;\n-    SHA256(&vch[0], vch.size(), (unsigned char*)&hash1);\n-    uint160 hash2;\n-    RIPEMD160((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-    return hash2;\n-}\n-\n-\n /** Median filter over a stream of values.\n  * Returns the median of the last N numbers\n  */"
      }
    ]
  },
  {
    "sha": "1709ddf52fd554a4b4cf19545cd2859bc5615ecb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzA5ZGRmNTJmZDU1NGE0YjRjZjE5NTQ1Y2QyODU5YmM1NjE1ZWNi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-19T11:23:01Z"
      },
      "committer": {
        "name": "Mike Gogulski",
        "email": "mike@gogulski.com",
        "date": "2012-12-26T14:17:15Z"
      },
      "message": "Convert fRescan argument to importprivkey to bool",
      "tree": {
        "sha": "a532b6299bc85d89400761f18e4b428e7e0058d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a532b6299bc85d89400761f18e4b428e7e0058d2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1709ddf52fd554a4b4cf19545cd2859bc5615ecb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1709ddf52fd554a4b4cf19545cd2859bc5615ecb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1709ddf52fd554a4b4cf19545cd2859bc5615ecb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1709ddf52fd554a4b4cf19545cd2859bc5615ecb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikegogulski",
      "id": 118625,
      "node_id": "MDQ6VXNlcjExODYyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikegogulski",
      "html_url": "https://github.com/mikegogulski",
      "followers_url": "https://api.github.com/users/mikegogulski/followers",
      "following_url": "https://api.github.com/users/mikegogulski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikegogulski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikegogulski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
      "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
      "repos_url": "https://api.github.com/users/mikegogulski/repos",
      "events_url": "https://api.github.com/users/mikegogulski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c235cc1e16a018bbc789824c9c336006e6244d60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c235cc1e16a018bbc789824c9c336006e6244d60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c235cc1e16a018bbc789824c9c336006e6244d60"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "41850d8bb881370b8d6b807b089a68ca2920226a",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1709ddf52fd554a4b4cf19545cd2859bc5615ecb/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1709ddf52fd554a4b4cf19545cd2859bc5615ecb/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=1709ddf52fd554a4b4cf19545cd2859bc5615ecb",
        "patch": "@@ -1219,6 +1219,7 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n     if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n+    if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n \n     return params;\n }"
      }
    ]
  }
]