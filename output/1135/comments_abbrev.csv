Diapolo,2012-04-22T14:56:01Z,"Wow many code changes for a little win, but I'm fine with them.\n",https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5268286,5268286,
luke-jr,2012-04-22T15:15:13Z,"Binary changes to: addrman, bitcoinrpc, db, guiutil, keystore, main, net, script, wallet, walletdb\n\nhttp://luke.dashjr.org/tmp/code/preinc.bin.diff.bz2\n",https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5268385,5268385,
sipa,2012-04-22T15:45:08Z,I consider pre-increment/post-increment more of a code style preference - no need to change it if it doesn't gain you anything.\n,https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5268607,5268607,
luke-jr,2012-04-22T15:47:32Z,I consider unnecessary post-increments to be akin to unused variables.\n,https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5268624,5268624,
jgarzik,2012-04-22T16:04:07Z,@sipa +100\n,https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5268762,5268762,
laanwj,2012-04-22T16:17:52Z,"The number of changes could be brought down if you'd only do this for non-primitive types (ie, iterators).\n\nBut even then, this is a kind of a micro-optimization that makes sense for tight inner loops. I'm not sure it's worth changing everywhere.\n",https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5268878,5268878,
luke-jr,2012-04-22T16:30:22Z,"FWIW, KDE fixed this in 2007.\n",https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5268977,5268977,
tcatm,2012-04-22T18:31:16Z,I just compiled a simple for-loop twice (i++ and ++i) and compared the disassembled code. There were no differences even when using -O0.\n,https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5269903,5269903,
luke-jr,2012-04-22T18:33:53Z,This isn't the only cleanup for 0.6.1 that has almost no effect on binary output. I suspect the actual binary differences are all in the iterators.\n,https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5269921,5269921,
tcatm,2012-04-22T19:06:45Z,I've just talk to someone who knows a thing about C++ compilers. He said iterators from the std library can be inlined and thus it++ vs ++it won't make a difference there either.\n\nIn case we overload ++ in Bitcoin this might in fact make a difference but the better way to fix it would be by making the overloaded method inline-able.\n,https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5270156,5270156,
luke-jr,2012-04-22T19:11:08Z,"That's assuming glibc and GCC. Best to do things the ""right way"" so we don't depend on implementation-specific optimizations.\n",https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5270193,5270193,
gavinandresen,2012-04-22T21:24:00Z,Too much code change for zero gain.\n,https://github.com/bitcoin/bitcoin/pull/1135#issuecomment-5271371,5271371,
