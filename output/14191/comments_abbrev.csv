DrahtBot,2018-09-10T19:49:14Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13558 (Drop unused GetType() from CSizeComputer by Empact)\n* #12153 (Avoid permanent cs_main lock in getblockheader by promag)\n* #12151 (rpc: Remove cs_main lock from blockToJSON and blockheaderToJSON by promag)\n\nIf you consider this pull request important, please also help to r",https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420037543,420037543,
laanwj,2018-09-11T06:50:54Z,"From a performance perspective using RPC for utility-only functions that could be performed locally, especially something that requires pumping over megabytes of data, is a bad idea.\n\nI can imagine this is useful as a quick hack but it's not something to encourage.",https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420166698,420166698,
DrahtBot,2018-09-11T08:38:18Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420194377,420194377,
Sjors,2018-09-11T14:55:07Z,What about expanding / renaming `getblock` such that it can take either a hash or a full block hex?,https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420303428,420303428,
promag,2018-09-11T15:06:05Z,"@Sjors please no overloading, especially when the purposes are different.",https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420307354,420307354,
laanwj,2018-09-12T07:53:40Z,"> What about expanding / renaming getblock such that it can take either a hash or a full block hex?\n\nDisagree, if we end up adding this, then adding it as a separate ""pure utility"" (as in ""this function could run without node"") RPC call with disparate functionality is best. I think coaxing it into an existing server function unnecessarily complicates the interface.",https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420549196,420549196,
sdaftuar,2018-09-14T14:37:54Z,I'm a -0; I agree with the sentiment that this should be done in a standalone tool rather than part of bitcoind.,https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-421379022,421379022,
promag,2018-09-11T16:32:55Z,"There is a performance penalty in not using `blockindex->GetBlockHash()`. Suggestion:\n```cpp\nresult.pushKV(""hash"", blockindex ? blockindex->GetBlockHash().GetHex() : block.GetHash().GetHex());\n```",https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216735581,216735581,src/rpc/blockchain.cpp
promag,2018-09-11T16:36:27Z,"Nit, remove empty line.",https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216736691,216736691,src/rpc/blockchain.cpp
promag,2018-09-11T16:37:00Z,Could lock after `DecodeHexBlk` below.,https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216736867,216736867,src/rpc/blockchain.cpp
