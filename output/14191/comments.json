[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420037543",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420037543",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14191",
    "id": 420037543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDAzNzU0Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T19:49:14Z",
    "updated_at": "2018-09-10T19:49:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13558 (Drop unused GetType() from CSizeComputer by Empact)\n* #12153 (Avoid permanent cs_main lock in getblockheader by promag)\n* #12151 (rpc: Remove cs_main lock from blockToJSON and blockheaderToJSON by promag)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420037543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420166698",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420166698",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14191",
    "id": 420166698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDE2NjY5OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T06:50:54Z",
    "updated_at": "2018-09-11T06:51:14Z",
    "author_association": "MEMBER",
    "body": "From a performance perspective using RPC for utility-only functions that could be performed locally, especially something that requires pumping over megabytes of data, is a bad idea.\r\n\r\nI can imagine this is useful as a quick hack but it's not something to encourage.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420166698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420194377",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420194377",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14191",
    "id": 420194377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDE5NDM3Nw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T08:38:18Z",
    "updated_at": "2018-09-11T08:38:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420194377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420303428",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420303428",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14191",
    "id": 420303428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDMwMzQyOA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T14:55:07Z",
    "updated_at": "2018-09-11T14:55:07Z",
    "author_association": "MEMBER",
    "body": "What about expanding / renaming `getblock` such that it can take either a hash or a full block hex?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420303428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420307354",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420307354",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14191",
    "id": 420307354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDMwNzM1NA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T15:06:05Z",
    "updated_at": "2018-09-11T15:06:11Z",
    "author_association": "MEMBER",
    "body": "@Sjors please no overloading, especially when the purposes are different.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420307354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420549196",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-420549196",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14191",
    "id": 420549196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDU0OTE5Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T07:53:40Z",
    "updated_at": "2018-09-12T07:53:40Z",
    "author_association": "MEMBER",
    "body": "> What about expanding / renaming getblock such that it can take either a hash or a full block hex?\r\n\r\nDisagree, if we end up adding this, then adding it as a separate \"pure utility\" (as in \"this function could run without node\") RPC call with disparate functionality is best. I think coaxing it into an existing server function unnecessarily complicates the interface.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420549196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421379022",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#issuecomment-421379022",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14191",
    "id": 421379022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM3OTAyMg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T14:37:54Z",
    "updated_at": "2018-09-14T14:37:54Z",
    "author_association": "MEMBER",
    "body": "I'm a -0; I agree with the sentiment that this should be done in a standalone tool rather than part of bitcoind.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421379022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216735581",
    "pull_request_review_id": 154288413,
    "id": 216735581,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjczNTU4MQ==",
    "diff_hunk": "@@ -115,16 +115,18 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool tx\n {\n     AssertLockHeld(cs_main);\n     UniValue result(UniValue::VOBJ);\n-    result.pushKV(\"hash\", blockindex->GetBlockHash().GetHex());\n+    result.pushKV(\"hash\", block.GetHash().GetHex());",
    "path": "src/rpc/blockchain.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "1aecb69d7faa9e10ce5feda97d2709057cb9b3e3",
    "original_commit_id": "1aecb69d7faa9e10ce5feda97d2709057cb9b3e3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There is a performance penalty in not using `blockindex->GetBlockHash()`. Suggestion:\r\n```cpp\r\nresult.pushKV(\"hash\", blockindex ? blockindex->GetBlockHash().GetHex() : block.GetHash().GetHex());\r\n```",
    "created_at": "2018-09-11T16:32:55Z",
    "updated_at": "2018-09-11T16:40:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216735581",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14191",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216735581"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216735581"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14191"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216735581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 118,
    "original_line": 118,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216736691",
    "pull_request_review_id": 154288413,
    "id": 216736691,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjczNjY5MQ==",
    "diff_hunk": "@@ -769,6 +770,70 @@ static CBlock GetBlockChecked(const CBlockIndex* pblockindex)\n     return block;\n }\n \n+static UniValue decodeblock(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"decodeblock \\\"block\\\" ( verbosity ) \\n\"\n+            \"If verbosity is 1, returns an Object with information about <block>.\\n\"\n+            \"If verbosity is 2, returns an Object with information about <block> and information about each transaction. \\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"block\\\"          (string, required) The block in hex\\n\"\n+            \"2. verbosity              (numeric, optional, default=1) 1 for a json object, and 2 for json object with transaction data\\n\"\n+            \"\\nResult (for verbosity = 1):\\n\"\n+            \"{\\n\"\n+            \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n+            \"  \\\"size\\\" : n,            (numeric) The block size\\n\"\n+            \"  \\\"strippedsize\\\" : n,    (numeric) The block size excluding witness data\\n\"\n+            \"  \\\"weight\\\" : n           (numeric) The block weight as defined in BIP 141\\n\"\n+            \"  \\\"version\\\" : n,         (numeric) The block version\\n\"\n+            \"  \\\"versionHex\\\" : \\\"00000000\\\", (string) The block version formatted in hexadecimal\\n\"\n+            \"  \\\"merkleroot\\\" : \\\"xxxx\\\", (string) The merkle root\\n\"\n+            \"  \\\"tx\\\" : [               (array of string) The transaction ids\\n\"\n+            \"     \\\"transactionid\\\"     (string) The transaction id\\n\"\n+            \"     ,...\\n\"\n+            \"  ],\\n\"\n+            \"  \\\"time\\\" : ttt,          (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"nonce\\\" : n,           (numeric) The nonce\\n\"\n+            \"  \\\"bits\\\" : \\\"1d00ffff\\\", (string) The bits\\n\"\n+            \"  \\\"difficulty\\\" : x.xxx,  (numeric) The difficulty\\n\"\n+            \"  \\\"nTx\\\" : n,             (numeric) The number of transactions in the block.\\n\"\n+            \"  \\\"previousblockhash\\\" : \\\"hash\\\",  (string) The hash of the previous block\\n\"\n+            \"}\\n\"\n+            \"\\nResult (for verbosity = 2):\\n\"\n+            \"{\\n\"\n+            \"  ...,                     Same output as verbosity = 1.\\n\"\n+            \"  \\\"tx\\\" : [               (array of Objects) The transactions in the format of the getrawtransaction RPC. Different from verbosity = 1 \\\"tx\\\" result.\\n\"\n+            \"         ,...\\n\"\n+            \"  ],\\n\"\n+            \"  ,...                     Same output as verbosity = 1.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"decodeblock\", \"\\\"<block hex>\\\"\")\n+            + HelpExampleRpc(\"decodeblock\", \"\\\"<block hex>\\\"\")\n+        );\n+\n+    LOCK(cs_main);\n+\n+    std::shared_ptr<CBlock> blockptr = std::make_shared<CBlock>();\n+    CBlock& block = *blockptr;\n+    if (!DecodeHexBlk(block, request.params[0].get_str())) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block decode failed\");\n+    }\n+\n+    if (block.vtx.empty() || !block.vtx[0]->IsCoinBase()) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block does not start with a coinbase\");\n+    }\n+\n+    int verbosity = 1;\n+    if (!request.params[1].isNull()) {\n+        verbosity = request.params[1].get_int();\n+    }\n+\n+    return blockToJSON(block, nullptr, verbosity >= 2);\n+",
    "path": "src/rpc/blockchain.cpp",
    "position": 111,
    "original_position": 111,
    "commit_id": "1aecb69d7faa9e10ce5feda97d2709057cb9b3e3",
    "original_commit_id": "1aecb69d7faa9e10ce5feda97d2709057cb9b3e3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, remove empty line.",
    "created_at": "2018-09-11T16:36:27Z",
    "updated_at": "2018-09-11T16:40:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216736691",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14191",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216736691"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216736691"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14191"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216736691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 834,
    "original_line": 834,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216736867",
    "pull_request_review_id": 154288413,
    "id": 216736867,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjczNjg2Nw==",
    "diff_hunk": "@@ -769,6 +770,70 @@ static CBlock GetBlockChecked(const CBlockIndex* pblockindex)\n     return block;\n }\n \n+static UniValue decodeblock(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"decodeblock \\\"block\\\" ( verbosity ) \\n\"\n+            \"If verbosity is 1, returns an Object with information about <block>.\\n\"\n+            \"If verbosity is 2, returns an Object with information about <block> and information about each transaction. \\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"block\\\"          (string, required) The block in hex\\n\"\n+            \"2. verbosity              (numeric, optional, default=1) 1 for a json object, and 2 for json object with transaction data\\n\"\n+            \"\\nResult (for verbosity = 1):\\n\"\n+            \"{\\n\"\n+            \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n+            \"  \\\"size\\\" : n,            (numeric) The block size\\n\"\n+            \"  \\\"strippedsize\\\" : n,    (numeric) The block size excluding witness data\\n\"\n+            \"  \\\"weight\\\" : n           (numeric) The block weight as defined in BIP 141\\n\"\n+            \"  \\\"version\\\" : n,         (numeric) The block version\\n\"\n+            \"  \\\"versionHex\\\" : \\\"00000000\\\", (string) The block version formatted in hexadecimal\\n\"\n+            \"  \\\"merkleroot\\\" : \\\"xxxx\\\", (string) The merkle root\\n\"\n+            \"  \\\"tx\\\" : [               (array of string) The transaction ids\\n\"\n+            \"     \\\"transactionid\\\"     (string) The transaction id\\n\"\n+            \"     ,...\\n\"\n+            \"  ],\\n\"\n+            \"  \\\"time\\\" : ttt,          (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"nonce\\\" : n,           (numeric) The nonce\\n\"\n+            \"  \\\"bits\\\" : \\\"1d00ffff\\\", (string) The bits\\n\"\n+            \"  \\\"difficulty\\\" : x.xxx,  (numeric) The difficulty\\n\"\n+            \"  \\\"nTx\\\" : n,             (numeric) The number of transactions in the block.\\n\"\n+            \"  \\\"previousblockhash\\\" : \\\"hash\\\",  (string) The hash of the previous block\\n\"\n+            \"}\\n\"\n+            \"\\nResult (for verbosity = 2):\\n\"\n+            \"{\\n\"\n+            \"  ...,                     Same output as verbosity = 1.\\n\"\n+            \"  \\\"tx\\\" : [               (array of Objects) The transactions in the format of the getrawtransaction RPC. Different from verbosity = 1 \\\"tx\\\" result.\\n\"\n+            \"         ,...\\n\"\n+            \"  ],\\n\"\n+            \"  ,...                     Same output as verbosity = 1.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"decodeblock\", \"\\\"<block hex>\\\"\")\n+            + HelpExampleRpc(\"decodeblock\", \"\\\"<block hex>\\\"\")\n+        );\n+\n+    LOCK(cs_main);",
    "path": "src/rpc/blockchain.cpp",
    "position": 93,
    "original_position": 93,
    "commit_id": "1aecb69d7faa9e10ce5feda97d2709057cb9b3e3",
    "original_commit_id": "1aecb69d7faa9e10ce5feda97d2709057cb9b3e3",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could lock after `DecodeHexBlk` below.",
    "created_at": "2018-09-11T16:37:00Z",
    "updated_at": "2018-09-11T16:40:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216736867",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14191",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216736867"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14191#discussion_r216736867"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14191"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216736867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 816,
    "original_line": 816,
    "side": "RIGHT"
  }
]