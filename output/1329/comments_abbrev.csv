laanwj,2012-05-17T14:33:45Z,"If everyone thinks the other correction substitutions are a bad idea, those can be removed, let me know....\n",https://github.com/bitcoin/bitcoin/pull/1329#issuecomment-5765151,5765151,
gmaxwell,2012-05-18T03:07:11Z,I'd really rather do something like highlight them in red in the interface rather than silently correct them. But maybe thats just me?\n\nI don't think we should correct them for the same reason that we don't try all 1596 one character variations when an address is invalid to see if any give a proper hash even though it would be computationally cheap:  Because its not that unlikely to correct to t,https://github.com/bitcoin/bitcoin/pull/1329#issuecomment-5779142,5779142,
laanwj,2012-05-18T06:59:49Z,"I've removed the correction. After the last commit, the O and 0 and such can no longer be typed the address field and it will only accept true base58 characters (and whitespaces, which are deleted).\n",https://github.com/bitcoin/bitcoin/pull/1329#issuecomment-5780876,5780876,
luke-jr,2012-05-18T19:37:13Z,Maybe it should pop up an error message explaining that it's ignoring it?\n,https://github.com/bitcoin/bitcoin/pull/1329#issuecomment-5793860,5793860,
laanwj,2012-05-18T20:08:50Z,"Maybe. It'd be nice in general to be more verbose with validation, and give useful hints. But that's not the goal for this pull. \n\nIn the case of zero-width spaces, the users don't even know the characters are in there, so there is no reason to tell them about it either. It should just work.\n",https://github.com/bitcoin/bitcoin/pull/1329#issuecomment-5794448,5794448,
laanwj,2012-05-21T16:53:58Z,Added comment to validator function\n,https://github.com/bitcoin/bitcoin/pull/1329#issuecomment-5827646,5827646,
luke-jr,2012-05-18T19:36:41Z,"This should be moved into the for loop, IMO:\n\n``` C++\nfor(unsigned int idx = 0; idx < input.size(); removeChar ? input.remove(idx, 1) : ++idx)\n```\n\n(also changed idx type to unsigned since it is compared with .size())\n",https://github.com/bitcoin/bitcoin/pull/1329#discussion_r847483,847483,src/qt/bitcoinaddressvalidator.cpp
laanwj,2012-05-18T20:05:55Z,"1) QString::size() returns an int, not an unsigned int: http://qt-project.org/doc/qt-4.8/qstring.html#size\n2) IMO it is more readable this way. I don't like complex expressions in the third clause of a for\n",https://github.com/bitcoin/bitcoin/pull/1329#discussion_r847679,847679,src/qt/bitcoinaddressvalidator.cpp
gavinandresen,2012-05-19T23:28:08Z,"A comment here expressing the security concerns would be nice; maybe:\n\n// Corrections made are very conservative on purpose, to avoid\n// opening up the possibility for attackers to replace valid addresses\n// with look-alike addresses.\n",https://github.com/bitcoin/bitcoin/pull/1329#discussion_r849948,849948,src/qt/bitcoinaddressvalidator.cpp
laanwj,2012-05-20T07:34:12Z,"I'll add a comment. But the reason is not that it allows attackers anything. The corrections were already very conservative and limited to what base58 considers equivalent, so there was already no risk of look-alike addresses.\n\nMore like:\n\n  // Corrections made are very conservative on purpose, to avoid\n  // users unexpectedly getting away with typos that would normally\n  // be detected, and",https://github.com/bitcoin/bitcoin/pull/1329#discussion_r850100,850100,src/qt/bitcoinaddressvalidator.cpp
