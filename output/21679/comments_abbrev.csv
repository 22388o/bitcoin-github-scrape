promag,2021-04-14 14:41:48,"> style-nit: Could use `{` instead of `(` ðŸ˜… (feel free to ignore, if the replacement can't be done with a scripted-diff)\n\nDone, thanks for your review!",https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-819572121,819572121,
DrahtBot,2021-04-14 20:47:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21359 (rpc: include_unsafe option for fundrawtransaction by t-bast)\n* #21283 (Implement BIP 370 PSBTv2 by achow101)\n* #",https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-819821177,819821177,
promag,2021-04-15 08:58:19,@kallewoof @LarryRuane mind taking a look here?  ,https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-820251597,820251597,
MarcoFalke,2021-04-17 06:54:51,"\n<details><summary>Rendered diff first commit:</summary>\n\n```diff\ndiff --git a/bumpfee b/bumpfee\nindex 81181d8..accdd42 100644\n--- a/bumpfee\n+++ b/bumpfee\n@@ -35 +35 @@ Arguments:\n-       ""estimate_mode"": ""str"",    (string, optional, default=unset) The fee estimate mode, must be one of (case insensitive):\n+       ""estimate_mode"": ""str"",    (string, optional, default=""unset"") Th",https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-821778543,821778543,
promag,2021-04-17 08:53:06,@MarcoFalke how did you generated that?,https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-821791703,821791703,
MarcoFalke,2021-04-17 08:57:58,"See bbbbb3f8850907d413db4715c10ef6df055234f6\n\n`dump_dir` needs to be a git dir. For example, `git init /tmp/git_dir`. Then modify the test to set `dump_dir = '/tmp/git_dir'`. Then run the test on the commits you like and observe the difference in the git_dir.\n\n\n\n<details><summary>Example patch:</summary>\n\n\n```diff\ndiff --git a/src/rpc/server.cpp b/src/rpc/server.cpp\nindex 5d8",https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-821792239,821792239,
promag,2021-04-17 09:01:52,Cool! I thought there was already something like that but couldn't find it. Maybe it could be made a script.,https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-821792655,821792655,
LarryRuane,2021-04-17 21:09:07,ACK bee56c78e94417f89b1f48682404e2821b57bdec,https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-821887997,821887997,
promag,2021-04-18 20:31:09,"@kiminuo thanks for reviewing, will fix typo if I have to push again.",https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-822056208,822056208,
MarcoFalke,2021-04-19 06:52:08,@promag Are you going to address https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615219706 here or in a follow-up?,https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-822218592,822218592,
promag,2021-04-19 06:58:52,"@MarcoFalke I'm fine either way. Maybe do it later? I'm thinking that the recursive check could be reused to check for actual RPC argument values. Also, #20017 doesn't need that change.",https://github.com/bitcoin/bitcoin/pull/21679#issuecomment-822222361,822222361,
MarcoFalke,2021-04-14 14:22:57,"```suggestion\n                    {""estimate_mode"", RPCArg::Type::STR, RPCArg::Default(""unset""), ""The fee estimate mode, must be one of (case insensitive):\n""\n```\n\nunrelated nit (feel free to fix in a new commit or not at all)",https://github.com/bitcoin/bitcoin/pull/21679#discussion_r613293613,613293613,src/wallet/rpcwallet.cpp
MarcoFalke,2021-04-14 14:25:29,what is this change?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r613295829,613295829,src/rpc/mining.cpp
promag,2021-04-14 14:38:20,Bad fixup,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r613307313,613307313,src/rpc/mining.cpp
promag,2021-04-14 14:39:32,Done.,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r613308406,613308406,src/wallet/rpcwallet.cpp
MarcoFalke,2021-04-15 09:09:43,?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r613897298,613897298,src/rpc/blockchain.cpp
promag,2021-04-15 09:26:26,Do you think we should check types?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r613909229,613909229,src/rpc/blockchain.cpp
MarcoFalke,2021-04-15 09:54:55,It was just an example. This is wrong everywhere since my last review,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r613929643,613929643,src/rpc/blockchain.cpp
MarcoFalke,2021-04-15 17:38:17,CHECK_NONFATAL(false);,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r614268395,614268395,src/rpc/util.h
MarcoFalke,2021-04-15 17:38:56,"Woudn't this be better checked in the RPCHelpMan constructor, which also checks the RPCArg name?",https://github.com/bitcoin/bitcoin/pull/21679#discussion_r614268810,614268810,src/rpc/util.h
MarcoFalke,2021-04-15 17:39:47,I am not really a fan of putting a 20-line function in a header,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r614269344,614269344,src/rpc/util.h
promag,2021-04-15 17:45:58,Yeah I made the smallest change to test this approach. Iâ€™ll move this.,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r614273312,614273312,src/rpc/util.h
promag,2021-04-16 14:15:32,Added just for `default:` case.,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r614872393,614872393,src/rpc/util.h
LarryRuane,2021-04-16 17:24:10,Did you intend to change the default?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615011081,615011081,src/rpc/blockchain.cpp
LarryRuane,2021-04-16 17:25:57,Default change?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615012172,615012172,src/rpc/blockchain.cpp
LarryRuane,2021-04-16 17:27:19,Default change?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615012932,615012932,src/rpc/blockchain.cpp
LarryRuane,2021-04-16 17:43:29,Default (hint) change?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615021943,615021943,src/rpc/blockchain.cpp
LarryRuane,2021-04-16 17:45:19,Default (hint) change?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615022909,615022909,src/rpc/blockchain.cpp
LarryRuane,2021-04-16 17:46:58,Default (hint) change?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615023811,615023811,src/rpc/blockchain.cpp
LarryRuane,2021-04-16 17:48:54,"nit, consider prefacing with the comment ""empty object"" (I had to think about what this was doing).",https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615024887,615024887,src/rpc/mining.cpp
LarryRuane,2021-04-16 17:54:08,"nit, perhaps comment like ""only the Default (variant 2) needs to be [or can be?] checked"" (to explain where the 2 came from).",https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615027806,615027806,src/rpc/util.cpp
promag,2021-04-16 23:06:33,ðŸ˜± how did this happen?,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615161260,615161260,src/rpc/blockchain.cpp
promag,2021-04-16 23:18:34,Kept as-is for simplicity. ,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615164086,615164086,src/rpc/mining.cpp
promag,2021-04-16 23:20:17,"Just appended ""only when defined"", didn't want to duplicate what's in code, and I think is obvious after checking `m_fallback` type.",https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615164490,615164490,src/rpc/util.cpp
promag,2021-04-16 23:20:46,Thanks.,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615164612,615164612,src/rpc/blockchain.cpp
MarcoFalke,2021-04-17 07:13:53,":facepalm: RPCArg is a recursive datastructure, so it makes more sense to check this here (like you did initially)",https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615219706,615219706,src/rpc/util.h
kiminuo,2021-04-18 11:36:36,"Would it make sense to attempt to make this a scripted-diff? \n\nIt looks like one can change `/* default */` to `/* default-hint */` in one commit (by hand) and then write a sed script that does the replacements (all or a subset) for you. It would probably be hard unless done in a partial way. Just thinking out loud.",https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615385871,615385871,src/rpc/blockchain.cpp
kiminuo,2021-04-18 12:00:23,Just FMI: `RPCArg::Type::RANGE` is represented by a number or with an array with two numbers. So `RPCArg::Type::RANGE` does not belong here (it's correct as it is).,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615388976,615388976,src/rpc/util.cpp
kiminuo,2021-04-18 12:00:36,Just for the sake of completeness: All `UniValue` enum values are here.,https://github.com/bitcoin/bitcoin/pull/21679#discussion_r615388992,615388992,src/rpc/util.cpp
