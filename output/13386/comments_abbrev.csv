Kick1986,2018-06-04T09:08:40Z,"@sipa\n\nGreat works as usual!\n\nI just came cross this thread \n\nhttps://github.com/armfazh/flo-shani-aesni/blob/master/README.md\n\nI hope you will have time to look at what they did! ",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-394286339,394286339,
DrahtBot,2018-06-04T12:41:57Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-394340846,394340846,
promag,2018-06-04T12:45:37Z,"Concept ACK, nice numbers.",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-394341839,394341839,
sipa,2018-06-04T16:54:25Z,"Rebased.\n\n@Kick1986 Nice, I'll have a look.",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-394424685,394424685,
DrahtBot,2018-06-05T00:49:29Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13442 (Convert the 1-way SSE4 SHA256 code from asm to intrinsics by sipa)\n* #13203 (Add POWER8 ASM for 4-way SHA256 by TheBlueMatt)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be m",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-394545161,394545161,
Empact,2018-06-05T09:34:11Z,"For clang version, looks like they were added in 3.4, but never noted in the release notes.\nSource: went from commit date[1] to release date[2] to file in release version[3].\nDid not check for every intrinsic used.\n[1] https://github.com/llvm-mirror/clang/commit/b83f5a77335ca8a5b41ba4e17aa8d4bb6248c1e4#diff-c4f203a0f202bf56c364a657b0aecae9\n[2] http://releases.llvm.org/\n[3] https://github",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-394645719,394645719,
theuni,2018-06-05T21:03:59Z,"concept ACK.\n\nI noticed while testing #13400 that I added a bug, but bitcoind started up fine anyway, due to missing sanity checks for the double/4way/8way hashes. Mind adding those?",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-394859603,394859603,
sipa,2018-06-11T16:52:01Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-396310602,396310602,
DrahtBot,2018-06-12T19:00:32Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-396698229,396698229,
sipa,2018-06-12T19:23:09Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-396704377,396704377,
DrahtBot,2018-06-24T14:19:29Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-399760046,399760046,
sipa,2018-06-24T17:56:51Z,"Rebased after #13471 merge.\n\nAlso split up the CPU feature detection logic change into its own commit.\n\n> I noticed while testing #13400 that I added a bug, but bitcoind started up fine anyway, due to missing sanity checks for the double/4way/8way hashes. Mind adding those?\n\nThat was addressed in #13438.",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-399774881,399774881,
theuni,2018-06-25T19:51:15Z,"~~~SelfTest() is now missing TransformD64_2way :(~~~\n\nutACK otherwise.",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-400073902,400073902,
theuni,2018-06-26T18:56:35Z,Thanks! utACK 66b2cf1ccfad545a8ec3f2a854e23f647322bf30.,https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-400425210,400425210,
jb55,2018-06-27T03:32:05Z,"Not sure what compelled me to do this, and it's probably overkill... but...\n\nTested ACK 66b2cf1ccfad545a8ec3f2a854e23f647322bf30 with [100k rounds of quickcheck](https://github.com/jb55/sha256-quickcheck) at various optimization levels, but only with the non-two way transform for now. ",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-400532107,400532107,
DesWurstes,2018-06-27T11:54:03Z,"Just a nit from older pull requests: Now that it has a custom CPUID function\nhttps://github.com/bitcoin/bitcoin/blob/d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073/src/crypto/sha256.cpp#L534-L538\nincluding `<cpuid.h>` is not necessary now:\n\nhttps://github.com/bitcoin/bitcoin/blob/d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073/src/crypto/sha256.cpp#L12-L16\n\nThank you for your awesome contributions!",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-400645360,400645360,
gmaxwell,2018-07-07T08:06:22Z,ACK,https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-403197593,403197593,
laanwj,2018-07-09T19:10:21Z,"utACK 66b2cf1ccfad545a8ec3f2a854e23f647322bf30\ntested that build passes on FreeBSD+OpenBSD\n",https://github.com/bitcoin/bitcoin/pull/13386#issuecomment-403588506,403588506,
kallewoof,2018-06-04T00:19:39Z,"What about\n```C++\n        ret = ""sse4"";\n#if defined(ENABLE_SSE41) && !defined(BUILD_BITCOIN_INTERNAL)\n        TransformD64_4way = sha256d64_sse41::Transform_4way;\n        ret += "",sse41"";\n#endif\n    }\n```\n?",https://github.com/bitcoin/bitcoin/pull/13386#discussion_r192607671,192607671,src/crypto/sha256.cpp
sipa,2018-06-04T00:35:21Z,Done.,https://github.com/bitcoin/bitcoin/pull/13386#discussion_r192608258,192608258,src/crypto/sha256.cpp
theuni,2018-06-05T20:33:45Z,I think these could be ```_mm_load_si128``` if s[] was alignas(16).,https://github.com/bitcoin/bitcoin/pull/13386#discussion_r193212576,193212576,src/crypto/sha256_shani.cpp
theuni,2018-06-05T20:49:02Z,"These are starting to get out of hand. I think we should take @TheBlueMatt's suggestion and treat LIBBITCOIN_CRYPTO as a collection of these helpers. That way we can just add ```$(LIBBITCOIN_CRYPTO)``` everywhere, and that will pull in the cpu-specific libs as well. Something like:\n```\n...\nLIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\nLIBBITCOIN_CRYPTO_AVX2=crypto/libbitcoin_crypto_avx2.a\",https://github.com/bitcoin/bitcoin/pull/13386#discussion_r193217129,193217129,src/Makefile.am
sipa,2018-06-06T00:43:35Z,"@theuni Actually, feel like PRing that as a separate PR, before this one goes in? Then @TheBlueMatt and I can both rebase ours on top of yours and not conflict with each other.",https://github.com/bitcoin/bitcoin/pull/13386#discussion_r193263529,193263529,src/Makefile.am
DesWurstes,2018-06-07T04:12:06Z,"I believe including immintrin.h is enough for both platforms. x86intrin includes immintrin.h, and immintrin.h includes everything that is needed: https://github.com/gcc-mirror/gcc/blob/master/gcc/config/i386/immintrin.h\n\n**EDIT:** Tested on Linux GCC and Clang, including immintrin.h is enough for all platforms.",https://github.com/bitcoin/bitcoin/pull/13386#discussion_r193621532,193621532,src/crypto/sha256_shani.cpp
sipa,2018-06-11T16:59:34Z,"Thanks, fixed.",https://github.com/bitcoin/bitcoin/pull/13386#discussion_r194474911,194474911,src/crypto/sha256_shani.cpp
theuni,2018-06-13T20:48:03Z,Linter is yelling about include style here.,https://github.com/bitcoin/bitcoin/pull/13386#discussion_r195230580,195230580,src/crypto/sha256_shani.cpp
