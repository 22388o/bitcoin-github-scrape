[
  {
    "sha": "2c2e90d1d4768a7842b2fa840496cea567a8e995",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzJlOTBkMWQ0NzY4YTc4NDJiMmZhODQwNDk2Y2VhNTY3YThlOTk1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-16T10:20:49Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-16T19:22:05Z"
      },
      "message": "Fix incorrect Doxygen tag (@ince \u2192 @since). Make Doxygen parameter names match actual parameter names.",
      "tree": {
        "sha": "90b707a071314561f02fad31b7c81cb1b02afd64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90b707a071314561f02fad31b7c81cb1b02afd64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c2e90d1d4768a7842b2fa840496cea567a8e995",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c2e90d1d4768a7842b2fa840496cea567a8e995",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c2e90d1d4768a7842b2fa840496cea567a8e995",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c2e90d1d4768a7842b2fa840496cea567a8e995/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5cfdda2503c995cdd563b1a2a29162ac298d173d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cfdda2503c995cdd563b1a2a29162ac298d173d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5cfdda2503c995cdd563b1a2a29162ac298d173d"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "dbdc5013f0e0ba93a01dadd10dfbad820ecc5b69",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2e90d1d4768a7842b2fa840496cea567a8e995/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2e90d1d4768a7842b2fa840496cea567a8e995/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=2c2e90d1d4768a7842b2fa840496cea567a8e995",
        "patch": "@@ -117,7 +117,7 @@ class TxConfirmStats\n      * Create new TxConfirmStats. This is called by BlockPolicyEstimator's\n      * constructor with default values.\n      * @param defaultBuckets contains the upper limits for the bucket boundaries\n-     * @param maxConfirms max number of confirms to track\n+     * @param maxPeriods max number of periods to track\n      * @param decay how much to decay the historical moving average per block\n      */\n     TxConfirmStats(const std::vector<double>& defaultBuckets, const std::map<double, unsigned int>& defaultBucketMap,"
      },
      {
        "sha": "7890bb627de36ccb4f8b48fc657c319f194c7273",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2e90d1d4768a7842b2fa840496cea567a8e995/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2e90d1d4768a7842b2fa840496cea567a8e995/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=2c2e90d1d4768a7842b2fa840496cea567a8e995",
        "patch": "@@ -163,7 +163,7 @@ extern const char *PONG;\n /**\n  * The notfound message is a reply to a getdata message which requested an\n  * object the receiving node does not have available for relay.\n- * @ince protocol version 70001.\n+ * @since protocol version 70001.\n  * @see https://bitcoin.org/en/developer-reference#notfound\n  */\n extern const char *NOTFOUND;"
      },
      {
        "sha": "e1bdfb1988fc0096fefb435387df596eeb5540e4",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2e90d1d4768a7842b2fa840496cea567a8e995/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2e90d1d4768a7842b2fa840496cea567a8e995/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=2c2e90d1d4768a7842b2fa840496cea567a8e995",
        "patch": "@@ -215,7 +215,7 @@ class ArgsManager\n      * Return string argument or default value\n      *\n      * @param strArg Argument to get (e.g. \"-foo\")\n-     * @param default (e.g. \"1\")\n+     * @param strDefault (e.g. \"1\")\n      * @return command-line argument or default value\n      */\n     std::string GetArg(const std::string& strArg, const std::string& strDefault);\n@@ -224,7 +224,7 @@ class ArgsManager\n      * Return integer argument or default value\n      *\n      * @param strArg Argument to get (e.g. \"-foo\")\n-     * @param default (e.g. 1)\n+     * @param nDefault (e.g. 1)\n      * @return command-line argument (0 if invalid number) or default value\n      */\n     int64_t GetArg(const std::string& strArg, int64_t nDefault);\n@@ -233,7 +233,7 @@ class ArgsManager\n      * Return boolean argument or default value\n      *\n      * @param strArg Argument to get (e.g. \"-foo\")\n-     * @param default (true or false)\n+     * @param fDefault (true or false)\n      * @return command-line argument or default value\n      */\n     bool GetBoolArg(const std::string& strArg, bool fDefault);"
      },
      {
        "sha": "31e2f6a69994dfabd3e06f8dc59b31bbb44f8b91",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2e90d1d4768a7842b2fa840496cea567a8e995/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2e90d1d4768a7842b2fa840496cea567a8e995/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=2c2e90d1d4768a7842b2fa840496cea567a8e995",
        "patch": "@@ -16,7 +16,7 @@ void RegisterWalletRPCCommands(CRPCTable &t);\n  * @param[in] request JSONRPCRequest that wishes to access a wallet\n  * @return NULL if no wallet should be used, or a pointer to the CWallet\n  */\n-CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest&);\n+CWallet *GetWalletForJSONRPCRequest(const JSONRPCRequest& request);\n \n std::string HelpRequiringPassphrase(CWallet *);\n void EnsureWalletIsUnlocked(CWallet *);"
      }
    ]
  }
]