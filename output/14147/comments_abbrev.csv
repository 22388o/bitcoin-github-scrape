gmaxwell,2018-09-04T17:01:38Z,"utACK.   Aside, this was much more easily reviewed with ?w=1",https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-418443550,418443550,
MarcoFalke,2018-09-04T18:24:12Z,"Tagged with ""Refactor"", as this is supposed to not change behavior?",https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-418469773,418469773,
pstratem,2018-09-04T19:31:31Z,"@MarcoFalke The only change to the logic is grouping the InactivityChecks in a single function outside of the reference counting guards, that logic sets fDisconnect flags, which wont do anything until the next loop in the thread anyways.",https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-418490058,418490058,
gmaxwell,2018-09-06T19:08:51Z,re-utACK,https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-419208185,419208185,
MarcoFalke,2018-09-07T17:40:59Z,"I don't believe this is correct. `NotifyNumConnectionsChanged` will now only be called when nodes are disconnected, and no longer when nodes are connected. Also moving the notify into the `DisconnectNodes` member function is confusing. I'd prefer to move it into a `static void NotifyNodeCount(CConman* cm, unsigned& prev_node_count) {...}`. Note the `static`, to prevent having it to put into the he",https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-419513882,419513882,
pstratem,2018-09-10T20:17:11Z,"@MarcoFalke you're definitely right, that is a bug\n\ni'm not so sure about making these static functions though, they extensively use CConnman variables and are only called by CConnman methods",https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-420045849,420045849,
MarcoFalke,2018-09-11T19:10:33Z,"Yeah, feel free to ignore my comment about the static vs private",https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-420387987,420387987,
pstratem,2018-09-11T19:15:12Z,@MarcoFalke ok fixed that issue and the variable naming,https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-420389405,420389405,
MarcoFalke,2018-09-11T19:36:21Z,utACK 8491dfbadceb8052f852ebf0020a622194db525f,https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-420396925,420396925,
DrahtBot,2018-09-12T20:52:43Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14335 (net: refactor: cleanup ThreadSocketHandler by pstratem)\n* #14221 (wip: net: Implement poll by pstratem)\n* #14046 (net: Refactor message parsing (CNetMessage), adds flexibility by jonasschnelli)\n* #14032 (Add p2p layer encryption with ECDH/ChaCha20Poly1305 by jonasschnelli)",https://github.com/bitcoin/bitcoin/pull/14147#issuecomment-420793745,420793745,
practicalswift,2018-09-06T15:00:05Z,"This assignment is redundant, right? :-)",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215659807,215659807,src/net.cpp
pstratem,2018-09-06T16:28:53Z,It is indeed.,https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215692998,215692998,src/net.cpp
promag,2018-09-06T20:12:27Z,"Commit ""Improve lock handling in DisconnectNodes.""\n\nIs it worth preventing notifying the same connection count?",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215761757,215761757,src/net.cpp
promag,2018-09-06T20:12:58Z,"Commit ""Improve lock handling in DisconnectNodes.""\n\nnit, space after `if`.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215761914,215761914,src/net.cpp
promag,2018-09-06T20:19:38Z,"Commit ""Move InactivityChecks logic to private method.""\n\nJust noting that with this change `InactivityCheck` is now called with `cs_vNodes` locked.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215763725,215763725,src/net.cpp
promag,2018-09-06T20:22:55Z,"Commit ""Merge InactivityCheck into InactivityChecks.""\n\nCould remove this block?",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215764671,215764671,src/net.cpp
promag,2018-09-06T20:23:41Z,"Commit ""Merge InactivityCheck into InactivityChecks.""\n\nShould be after `LOCK(cs_vNodes)`?",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215764901,215764901,src/net.cpp
pstratem,2018-09-06T23:36:43Z,"Yes, it triggers a notification that updates the GUI and would happen every 50ms.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215808871,215808871,src/net.cpp
pstratem,2018-09-06T23:43:28Z,fixed,https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215809842,215809842,src/net.cpp
pstratem,2018-09-06T23:44:43Z,"The reasoning here is that the contents of InactivityCheck are virtually instant.\n\nIf this causes any issues in the future it can be trivially switched back to using reference counting.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215810002,215810002,src/net.cpp
pstratem,2018-09-06T23:55:23Z,Not sure what you mean here,https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215811565,215811565,src/net.cpp
pstratem,2018-09-06T23:55:26Z,Not sure what you mean here,https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215811574,215811574,src/net.cpp
promag,2018-09-07T00:05:37Z,Move the call `GetTimeMicros` after the lock?,https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215813009,215813009,src/net.cpp
promag,2018-09-07T00:10:16Z,"I mean like this:\n```cpp\nvoid CConnman::InactivityChecks() {\n    LOCK(cs_vNodes);\n    int64_t nMicroTime = GetTimeMicros();\n    int64_t nTime = nMicroTime / 1000000;\n    for (CNode* pnode : vNodes) {\n        if (nTime - pnode->nTimeConnected > 60)\n        ...\n```",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215813582,215813582,src/net.cpp
pstratem,2018-09-07T00:30:26Z,Ah I see,https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215816329,215816329,src/net.cpp
pstratem,2018-09-07T00:57:20Z,"yeah good point, the lock could take a while",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r215819477,215819477,src/net.cpp
MarcoFalke,2018-09-07T17:46:10Z,"in commit e92a917117 Reduce calls to GetMicroTime in InactivityCheck.\n\nnewly introduced variables should always be `snake_case`, e.g. `time_micro = ...` .",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r216036912,216036912,src/net.cpp
ryanofsky,2018-09-10T18:21:28Z,"In commit ""Move DisconnectNodes logic to private method."" (7c203fb5ab2558cd6e306d85a62c8bbe159a7c02)\n\nShould delete this comment I think. It just takes up space and conveys no information.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r216424621,216424621,src/net.cpp
ryanofsky,2018-09-10T18:23:58Z,"In commit ""Move DisconnectNodes logic to private method."" (7c203fb5ab2558cd6e306d85a62c8bbe159a7c02)\n\nOpening brace should go on next line.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r216425454,216425454,src/net.cpp
ryanofsky,2018-09-10T18:34:34Z,"In commit ""Improve lock handling in DisconnectNodes."" (57bd308a09556960e8fab1cd44f61ef519058a59)\n\nI would combine this commit with the previous commit ""Remove nPrevNodeCount parameter"" because changes in that commit like moving the `vNodesSize` declaration further away from its assignment, and updating the `nPrevNodeCount` value before throwing it away really don't make sense standalone.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r216428783,216428783,src/net.cpp
ryanofsky,2018-09-14T19:24:20Z,"In commit ""Move DisconnectNodes logic to private method."" (2d5c345507208d215c0621180305a9f1d363012a)\n\nIt seems like moving `NotifyNumConnectionsChanged` call from right after the disconnect to later in the loop below after the select call changes behavior. So instead of ui being updated immediately after a disconnection, it will only be updated after a disconnect followed by a receive on anoth",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r217818099,217818099,src/net.cpp
ryanofsky,2018-09-14T19:50:03Z,"In commit ""Move NotifyNumConnectionsChanged logic to private method."" (e817ce3090fa71c61170216090685ee142d0f1d5)\n\nIt would be nice if you combined this commit with commit ""Move DisconnectNodes logic to private method"" (2d5c345507208d215c0621180305a9f1d363012a), or moved this commit before it, so this block of code only moves once instead of twice inside the same PR.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r217824156,217824156,src/net.cpp
ryanofsky,2018-09-14T19:55:52Z,"In commit ""Run InactivityChecks before other socket handling logic."" (8491dfbadceb8052f852ebf0020a622194db525f)\n\nIt seems like this commit should have no effect, but if it has no effect, then it's not clear why it would be desirable? I think it would be helpful if the commit messages in this PR said explicitly whether the commit is or isn't intending to change behavior.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r217825678,217825678,src/net.cpp
pstratem,2018-09-14T21:13:15Z,"Select timeout is 50ms, doesn't seem to particularly matter.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r217844021,217844021,src/net.cpp
pstratem,2018-09-14T21:14:09Z,"Can certainly change it back though, it really shouldn't matter.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r217844216,217844216,src/net.cpp
pstratem,2018-09-16T02:13:23Z,I've restructured the first commit so that the logic isn't moved the first time.,https://github.com/bitcoin/bitcoin/pull/14147#discussion_r217900075,217900075,src/net.cpp
pstratem,2018-09-16T02:14:24Z,"It doesn't really matter, but running it earlier might allow for marking nodes disconnected before the socket handling logic runs.",https://github.com/bitcoin/bitcoin/pull/14147#discussion_r217900087,217900087,src/net.cpp
