[
  {
    "sha": "3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDYwYTAzYTdjZmIyZDQ2YjVmMTA2MzNlOWY2YTlhMzZiOGNiNzZm",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-07-01T20:42:22Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-07-02T17:11:15Z"
      },
      "message": "bench: Move generated data to a dedicated translation unit",
      "tree": {
        "sha": "c9331766a3fa5b11dba590a0f968f36472e6a1c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9331766a3fa5b11dba590a0f968f36472e6a1c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3077f11dadffbc8f2575449fc0177c91a9c3e046",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3077f11dadffbc8f2575449fc0177c91a9c3e046",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3077f11dadffbc8f2575449fc0177c91a9c3e046"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 44,
      "deletions": 15
    },
    "files": [
      {
        "sha": "dbc977f6431b2451c00b21f19696ab12b7555ba0",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj?ref=3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
        "patch": "@@ -20,6 +20,7 @@\n     <ClCompile Include=\"..\\..\\src\\bench\\checkqueue.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\bench\\coin_selection.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\bench\\crypto_hash.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\data.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\bench\\examples.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\bench\\lockedpool.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\bench\\mempool_eviction.cpp\" />\n@@ -68,7 +69,7 @@\n     <ItemGroup>\n       <RawBenchFile Include=\"..\\..\\src\\bench\\data\\*.raw\" />\n     </ItemGroup>\n-    <HeaderFromHexdump RawFilePath=\"%(RawBenchFile.FullPath)\" HeaderFilePath=\"%(RawBenchFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawBenchFile.Filename)[] = {\" SourceFooter=\"};\" />\n+    <HeaderFromHexdump RawFilePath=\"%(RawBenchFile.FullPath)\" HeaderFilePath=\"%(RawBenchFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawBenchFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n   </Target>\n   <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />"
      },
      {
        "sha": "1b01b50b07c6f747c4d127dd0fbf08cb866a77d8",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
        "patch": "@@ -18,6 +18,8 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/block_assemble.cpp \\\n   bench/checkblock.cpp \\\n   bench/checkqueue.cpp \\\n+  bench/data.h \\\n+  bench/data.cpp \\\n   bench/duplicate_inputs.cpp \\\n   bench/examples.cpp \\\n   bench/rollingbloom.cpp \\\n@@ -76,7 +78,7 @@ CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)\n \n CLEANFILES += $(CLEAN_BITCOIN_BENCH)\n \n-bench/checkblock.cpp: bench/data/block413567.raw.h\n+bench/data.cpp: bench/data/block413567.raw.h\n \n bitcoin_bench: $(BENCH_BINARY)\n \n@@ -89,7 +91,7 @@ bitcoin_bench_clean : FORCE\n %.raw.h: %.raw\n \t@$(MKDIR_P) $(@D)\n \t@{ \\\n-\t echo \"static unsigned const char $(*F)[] = {\" && \\\n+\t echo \"static unsigned const char $(*F)_raw[] = {\" && \\\n \t $(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' && \\\n \t echo \"};\"; \\\n \t} > \"$@.new\" && mv -f \"$@.new\" \"$@\""
      },
      {
        "sha": "4b13381e161bfde10d244cf5ce8837fcee144457",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 12,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
        "patch": "@@ -3,41 +3,34 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <bench/bench.h>\n+#include <bench/data.h>\n \n #include <chainparams.h>\n #include <validation.h>\n #include <streams.h>\n #include <consensus/validation.h>\n \n-namespace block_bench {\n-#include <bench/data/block413567.raw.h>\n-} // namespace block_bench\n-\n // These are the two major time-sinks which happen after we have fully received\n // a block off the wire, but before we can relay the block on to peers using\n // compact block relay.\n \n static void DeserializeBlockTest(benchmark::State& state)\n {\n-    CDataStream stream((const char*)block_bench::block413567,\n-            (const char*)block_bench::block413567 + sizeof(block_bench::block413567),\n-            SER_NETWORK, PROTOCOL_VERSION);\n+    CDataStream stream(benchmark::data::block413567, SER_NETWORK, PROTOCOL_VERSION);\n     char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction\n \n     while (state.KeepRunning()) {\n         CBlock block;\n         stream >> block;\n-        bool rewound = stream.Rewind(sizeof(block_bench::block413567));\n+        bool rewound = stream.Rewind(benchmark::data::block413567.size());\n         assert(rewound);\n     }\n }\n \n static void DeserializeAndCheckBlockTest(benchmark::State& state)\n {\n-    CDataStream stream((const char*)block_bench::block413567,\n-            (const char*)block_bench::block413567 + sizeof(block_bench::block413567),\n-            SER_NETWORK, PROTOCOL_VERSION);\n+    CDataStream stream(benchmark::data::block413567, SER_NETWORK, PROTOCOL_VERSION);\n     char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction\n \n@@ -46,7 +39,7 @@ static void DeserializeAndCheckBlockTest(benchmark::State& state)\n     while (state.KeepRunning()) {\n         CBlock block; // Note that CBlock caches its checked state, so we need to recreate it here\n         stream >> block;\n-        bool rewound = stream.Rewind(sizeof(block_bench::block413567));\n+        bool rewound = stream.Rewind(benchmark::data::block413567.size());\n         assert(rewound);\n \n         CValidationState validationState;"
      },
      {
        "sha": "0ae4c7cad4dbf34fcafaae757b7c88d654e2ba2c",
        "filename": "src/bench/data.cpp",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/src/bench/data.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/src/bench/data.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/data.cpp?ref=3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
        "patch": "@@ -0,0 +1,14 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/data.h>\n+\n+namespace benchmark {\n+namespace data {\n+\n+#include <bench/data/block413567.raw.h>\n+const std::vector<uint8_t> block413567{block413567_raw, block413567_raw + sizeof(block413567_raw) / sizeof(block413567_raw[0])};\n+\n+} // namespace data\n+} // namespace benchmark"
      },
      {
        "sha": "5f13d766ea8c74f10eae10abf31d8087dee0095f",
        "filename": "src/bench/data.h",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/src/bench/data.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f/src/bench/data.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/data.h?ref=3d60a03a7cfb2d46b5f10633e9f6a9a36b8cb76f",
        "patch": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BENCH_DATA_H\n+#define BITCOIN_BENCH_DATA_H\n+\n+#include <cstdint>\n+#include <vector>\n+\n+namespace benchmark {\n+namespace data {\n+\n+extern const std::vector<uint8_t> block413567;\n+\n+} // namespace data\n+} // namespace benchmark\n+\n+#endif // BITCOIN_BENCH_DATA_H"
      }
    ]
  }
]