[
  {
    "sha": "e6dcfeec05d6527ab148550836937ff435e6449c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmRjZmVlYzA1ZDY1MjdhYjE0ODU1MDgzNjkzN2ZmNDM1ZTY0NDlj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-27T10:14:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-27T10:21:35Z"
      },
      "message": "refactor: Move GetDifficulty out of `rpc/server.h`\n\nIt has no business in `rpcserver.h`. Define it in the interface header\nof the implementation unit `rpcblockchain` where it is defined.\n\nAlso modernize the signature to:\n\n    double GetDifficulty(const CBlockIndex* blockindex = nullptr);\n\n(remove `extern`, replace `NULL` with `nullptr`)",
      "tree": {
        "sha": "08be69b20b3acb139378636597e938c5864696f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08be69b20b3acb139378636597e938c5864696f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6dcfeec05d6527ab148550836937ff435e6449c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6dcfeec05d6527ab148550836937ff435e6449c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6dcfeec05d6527ab148550836937ff435e6449c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6dcfeec05d6527ab148550836937ff435e6449c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5114f8113627791b871c88998bd5a3d36961c241",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5114f8113627791b871c88998bd5a3d36961c241",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5114f8113627791b871c88998bd5a3d36961c241"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 25,
      "deletions": 8
    },
    "files": [
      {
        "sha": "30d027315a09ffc47f6b4bc31471e9e9ae81d64d",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6dcfeec05d6527ab148550836937ff435e6449c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6dcfeec05d6527ab148550836937ff435e6449c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e6dcfeec05d6527ab148550836937ff435e6449c",
        "patch": "@@ -122,6 +122,7 @@ BITCOIN_CORE_H = \\\n   protocol.h \\\n   random.h \\\n   reverselock.h \\\n+  rpc/blockchain.h \\\n   rpc/client.h \\\n   rpc/protocol.h \\\n   rpc/server.h \\"
      },
      {
        "sha": "b0da683d91c2edb8ec49ff8704fb8757e2e85438",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=e6dcfeec05d6527ab148550836937ff435e6449c",
        "patch": "@@ -3,6 +3,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"rpc/blockchain.h\"\n+\n #include \"amount.h\"\n #include \"chain.h\"\n #include \"chainparams.h\"\n@@ -42,13 +44,6 @@ static CUpdatedBlock latestblock;\n extern void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n \n-/**\n- * Get the difficulty of the net wrt to the given block index, or the chain tip if\n- * not provided.\n- *\n- * @return A floating point number that is a multiple of the main net minimum\n- * difficulty (4295032833 hashes).\n- */\n double GetDifficulty(const CBlockIndex* blockindex)\n {\n     if (blockindex == NULL)"
      },
      {
        "sha": "69cba8f0199363dc51ccb95a1cef8c45b933c712",
        "filename": "src/rpc/blockchain.h",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=e6dcfeec05d6527ab148550836937ff435e6449c",
        "patch": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RPC_BLOCKCHAIN_H\n+#define BITCOIN_RPC_BLOCKCHAIN_H\n+\n+class CBlockIndex;\n+\n+/**\n+ * Get the difficulty of the net wrt to the given block index, or the chain tip if\n+ * not provided.\n+ *\n+ * @return A floating point number that is a multiple of the main net minimum\n+ * difficulty (4295032833 hashes).\n+ */\n+double GetDifficulty(const CBlockIndex* blockindex = nullptr);\n+\n+#endif\n+"
      },
      {
        "sha": "b823c159d34ae461b41b3a3fe6769c7871c02ea6",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=e6dcfeec05d6527ab148550836937ff435e6449c",
        "patch": "@@ -16,6 +16,7 @@\n #include \"miner.h\"\n #include \"net.h\"\n #include \"pow.h\"\n+#include \"rpc/blockchain.h\"\n #include \"rpc/server.h\"\n #include \"txmempool.h\"\n #include \"util.h\""
      },
      {
        "sha": "24c5eeffe91ea230d3c479922fdde4485d6596a9",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=e6dcfeec05d6527ab148550836937ff435e6449c",
        "patch": "@@ -9,6 +9,7 @@\n #include \"validation.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"rpc/blockchain.h\"\n #include \"rpc/server.h\"\n #include \"timedata.h\"\n #include \"util.h\""
      },
      {
        "sha": "c3692d91b777abbabc17d2be59732dc79da05c02",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6dcfeec05d6527ab148550836937ff435e6449c/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=e6dcfeec05d6527ab148550836937ff435e6449c",
        "patch": "@@ -191,7 +191,6 @@ extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKe\n \n extern CAmount AmountFromValue(const UniValue& value);\n extern UniValue ValueFromAmount(const CAmount& amount);\n-extern double GetDifficulty(const CBlockIndex* blockindex = NULL);\n extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n "
      }
    ]
  },
  {
    "sha": "8d8f28dd52fc9f78f57842f94842c8433f1811be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDhmMjhkZDUyZmM5Zjc4ZjU3ODQyZjk0ODQyYzg0MzNmMTgxMWJl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-27T14:04:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-27T14:23:22Z"
      },
      "message": "refactor: Move RPCNotifyBlockChange out of `rpc/server.h`",
      "tree": {
        "sha": "ec17b8d97cbff8c525453f2079ba1223f0500ddf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec17b8d97cbff8c525453f2079ba1223f0500ddf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d8f28dd52fc9f78f57842f94842c8433f1811be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d8f28dd52fc9f78f57842f94842c8433f1811be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8f28dd52fc9f78f57842f94842c8433f1811be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d8f28dd52fc9f78f57842f94842c8433f1811be/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6dcfeec05d6527ab148550836937ff435e6449c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6dcfeec05d6527ab148550836937ff435e6449c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6dcfeec05d6527ab148550836937ff435e6449c"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c42c206a518ce91f501efd0853d9c0428099dbe9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d8f28dd52fc9f78f57842f94842c8433f1811be/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d8f28dd52fc9f78f57842f94842c8433f1811be/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8d8f28dd52fc9f78f57842f94842c8433f1811be",
        "patch": "@@ -27,6 +27,7 @@\n #include \"policy/policy.h\"\n #include \"rpc/server.h\"\n #include \"rpc/register.h\"\n+#include \"rpc/blockchain.h\"\n #include \"script/standard.h\"\n #include \"script/sigcache.h\"\n #include \"scheduler.h\""
      },
      {
        "sha": "8821f297f66e859f38ca5e75ac93d5ad5f38785e",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d8f28dd52fc9f78f57842f94842c8433f1811be/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d8f28dd52fc9f78f57842f94842c8433f1811be/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=8d8f28dd52fc9f78f57842f94842c8433f1811be",
        "patch": "@@ -16,5 +16,8 @@ class CBlockIndex;\n  */\n double GetDifficulty(const CBlockIndex* blockindex = nullptr);\n \n+/** Callback for when block tip changed. */\n+void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n+\n #endif\n "
      },
      {
        "sha": "34a9d3c24cd140c1c4fa93cc398a0fe94b8f4564",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d8f28dd52fc9f78f57842f94842c8433f1811be/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d8f28dd52fc9f78f57842f94842c8433f1811be/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=8d8f28dd52fc9f78f57842f94842c8433f1811be",
        "patch": "@@ -198,7 +198,6 @@ bool StartRPC();\n void InterruptRPC();\n void StopRPC();\n std::string JSONRPCExecBatch(const UniValue& vReq);\n-void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n \n // Retrieves any serialization flags requested in command line argument\n int RPCSerializationFlags();"
      }
    ]
  },
  {
    "sha": "f885b670290d39e697995fd2d35dc36edc104011",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODg1YjY3MDI5MGQzOWU2OTc5OTVmZDJkMzVkYzM2ZWRjMTA0MDEx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-27T14:12:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-29T07:56:47Z"
      },
      "message": "refactor: Make rest.cpp dependency on `*toJSON` in `blockchain.cpp` explicit",
      "tree": {
        "sha": "d9e10fce74ee4be50176b77be86b00f9df092484",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9e10fce74ee4be50176b77be86b00f9df092484"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f885b670290d39e697995fd2d35dc36edc104011",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f885b670290d39e697995fd2d35dc36edc104011",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f885b670290d39e697995fd2d35dc36edc104011",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f885b670290d39e697995fd2d35dc36edc104011/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d8f28dd52fc9f78f57842f94842c8433f1811be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d8f28dd52fc9f78f57842f94842c8433f1811be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8f28dd52fc9f78f57842f94842c8433f1811be"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 23,
      "deletions": 8
    },
    "files": [
      {
        "sha": "9dcaf269d645f9c08c9aabefec80a54d43a4e4e8",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f885b670290d39e697995fd2d35dc36edc104011/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f885b670290d39e697995fd2d35dc36edc104011/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=f885b670290d39e697995fd2d35dc36edc104011",
        "patch": "@@ -9,6 +9,7 @@\n #include \"primitives/transaction.h\"\n #include \"validation.h\"\n #include \"httpserver.h\"\n+#include \"rpc/blockchain.h\"\n #include \"rpc/server.h\"\n #include \"streams.h\"\n #include \"sync.h\"\n@@ -55,12 +56,9 @@ struct CCoin {\n     }\n };\n \n-extern void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n-extern UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false);\n-extern UniValue mempoolInfoToJSON();\n-extern UniValue mempoolToJSON(bool fVerbose = false);\n-extern void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n-extern UniValue blockheaderToJSON(const CBlockIndex* blockindex);\n+/* Defined in rawtransaction.cpp */\n+void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n+void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n \n static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, std::string message)\n {"
      },
      {
        "sha": "f158065e76dda8c5f41689ba4b6f71b75efdace3",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f885b670290d39e697995fd2d35dc36edc104011/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f885b670290d39e697995fd2d35dc36edc104011/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=f885b670290d39e697995fd2d35dc36edc104011",
        "patch": "@@ -101,7 +101,7 @@ UniValue blockheaderToJSON(const CBlockIndex* blockindex)\n     return result;\n }\n \n-UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false)\n+UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails)\n {\n     UniValue result(UniValue::VOBJ);\n     result.push_back(Pair(\"hash\", blockindex->GetBlockHash().GetHex()));\n@@ -378,7 +378,7 @@ void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n     info.push_back(Pair(\"depends\", depends));\n }\n \n-UniValue mempoolToJSON(bool fVerbose = false)\n+UniValue mempoolToJSON(bool fVerbose)\n {\n     if (fVerbose)\n     {"
      },
      {
        "sha": "c021441b0a731076f2d8014e1c4c82f9c103fa74",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f885b670290d39e697995fd2d35dc36edc104011/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f885b670290d39e697995fd2d35dc36edc104011/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=f885b670290d39e697995fd2d35dc36edc104011",
        "patch": "@@ -5,7 +5,12 @@\n #ifndef BITCOIN_RPC_BLOCKCHAIN_H\n #define BITCOIN_RPC_BLOCKCHAIN_H\n \n+class CBlock;\n class CBlockIndex;\n+class CScript;\n+class CTransaction;\n+class uint256;\n+class UniValue;\n \n /**\n  * Get the difficulty of the net wrt to the given block index, or the chain tip if\n@@ -19,5 +24,17 @@ double GetDifficulty(const CBlockIndex* blockindex = nullptr);\n /** Callback for when block tip changed. */\n void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n \n+/** Block description to JSON */\n+UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false);\n+\n+/** Mempool information to JSON */\n+UniValue mempoolInfoToJSON();\n+\n+/** Mempool to JSON */\n+UniValue mempoolToJSON(bool fVerbose = false);\n+\n+/** Block header to JSON */\n+UniValue blockheaderToJSON(const CBlockIndex* blockindex);\n+\n #endif\n "
      }
    ]
  }
]