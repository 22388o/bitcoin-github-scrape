[
  {
    "sha": "74d0f902628472cd0cee66121ef0311eec201c40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGQwZjkwMjYyODQ3MmNkMGNlZTY2MTIxZWYwMzExZWVjMjAxYzQw",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T00:41:40Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-12-01T23:50:39Z"
      },
      "message": "Add method to remove a tx from CCoinsViewCache if it is unchanged",
      "tree": {
        "sha": "7aa06dc2b0bc863b3b60b340d3a8919283b13650",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7aa06dc2b0bc863b3b60b340d3a8919283b13650"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74d0f902628472cd0cee66121ef0311eec201c40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74d0f902628472cd0cee66121ef0311eec201c40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74d0f902628472cd0cee66121ef0311eec201c40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74d0f902628472cd0cee66121ef0311eec201c40/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4077ad20d03f0ef61d48ef34b3107661b0ff8ffe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4077ad20d03f0ef61d48ef34b3107661b0ff8ffe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4077ad20d03f0ef61d48ef34b3107661b0ff8ffe"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "060d6b7c5d8474701ca9dc7b2d42be0132dbbfc7",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74d0f902628472cd0cee66121ef0311eec201c40/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74d0f902628472cd0cee66121ef0311eec201c40/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=74d0f902628472cd0cee66121ef0311eec201c40",
        "patch": "@@ -206,6 +206,15 @@ bool CCoinsViewCache::Flush() {\n     return fOk;\n }\n \n+void CCoinsViewCache::Uncache(const uint256& hash)\n+{\n+    CCoinsMap::iterator it = cacheCoins.find(hash);\n+    if (it != cacheCoins.end() && it->second.flags == 0) {\n+        cachedCoinsUsage -= it->second.coins.DynamicMemoryUsage();\n+        cacheCoins.erase(it);\n+    }\n+}\n+\n unsigned int CCoinsViewCache::GetCacheSize() const {\n     return cacheCoins.size();\n }"
      },
      {
        "sha": "5beea711b20ea5c429a33ac364d859d4890ada07",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74d0f902628472cd0cee66121ef0311eec201c40/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74d0f902628472cd0cee66121ef0311eec201c40/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=74d0f902628472cd0cee66121ef0311eec201c40",
        "patch": "@@ -437,6 +437,12 @@ class CCoinsViewCache : public CCoinsViewBacked\n      */\n     bool Flush();\n \n+    /**\n+     * Removes the transaction with the given hash from the cache, if it is\n+     * not modified.\n+     */\n+    void Uncache(const uint256 &txid);\n+\n     //! Calculate the size of the cache (in number of transactions)\n     unsigned int GetCacheSize() const;\n "
      }
    ]
  },
  {
    "sha": "b2e74bd292460ca00fefc6356594318307365397",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmU3NGJkMjkyNDYwY2EwMGZlZmM2MzU2NTk0MzE4MzA3MzY1Mzk3",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T00:44:00Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-12-01T23:50:39Z"
      },
      "message": "Get the set of now-uncacheable-txn from CTxMemPool::TrimToSize",
      "tree": {
        "sha": "e7a0f8fbf7f9e9b33a72f6f2bd5e74cfe8831d41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7a0f8fbf7f9e9b33a72f6f2bd5e74cfe8831d41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2e74bd292460ca00fefc6356594318307365397",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2e74bd292460ca00fefc6356594318307365397",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2e74bd292460ca00fefc6356594318307365397",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2e74bd292460ca00fefc6356594318307365397/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74d0f902628472cd0cee66121ef0311eec201c40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74d0f902628472cd0cee66121ef0311eec201c40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74d0f902628472cd0cee66121ef0311eec201c40"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 25,
      "deletions": 4
    },
    "files": [
      {
        "sha": "fea5da80293ca73bdb927236ccea0b3856ce7e15",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2e74bd292460ca00fefc6356594318307365397/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2e74bd292460ca00fefc6356594318307365397/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=b2e74bd292460ca00fefc6356594318307365397",
        "patch": "@@ -944,7 +944,7 @@ void CTxMemPool::trackPackageRemoved(const CFeeRate& rate) {\n     }\n }\n \n-void CTxMemPool::TrimToSize(size_t sizelimit) {\n+void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<uint256>* pvNoSpendsRemaining) {\n     LOCK(cs);\n \n     unsigned nTxnRemoved = 0;\n@@ -963,8 +963,26 @@ void CTxMemPool::TrimToSize(size_t sizelimit) {\n \n         setEntries stage;\n         CalculateDescendants(mapTx.project<0>(it), stage);\n-        RemoveStaged(stage);\n         nTxnRemoved += stage.size();\n+\n+        std::vector<CTransaction> txn;\n+        if (pvNoSpendsRemaining) {\n+            txn.reserve(stage.size());\n+            BOOST_FOREACH(txiter it, stage)\n+                txn.push_back(it->GetTx());\n+        }\n+        RemoveStaged(stage);\n+        if (pvNoSpendsRemaining) {\n+            BOOST_FOREACH(const CTransaction& tx, txn) {\n+                BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+                    if (exists(txin.prevout.hash))\n+                        continue;\n+                    std::map<COutPoint, CInPoint>::iterator it = mapNextTx.lower_bound(COutPoint(txin.prevout.hash, 0));\n+                    if (it == mapNextTx.end() || it->first.hash != txin.prevout.hash)\n+                        pvNoSpendsRemaining->push_back(txin.prevout.hash);\n+                }\n+            }\n+        }\n     }\n \n     if (maxFeeRateRemoved > CFeeRate(0))"
      },
      {
        "sha": "92031718686e53a6dd0c7dce806e8b7895c575e5",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2e74bd292460ca00fefc6356594318307365397/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2e74bd292460ca00fefc6356594318307365397/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=b2e74bd292460ca00fefc6356594318307365397",
        "patch": "@@ -483,8 +483,11 @@ class CTxMemPool\n       */\n     CFeeRate GetMinFee(size_t sizelimit) const;\n \n-    /** Remove transactions from the mempool until its dynamic size is <= sizelimit. */\n-    void TrimToSize(size_t sizelimit);\n+    /** Remove transactions from the mempool until its dynamic size is <= sizelimit.\n+      *  pvNoSpendsRemaining, if set, will be populated with the list of transactions\n+      *  which are not in mempool which no longer have any spends in this mempool.\n+      */\n+    void TrimToSize(size_t sizelimit, std::vector<uint256>* pvNoSpendsRemaining=NULL);\n \n     /** Expire all transaction (and their dependencies) in the mempool older than time. Return the number of removed transactions. */\n     int Expire(int64_t time);"
      }
    ]
  },
  {
    "sha": "677aa3d88c018a235d5b6d929e82f7b16e4f3e41",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NzdhYTNkODhjMDE4YTIzNWQ1YjZkOTI5ZTgyZjdiMTZlNGYzZTQx",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T18:52:55Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-12-01T23:52:07Z"
      },
      "message": "Discard txn cache entries that were loaded for removed mempool txn",
      "tree": {
        "sha": "6de4c293a6bb29a35fc99ed519f47517a9246302",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6de4c293a6bb29a35fc99ed519f47517a9246302"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/677aa3d88c018a235d5b6d929e82f7b16e4f3e41",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/677aa3d88c018a235d5b6d929e82f7b16e4f3e41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/677aa3d88c018a235d5b6d929e82f7b16e4f3e41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/677aa3d88c018a235d5b6d929e82f7b16e4f3e41/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b2e74bd292460ca00fefc6356594318307365397",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2e74bd292460ca00fefc6356594318307365397",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2e74bd292460ca00fefc6356594318307365397"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 15,
      "deletions": 8
    },
    "files": [
      {
        "sha": "73ca8bb05431d7284a3b985d4c259d8db694bc0d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/677aa3d88c018a235d5b6d929e82f7b16e4f3e41/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/677aa3d88c018a235d5b6d929e82f7b16e4f3e41/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=677aa3d88c018a235d5b6d929e82f7b16e4f3e41",
        "patch": "@@ -789,6 +789,17 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n+void LimitMempoolSize(CTxMemPool& pool, size_t limit, unsigned long age) {\n+    int expired = pool.Expire(GetTime() - age);\n+    if (expired != 0)\n+        LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n+\n+    std::vector<uint256> vNoSpendsRemaining;\n+    pool.TrimToSize(limit, &vNoSpendsRemaining);\n+    BOOST_FOREACH(const uint256& removed, vNoSpendsRemaining)\n+        pcoinsTip->Uncache(removed);\n+}\n+\n CAmount GetMinRelayFee(const CTransaction& tx, const CTxMemPool& pool, unsigned int nBytes, bool fAllowFree)\n {\n     uint256 hash = tx.GetHash();\n@@ -1210,12 +1221,8 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // trim mempool and check if tx was trimmed\n         if (!fOverrideMempoolLimit) {\n-            int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n-            if (expired != 0)\n-                LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n-\n-            pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n-            if (!pool.exists(tx.GetHash()))\n+            LimitMempoolSize(pool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n+            if (!pool.exists(hash))\n                 return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");\n         }\n     }\n@@ -2571,7 +2578,7 @@ static bool ActivateBestChainStep(CValidationState& state, const CChainParams& c\n \n     if (fBlocksDisconnected) {\n         mempool.removeForReorg(pcoinsTip, chainActive.Tip()->nHeight + 1, STANDARD_LOCKTIME_VERIFY_FLAGS);\n-        mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+        LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n     }\n     mempool.check(pcoinsTip);\n \n@@ -2686,7 +2693,7 @@ bool InvalidateBlock(CValidationState& state, const Consensus::Params& consensus\n         }\n     }\n \n-    mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    LimitMempoolSize(mempool, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n \n     // The resulting new best tip may not be in setBlockIndexCandidates anymore, so\n     // add it again."
      }
    ]
  },
  {
    "sha": "97bf377bd1f27ad841e1414e74361923a9f794f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2JmMzc3YmQxZjI3YWQ4NDFlMTQxNGU3NDM2MTkyM2E5Zjc5NGY1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T22:49:53Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-12-01T23:52:09Z"
      },
      "message": "Add CCoinsViewCache::HaveCoinsInCache to check if a tx is cached",
      "tree": {
        "sha": "636b92174fbced1d0bcc9238fdbbe00baf2b73c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/636b92174fbced1d0bcc9238fdbbe00baf2b73c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97bf377bd1f27ad841e1414e74361923a9f794f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97bf377bd1f27ad841e1414e74361923a9f794f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97bf377bd1f27ad841e1414e74361923a9f794f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97bf377bd1f27ad841e1414e74361923a9f794f5/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "677aa3d88c018a235d5b6d929e82f7b16e4f3e41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/677aa3d88c018a235d5b6d929e82f7b16e4f3e41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/677aa3d88c018a235d5b6d929e82f7b16e4f3e41"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "122bf4e48d547224f490aa9f81586fd8fb6b02aa",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97bf377bd1f27ad841e1414e74361923a9f794f5/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97bf377bd1f27ad841e1414e74361923a9f794f5/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=97bf377bd1f27ad841e1414e74361923a9f794f5",
        "patch": "@@ -144,6 +144,11 @@ bool CCoinsViewCache::HaveCoins(const uint256 &txid) const {\n     return (it != cacheCoins.end() && !it->second.coins.vout.empty());\n }\n \n+bool CCoinsViewCache::HaveCoinsInCache(const uint256 &txid) const {\n+    CCoinsMap::const_iterator it = cacheCoins.find(txid);\n+    return it != cacheCoins.end();\n+}\n+\n uint256 CCoinsViewCache::GetBestBlock() const {\n     if (hashBlock.IsNull())\n         hashBlock = base->GetBestBlock();"
      },
      {
        "sha": "60c1ba8a783e906308b6a92fcb031d96cdc74a0e",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97bf377bd1f27ad841e1414e74361923a9f794f5/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97bf377bd1f27ad841e1414e74361923a9f794f5/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=97bf377bd1f27ad841e1414e74361923a9f794f5",
        "patch": "@@ -405,6 +405,13 @@ class CCoinsViewCache : public CCoinsViewBacked\n     void SetBestBlock(const uint256 &hashBlock);\n     bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock);\n \n+    /**\n+     * Check if we have the given tx already loaded in this cache.\n+     * The semantics are the same as HaveCoins(), but no calls to\n+     * the backing CCoinsView are made.\n+     */\n+    bool HaveCoinsInCache(const uint256 &txid) const;\n+\n     /**\n      * Return a pointer to CCoins in the cache, or NULL if not found. This is\n      * more efficient than GetCoins. Modifications to other cache entries are"
      }
    ]
  },
  {
    "sha": "bde953e2818ecf44727da128c2aa2ec7667cf7e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZGU5NTNlMjgxOGVjZjQ0NzI3ZGExMjhjMmFhMmVjNzY2N2NmN2U3",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-10-22T22:50:33Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-12-01T23:52:09Z"
      },
      "message": "Uncache input txn in utxo cache if a tx is not accepted to mempool",
      "tree": {
        "sha": "60eb91855b35d3c57458f345c343963dd71d4a4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60eb91855b35d3c57458f345c343963dd71d4a4e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bde953e2818ecf44727da128c2aa2ec7667cf7e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bde953e2818ecf44727da128c2aa2ec7667cf7e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bde953e2818ecf44727da128c2aa2ec7667cf7e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bde953e2818ecf44727da128c2aa2ec7667cf7e7/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97bf377bd1f27ad841e1414e74361923a9f794f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97bf377bd1f27ad841e1414e74361923a9f794f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97bf377bd1f27ad841e1414e74361923a9f794f5"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 22,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d1ed5c5edf405aec611c5668c93671ba3d228a4e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 3,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bde953e2818ecf44727da128c2aa2ec7667cf7e7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bde953e2818ecf44727da128c2aa2ec7667cf7e7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=bde953e2818ecf44727da128c2aa2ec7667cf7e7",
        "patch": "@@ -835,8 +835,9 @@ std::string FormatStateMessage(const CValidationState &state)\n         state.GetRejectCode());\n }\n \n-bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fOverrideMempoolLimit, bool fRejectAbsurdFee)\n+bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n+                              bool* pfMissingInputs, bool fOverrideMempoolLimit, bool fRejectAbsurdFee,\n+                              std::vector<uint256>& vHashTxnToUncache)\n {\n     AssertLockHeld(cs_main);\n     if (pfMissingInputs)\n@@ -917,13 +918,19 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         view.SetBackend(viewMemPool);\n \n         // do we already have it?\n-        if (view.HaveCoins(hash))\n+        bool fHadTxInCache = pcoinsTip->HaveCoinsInCache(hash);\n+        if (view.HaveCoins(hash)) {\n+            if (!fHadTxInCache)\n+                vHashTxnToUncache.push_back(hash);\n             return state.Invalid(false, REJECT_ALREADY_KNOWN, \"txn-already-known\");\n+        }\n \n         // do all inputs exist?\n         // Note that this does not check for the presence of actual outputs (see the next check for that),\n         // and only helps with filling in pfMissingInputs (to determine missing vs spent).\n         BOOST_FOREACH(const CTxIn txin, tx.vin) {\n+            if (!pcoinsTip->HaveCoinsInCache(txin.prevout.hash))\n+                vHashTxnToUncache.push_back(txin.prevout.hash);\n             if (!view.HaveCoins(txin.prevout.hash)) {\n                 if (pfMissingInputs)\n                     *pfMissingInputs = true;\n@@ -1232,6 +1239,18 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     return true;\n }\n \n+bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n+                        bool* pfMissingInputs, bool fOverrideMempoolLimit, bool fRejectAbsurdFee)\n+{\n+    std::vector<uint256> vHashTxToUncache;\n+    bool res = AcceptToMemoryPoolWorker(pool, state, tx, fLimitFree, pfMissingInputs, fOverrideMempoolLimit, fRejectAbsurdFee, vHashTxToUncache);\n+    if (!res) {\n+        BOOST_FOREACH(const uint256& hashTx, vHashTxToUncache)\n+            pcoinsTip->Uncache(hashTx);\n+    }\n+    return res;\n+}\n+\n /** Return transaction in tx, and if it was found inside a block, its hash is placed in hashBlock */\n bool GetTransaction(const uint256 &hash, CTransaction &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n {"
      }
    ]
  },
  {
    "sha": "dd5862c4cdc02535948042fe519694166bcd2bb7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDU4NjJjNGNkYzAyNTM1OTQ4MDQyZmU1MTk2OTQxNjZiY2QyYmI3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-26T03:22:07Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-12-01T23:52:09Z"
      },
      "message": "Flush coins cache also after transaction processing",
      "tree": {
        "sha": "82bde8fe54a7a09488dd4653a6ba7efb096356cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82bde8fe54a7a09488dd4653a6ba7efb096356cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd5862c4cdc02535948042fe519694166bcd2bb7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd5862c4cdc02535948042fe519694166bcd2bb7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd5862c4cdc02535948042fe519694166bcd2bb7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd5862c4cdc02535948042fe519694166bcd2bb7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bde953e2818ecf44727da128c2aa2ec7667cf7e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bde953e2818ecf44727da128c2aa2ec7667cf7e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bde953e2818ecf44727da128c2aa2ec7667cf7e7"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c41dd58d118e41b8c55e3d74f586f85b39e236e6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd5862c4cdc02535948042fe519694166bcd2bb7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd5862c4cdc02535948042fe519694166bcd2bb7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dd5862c4cdc02535948042fe519694166bcd2bb7",
        "patch": "@@ -4830,6 +4830,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             if (nDoS > 0)\n                 Misbehaving(pfrom->GetId(), nDoS);\n         }\n+        FlushStateToDisk(state, FLUSH_STATE_PERIODIC);\n     }\n \n "
      }
    ]
  }
]