sipa,2015-10-26T03:24:52Z,Do you feel like pulling in https://github.com/sipa/bitcoin/commit/4186ac95f8283206874af50f9754e894823df66d ?\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151013314,151013314,
TheBlueMatt,2015-10-26T05:03:16Z,https://github.com/sipa/bitcoin/commit/4186ac95f8283206874af50f9754e894823df66d seems pretty nasty to me....completely clearing the cache when we add a transaction that pushes our cache over 90% usage seems like a really bad idea.\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151026142,151026142,
sipa,2015-10-26T05:08:49Z,"@TheBlueMatt it's a last resort. If the cache size can grow outside of its\nset bounds, we have to do something or there is no limit. Furthermore, it's\nthe same as what will happen anyway after the next block.\n\nI considered it unacceptable on its own, as it would makr transaction\nspamming result in more or less synchronized wiping of the cache across the\nnetwork, which could interfere with re",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151026525,151026525,
TheBlueMatt,2015-10-26T05:10:16Z,Wiping the cache sounds like a dirty hack to me. I'd rather evict random elements until the cache is reasonably-sized than that.\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151026635,151026635,
TheBlueMatt,2015-10-26T05:11:00Z,"Also, we should fix it to not dump the entire cache after each new block.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151026688,151026688,
sipa,2015-10-26T05:13:27Z,"That, or some for of LRU or priority tracking in the coin cache would be a\nsignificant improvement for sure.\n\nBut we need a means to limit memory usage at all costs IMHO, and this\nsolution is simple and doesn't worsen things on average, I think, as the\ncache would be flushed anyway at the next block - potentially even in\nbetween blocks in a reorg if the usage passed 100% by that time.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151026879,151026879,
TheBlueMatt,2015-10-26T05:15:13Z,"Sure, making the cache smarter would be nice, but lets not rush to fix it with a dirty hack when we're not even gonna ship the fix for a few months anyway.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151027027,151027027,
sipa,2015-10-26T05:17:47Z,"It's orthogonal. We need to enforce memory usage limits after each\ntransaction, so let's call the function to do that at that time.\n\nHow that function works is a different matter, and can be arbitrarily\nimproved later.\n\nI don't understand your resistance here. I think it's the only solution.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151027242,151027242,
morcos,2015-10-26T13:49:26Z,"Have you guys looked into how expensive all this work is?\n\n@sipa Once we've made it so that you can't bloat memory usage with txs that aren't accepted (as accomplished by this pull) then it seems to me the right approach is to just set your maxmempool size low enough that the unknown and variable multiple of that that is the size of your cache is also small enough for you.  IMHO, the default dbc",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151139005,151139005,
TheBlueMatt,2015-10-27T00:31:39Z,"Sure, if the eventual solution is to tweak FlushStateToDisk to be\nsmarter (LRU or some priority metric based on what's in mempool), then\nthat would be reasonable. I am, however, worried we'd merge it and\nforget to tweak the coins cache, making it even easier (maybe, though\nmaybe there are easier ways anyway) for an attacker to cause lots of\nrandom disk I/O.\n\nOn 10/26/15 05:17, Pieter Wuille",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151324479,151324479,
sipa,2015-10-27T00:34:10Z,I don't think it's worse than what we have. The cache will already be flushed on the next block.\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151324896,151324896,
TheBlueMatt,2015-10-27T00:38:51Z,"Depends on which you find worse, memory usage or DB I/O. Because its easy to optimize for loading lots of crap into the cache, an attacker can obviously tickle the cache to make it do more DB I/O with https://github.com/sipa/bitcoin/commit/4186ac95f8283206874af50f9754e894823df66d, but can cause an equivalent increase in memory usage without.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151326429,151326429,
sipa,2015-10-27T01:11:11Z,"I think we should move to a model of thinking where exceeding some reasonable but fixed memory limit is equivalent in badness to crashing. People need to be able to rely on the memory usage to remain bounded. So if it's a choice between more I/O and that, I think the first is far better.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151331090,151331090,
TheBlueMatt,2015-10-27T01:40:55Z,"I think thats a fine idea...except that we're so far away from it, it seems a bit premature to be optimizing for it now.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151339635,151339635,
dcousens,2015-10-27T03:15:21Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151360117,151360117,
sipa,2015-10-27T20:50:30Z,"Observation:\n\n```\n2015-10-27 20:49:07 dd310afee248d4699e462e5d3826e879cc19d1d2d34e9de0070811d1d5f6e64a from peer=15 was not accepted: rate limited free transaction (code 66)\n2015-10-27 20:49:07 ATMT increases coincache by 159 (to 614694) KiB\n```\n\nSo when ATMT rejects due to rate limiting, the coincache entries pulled in don't seem to be removed.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151639641,151639641,
sipa,2015-10-27T20:55:42Z,Observation:\n\n```\n2015-10-27 20:52:57 a94894230e8c647d11dc67c2f7d56e91913aab8c6b3f7257f36d2cea30ddfbeb from peer=5 was not accepted: non-mandatory-script-verify-flag (No error) (code 64)\n2015-10-27 20:52:57 ATMT increases coincache by 329 (to 991099) KiB\n```\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151640859,151640859,
sipa,2015-10-27T21:07:18Z,"My observations are likely explained by this patch not updating coinsCachedUsage, so the pcoinsTip->DynamicMemoryUsage() going off the charts.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151644381,151644381,
sipa,2015-10-27T21:29:04Z,"New observation:\n\n```\n2015-10-27 21:27:43 cd55b134090117cc7fbf4ad8d1039642f1dd63460daa27c59d1c0ae2aba3e582 from peer=14 was not accepted: mempool min fee not met, 15000 < 24788 (code 66)\n2015-10-27 21:27:43 ATMT decreases coincache by 105 (to 67916) KiB\n```\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-151650422,151650422,
sipa,2015-10-30T20:54:09Z,Tested ACK.\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-152648799,152648799,
morcos,2015-10-30T21:28:30Z,I'm a bit hesitant to merge this instead of a cleaner way of smart flushing and I'd still like to see some performance analysis.\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-152655551,152655551,
gmaxwell,2015-11-08T00:13:14Z,"Without this, my mining node with an elevated relay fee (and running mempool limiting) and default dbcache is at 4GB RES.  We do need to do more to control the size of the coins cache, if not precisely this change.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-154766772,154766772,
morcos,2015-11-09T21:40:45Z,"I did some benchmarking on this pull.  I built it on top of all the other improvements in #6976 except I tried it with and without the hot cache.  It caused a significant performance boost to ConnectBlock.  Unfortunately on my test days, 10/6 and 10/7 and using 100 M mempool and 200 M dbcache, the total cpu time shot up by over 10%.   This seems to be entirely due to the 15kb very low fee transact",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-155206819,155206819,
sipa,2015-11-28T13:23:15Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-160295897,160295897,
laanwj,2015-12-01T08:42:24Z,Still needs rebase\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-160895230,160895230,
TheBlueMatt,2015-12-01T09:19:59Z,"Yes, sorry, I thought the plan was to go forward with #6936 and skip this one entirely, but it seems there is some consensus to do this as an intermediate until #6936 is fully ready to replace it (probably 0.13). Will try to rebase this tomorrow.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-160904856,160904856,
TheBlueMatt,2015-12-01T10:22:52Z,"Rebased, squashed, pulled in https://github.com/sipa/bitcoin/commit/4186ac95f8283206874af50f9754e894823df66d for 0.12.\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-160926684,160926684,
MarcoFalke,2015-12-01T12:30:15Z,@TheBlueMatt Needs rebase. (Travis fail is unrelated:  #6540)\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-160954436,160954436,
TheBlueMatt,2015-12-02T00:03:47Z,Rebased. Again.\n,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-161136975,161136975,
laanwj,2015-12-02T09:19:58Z,"Merged this because I want to branch off 0.12 soon, ~~not happy it has no ACKs at all though~~ (oh it does, sorry @sipa). Would still be nice if some reviewers could poshumously ACK this \n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-161231702,161231702,
morcos,2015-12-02T14:53:24Z,"code review and tested for performance only ACK\n\n(I think most of us tested this before #5967 was merged, but I can't think why that should cause any problems)\n",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-161321685,161321685,
arielgabizon,2017-12-27T07:23:58Z,What was the justification for pulling in the flush commit? It seemed from the conversation that there was agreement of @TheBlueMatt  and @morcos  that it was not a good idea.,https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-354066853,354066853,
TheBlueMatt,2017-12-27T07:28:02Z,"It's important to limit cache at *some point* during normal operation, see gmaxwell's comment.\n\nOn December 27, 2017 8:24:06 AM GMT+01:00, Ariel <notifications@github.com> wrote:\n>What was the justification for pulling in the flush commit? It seemed\n>from the conversation that there was agreement of @TheBlueMatt  and\n>@morcos  that it was not a good idea.\n>\n>-- \n>You are receiving this bec",https://github.com/bitcoin/bitcoin/pull/6872#issuecomment-354067344,354067344,
sipa,2015-10-26T02:38:41Z,You can do slightly better:\n`if (it != cacheCoins.end() && (((it->second.flags & CCoinsCacheEntry::DIRTY) == 0) || ((it->second.flags & CCoinsCacheEntry::FRESH) && it->second.coins.IsPruned())))`\n\nThis will also allow removing entries that were created and spent entirely within a cache.\n,https://github.com/bitcoin/bitcoin/pull/6872#discussion_r42956177,42956177,src/coins.cpp
TheBlueMatt,2015-10-26T02:45:11Z,"Such an entry should probably be removed without a call to Uncache, no?\n",https://github.com/bitcoin/bitcoin/pull/6872#discussion_r42956355,42956355,src/coins.cpp
sipa,2015-10-26T02:46:51Z,"Uh, right, and it already is... never mind!\n",https://github.com/bitcoin/bitcoin/pull/6872#discussion_r42956411,42956411,src/coins.cpp
sipa,2015-10-26T02:51:00Z,"Even if HaveCoins returns false, the entry may have been pulled into the cache (the parent cache may have a pruned entry), so this probably works better outside of the else branch.\n",https://github.com/bitcoin/bitcoin/pull/6872#discussion_r42956567,42956567,src/main.cpp
sipa,2015-10-26T03:00:20Z,"If coinsUsage is larger than nCoinCacheUsage + limit, this results in an infinite loop?\n",https://github.com/bitcoin/bitcoin/pull/6872#discussion_r42956863,42956863,src/main.cpp
TheBlueMatt,2015-10-26T03:04:11Z,"Huh? I could have sworn I deleted the loop as it is too easy for an attacker to fuck with your mempool, even if it did work.\n",https://github.com/bitcoin/bitcoin/pull/6872#discussion_r42956959,42956959,src/main.cpp
sipa,2015-10-26T03:32:38Z,"Yeah, I think that loop and the link with coincache size should go away. The coincache size shouldn't exceed its own limit, and the mempool shouldn't exceed its own limit. We may want to move to a model where the size for both is set using a single limit, but that will require other changes elsewhere too.\n",https://github.com/bitcoin/bitcoin/pull/6872#discussion_r42957654,42957654,src/main.cpp
sdaftuar,2015-10-26T13:55:03Z,"If I understand correctly, then we might remove this transaction from the cache even though there may be in-mempool spends of it, right?  I think we want some kind of check like you have in `TrimToSize`, where you only uncache if there's nothing in the mempool that spends it.\n\n(Alternatively, if `HaveCoins` somehow reported whether any new caching happened, that might be helpful, but that seems ",https://github.com/bitcoin/bitcoin/pull/6872#discussion_r42995095,42995095,src/main.cpp
