davereikher,2019-08-08 12:37:15,"Woops, lint failed.. \nIs there an easy way to reproduce a Travis job locally? I'm a newb to Travis. I tried following https://stackoverflow.com/questions/21053657/how-to-run-travis-ci-locally/49019950 but I don't understand the instance field that is displayed in the Travis build logs (there is more than one instance there?)",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-519499953,519499953,
fanquake,2019-08-08 12:41:13,"@davereikher The linter is just complaining about [trailing whitespace](https://travis-ci.org/bitcoin/bitcoin/jobs/569314353):\n```bash\nThis diff appears to have added new lines with trailing whitespace.\n\nThe following changes were suspected:\n\ndiff --git a/src/test/descriptor_tests.cpp b/src/test/descriptor_tests.cpp\n\n@@ -55,0 +63 @@ std::string MaybeUseHInsteadOfApostrophy(std::str",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-519501230,519501230,
DrahtBot,2019-08-08 12:52:17,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-519504998,519504998,
davereikher,2019-08-08 12:54:23,"The `test/lint/lint-whitespace.sh` script finishes without errors locally. I would like to reproduce the Travis environment to avoid fixing and pushing multiple times. If not, I can just remove the trailing whitespace and try again.",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-519505652,519505652,
davereikher,2019-08-10 11:06:32,"> Concept ACK.\n> \n> `PolyMod` linkage changed, make it static?\n\nThanks! Done in commit 07c079a.",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-520140209,520140209,
davereikher,2019-08-13 09:05:56,Squashed commits.,https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-520753680,520753680,
meshcollider,2019-08-16 21:27:01,"I believe this will be a lot simpler change now if you use `GetDescriptorChecksum` from #15986\n\nConcept ACK anyhow",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-522156793,522156793,
davereikher,2019-08-19 07:38:50,"> I believe this will be a lot simpler change now if you use `GetDescriptorChecksum` from #15986\n> \n> Concept ACK anyhow\n\nGreat! Now that `GetDescriptorChecksum` is available I moved `DescriptorChecksum` and `PolyMod` back into the anonymous namespace and instead used `GetDescriptorChecksum` to calculate the checksum. This also introduces an indirect test to `GetDescriptorChecksum` and the",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-522451111,522451111,
fanquake,2019-08-19 07:41:09,@davereikher Travis tests can occasionally fail sporadically. I've rebooted the [two failing instances](https://travis-ci.org/bitcoin/bitcoin/builds/573642446) for you.,https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-522451751,522451751,
davereikher,2019-08-21 06:14:02,"> @davereikher Travis tests can occasionally fail sporadically. I've rebooted the [two failing instances](https://travis-ci.org/bitcoin/bitcoin/builds/573642446) for you.\n\n@fanquake Travis failed again, could you please reboot the failing instance [here](https://travis-ci.org/bitcoin/bitcoin/builds/574691201)?",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-523312809,523312809,
fanquake,2019-08-23 00:01:14,"@davereikher Thanks for sticking with this, nice first time contribution.",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-524122143,524122143,
davereikher,2019-08-23 15:51:49,Thanks a lot! I learned so much from just this small contribution and your reviews. Looking forward for more! :),https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-524366864,524366864,
practicalswift,2019-08-24 05:49:34,"@davereikher Very nice to have you onboard and thanks for this first contribution! Hope to see more contributions from you.\n\nIf you want to take on non-determinism in tests you might want to take a look at `contrib/devtools/test_deterministic_coverage.sh`.\n\nThe following unit tests are known to have non-deterministic line coverage:\n\nhttps://github.com/bitcoin/bitcoin/blob/3ca514ddb7725",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-524523035,524523035,
davereikher,2019-08-24 10:24:16,"> @davereikher Very nice to have you onboard and thanks for this first contribution! Hope to see more contributions from you.\n> \n> If you want to take on non-determinism in tests you might want to take a look at `contrib/devtools/test_deterministic_coverage.sh`.\n> \n> The following unit tests are known to have non-deterministic line coverage:\n> \n> https://github.com/bitcoin/bitcoin/blob",https://github.com/bitcoin/bitcoin/pull/16570#issuecomment-524539387,524539387,
achow101,2019-08-08 18:06:38,This comment shouldn't be moved.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312172302,312172302,src/script/descriptor.cpp
achow101,2019-08-08 18:06:56,Unnecessary whitespace change.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312172435,312172435,src/test/descriptor_tests.cpp
achow101,2019-08-08 18:14:53,I think it would make more sense to largely leave this function untouched and instead do the `'` to `h` change in your new `Check` function below. The only change here would be to remove `MaybeUseHInsteadOfApostrophy`,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312176003,312176003,src/test/descriptor_tests.cpp
davereikher,2019-08-09 09:24:05,"I'm not sure I understand. It's not quite clear in the diff, but the `// Checksum` comment was not moved. It remains after `namespace {`. The only comment that was moved is the one above `PolyMod`, describing the operation of that function, along with the function.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312398066,312398066,src/script/descriptor.cpp
davereikher,2019-08-09 09:55:46,"I agree and I did it that way initially but then, for example, this check failed:\n```\nstd::string pub1 = parse_priv->ToString();\nBOOST_CHECK(EqualDescriptor(pub, pub1));\n```\nsince Descriptor::ToString returns a descriptor formatted with `'`, while pub has `h`, if I do it the way you suggest. I had to work around this by passing pub and prv without modification and introducing a boolean a",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312409702,312409702,src/test/descriptor_tests.cpp
davereikher,2019-08-09 10:44:55,"Thanks, fixed in commit d3e2d08a3be92cecb50c89c69871e61e0618e10b.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312425303,312425303,src/test/descriptor_tests.cpp
MarcoFalke,2019-08-09 12:16:11,"In other words: The function does not need to move, only the `namespace {`",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312451973,312451973,src/script/descriptor.cpp
davereikher,2019-08-09 13:24:55,"Thanks, fixed in commit 6819fbd741891081b2679e4b763bb88dc997ffe7. Is there a way to re-run AppVeyor? Looks like it timed out.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312477258,312477258,src/script/descriptor.cpp
MarcoFalke,2019-08-09 13:31:26,You can re-run the ci by squashing your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312479811,312479811,src/script/descriptor.cpp
davereikher,2019-08-09 15:05:10,"Ok, done in commit 0fc46f5b9262f016c42d2abe68d5125833f55416.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312523013,312523013,src/script/descriptor.cpp
achow101,2019-08-09 17:18:15,"This is actually backwards. When `replace_apostrophe_with_h` is false, we're swapping. I think it's supposed to be the other way around.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312574238,312574238,src/test/descriptor_tests.cpp
meshcollider,2019-08-10 02:38:13,"This will recalculate the checksum after every replacement, it would be better to just recalculate it at the end",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312687303,312687303,src/test/descriptor_tests.cpp
davereikher,2019-08-10 06:15:11,Thanks! Fixed in 9f9afcf1355e48d2b39ad9119415d658f5770ec5.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312692237,312692237,src/test/descriptor_tests.cpp
davereikher,2019-08-10 06:16:38,"Thanks, you're absolutely right. Fixed in a8f49b7d53d33aeba8bd0965c21878795b36f99b.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312692255,312692255,src/test/descriptor_tests.cpp
promag,2019-08-10 09:54:23,"nit, static function.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697760,312697760,src/test/descriptor_tests.cpp
promag,2019-08-10 09:55:55,IMO it would be fine to declare in `src/script/descriptor.h`,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697785,312697785,src/test/descriptor_tests.cpp
promag,2019-08-10 09:57:35,"nit, `if (it == std::string::npos) break;`",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697808,312697808,src/test/descriptor_tests.cpp
promag,2019-08-10 09:58:49,Add a comment like `/* replace_apostrophe_with_h = */ true` instead.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697838,312697838,src/test/descriptor_tests.cpp
promag,2019-08-10 09:59:15,"Use `std::string::find(char, ...)` like `find('\'')`.\n\nnit, `{` here.\n\nnit, remove unnecessary `( )`.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697846,312697846,src/test/descriptor_tests.cpp
promag,2019-08-10 09:59:32,nit `} else {`,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697853,312697853,src/test/descriptor_tests.cpp
promag,2019-08-10 09:59:42,"nit, `{` here",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312697854,312697854,src/test/descriptor_tests.cpp
davereikher,2019-08-10 10:29:10,"It's in an anonymous namespace, or am I missing something?",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312698441,312698441,src/test/descriptor_tests.cpp
davereikher,2019-08-10 10:59:08,Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699178,312699178,src/test/descriptor_tests.cpp
davereikher,2019-08-10 10:59:28,Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699189,312699189,src/test/descriptor_tests.cpp
davereikher,2019-08-10 10:59:49,Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699200,312699200,src/test/descriptor_tests.cpp
davereikher,2019-08-10 10:59:54,Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699204,312699204,src/test/descriptor_tests.cpp
davereikher,2019-08-10 11:03:48,"Done in commit 07c079a2fb49dca58a1d7e5e185a1cbc430381df. Also, applied the same change (`find(""'"")`->`find('\'')`) here:https://github.com/bitcoin/bitcoin/blob/07c079a2fb49dca58a1d7e5e185a1cbc430381df/src/test/descriptor_tests.cpp#L47",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699298,312699298,src/test/descriptor_tests.cpp
davereikher,2019-08-10 11:04:23,Done in commit 07c079a.,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r312699317,312699317,src/test/descriptor_tests.cpp
promag,2019-08-16 00:11:30,"True, sorry.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314544761,314544761,src/test/descriptor_tests.cpp
promag,2019-08-16 00:13:25,"But make it `std::string UseHInsteadOfApostrophe(const std::string& ret)`. ~~Also could avoid `ret` argument, sounds like it's an output/return argument.~~ (rename is unrelated here).",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314545091,314545091,src/test/descriptor_tests.cpp
davereikher,2019-08-16 11:44:54,"I believe that this line would fail should ret be made a const reference:\nhttps://github.com/bitcoin/bitcoin/blob/0b90954416767f6213094f1f282e708c3e8a710b/src/test/descriptor_tests.cpp#L50\nI guess I could change the signature to what you suggest and then assign `ret` to a local variable. Then there would still be a single copy operation so it's not less efficient or anything, but that would in",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r314686682,314686682,src/test/descriptor_tests.cpp
meshcollider,2019-08-20 03:19:56,nit: indentation,https://github.com/bitcoin/bitcoin/pull/16570#discussion_r315492398,315492398,src/test/descriptor_tests.cpp
meshcollider,2019-08-20 03:21:20,There is actually a test case which used to be covered which is no longer ever covered - the use of `h` in the pub and `'` in the prv and vice versa (because there was a 50% chance of each being changed independently),https://github.com/bitcoin/bitcoin/pull/16570#discussion_r315492595,315492595,src/test/descriptor_tests.cpp
davereikher,2019-08-21 05:30:24,"Thanks for your review. You are right, I completely missed this. I added code to cover all four test cases (no replacement, prv only, pub only and prv+pub) in b9ee63c71b751fd67da777774ea8c0b27e7db2f8.",https://github.com/bitcoin/bitcoin/pull/16570#discussion_r316003786,316003786,src/test/descriptor_tests.cpp
